set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999999964784743	WITHOUT_CLASSIFICATION	3.521525725710675E-9	DEFECT
line 335	WITHOUT_CLASSIFICATION	0.9999887613892142	WITHOUT_CLASSIFICATION	1.1238610785815816E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9998798534070868	WITHOUT_CLASSIFICATION	1.201465929132262E-4	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9998798534070868	WITHOUT_CLASSIFICATION	1.201465929132262E-4	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999573991419229	WITHOUT_CLASSIFICATION	4.260085807716061E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999573991419229	WITHOUT_CLASSIFICATION	4.260085807716061E-5	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998369103345013	WITHOUT_CLASSIFICATION	1.6308966549876064E-4	DEFECT
Figure end-char. '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999998982760382	WITHOUT_CLASSIFICATION	1.0172396184752555E-7	DEFECT
line 362	WITHOUT_CLASSIFICATION	0.9999869447609567	WITHOUT_CLASSIFICATION	1.3055239043309455E-5	DEFECT
line 372	WITHOUT_CLASSIFICATION	0.9999848121507449	WITHOUT_CLASSIFICATION	1.5187849255100052E-5	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9997292102668617	WITHOUT_CLASSIFICATION	2.707897331383389E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9997292102668617	WITHOUT_CLASSIFICATION	2.707897331383389E-4	DEFECT
line 391	WITHOUT_CLASSIFICATION	0.9999937804406818	WITHOUT_CLASSIFICATION	6.219559318214256E-6	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9994953409647399	WITHOUT_CLASSIFICATION	5.046590352601206E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9994953409647399	WITHOUT_CLASSIFICATION	5.046590352601206E-4	DEFECT
^D	WITHOUT_CLASSIFICATION	0.9998672863211908	WITHOUT_CLASSIFICATION	1.327136788092088E-4	DEFECT
^Z	WITHOUT_CLASSIFICATION	0.9998842187633249	WITHOUT_CLASSIFICATION	1.1578123667500817E-4	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999452661387743	WITHOUT_CLASSIFICATION	5.473386122563507E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999452661387743	WITHOUT_CLASSIFICATION	5.473386122563507E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999452661387743	WITHOUT_CLASSIFICATION	5.473386122563507E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999452661387743	WITHOUT_CLASSIFICATION	5.473386122563507E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999452661387743	WITHOUT_CLASSIFICATION	5.473386122563507E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999452661387743	WITHOUT_CLASSIFICATION	5.473386122563507E-5	DEFECT
yyLen 496	WITHOUT_CLASSIFICATION	0.9999452661387743	WITHOUT_CLASSIFICATION	5.473386122563507E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999827581471927	WITHOUT_CLASSIFICATION	1.7241852807345832E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999827581471927	WITHOUT_CLASSIFICATION	1.7241852807345832E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999827581471927	WITHOUT_CLASSIFICATION	1.7241852807345832E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999827581471927	WITHOUT_CLASSIFICATION	1.7241852807345832E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999827581471927	WITHOUT_CLASSIFICATION	1.7241852807345832E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999827581471927	WITHOUT_CLASSIFICATION	1.7241852807345832E-5	DEFECT
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999827581471927	WITHOUT_CLASSIFICATION	1.7241852807345832E-5	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998901186375976	WITHOUT_CLASSIFICATION	1.0988136240250225E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998901186375976	WITHOUT_CLASSIFICATION	1.0988136240250225E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998901186375976	WITHOUT_CLASSIFICATION	1.0988136240250225E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998901186375976	WITHOUT_CLASSIFICATION	1.0988136240250225E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998901186375976	WITHOUT_CLASSIFICATION	1.0988136240250225E-4	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998901186375976	WITHOUT_CLASSIFICATION	1.0988136240250225E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998947631616273	WITHOUT_CLASSIFICATION	1.0523683837263457E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998947631616273	WITHOUT_CLASSIFICATION	1.0523683837263457E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998947631616273	WITHOUT_CLASSIFICATION	1.0523683837263457E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998947631616273	WITHOUT_CLASSIFICATION	1.0523683837263457E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998947631616273	WITHOUT_CLASSIFICATION	1.0523683837263457E-4	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998947631616273	WITHOUT_CLASSIFICATION	1.0523683837263457E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998038466326491	WITHOUT_CLASSIFICATION	1.9615336735087467E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998038466326491	WITHOUT_CLASSIFICATION	1.9615336735087467E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998038466326491	WITHOUT_CLASSIFICATION	1.9615336735087467E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998038466326491	WITHOUT_CLASSIFICATION	1.9615336735087467E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998038466326491	WITHOUT_CLASSIFICATION	1.9615336735087467E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998038466326491	WITHOUT_CLASSIFICATION	1.9615336735087467E-4	DEFECT
yyRindex 889	WITHOUT_CLASSIFICATION	0.9998038466326491	WITHOUT_CLASSIFICATION	1.9615336735087467E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998712663809336	WITHOUT_CLASSIFICATION	1.287336190664449E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998712663809336	WITHOUT_CLASSIFICATION	1.287336190664449E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998712663809336	WITHOUT_CLASSIFICATION	1.287336190664449E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998712663809336	WITHOUT_CLASSIFICATION	1.287336190664449E-4	DEFECT
Do nothing	WITHOUT_CLASSIFICATION	0.9999986196672243	WITHOUT_CLASSIFICATION	1.3803327757787938E-6	DEFECT
Do nothing	WITHOUT_CLASSIFICATION	0.9999986196672243	WITHOUT_CLASSIFICATION	1.3803327757787938E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
return result	WITHOUT_CLASSIFICATION	0.9999974751965884	WITHOUT_CLASSIFICATION	2.5248034116057532E-6	DEFECT
name	WITHOUT_CLASSIFICATION	0.9999692589407586	WITHOUT_CLASSIFICATION	3.074105924134677E-5	DEFECT
Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.999999858531156	WITHOUT_CLASSIFICATION	1.4146884398046657E-7	DEFECT
Accessor methods.	WITHOUT_CLASSIFICATION	0.9999969714369251	WITHOUT_CLASSIFICATION	3.0285630748339994E-6	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9999869543429826	WITHOUT_CLASSIFICATION	1.3045657017494705E-5	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9999869543429826	WITHOUT_CLASSIFICATION	1.3045657017494705E-5	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9999869543429826	WITHOUT_CLASSIFICATION	1.3045657017494705E-5	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9999869543429826	WITHOUT_CLASSIFICATION	1.3045657017494705E-5	DEFECT
call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9998962496701689	WITHOUT_CLASSIFICATION	1.0375032983111502E-4	DEFECT
fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9998939805661441	WITHOUT_CLASSIFICATION	1.060194338559247E-4	DEFECT
try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999988082844254	WITHOUT_CLASSIFICATION	1.1917155746441598E-6	DEFECT
define ARGV and $ for this runtime	WITHOUT_CLASSIFICATION	0.9999958348945525	WITHOUT_CLASSIFICATION	4.165105447590308E-6	DEFECT
Version information:	WITHOUT_CLASSIFICATION	0.9999990583562658	WITHOUT_CLASSIFICATION	9.416437341413583E-7	DEFECT
after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999021867022148	WITHOUT_CLASSIFICATION	9.781329778521511E-5	DEFECT
ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999707356796782	WITHOUT_CLASSIFICATION	2.9264320321834276E-5	DEFECT
if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999686209853	WITHOUT_CLASSIFICATION	3.137901477519459E-8	DEFECT
On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.999999116808004	WITHOUT_CLASSIFICATION	8.831919960823498E-7	DEFECT
$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999177233991832	WITHOUT_CLASSIFICATION	8.227660081677824E-5	DEFECT
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999943150072504	WITHOUT_CLASSIFICATION	5.684992749559303E-6	DEFECT
MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999927751445955	WITHOUT_CLASSIFICATION	7.224855404511023E-6	DEFECT
this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998947658548977	WITHOUT_CLASSIFICATION	1.0523414510239091E-4	DEFECT
What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999999490000346	WITHOUT_CLASSIFICATION	5.099996538142131E-8	DEFECT
----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999778443622288	WITHOUT_CLASSIFICATION	2.2155637771273277E-5	DEFECT
CONSTANT TABLE METHODS - pass to delegate	WITHOUT_CLASSIFICATION	0.999992342171833	WITHOUT_CLASSIFICATION	7.657828167029266E-6	DEFECT
We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999813762504818	WITHOUT_CLASSIFICATION	1.8623749518169234E-5	DEFECT
MRI behavior	WITHOUT_CLASSIFICATION	0.9999869543429826	WITHOUT_CLASSIFICATION	1.3045657017494705E-5	DEFECT
----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999406553978426	WITHOUT_CLASSIFICATION	5.9344602157344806E-5	DEFECT
Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999985417253879	WITHOUT_CLASSIFICATION	1.4582746120587982E-6	DEFECT
----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999875150492353	WITHOUT_CLASSIFICATION	1.2484950764598222E-5	DEFECT
try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999858160546602	WITHOUT_CLASSIFICATION	1.4183945339807507E-5	DEFECT
otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9998190451897547	WITHOUT_CLASSIFICATION	1.8095481024534845E-4	DEFECT
Proc class	WITHOUT_CLASSIFICATION	0.9999940556955134	WITHOUT_CLASSIFICATION	5.944304486624126E-6	DEFECT
No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999999692842545	WITHOUT_CLASSIFICATION	3.0715745451230925E-8	DEFECT
modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999999541378208	WITHOUT_CLASSIFICATION	4.5862179140780745E-8	DEFECT
for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999998566381835	WITHOUT_CLASSIFICATION	1.4336181646582405E-7	DEFECT
case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;	WITHOUT_CLASSIFICATION	0.9962943493593815	WITHOUT_CLASSIFICATION	0.0037056506406184775	DEFECT
This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.999445191309341	WITHOUT_CLASSIFICATION	5.548086906590377E-4	DEFECT
rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999022426994114	WITHOUT_CLASSIFICATION	9.77573005886655E-5	DEFECT
NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999947852949478	WITHOUT_CLASSIFICATION	5.21470505220151E-6	DEFECT
registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.99999990220104	WITHOUT_CLASSIFICATION	9.779896007342136E-8	DEFECT
IOT is also 6	WITHOUT_CLASSIFICATION	0.9999872019991525	WITHOUT_CLASSIFICATION	1.2798000847395845E-5	DEFECT
CLD is also 20	WITHOUT_CLASSIFICATION	0.9999374092061513	WITHOUT_CLASSIFICATION	6.259079384876299E-5	DEFECT
RubySignal	WITHOUT_CLASSIFICATION	0.9999849858409521	WITHOUT_CLASSIFICATION	1.5014159047984812E-5	DEFECT
ZStream actually isn't allocatable	WITHOUT_CLASSIFICATION	0.9999871867654717	WITHOUT_CLASSIFICATION	1.2813234528344506E-5	DEFECT
MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999930539708712	WITHOUT_CLASSIFICATION	6.946029128857805E-6	DEFECT
it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999992128396195	WITHOUT_CLASSIFICATION	7.87160380639681E-7	DEFECT
MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.5560045921006636	WITHOUT_CLASSIFICATION	0.4439954078993365	DEFECT
SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999740685586582	WITHOUT_CLASSIFICATION	2.59314413417905E-5	DEFECT
By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999988085082235	WITHOUT_CLASSIFICATION	1.1914917765142542E-6	DEFECT
io.finish();	WITHOUT_CLASSIFICATION	0.9999435626170418	WITHOUT_CLASSIFICATION	5.643738295833859E-5	DEFECT
should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999758125674097	WITHOUT_CLASSIFICATION	2.4187432590340188E-5	DEFECT
hmm...	WITHOUT_CLASSIFICATION	0.9995456502847472	WITHOUT_CLASSIFICATION	4.5434971525285054E-4	DEFECT
Called before any write to make sure the header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999997021341087	WITHOUT_CLASSIFICATION	2.978658912294337E-7	DEFECT
For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999890945398803	WITHOUT_CLASSIFICATION	1.0905460119738188E-5	DEFECT
We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999986070255072	WITHOUT_CLASSIFICATION	1.392974492803994E-6	DEFECT
float number of seconds	WITHOUT_CLASSIFICATION	0.9999969619487598	WITHOUT_CLASSIFICATION	3.038051240284835E-6	DEFECT
modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999879595686342	WITHOUT_CLASSIFICATION	1.2040431365774076E-5	DEFECT
dump usec, not msec	WITHOUT_CLASSIFICATION	0.999996724518283	WITHOUT_CLASSIFICATION	3.2754817170666677E-6	DEFECT
Time class methods	WITHOUT_CLASSIFICATION	0.9999852017809882	WITHOUT_CLASSIFICATION	1.4798219011854892E-5	DEFECT
marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999926460800367	WITHOUT_CLASSIFICATION	7.353919963333537E-6	DEFECT
MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999277005737831	WITHOUT_CLASSIFICATION	7.22994262169068E-5	DEFECT
set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999986060428802	WITHOUT_CLASSIFICATION	1.3939571198212248E-6	DEFECT
the instant at which we will ask dtz what the difference between DST and standard time is	WITHOUT_CLASSIFICATION	0.9999993252869482	WITHOUT_CLASSIFICATION	6.747130517928697E-7	DEFECT
if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999976742278123	WITHOUT_CLASSIFICATION	2.32577218762041E-6	DEFECT
Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999999861150756	WITHOUT_CLASSIFICATION	1.388492442483956E-8	DEFECT
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9999901639223493	WITHOUT_CLASSIFICATION	9.8360776506533E-6	DEFECT
If the value will fit in a Fixnum, return one of those.	WITHOUT_CLASSIFICATION	0.9999950160113759	WITHOUT_CLASSIFICATION	4.983988624178907E-6	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999680937809813	WITHOUT_CLASSIFICATION	3.190621901872704E-5	DEFECT
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9991491761530504	WITHOUT_CLASSIFICATION	8.508238469496021E-4	DEFECT
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999753055900336	WITHOUT_CLASSIFICATION	2.469440996650955E-5	DEFECT
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999753055900336	WITHOUT_CLASSIFICATION	2.469440996650955E-5	DEFECT
no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999997317595308	WITHOUT_CLASSIFICATION	2.68240469186453E-7	DEFECT
wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999994527617132	WITHOUT_CLASSIFICATION	5.47238286857782E-7	DEFECT
Pad with a 0	WITHOUT_CLASSIFICATION	0.9999129914950404	WITHOUT_CLASSIFICATION	8.700850495948043E-5	DEFECT
BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9992549516708672	WITHOUT_CLASSIFICATION	7.450483291328888E-4	DEFECT
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.999995393365125	WITHOUT_CLASSIFICATION	4.606634875070018E-6	DEFECT
We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9997129189314433	WITHOUT_CLASSIFICATION	2.870810685566882E-4	DEFECT
???	WITHOUT_CLASSIFICATION	0.9998464916276271	WITHOUT_CLASSIFICATION	1.5350837237294618E-4	DEFECT
PID	WITHOUT_CLASSIFICATION	0.999868362442723	WITHOUT_CLASSIFICATION	1.3163755727706305E-4	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999680937809813	WITHOUT_CLASSIFICATION	3.190621901872704E-5	DEFECT
elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999977844847	WITHOUT_CLASSIFICATION	2.2155152999781536E-6	DEFECT
Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9994377840251082	WITHOUT_CLASSIFICATION	5.622159748918449E-4	DEFECT
volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999377847376	WITHOUT_CLASSIFICATION	6.221526237001609E-8	DEFECT
Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise	WITHOUT_CLASSIFICATION	0.9999999989915229	WITHOUT_CLASSIFICATION	1.0084770994044545E-9	DEFECT
rb_ary_new2 just allocates the internal array	WITHOUT_CLASSIFICATION	0.9999999922358749	WITHOUT_CLASSIFICATION	7.764125221166312E-9	DEFECT
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9999997239794778	WITHOUT_CLASSIFICATION	2.7602052221534356E-7	DEFECT
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9999997239794778	WITHOUT_CLASSIFICATION	2.7602052221534356E-7	DEFECT
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9999997239794778	WITHOUT_CLASSIFICATION	2.7602052221534356E-7	DEFECT
Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour	WITHOUT_CLASSIFICATION	0.9999987891041641	WITHOUT_CLASSIFICATION	1.2108958359058678E-6	DEFECT
NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace	WITHOUT_CLASSIFICATION	0.999999997146682	WITHOUT_CLASSIFICATION	2.853318028410418E-9	DEFECT
Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999995310593156	WITHOUT_CLASSIFICATION	4.68940684321312E-7	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.826909220373627	WITHOUT_CLASSIFICATION	0.17309077962637298	DEFECT
There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.	WITHOUT_CLASSIFICATION	0.9999892209613104	WITHOUT_CLASSIFICATION	1.0779038689580546E-5	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999606072343	WITHOUT_CLASSIFICATION	3.939276573073523E-8	DEFECT
possibly should not in object space	WITHOUT_CLASSIFICATION	0.9993113742756458	WITHOUT_CLASSIFICATION	6.886257243543339E-4	DEFECT
only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.99999917437062	WITHOUT_CLASSIFICATION	8.256293798977304E-7	DEFECT
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999691929839309	WITHOUT_CLASSIFICATION	3.080701606903546E-5	DEFECT
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999691929839309	WITHOUT_CLASSIFICATION	3.080701606903546E-5	DEFECT
from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999957748674794	WITHOUT_CLASSIFICATION	4.225132520672227E-6	DEFECT
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999988025569	WITHOUT_CLASSIFICATION	1.1974431797841363E-9	DEFECT
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999564666914367	WITHOUT_CLASSIFICATION	4.35333085633179E-5	DEFECT
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999564666914367	WITHOUT_CLASSIFICATION	4.35333085633179E-5	DEFECT
Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999955791425269	WITHOUT_CLASSIFICATION	4.4208574731070325E-6	DEFECT
pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999475166297	WITHOUT_CLASSIFICATION	5.2483370378695824E-8	DEFECT
root fiber	WITHOUT_CLASSIFICATION	0.9999983221123393	WITHOUT_CLASSIFICATION	1.6778876606904225E-6	DEFECT
GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.	WITHOUT_CLASSIFICATION	0.9999997391947367	WITHOUT_CLASSIFICATION	2.6080526327288414E-7	DEFECT
See http:www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999919023067133	WITHOUT_CLASSIFICATION	8.09769328663393E-6	DEFECT
extras flag	WITHOUT_CLASSIFICATION	0.9999900268227291	WITHOUT_CLASSIFICATION	9.97317727091545E-6	DEFECT
Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999561387827188	WITHOUT_CLASSIFICATION	4.386121728115162E-5	DEFECT
...nothing	WITHOUT_CLASSIFICATION	0.9997924421545388	WITHOUT_CLASSIFICATION	2.0755784546130592E-4	DEFECT
utility method	WITHOUT_CLASSIFICATION	0.9999921482981045	WITHOUT_CLASSIFICATION	7.851701895495757E-6	DEFECT
Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999955667908845	WITHOUT_CLASSIFICATION	4.433209115423868E-6	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999680937809813	WITHOUT_CLASSIFICATION	3.190621901872704E-5	DEFECT
flags 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999993117210478	WITHOUT_CLASSIFICATION	6.882789521793426E-7	DEFECT
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999997892406445	WITHOUT_CLASSIFICATION	2.1075935553697795E-7	DEFECT
1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999830342769475	WITHOUT_CLASSIFICATION	1.6965723052588402E-5	DEFECT
any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.668296033221424	WITHOUT_CLASSIFICATION	0.331703966778576	DEFECT
beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999699167003298	WITHOUT_CLASSIFICATION	3.0083299670296027E-5	DEFECT
MRI does it!	WITHOUT_CLASSIFICATION	0.9997695081177598	WITHOUT_CLASSIFICATION	2.3049188224022577E-4	DEFECT
won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999193700930211	WITHOUT_CLASSIFICATION	8.062990697879799E-5	DEFECT
it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9994736500569386	WITHOUT_CLASSIFICATION	5.263499430613472E-4	DEFECT
RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999930811987984	WITHOUT_CLASSIFICATION	6.918801201539094E-6	DEFECT
not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.999938341857519	WITHOUT_CLASSIFICATION	6.165814248097263E-5	DEFECT
second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999996888532414	WITHOUT_CLASSIFICATION	3.111467585384561E-7	DEFECT
we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999955146187659	WITHOUT_CLASSIFICATION	4.4853812341531365E-6	DEFECT
terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999988485020351	WITHOUT_CLASSIFICATION	1.1514979648102143E-6	DEFECT
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999993741079689	WITHOUT_CLASSIFICATION	6.258920309883689E-7	DEFECT
do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999992173184129	WITHOUT_CLASSIFICATION	7.826815870013997E-7	DEFECT
recheck condition	WITHOUT_CLASSIFICATION	0.9999869107514716	WITHOUT_CLASSIFICATION	1.3089248528398542E-5	DEFECT
Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999998815492988	WITHOUT_CLASSIFICATION	1.1845070130361309E-7	DEFECT
Construct key services	WITHOUT_CLASSIFICATION	0.9999999066522776	WITHOUT_CLASSIFICATION	9.334772235075471E-8	DEFECT
initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.999999548895602	WITHOUT_CLASSIFICATION	4.511043978662778E-7	DEFECT
Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999999960854511	WITHOUT_CLASSIFICATION	3.9145489405973966E-9	DEFECT
Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999953963982214	WITHOUT_CLASSIFICATION	4.603601778572551E-6	DEFECT
Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999997292749556	WITHOUT_CLASSIFICATION	2.707250444249925E-7	DEFECT
Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999998784550271	WITHOUT_CLASSIFICATION	1.2154497278833425E-7	DEFECT
Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999995588222232	WITHOUT_CLASSIFICATION	4.411777767080796E-7	DEFECT
Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999973552512242	WITHOUT_CLASSIFICATION	2.644748775762961E-6	DEFECT
Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.999987465395256	WITHOUT_CLASSIFICATION	1.2534604744001994E-5	DEFECT
depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999865039120198	WITHOUT_CLASSIFICATION	1.3496087980303524E-5	DEFECT
initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999995492059718	WITHOUT_CLASSIFICATION	4.507940282834828E-7	DEFECT
Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999981535216496	WITHOUT_CLASSIFICATION	1.8464783504494059E-6	DEFECT
Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999999288161132	WITHOUT_CLASSIFICATION	7.118388677133158E-8	DEFECT
we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9996587666746657	WITHOUT_CLASSIFICATION	3.412333253343503E-4	DEFECT
determine spacing	WITHOUT_CLASSIFICATION	0.9999994206864736	WITHOUT_CLASSIFICATION	5.793135264109053E-7	DEFECT
should alter global state	WITHOUT_CLASSIFICATION	0.999997322560791	WITHOUT_CLASSIFICATION	2.6774392089334162E-6	DEFECT
For JSR 223 support: see http:scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999368433778065	WITHOUT_CLASSIFICATION	6.315662219342535E-5	DEFECT
use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999983292890442	WITHOUT_CLASSIFICATION	1.6707109557657023E-6	DEFECT
this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999961370030764	WITHOUT_CLASSIFICATION	3.862996923644737E-6	DEFECT
new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984724228775	WITHOUT_CLASSIFICATION	1.527577122373061E-6	DEFECT
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999960334748031	WITHOUT_CLASSIFICATION	3.9665251969038015E-5	DEFECT
Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999999830922358	WITHOUT_CLASSIFICATION	1.6907764191470808E-8	DEFECT
default: don't retain	WITHOUT_CLASSIFICATION	0.9999741504509513	WITHOUT_CLASSIFICATION	2.584954904866135E-5	DEFECT
ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999319870311	WITHOUT_CLASSIFICATION	6.801296886669568E-8	DEFECT
Default objects	WITHOUT_CLASSIFICATION	0.999999840622467	WITHOUT_CLASSIFICATION	1.5937753289774577E-7	DEFECT
record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999999571480368	WITHOUT_CLASSIFICATION	4.285196317494547E-8	DEFECT
former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999998895834572	WITHOUT_CLASSIFICATION	1.1041654284298451E-7	DEFECT
Java support	WITHOUT_CLASSIFICATION	0.9999493131008023	WITHOUT_CLASSIFICATION	5.068689919763888E-5	DEFECT
Parser stats	WITHOUT_CLASSIFICATION	0.9999984433416667	WITHOUT_CLASSIFICATION	1.5566583332945835E-6	DEFECT
Compilation	WITHOUT_CLASSIFICATION	0.9999598397072529	WITHOUT_CLASSIFICATION	4.0160292747057784E-5	DEFECT
can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999996466877014	WITHOUT_CLASSIFICATION	3.5331229862857177E-7	DEFECT
can't create custom classloaders	WITHOUT_CLASSIFICATION	0.999993177478238	WITHOUT_CLASSIFICATION	6.822521762031612E-6	DEFECT
mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999999733248672	WITHOUT_CLASSIFICATION	2.6675132786500106E-8	DEFECT
mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999992587579958	WITHOUT_CLASSIFICATION	7.412420041807017E-7	DEFECT
A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999904778256963	WITHOUT_CLASSIFICATION	9.522174303769177E-6	DEFECT
A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999959177808929	WITHOUT_CLASSIFICATION	4.082219107026709E-6	DEFECT
initial spaces spaces before "at"	WITHOUT_CLASSIFICATION	0.9999990469594642	WITHOUT_CLASSIFICATION	9.530405358457794E-7	DEFECT
event name filename line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999944518086881	WITHOUT_CLASSIFICATION	5.548191311944198E-6	DEFECT
The method is intentionally not public, since it typically should not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999976922758638	WITHOUT_CLASSIFICATION	2.3077241361664795E-6	DEFECT
Note: this field and the following static initializer must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999995661404338	WITHOUT_CLASSIFICATION	4.3385956620507844E-7	DEFECT
Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999639913438502	WITHOUT_CLASSIFICATION	3.6008656149945654E-5	DEFECT
quoted-printable	WITHOUT_CLASSIFICATION	0.9999986000198521	WITHOUT_CLASSIFICATION	1.399980147889757E-6	DEFECT
default options	WITHOUT_CLASSIFICATION	0.9999999151607607	WITHOUT_CLASSIFICATION	8.483923929520856E-8	DEFECT
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9998762891530509	WITHOUT_CLASSIFICATION	1.237108469490504E-4	DEFECT
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9998762891530509	WITHOUT_CLASSIFICATION	1.237108469490504E-4	DEFECT
Shift_JIS	WITHOUT_CLASSIFICATION	0.9999670658726675	WITHOUT_CLASSIFICATION	3.29341273325413E-5	DEFECT
Shift_JIS	WITHOUT_CLASSIFICATION	0.9999670658726675	WITHOUT_CLASSIFICATION	3.29341273325413E-5	DEFECT
EUC-JP	WITHOUT_CLASSIFICATION	0.9999258956674023	WITHOUT_CLASSIFICATION	7.410433259776837E-5	DEFECT
EUC-JP	WITHOUT_CLASSIFICATION	0.9999258956674023	WITHOUT_CLASSIFICATION	7.410433259776837E-5	DEFECT
UTF-8	WITHOUT_CLASSIFICATION	0.9999498241922681	WITHOUT_CLASSIFICATION	5.017580773195292E-5	DEFECT
UTF-8	WITHOUT_CLASSIFICATION	0.9999498241922681	WITHOUT_CLASSIFICATION	5.017580773195292E-5	DEFECT
long name option	WITHOUT_CLASSIFICATION	0.9999947960600942	WITHOUT_CLASSIFICATION	5.20393990586581E-6	DEFECT
conversion	WITHOUT_CLASSIFICATION	0.9999990447563115	WITHOUT_CLASSIFICATION	9.552436884919147E-7	DEFECT
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9999777089890816	WITHOUT_CLASSIFICATION	2.2291010918435214E-5	DEFECT
string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999507789130581	WITHOUT_CLASSIFICATION	4.922108694192791E-5	DEFECT
string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999264045162285	WITHOUT_CLASSIFICATION	7.359548377151647E-5	DEFECT
string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9992199474244268	WITHOUT_CLASSIFICATION	7.800525755732959E-4	DEFECT
ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999209793780647	WITHOUT_CLASSIFICATION	7.902062193534819E-5	DEFECT
rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999949583329567	WITHOUT_CLASSIFICATION	5.041667043252728E-6	DEFECT
rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999968800217921	WITHOUT_CLASSIFICATION	3.119978207979311E-6	DEFECT
rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999953987672133	WITHOUT_CLASSIFICATION	4.601232786680605E-6	DEFECT
Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999999652497777	WITHOUT_CLASSIFICATION	3.475022219295459E-8	DEFECT
String construction routines by NOT byte[] buffer and NOT making the target String shared	WITHOUT_CLASSIFICATION	0.9999999825935272	WITHOUT_CLASSIFICATION	1.7406472792432885E-8	DEFECT
rb_str_subseq	WITHOUT_CLASSIFICATION	0.9999975524578953	WITHOUT_CLASSIFICATION	2.4475421047172E-6	DEFECT
no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999999613800286	WITHOUT_CLASSIFICATION	3.861997136476194E-8	DEFECT
if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999996909581337	WITHOUT_CLASSIFICATION	3.0904186632370345E-7	DEFECT
rb_str_cmp_m	WITHOUT_CLASSIFICATION	0.9999845093742028	WITHOUT_CLASSIFICATION	1.5490625797158467E-5	DEFECT
we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999990632681126	WITHOUT_CLASSIFICATION	9.367318874036481E-7	DEFECT
rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999877128185534	WITHOUT_CLASSIFICATION	1.2287181446585329E-5	DEFECT
encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999859306491637	WITHOUT_CLASSIFICATION	1.4069350836147623E-5	DEFECT
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9936240847645167	WITHOUT_CLASSIFICATION	0.006375915235483342	DEFECT
must not reallocate	WITHOUT_CLASSIFICATION	0.9999994476785878	WITHOUT_CLASSIFICATION	5.523214120830979E-7	DEFECT
Illegal combination	WITHOUT_CLASSIFICATION	0.9999989395208241	WITHOUT_CLASSIFICATION	1.060479175815817E-6	DEFECT
use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999941634182601	WITHOUT_CLASSIFICATION	5.836581739896019E-6	DEFECT
RubyString aka rb_string_value	WITHOUT_CLASSIFICATION	0.9999933969059952	WITHOUT_CLASSIFICATION	6.6030940047211005E-6	DEFECT
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9999988301835029	WITHOUT_CLASSIFICATION	1.16981649716699E-6	DEFECT
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.999999976704219	WITHOUT_CLASSIFICATION	2.3295780968412122E-8	DEFECT
len + margin	WITHOUT_CLASSIFICATION	0.9999959182335639	WITHOUT_CLASSIFICATION	4.081766436119799E-6	DEFECT
block given	WITHOUT_CLASSIFICATION	0.9999953561537288	WITHOUT_CLASSIFICATION	4.643846271172147E-6	DEFECT
block given	WITHOUT_CLASSIFICATION	0.9999953561537288	WITHOUT_CLASSIFICATION	4.643846271172147E-6	DEFECT
copy pre-match substr	WITHOUT_CLASSIFICATION	0.9999999483398956	WITHOUT_CLASSIFICATION	5.166010435309582E-8	DEFECT
string given	WITHOUT_CLASSIFICATION	0.999996707771578	WITHOUT_CLASSIFICATION	3.292228422120347E-6	DEFECT
hash given	WITHOUT_CLASSIFICATION	0.9999987667049166	WITHOUT_CLASSIFICATION	1.2332950834508083E-6	DEFECT
This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999430134736558	WITHOUT_CLASSIFICATION	5.698652634418584E-5	DEFECT
substring longer than string	WITHOUT_CLASSIFICATION	0.999996444944734	WITHOUT_CLASSIFICATION	3.5550552659077143E-6	DEFECT
rb_str_substr	WITHOUT_CLASSIFICATION	0.9999853278192922	WITHOUT_CLASSIFICATION	1.4672180707816211E-5	DEFECT
nothing	WITHOUT_CLASSIFICATION	0.9999594833139044	WITHOUT_CLASSIFICATION	4.0516686095636626E-5	DEFECT
nothing	WITHOUT_CLASSIFICATION	0.9999594833139044	WITHOUT_CLASSIFICATION	4.0516686095636626E-5	DEFECT
rb_str_splice	WITHOUT_CLASSIFICATION	0.9999990920343907	WITHOUT_CLASSIFICATION	9.079656092050332E-7	DEFECT
TODO: keep cr TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9989905778880089	WITHOUT_CLASSIFICATION	0.0010094221119910814	DEFECT
keep cr ?	WITHOUT_CLASSIFICATION	0.9999984811570779	WITHOUT_CLASSIFICATION	1.5188429221657896E-6	DEFECT
keep cr ?	WITHOUT_CLASSIFICATION	0.9999984811570779	WITHOUT_CLASSIFICATION	1.5188429221657896E-6	DEFECT
wrapped to \0...\0. search next valid char.	WITHOUT_CLASSIFICATION	0.9999974117283896	WITHOUT_CLASSIFICATION	2.588271610465664E-6	DEFECT
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9995091360863302	WITHOUT_CLASSIFICATION	4.908639136698217E-4	DEFECT
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9995091360863302	WITHOUT_CLASSIFICATION	4.908639136698217E-4	DEFECT
modified	WITHOUT_CLASSIFICATION	0.9999960066619004	WITHOUT_CLASSIFICATION	3.993338099592199E-6	DEFECT
modified	WITHOUT_CLASSIFICATION	0.9999960066619004	WITHOUT_CLASSIFICATION	3.993338099592199E-6	DEFECT
1.8	WITHOUT_CLASSIFICATION	0.9999224377354651	WITHOUT_CLASSIFICATION	7.75622645348962E-5	DEFECT
1.8	WITHOUT_CLASSIFICATION	0.9999224377354651	WITHOUT_CLASSIFICATION	7.75622645348962E-5	DEFECT
QTRUE	WITHOUT_CLASSIFICATION	0.9999520588321952	WITHOUT_CLASSIFICATION	4.794116780478028E-5	DEFECT
retrieve last replacer	WITHOUT_CLASSIFICATION	0.9999982506539536	WITHOUT_CLASSIFICATION	1.749346046432516E-6	DEFECT
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999997774223465	WITHOUT_CLASSIFICATION	2.2257765345928925E-7	DEFECT
long size bits in byte	WITHOUT_CLASSIFICATION	0.9999590041201598	WITHOUT_CLASSIFICATION	4.0995879840096196E-5	DEFECT
from encoding, special-casing ASCII to ASCII	WITHOUT_CLASSIFICATION	0.9999999638886153	WITHOUT_CLASSIFICATION	3.6111384756429884E-8	DEFECT
to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999996458675844	WITHOUT_CLASSIFICATION	3.5413241559710045E-7	DEFECT
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999922777072138	WITHOUT_CLASSIFICATION	7.722292786212843E-6	DEFECT
decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.99997929698831	WITHOUT_CLASSIFICATION	2.0703011689989032E-5	DEFECT
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999922777072138	WITHOUT_CLASSIFICATION	7.722292786212843E-6	DEFECT
Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999966376644311	WITHOUT_CLASSIFICATION	3.3623355687483467E-6	DEFECT
no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999983380317894	WITHOUT_CLASSIFICATION	1.661968210577963E-6	DEFECT
interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999997409498987	WITHOUT_CLASSIFICATION	2.5905010124833214E-7	DEFECT
File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999875242885999	WITHOUT_CLASSIFICATION	1.2475711400177182E-5	DEFECT
rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999998257453501	WITHOUT_CLASSIFICATION	1.7425464996497526E-7	DEFECT
We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9997309219717916	WITHOUT_CLASSIFICATION	2.690780282083936E-4	DEFECT
exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999923323888016	WITHOUT_CLASSIFICATION	7.667611198429019E-6	DEFECT
Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999985994593743	WITHOUT_CLASSIFICATION	1.40054062561055E-6	DEFECT
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999996423832394	WITHOUT_CLASSIFICATION	3.5761676059805485E-6	DEFECT
Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999984082014365	WITHOUT_CLASSIFICATION	1.591798563535235E-6	DEFECT
Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999990565174363	WITHOUT_CLASSIFICATION	9.434825637322854E-7	DEFECT
adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.999999256740247	WITHOUT_CLASSIFICATION	7.432597528695477E-7	DEFECT
file not given	WITHOUT_CLASSIFICATION	0.9999779808880644	WITHOUT_CLASSIFICATION	2.201911193562235E-5	DEFECT
string to eval	WITHOUT_CLASSIFICATION	0.9999995508517189	WITHOUT_CLASSIFICATION	4.4914828104950233E-7	DEFECT
binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999664618967958	WITHOUT_CLASSIFICATION	3.3538103204117036E-5	DEFECT
?g | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999124052924	WITHOUT_CLASSIFICATION	8.759470759202969E-8	DEFECT
bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999274381361718	WITHOUT_CLASSIFICATION	7.256186382818907E-5	DEFECT
Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999995041883072	WITHOUT_CLASSIFICATION	4.958116928262905E-7	DEFECT
Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999990908776762	WITHOUT_CLASSIFICATION	9.091223237341745E-7	DEFECT
No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999976179472669	WITHOUT_CLASSIFICATION	2.382052733126151E-6	DEFECT
without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.999758297669443	WITHOUT_CLASSIFICATION	2.4170233055694884E-4	DEFECT
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999995112079593	WITHOUT_CLASSIFICATION	4.887920407204508E-7	DEFECT
MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999875461342224	WITHOUT_CLASSIFICATION	1.2453865777706972E-5	DEFECT
MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.999987231033459	WITHOUT_CLASSIFICATION	1.2768966540944203E-5	DEFECT
?A | Time | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999995654660904	WITHOUT_CLASSIFICATION	4.3453390964082924E-7	DEFECT
?b | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999998694611152	WITHOUT_CLASSIFICATION	1.3053888479776703E-7	DEFECT
?c | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999926641645	WITHOUT_CLASSIFICATION	7.335835488410838E-9	DEFECT
?C | Time | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999999874431386	WITHOUT_CLASSIFICATION	1.2556861453251962E-8	DEFECT
?d | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999995466168532	WITHOUT_CLASSIFICATION	4.5338314676517974E-7	DEFECT
?e | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999996693260206	WITHOUT_CLASSIFICATION	3.3067397947194205E-7	DEFECT
?f | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999989033601555	WITHOUT_CLASSIFICATION	1.0966398444108414E-6	DEFECT
?G | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999599592456	WITHOUT_CLASSIFICATION	4.0040754276672495E-8	DEFECT
?k | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999434490265	WITHOUT_CLASSIFICATION	5.6550973445431905E-8	DEFECT
?M | Time | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999988975153871	WITHOUT_CLASSIFICATION	1.102484612881352E-6	DEFECT
?o | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999980652847553	WITHOUT_CLASSIFICATION	1.9347152446926E-6	DEFECT
?O | boolean | True if file1 exists and is owned by the caller's real uid	WITHOUT_CLASSIFICATION	0.9999996861544448	WITHOUT_CLASSIFICATION	3.138455552868654E-7	DEFECT
?p | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999995535419981	WITHOUT_CLASSIFICATION	4.4645800194143767E-7	DEFECT
?r | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999991126274163	WITHOUT_CLASSIFICATION	8.873725837957688E-7	DEFECT
?s | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999997798902215	WITHOUT_CLASSIFICATION	2.2010977863895228E-7	DEFECT
?S | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999986383840166	WITHOUT_CLASSIFICATION	1.3616159833513862E-6	DEFECT
?u | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999334072053	WITHOUT_CLASSIFICATION	6.659279476654849E-8	DEFECT
?x | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999963892533205	WITHOUT_CLASSIFICATION	3.610746679486723E-6	DEFECT
?X | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999996471878884	WITHOUT_CLASSIFICATION	3.5281211154483E-7	DEFECT
?z | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999992142245984	WITHOUT_CLASSIFICATION	7.85775401582442E-7	DEFECT
?= | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999371968147	WITHOUT_CLASSIFICATION	6.280318530658373E-8	DEFECT
?< | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999476516572	WITHOUT_CLASSIFICATION	5.234834283318925E-8	DEFECT
?> | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999999227204375	WITHOUT_CLASSIFICATION	7.727956250339496E-8	DEFECT
?- | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.999999395606122	WITHOUT_CLASSIFICATION	6.043938778890821E-7	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999977429572982	WITHOUT_CLASSIFICATION	2.2570427018704063E-6	DEFECT
Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999945715673407	WITHOUT_CLASSIFICATION	5.428432659239133E-6	DEFECT
init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999941253792931	WITHOUT_CLASSIFICATION	5.874620706906528E-6	DEFECT
if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.999999983047671	WITHOUT_CLASSIFICATION	1.69523290241022E-8	DEFECT
If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999035645572885	WITHOUT_CLASSIFICATION	9.643544271143523E-5	DEFECT
new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999998244542275	WITHOUT_CLASSIFICATION	1.7554577244028044E-7	DEFECT
set to default thread group	WITHOUT_CLASSIFICATION	0.9999999582197994	WITHOUT_CLASSIFICATION	4.1780200533820676E-8	DEFECT
set to default thread group	WITHOUT_CLASSIFICATION	0.9999999582197994	WITHOUT_CLASSIFICATION	4.1780200533820676E-8	DEFECT
JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999971306168096	WITHOUT_CLASSIFICATION	2.8693831903442298E-6	DEFECT
JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999966323501505	WITHOUT_CLASSIFICATION	3.367649849546426E-6	DEFECT
for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999977926498389	WITHOUT_CLASSIFICATION	2.207350161181134E-6	DEFECT
JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999975939897722	WITHOUT_CLASSIFICATION	2.40601022784976E-6	DEFECT
MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9997096744458601	WITHOUT_CLASSIFICATION	2.9032555413984704E-4	DEFECT
If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999989987004871	WITHOUT_CLASSIFICATION	1.0012995128192892E-6	DEFECT
We need this loop in order to be able to "unblock" the join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.999984093333022	WITHOUT_CLASSIFICATION	1.5906666978107625E-5	DEFECT
attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999999020960989	WITHOUT_CLASSIFICATION	9.790390117774118E-8	DEFECT
not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999977184661695	WITHOUT_CLASSIFICATION	2.281533830486102E-6	DEFECT
If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999996931578491	WITHOUT_CLASSIFICATION	3.0684215091021433E-7	DEFECT
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999990494919111	WITHOUT_CLASSIFICATION	9.505080887888147E-7	DEFECT
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999990494919111	WITHOUT_CLASSIFICATION	9.505080887888147E-7	DEFECT
ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...	WITHOUT_CLASSIFICATION	0.9999928174770955	WITHOUT_CLASSIFICATION	7.1825229045519024E-6	DEFECT
can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999896369677712	WITHOUT_CLASSIFICATION	1.0363032228843128E-5	DEFECT
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999024107292951	WITHOUT_CLASSIFICATION	9.758927070490302E-5	DEFECT
Create Constants class	WITHOUT_CLASSIFICATION	0.9999947202136262	WITHOUT_CLASSIFICATION	5.279786373803062E-6	DEFECT
Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999956215036523	WITHOUT_CLASSIFICATION	4.378496347629288E-6	DEFECT
Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999950245636	WITHOUT_CLASSIFICATION	4.975436400442087E-9	DEFECT
Create constants for flock	WITHOUT_CLASSIFICATION	0.9999982801621387	WITHOUT_CLASSIFICATION	1.7198378613846045E-6	DEFECT
File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999991441937607	WITHOUT_CLASSIFICATION	8.558062393146183E-7	DEFECT
Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999992116515359	WITHOUT_CLASSIFICATION	7.883484640319011E-7	DEFECT
null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999996501758314	WITHOUT_CLASSIFICATION	3.4982416861949525E-7	DEFECT
Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.999999517021004	WITHOUT_CLASSIFICATION	4.829789959751247E-7	DEFECT
Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999997431034073	WITHOUT_CLASSIFICATION	2.5689659273237704E-7	DEFECT
Return false here	WITHOUT_CLASSIFICATION	0.9999766754128941	WITHOUT_CLASSIFICATION	2.3324587105809402E-5	DEFECT
Return false here	WITHOUT_CLASSIFICATION	0.9999766754128941	WITHOUT_CLASSIFICATION	2.3324587105809402E-5	DEFECT
We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999951839051705	WITHOUT_CLASSIFICATION	4.816094829560014E-6	DEFECT
Should we do anything?	WITHOUT_CLASSIFICATION	0.9999616295202186	WITHOUT_CLASSIFICATION	3.837047978146041E-5	DEFECT
File class methods	WITHOUT_CLASSIFICATION	0.9999847017358752	WITHOUT_CLASSIFICATION	1.5298264124831068E-5	DEFECT
MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999936382972094	WITHOUT_CLASSIFICATION	6.361702790494605E-6	DEFECT
strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999990263881271	WITHOUT_CLASSIFICATION	9.736118728662442E-7	DEFECT
C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999968675008039	WITHOUT_CLASSIFICATION	3.132499196153959E-6	DEFECT
-1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999895355639924	WITHOUT_CLASSIFICATION	1.0464436007655539E-5	DEFECT
trim trailing slashes	WITHOUT_CLASSIFICATION	0.999997843322915	WITHOUT_CLASSIFICATION	2.1566770849455627E-6	DEFECT
Dot is not at beginning and not at end of filename.	WITHOUT_CLASSIFICATION	0.9999428562122877	WITHOUT_CLASSIFICATION	5.7143787712146174E-5	DEFECT
Handle ~user paths	WITHOUT_CLASSIFICATION	0.9999999554313715	WITHOUT_CLASSIFICATION	4.456862846828406E-8	DEFECT
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999024107292951	WITHOUT_CLASSIFICATION	9.758927070490302E-5	DEFECT
Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999759428044296	WITHOUT_CLASSIFICATION	2.4057195570381474E-5	DEFECT
FNFException can be thrown in both cases, when the file is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999993347335794	WITHOUT_CLASSIFICATION	6.652664207406265E-7	DEFECT
No directory delimeter. Rest of string is username	WITHOUT_CLASSIFICATION	0.999999926273449	WITHOUT_CLASSIFICATION	7.372655091551222E-8	DEFECT
If there's a second argument, it's the path to which the first argument is relative.	WITHOUT_CLASSIFICATION	0.9999999668920092	WITHOUT_CLASSIFICATION	3.3107990823730036E-8	DEFECT
Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999999776208264	WITHOUT_CLASSIFICATION	2.23791736393109E-8	DEFECT
If there's no second argument, simply use the working directory of the runtime.	WITHOUT_CLASSIFICATION	0.9999884228243783	WITHOUT_CLASSIFICATION	1.1577175621763454E-5	DEFECT
Find out which string to check.	WITHOUT_CLASSIFICATION	0.999999953491843	WITHOUT_CLASSIFICATION	4.650815695808884E-8	DEFECT
Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999911460365295	WITHOUT_CLASSIFICATION	8.853963470547762E-6	DEFECT
Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999970556084393	WITHOUT_CLASSIFICATION	2.9443915607857937E-6	DEFECT
'~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999964578968946	WITHOUT_CLASSIFICATION	3.5421031054062396E-6	DEFECT
'~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999814079707929	WITHOUT_CLASSIFICATION	1.859202920714341E-5	DEFECT
Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999951515395785	WITHOUT_CLASSIFICATION	4.848460421408082E-6	DEFECT
If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999982860551556	WITHOUT_CLASSIFICATION	1.7139448443339883E-6	DEFECT
no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9993892763263967	WITHOUT_CLASSIFICATION	6.107236736032532E-4	DEFECT
we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.99999370664259	WITHOUT_CLASSIFICATION	6.293357410003951E-6	DEFECT
we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999991882647026	WITHOUT_CLASSIFICATION	8.117352975167474E-7	DEFECT
do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999984157675841	WITHOUT_CLASSIFICATION	1.5842324158882868E-6	DEFECT
rb: check_modifiable	WITHOUT_CLASSIFICATION	0.999999681883983	WITHOUT_CLASSIFICATION	3.1811601702169034E-7	DEFECT
rb: readable	WITHOUT_CLASSIFICATION	0.9999768767485632	WITHOUT_CLASSIFICATION	2.3123251436827165E-5	DEFECT
rename is successful	WITHOUT_CLASSIFICATION	0.9999782931521006	WITHOUT_CLASSIFICATION	2.1706847899436665E-5	DEFECT
rename via Java API call wasn't successful, let's try some tricks, similar to MRI	WITHOUT_CLASSIFICATION	0.9993465084440574	WITHOUT_CLASSIFICATION	6.534915559425957E-4	DEFECT
try to rename one more time	WITHOUT_CLASSIFICATION	0.9999989834477155	WITHOUT_CLASSIFICATION	1.0165522844951766E-6	DEFECT
Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999804195621845	WITHOUT_CLASSIFICATION	1.958043781545255E-5	DEFECT
Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.999553580018643	WITHOUT_CLASSIFICATION	4.4641998135700617E-4	DEFECT
RubyContinuation	WITHOUT_CLASSIFICATION	0.9999639222931359	WITHOUT_CLASSIFICATION	3.607770686409708E-5	DEFECT
Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field	WITHOUT_CLASSIFICATION	0.9999999999624603	WITHOUT_CLASSIFICATION	3.7539660504118825E-11	DEFECT
16 ?	WITHOUT_CLASSIFICATION	0.999979835804901	WITHOUT_CLASSIFICATION	2.0164195099015406E-5	DEFECT
generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999990653806473	WITHOUT_CLASSIFICATION	9.346193527031269E-7	DEFECT
size + 1;	WITHOUT_CLASSIFICATION	0.999998198358502	WITHOUT_CLASSIFICATION	1.8016414979708676E-6	DEFECT
suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9996440838047711	WITHOUT_CLASSIFICATION	3.559161952289152E-4	DEFECT
------------------------------	WITHOUT_CLASSIFICATION	0.9996643103591519	WITHOUT_CLASSIFICATION	3.356896408481164E-4	DEFECT
------------------------------	WITHOUT_CLASSIFICATION	0.9996643103591519	WITHOUT_CLASSIFICATION	3.356896408481164E-4	DEFECT
put implementation	WITHOUT_CLASSIFICATION	0.9999884686537235	WITHOUT_CLASSIFICATION	1.153134627647607E-5	DEFECT
get implementation	WITHOUT_CLASSIFICATION	0.9999854675294725	WITHOUT_CLASSIFICATION	1.4532470527422012E-5	DEFECT
specialized for value	WITHOUT_CLASSIFICATION	0.9999998294268919	WITHOUT_CLASSIFICATION	1.7057310811320592E-7	DEFECT
delete implementation	WITHOUT_CLASSIFICATION	0.9999845346255922	WITHOUT_CLASSIFICATION	1.5465374407712175E-5	DEFECT
n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999987083871058	WITHOUT_CLASSIFICATION	1.2916128942952043E-6	DEFECT
============================ End of hash internals ============================	WITHOUT_CLASSIFICATION	0.9999990053804765	WITHOUT_CLASSIFICATION	9.946195235296609E-7	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999680937809813	WITHOUT_CLASSIFICATION	3.190621901872704E-5	DEFECT
update the hash value	WITHOUT_CLASSIFICATION	0.9999943461937044	WITHOUT_CLASSIFICATION	5.653806295614199E-6	DEFECT
other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999938162611302	WITHOUT_CLASSIFICATION	6.1837388699303395E-6	DEFECT
rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999953587064144	WITHOUT_CLASSIFICATION	4.641293585589307E-6	DEFECT
Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999932838816653	WITHOUT_CLASSIFICATION	6.716118334641981E-6	DEFECT
remain where we are	WITHOUT_CLASSIFICATION	0.9999995189010465	WITHOUT_CLASSIFICATION	4.810989534125377E-7	DEFECT
We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999876795596271	WITHOUT_CLASSIFICATION	1.2320440372929846E-5	DEFECT
default: don't retain	WITHOUT_CLASSIFICATION	0.9999741504509513	WITHOUT_CLASSIFICATION	2.584954904866135E-5	DEFECT
once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.999979044906881	WITHOUT_CLASSIFICATION	2.0955093118944618E-5	DEFECT
Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999984880793822	WITHOUT_CLASSIFICATION	1.5119206179099815E-6	DEFECT
We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999746195425253	WITHOUT_CLASSIFICATION	2.5380457474564816E-5	DEFECT
first try as directory	WITHOUT_CLASSIFICATION	0.999999895334374	WITHOUT_CLASSIFICATION	1.0466562607342042E-7	DEFECT
next as regular file	WITHOUT_CLASSIFICATION	0.9999992626374311	WITHOUT_CLASSIFICATION	7.373625688444337E-7	DEFECT
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9999884318041987	WITHOUT_CLASSIFICATION	1.1568195801247283E-5	DEFECT
NIO-based	WITHOUT_CLASSIFICATION	0.9999995044598022	WITHOUT_CLASSIFICATION	4.955401978030345E-7	DEFECT
NIO-based	WITHOUT_CLASSIFICATION	0.9999995044598022	WITHOUT_CLASSIFICATION	4.955401978030345E-7	DEFECT
Stream-based	WITHOUT_CLASSIFICATION	0.9999937281911809	WITHOUT_CLASSIFICATION	6.271808819139451E-6	DEFECT
special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999999903107483	WITHOUT_CLASSIFICATION	9.6892517495342E-9	DEFECT
We use FILE versus IO to match T_FILE in MRI.	WITHOUT_CLASSIFICATION	0.999990743632375	WITHOUT_CLASSIFICATION	9.256367625091926E-6	DEFECT
Constants for seek	WITHOUT_CLASSIFICATION	0.9999985857238094	WITHOUT_CLASSIFICATION	1.4142761905461084E-6	DEFECT
confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999661309348	WITHOUT_CLASSIFICATION	3.386906520568351E-8	DEFECT
check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999998591466245	WITHOUT_CLASSIFICATION	1.4085337548779916E-7	DEFECT
dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999997071309169	WITHOUT_CLASSIFICATION	2.9286908310037606E-7	DEFECT
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999298189789	WITHOUT_CLASSIFICATION	7.01810211144646E-8	DEFECT
re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999965948132007	WITHOUT_CLASSIFICATION	3.4051867991905105E-6	DEFECT
since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999999999382424	WITHOUT_CLASSIFICATION	6.175763634523141E-11	DEFECT
re-register	WITHOUT_CLASSIFICATION	0.9999887359967	WITHOUT_CLASSIFICATION	1.1264003299943558E-5	DEFECT
A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999530102142445	WITHOUT_CLASSIFICATION	4.698978575555004E-5	DEFECT
Ensure that separator is valid otherwise give it the default paragraph separator.	WITHOUT_CLASSIFICATION	0.9999999857867024	WITHOUT_CLASSIFICATION	1.42132975997556E-8	DEFECT
loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999942676772	WITHOUT_CLASSIFICATION	5.732322747466973E-9	DEFECT
if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999998892355059	WITHOUT_CLASSIFICATION	1.1076449404476372E-7	DEFECT
this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999672573902555	WITHOUT_CLASSIFICATION	3.2742609744446766E-5	DEFECT
IO class methods.	WITHOUT_CLASSIFICATION	0.9999888117595861	WITHOUT_CLASSIFICATION	1.1188240413835627E-5	DEFECT
use original modes	WITHOUT_CLASSIFICATION	0.9999979428508308	WITHOUT_CLASSIFICATION	2.0571491692436657E-6	DEFECT
See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999897988945663	WITHOUT_CLASSIFICATION	1.020110543362886E-5	DEFECT
redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999984861084761	WITHOUT_CLASSIFICATION	1.5138915239876157E-6	DEFECT
MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9998123677298747	WITHOUT_CLASSIFICATION	1.8763227012538245E-4	DEFECT
-1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999875606040819	WITHOUT_CLASSIFICATION	1.243939591809107E-5	DEFECT
isRetained=true	WITHOUT_CLASSIFICATION	0.9999986800692701	WITHOUT_CLASSIFICATION	1.3199307299334852E-6	DEFECT
This appears to be some windows-only mode. On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9637725730135104	WITHOUT_CLASSIFICATION	0.036227426986489626	DEFECT
if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999847539976291	WITHOUT_CLASSIFICATION	1.5246002370934455E-5	DEFECT
Throw bad file descriptor is we can not read on supplied descriptor.	WITHOUT_CLASSIFICATION	0.9999990379525323	WITHOUT_CLASSIFICATION	9.620474677200496E-7	DEFECT
Everything written	WITHOUT_CLASSIFICATION	0.9999918305377502	WITHOUT_CLASSIFICATION	8.169462249827218E-6	DEFECT
return len - n;	WITHOUT_CLASSIFICATION	0.9999881586070287	WITHOUT_CLASSIFICATION	1.1841392971303128E-5	DEFECT
Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999946445343161	WITHOUT_CLASSIFICATION	5.3554656838921924E-6	DEFECT
Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999976216289944	WITHOUT_CLASSIFICATION	2.3783710055616876E-6	DEFECT
Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999984352240048	WITHOUT_CLASSIFICATION	1.5647759953016518E-6	DEFECT
Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999947915291378	WITHOUT_CLASSIFICATION	5.208470862151816E-6	DEFECT
cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999976204379184	WITHOUT_CLASSIFICATION	2.3795620816191375E-6	DEFECT
hmmmm	WITHOUT_CLASSIFICATION	0.9998937005913041	WITHOUT_CLASSIFICATION	1.0629940869583498E-4	DEFECT
I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.999469630565108	WITHOUT_CLASSIFICATION	5.303694348920239E-4	DEFECT
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999880080685566	WITHOUT_CLASSIFICATION	1.1991931443400082E-5	DEFECT
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9975607703978175	WITHOUT_CLASSIFICATION	0.0024392296021823303	DEFECT
Length to read	WITHOUT_CLASSIFICATION	0.9999987142658514	WITHOUT_CLASSIFICATION	1.2857341485654074E-6	DEFECT
String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999974910580487	WITHOUT_CLASSIFICATION	2.5089419512664004E-6	DEFECT
cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999978615729042	WITHOUT_CLASSIFICATION	2.13842709581371E-6	DEFECT
select until read is ready	WITHOUT_CLASSIFICATION	0.9999910843084094	WITHOUT_CLASSIFICATION	8.915691590555747E-6	DEFECT
ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999888895514641	WITHOUT_CLASSIFICATION	1.1110448535910064E-5	DEFECT
buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999902334628133	WITHOUT_CLASSIFICATION	9.76653718655429E-6	DEFECT
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999967942154374	WITHOUT_CLASSIFICATION	3.205784562593853E-5	DEFECT
rb: writable	WITHOUT_CLASSIFICATION	0.9999567068243639	WITHOUT_CLASSIFICATION	4.329317563611221E-5	DEFECT
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999967942154374	WITHOUT_CLASSIFICATION	3.205784562593853E-5	DEFECT
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9807808169061321	WITHOUT_CLASSIFICATION	0.019219183093868022	DEFECT
TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9998142328276444	WITHOUT_CLASSIFICATION	1.857671723556936E-4	DEFECT
truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999976613734365	WITHOUT_CLASSIFICATION	2.338626563439463E-6	DEFECT
TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9348182326548612	WITHOUT_CLASSIFICATION	0.06518176734513889	DEFECT
class methods for IO	WITHOUT_CLASSIFICATION	0.9999922759361745	WITHOUT_CLASSIFICATION	7.724063825539891E-6	DEFECT
save blocking state	WITHOUT_CLASSIFICATION	0.9999997496599891	WITHOUT_CLASSIFICATION	2.503400110061161E-7	DEFECT
write	WITHOUT_CLASSIFICATION	0.9999926023554226	WITHOUT_CLASSIFICATION	7.397644577462421E-6	DEFECT
Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9996458844888807	WITHOUT_CLASSIFICATION	3.541155111192897E-4	DEFECT
make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999999886605659	WITHOUT_CLASSIFICATION	1.1339433992373018E-8	DEFECT
FIXME: process options	WITHOUT_CLASSIFICATION	0.9695780419646186	WITHOUT_CLASSIFICATION	0.03042195803538141	DEFECT
Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9900650793075669	WITHOUT_CLASSIFICATION	0.009934920692433019	DEFECT
NIO based pipe	WITHOUT_CLASSIFICATION	0.9999998776102583	WITHOUT_CLASSIFICATION	1.223897417153372E-7	DEFECT
not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999992765813956	WITHOUT_CLASSIFICATION	7.234186043702093E-7	DEFECT
raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999982497278971	WITHOUT_CLASSIFICATION	1.7502721029082605E-6	DEFECT
may need to handle ENC_CODERANGE_BROKEN	WITHOUT_CLASSIFICATION	0.9999997227891133	WITHOUT_CLASSIFICATION	2.7721088669993135E-7	DEFECT
TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.999770964861928	WITHOUT_CLASSIFICATION	2.2903513807213073E-4	DEFECT
If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999891499741016	WITHOUT_CLASSIFICATION	1.0850025898451868E-5	DEFECT
The class of this object	WITHOUT_CLASSIFICATION	0.9999505100976568	WITHOUT_CLASSIFICATION	4.948990234328902E-5	DEFECT
zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999847388576902	WITHOUT_CLASSIFICATION	1.5261142309772804E-5	DEFECT
objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999917113971043	WITHOUT_CLASSIFICATION	8.288602895712459E-6	DEFECT
JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999168045380803	WITHOUT_CLASSIFICATION	8.319546191980859E-5	DEFECT
rb_class_boot	WITHOUT_CLASSIFICATION	0.999974355362817	WITHOUT_CLASSIFICATION	2.564463718311972E-5	DEFECT
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9999890738808469	WITHOUT_CLASSIFICATION	1.0926119153167844E-5	DEFECT
1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999996212230754	WITHOUT_CLASSIFICATION	3.7877692449818827E-7	DEFECT
for interface impls	WITHOUT_CLASSIFICATION	0.999998826799919	WITHOUT_CLASSIFICATION	1.1732000809435194E-6	DEFECT
We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999703250879194	WITHOUT_CLASSIFICATION	2.9674912080566385E-5	DEFECT
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9999772703530275	WITHOUT_CLASSIFICATION	2.272964697249688E-5	DEFECT
can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999888163753843	WITHOUT_CLASSIFICATION	1.1183624615801474E-5	DEFECT
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999943150072504	WITHOUT_CLASSIFICATION	5.684992749559303E-6	DEFECT
Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999999687072523	WITHOUT_CLASSIFICATION	3.129274770883348E-8	DEFECT
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999587706121956	WITHOUT_CLASSIFICATION	4.1229387804289435E-5	DEFECT
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999199350025081	WITHOUT_CLASSIFICATION	8.006499749189072E-5	DEFECT
INSTANCE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9999602275172345	WITHOUT_CLASSIFICATION	3.9772482765439696E-5	DEFECT
Struct methods	WITHOUT_CLASSIFICATION	0.9999983927559233	WITHOUT_CLASSIFICATION	1.6072440767362945E-6	DEFECT
runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999753253526	WITHOUT_CLASSIFICATION	2.4674647385804397E-8	DEFECT
define access methods.	WITHOUT_CLASSIFICATION	0.9999984666021767	WITHOUT_CLASSIFICATION	1.5333978232663326E-6	DEFECT
if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.999999057284698	WITHOUT_CLASSIFICATION	9.427153019544663E-7	DEFECT
Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999999984415321	WITHOUT_CLASSIFICATION	1.5584678919043632E-8	DEFECT
For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999997329097984	WITHOUT_CLASSIFICATION	2.670902016694176E-7	DEFECT
OBJ_INFECT	WITHOUT_CLASSIFICATION	0.9999737043189638	WITHOUT_CLASSIFICATION	2.6295681036209643E-5	DEFECT
These call assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999907777014112	WITHOUT_CLASSIFICATION	9.222298588770429E-6	DEFECT
Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999997756784231	WITHOUT_CLASSIFICATION	2.2432157679835975E-7	DEFECT
@param nv number of times to cycle or -1 to cycle indefinitely	WITHOUT_CLASSIFICATION	0.9999999773374365	WITHOUT_CLASSIFICATION	2.2662563461393483E-8	DEFECT
Atomic ?	WITHOUT_CLASSIFICATION	0.999994578127059	WITHOUT_CLASSIFICATION	5.421872941000985E-6	DEFECT
Atomic ?	WITHOUT_CLASSIFICATION	0.999994578127059	WITHOUT_CLASSIFICATION	5.421872941000985E-6	DEFECT
MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999997939719028	WITHOUT_CLASSIFICATION	2.0602809720463734E-7	DEFECT
superClass may be null.	WITHOUT_CLASSIFICATION	0.9999888582875109	WITHOUT_CLASSIFICATION	1.1141712489029542E-5	DEFECT
Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9861346560164992	WITHOUT_CLASSIFICATION	0.013865343983500837	DEFECT
ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999987498339858	WITHOUT_CLASSIFICATION	1.2501660142343726E-6	DEFECT
ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.	WITHOUT_CLASSIFICATION	0.9999994023189354	WITHOUT_CLASSIFICATION	5.976810645743216E-7	DEFECT
update superclass reference	WITHOUT_CLASSIFICATION	0.9999941072883288	WITHOUT_CLASSIFICATION	5.892711671190869E-6	DEFECT
Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999973400150353	WITHOUT_CLASSIFICATION	2.65998496482153E-6	DEFECT
MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999996255512038	WITHOUT_CLASSIFICATION	3.7444879619818834E-7	DEFECT
we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.999999821747431	WITHOUT_CLASSIFICATION	1.7825256909326267E-7	DEFECT
module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.999999977690899	WITHOUT_CLASSIFICATION	2.2309101066595005E-8	DEFECT
See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999999932841827	WITHOUT_CLASSIFICATION	6.715817308898606E-9	DEFECT
We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999994006973396	WITHOUT_CLASSIFICATION	5.993026602912754E-7	DEFECT
we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9996351573778377	WITHOUT_CLASSIFICATION	3.648426221622523E-4	DEFECT
update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999994483253362	WITHOUT_CLASSIFICATION	5.516746638654958E-7	DEFECT
This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999857798036	WITHOUT_CLASSIFICATION	1.4220196435946147E-8	DEFECT
need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999999515413843	WITHOUT_CLASSIFICATION	4.8458615688023426E-8	DEFECT
superClazz = null;	WITHOUT_CLASSIFICATION	0.9999993074455809	WITHOUT_CLASSIFICATION	6.925544191879245E-7	DEFECT
reopen a java class	WITHOUT_CLASSIFICATION	0.9999887046868644	WITHOUT_CLASSIFICATION	1.12953131356357E-5	DEFECT
This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999966239895616	WITHOUT_CLASSIFICATION	3.3760104384431485E-6	DEFECT
reopen a java module	WITHOUT_CLASSIFICATION	0.9999955609805797	WITHOUT_CLASSIFICATION	4.4390194201883606E-6	DEFECT
FIXME warning	WITHOUT_CLASSIFICATION	0.5323551280541396	DEFECT	0.4676448719458604	WITHOUT_CLASSIFICATION
FIXME warning	WITHOUT_CLASSIFICATION	0.5323551280541396	DEFECT	0.4676448719458604	WITHOUT_CLASSIFICATION
a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999999942912762	WITHOUT_CLASSIFICATION	5.7087238454672915E-9	DEFECT
for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999987204972	WITHOUT_CLASSIFICATION	1.2795028283123466E-9	DEFECT
just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9980632896661764	WITHOUT_CLASSIFICATION	0.0019367103338236383	DEFECT
class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999887715093	WITHOUT_CLASSIFICATION	1.122849069928754E-8	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999962249466964	WITHOUT_CLASSIFICATION	3.7750533036191626E-6	DEFECT
MRI error message says Class, even though Module is ok	WITHOUT_CLASSIFICATION	0.999313285326114	WITHOUT_CLASSIFICATION	6.867146738859706E-4	DEFECT
scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999881575736347	WITHOUT_CLASSIFICATION	1.184242636533645E-5	DEFECT
Module class methods	WITHOUT_CLASSIFICATION	0.999991698703423	WITHOUT_CLASSIFICATION	8.301296577032798E-6	DEFECT
Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999999409910703	WITHOUT_CLASSIFICATION	5.900892973836825E-8	DEFECT
next in hierarchy is an included version of the module we're attempting, so we skip including it	WITHOUT_CLASSIFICATION	0.9999988179085453	WITHOUT_CLASSIFICATION	1.182091454821581E-6	DEFECT
if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999995036561534	WITHOUT_CLASSIFICATION	4.963438465428548E-7	DEFECT
build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999990884300445	WITHOUT_CLASSIFICATION	9.115699555075925E-7	DEFECT
if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999996654059636	WITHOUT_CLASSIFICATION	3.3459403640075496E-7	DEFECT
if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999930114293	WITHOUT_CLASSIFICATION	6.988570735695336E-9	DEFECT
CLASS VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9998625145820775	WITHOUT_CLASSIFICATION	1.3748541792246667E-4	DEFECT
CONSTANT RUBY METHODS	WITHOUT_CLASSIFICATION	0.9999434335689186	WITHOUT_CLASSIFICATION	5.656643108144901E-5	DEFECT
Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9996773435564289	WITHOUT_CLASSIFICATION	3.2265644357105326E-4	DEFECT
CLASS VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9999120166069639	WITHOUT_CLASSIFICATION	8.798339303607104E-5	DEFECT
Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999824404408892	WITHOUT_CLASSIFICATION	1.755955911079153E-5	DEFECT
not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9985557407425323	WITHOUT_CLASSIFICATION	0.0014442592574676054	DEFECT
Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999949499014185	WITHOUT_CLASSIFICATION	5.05009858161796E-6	DEFECT
if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.999995188793916	WITHOUT_CLASSIFICATION	4.811206084016631E-6	DEFECT
Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999112829048089	WITHOUT_CLASSIFICATION	8.871709519105964E-5	DEFECT
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999893014365014	WITHOUT_CLASSIFICATION	1.0698563498654213E-5	DEFECT
removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999392864144594	WITHOUT_CLASSIFICATION	6.0713585540603396E-5	DEFECT
we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999926679008249	WITHOUT_CLASSIFICATION	7.332099175174318E-6	DEFECT
reopen	WITHOUT_CLASSIFICATION	0.9999911986811977	WITHOUT_CLASSIFICATION	8.801318802283352E-6	DEFECT
ARGF methods	WITHOUT_CLASSIFICATION	0.9999835328323619	WITHOUT_CLASSIFICATION	1.6467167638221545E-5	DEFECT
data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9998982098793784	WITHOUT_CLASSIFICATION	1.0179012062158213E-4	DEFECT
one optional, one required args	WITHOUT_CLASSIFICATION	0.9999984843716946	WITHOUT_CLASSIFICATION	1.5156283054157363E-6	DEFECT
one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999547667765	WITHOUT_CLASSIFICATION	4.5233223485132754E-8	DEFECT
try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999993867628993	WITHOUT_CLASSIFICATION	6.132371007368122E-7	DEFECT
we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999759059783973	WITHOUT_CLASSIFICATION	2.4094021602755815E-5	DEFECT
Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999862903132147	WITHOUT_CLASSIFICATION	1.3709686785277537E-5	DEFECT
print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999991877915122	WITHOUT_CLASSIFICATION	8.122084879080588E-7	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999973353228817	WITHOUT_CLASSIFICATION	2.6646771181886777E-6	DEFECT
set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999630959958586	WITHOUT_CLASSIFICATION	3.690400414135882E-5	DEFECT
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999431613729977	WITHOUT_CLASSIFICATION	5.683862700236877E-5	DEFECT
no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999996951937213	WITHOUT_CLASSIFICATION	3.048062786748429E-7	DEFECT
Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999996632178962	WITHOUT_CLASSIFICATION	3.3678210381127395E-7	DEFECT
Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999997556322363	WITHOUT_CLASSIFICATION	2.4436776367833E-7	DEFECT
Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999976448819906	WITHOUT_CLASSIFICATION	2.3551180093712847E-6	DEFECT
ignore error	WITHOUT_CLASSIFICATION	0.9999985198180564	WITHOUT_CLASSIFICATION	1.4801819435467067E-6	DEFECT
COMMON CONSTANT / CVAR METHODS	WITHOUT_CLASSIFICATION	0.9999881651704982	WITHOUT_CLASSIFICATION	1.1834829501887714E-5	DEFECT
INTERNAL MODULE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9999423095276202	WITHOUT_CLASSIFICATION	5.7690472379829614E-5	DEFECT
LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module	WITHOUT_CLASSIFICATION	0.9999999885891969	WITHOUT_CLASSIFICATION	1.1410803129445514E-8	DEFECT
odd	WITHOUT_CLASSIFICATION	0.9998592852651524	WITHOUT_CLASSIFICATION	1.4071473484755643E-4	DEFECT
JRubyClient	WITHOUT_CLASSIFICATION	0.999963267848486	WITHOUT_CLASSIFICATION	3.673215151398019E-5	DEFECT
x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)	WITHOUT_CLASSIFICATION	0.9998709895791725	WITHOUT_CLASSIFICATION	1.290104208274029E-4	DEFECT
Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999040406003451	WITHOUT_CLASSIFICATION	9.595939965485417E-5	DEFECT
Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999985768056097	WITHOUT_CLASSIFICATION	1.4231943903965147E-6	DEFECT
r = x 2 y	WITHOUT_CLASSIFICATION	0.9999528015729816	WITHOUT_CLASSIFICATION	4.719842701842329E-5	DEFECT
0!	WITHOUT_CLASSIFICATION	0.9996799577622646	WITHOUT_CLASSIFICATION	3.2004223773543093E-4	DEFECT
1!	WITHOUT_CLASSIFICATION	0.9997805671948297	WITHOUT_CLASSIFICATION	2.1943280517030357E-4	DEFECT
2!	WITHOUT_CLASSIFICATION	0.9995936228761233	WITHOUT_CLASSIFICATION	4.0637712387668135E-4	DEFECT
3!	WITHOUT_CLASSIFICATION	0.9996318571715586	WITHOUT_CLASSIFICATION	3.681428284415144E-4	DEFECT
4!	WITHOUT_CLASSIFICATION	0.999671174323979	WITHOUT_CLASSIFICATION	3.288256760209225E-4	DEFECT
5!	WITHOUT_CLASSIFICATION	0.9995466457208796	WITHOUT_CLASSIFICATION	4.533542791204834E-4	DEFECT
6!	WITHOUT_CLASSIFICATION	0.9996651759945947	WITHOUT_CLASSIFICATION	3.3482400540529563E-4	DEFECT
7!	WITHOUT_CLASSIFICATION	0.9996914833582297	WITHOUT_CLASSIFICATION	3.0851664177034574E-4	DEFECT
8!	WITHOUT_CLASSIFICATION	0.9997344687395027	WITHOUT_CLASSIFICATION	2.6553126049733144E-4	DEFECT
9!	WITHOUT_CLASSIFICATION	0.9996810470736889	WITHOUT_CLASSIFICATION	3.189529263111712E-4	DEFECT
11!	WITHOUT_CLASSIFICATION	0.9998229176954697	WITHOUT_CLASSIFICATION	1.7708230453039787E-4	DEFECT
12!	WITHOUT_CLASSIFICATION	0.9996904773081241	WITHOUT_CLASSIFICATION	3.095226918758972E-4	DEFECT
13!	WITHOUT_CLASSIFICATION	0.999719861645518	WITHOUT_CLASSIFICATION	2.8013835448200064E-4	DEFECT
15!	WITHOUT_CLASSIFICATION	0.9996537420046071	WITHOUT_CLASSIFICATION	3.462579953928421E-4	DEFECT
16!	WITHOUT_CLASSIFICATION	0.9997429455722336	WITHOUT_CLASSIFICATION	2.5705442776639885E-4	DEFECT
17!	WITHOUT_CLASSIFICATION	0.999653576454377	WITHOUT_CLASSIFICATION	3.4642354562299687E-4	DEFECT
19!	WITHOUT_CLASSIFICATION	0.9997545053458888	WITHOUT_CLASSIFICATION	2.4549465411107235E-4	DEFECT
20!	WITHOUT_CLASSIFICATION	0.9994287607890804	WITHOUT_CLASSIFICATION	5.712392109197094E-4	DEFECT
21!	WITHOUT_CLASSIFICATION	0.9996890527842577	WITHOUT_CLASSIFICATION	3.1094721574223533E-4	DEFECT
Static constants	WITHOUT_CLASSIFICATION	0.9999998630679328	WITHOUT_CLASSIFICATION	1.3693206716193137E-7	DEFECT
Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999999518400119	WITHOUT_CLASSIFICATION	4.8159987999357425E-8	DEFECT
2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9998889608961938	WITHOUT_CLASSIFICATION	1.1103910380627471E-4	DEFECT
3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999989129634472	WITHOUT_CLASSIFICATION	1.0870365527525222E-6	DEFECT
MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9990930116797664	WITHOUT_CLASSIFICATION	9.069883202334971E-4	DEFECT
Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.999990902600838	WITHOUT_CLASSIFICATION	9.097399162013765E-6	DEFECT
Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999986362601095	WITHOUT_CLASSIFICATION	1.3637398904561806E-6	DEFECT
Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9927169833313473	WITHOUT_CLASSIFICATION	0.0072830166686527475	DEFECT
Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9999999606216612	WITHOUT_CLASSIFICATION	3.937833879996453E-8	DEFECT
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999996719422362	WITHOUT_CLASSIFICATION	3.2805776389577575E-7	DEFECT
TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.8878719082092476	WITHOUT_CLASSIFICATION	0.11212809179075245	DEFECT
integer division	WITHOUT_CLASSIFICATION	0.9999938096778799	WITHOUT_CLASSIFICATION	6.190322120166405E-6	DEFECT
MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.999995419261792	WITHOUT_CLASSIFICATION	4.5807382079754646E-6	DEFECT
rounding neccessary	WITHOUT_CLASSIFICATION	0.9999949303905912	WITHOUT_CLASSIFICATION	5.069609408873032E-6	DEFECT
rounding neccessary	WITHOUT_CLASSIFICATION	0.9999949303905912	WITHOUT_CLASSIFICATION	5.069609408873032E-6	DEFECT
Java and MRI definitions of divmod are different.	WITHOUT_CLASSIFICATION	0.999954494416393	WITHOUT_CLASSIFICATION	4.5505583606952016E-5	DEFECT
JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999877081698424	WITHOUT_CLASSIFICATION	1.2291830157535443E-5	DEFECT
shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999780736484	WITHOUT_CLASSIFICATION	2.1926351596122402E-8	DEFECT
...round to that digit	WITHOUT_CLASSIFICATION	0.9999726642410076	WITHOUT_CLASSIFICATION	2.7335758992449197E-5	DEFECT
...and shift the result back to the left (multiply by 10(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999965466315689	WITHOUT_CLASSIFICATION	3.453368431145466E-6	DEFECT
this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999570966227092	WITHOUT_CLASSIFICATION	4.290337729086006E-5	DEFECT
sign	WITHOUT_CLASSIFICATION	0.9999869848195866	WITHOUT_CLASSIFICATION	1.3015180413491944E-5	DEFECT
significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999989611376201	WITHOUT_CLASSIFICATION	1.038862379820085E-6	DEFECT
normalize the value	WITHOUT_CLASSIFICATION	0.9999997744140349	WITHOUT_CLASSIFICATION	2.2558596505864888E-7	DEFECT
base	WITHOUT_CLASSIFICATION	0.9999970505908289	WITHOUT_CLASSIFICATION	2.9494091710702504E-6	DEFECT
NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.999992276992833	WITHOUT_CLASSIFICATION	7.723007167100716E-6	DEFECT
just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999995344607057	WITHOUT_CLASSIFICATION	4.655392943174529E-7	DEFECT
eh?!	WITHOUT_CLASSIFICATION	0.9998831372732455	WITHOUT_CLASSIFICATION	1.1686272675445098E-4	DEFECT
Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999841395588055	WITHOUT_CLASSIFICATION	1.586044119450789E-5	DEFECT
General number and precision checking	WITHOUT_CLASSIFICATION	0.9999999107666844	WITHOUT_CLASSIFICATION	8.923331555262258E-8	DEFECT
the requested precision	WITHOUT_CLASSIFICATION	0.9999991417918472	WITHOUT_CLASSIFICATION	8.582081528005266E-7	DEFECT
Proc class	WITHOUT_CLASSIFICATION	0.9999940556955134	WITHOUT_CLASSIFICATION	5.944304486624126E-6	DEFECT
.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999284460337	WITHOUT_CLASSIFICATION	7.155396622968637E-8	DEFECT
even shift.. ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9942925322531939	WITHOUT_CLASSIFICATION	0.0057074677468061386	DEFECT
5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999498755341658	WITHOUT_CLASSIFICATION	5.01244658341341E-5	DEFECT
..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999985862210402	WITHOUT_CLASSIFICATION	1.4137789598997234E-6	DEFECT
Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.999988084382487	WITHOUT_CLASSIFICATION	1.191561751305041E-5	DEFECT
x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999836088658522	WITHOUT_CLASSIFICATION	1.6391134147789773E-5	DEFECT
for prec 15 root x0 must surely be OK return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999993658087657	WITHOUT_CLASSIFICATION	6.341912342969038E-7	DEFECT
Initial v - the reciprocal v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9999889472398863	WITHOUT_CLASSIFICATION	1.105276011370374E-5	DEFECT
Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.999999812916076	WITHOUT_CLASSIFICATION	1.8708392409862804E-7	DEFECT
assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999996150456398	WITHOUT_CLASSIFICATION	3.849543601339391E-7	DEFECT
The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999999883218501	WITHOUT_CLASSIFICATION	1.1678149916179347E-8	DEFECT
Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999995600880082	WITHOUT_CLASSIFICATION	4.399119919031986E-7	DEFECT
Next x e = d - x^2	WITHOUT_CLASSIFICATION	0.9998981483496788	WITHOUT_CLASSIFICATION	1.018516503212309E-4	DEFECT
x += ev ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999973992543093	WITHOUT_CLASSIFICATION	2.6007456906974176E-6	DEFECT
root x is ready!	WITHOUT_CLASSIFICATION	0.9998339539239557	WITHOUT_CLASSIFICATION	1.6604607604433854E-4	DEFECT
Next v g = 1 - 2xv	WITHOUT_CLASSIFICATION	0.9998904943275219	WITHOUT_CLASSIFICATION	1.0950567247807365E-4	DEFECT
v += gv ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999954166774758	WITHOUT_CLASSIFICATION	4.58332252421434E-6	DEFECT
RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9998618413005469	WITHOUT_CLASSIFICATION	1.381586994530696E-4	DEFECT
c: bind_eval	WITHOUT_CLASSIFICATION	0.999988780300375	WITHOUT_CLASSIFICATION	1.1219699625049421E-5	DEFECT
================ Module Methods ================	WITHOUT_CLASSIFICATION	0.9999923211837003	WITHOUT_CLASSIFICATION	7.678816299747173E-6	DEFECT
from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999988494481464	WITHOUT_CLASSIFICATION	1.1505518536405547E-6	DEFECT
This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999731245969157	WITHOUT_CLASSIFICATION	2.6875403084357954E-5	DEFECT
default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999993329331348	WITHOUT_CLASSIFICATION	6.670668651570501E-7	DEFECT
Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999693738104617	WITHOUT_CLASSIFICATION	3.062618953833317E-5	DEFECT
Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999686325701015	WITHOUT_CLASSIFICATION	3.136742989845461E-5	DEFECT
try the normal property first	WITHOUT_CLASSIFICATION	0.9999999040281412	WITHOUT_CLASSIFICATION	9.597185874176693E-8	DEFECT
verify it if it's there	WITHOUT_CLASSIFICATION	0.9999976712159095	WITHOUT_CLASSIFICATION	2.328784090544439E-6	DEFECT
verify it if it's there	WITHOUT_CLASSIFICATION	0.9999976712159095	WITHOUT_CLASSIFICATION	2.328784090544439E-6	DEFECT
try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9998350161675013	WITHOUT_CLASSIFICATION	1.649838324988002E-4	DEFECT
otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999874938817787	WITHOUT_CLASSIFICATION	1.2506118221451842E-5	DEFECT
We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999930631992231	WITHOUT_CLASSIFICATION	6.936800776923764E-6	DEFECT
consume the file name	WITHOUT_CLASSIFICATION	0.9999998492118832	WITHOUT_CLASSIFICATION	1.5078811679409427E-7	DEFECT
Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999984112997503	WITHOUT_CLASSIFICATION	1.5887002497291138E-6	DEFECT
try cwd first	WITHOUT_CLASSIFICATION	0.9999967844758109	WITHOUT_CLASSIFICATION	3.2155241890663616E-6	DEFECT
ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999999988373636	WITHOUT_CLASSIFICATION	1.1626364544484774E-9	DEFECT
KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999805996544799	WITHOUT_CLASSIFICATION	1.940034552006811E-5	DEFECT
@JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9996725737856983	WITHOUT_CLASSIFICATION	3.27426214301714E-4	DEFECT
@JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999018432030876	WITHOUT_CLASSIFICATION	9.815679691238882E-5	DEFECT
@JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998638782263791	WITHOUT_CLASSIFICATION	1.3612177362087258E-4	DEFECT
symbol string must be interned	WITHOUT_CLASSIFICATION	0.9999997863249597	WITHOUT_CLASSIFICATION	2.1367504032304982E-7	DEFECT
assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999728568942741	WITHOUT_CLASSIFICATION	2.7143105725909175E-5	DEFECT
Symbol class methods.	WITHOUT_CLASSIFICATION	0.9999915880099057	WITHOUT_CLASSIFICATION	8.411990094219345E-6	DEFECT
TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9955580984765884	WITHOUT_CLASSIFICATION	0.004441901523411636	DEFECT
This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999960845954604	WITHOUT_CLASSIFICATION	3.915404539618201E-6	DEFECT
we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999929729603522	WITHOUT_CLASSIFICATION	7.027039647839875E-6	DEFECT
must be power of 2!	WITHOUT_CLASSIFICATION	0.9999993879275243	WITHOUT_CLASSIFICATION	6.120724756210038E-7	DEFECT
note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999987964818728	WITHOUT_CLASSIFICATION	1.2035181272025245E-6	DEFECT
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999960334748031	WITHOUT_CLASSIFICATION	3.9665251969038015E-5	DEFECT
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999943768780034	WITHOUT_CLASSIFICATION	5.623121996613335E-6	DEFECT
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999943768780034	WITHOUT_CLASSIFICATION	5.623121996613335E-6	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999977920040746	WITHOUT_CLASSIFICATION	2.2079959253676854E-6	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999977920040746	WITHOUT_CLASSIFICATION	2.2079959253676854E-6	DEFECT
backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999654432157	WITHOUT_CLASSIFICATION	3.455678438819917E-8	DEFECT
Single node on list	WITHOUT_CLASSIFICATION	0.9999971917751717	WITHOUT_CLASSIFICATION	2.8082248283389956E-6	DEFECT
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999383647285808	WITHOUT_CLASSIFICATION	6.163527141914038E-5	DEFECT
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999986897974313	WITHOUT_CLASSIFICATION	1.3102025686499855E-6	DEFECT
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999997774223465	WITHOUT_CLASSIFICATION	2.2257765345928925E-7	DEFECT
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999996419671476	WITHOUT_CLASSIFICATION	3.580328523637619E-7	DEFECT
not so backwards-compatible here, but no one should have been calling this anyway.	WITHOUT_CLASSIFICATION	0.9863940425124631	WITHOUT_CLASSIFICATION	0.013605957487536846	DEFECT
Profile	WITHOUT_CLASSIFICATION	0.999995568291783	WITHOUT_CLASSIFICATION	4.43170821696491E-6	DEFECT
static private final String TRANSLIT = "translit";	WITHOUT_CLASSIFICATION	0.9999999911715624	WITHOUT_CLASSIFICATION	8.82843766515243E-9	DEFECT
treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.999789499649034	WITHOUT_CLASSIFICATION	2.105003509660622E-4	DEFECT
invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999983168539719	WITHOUT_CLASSIFICATION	1.683146028093552E-6	DEFECT
Methods of the Nil Class (nil_):	WITHOUT_CLASSIFICATION	0.9999927864664161	WITHOUT_CLASSIFICATION	7.213533583920637E-6	DEFECT
Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999998875076795	WITHOUT_CLASSIFICATION	1.124923204489632E-7	DEFECT
Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9998633398235889	WITHOUT_CLASSIFICATION	1.3666017641111917E-4	DEFECT
must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999998707201079	WITHOUT_CLASSIFICATION	1.2927989217514808E-7	DEFECT
reset the state	WITHOUT_CLASSIFICATION	0.999999759408534	WITHOUT_CLASSIFICATION	2.4059146599828416E-7	DEFECT
Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999999352802782	WITHOUT_CLASSIFICATION	6.47197218720879E-8	DEFECT
rb_match_busy	WITHOUT_CLASSIFICATION	0.9999936350760488	WITHOUT_CLASSIFICATION	6.3649239511964515E-6	DEFECT
str is frozen	WITHOUT_CLASSIFICATION	0.9999830384235158	WITHOUT_CLASSIFICATION	1.6961576484263543E-5	DEFECT
MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9995970551256965	WITHOUT_CLASSIFICATION	4.029448743035625E-4	DEFECT
JRubyServer	WITHOUT_CLASSIFICATION	0.9999305559341085	WITHOUT_CLASSIFICATION	6.944406589139425E-5	DEFECT
Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999999830616485	WITHOUT_CLASSIFICATION	1.6938351437698878E-8	DEFECT
boot the Object class	WITHOUT_CLASSIFICATION	0.9999941853671197	WITHOUT_CLASSIFICATION	5.8146328802803264E-6	DEFECT
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9999772703530275	WITHOUT_CLASSIFICATION	2.272964697249688E-5	DEFECT
update superclass reference	WITHOUT_CLASSIFICATION	0.9999941072883288	WITHOUT_CLASSIFICATION	5.892711671190869E-6	DEFECT
undo check	WITHOUT_CLASSIFICATION	0.9999999271185379	WITHOUT_CLASSIFICATION	7.288146212866698E-8	DEFECT
This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999911763242807	WITHOUT_CLASSIFICATION	8.823675719418279E-6	DEFECT
boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999972986837208	WITHOUT_CLASSIFICATION	2.701316279304574E-6	DEFECT
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9991346540068079	WITHOUT_CLASSIFICATION	8.653459931919797E-4	DEFECT
use parent's marshal	WITHOUT_CLASSIFICATION	0.9999933748726315	WITHOUT_CLASSIFICATION	6.625127368495821E-6	DEFECT
use parent's marshal	WITHOUT_CLASSIFICATION	0.9999933748726315	WITHOUT_CLASSIFICATION	6.625127368495821E-6	DEFECT
could be pulled down to RubyClass in future rb_class_boot	WITHOUT_CLASSIFICATION	0.9999978476823264	WITHOUT_CLASSIFICATION	2.1523176736530266E-6	DEFECT
remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999939465492853	WITHOUT_CLASSIFICATION	6.053450714765796E-6	DEFECT
add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.999999719551646	WITHOUT_CLASSIFICATION	2.804483540113286E-7	DEFECT
update all subclasses	WITHOUT_CLASSIFICATION	0.9999929300302451	WITHOUT_CLASSIFICATION	7.069969754908791E-6	DEFECT
fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999767248117893	WITHOUT_CLASSIFICATION	2.3275188210566256E-5	DEFECT
static initializing method	WITHOUT_CLASSIFICATION	0.999999557575778	WITHOUT_CLASSIFICATION	4.4242422205334336E-7	DEFECT
standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999996774956914	WITHOUT_CLASSIFICATION	3.225043086610921E-7	DEFECT
no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999999703867346	WITHOUT_CLASSIFICATION	2.9613265282249242E-8	DEFECT
non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999999617908233	WITHOUT_CLASSIFICATION	3.8209176625515956E-8	DEFECT
indices for temp values	WITHOUT_CLASSIFICATION	0.9999931919813135	WITHOUT_CLASSIFICATION	6.808018686441736E-6	DEFECT
self method name	WITHOUT_CLASSIFICATION	0.9999996578630829	WITHOUT_CLASSIFICATION	3.421369171630998E-7	DEFECT
the default allocator	WITHOUT_CLASSIFICATION	0.9999997037352626	WITHOUT_CLASSIFICATION	2.9626473745914454E-7	DEFECT
Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999998907517504	WITHOUT_CLASSIFICATION	1.0924824955565793E-7	DEFECT
do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999907314598848	WITHOUT_CLASSIFICATION	9.268540115176715E-6	DEFECT
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999994749950355	WITHOUT_CLASSIFICATION	5.250049644543713E-7	DEFECT
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9999777089890816	WITHOUT_CLASSIFICATION	2.2291010918435214E-5	DEFECT
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9994853644466544	WITHOUT_CLASSIFICATION	5.146355533455669E-4	DEFECT
Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999990351187155	WITHOUT_CLASSIFICATION	9.64881284503235E-7	DEFECT
MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999934715955688	WITHOUT_CLASSIFICATION	6.528404431164539E-6	DEFECT
NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999972702507264	WITHOUT_CLASSIFICATION	2.7297492734802014E-6	DEFECT
write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999993820453803	WITHOUT_CLASSIFICATION	6.179546196698069E-7	DEFECT
rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999955190823124	WITHOUT_CLASSIFICATION	4.480917687603404E-6	DEFECT
0x3fff_ffff -0x4000_0000	WITHOUT_CLASSIFICATION	0.9995749601914893	WITHOUT_CLASSIFICATION	4.250398085107163E-4	DEFECT
a gotcha	WITHOUT_CLASSIFICATION	0.999995078344485	WITHOUT_CLASSIFICATION	4.9216555149963894E-6	DEFECT
Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999888493191136	WITHOUT_CLASSIFICATION	1.1150680886303451E-5	DEFECT
A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999575746137015	WITHOUT_CLASSIFICATION	4.2425386298433E-5	DEFECT
Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999982970839862	WITHOUT_CLASSIFICATION	1.7029160137293875E-6	DEFECT
Java Doubles are 64 bit long:	WITHOUT_CLASSIFICATION	0.9999566202019899	WITHOUT_CLASSIFICATION	4.337979801011522E-5	DEFECT
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999994749950355	WITHOUT_CLASSIFICATION	5.250049644543713E-7	DEFECT
don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999884941181251	WITHOUT_CLASSIFICATION	1.1505881875015905E-5	DEFECT
Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999803958542348	WITHOUT_CLASSIFICATION	1.9604145765247248E-5	DEFECT
MRI behavior:	WITHOUT_CLASSIFICATION	0.9999732196505821	WITHOUT_CLASSIFICATION	2.6780349417923145E-5	DEFECT
Numeric.equal	WITHOUT_CLASSIFICATION	0.9999989830205354	WITHOUT_CLASSIFICATION	1.0169794645742411E-6	DEFECT
provider is not available	WITHOUT_CLASSIFICATION	0.9998330647004959	WITHOUT_CLASSIFICATION	1.669352995041286E-4	DEFECT
bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9986649787713283	WITHOUT_CLASSIFICATION	0.0013350212286716103	DEFECT
fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999797813661546	WITHOUT_CLASSIFICATION	2.021863384536807E-5	DEFECT
RubyDigest	WITHOUT_CLASSIFICATION	0.999989239129634	WITHOUT_CLASSIFICATION	1.0760870365927368E-5	DEFECT
ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9966003461753717	WITHOUT_CLASSIFICATION	0.0033996538246283633	DEFECT
synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999997037138126	WITHOUT_CLASSIFICATION	2.962861873487196E-7	DEFECT
we only add live threads	WITHOUT_CLASSIFICATION	0.9999990608705733	WITHOUT_CLASSIFICATION	9.391294266332678E-7	DEFECT
use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999996146532107	WITHOUT_CLASSIFICATION	3.853467892266559E-7	DEFECT
handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.999999983295723	WITHOUT_CLASSIFICATION	1.6704276955600363E-8	DEFECT
JRubyService	WITHOUT_CLASSIFICATION	0.9999711372714006	WITHOUT_CLASSIFICATION	2.8862728599310468E-5	DEFECT
while	WITHOUT_CLASSIFICATION	0.9999890111850277	WITHOUT_CLASSIFICATION	1.0988814972339043E-5	DEFECT
\OOO	WITHOUT_CLASSIFICATION	0.9999452610270477	WITHOUT_CLASSIFICATION	5.4738972952361815E-5	DEFECT
CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.	WITHOUT_CLASSIFICATION	0.9999995172843634	WITHOUT_CLASSIFICATION	4.827156364875018E-7	DEFECT
mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999995900603843	WITHOUT_CLASSIFICATION	4.0993961570581213E-7	DEFECT
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999986734364	WITHOUT_CLASSIFICATION	1.3265636702368671E-9	DEFECT
internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999996337787574	WITHOUT_CLASSIFICATION	3.6622124257247014E-7	DEFECT
silent ?	WITHOUT_CLASSIFICATION	0.9999996757086296	WITHOUT_CLASSIFICATION	3.242913704432026E-7	DEFECT
\xHH	WITHOUT_CLASSIFICATION	0.9997946069327364	WITHOUT_CLASSIFICATION	2.053930672635906E-4	DEFECT
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9997689140837026	WITHOUT_CLASSIFICATION	2.310859162974533E-4	DEFECT
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9998085424634178	WITHOUT_CLASSIFICATION	1.9145753658223954E-4	DEFECT
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9998211422816773	WITHOUT_CLASSIFICATION	1.7885771832273505E-4	DEFECT
\O, \OO, \OOO or backref	WITHOUT_CLASSIFICATION	0.9999906477800713	WITHOUT_CLASSIFICATION	9.352219928764293E-6	DEFECT
MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9998661971020013	WITHOUT_CLASSIFICATION	1.3380289799877474E-4	DEFECT
MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9997951902358981	WITHOUT_CLASSIFICATION	2.0480976410192471E-4	DEFECT
Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999169455623493	WITHOUT_CLASSIFICATION	8.305443765064894E-5	DEFECT
Surrogates	WITHOUT_CLASSIFICATION	0.9999991465782884	WITHOUT_CLASSIFICATION	8.534217116479549E-7	DEFECT
do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999955676572839	WITHOUT_CLASSIFICATION	4.432342716063203E-6	DEFECT
\0, \0O, \0OO	WITHOUT_CLASSIFICATION	0.9999510584943371	WITHOUT_CLASSIFICATION	4.89415056630415E-5	DEFECT
\xHH	WITHOUT_CLASSIFICATION	0.9997946069327364	WITHOUT_CLASSIFICATION	2.053930672635906E-4	DEFECT
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9998085424634178	WITHOUT_CLASSIFICATION	1.9145753658223954E-4	DEFECT
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9997689140837026	WITHOUT_CLASSIFICATION	2.310859162974533E-4	DEFECT
\\u{H HH HHH HHHH HHHHH HHHHHH ...}	WITHOUT_CLASSIFICATION	0.99920146929592	WITHOUT_CLASSIFICATION	7.985307040801075E-4	DEFECT
\\uHHHH	WITHOUT_CLASSIFICATION	0.9999157553281692	WITHOUT_CLASSIFICATION	8.424467183075822E-5	DEFECT
\p{Hiragana}	WITHOUT_CLASSIFICATION	0.99997505535149	WITHOUT_CLASSIFICATION	2.4944648510015745E-5	DEFECT
inner switch	WITHOUT_CLASSIFICATION	0.9999994833360452	WITHOUT_CLASSIFICATION	5.166639548765526E-7	DEFECT
newInstance here	WITHOUT_CLASSIFICATION	0.999986376155279	WITHOUT_CLASSIFICATION	1.3623844720994294E-5	DEFECT
rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999957462756273	WITHOUT_CLASSIFICATION	4.253724372757494E-6	DEFECT
rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999382670950391	WITHOUT_CLASSIFICATION	6.173290496090107E-5	DEFECT
rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999967153256	WITHOUT_CLASSIFICATION	3.2846744000891112E-6	DEFECT
rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9998417617204153	WITHOUT_CLASSIFICATION	1.5823827958465575E-4	DEFECT
rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999990095463261	WITHOUT_CLASSIFICATION	9.90453673851527E-7	DEFECT
rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999970449011952	WITHOUT_CLASSIFICATION	2.955098804818558E-6	DEFECT
JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9966485050122024	WITHOUT_CLASSIFICATION	0.0033514949877976904	DEFECT
rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999642216030323	WITHOUT_CLASSIFICATION	3.577839696760896E-5	DEFECT
option_to_str	WITHOUT_CLASSIFICATION	0.9999930026724054	WITHOUT_CLASSIFICATION	6.997327594585714E-6	DEFECT
Don't initialize with class Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.999966070005789	WITHOUT_CLASSIFICATION	3.392999421109392E-5	DEFECT
args should be before block	WITHOUT_CLASSIFICATION	0.9999879042442869	WITHOUT_CLASSIFICATION	1.2095755713247819E-5	DEFECT
args should be at end	WITHOUT_CLASSIFICATION	0.9991993717888608	WITHOUT_CLASSIFICATION	8.006282111391833E-4	DEFECT
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999955932434007	WITHOUT_CLASSIFICATION	4.406756599223222E-6	DEFECT
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999955932434007	WITHOUT_CLASSIFICATION	4.406756599223222E-6	DEFECT
skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999982567417545	WITHOUT_CLASSIFICATION	1.7432582455545507E-6	DEFECT
start a new populator	WITHOUT_CLASSIFICATION	0.9999999640156957	WITHOUT_CLASSIFICATION	3.598430440838509E-8	DEFECT
check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999999768666489	WITHOUT_CLASSIFICATION	2.3133351180337314E-8	DEFECT
add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999735320436813	WITHOUT_CLASSIFICATION	2.646795631863395E-5	DEFECT
no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.999994094929321	WITHOUT_CLASSIFICATION	5.905070678996467E-6	DEFECT
write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999934377195	WITHOUT_CLASSIFICATION	6.562280510140116E-9	DEFECT
single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999994860781463	WITHOUT_CLASSIFICATION	5.139218536936225E-7	DEFECT
multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999960624997221	WITHOUT_CLASSIFICATION	3.937500278005959E-6	DEFECT
declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999997671734326	WITHOUT_CLASSIFICATION	2.3282656736167273E-7	DEFECT
inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999995744860757	WITHOUT_CLASSIFICATION	4.255139244002703E-7	DEFECT
RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999767926627287	WITHOUT_CLASSIFICATION	2.3207337271247643E-5	DEFECT
}	WITHOUT_CLASSIFICATION	0.9999145255926309	WITHOUT_CLASSIFICATION	8.547440736906815E-5	DEFECT
fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999943757785834	WITHOUT_CLASSIFICATION	5.624221416578309E-6	DEFECT
refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999866766758754	WITHOUT_CLASSIFICATION	1.3323324124702524E-5	DEFECT
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999988180618631	WITHOUT_CLASSIFICATION	1.1819381369958703E-6	DEFECT
attribute set.	WITHOUT_CLASSIFICATION	0.9999995353456065	WITHOUT_CLASSIFICATION	4.6465439357093893E-7	DEFECT
element set	WITHOUT_CLASSIFICATION	0.9999981387680585	WITHOUT_CLASSIFICATION	1.8612319414005644E-6	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999768749199437	WITHOUT_CLASSIFICATION	2.3125080056360314E-5	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999768749199437	WITHOUT_CLASSIFICATION	2.3125080056360314E-5	DEFECT
colon3	WITHOUT_CLASSIFICATION	0.9999527699476096	WITHOUT_CLASSIFICATION	4.72300523904657E-5	DEFECT
Colon3	WITHOUT_CLASSIFICATION	0.9999259525837032	WITHOUT_CLASSIFICATION	7.40474162967135E-5	DEFECT
array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9997471709348502	WITHOUT_CLASSIFICATION	2.5282906514982676E-4	DEFECT
For b.foo	WITHOUT_CLASSIFICATION	0.9999978805216502	WITHOUT_CLASSIFICATION	2.119478349829541E-6	DEFECT
instance config for the script run	WITHOUT_CLASSIFICATION	0.9999983881695814	WITHOUT_CLASSIFICATION	1.6118304184816399E-6	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999768749199437	WITHOUT_CLASSIFICATION	2.3125080056360314E-5	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999768749199437	WITHOUT_CLASSIFICATION	2.3125080056360314E-5	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999998712858	WITHOUT_CLASSIFICATION	1.2871420050188894E-9	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999998712858	WITHOUT_CLASSIFICATION	1.2871420050188894E-9	DEFECT
RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999752210180712	WITHOUT_CLASSIFICATION	2.4778981928846744E-5	DEFECT
For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999897892412247	WITHOUT_CLASSIFICATION	1.021075877518315E-5	DEFECT
We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999206921003988	WITHOUT_CLASSIFICATION	7.930789960123277E-5	DEFECT
something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9993481832858464	WITHOUT_CLASSIFICATION	6.518167141537332E-4	DEFECT
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999940253312621	WITHOUT_CLASSIFICATION	5.974668737852461E-6	DEFECT
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999940253312621	WITHOUT_CLASSIFICATION	5.974668737852461E-6	DEFECT
do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999998919224301	WITHOUT_CLASSIFICATION	1.0807756999285988E-7	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999702627918244	WITHOUT_CLASSIFICATION	2.973720817559455E-5	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999971907054135	WITHOUT_CLASSIFICATION	2.8092945866174065E-6	DEFECT
never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999962712400213	WITHOUT_CLASSIFICATION	3.7287599787123764E-6	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999986849454	WITHOUT_CLASSIFICATION	1.3150545712141773E-9	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.999999897615534	WITHOUT_CLASSIFICATION	1.02384465989138E-7	DEFECT
If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999885381658113	WITHOUT_CLASSIFICATION	1.1461834188699739E-5	DEFECT
Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999945266106288	WITHOUT_CLASSIFICATION	5.4733893711987364E-6	DEFECT
Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999858259243646	WITHOUT_CLASSIFICATION	1.417407563534969E-5	DEFECT
no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999957689893	WITHOUT_CLASSIFICATION	4.231010702667027E-9	DEFECT
optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9985337765498651	WITHOUT_CLASSIFICATION	0.0014662234501349645	DEFECT
arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.999999510547483	WITHOUT_CLASSIFICATION	4.894525169955639E-7	DEFECT
no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.999996261331049	WITHOUT_CLASSIFICATION	3.7386689510982812E-6	DEFECT
set argv from main's args	WITHOUT_CLASSIFICATION	0.9999998153403805	WITHOUT_CLASSIFICATION	1.8465961946067502E-7	DEFECT
attribute set.	WITHOUT_CLASSIFICATION	0.9999995353456065	WITHOUT_CLASSIFICATION	4.6465439357093893E-7	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999768749199437	WITHOUT_CLASSIFICATION	2.3125080056360314E-5	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999998712858	WITHOUT_CLASSIFICATION	1.2871420050188894E-9	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.999999897615534	WITHOUT_CLASSIFICATION	1.02384465989138E-7	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999635285607735	WITHOUT_CLASSIFICATION	3.647143922644074E-5	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999635285607735	WITHOUT_CLASSIFICATION	3.647143922644074E-5	DEFECT
block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999995466526909	WITHOUT_CLASSIFICATION	4.53347309224726E-7	DEFECT
assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999965234675	WITHOUT_CLASSIFICATION	3.476532527592899E-9	DEFECT
in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999784159694	WITHOUT_CLASSIFICATION	2.158403060421585E-8	DEFECT
assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.999998197997087	WITHOUT_CLASSIFICATION	1.8020029130243748E-6	DEFECT
Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999968580974378	WITHOUT_CLASSIFICATION	3.141902562213874E-6	DEFECT
Experimental class reification support, to create real Java classes for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999982185521644	WITHOUT_CLASSIFICATION	1.7814478356265026E-6	DEFECT
This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999560259163812	WITHOUT_CLASSIFICATION	4.3974083618668226E-5	DEFECT
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999981091400237	WITHOUT_CLASSIFICATION	1.890859976253215E-6	DEFECT
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999286953711	WITHOUT_CLASSIFICATION	7.130462886167209E-8	DEFECT
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999999507812442	WITHOUT_CLASSIFICATION	4.921875584135943E-8	DEFECT
never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999952458829588	WITHOUT_CLASSIFICATION	4.754117041160341E-6	DEFECT
If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999631557972	WITHOUT_CLASSIFICATION	3.684420279730202E-8	DEFECT
JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999926695296273	WITHOUT_CLASSIFICATION	7.330470372620845E-6	DEFECT
element set	WITHOUT_CLASSIFICATION	0.9999981387680585	WITHOUT_CLASSIFICATION	1.8612319414005644E-6	DEFECT
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999998712858	WITHOUT_CLASSIFICATION	1.2871420050188894E-9	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999702627918244	WITHOUT_CLASSIFICATION	2.973720817559455E-5	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999971907054135	WITHOUT_CLASSIFICATION	2.8092945866174065E-6	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999971907054135	WITHOUT_CLASSIFICATION	2.8092945866174065E-6	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999986849454	WITHOUT_CLASSIFICATION	1.3150545712141773E-9	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.999999897615534	WITHOUT_CLASSIFICATION	1.02384465989138E-7	DEFECT
The name of the variable	WITHOUT_CLASSIFICATION	0.999999897615534	WITHOUT_CLASSIFICATION	1.02384465989138E-7	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999635285607735	WITHOUT_CLASSIFICATION	3.647143922644074E-5	DEFECT
Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999995311891633	WITHOUT_CLASSIFICATION	4.688108366616869E-7	DEFECT
assert !(value instanceof RubyArray) : "Not an array";	WITHOUT_CLASSIFICATION	0.9999950757285799	WITHOUT_CLASSIFICATION	4.924271419979731E-6	DEFECT
Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999989629825	WITHOUT_CLASSIFICATION	1.0370175233405792E-9	DEFECT
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999999637110635	WITHOUT_CLASSIFICATION	3.6288936557690755E-8	DEFECT
We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.999978057678718	WITHOUT_CLASSIFICATION	2.1942321282116448E-5	DEFECT
assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9993892936988296	WITHOUT_CLASSIFICATION	6.107063011704884E-4	DEFECT
add in reverse order	WITHOUT_CLASSIFICATION	0.999998594991351	WITHOUT_CLASSIFICATION	1.4050086490014535E-6	DEFECT
in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999996052143492	WITHOUT_CLASSIFICATION	3.9478565079479113E-7	DEFECT
ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999999982624667	WITHOUT_CLASSIFICATION	1.7375332941163512E-8	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999702627918244	WITHOUT_CLASSIFICATION	2.973720817559455E-5	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999971907054135	WITHOUT_CLASSIFICATION	2.8092945866174065E-6	DEFECT
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999971907054135	WITHOUT_CLASSIFICATION	2.8092945866174065E-6	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999986849454	WITHOUT_CLASSIFICATION	1.3150545712141773E-9	DEFECT
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999981091400237	WITHOUT_CLASSIFICATION	1.890859976253215E-6	DEFECT
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999999507812442	WITHOUT_CLASSIFICATION	4.921875584135943E-8	DEFECT
No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999910041490084	WITHOUT_CLASSIFICATION	8.995850991657043E-6	DEFECT
save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999974071338056	WITHOUT_CLASSIFICATION	2.5928661943714525E-6	DEFECT
For 'foo'	WITHOUT_CLASSIFICATION	0.9999954794801971	WITHOUT_CLASSIFICATION	4.520519802906097E-6	DEFECT
For 'foo'	WITHOUT_CLASSIFICATION	0.9999954794801971	WITHOUT_CLASSIFICATION	4.520519802906097E-6	DEFECT
admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999969875268985	WITHOUT_CLASSIFICATION	3.0124731016574785E-6	DEFECT
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.999991807766447	WITHOUT_CLASSIFICATION	8.192233553016533E-6	DEFECT
What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999994026784483	WITHOUT_CLASSIFICATION	5.973215516445724E-7	DEFECT
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999986530957589	WITHOUT_CLASSIFICATION	1.3469042411192065E-6	DEFECT
just rethrow	WITHOUT_CLASSIFICATION	0.9999993070074784	WITHOUT_CLASSIFICATION	6.929925214856955E-7	DEFECT
just rethrow	WITHOUT_CLASSIFICATION	0.9999993070074784	WITHOUT_CLASSIFICATION	6.929925214856955E-7	DEFECT
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999987678515682	WITHOUT_CLASSIFICATION	1.2321484318887432E-6	DEFECT
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999987678515682	WITHOUT_CLASSIFICATION	1.2321484318887432E-6	DEFECT
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999996169200519	WITHOUT_CLASSIFICATION	3.8307994806283336E-7	DEFECT
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999996169200519	WITHOUT_CLASSIFICATION	3.8307994806283336E-7	DEFECT
Execute rescue block	WITHOUT_CLASSIFICATION	0.9999966550245587	WITHOUT_CLASSIFICATION	3.3449754413450168E-6	DEFECT
If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999905037898088	WITHOUT_CLASSIFICATION	9.496210191119627E-6	DEFECT
index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999991585028994	WITHOUT_CLASSIFICATION	8.414971005790608E-7	DEFECT
only a marker interface	WITHOUT_CLASSIFICATION	0.9999837394375584	WITHOUT_CLASSIFICATION	1.6260562441619632E-5	DEFECT
don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999999013537864	WITHOUT_CLASSIFICATION	9.864621359646119E-8	DEFECT
pragmas	WITHOUT_CLASSIFICATION	0.9999974992298859	WITHOUT_CLASSIFICATION	2.5007701140481268E-6	DEFECT
The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999976897577002	WITHOUT_CLASSIFICATION	2.310242299745285E-6	DEFECT
We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999998568868139	WITHOUT_CLASSIFICATION	1.4311318612637134E-7	DEFECT
The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999982952944423	WITHOUT_CLASSIFICATION	1.7047055577529732E-6	DEFECT
The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999761139924754	WITHOUT_CLASSIFICATION	2.3886007524594183E-5	DEFECT
Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999990913448777	WITHOUT_CLASSIFICATION	9.086551221998796E-7	DEFECT
check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999988195288063	WITHOUT_CLASSIFICATION	1.180471193637848E-6	DEFECT
long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9997875429387464	WITHOUT_CLASSIFICATION	2.1245706125369237E-4	DEFECT
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999455320589555	WITHOUT_CLASSIFICATION	5.446794104440181E-5	DEFECT
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999455320589555	WITHOUT_CLASSIFICATION	5.446794104440181E-5	DEFECT
long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999927938444118	WITHOUT_CLASSIFICATION	7.206155588141337E-6	DEFECT
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999996419671476	WITHOUT_CLASSIFICATION	3.580328523637619E-7	DEFECT
Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9994654472755621	WITHOUT_CLASSIFICATION	5.345527244377895E-4	DEFECT
encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999992475117516	WITHOUT_CLASSIFICATION	7.524882483794213E-7	DEFECT
only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.999999986021952	WITHOUT_CLASSIFICATION	1.3978047980166197E-8	DEFECT
otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999989940668578	WITHOUT_CLASSIFICATION	1.0059331422455745E-6	DEFECT
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999986422727257	WITHOUT_CLASSIFICATION	1.357727274288856E-6	DEFECT
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999971237315283	WITHOUT_CLASSIFICATION	2.8762684716875082E-6	DEFECT
compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999995174278113	WITHOUT_CLASSIFICATION	4.825721885510106E-7	DEFECT
last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999904906139503	WITHOUT_CLASSIFICATION	9.509386049831146E-6	DEFECT
compile first node only	WITHOUT_CLASSIFICATION	0.9999998107752358	WITHOUT_CLASSIFICATION	1.8922476421481647E-7	DEFECT
splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999833291058929	WITHOUT_CLASSIFICATION	1.6670894107009274E-5	DEFECT
if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999988837709624	WITHOUT_CLASSIFICATION	1.1162290376841756E-6	DEFECT
NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999996690548423	WITHOUT_CLASSIFICATION	3.309451576138266E-7	DEFECT
aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999561092644591	WITHOUT_CLASSIFICATION	4.389073554093955E-5	DEFECT
one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.999998174288952	WITHOUT_CLASSIFICATION	1.8257110480210147E-6	DEFECT
can't do it	WITHOUT_CLASSIFICATION	0.9999766281178089	WITHOUT_CLASSIFICATION	2.337188219121983E-5	DEFECT
otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999998942433973	WITHOUT_CLASSIFICATION	1.057566027178245E-7	DEFECT
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999994778229744	WITHOUT_CLASSIFICATION	5.221770256667714E-7	DEFECT
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999994778229744	WITHOUT_CLASSIFICATION	5.221770256667714E-7	DEFECT
these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999994203898406	WITHOUT_CLASSIFICATION	5.796101594332252E-7	DEFECT
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9999990023479859	WITHOUT_CLASSIFICATION	9.976520140762529E-7	DEFECT
[]	WITHOUT_CLASSIFICATION	0.99990629031838	WITHOUT_CLASSIFICATION	9.370968162013777E-5	DEFECT
[]	WITHOUT_CLASSIFICATION	0.99990629031838	WITHOUT_CLASSIFICATION	9.370968162013777E-5	DEFECT
context.swapValues(); context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999926107137718	WITHOUT_CLASSIFICATION	7.389286228221914E-6	DEFECT
[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999945323684061	WITHOUT_CLASSIFICATION	5.467631593924217E-6	DEFECT
[RubyClass]	WITHOUT_CLASSIFICATION	0.9998863274266887	WITHOUT_CLASSIFICATION	1.1367257331129567E-4	DEFECT
[RubyClass] [RubyClass, RubyClass] [RubyClass] []	WITHOUT_CLASSIFICATION	0.9999482390766328	WITHOUT_CLASSIFICATION	5.1760923367296834E-5	DEFECT
if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999862669579085	WITHOUT_CLASSIFICATION	1.373304209145532E-5	DEFECT
inspect body and args	WITHOUT_CLASSIFICATION	0.9999987013355779	WITHOUT_CLASSIFICATION	1.2986644220097579E-6	DEFECT
inspect body and args	WITHOUT_CLASSIFICATION	0.9999987013355779	WITHOUT_CLASSIFICATION	1.2986644220097579E-6	DEFECT
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999988859977678	WITHOUT_CLASSIFICATION	1.1140022322221423E-6	DEFECT
if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999863801998381	WITHOUT_CLASSIFICATION	1.3619800161865024E-5	DEFECT
invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999997577630013	WITHOUT_CLASSIFICATION	2.422369986966803E-7	DEFECT
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999993353107268	WITHOUT_CLASSIFICATION	6.646892731780322E-7	DEFECT
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9999990023479859	WITHOUT_CLASSIFICATION	9.976520140762529E-7	DEFECT
[RubyClass] []	WITHOUT_CLASSIFICATION	0.999983978046016	WITHOUT_CLASSIFICATION	1.602195398396154E-5	DEFECT
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999914100458759	WITHOUT_CLASSIFICATION	8.5899541240862E-6	DEFECT
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999914100458759	WITHOUT_CLASSIFICATION	8.5899541240862E-6	DEFECT
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999910826443025	WITHOUT_CLASSIFICATION	8.917355697524314E-6	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999949173673	WITHOUT_CLASSIFICATION	5.082632717545941E-8	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999949173673	WITHOUT_CLASSIFICATION	5.082632717545941E-8	DEFECT
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999914505101177	WITHOUT_CLASSIFICATION	8.549489882274217E-6	DEFECT
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999914505101177	WITHOUT_CLASSIFICATION	8.549489882274217E-6	DEFECT
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999914505101177	WITHOUT_CLASSIFICATION	8.549489882274217E-6	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999949173673	WITHOUT_CLASSIFICATION	5.082632717545941E-8	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999949173673	WITHOUT_CLASSIFICATION	5.082632717545941E-8	DEFECT
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999910826443025	WITHOUT_CLASSIFICATION	8.917355697524314E-6	DEFECT
force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.999998599924697	WITHOUT_CLASSIFICATION	1.4000753030395133E-6	DEFECT
always false or nil	WITHOUT_CLASSIFICATION	0.9999609116439312	WITHOUT_CLASSIFICATION	3.908835606888464E-5	DEFECT
optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999657192104874	WITHOUT_CLASSIFICATION	3.428078951253752E-5	DEFECT
normal	WITHOUT_CLASSIFICATION	0.9999919206717256	WITHOUT_CLASSIFICATION	8.079328274443077E-6	DEFECT
compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999945590712181	WITHOUT_CLASSIFICATION	5.440928781900874E-6	DEFECT
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999996853681423	WITHOUT_CLASSIFICATION	3.146318576657591E-7	DEFECT
just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999999340503154	WITHOUT_CLASSIFICATION	6.594968457839083E-8	DEFECT
"assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999930544160723	WITHOUT_CLASSIFICATION	6.945583927624927E-6	DEFECT
compile first node only	WITHOUT_CLASSIFICATION	0.9999998107752358	WITHOUT_CLASSIFICATION	1.8922476421481647E-7	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999949173673	WITHOUT_CLASSIFICATION	5.082632717545941E-8	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999949173673	WITHOUT_CLASSIFICATION	5.082632717545941E-8	DEFECT
eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999987332958907	WITHOUT_CLASSIFICATION	1.2667041092112249E-6	DEFECT
try optz version	WITHOUT_CLASSIFICATION	0.9999975483681571	WITHOUT_CLASSIFICATION	2.4516318428934627E-6	DEFECT
sizes must match	WITHOUT_CLASSIFICATION	0.9999993200129582	WITHOUT_CLASSIFICATION	6.799870418223197E-7	DEFECT
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9996185832249711	WITHOUT_CLASSIFICATION	3.8141677502886285E-4	DEFECT
normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.999999579094963	WITHOUT_CLASSIFICATION	4.209050370556631E-7	DEFECT
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9999996579341947	WITHOUT_CLASSIFICATION	3.420658053236717E-7	DEFECT
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999080939576	WITHOUT_CLASSIFICATION	9.190604237818262E-8	DEFECT
only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999985630171436	WITHOUT_CLASSIFICATION	1.4369828563566346E-6	DEFECT
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999984566232732	WITHOUT_CLASSIFICATION	1.543376726644781E-6	DEFECT
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999537203770297	WITHOUT_CLASSIFICATION	4.627962297026395E-5	DEFECT
RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999829748779743	WITHOUT_CLASSIFICATION	1.702512202572033E-5	DEFECT
done processing args	WITHOUT_CLASSIFICATION	0.9999990426652617	WITHOUT_CLASSIFICATION	9.573347382089922E-7	DEFECT
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999993499149621	WITHOUT_CLASSIFICATION	6.500850379000148E-7	DEFECT
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999997207081995	WITHOUT_CLASSIFICATION	2.7929180050227293E-7	DEFECT
if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999997537998	WITHOUT_CLASSIFICATION	2.462001848519045E-10	DEFECT
[recv]	WITHOUT_CLASSIFICATION	0.9999896309463568	WITHOUT_CLASSIFICATION	1.0369053643197652E-5	DEFECT
[recv]	WITHOUT_CLASSIFICATION	0.9999896309463568	WITHOUT_CLASSIFICATION	1.0369053643197652E-5	DEFECT
[recv]	WITHOUT_CLASSIFICATION	0.9999896309463568	WITHOUT_CLASSIFICATION	1.0369053643197652E-5	DEFECT
compile into array	WITHOUT_CLASSIFICATION	0.9999998122078826	WITHOUT_CLASSIFICATION	1.8779211745626602E-7	DEFECT
compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.999999017009839	WITHOUT_CLASSIFICATION	9.829901609990047E-7	DEFECT
check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999998679121932	WITHOUT_CLASSIFICATION	1.320878068236598E-7	DEFECT
condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999490764605992	WITHOUT_CLASSIFICATION	5.092353940097812E-5	DEFECT
force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.999999944398323	WITHOUT_CLASSIFICATION	5.560167692205391E-8	DEFECT
create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999999529086046	WITHOUT_CLASSIFICATION	4.7091395504013414E-8	DEFECT
it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999998992607	WITHOUT_CLASSIFICATION	1.0073933320366368E-10	DEFECT
send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999996877064731	WITHOUT_CLASSIFICATION	3.1229352701870316E-7	DEFECT
single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999999537776403	WITHOUT_CLASSIFICATION	4.622235970359247E-8	DEFECT
leave as a normal array	WITHOUT_CLASSIFICATION	0.9999991380485874	WITHOUT_CLASSIFICATION	8.619514125669213E-7	DEFECT
This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999839324573779	WITHOUT_CLASSIFICATION	1.606754262202133E-5	DEFECT
The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9997044140471284	WITHOUT_CLASSIFICATION	2.955859528715139E-4	DEFECT
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999988859977678	WITHOUT_CLASSIFICATION	1.1140022322221423E-6	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999949173673	WITHOUT_CLASSIFICATION	5.082632717545941E-8	DEFECT
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999949173673	WITHOUT_CLASSIFICATION	5.082632717545941E-8	DEFECT
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999910826443025	WITHOUT_CLASSIFICATION	8.917355697524314E-6	DEFECT
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999996853681423	WITHOUT_CLASSIFICATION	3.146318576657591E-7	DEFECT
try optz version	WITHOUT_CLASSIFICATION	0.9999975483681571	WITHOUT_CLASSIFICATION	2.4516318428934627E-6	DEFECT
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9996185832249711	WITHOUT_CLASSIFICATION	3.8141677502886285E-4	DEFECT
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9999996579341947	WITHOUT_CLASSIFICATION	3.420658053236717E-7	DEFECT
sizes must match	WITHOUT_CLASSIFICATION	0.9999993200129582	WITHOUT_CLASSIFICATION	6.799870418223197E-7	DEFECT
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999080939576	WITHOUT_CLASSIFICATION	9.190604237818262E-8	DEFECT
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999537203770297	WITHOUT_CLASSIFICATION	4.627962297026395E-5	DEFECT
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999984566232732	WITHOUT_CLASSIFICATION	1.543376726644781E-6	DEFECT
done processing args	WITHOUT_CLASSIFICATION	0.9999990426652617	WITHOUT_CLASSIFICATION	9.573347382089922E-7	DEFECT
Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999963980092496	WITHOUT_CLASSIFICATION	3.6019907503983224E-6	DEFECT
class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999966143489545	WITHOUT_CLASSIFICATION	3.3856510455782146E-6	DEFECT
successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999862260272128	WITHOUT_CLASSIFICATION	1.3773972787174371E-5	DEFECT
finally, grab the script	WITHOUT_CLASSIFICATION	0.9999995751327804	WITHOUT_CLASSIFICATION	4.248672197073824E-7	DEFECT
logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999997734228779	WITHOUT_CLASSIFICATION	2.2657712199800918E-7	DEFECT
Time the compilation	WITHOUT_CLASSIFICATION	0.9999992279915909	WITHOUT_CLASSIFICATION	7.720084091465143E-7	DEFECT
we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999296146539867	WITHOUT_CLASSIFICATION	7.03853460133171E-5	DEFECT
If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999455564062395	WITHOUT_CLASSIFICATION	5.444359376047682E-5	DEFECT
if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999896720855048	WITHOUT_CLASSIFICATION	1.0327914495222142E-5	DEFECT
only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999967484952286	WITHOUT_CLASSIFICATION	3.251504771532789E-6	DEFECT
normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.999999166417682	WITHOUT_CLASSIFICATION	8.335823179046821E-7	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999999917047887	WITHOUT_CLASSIFICATION	8.295211301128405E-8	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999672472181	WITHOUT_CLASSIFICATION	3.275278189687435E-7	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999904954360103	WITHOUT_CLASSIFICATION	9.50456398968068E-6	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999613755854972	WITHOUT_CLASSIFICATION	3.8624414502824474E-5	DEFECT
end of variable scope	WITHOUT_CLASSIFICATION	0.9999998794866489	WITHOUT_CLASSIFICATION	1.2051335112039763E-7	DEFECT
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999971891645587	WITHOUT_CLASSIFICATION	2.8108354413115438E-6	DEFECT
Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999897493271742	WITHOUT_CLASSIFICATION	1.0250672825758016E-5	DEFECT
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999997979497305	WITHOUT_CLASSIFICATION	2.0205026952304637E-7	DEFECT
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999984356448668	WITHOUT_CLASSIFICATION	1.5643551331069334E-6	DEFECT
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999977608624072	WITHOUT_CLASSIFICATION	2.2391375928336904E-6	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998558395207193	WITHOUT_CLASSIFICATION	1.4416047928075425E-4	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998558395207193	WITHOUT_CLASSIFICATION	1.4416047928075425E-4	DEFECT
value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999711999792352	WITHOUT_CLASSIFICATION	2.8800020764789033E-5	DEFECT
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.999999986646824	WITHOUT_CLASSIFICATION	1.3353175863633663E-8	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999953010057588	WITHOUT_CLASSIFICATION	4.698994241199892E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999953010057588	WITHOUT_CLASSIFICATION	4.698994241199892E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999953010057588	WITHOUT_CLASSIFICATION	4.698994241199892E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999953010057588	WITHOUT_CLASSIFICATION	4.698994241199892E-6	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999704868895534	WITHOUT_CLASSIFICATION	2.9513110446554226E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999704868895534	WITHOUT_CLASSIFICATION	2.9513110446554226E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999704868895534	WITHOUT_CLASSIFICATION	2.9513110446554226E-5	DEFECT
arg1	WITHOUT_CLASSIFICATION	0.9999797433443319	WITHOUT_CLASSIFICATION	2.0256655668032597E-5	DEFECT
arg1	WITHOUT_CLASSIFICATION	0.9999797433443319	WITHOUT_CLASSIFICATION	2.0256655668032597E-5	DEFECT
arg2	WITHOUT_CLASSIFICATION	0.9999624818200414	WITHOUT_CLASSIFICATION	3.751817995853637E-5	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999894468560582	WITHOUT_CLASSIFICATION	1.055314394185926E-5	DEFECT
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.999999986646824	WITHOUT_CLASSIFICATION	1.3353175863633663E-8	DEFECT
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9999974451257437	WITHOUT_CLASSIFICATION	2.554874256206689E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999953010057588	WITHOUT_CLASSIFICATION	4.698994241199892E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999953010057588	WITHOUT_CLASSIFICATION	4.698994241199892E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999953010057588	WITHOUT_CLASSIFICATION	4.698994241199892E-6	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999704868895534	WITHOUT_CLASSIFICATION	2.9513110446554226E-5	DEFECT
arg0	WITHOUT_CLASSIFICATION	0.9999704868895534	WITHOUT_CLASSIFICATION	2.9513110446554226E-5	DEFECT
arg1	WITHOUT_CLASSIFICATION	0.9999797433443319	WITHOUT_CLASSIFICATION	2.0256655668032597E-5	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999894468560582	WITHOUT_CLASSIFICATION	1.055314394185926E-5	DEFECT
get call site and thread context	WITHOUT_CLASSIFICATION	0.999999062660666	WITHOUT_CLASSIFICATION	9.373393339490064E-7	DEFECT
get call site and thread context	WITHOUT_CLASSIFICATION	0.999999062660666	WITHOUT_CLASSIFICATION	9.373393339490064E-7	DEFECT
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999994012971318	WITHOUT_CLASSIFICATION	5.987028681834556E-7	DEFECT
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999994012971318	WITHOUT_CLASSIFICATION	5.987028681834556E-7	DEFECT
invoke	WITHOUT_CLASSIFICATION	0.9999763656094321	WITHOUT_CLASSIFICATION	2.3634390567893078E-5	DEFECT
invoke	WITHOUT_CLASSIFICATION	0.9999763656094321	WITHOUT_CLASSIFICATION	2.3634390567893078E-5	DEFECT
check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999950795747956	WITHOUT_CLASSIFICATION	4.920425204355438E-6	DEFECT
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999844548356007	WITHOUT_CLASSIFICATION	1.5545164399277728E-5	DEFECT
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999844548356007	WITHOUT_CLASSIFICATION	1.5545164399277728E-5	DEFECT
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999999900236044	WITHOUT_CLASSIFICATION	9.97639559872014E-8	DEFECT
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999999900236044	WITHOUT_CLASSIFICATION	9.97639559872014E-8	DEFECT
eval value for assignment	WITHOUT_CLASSIFICATION	0.9999992963085639	WITHOUT_CLASSIFICATION	7.036914359883149E-7	DEFECT
call site	WITHOUT_CLASSIFICATION	0.9999993346514914	WITHOUT_CLASSIFICATION	6.653485086600504E-7	DEFECT
call site	WITHOUT_CLASSIFICATION	0.9999993346514914	WITHOUT_CLASSIFICATION	6.653485086600504E-7	DEFECT
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999935010100234	WITHOUT_CLASSIFICATION	6.4989899765800185E-6	DEFECT
check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999906103038056	WITHOUT_CLASSIFICATION	9.389696194275734E-6	DEFECT
eval value and save it	WITHOUT_CLASSIFICATION	0.9999847968612002	WITHOUT_CLASSIFICATION	1.5203138799825857E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999953010057588	WITHOUT_CLASSIFICATION	4.698994241199892E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999953010057588	WITHOUT_CLASSIFICATION	4.698994241199892E-6	DEFECT
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999935010100234	WITHOUT_CLASSIFICATION	6.4989899765800185E-6	DEFECT
receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999956172520685	WITHOUT_CLASSIFICATION	4.382747931419939E-6	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.999996405715096	WITHOUT_CLASSIFICATION	3.594284904001636E-6	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.999996405715096	WITHOUT_CLASSIFICATION	3.594284904001636E-6	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.999996405715096	WITHOUT_CLASSIFICATION	3.594284904001636E-6	DEFECT
super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999996117679989	WITHOUT_CLASSIFICATION	3.8823200106361824E-7	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999894468560582	WITHOUT_CLASSIFICATION	1.055314394185926E-5	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999780363160254	WITHOUT_CLASSIFICATION	2.1963683974522425E-5	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999780363160254	WITHOUT_CLASSIFICATION	2.1963683974522425E-5	DEFECT
no args, no block	WITHOUT_CLASSIFICATION	0.9999999052401843	WITHOUT_CLASSIFICATION	9.47598156578087E-8	DEFECT
no args, with block	WITHOUT_CLASSIFICATION	0.9999998943941552	WITHOUT_CLASSIFICATION	1.0560584484219824E-7	DEFECT
with args, no block	WITHOUT_CLASSIFICATION	0.9999999301439476	WITHOUT_CLASSIFICATION	6.985605245892117E-8	DEFECT
with args, with block	WITHOUT_CLASSIFICATION	0.9999989761370967	WITHOUT_CLASSIFICATION	1.0238629033135702E-6	DEFECT
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999999601021823	WITHOUT_CLASSIFICATION	3.9897817707111513E-7	DEFECT
pop extra attr value	WITHOUT_CLASSIFICATION	0.9999934380244854	WITHOUT_CLASSIFICATION	6.5619755145670216E-6	DEFECT
pop extra attr value	WITHOUT_CLASSIFICATION	0.9999934380244854	WITHOUT_CLASSIFICATION	6.5619755145670216E-6	DEFECT
arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.999999705439344	WITHOUT_CLASSIFICATION	2.945606559704554E-7	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999745743924388	WITHOUT_CLASSIFICATION	2.5425607561340855E-5	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999745743924388	WITHOUT_CLASSIFICATION	2.5425607561340855E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999953010057588	WITHOUT_CLASSIFICATION	4.698994241199892E-6	DEFECT
[adapter, tc]	WITHOUT_CLASSIFICATION	0.999996405715096	WITHOUT_CLASSIFICATION	3.594284904001636E-6	DEFECT
args	WITHOUT_CLASSIFICATION	0.9999894468560582	WITHOUT_CLASSIFICATION	1.055314394185926E-5	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999780363160254	WITHOUT_CLASSIFICATION	2.1963683974522425E-5	DEFECT
no args, no block	WITHOUT_CLASSIFICATION	0.9999999052401843	WITHOUT_CLASSIFICATION	9.47598156578087E-8	DEFECT
no args, with block	WITHOUT_CLASSIFICATION	0.9999998943941552	WITHOUT_CLASSIFICATION	1.0560584484219824E-7	DEFECT
with args, no block	WITHOUT_CLASSIFICATION	0.9999999301439476	WITHOUT_CLASSIFICATION	6.985605245892117E-8	DEFECT
with args, with block	WITHOUT_CLASSIFICATION	0.9999989761370967	WITHOUT_CLASSIFICATION	1.0238629033135702E-6	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999745743924388	WITHOUT_CLASSIFICATION	2.5425607561340855E-5	DEFECT
retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999987929496765	WITHOUT_CLASSIFICATION	1.207050323543101E-6	DEFECT
use numbered access method	WITHOUT_CLASSIFICATION	0.9999856611394575	WITHOUT_CLASSIFICATION	1.4338860542493308E-5	DEFECT
retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.999997406357261	WITHOUT_CLASSIFICATION	2.5936427390050807E-6	DEFECT
add name to call site list	WITHOUT_CLASSIFICATION	0.9999991021110909	WITHOUT_CLASSIFICATION	8.978889092134564E-7	DEFECT
module is on top of stack	WITHOUT_CLASSIFICATION	0.999998106170263	WITHOUT_CLASSIFICATION	1.8938297370072912E-6	DEFECT
build scope names string	WITHOUT_CLASSIFICATION	0.9999984145684016	WITHOUT_CLASSIFICATION	1.5854315984079228E-6	DEFECT
build descriptor string	WITHOUT_CLASSIFICATION	0.9999989549149912	WITHOUT_CLASSIFICATION	1.045085008753675E-6	DEFECT
build descriptor string	WITHOUT_CLASSIFICATION	0.9999989549149912	WITHOUT_CLASSIFICATION	1.045085008753675E-6	DEFECT
generate call sites initialization code	WITHOUT_CLASSIFICATION	0.999990086358979	WITHOUT_CLASSIFICATION	9.91364102098777E-6	DEFECT
generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999929646453484	WITHOUT_CLASSIFICATION	7.035354651552295E-6	DEFECT
generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999914738353884	WITHOUT_CLASSIFICATION	8.52616461159265E-6	DEFECT
generate constants initialization code	WITHOUT_CLASSIFICATION	0.999997489190916	WITHOUT_CLASSIFICATION	2.5108090839113983E-6	DEFECT
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999855909472251	WITHOUT_CLASSIFICATION	1.4409052774858631E-5	DEFECT
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999855909472251	WITHOUT_CLASSIFICATION	1.4409052774858631E-5	DEFECT
generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999998637337497	WITHOUT_CLASSIFICATION	1.3626625038038073E-7	DEFECT
generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999998167564921	WITHOUT_CLASSIFICATION	1.832435078545018E-7	DEFECT
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999996763835791	WITHOUT_CLASSIFICATION	3.236164207757057E-7	DEFECT
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999996763835791	WITHOUT_CLASSIFICATION	3.236164207757057E-7	DEFECT
generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999981118799988	WITHOUT_CLASSIFICATION	1.8881200012121062E-6	DEFECT
generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999932193848815	WITHOUT_CLASSIFICATION	6.780615118539652E-6	DEFECT
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999999601021823	WITHOUT_CLASSIFICATION	3.9897817707111513E-7	DEFECT
use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999927704817075	WITHOUT_CLASSIFICATION	7.2295182923809334E-6	DEFECT
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998529222884	WITHOUT_CLASSIFICATION	1.470777115378778E-7	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999975005690539	WITHOUT_CLASSIFICATION	2.499430946135246E-6	DEFECT
No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999924060568393	WITHOUT_CLASSIFICATION	7.593943160661573E-6	DEFECT
load Object under value	WITHOUT_CLASSIFICATION	0.9999931243768005	WITHOUT_CLASSIFICATION	6.875623199536191E-6	DEFECT
put under object array already present	WITHOUT_CLASSIFICATION	0.9999999019129627	WITHOUT_CLASSIFICATION	9.808703723630959E-8	DEFECT
if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999904204013408	WITHOUT_CLASSIFICATION	9.579598659207183E-6	DEFECT
This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999999994527528	WITHOUT_CLASSIFICATION	5.472471355010666E-10	DEFECT
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999809188383	WITHOUT_CLASSIFICATION	1.908116169576889E-8	DEFECT
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999809188383	WITHOUT_CLASSIFICATION	1.908116169576889E-8	DEFECT
brute force construction inline	WITHOUT_CLASSIFICATION	0.9999984813044263	WITHOUT_CLASSIFICATION	1.5186955737214255E-6	DEFECT
brute force construction inline	WITHOUT_CLASSIFICATION	0.9999984813044263	WITHOUT_CLASSIFICATION	1.5186955737214255E-6	DEFECT
use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999994147028882	WITHOUT_CLASSIFICATION	5.852971118962723E-7	DEFECT
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999605078403836	WITHOUT_CLASSIFICATION	3.949215961642536E-5	DEFECT
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999605078403836	WITHOUT_CLASSIFICATION	3.949215961642536E-5	DEFECT
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999605078403836	WITHOUT_CLASSIFICATION	3.949215961642536E-5	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999983815357397	WITHOUT_CLASSIFICATION	1.6184642602900423E-6	DEFECT
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999984469054446	WITHOUT_CLASSIFICATION	1.5530945554366345E-6	DEFECT
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999984469054446	WITHOUT_CLASSIFICATION	1.5530945554366345E-6	DEFECT
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999949775790681	WITHOUT_CLASSIFICATION	5.022420931947427E-6	DEFECT
check the condition	WITHOUT_CLASSIFICATION	0.9999544859103964	WITHOUT_CLASSIFICATION	4.55140896036877E-5	DEFECT
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999988669086668	WITHOUT_CLASSIFICATION	1.1330913332763329E-6	DEFECT
skip catch block	WITHOUT_CLASSIFICATION	0.9999998501141673	WITHOUT_CLASSIFICATION	1.498858326146918E-7	DEFECT
catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9996435910474152	WITHOUT_CLASSIFICATION	3.564089525847515E-4	DEFECT
next jump	WITHOUT_CLASSIFICATION	0.9999973008707967	WITHOUT_CLASSIFICATION	2.699129203257415E-6	DEFECT
exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9996175645190603	WITHOUT_CLASSIFICATION	3.8243548093982706E-4	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999672472181	WITHOUT_CLASSIFICATION	3.275278189687435E-7	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999672472181	WITHOUT_CLASSIFICATION	3.275278189687435E-7	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999983815357397	WITHOUT_CLASSIFICATION	1.6184642602900423E-6	DEFECT
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999949775790681	WITHOUT_CLASSIFICATION	5.022420931947427E-6	DEFECT
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999413677406	WITHOUT_CLASSIFICATION	5.863225953071407E-8	DEFECT
check the condition	WITHOUT_CLASSIFICATION	0.9999544859103964	WITHOUT_CLASSIFICATION	4.55140896036877E-5	DEFECT
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999988669086668	WITHOUT_CLASSIFICATION	1.1330913332763329E-6	DEFECT
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999992996879639	WITHOUT_CLASSIFICATION	7.003120362519465E-7	DEFECT
break jump	WITHOUT_CLASSIFICATION	0.9999995726224492	WITHOUT_CLASSIFICATION	4.273775508730771E-7	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999999115196758	WITHOUT_CLASSIFICATION	8.84803242345518E-8	DEFECT
[reg]	WITHOUT_CLASSIFICATION	0.999974201301955	WITHOUT_CLASSIFICATION	2.5798698045020396E-5	DEFECT
for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999838326539375	WITHOUT_CLASSIFICATION	1.616734606248913E-5	DEFECT
inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999977976854806	WITHOUT_CLASSIFICATION	2.2023145193630306E-6	DEFECT
inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999885432332152	WITHOUT_CLASSIFICATION	1.1456766784869335E-5	DEFECT
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999992996879639	WITHOUT_CLASSIFICATION	7.003120362519465E-7	DEFECT
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999909255363633	WITHOUT_CLASSIFICATION	9.074463636788897E-6	DEFECT
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999909255363633	WITHOUT_CLASSIFICATION	9.074463636788897E-6	DEFECT
if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999899413495075	WITHOUT_CLASSIFICATION	1.0058650492520035E-5	DEFECT
retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999775033251499	WITHOUT_CLASSIFICATION	2.2496674850115957E-5	DEFECT
any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999445261139455	WITHOUT_CLASSIFICATION	5.547388605453195E-5	DEFECT
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999544968272407	WITHOUT_CLASSIFICATION	4.550317275922793E-5	DEFECT
restore the original exception	WITHOUT_CLASSIFICATION	0.9999996928549029	WITHOUT_CLASSIFICATION	3.0714509716559197E-7	DEFECT
Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999999904713807	WITHOUT_CLASSIFICATION	9.528619378440573E-9	DEFECT
rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999961692581457	WITHOUT_CLASSIFICATION	3.83074185427006E-6	DEFECT
Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999943510308381	WITHOUT_CLASSIFICATION	5.648969161916611E-6	DEFECT
inside a loop, break out of it go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999847187532306	WITHOUT_CLASSIFICATION	1.5281246769450944E-5	DEFECT
false zero	WITHOUT_CLASSIFICATION	0.9999992218486962	WITHOUT_CLASSIFICATION	7.781513038338386E-7	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999981379164871	WITHOUT_CLASSIFICATION	1.8620835129631388E-6	DEFECT
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999544968272407	WITHOUT_CLASSIFICATION	4.550317275922793E-5	DEFECT
restore the original exception	WITHOUT_CLASSIFICATION	0.9999996928549029	WITHOUT_CLASSIFICATION	3.0714509716559197E-7	DEFECT
retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999804447809388	WITHOUT_CLASSIFICATION	1.955521906107712E-5	DEFECT
push false	WITHOUT_CLASSIFICATION	0.9999993474447	WITHOUT_CLASSIFICATION	6.525553001038594E-7	DEFECT
method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999932228106513	WITHOUT_CLASSIFICATION	6.77718934861183E-6	DEFECT
method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.999988054245833	WITHOUT_CLASSIFICATION	1.1945754166976756E-5	DEFECT
EQ == 0 (i.e. false) [C]	WITHOUT_CLASSIFICATION	0.9999985643915894	WITHOUT_CLASSIFICATION	1.4356084106824876E-6	DEFECT
[C, C] [C, C, String] [C, null|C]	WITHOUT_CLASSIFICATION	0.9999617187906596	WITHOUT_CLASSIFICATION	3.8281209340350835E-5	DEFECT
[C]	WITHOUT_CLASSIFICATION	0.9999282482339248	WITHOUT_CLASSIFICATION	7.175176607523657E-5	DEFECT
push true	WITHOUT_CLASSIFICATION	0.9999995054398492	WITHOUT_CLASSIFICATION	4.945601508795037E-7	DEFECT
EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999882786607188	WITHOUT_CLASSIFICATION	1.1721339281188952E-5	DEFECT
[?, ?] [?, boolean]	WITHOUT_CLASSIFICATION	0.9999987611283027	WITHOUT_CLASSIFICATION	1.238871697321741E-6	DEFECT
[RubyModule] [RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999866137209362	WITHOUT_CLASSIFICATION	1.3386279063674313E-5	DEFECT
[boolean]	WITHOUT_CLASSIFICATION	0.9999983600589315	WITHOUT_CLASSIFICATION	1.6399410685480634E-6	DEFECT
no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999982289080332	WITHOUT_CLASSIFICATION	1.771091966829115E-6	DEFECT
but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999996992027825	WITHOUT_CLASSIFICATION	3.0079721748703204E-7	DEFECT
we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9998403699783442	WITHOUT_CLASSIFICATION	1.5963002165571042E-4	DEFECT
set self to the class	WITHOUT_CLASSIFICATION	0.9999940346343204	WITHOUT_CLASSIFICATION	5.965365679661575E-6	DEFECT
CLASS BODY	WITHOUT_CLASSIFICATION	0.9999560080189498	WITHOUT_CLASSIFICATION	4.399198105022702E-5	DEFECT
static scope	WITHOUT_CLASSIFICATION	0.9999999151561347	WITHOUT_CLASSIFICATION	8.484386526072537E-8	DEFECT
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999996569711704	WITHOUT_CLASSIFICATION	3.4302882948516227E-7	DEFECT
new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999987379799037	WITHOUT_CLASSIFICATION	1.262020096245501E-6	DEFECT
CLASS BODY	WITHOUT_CLASSIFICATION	0.9999560080189498	WITHOUT_CLASSIFICATION	4.399198105022702E-5	DEFECT
static scope	WITHOUT_CLASSIFICATION	0.9999999151561347	WITHOUT_CLASSIFICATION	8.484386526072537E-8	DEFECT
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999996569711704	WITHOUT_CLASSIFICATION	3.4302882948516227E-7	DEFECT
finally with exception	WITHOUT_CLASSIFICATION	0.9999823853537319	WITHOUT_CLASSIFICATION	1.7614646268207692E-5	DEFECT
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999811029191731	WITHOUT_CLASSIFICATION	1.889708082684784E-5	DEFECT
otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9998166882284091	WITHOUT_CLASSIFICATION	1.8331177159099053E-4	DEFECT
original exception is on stack	WITHOUT_CLASSIFICATION	0.9999581917662443	WITHOUT_CLASSIFICATION	4.180823375572836E-5	DEFECT
RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9997719637280871	WITHOUT_CLASSIFICATION	2.280362719128115E-4	DEFECT
updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999428743479423	WITHOUT_CLASSIFICATION	5.712565205760728E-5	DEFECT
callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.999827792794766	WITHOUT_CLASSIFICATION	1.7220720523393644E-4	DEFECT
prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999999545535023	WITHOUT_CLASSIFICATION	4.5446497685230733E-8	DEFECT
script object	WITHOUT_CLASSIFICATION	0.9999989563396386	WITHOUT_CLASSIFICATION	1.0436603613295498E-6	DEFECT
arities	WITHOUT_CLASSIFICATION	0.9999976549363543	WITHOUT_CLASSIFICATION	2.345063645770823E-6	DEFECT
TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9910000498573911	WITHOUT_CLASSIFICATION	0.008999950142608801	DEFECT
we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999996976278127	WITHOUT_CLASSIFICATION	3.023721873524407E-7	DEFECT
we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999995884680267	WITHOUT_CLASSIFICATION	4.115319733181952E-7	DEFECT
checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999998072367116	WITHOUT_CLASSIFICATION	1.9276328843459943E-7	DEFECT
expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999995938059765	WITHOUT_CLASSIFICATION	4.0619402361627295E-7	DEFECT
normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999991923705693	WITHOUT_CLASSIFICATION	8.076294306736047E-7	DEFECT
last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999804876141591	WITHOUT_CLASSIFICATION	1.951238584091749E-5	DEFECT
do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999980054455647	WITHOUT_CLASSIFICATION	1.99455443528515E-6	DEFECT
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999999238124698	WITHOUT_CLASSIFICATION	7.61875301307157E-8	DEFECT
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999998521991256	WITHOUT_CLASSIFICATION	1.4780087441459566E-7	DEFECT
extract item from array	WITHOUT_CLASSIFICATION	0.9999965770840105	WITHOUT_CLASSIFICATION	3.422915989519865E-6	DEFECT
index for the item	WITHOUT_CLASSIFICATION	0.9999908842861956	WITHOUT_CLASSIFICATION	9.115713804383089E-6	DEFECT
index for the item	WITHOUT_CLASSIFICATION	0.9999908842861956	WITHOUT_CLASSIFICATION	9.115713804383089E-6	DEFECT
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999944313848681	WITHOUT_CLASSIFICATION	5.568615131820905E-6	DEFECT
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999944313848681	WITHOUT_CLASSIFICATION	5.568615131820905E-6	DEFECT
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999999436436272	WITHOUT_CLASSIFICATION	5.6356372719013014E-8	DEFECT
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999999436436272	WITHOUT_CLASSIFICATION	5.6356372719013014E-8	DEFECT
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999997961360653	WITHOUT_CLASSIFICATION	2.0386393487369845E-7	DEFECT
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999759928397	WITHOUT_CLASSIFICATION	2.4007160215510695E-8	DEFECT
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999998725506888	WITHOUT_CLASSIFICATION	1.274493111833098E-7	DEFECT
if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999999937204308	WITHOUT_CLASSIFICATION	6.279569185363246E-9	DEFECT
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999910433449	WITHOUT_CLASSIFICATION	8.956655028279697E-9	DEFECT
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999947123238	WITHOUT_CLASSIFICATION	5.287676151639436E-9	DEFECT
first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999049348812	WITHOUT_CLASSIFICATION	9.506511885068538E-8	DEFECT
then optional args	WITHOUT_CLASSIFICATION	0.9999998330014628	WITHOUT_CLASSIFICATION	1.669985372621282E-7	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999672472181	WITHOUT_CLASSIFICATION	3.275278189687435E-7	DEFECT
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999997961360653	WITHOUT_CLASSIFICATION	2.0386393487369845E-7	DEFECT
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999759928397	WITHOUT_CLASSIFICATION	2.4007160215510695E-8	DEFECT
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999998725506888	WITHOUT_CLASSIFICATION	1.274493111833098E-7	DEFECT
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999910433449	WITHOUT_CLASSIFICATION	8.956655028279697E-9	DEFECT
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999947123238	WITHOUT_CLASSIFICATION	5.287676151639436E-9	DEFECT
if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999966534655159	WITHOUT_CLASSIFICATION	3.3465344841022553E-6	DEFECT
finally, post args	WITHOUT_CLASSIFICATION	0.99999923424404	WITHOUT_CLASSIFICATION	7.657559599397947E-7	DEFECT
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997587422291152	WITHOUT_CLASSIFICATION	2.4125777088485854E-4	DEFECT
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997587422291152	WITHOUT_CLASSIFICATION	2.4125777088485854E-4	DEFECT
unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999985900090421	WITHOUT_CLASSIFICATION	1.4099909578154759E-6	DEFECT
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999642897426385	WITHOUT_CLASSIFICATION	3.571025736140677E-5	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9998971996352202	WITHOUT_CLASSIFICATION	1.0280036477975011E-4	DEFECT
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999962919301062	WITHOUT_CLASSIFICATION	3.7080698937237008E-6	DEFECT
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999962919301062	WITHOUT_CLASSIFICATION	3.7080698937237008E-6	DEFECT
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999813448763183	WITHOUT_CLASSIFICATION	1.8655123681659383E-5	DEFECT
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999481522389	WITHOUT_CLASSIFICATION	5.184776114752721E-8	DEFECT
store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999988742464926	WITHOUT_CLASSIFICATION	1.1257535073961248E-6	DEFECT
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999997769209897	WITHOUT_CLASSIFICATION	2.230790102140081E-7	DEFECT
return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999817813793872	WITHOUT_CLASSIFICATION	1.8218620612846237E-5	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999904954360103	WITHOUT_CLASSIFICATION	9.50456398968068E-6	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999613755854972	WITHOUT_CLASSIFICATION	3.8624414502824474E-5	DEFECT
end of variable scope	WITHOUT_CLASSIFICATION	0.9999998794866489	WITHOUT_CLASSIFICATION	1.2051335112039763E-7	DEFECT
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999971891645587	WITHOUT_CLASSIFICATION	2.8108354413115438E-6	DEFECT
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999984356448668	WITHOUT_CLASSIFICATION	1.5643551331069334E-6	DEFECT
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999977608624072	WITHOUT_CLASSIFICATION	2.2391375928336904E-6	DEFECT
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999813448763183	WITHOUT_CLASSIFICATION	1.8655123681659383E-5	DEFECT
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999481522389	WITHOUT_CLASSIFICATION	5.184776114752721E-8	DEFECT
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999997769209897	WITHOUT_CLASSIFICATION	2.230790102140081E-7	DEFECT
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999995395096709	WITHOUT_CLASSIFICATION	4.6049032905141706E-7	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9998971996352202	WITHOUT_CLASSIFICATION	1.0280036477975011E-4	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9998971996352202	WITHOUT_CLASSIFICATION	1.0280036477975011E-4	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999981379164871	WITHOUT_CLASSIFICATION	1.8620835129631388E-6	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999981379164871	WITHOUT_CLASSIFICATION	1.8620835129631388E-6	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9998880491658995	WITHOUT_CLASSIFICATION	1.1195083410048044E-4	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9998880491658995	WITHOUT_CLASSIFICATION	1.1195083410048044E-4	DEFECT
store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999998556258655	WITHOUT_CLASSIFICATION	1.4437413459028284E-7	DEFECT
if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999997926397005	WITHOUT_CLASSIFICATION	2.0736029938350843E-7	DEFECT
fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999891826326843	WITHOUT_CLASSIFICATION	1.0817367315707564E-5	DEFECT
default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999946533201227	WITHOUT_CLASSIFICATION	5.3466798772716415E-6	DEFECT
store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999989254170988	WITHOUT_CLASSIFICATION	1.0745829012379635E-6	DEFECT
store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999979129606089	WITHOUT_CLASSIFICATION	2.0870393910460586E-6	DEFECT
in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.999554446088569	WITHOUT_CLASSIFICATION	4.4555391143102E-4	DEFECT
no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.999999994890406	WITHOUT_CLASSIFICATION	5.10959397818304E-9	DEFECT
for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.999998681441945	WITHOUT_CLASSIFICATION	1.3185580550130216E-6	DEFECT
set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999999222466041	WITHOUT_CLASSIFICATION	7.775339591984819E-8	DEFECT
if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999998911898715	WITHOUT_CLASSIFICATION	1.088101284217096E-7	DEFECT
verify the class	WITHOUT_CLASSIFICATION	0.9999984642556669	WITHOUT_CLASSIFICATION	1.5357443332129858E-6	DEFECT
create dir if necessary	WITHOUT_CLASSIFICATION	0.9999995140173644	WITHOUT_CLASSIFICATION	4.859826355868846E-7	DEFECT
Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999995222971132	WITHOUT_CLASSIFICATION	4.777028868660527E-7	DEFECT
add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999996697667035	WITHOUT_CLASSIFICATION	3.302332964277418E-7	DEFECT
thread context	WITHOUT_CLASSIFICATION	0.9999985506783319	WITHOUT_CLASSIFICATION	1.4493216680094407E-6	DEFECT
line number	WITHOUT_CLASSIFICATION	0.9999924703639788	WITHOUT_CLASSIFICATION	7.5296360212985935E-6	DEFECT
invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999999026426039	WITHOUT_CLASSIFICATION	9.735739607418365E-8	DEFECT
load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.99999946317276	WITHOUT_CLASSIFICATION	5.368272399318048E-7	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999613755854972	WITHOUT_CLASSIFICATION	3.8624414502824474E-5	DEFECT
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999971891645587	WITHOUT_CLASSIFICATION	2.8108354413115438E-6	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998558395207193	WITHOUT_CLASSIFICATION	1.4416047928075425E-4	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999780363160254	WITHOUT_CLASSIFICATION	2.1963683974522425E-5	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999780363160254	WITHOUT_CLASSIFICATION	2.1963683974522425E-5	DEFECT
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999995395096709	WITHOUT_CLASSIFICATION	4.6049032905141706E-7	DEFECT
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9998971996352202	WITHOUT_CLASSIFICATION	1.0280036477975011E-4	DEFECT
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999981379164871	WITHOUT_CLASSIFICATION	1.8620835129631388E-6	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9998880491658995	WITHOUT_CLASSIFICATION	1.1195083410048044E-4	DEFECT
add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999988250565518	WITHOUT_CLASSIFICATION	1.1749434481626543E-6	DEFECT
add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9980872480175035	WITHOUT_CLASSIFICATION	0.001912751982496579	DEFECT
construct static scope list of names	WITHOUT_CLASSIFICATION	0.999999997174297	WITHOUT_CLASSIFICATION	2.825702947926667E-9	DEFECT
JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9736685198303335	WITHOUT_CLASSIFICATION	0.026331480169666473	DEFECT
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999982808601943	WITHOUT_CLASSIFICATION	1.7191398056896098E-6	DEFECT
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999982808601943	WITHOUT_CLASSIFICATION	1.7191398056896098E-6	DEFECT
lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999991830137267	WITHOUT_CLASSIFICATION	8.169862732481849E-7	DEFECT
boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999997914053619	WITHOUT_CLASSIFICATION	2.0859463815524775E-7	DEFECT
invoke static __file__	WITHOUT_CLASSIFICATION	0.9999998901937205	WITHOUT_CLASSIFICATION	1.0980627942487072E-7	DEFECT
exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999996008192995	WITHOUT_CLASSIFICATION	3.9918070051420544E-7	DEFECT
declare the field	WITHOUT_CLASSIFICATION	0.9999997895291077	WITHOUT_CLASSIFICATION	2.1047089214610745E-7	DEFECT
declare the field	WITHOUT_CLASSIFICATION	0.9999997895291077	WITHOUT_CLASSIFICATION	2.1047089214610745E-7	DEFECT
not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999999274978334	WITHOUT_CLASSIFICATION	7.250216665417985E-8	DEFECT
normal closure	WITHOUT_CLASSIFICATION	0.9999999386525843	WITHOUT_CLASSIFICATION	6.134741565688101E-8	DEFECT
end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999997608878793	WITHOUT_CLASSIFICATION	2.3911212063408086E-7	DEFECT
we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999312412570552	WITHOUT_CLASSIFICATION	6.875874294472513E-5	DEFECT
handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999997918486971	WITHOUT_CLASSIFICATION	2.0815130287671677E-7	DEFECT
jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.999998884456468	WITHOUT_CLASSIFICATION	1.1155435320606726E-6	DEFECT
Ruby name	WITHOUT_CLASSIFICATION	0.9999945550614807	WITHOUT_CLASSIFICATION	5.444938519313471E-6	DEFECT
Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999994480845468	WITHOUT_CLASSIFICATION	5.519154532052258E-7	DEFECT
Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9991480953075493	WITHOUT_CLASSIFICATION	8.519046924507694E-4	DEFECT
We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.999987190577979	WITHOUT_CLASSIFICATION	1.2809422021006734E-5	DEFECT
Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999539312488002	WITHOUT_CLASSIFICATION	4.606875119986508E-5	DEFECT
Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999938150451583	WITHOUT_CLASSIFICATION	6.184954841760599E-6	DEFECT
NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999999290234	WITHOUT_CLASSIFICATION	7.097664750872605E-11	DEFECT
Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999997500855788	WITHOUT_CLASSIFICATION	2.499144211591225E-7	DEFECT
Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999990958458678	WITHOUT_CLASSIFICATION	9.04154132262188E-7	DEFECT
_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999998188330064	WITHOUT_CLASSIFICATION	1.811669935905526E-7	DEFECT
List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999975400558057	WITHOUT_CLASSIFICATION	2.459944194373862E-6	DEFECT
Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999913205403631	WITHOUT_CLASSIFICATION	8.679459636853355E-6	DEFECT
Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999998449073293	WITHOUT_CLASSIFICATION	1.5509267057818055E-7	DEFECT
get "self"	WITHOUT_CLASSIFICATION	0.9999997659586545	WITHOUT_CLASSIFICATION	2.3404134543700376E-7	DEFECT
variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999945274287738	WITHOUT_CLASSIFICATION	5.4725712261529694E-6	DEFECT
inline script	WITHOUT_CLASSIFICATION	0.9999954863571713	WITHOUT_CLASSIFICATION	4.513642828739827E-6	DEFECT
inline script	WITHOUT_CLASSIFICATION	0.9999954863571713	WITHOUT_CLASSIFICATION	4.513642828739827E-6	DEFECT
This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999796709727498	WITHOUT_CLASSIFICATION	2.0329027250325424E-5	DEFECT
Build the class body!	WITHOUT_CLASSIFICATION	0.9997835511719755	WITHOUT_CLASSIFICATION	2.164488280245761E-4	DEFECT
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999971237315283	WITHOUT_CLASSIFICATION	2.8762684716875082E-6	DEFECT
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999971237315283	WITHOUT_CLASSIFICATION	2.8762684716875082E-6	DEFECT
SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9866000168640457	DEFECT	0.013399983135954302	WITHOUT_CLASSIFICATION
Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999739578011887	WITHOUT_CLASSIFICATION	2.6042198811341185E-5	DEFECT
done done done done	WITHOUT_CLASSIFICATION	0.9999773946238784	WITHOUT_CLASSIFICATION	2.2605376121574632E-5	DEFECT
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999831636651092	WITHOUT_CLASSIFICATION	1.6836334890801806E-5	DEFECT
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999831636651092	WITHOUT_CLASSIFICATION	1.6836334890801806E-5	DEFECT
This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999631112882043	WITHOUT_CLASSIFICATION	3.688871179582663E-5	DEFECT
build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999997842192182	WITHOUT_CLASSIFICATION	2.1578078182996988E-7	DEFECT
build first node only and return false	WITHOUT_CLASSIFICATION	0.9999986763173053	WITHOUT_CLASSIFICATION	1.3236826947143304E-6	DEFECT
Value of the last expression in the block	WITHOUT_CLASSIFICATION	0.9999977883902471	WITHOUT_CLASSIFICATION	2.2116097528487176E-6	DEFECT
If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999991146153413	WITHOUT_CLASSIFICATION	8.85384658774076E-7	DEFECT
get the incoming case value	WITHOUT_CLASSIFICATION	0.9999982089731261	WITHOUT_CLASSIFICATION	1.7910268738625612E-6	DEFECT
the CASE instruction	WITHOUT_CLASSIFICATION	0.9999990892874007	WITHOUT_CLASSIFICATION	9.107125993700543E-7	DEFECT
lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999982644599817	WITHOUT_CLASSIFICATION	1.7355400182650807E-6	DEFECT
build each "when"	WITHOUT_CLASSIFICATION	0.9999977306214672	WITHOUT_CLASSIFICATION	2.2693785327849216E-6	DEFECT
multiple conditions for when	WITHOUT_CLASSIFICATION	0.9998119318560938	WITHOUT_CLASSIFICATION	1.8806814390620575E-4	DEFECT
build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999928370021742	WITHOUT_CLASSIFICATION	7.162997825768309E-6	DEFECT
now emit bodies	WITHOUT_CLASSIFICATION	0.9999992693565093	WITHOUT_CLASSIFICATION	7.30643490786438E-7	DEFECT
close it out	WITHOUT_CLASSIFICATION	0.9999993102127832	WITHOUT_CLASSIFICATION	6.897872168307716E-7	DEFECT
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9997613747186934	WITHOUT_CLASSIFICATION	2.3862528130658077E-4	DEFECT
Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.999990021325555	WITHOUT_CLASSIFICATION	9.978674444963341E-6	DEFECT
Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9994143997567045	WITHOUT_CLASSIFICATION	5.856002432955132E-4	DEFECT
1. Load the module first (lhs of node) 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999612494783	WITHOUT_CLASSIFICATION	3.875052172869268E-8	DEFECT
Build IR for args	WITHOUT_CLASSIFICATION	0.9999850543560844	WITHOUT_CLASSIFICATION	1.4945643915532241E-5	DEFECT
Build IR for body	WITHOUT_CLASSIFICATION	0.9998905676453222	WITHOUT_CLASSIFICATION	1.0943235467778031E-4	DEFECT
if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999222684845962	WITHOUT_CLASSIFICATION	7.773151540378728E-5	DEFECT
Instance method	WITHOUT_CLASSIFICATION	0.9999650055662641	WITHOUT_CLASSIFICATION	3.499443373591765E-5	DEFECT
Class method	WITHOUT_CLASSIFICATION	0.9999895322302996	WITHOUT_CLASSIFICATION	1.0467769700419374E-5	DEFECT
Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9998840793272323	WITHOUT_CLASSIFICATION	1.1592067276766062E-4	DEFECT
Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999654909438872	WITHOUT_CLASSIFICATION	3.4509056112880934E-5	DEFECT
Now for the rest	WITHOUT_CLASSIFICATION	0.9999989595630568	WITHOUT_CLASSIFICATION	1.0404369431078005E-6	DEFECT
Jump to 'l' if this arg is not null. If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9960880928777894	WITHOUT_CLASSIFICATION	0.003911907122210668	DEFECT
This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9984264079468519	WITHOUT_CLASSIFICATION	0.0015735920531482106	DEFECT
Create a new closure context	WITHOUT_CLASSIFICATION	0.9999994435497253	WITHOUT_CLASSIFICATION	5.564502747812939E-7	DEFECT
Build args	WITHOUT_CLASSIFICATION	0.9999976912242532	WITHOUT_CLASSIFICATION	2.308775746757732E-6	DEFECT
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999997183095549	WITHOUT_CLASSIFICATION	2.8169044515299406E-7	DEFECT
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999991311408	WITHOUT_CLASSIFICATION	8.688591870153597E-10	DEFECT
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9997613747186934	WITHOUT_CLASSIFICATION	2.3862528130658077E-4	DEFECT
Create a new closure context	WITHOUT_CLASSIFICATION	0.9999994435497253	WITHOUT_CLASSIFICATION	5.564502747812939E-7	DEFECT
Build args	WITHOUT_CLASSIFICATION	0.9999976912242532	WITHOUT_CLASSIFICATION	2.308775746757732E-6	DEFECT
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999991311408	WITHOUT_CLASSIFICATION	8.688591870153597E-10	DEFECT
Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999992028679563	WITHOUT_CLASSIFICATION	7.971320436256804E-7	DEFECT
Build the new module	WITHOUT_CLASSIFICATION	0.9999908534800354	WITHOUT_CLASSIFICATION	9.146519964702795E-6	DEFECT
Build the module body	WITHOUT_CLASSIFICATION	0.9999854819231905	WITHOUT_CLASSIFICATION	1.4518076809535793E-5	DEFECT
First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999991264969713	WITHOUT_CLASSIFICATION	8.735030287404559E-7	DEFECT
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999999413873731	WITHOUT_CLASSIFICATION	5.8612626885363044E-8	DEFECT
If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999965690876673	WITHOUT_CLASSIFICATION	3.4309123327058998E-6	DEFECT
get attr	WITHOUT_CLASSIFICATION	0.9999990881037029	WITHOUT_CLASSIFICATION	9.118962971302323E-7	DEFECT
call operator	WITHOUT_CLASSIFICATION	0.9999998254744116	WITHOUT_CLASSIFICATION	1.745255884554107E-7	DEFECT
set attr	WITHOUT_CLASSIFICATION	0.9999997593097374	WITHOUT_CLASSIFICATION	2.406902625363957E-7	DEFECT
Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9992102726236896	WITHOUT_CLASSIFICATION	7.897273763105007E-4	DEFECT
This does the assignment!	WITHOUT_CLASSIFICATION	0.9999524359519107	WITHOUT_CLASSIFICATION	4.756404808930646E-5	DEFECT
This does the assignment!	WITHOUT_CLASSIFICATION	0.9999524359519107	WITHOUT_CLASSIFICATION	4.756404808930646E-5	DEFECT
if v1 is defined and true, we are done!	WITHOUT_CLASSIFICATION	0.9999950169201138	WITHOUT_CLASSIFICATION	4.983079886226853E-6	DEFECT
build first node only and return true	WITHOUT_CLASSIFICATION	0.9999976861540844	WITHOUT_CLASSIFICATION	2.313845915658982E-6	DEFECT
build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999896587707293	WITHOUT_CLASSIFICATION	1.034122927070543E-5	DEFECT
Top-level script!	WITHOUT_CLASSIFICATION	0.9999998695113339	WITHOUT_CLASSIFICATION	1.3048866606505327E-7	DEFECT
we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999715242950364	WITHOUT_CLASSIFICATION	2.8475704963474834E-5	DEFECT
----------- Private Interface ------------	WITHOUT_CLASSIFICATION	0.9999816486689643	WITHOUT_CLASSIFICATION	1.8351331035711038E-5	DEFECT
What handles warnings	WITHOUT_CLASSIFICATION	0.9999889249947963	WITHOUT_CLASSIFICATION	1.1075005203618677E-5	DEFECT
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.99900179604802	WITHOUT_CLASSIFICATION	9.982039519799981E-4	DEFECT
For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999999859620802	WITHOUT_CLASSIFICATION	1.4037919778543313E-8	DEFECT
The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999996466333402	WITHOUT_CLASSIFICATION	3.533666597968373E-7	DEFECT
Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999997170849038	WITHOUT_CLASSIFICATION	2.8291509627096144E-7	DEFECT
Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999990857593051	WITHOUT_CLASSIFICATION	9.142406949302835E-7	DEFECT
------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.999999997532755	WITHOUT_CLASSIFICATION	2.467244923723234E-9	DEFECT
value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999998893245221	WITHOUT_CLASSIFICATION	1.1067547785265633E-7	DEFECT
alu operations	WITHOUT_CLASSIFICATION	0.9999999435677457	WITHOUT_CLASSIFICATION	5.643225429637123E-8	DEFECT
method handle, arg receive, return value, and call instructions	WITHOUT_CLASSIFICATION	0.9999997815489593	WITHOUT_CLASSIFICATION	2.1845104061610835E-7	DEFECT
closure instructions	WITHOUT_CLASSIFICATION	0.9999999711159935	WITHOUT_CLASSIFICATION	2.8884006533798484E-8	DEFECT
eval instructions	WITHOUT_CLASSIFICATION	0.999999904207217	WITHOUT_CLASSIFICATION	9.579278299393704E-8	DEFECT
def instructions	WITHOUT_CLASSIFICATION	0.9999995678567762	WITHOUT_CLASSIFICATION	4.3214322374276287E-7	DEFECT
exception instructions	WITHOUT_CLASSIFICATION	0.9999978633583555	WITHOUT_CLASSIFICATION	2.1366416444000053E-6	DEFECT
Loads	WITHOUT_CLASSIFICATION	0.9999813294459068	WITHOUT_CLASSIFICATION	1.8670554093136976E-5	DEFECT
Stores	WITHOUT_CLASSIFICATION	0.9999958269063791	WITHOUT_CLASSIFICATION	4.17309362091366E-6	DEFECT
jump and branch operations	WITHOUT_CLASSIFICATION	0.9999999867755944	WITHOUT_CLASSIFICATION	1.3224405602256815E-8	DEFECT
others	WITHOUT_CLASSIFICATION	0.9999982710954902	WITHOUT_CLASSIFICATION	1.7289045097787719E-6	DEFECT
a case/when branch	WITHOUT_CLASSIFICATION	0.9999990338579254	WITHOUT_CLASSIFICATION	9.661420745549577E-7	DEFECT
optimization guards	WITHOUT_CLASSIFICATION	0.9999986346314007	WITHOUT_CLASSIFICATION	1.3653685993655352E-6	DEFECT
By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9997686624275809	WITHOUT_CLASSIFICATION	2.3133757241904884E-4	DEFECT
Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999387892354659	WITHOUT_CLASSIFICATION	6.121076453405506E-5	DEFECT
scripts	WITHOUT_CLASSIFICATION	0.9999853010425213	WITHOUT_CLASSIFICATION	1.4698957478676616E-5	DEFECT
scripts and modules	WITHOUT_CLASSIFICATION	0.9999994177589132	WITHOUT_CLASSIFICATION	5.822410867541011E-7	DEFECT
scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999976559583803	WITHOUT_CLASSIFICATION	2.3440416197067505E-6	DEFECT
methods and closures	WITHOUT_CLASSIFICATION	0.999999699811997	WITHOUT_CLASSIFICATION	3.001880030294579E-7	DEFECT
create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999999513837665	WITHOUT_CLASSIFICATION	4.861623359867811E-8	DEFECT
create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999993850631472	WITHOUT_CLASSIFICATION	6.149368527438788E-7	DEFECT
Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999997252318507	WITHOUT_CLASSIFICATION	2.747681494209383E-7	DEFECT
Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999371750987822	WITHOUT_CLASSIFICATION	6.28249012177317E-5	DEFECT
Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999995594706749	WITHOUT_CLASSIFICATION	4.4052932508749594E-7	DEFECT
While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999978508631119	WITHOUT_CLASSIFICATION	2.1491368881187785E-6	DEFECT
Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999998784004185	WITHOUT_CLASSIFICATION	1.2159958152147596E-7	DEFECT
Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999994341982343	WITHOUT_CLASSIFICATION	5.658017657228762E-7	DEFECT
Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999163997893457	WITHOUT_CLASSIFICATION	8.360021065434301E-5	DEFECT
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999546873732085	WITHOUT_CLASSIFICATION	4.5312626791489095E-5	DEFECT
Readline	WITHOUT_CLASSIFICATION	0.9999853715751061	WITHOUT_CLASSIFICATION	1.4628424893925417E-5	DEFECT
If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999770289569555	WITHOUT_CLASSIFICATION	2.297104304451543E-5	DEFECT
Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9997148727243869	WITHOUT_CLASSIFICATION	2.8512727561318926E-4	DEFECT
If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999996617226661	WITHOUT_CLASSIFICATION	3.382773339568828E-7	DEFECT
Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999993718707808	WITHOUT_CLASSIFICATION	6.281292192051989E-7	DEFECT
If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999906814172076	WITHOUT_CLASSIFICATION	9.318582792439705E-6	DEFECT
If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999794265143553	WITHOUT_CLASSIFICATION	2.0573485644743263E-5	DEFECT
----------- Public abstract methods ----------	WITHOUT_CLASSIFICATION	0.9999995301276562	WITHOUT_CLASSIFICATION	4.6987234372073423E-7	DEFECT
----------- Public methods with a default implementation ----------	WITHOUT_CLASSIFICATION	0.9999923781933236	WITHOUT_CLASSIFICATION	7.621806676416661E-6	DEFECT
Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999997999639317	WITHOUT_CLASSIFICATION	2.0003606834993148E-7	DEFECT
If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999657694213492	WITHOUT_CLASSIFICATION	3.423057865086386E-5	DEFECT
--------- Protected fields/methods below ---------	WITHOUT_CLASSIFICATION	0.9999983139234961	WITHOUT_CLASSIFICATION	1.6860765038727474E-6	DEFECT
Dataflow problem with which this node is associated CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999984358970785	WITHOUT_CLASSIFICATION	1.5641029214656141E-6	DEFECT
-------------- Public fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9999980757173739	WITHOUT_CLASSIFICATION	1.9242826260619865E-6	DEFECT
------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.999998592988472	WITHOUT_CLASSIFICATION	1.4070115278643523E-6	DEFECT
------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.999997909892307	WITHOUT_CLASSIFICATION	2.0901076929566433E-6	DEFECT
Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.	WITHOUT_CLASSIFICATION	0.9929583991556951	WITHOUT_CLASSIFICATION	0.007041600844304954	DEFECT
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9999283525461025	WITHOUT_CLASSIFICATION	7.164745389754685E-5	DEFECT
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9999283525461025	WITHOUT_CLASSIFICATION	7.164745389754685E-5	DEFECT
-------------- Packaged/protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9999990960455319	WITHOUT_CLASSIFICATION	9.03954467968151E-7	DEFECT
We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999982784877399	WITHOUT_CLASSIFICATION	1.7215122600631651E-6	DEFECT
-------------- Protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9999960212822896	WITHOUT_CLASSIFICATION	3.978717710404129E-6	DEFECT
-------------- Private fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9999929546552738	WITHOUT_CLASSIFICATION	7.04534472616119E-6	DEFECT
Initialize all flow graph nodes	WITHOUT_CLASSIFICATION	0.9999991208900956	WITHOUT_CLASSIFICATION	8.791099045216882E-7	DEFECT
Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses	WITHOUT_CLASSIFICATION	0.9999961228739751	WITHOUT_CLASSIFICATION	3.877126024893337E-6	DEFECT
PUBLIC INTERFACE	WITHOUT_CLASSIFICATION	0.999957187347283	WITHOUT_CLASSIFICATION	4.281265271702261E-5	DEFECT
Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999997688549391	WITHOUT_CLASSIFICATION	2.3114506078832126E-7	DEFECT
start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999999502110528	WITHOUT_CLASSIFICATION	4.9788947252868825E-8	DEFECT
switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.99999999978291	WITHOUT_CLASSIFICATION	2.1708999470393438E-10	DEFECT
----------- Public Interface ------------	WITHOUT_CLASSIFICATION	0.9999970612413244	WITHOUT_CLASSIFICATION	2.938758675654514E-6	DEFECT
class or module	WITHOUT_CLASSIFICATION	0.9999966449656339	WITHOUT_CLASSIFICATION	3.3550343659855805E-6	DEFECT
OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999987770559404	WITHOUT_CLASSIFICATION	1.2229440595871116E-6	DEFECT
Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.999999956977101	WITHOUT_CLASSIFICATION	4.3022899007824737E-8	DEFECT
v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999982747708239	WITHOUT_CLASSIFICATION	1.7252291759930316E-6	DEFECT
IN is the same!	WITHOUT_CLASSIFICATION	0.9999528840176409	WITHOUT_CLASSIFICATION	4.7115982358979466E-5	DEFECT
IN changed!	WITHOUT_CLASSIFICATION	0.9999977254441371	WITHOUT_CLASSIFICATION	2.2745558628570203E-6	DEFECT
---------- Protected / package fields, methods ---------	WITHOUT_CLASSIFICATION	0.9999978275440373	WITHOUT_CLASSIFICATION	2.1724559626384465E-6	DEFECT
If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9990666399613168	WITHOUT_CLASSIFICATION	9.33360038683089E-4	DEFECT
Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999998935558189	WITHOUT_CLASSIFICATION	1.0644418118190286E-7	DEFECT
---------- Private fields, methods ---------	WITHOUT_CLASSIFICATION	0.9999888341686702	WITHOUT_CLASSIFICATION	1.1165831329683526E-5	DEFECT
Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets	WITHOUT_CLASSIFICATION	0.9999999091208148	WITHOUT_CLASSIFICATION	9.087918522188454E-8	DEFECT
Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999992851771765	WITHOUT_CLASSIFICATION	7.148228234127038E-7	DEFECT
Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes	WITHOUT_CLASSIFICATION	0.9999999923628686	WITHOUT_CLASSIFICATION	7.637131329304977E-9	DEFECT
--------- "Abstract"/"please-override" methods ---------	WITHOUT_CLASSIFICATION	0.9999995636376244	WITHOUT_CLASSIFICATION	4.36362375603228E-7	DEFECT
Array of all operands for this instruction	WITHOUT_CLASSIFICATION	0.999999287073287	WITHOUT_CLASSIFICATION	7.129267129401392E-7	DEFECT
List of all variables used by all operands of this instruction	WITHOUT_CLASSIFICATION	0.9999999969063715	WITHOUT_CLASSIFICATION	3.093628389803973E-9	DEFECT
This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify	WITHOUT_CLASSIFICATION	0.9999963074453083	WITHOUT_CLASSIFICATION	3.6925546916128322E-6	DEFECT
By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999999303365973	WITHOUT_CLASSIFICATION	6.966340276916798E-8	DEFECT
Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.99999178829231	WITHOUT_CLASSIFICATION	8.211707690146815E-6	DEFECT
By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999944657545171	WITHOUT_CLASSIFICATION	5.534245482780596E-6	DEFECT
If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999950852267722	WITHOUT_CLASSIFICATION	4.91477322776258E-6	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999999095511881	WITHOUT_CLASSIFICATION	9.044881187890601E-8	DEFECT
Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999996576766202	WITHOUT_CLASSIFICATION	3.423233796506462E-7	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999999095511881	WITHOUT_CLASSIFICATION	9.044881187890601E-8	DEFECT
You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999838952548794	WITHOUT_CLASSIFICATION	1.6104745120681715E-5	DEFECT
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998474765150358	WITHOUT_CLASSIFICATION	1.5252348496415892E-4	DEFECT
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998474765150358	WITHOUT_CLASSIFICATION	1.5252348496415892E-4	DEFECT
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998474765150358	WITHOUT_CLASSIFICATION	1.5252348496415892E-4	DEFECT
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999998357136346	WITHOUT_CLASSIFICATION	1.6428636548286372E-7	DEFECT
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999998357136346	WITHOUT_CLASSIFICATION	1.6428636548286372E-7	DEFECT
The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value	WITHOUT_CLASSIFICATION	0.999999954074082	WITHOUT_CLASSIFICATION	4.592591787693755E-8	DEFECT
Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.999946540477616	WITHOUT_CLASSIFICATION	5.3459522383998963E-5	DEFECT
Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.99999987164942	WITHOUT_CLASSIFICATION	1.2835058013389968E-7	DEFECT
The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999999542581121	WITHOUT_CLASSIFICATION	4.574188798104098E-8	DEFECT
Nothing to do by default	WITHOUT_CLASSIFICATION	0.9999992439012366	WITHOUT_CLASSIFICATION	7.56098763377714E-7	DEFECT
Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999998657187403	WITHOUT_CLASSIFICATION	1.34281259702323E-7	DEFECT
Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999995827578532	WITHOUT_CLASSIFICATION	4.172421467921291E-7	DEFECT
ignore	WITHOUT_CLASSIFICATION	0.9999989437683878	WITHOUT_CLASSIFICATION	1.0562316121611286E-6	DEFECT
Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id	WITHOUT_CLASSIFICATION	0.9999999887756581	WITHOUT_CLASSIFICATION	1.1224341801797086E-8	DEFECT
Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999995112897709	WITHOUT_CLASSIFICATION	4.887102290296075E-7	DEFECT
Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999979142544365	WITHOUT_CLASSIFICATION	2.0857455635433153E-6	DEFECT
currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9997649225429633	WITHOUT_CLASSIFICATION	2.350774570366343E-4	DEFECT
Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999735504309583	WITHOUT_CLASSIFICATION	2.644956904182315E-5	DEFECT
root-level logic	WITHOUT_CLASSIFICATION	0.9999992225862318	WITHOUT_CLASSIFICATION	7.774137683523952E-7	DEFECT
root-level methods	WITHOUT_CLASSIFICATION	0.9999993730755224	WITHOUT_CLASSIFICATION	6.269244776392544E-7	DEFECT
root-level classes	WITHOUT_CLASSIFICATION	0.9999997896647155	WITHOUT_CLASSIFICATION	2.1033528456465435E-7	DEFECT
case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;	WITHOUT_CLASSIFICATION	0.9999559093178135	WITHOUT_CLASSIFICATION	4.4090682186495485E-5	DEFECT
load receiver	WITHOUT_CLASSIFICATION	0.9999989043372375	WITHOUT_CLASSIFICATION	1.0956627625366949E-6	DEFECT
load receiver	WITHOUT_CLASSIFICATION	0.9999989043372375	WITHOUT_CLASSIFICATION	1.0956627625366949E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
load arguments	WITHOUT_CLASSIFICATION	0.9999997975176127	WITHOUT_CLASSIFICATION	2.024823874303103E-7	DEFECT
load arguments	WITHOUT_CLASSIFICATION	0.9999997975176127	WITHOUT_CLASSIFICATION	2.024823874303103E-7	DEFECT
case 4: case 5:	WITHOUT_CLASSIFICATION	0.9998395697882184	WITHOUT_CLASSIFICATION	1.604302117815394E-4	DEFECT
Object[] args	WITHOUT_CLASSIFICATION	0.9999995788900536	WITHOUT_CLASSIFICATION	4.21109946337187E-7	DEFECT
load handle	WITHOUT_CLASSIFICATION	0.99999897175915	WITHOUT_CLASSIFICATION	1.0282408500417705E-6	DEFECT
args array	WITHOUT_CLASSIFICATION	0.9999968218266135	WITHOUT_CLASSIFICATION	3.178173386361859E-6	DEFECT
i'th argument	WITHOUT_CLASSIFICATION	0.9999990084351431	WITHOUT_CLASSIFICATION	9.91564856835122E-7	DEFECT
invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999993775296109	WITHOUT_CLASSIFICATION	6.224703891529654E-7	DEFECT
Object arg0	WITHOUT_CLASSIFICATION	0.9999980005002149	WITHOUT_CLASSIFICATION	1.9994997851939964E-6	DEFECT
useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.999977907897053	WITHOUT_CLASSIFICATION	2.2092102947014646E-5	DEFECT
No editing before startPos	WITHOUT_CLASSIFICATION	0.9999998250299855	WITHOUT_CLASSIFICATION	1.7497001451475493E-7	DEFECT
no silly ticks!	WITHOUT_CLASSIFICATION	0.9999942465063205	WITHOUT_CLASSIFICATION	5.753493679425893E-6	DEFECT
no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999990207657464	WITHOUT_CLASSIFICATION	9.79234253587883E-7	DEFECT
at end	WITHOUT_CLASSIFICATION	0.9999903727923023	WITHOUT_CLASSIFICATION	9.62720769766729E-6	DEFECT
undo check	WITHOUT_CLASSIFICATION	0.9999999271185379	WITHOUT_CLASSIFICATION	7.288146212866698E-8	DEFECT
Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999979840760019	WITHOUT_CLASSIFICATION	2.015923998001037E-6	DEFECT
ignore	WITHOUT_CLASSIFICATION	0.9999989437683878	WITHOUT_CLASSIFICATION	1.0562316121611286E-6	DEFECT
\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9998332700049677	WITHOUT_CLASSIFICATION	1.6672999503240945E-4	DEFECT
Assign the values.	WITHOUT_CLASSIFICATION	0.9999974623527168	WITHOUT_CLASSIFICATION	2.5376472832320885E-6	DEFECT
no check for ''	WITHOUT_CLASSIFICATION	0.9999999056722898	WITHOUT_CLASSIFICATION	9.432771010519988E-8	DEFECT
no check for ''	WITHOUT_CLASSIFICATION	0.9999999056722898	WITHOUT_CLASSIFICATION	9.432771010519988E-8	DEFECT
Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999793881417528	WITHOUT_CLASSIFICATION	2.0611858247180118E-5	DEFECT
this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999382247841965	WITHOUT_CLASSIFICATION	6.177521580344831E-5	DEFECT
no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999992405281865	WITHOUT_CLASSIFICATION	7.594718136919791E-7	DEFECT
restore position	WITHOUT_CLASSIFICATION	0.9999935647204785	WITHOUT_CLASSIFICATION	6.435279521594246E-6	DEFECT
Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations	WITHOUT_CLASSIFICATION	0.9999999879803217	WITHOUT_CLASSIFICATION	1.201967830708209E-8	DEFECT
Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999999779143057	WITHOUT_CLASSIFICATION	2.2085694378381163E-8	DEFECT
JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9996579681031164	WITHOUT_CLASSIFICATION	3.4203189688364447E-4	DEFECT
MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9995192043966293	WITHOUT_CLASSIFICATION	4.8079560337071467E-4	DEFECT
We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999968211276972	WITHOUT_CLASSIFICATION	3.178872302862067E-6	DEFECT
JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999991315231312	WITHOUT_CLASSIFICATION	8.684768687806135E-7	DEFECT
not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999669441710931	WITHOUT_CLASSIFICATION	3.305582890681049E-5	DEFECT
Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()	WITHOUT_CLASSIFICATION	0.999995227936629	WITHOUT_CLASSIFICATION	4.772063371078956E-6	DEFECT
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9259559106464491	DEFECT	0.07404408935355086	WITHOUT_CLASSIFICATION
Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999975423738157	WITHOUT_CLASSIFICATION	2.457626184328335E-6	DEFECT
clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999990416248562	WITHOUT_CLASSIFICATION	9.583751438142328E-7	DEFECT
These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999990644095301	WITHOUT_CLASSIFICATION	9.35590469877887E-7	DEFECT
Timeout module methods	WITHOUT_CLASSIFICATION	0.9999958224119878	WITHOUT_CLASSIFICATION	4.177588012252459E-6	DEFECT
Toplevel defines	WITHOUT_CLASSIFICATION	0.9999999847215773	WITHOUT_CLASSIFICATION	1.5278422681828966E-8	DEFECT
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999998281390213	WITHOUT_CLASSIFICATION	1.7186097870271688E-7	DEFECT
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999924788860105	WITHOUT_CLASSIFICATION	7.521113989520486E-6	DEFECT
if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999923071338083	WITHOUT_CLASSIFICATION	7.692866191638415E-6	DEFECT
and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999879197385267	WITHOUT_CLASSIFICATION	1.2080261473162188E-5	DEFECT
otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999955788669144	WITHOUT_CLASSIFICATION	4.42113308567253E-6	DEFECT
Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them	WITHOUT_CLASSIFICATION	0.9999999947661037	WITHOUT_CLASSIFICATION	5.233896334253491E-9	DEFECT
If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.	WITHOUT_CLASSIFICATION	0.9999986680557972	WITHOUT_CLASSIFICATION	1.3319442028130664E-6	DEFECT
NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999615380249334	WITHOUT_CLASSIFICATION	3.846197506667867E-5	DEFECT
When a length is given, read_string acts like get_bytes	WITHOUT_CLASSIFICATION	0.9978037767819818	WITHOUT_CLASSIFICATION	0.002196223218018059	DEFECT
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9952593637002733	WITHOUT_CLASSIFICATION	0.004740636299726576	DEFECT
ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.999999977429934	WITHOUT_CLASSIFICATION	2.2570066033308248E-8	DEFECT
If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9998454921381538	WITHOUT_CLASSIFICATION	1.54507861846227E-4	DEFECT
This variant of newStruct is called from StructLayoutBuilder	WITHOUT_CLASSIFICATION	0.9999752945776105	WITHOUT_CLASSIFICATION	2.470542238944232E-5	DEFECT
This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999999900179859	WITHOUT_CLASSIFICATION	9.982014019998014E-9	DEFECT
Windows is LLP64	WITHOUT_CLASSIFICATION	0.999504320595961	WITHOUT_CLASSIFICATION	4.956794040391318E-4	DEFECT
Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9935699731755698	WITHOUT_CLASSIFICATION	0.006430026824430087	DEFECT
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999999417692685	WITHOUT_CLASSIFICATION	5.823073136313044E-8	DEFECT
$blah	WITHOUT_CLASSIFICATION	0.9999707491470855	WITHOUT_CLASSIFICATION	2.9250852914587752E-5	DEFECT
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9952593637002733	WITHOUT_CLASSIFICATION	0.004740636299726576	DEFECT
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9999915638518705	WITHOUT_CLASSIFICATION	8.436148129413856E-6	DEFECT
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999999417692685	WITHOUT_CLASSIFICATION	5.823073136313044E-8	DEFECT
Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed	WITHOUT_CLASSIFICATION	0.9999928458000247	WITHOUT_CLASSIFICATION	7.154199975256943E-6	DEFECT
Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.999999957029325	WITHOUT_CLASSIFICATION	4.297067501723508E-8	DEFECT
Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999565073263	WITHOUT_CLASSIFICATION	4.34926736114605E-8	DEFECT
Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999934267022718	WITHOUT_CLASSIFICATION	6.573297728177267E-6	DEFECT
case FLOAT:	WITHOUT_CLASSIFICATION	0.9999985287245915	WITHOUT_CLASSIFICATION	1.471275408530952E-6	DEFECT
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999817328046876	WITHOUT_CLASSIFICATION	1.8267195312318564E-5	DEFECT
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999817328046876	WITHOUT_CLASSIFICATION	1.8267195312318564E-5	DEFECT
No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999998324868139	WITHOUT_CLASSIFICATION	1.6751318609542775E-7	DEFECT
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999650928469	WITHOUT_CLASSIFICATION	3.490715301715603E-8	DEFECT
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999987281452832	WITHOUT_CLASSIFICATION	1.2718547168108074E-6	DEFECT
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999987281452832	WITHOUT_CLASSIFICATION	1.2718547168108074E-6	DEFECT
If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.	WITHOUT_CLASSIFICATION	0.9999677731243877	WITHOUT_CLASSIFICATION	3.222687561230017E-5	DEFECT
------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9995898849194551	WITHOUT_CLASSIFICATION	4.101150805449335E-4	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.9999687840552548	WITHOUT_CLASSIFICATION	3.121594474520971E-5	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.9999687840552548	WITHOUT_CLASSIFICATION	3.121594474520971E-5	DEFECT
RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9998645655884317	WITHOUT_CLASSIFICATION	1.3543441156827073E-4	DEFECT
line 321	WITHOUT_CLASSIFICATION	0.9999923758364488	WITHOUT_CLASSIFICATION	7.6241635510942504E-6	DEFECT
Set up for potentially fast-int operations	WITHOUT_CLASSIFICATION	0.9999996240732851	WITHOUT_CLASSIFICATION	3.759267149027746E-7	DEFECT
Hook up the MemoryPointer class if its not already there	WITHOUT_CLASSIFICATION	0.9999994268024824	WITHOUT_CLASSIFICATION	5.731975176038271E-7	DEFECT
This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999986641918639	WITHOUT_CLASSIFICATION	1.3358081360635735E-6	DEFECT
no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999418035852679	WITHOUT_CLASSIFICATION	5.8196414732233E-5	DEFECT
Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999917400429184	WITHOUT_CLASSIFICATION	8.259957081646288E-6	DEFECT
There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.999997934807817	WITHOUT_CLASSIFICATION	2.0651921829589755E-6	DEFECT
RubyIPSocket	WITHOUT_CLASSIFICATION	0.9998802374505082	WITHOUT_CLASSIFICATION	1.1976254949182987E-4	DEFECT
host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999996495075193	WITHOUT_CLASSIFICATION	3.5049248077051263E-7	DEFECT
host and port given	WITHOUT_CLASSIFICATION	0.999998621896826	WITHOUT_CLASSIFICATION	1.3781031739721295E-6	DEFECT
RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999007831744382	WITHOUT_CLASSIFICATION	9.921682556184104E-5	DEFECT
By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999958271835406	WITHOUT_CLASSIFICATION	4.172816459390042E-6	DEFECT
make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999919948770231	WITHOUT_CLASSIFICATION	8.00512297702014E-6	DEFECT
continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999992042342364	WITHOUT_CLASSIFICATION	7.957657635252017E-7	DEFECT
recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999987040105773	WITHOUT_CLASSIFICATION	1.2959894226284482E-6	DEFECT
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9997823575698167	WITHOUT_CLASSIFICATION	2.1764243018336402E-4	DEFECT
RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999817799849267	WITHOUT_CLASSIFICATION	1.8220015073338365E-5	DEFECT
we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999905621696763	WITHOUT_CLASSIFICATION	9.437830323736445E-6	DEFECT
mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999477646750727	WITHOUT_CLASSIFICATION	5.2235324927321225E-5	DEFECT
constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999995953785202	WITHOUT_CLASSIFICATION	4.046214798435356E-7	DEFECT
More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999990794301463	WITHOUT_CLASSIFICATION	9.205698537520753E-7	DEFECT
normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999775578044152	WITHOUT_CLASSIFICATION	2.2442195584835175E-5	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.9999687840552548	WITHOUT_CLASSIFICATION	3.121594474520971E-5	DEFECT
255.255.255.255	WITHOUT_CLASSIFICATION	0.9989156140459853	WITHOUT_CLASSIFICATION	0.0010843859540147767	DEFECT
0.0.0.0	WITHOUT_CLASSIFICATION	0.999889285416929	WITHOUT_CLASSIFICATION	1.1071458307089792E-4	DEFECT
def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999945040188808	WITHOUT_CLASSIFICATION	5.495981119156421E-6	DEFECT
line 323	WITHOUT_CLASSIFICATION	0.9999905837748913	WITHOUT_CLASSIFICATION	9.416225108766198E-6	DEFECT
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999431613729977	WITHOUT_CLASSIFICATION	5.683862700236877E-5	DEFECT
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999431613729977	WITHOUT_CLASSIFICATION	5.683862700236877E-5	DEFECT
ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999968980928988	WITHOUT_CLASSIFICATION	3.101907101217917E-6	DEFECT
datagram, set accordingly again, AF_INET	WITHOUT_CLASSIFICATION	0.9999997850291878	WITHOUT_CLASSIFICATION	2.149708121007107E-7	DEFECT
IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999974031542245	WITHOUT_CLASSIFICATION	2.5968457755013363E-6	DEFECT
When Socket::AI_PASSIVE and host is nil, return 'any' address.	WITHOUT_CLASSIFICATION	0.9999059197954991	WITHOUT_CLASSIFICATION	9.408020450092977E-5	DEFECT
The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999790511259805	WITHOUT_CLASSIFICATION	2.0948874019423103E-5	DEFECT
RubySocket	WITHOUT_CLASSIFICATION	0.9999740406460635	WITHOUT_CLASSIFICATION	2.5959353936534083E-5	DEFECT
numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999989163793125	WITHOUT_CLASSIFICATION	1.083620687496831E-6	DEFECT
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999997433659725	WITHOUT_CLASSIFICATION	2.5663402750811957E-6	DEFECT
we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.99997034231006	WITHOUT_CLASSIFICATION	2.9657689940028456E-5	DEFECT
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999899479631	WITHOUT_CLASSIFICATION	1.0052036755563847E-8	DEFECT
no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.999999162451422	WITHOUT_CLASSIFICATION	8.375485780460885E-7	DEFECT
do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999998700186988	WITHOUT_CLASSIFICATION	1.2998130118493428E-7	DEFECT
nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999988690356091	WITHOUT_CLASSIFICATION	1.1309643908229197E-6	DEFECT
set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999899728845346	WITHOUT_CLASSIFICATION	1.00271154653926E-5	DEFECT
uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999971572311926	WITHOUT_CLASSIFICATION	2.842768807219974E-6	DEFECT
Call the thread's code	WITHOUT_CLASSIFICATION	0.9999972256473334	WITHOUT_CLASSIFICATION	2.7743526666531536E-6	DEFECT
Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999906982658708	WITHOUT_CLASSIFICATION	9.301734129124202E-6	DEFECT
restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999410807671067	WITHOUT_CLASSIFICATION	5.891923289333098E-5	DEFECT
be dead	WITHOUT_CLASSIFICATION	0.9999916984190054	WITHOUT_CLASSIFICATION	8.30158099469082E-6	DEFECT
loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9998500961899298	WITHOUT_CLASSIFICATION	1.4990381007017945E-4	DEFECT
all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999996213606572	WITHOUT_CLASSIFICATION	3.7863934280125823E-7	DEFECT
thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.999998021697778	WITHOUT_CLASSIFICATION	1.9783022220828788E-6	DEFECT
future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999999168339385	WITHOUT_CLASSIFICATION	8.316606153444854E-8	DEFECT
first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999812280619	WITHOUT_CLASSIFICATION	1.877193812841323E-8	DEFECT
then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999997286014647	WITHOUT_CLASSIFICATION	2.7139853535990434E-7	DEFECT
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999953317477673	WITHOUT_CLASSIFICATION	4.668252232600539E-6	DEFECT
Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999551960750341	WITHOUT_CLASSIFICATION	4.4803924965962294E-5	DEFECT
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999867453587478	WITHOUT_CLASSIFICATION	1.3254641252278672E-5	DEFECT
main body	WITHOUT_CLASSIFICATION	0.9999956964290763	WITHOUT_CLASSIFICATION	4.303570923696707E-6	DEFECT
return jump handling	WITHOUT_CLASSIFICATION	0.999999736177456	WITHOUT_CLASSIFICATION	2.638225440364768E-7	DEFECT
finally	WITHOUT_CLASSIFICATION	0.999969815467109	WITHOUT_CLASSIFICATION	3.0184532890966733E-5	DEFECT
return result if we're still good	WITHOUT_CLASSIFICATION	0.9999979745987597	WITHOUT_CLASSIFICATION	2.0254012403460197E-6	DEFECT
redo jump handling	WITHOUT_CLASSIFICATION	0.9999999137357596	WITHOUT_CLASSIFICATION	8.626424045169412E-8	DEFECT
clear the redo	WITHOUT_CLASSIFICATION	0.9999974576687567	WITHOUT_CLASSIFICATION	2.5423312432895757E-6	DEFECT
get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999997761033088	WITHOUT_CLASSIFICATION	2.2389669127324404E-7	DEFECT
throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999987809080224	WITHOUT_CLASSIFICATION	1.2190919775070586E-6	DEFECT
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999997775137567	WITHOUT_CLASSIFICATION	2.2248624330743988E-6	DEFECT
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999972457205255	WITHOUT_CLASSIFICATION	2.754279474418208E-6	DEFECT
No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.999999997489982	WITHOUT_CLASSIFICATION	2.5100179882798117E-9	DEFECT
actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.999998815498266	WITHOUT_CLASSIFICATION	1.1845017339383076E-6	DEFECT
actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9987775911124276	WITHOUT_CLASSIFICATION	0.0012224088875723638	DEFECT
simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999998862065221	WITHOUT_CLASSIFICATION	1.137934779540448E-7	DEFECT
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.999917226543621	WITHOUT_CLASSIFICATION	8.277345637890566E-5	DEFECT
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.999917226543621	WITHOUT_CLASSIFICATION	8.277345637890566E-5	DEFECT
normal all-rest method	WITHOUT_CLASSIFICATION	0.9999985598739098	WITHOUT_CLASSIFICATION	1.4401260902497538E-6	DEFECT
for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999810978310814	WITHOUT_CLASSIFICATION	1.8902168918684436E-5	DEFECT
promise to implement zero to N	WITHOUT_CLASSIFICATION	0.999997780884563	WITHOUT_CLASSIFICATION	2.219115436988223E-6	DEFECT
return	WITHOUT_CLASSIFICATION	0.9999966582258341	WITHOUT_CLASSIFICATION	3.3417741659269443E-6	DEFECT
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999999238124698	WITHOUT_CLASSIFICATION	7.61875301307157E-8	DEFECT
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999998521991256	WITHOUT_CLASSIFICATION	1.4780087441459566E-7	DEFECT
confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999993119730506	WITHOUT_CLASSIFICATION	6.88026949406953E-7	DEFECT
confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999995366534296	WITHOUT_CLASSIFICATION	4.6334657051185553E-7	DEFECT
Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9955025755571921	WITHOUT_CLASSIFICATION	0.004497424442807803	DEFECT
tc	WITHOUT_CLASSIFICATION	0.999913321624361	WITHOUT_CLASSIFICATION	8.667837563895462E-5	DEFECT
self name	WITHOUT_CLASSIFICATION	0.9999997128935438	WITHOUT_CLASSIFICATION	2.8710645624604183E-7	DEFECT
no args	WITHOUT_CLASSIFICATION	0.9999997958657886	WITHOUT_CLASSIFICATION	2.0413421142465448E-7	DEFECT
variable args with block	WITHOUT_CLASSIFICATION	0.9999997508968131	WITHOUT_CLASSIFICATION	2.491031868401742E-7	DEFECT
variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999998632445587	WITHOUT_CLASSIFICATION	1.3675544125626693E-7	DEFECT
zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999624445718	WITHOUT_CLASSIFICATION	3.7555428237031806E-8	DEFECT
one arg with block	WITHOUT_CLASSIFICATION	0.9999997647480345	WITHOUT_CLASSIFICATION	2.35251965527721E-7	DEFECT
one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999998655726307	WITHOUT_CLASSIFICATION	1.3442736938280058E-7	DEFECT
two args with block	WITHOUT_CLASSIFICATION	0.9999959796423424	WITHOUT_CLASSIFICATION	4.020357657603807E-6	DEFECT
two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999994585183403	WITHOUT_CLASSIFICATION	5.414816596966007E-7	DEFECT
three args with block	WITHOUT_CLASSIFICATION	0.9999967323736066	WITHOUT_CLASSIFICATION	3.2676263933468157E-6	DEFECT
three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999998889110523	WITHOUT_CLASSIFICATION	1.1108894759010116E-7	DEFECT
load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999979505043655	WITHOUT_CLASSIFICATION	2.04949563456599E-6	DEFECT
all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999998508310995	WITHOUT_CLASSIFICATION	1.4916890055257487E-7	DEFECT
all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999998186111967	WITHOUT_CLASSIFICATION	1.813888032662552E-7	DEFECT
one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999975865178	WITHOUT_CLASSIFICATION	2.4134821931000207E-8	DEFECT
two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999998814619869	WITHOUT_CLASSIFICATION	1.1853801316987767E-7	DEFECT
three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999530965079	WITHOUT_CLASSIFICATION	4.690349205342265E-8	DEFECT
load target for invocations	WITHOUT_CLASSIFICATION	0.9999999635585828	WITHOUT_CLASSIFICATION	3.644141731599724E-8	DEFECT
load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999999383274671	WITHOUT_CLASSIFICATION	6.167253290533848E-8	DEFECT
static invocation	WITHOUT_CLASSIFICATION	0.9999994796695638	WITHOUT_CLASSIFICATION	5.203304361974121E-7	DEFECT
virtual invocation	WITHOUT_CLASSIFICATION	0.9999993314043554	WITHOUT_CLASSIFICATION	6.685956446668662E-7	DEFECT
void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999997374848825	WITHOUT_CLASSIFICATION	2.6251511753879995E-7	DEFECT
normal finally and exit	WITHOUT_CLASSIFICATION	0.9999959973193701	WITHOUT_CLASSIFICATION	4.002680629905999E-6	DEFECT
promise to implement one to N	WITHOUT_CLASSIFICATION	0.999998765877926	WITHOUT_CLASSIFICATION	1.2341220739936856E-6	DEFECT
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999972457205255	WITHOUT_CLASSIFICATION	2.754279474418208E-6	DEFECT
these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999998378650482	WITHOUT_CLASSIFICATION	1.621349517081884E-7	DEFECT
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9999999497517158	WITHOUT_CLASSIFICATION	5.024828412911917E-8	DEFECT
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9999999497517158	WITHOUT_CLASSIFICATION	5.024828412911917E-8	DEFECT
singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999967351622893	WITHOUT_CLASSIFICATION	3.2648377106789476E-6	DEFECT
For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999978959109381	WITHOUT_CLASSIFICATION	2.1040890618462206E-6	DEFECT
SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999615462066092	WITHOUT_CLASSIFICATION	3.845379339089708E-5	DEFECT
never reached	WITHOUT_CLASSIFICATION	0.9999987429229138	WITHOUT_CLASSIFICATION	1.257077086140092E-6	DEFECT
promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999977070957942	WITHOUT_CLASSIFICATION	2.2929042059157786E-6	DEFECT
promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.999999340386413	WITHOUT_CLASSIFICATION	6.596135869897594E-7	DEFECT
promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999996331677429	WITHOUT_CLASSIFICATION	3.668322571011125E-7	DEFECT
promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999954359558643	WITHOUT_CLASSIFICATION	4.5640441357248675E-6	DEFECT
promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999985185935022	WITHOUT_CLASSIFICATION	1.4814064978511829E-6	DEFECT
promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.999999179844893	WITHOUT_CLASSIFICATION	8.201551070916576E-7	DEFECT
promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.99998974979915	WITHOUT_CLASSIFICATION	1.0250200849924944E-5	DEFECT
promise to implement three with block	WITHOUT_CLASSIFICATION	0.999996187559752	WITHOUT_CLASSIFICATION	3.812440247957795E-6	DEFECT
promise to implement N	WITHOUT_CLASSIFICATION	0.9999922860905673	WITHOUT_CLASSIFICATION	7.713909432702397E-6	DEFECT
DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999857095550793	WITHOUT_CLASSIFICATION	1.4290444920663289E-5	DEFECT
We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999997761044497	WITHOUT_CLASSIFICATION	2.2389555036970586E-7	DEFECT
Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.	WITHOUT_CLASSIFICATION	0.9999500792818438	WITHOUT_CLASSIFICATION	4.99207181561995E-5	DEFECT
promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999810055385654	WITHOUT_CLASSIFICATION	1.899446143467997E-5	DEFECT
promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999927998764159	WITHOUT_CLASSIFICATION	7.200123584209485E-6	DEFECT
promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999946113463348	WITHOUT_CLASSIFICATION	5.38865366513759E-6	DEFECT
promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999970166598174	WITHOUT_CLASSIFICATION	2.983340182594844E-6	DEFECT
promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999538770628357	WITHOUT_CLASSIFICATION	4.612293716435572E-5	DEFECT
promise to implement three	WITHOUT_CLASSIFICATION	0.9999908384295051	WITHOUT_CLASSIFICATION	9.161570494974489E-6	DEFECT
all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.999999559045772	WITHOUT_CLASSIFICATION	4.409542279401058E-7	DEFECT
load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999963014147021	WITHOUT_CLASSIFICATION	3.6985852979054477E-6	DEFECT
open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999919379663449	WITHOUT_CLASSIFICATION	8.062033655077682E-6	DEFECT
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999913131402777	WITHOUT_CLASSIFICATION	8.686859722310677E-6	DEFECT
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999989983615671	WITHOUT_CLASSIFICATION	1.0016384328952094E-6	DEFECT
create constructor	WITHOUT_CLASSIFICATION	0.9999999618235171	WITHOUT_CLASSIFICATION	3.817648285605651E-8	DEFECT
wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999993473092724	WITHOUT_CLASSIFICATION	6.526907274865636E-7	DEFECT
end constructor	WITHOUT_CLASSIFICATION	0.9999999255055942	WITHOUT_CLASSIFICATION	7.44944056740123E-8	DEFECT
start setup method	WITHOUT_CLASSIFICATION	0.9999995726231403	WITHOUT_CLASSIFICATION	4.2737685969890027E-7	DEFECT
set RubyClass	WITHOUT_CLASSIFICATION	0.9999962726650427	WITHOUT_CLASSIFICATION	3.727334957303111E-6	DEFECT
set Ruby	WITHOUT_CLASSIFICATION	0.9999986139980205	WITHOUT_CLASSIFICATION	1.3860019796038837E-6	DEFECT
all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999543513423159	WITHOUT_CLASSIFICATION	4.564865768407735E-5	DEFECT
try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999977712813319	WITHOUT_CLASSIFICATION	2.228718667960719E-6	DEFECT
get current context	WITHOUT_CLASSIFICATION	0.9999929732445038	WITHOUT_CLASSIFICATION	7.026755496236063E-6	DEFECT
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999917733253032	WITHOUT_CLASSIFICATION	8.226674696761851E-6	DEFECT
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999913131402777	WITHOUT_CLASSIFICATION	8.686859722310677E-6	DEFECT
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999989983615671	WITHOUT_CLASSIFICATION	1.0016384328952094E-6	DEFECT
create constructor	WITHOUT_CLASSIFICATION	0.9999999618235171	WITHOUT_CLASSIFICATION	3.817648285605651E-8	DEFECT
end constructor	WITHOUT_CLASSIFICATION	0.9999999255055942	WITHOUT_CLASSIFICATION	7.44944056740123E-8	DEFECT
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9959233011497668	WITHOUT_CLASSIFICATION	0.00407669885023315	DEFECT
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999997703333214	WITHOUT_CLASSIFICATION	2.2966667859177392E-7	DEFECT
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999966782993539	WITHOUT_CLASSIFICATION	3.3217006460945034E-6	DEFECT
load null block	WITHOUT_CLASSIFICATION	0.9999947195798058	WITHOUT_CLASSIFICATION	5.280420194221842E-6	DEFECT
invoke method	WITHOUT_CLASSIFICATION	0.9998584692599226	WITHOUT_CLASSIFICATION	1.4153074007729625E-4	DEFECT
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999893611081654	WITHOUT_CLASSIFICATION	1.0638891834580825E-5	DEFECT
end setup method	WITHOUT_CLASSIFICATION	0.9999952750405547	WITHOUT_CLASSIFICATION	4.724959445278973E-6	DEFECT
end class	WITHOUT_CLASSIFICATION	0.9999964087407399	WITHOUT_CLASSIFICATION	3.5912592602230812E-6	DEFECT
create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999997170188328	WITHOUT_CLASSIFICATION	2.8298116716356387E-7	DEFECT
store the wrapper	WITHOUT_CLASSIFICATION	0.9999993242439338	WITHOUT_CLASSIFICATION	6.757560662761033E-7	DEFECT
prepare temp locals	WITHOUT_CLASSIFICATION	0.9999986868623684	WITHOUT_CLASSIFICATION	1.3131376316469972E-6	DEFECT
Try to look up field for simple name get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999999622817916	WITHOUT_CLASSIFICATION	3.7718208503075215E-8	DEFECT
field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999896995517994	WITHOUT_CLASSIFICATION	1.0300448200564463E-5	DEFECT
try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999999132098459	WITHOUT_CLASSIFICATION	8.67901539832731E-8	DEFECT
store it	WITHOUT_CLASSIFICATION	0.9999995827222753	WITHOUT_CLASSIFICATION	4.1727772479577045E-7	DEFECT
end of try block	WITHOUT_CLASSIFICATION	0.9999988803241253	WITHOUT_CLASSIFICATION	1.1196758747871168E-6	DEFECT
finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999423621057	WITHOUT_CLASSIFICATION	5.763789434855164E-8	DEFECT
exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999959406825372	WITHOUT_CLASSIFICATION	4.059317462837665E-6	DEFECT
re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999983834049283	WITHOUT_CLASSIFICATION	1.6165950716374676E-6	DEFECT
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999917733253032	WITHOUT_CLASSIFICATION	8.226674696761851E-6	DEFECT
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999997703333214	WITHOUT_CLASSIFICATION	2.2966667859177392E-7	DEFECT
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999966782993539	WITHOUT_CLASSIFICATION	3.3217006460945034E-6	DEFECT
invoke method	WITHOUT_CLASSIFICATION	0.9998584692599226	WITHOUT_CLASSIFICATION	1.4153074007729625E-4	DEFECT
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999893611081654	WITHOUT_CLASSIFICATION	1.0638891834580825E-5	DEFECT
end setup method	WITHOUT_CLASSIFICATION	0.9999952750405547	WITHOUT_CLASSIFICATION	4.724959445278973E-6	DEFECT
end class	WITHOUT_CLASSIFICATION	0.9999964087407399	WITHOUT_CLASSIFICATION	3.5912592602230812E-6	DEFECT
create the class	WITHOUT_CLASSIFICATION	0.9999987057053685	WITHOUT_CLASSIFICATION	1.2942946314036209E-6	DEFECT
method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9996259184376267	WITHOUT_CLASSIFICATION	3.7408156237334197E-4	DEFECT
perform the dispatch	WITHOUT_CLASSIFICATION	0.9999998286916305	WITHOUT_CLASSIFICATION	1.7130836956765695E-7	DEFECT
try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999305038618	WITHOUT_CLASSIFICATION	6.949613826503788E-8	DEFECT
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9998738354576616	WITHOUT_CLASSIFICATION	1.2616454233840594E-4	DEFECT
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9998738354576616	WITHOUT_CLASSIFICATION	1.2616454233840594E-4	DEFECT
setup the class	WITHOUT_CLASSIFICATION	0.9999940464309504	WITHOUT_CLASSIFICATION	5.953569049626217E-6	DEFECT
now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999999771663329	WITHOUT_CLASSIFICATION	2.2833667072960875E-8	DEFECT
do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999975715486589	WITHOUT_CLASSIFICATION	2.4284513410763415E-6	DEFECT
probably a primitive	WITHOUT_CLASSIFICATION	0.9999942858931605	WITHOUT_CLASSIFICATION	5.714106839511132E-6	DEFECT
interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999999762338435	WITHOUT_CLASSIFICATION	2.3766156475516686E-8	DEFECT
construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999993257516492	WITHOUT_CLASSIFICATION	6.74248350877943E-7	DEFECT
set the full name	WITHOUT_CLASSIFICATION	0.9999991203036179	WITHOUT_CLASSIFICATION	8.796963821988403E-7	DEFECT
include all interfaces	WITHOUT_CLASSIFICATION	0.9999886926905468	WITHOUT_CLASSIFICATION	1.1307309453199026E-5	DEFECT
if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999874754808044	WITHOUT_CLASSIFICATION	1.2524519195602078E-5	DEFECT
add array construction methods	WITHOUT_CLASSIFICATION	0.9999993779274728	WITHOUT_CLASSIFICATION	6.220725271451687E-7	DEFECT
add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999996819031699	WITHOUT_CLASSIFICATION	3.180968300981616E-7	DEFECT
add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999960228649685	WITHOUT_CLASSIFICATION	3.97713503148236E-6	DEFECT
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999642987618715	WITHOUT_CLASSIFICATION	3.5701238128557186E-5	DEFECT
too much array creation!	WITHOUT_CLASSIFICATION	0.9999989752290852	WITHOUT_CLASSIFICATION	1.0247709147035075E-6	DEFECT
only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999995538729399	WITHOUT_CLASSIFICATION	4.4612706008786354E-7	DEFECT
add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999991615061917	WITHOUT_CLASSIFICATION	8.384938084049751E-7	DEFECT
add all static variables	WITHOUT_CLASSIFICATION	0.9999999526580463	WITHOUT_CLASSIFICATION	4.734195371512863E-8	DEFECT
only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999640133314	WITHOUT_CLASSIFICATION	3.5986668736702866E-8	DEFECT
looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.999991389641578	WITHOUT_CLASSIFICATION	8.610358422077215E-6	DEFECT
NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.	WITHOUT_CLASSIFICATION	0.999999980904408	WITHOUT_CLASSIFICATION	1.909559205646216E-8	DEFECT
TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive	WITHOUT_CLASSIFICATION	0.9999701137946518	WITHOUT_CLASSIFICATION	2.9886205348122507E-5	DEFECT
long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999994168638379	WITHOUT_CLASSIFICATION	5.831361620708936E-7	DEFECT
double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999426342014	WITHOUT_CLASSIFICATION	5.736579844864978E-8	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9940788027560385	WITHOUT_CLASSIFICATION	0.005921197243961463	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9999981752811189	WITHOUT_CLASSIFICATION	1.824718881032256E-6	DEFECT
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999972120809618	WITHOUT_CLASSIFICATION	2.7879190380368945E-6	DEFECT
we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999804618693212	WITHOUT_CLASSIFICATION	1.9538130678793617E-5	DEFECT
If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9998827111600228	WITHOUT_CLASSIFICATION	1.1728883997720204E-4	DEFECT
line 326	WITHOUT_CLASSIFICATION	0.9999874626551515	WITHOUT_CLASSIFICATION	1.2537344848593238E-5	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9999981752811189	WITHOUT_CLASSIFICATION	1.824718881032256E-6	DEFECT
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999972120809618	WITHOUT_CLASSIFICATION	2.7879190380368945E-6	DEFECT
too much array creation!	WITHOUT_CLASSIFICATION	0.9999989752290852	WITHOUT_CLASSIFICATION	1.0247709147035075E-6	DEFECT
construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999995798622358	WITHOUT_CLASSIFICATION	4.201377641880301E-7	DEFECT
Get map of all fields we want to define.	WITHOUT_CLASSIFICATION	0.9999993653811424	WITHOUT_CLASSIFICATION	6.346188575604723E-7	DEFECT
Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9994879732861759	WITHOUT_CLASSIFICATION	5.120267138241734E-4	DEFECT
Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999559069312385	WITHOUT_CLASSIFICATION	4.409306876156391E-5	DEFECT
We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999999988254178	WITHOUT_CLASSIFICATION	1.1745822144964308E-9	DEFECT
dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999977139408506	WITHOUT_CLASSIFICATION	2.286059149376162E-6	DEFECT
initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999951874226441	WITHOUT_CLASSIFICATION	4.812577355933739E-6	DEFECT
initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999999052493331	WITHOUT_CLASSIFICATION	9.47506668000252E-8	DEFECT
not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.993060740368245	WITHOUT_CLASSIFICATION	0.006939259631755102	DEFECT
setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999598280904695	WITHOUT_CLASSIFICATION	4.0171909530508965E-5	DEFECT
First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9996244212758388	WITHOUT_CLASSIFICATION	3.7557872416116804E-4	DEFECT
list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999989267253957	WITHOUT_CLASSIFICATION	1.073274604280493E-6	DEFECT
We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999991749461012	WITHOUT_CLASSIFICATION	8.250538988826317E-7	DEFECT
The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999996101321977	WITHOUT_CLASSIFICATION	3.898678022985097E-7	DEFECT
Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999933285703373	WITHOUT_CLASSIFICATION	6.671429662807884E-6	DEFECT
jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9998758226289931	WITHOUT_CLASSIFICATION	1.2417737100682541E-4	DEFECT
Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9993860655441301	WITHOUT_CLASSIFICATION	6.139344558699194E-4	DEFECT
implement all forces implementation of all interfaces we intend for this class to implement	WITHOUT_CLASSIFICATION	0.9998081263317292	WITHOUT_CLASSIFICATION	1.918736682708065E-4	DEFECT
we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999494860369	WITHOUT_CLASSIFICATION	5.0513963118051766E-8	DEFECT
walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999916999525746	WITHOUT_CLASSIFICATION	8.300047425312736E-6	DEFECT
construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999999927165629	WITHOUT_CLASSIFICATION	7.283437092675942E-9	DEFECT
assuming the user wants a collection of interfaces that can be included together. make it so.	WITHOUT_CLASSIFICATION	0.9999862140715462	WITHOUT_CLASSIFICATION	1.3785928453769285E-5	DEFECT
not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999891939850735	WITHOUT_CLASSIFICATION	1.0806014926459977E-5	DEFECT
To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well	WITHOUT_CLASSIFICATION	0.9999999336590516	WITHOUT_CLASSIFICATION	6.634094849727153E-8	DEFECT
already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.999999994514929	WITHOUT_CLASSIFICATION	5.485071057058119E-9	DEFECT
array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999940284128652	WITHOUT_CLASSIFICATION	5.971587134724762E-6	DEFECT
keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.999997029263114	WITHOUT_CLASSIFICATION	2.970736886001346E-6	DEFECT
array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999872747883556	WITHOUT_CLASSIFICATION	1.2725211644437992E-5	DEFECT
parent.setConstant(name, proxyClass); where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999747390278326	WITHOUT_CLASSIFICATION	2.5260972167400677E-5	DEFECT
including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9995871690614777	WITHOUT_CLASSIFICATION	4.12830938522366E-4	DEFECT
add reference to interface module	WITHOUT_CLASSIFICATION	0.9999918023247858	WITHOUT_CLASSIFICATION	8.197675214215865E-6	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999998084544626	WITHOUT_CLASSIFICATION	1.9154553738266754E-7	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999998084544626	WITHOUT_CLASSIFICATION	1.9154553738266754E-7	DEFECT
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999642987618715	WITHOUT_CLASSIFICATION	3.5701238128557186E-5	DEFECT
same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999997278161249	WITHOUT_CLASSIFICATION	2.72183875079611E-7	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999999684682797	WITHOUT_CLASSIFICATION	3.153172039124783E-8	DEFECT
weakly reserved names	WITHOUT_CLASSIFICATION	0.9999957623928264	WITHOUT_CLASSIFICATION	4.2376071736137825E-6	DEFECT
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999994520237022	WITHOUT_CLASSIFICATION	5.479762977017389E-7	DEFECT
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999994520237022	WITHOUT_CLASSIFICATION	5.479762977017389E-7	DEFECT
modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999994790911539	WITHOUT_CLASSIFICATION	5.209088460873209E-7	DEFECT
if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999999977917818	WITHOUT_CLASSIFICATION	2.2082181767815674E-9	DEFECT
caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999315764	WITHOUT_CLASSIFICATION	6.842360002430369E-8	DEFECT
proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999989221288301	WITHOUT_CLASSIFICATION	1.0778711699376748E-6	DEFECT
proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999992195039233	WITHOUT_CLASSIFICATION	7.804960765834034E-7	DEFECT
readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.999999996075134	WITHOUT_CLASSIFICATION	3.924865929920647E-9	DEFECT
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999929587373548	WITHOUT_CLASSIFICATION	7.041262645199122E-6	DEFECT
Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999999826324856	WITHOUT_CLASSIFICATION	1.7367514411496098E-8	DEFECT
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999933471471695	WITHOUT_CLASSIFICATION	6.652852830565156E-6	DEFECT
Add property name aliases	WITHOUT_CLASSIFICATION	0.999999146452785	WITHOUT_CLASSIFICATION	8.535472151596933E-7	DEFECT
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999955156573341	WITHOUT_CLASSIFICATION	4.484342665899142E-6	DEFECT
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999973892590547	WITHOUT_CLASSIFICATION	2.610740945255741E-6	DEFECT
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9999584959573992	WITHOUT_CLASSIFICATION	4.150404260075468E-5	DEFECT
Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999849735620666	WITHOUT_CLASSIFICATION	1.5026437933299508E-5	DEFECT
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999982598251633	WITHOUT_CLASSIFICATION	1.7401748367397792E-6	DEFECT
something?	WITHOUT_CLASSIFICATION	0.999991115368128	WITHOUT_CLASSIFICATION	8.884631872040024E-6	DEFECT
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999129598296	WITHOUT_CLASSIFICATION	8.704017039142663E-8	DEFECT
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999129598296	WITHOUT_CLASSIFICATION	8.704017039142663E-8	DEFECT
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999978474368199	WITHOUT_CLASSIFICATION	2.152563180102208E-6	DEFECT
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999978474368199	WITHOUT_CLASSIFICATION	2.152563180102208E-6	DEFECT
create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999968460908	WITHOUT_CLASSIFICATION	3.1539092505149188E-9	DEFECT
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9998274201473459	WITHOUT_CLASSIFICATION	1.725798526541334E-4	DEFECT
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9961060616931025	WITHOUT_CLASSIFICATION	0.0038939383068976132	DEFECT
now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999999980288442	WITHOUT_CLASSIFICATION	1.9711558282772416E-9	DEFECT
old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999960636679511	WITHOUT_CLASSIFICATION	3.9363320488884335E-6	DEFECT
1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999863522812507	WITHOUT_CLASSIFICATION	1.3647718749203002E-5	DEFECT
double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999999876018286	WITHOUT_CLASSIFICATION	1.2398171382678472E-8	DEFECT
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999973892590547	WITHOUT_CLASSIFICATION	2.610740945255741E-6	DEFECT
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9999584959573992	WITHOUT_CLASSIFICATION	4.150404260075468E-5	DEFECT
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999982598251633	WITHOUT_CLASSIFICATION	1.7401748367397792E-6	DEFECT
one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999918162715283	WITHOUT_CLASSIFICATION	8.183728471648048E-6	DEFECT
Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.999692550402891	WITHOUT_CLASSIFICATION	3.07449597109129E-4	DEFECT
note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.997079639777216	WITHOUT_CLASSIFICATION	0.0029203602227840524	DEFECT
see note above re: return type	WITHOUT_CLASSIFICATION	0.9998780898988203	WITHOUT_CLASSIFICATION	1.2191010117975678E-4	DEFECT
restrictive security policy; no matter, we only want public classes anyway	WITHOUT_CLASSIFICATION	0.9999981242093171	WITHOUT_CLASSIFICATION	1.8757906828986384E-6	DEFECT
very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999958986641236	WITHOUT_CLASSIFICATION	4.101335876334872E-6	DEFECT
one-dimensional array	WITHOUT_CLASSIFICATION	0.9999967592850681	WITHOUT_CLASSIFICATION	3.24071493195063E-6	DEFECT
n-dimensional array	WITHOUT_CLASSIFICATION	0.9999976758129324	WITHOUT_CLASSIFICATION	2.3241870676245923E-6	DEFECT
if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999980995919032	WITHOUT_CLASSIFICATION	1.900408096749565E-6	DEFECT
we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130	WITHOUT_CLASSIFICATION	0.999999482017307	WITHOUT_CLASSIFICATION	5.179826929135652E-7	DEFECT
Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999732206548347	WITHOUT_CLASSIFICATION	2.6779345165293055E-5	DEFECT
can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9997480979395462	WITHOUT_CLASSIFICATION	2.5190206045376117E-4	DEFECT
getFooBar() => fooBar?, foo_bar?()	WITHOUT_CLASSIFICATION	0.9999542363290561	WITHOUT_CLASSIFICATION	4.5763670943950554E-5	DEFECT
If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9998798649551927	WITHOUT_CLASSIFICATION	1.2013504480735126E-4	DEFECT
many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.999998220603965	WITHOUT_CLASSIFICATION	1.779396034930487E-6	DEFECT
for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999196464157	WITHOUT_CLASSIFICATION	8.035358428372505E-8	DEFECT
rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999747795700659	WITHOUT_CLASSIFICATION	2.5220429934084007E-5	DEFECT
the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999999743293735	WITHOUT_CLASSIFICATION	2.567062650427071E-8	DEFECT
it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999255803179	WITHOUT_CLASSIFICATION	7.441968206190524E-8	DEFECT
we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.99999927466229	WITHOUT_CLASSIFICATION	7.253377099963556E-7	DEFECT
set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999996248349073	WITHOUT_CLASSIFICATION	3.751650926254152E-7	DEFECT
the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999936602702642	WITHOUT_CLASSIFICATION	6.33972973593253E-6	DEFECT
InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9998783036021709	WITHOUT_CLASSIFICATION	1.2169639782913207E-4	DEFECT
also create the JavaProxy classes	WITHOUT_CLASSIFICATION	0.9999988069343111	WITHOUT_CLASSIFICATION	1.1930656889229418E-6	DEFECT
The template for interface modules	WITHOUT_CLASSIFICATION	0.9999993846784492	WITHOUT_CLASSIFICATION	6.153215508824997E-7	DEFECT
Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999870792143856	WITHOUT_CLASSIFICATION	1.2920785614333053E-5	DEFECT
add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999030842603427	WITHOUT_CLASSIFICATION	9.69157396573612E-5	DEFECT
add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9995084438554258	WITHOUT_CLASSIFICATION	4.915561445742004E-4	DEFECT
finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999996669119051	WITHOUT_CLASSIFICATION	3.330880949401544E-7	DEFECT
shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9990877659396519	WITHOUT_CLASSIFICATION	9.122340603480543E-4	DEFECT
include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9997513440578439	WITHOUT_CLASSIFICATION	2.48655942156045E-4	DEFECT
java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999664423991419	WITHOUT_CLASSIFICATION	3.355760085802215E-5	DEFECT
other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999966849026422	WITHOUT_CLASSIFICATION	3.3150973578483334E-6	DEFECT
include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999761959977752	WITHOUT_CLASSIFICATION	2.3804002224803452E-5	DEFECT
JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9986048789231455	WITHOUT_CLASSIFICATION	0.0013951210768544781	DEFECT
add java_method for unbound use	WITHOUT_CLASSIFICATION	0.999999068546842	WITHOUT_CLASSIFICATION	9.314531579968582E-7	DEFECT
add alias to meta	WITHOUT_CLASSIFICATION	0.9999957723281082	WITHOUT_CLASSIFICATION	4.2276718916921335E-6	DEFECT
we'll only map conventional class names to modules	WITHOUT_CLASSIFICATION	0.9999767837299605	WITHOUT_CLASSIFICATION	2.3216270039548766E-5	DEFECT
expected	WITHOUT_CLASSIFICATION	0.9999838684070478	WITHOUT_CLASSIFICATION	1.6131592952183666E-5	DEFECT
Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999617973216945	WITHOUT_CLASSIFICATION	3.820267830546252E-5	DEFECT
upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9996322347375929	WITHOUT_CLASSIFICATION	3.677652624071365E-4	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999999684682797	WITHOUT_CLASSIFICATION	3.153172039124783E-8	DEFECT
add alias to meta	WITHOUT_CLASSIFICATION	0.9999957723281082	WITHOUT_CLASSIFICATION	4.2276718916921335E-6	DEFECT
this is where we'll get connected when classes are opened using package module syntax.	WITHOUT_CLASSIFICATION	0.9999976459597273	WITHOUT_CLASSIFICATION	2.354040272666709E-6	DEFECT
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9997254834910094	WITHOUT_CLASSIFICATION	2.745165089905366E-4	DEFECT
this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9998782467968698	WITHOUT_CLASSIFICATION	1.217532031303344E-4	DEFECT
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9999461428653216	WITHOUT_CLASSIFICATION	5.385713467838605E-5	DEFECT
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9999461428653216	WITHOUT_CLASSIFICATION	5.385713467838605E-5	DEFECT
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999999948510632	WITHOUT_CLASSIFICATION	5.14893677174059E-9	DEFECT
Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999999127677491	WITHOUT_CLASSIFICATION	8.723225087272619E-8	DEFECT
hashcode is a combination of the interfaces and the Ruby class we're using to implement them	WITHOUT_CLASSIFICATION	0.9999980326592695	WITHOUT_CLASSIFICATION	1.9673407305681913E-6	DEFECT
if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.999999973286362	WITHOUT_CLASSIFICATION	2.6713637959858368E-8	DEFECT
normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9997028002577475	WITHOUT_CLASSIFICATION	2.9719974225243584E-4	DEFECT
Initialize some components.	WITHOUT_CLASSIFICATION	0.9999974370668745	WITHOUT_CLASSIFICATION	2.562933125561604E-6	DEFECT
not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)	WITHOUT_CLASSIFICATION	0.9999999884969619	WITHOUT_CLASSIFICATION	1.1503038032759804E-8	DEFECT
Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.999969228020289	WITHOUT_CLASSIFICATION	3.0771979710977384E-5	DEFECT
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999994570479219	WITHOUT_CLASSIFICATION	5.429520779823537E-7	DEFECT
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999994570479219	WITHOUT_CLASSIFICATION	5.429520779823537E-7	DEFECT
no matching ctor found	WITHOUT_CLASSIFICATION	0.9999988859022818	WITHOUT_CLASSIFICATION	1.1140977182130585E-6	DEFECT
Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999955217849583	WITHOUT_CLASSIFICATION	4.4782150416688845E-6	DEFECT
prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999998129663474	WITHOUT_CLASSIFICATION	1.870336525139501E-7	DEFECT
must be a public method	WITHOUT_CLASSIFICATION	0.9999995471302789	WITHOUT_CLASSIFICATION	4.52869720970597E-7	DEFECT
must be a public class	WITHOUT_CLASSIFICATION	0.9999988380390459	WITHOUT_CLASSIFICATION	1.161960954113821E-6	DEFECT
must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999930667277107	WITHOUT_CLASSIFICATION	6.933272289223205E-6	DEFECT
Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).	WITHOUT_CLASSIFICATION	0.9995390959113364	WITHOUT_CLASSIFICATION	4.609040886636619E-4	DEFECT
search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999971006366604	WITHOUT_CLASSIFICATION	2.8993633396361254E-6	DEFECT
no matching method found	WITHOUT_CLASSIFICATION	0.9999983182740975	WITHOUT_CLASSIFICATION	1.6817259025110684E-6	DEFECT
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.999985382290964	WITHOUT_CLASSIFICATION	1.4617709035891781E-5	DEFECT
First we need to register the JRuby engine.	WITHOUT_CLASSIFICATION	0.9999930846924194	WITHOUT_CLASSIFICATION	6.915307580544704E-6	DEFECT
Now we create a new BSFManager.	WITHOUT_CLASSIFICATION	0.9999955959071647	WITHOUT_CLASSIFICATION	4.404092835290766E-6	DEFECT
Initialize a simple Frame.	WITHOUT_CLASSIFICATION	0.9999992980859076	WITHOUT_CLASSIFICATION	7.019140924787993E-7	DEFECT
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999997433659725	WITHOUT_CLASSIFICATION	2.5663402750811957E-6	DEFECT
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999997433659725	WITHOUT_CLASSIFICATION	2.5663402750811957E-6	DEFECT
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.999991807766447	WITHOUT_CLASSIFICATION	8.192233553016533E-6	DEFECT
end class	WITHOUT_CLASSIFICATION	0.9999964087407399	WITHOUT_CLASSIFICATION	3.5912592602230812E-6	DEFECT
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.999985382290964	WITHOUT_CLASSIFICATION	1.4617709035891781E-5	DEFECT
for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999983372722522	WITHOUT_CLASSIFICATION	1.6627277478150462E-6	DEFECT
Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)	WITHOUT_CLASSIFICATION	0.9999883017947742	WITHOUT_CLASSIFICATION	1.1698205225850312E-5	DEFECT
Execute a Ruby script (add the menubar to the frame).	WITHOUT_CLASSIFICATION	0.9999252457000374	WITHOUT_CLASSIFICATION	7.475429996264698E-5	DEFECT
Execute Ruby statements.	WITHOUT_CLASSIFICATION	0.9999975630193886	WITHOUT_CLASSIFICATION	2.436980611332177E-6	DEFECT
Evaluates a Ruby expression and display the result.	WITHOUT_CLASSIFICATION	0.9999663515050528	WITHOUT_CLASSIFICATION	3.364849494718723E-5	DEFECT
Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999968916489383	WITHOUT_CLASSIFICATION	3.108351061677861E-6	DEFECT
package scope	WITHOUT_CLASSIFICATION	0.9999978262225696	WITHOUT_CLASSIFICATION	2.17377743046643E-6	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999999684682797	WITHOUT_CLASSIFICATION	3.153172039124783E-8	DEFECT
Ruby-level methods	WITHOUT_CLASSIFICATION	0.999998727748025	WITHOUT_CLASSIFICATION	1.2722519749346392E-6	DEFECT
need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999686421375957	WITHOUT_CLASSIFICATION	3.135786240429489E-5	DEFECT
we only collect methods and interfaces for user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.999999168632222	WITHOUT_CLASSIFICATION	8.313677779761656E-7	DEFECT
get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999766995771706	WITHOUT_CLASSIFICATION	2.3300422829279782E-5	DEFECT
get any included interfaces	WITHOUT_CLASSIFICATION	0.9999969961551024	WITHOUT_CLASSIFICATION	3.0038448975558756E-6	DEFECT
lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999959790811551	WITHOUT_CLASSIFICATION	4.020918844858897E-6	DEFECT
statically initialized below	WITHOUT_CLASSIFICATION	0.9999997111058326	WITHOUT_CLASSIFICATION	2.8889416741218547E-7	DEFECT
finish class initializer	WITHOUT_CLASSIFICATION	0.9999994236542424	WITHOUT_CLASSIFICATION	5.763457574833712E-7	DEFECT
trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999899063464497	WITHOUT_CLASSIFICATION	1.009365355036849E-5	DEFECT
should not happen!	WITHOUT_CLASSIFICATION	0.9999274848005207	WITHOUT_CLASSIFICATION	7.251519947921694E-5	DEFECT
start class	WITHOUT_CLASSIFICATION	0.9999962658131303	WITHOUT_CLASSIFICATION	3.7341868696129426E-6	DEFECT
make getter for handler	WITHOUT_CLASSIFICATION	0.9999905236386426	WITHOUT_CLASSIFICATION	9.47636135730068E-6	DEFECT
make getter for proxy class	WITHOUT_CLASSIFICATION	0.9997130409797563	WITHOUT_CLASSIFICATION	2.8695902024359867E-4	DEFECT
add (potentially) overridden names to the key. TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.8203374987554958	WITHOUT_CLASSIFICATION	0.17966250124450417	DEFECT
We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9996637459093732	WITHOUT_CLASSIFICATION	3.3625409062675114E-4	DEFECT
create static private method field	WITHOUT_CLASSIFICATION	0.9999998141980696	WITHOUT_CLASSIFICATION	1.8580193043466387E-7	DEFECT
load static empty array	WITHOUT_CLASSIFICATION	0.9999999626797658	WITHOUT_CLASSIFICATION	3.7320234218983105E-8	DEFECT
box arguments	WITHOUT_CLASSIFICATION	0.9999998630396514	WITHOUT_CLASSIFICATION	1.3696034869660934E-7	DEFECT
this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999203939742287	WITHOUT_CLASSIFICATION	7.960602577119487E-5	DEFECT
construct the super-proxy method	WITHOUT_CLASSIFICATION	0.9999995632276674	WITHOUT_CLASSIFICATION	4.367723326934916E-7	DEFECT
do a void return	WITHOUT_CLASSIFICATION	0.9999995018240039	WITHOUT_CLASSIFICATION	4.98175996084871E-7	DEFECT
utility methods	WITHOUT_CLASSIFICATION	0.9999978846918999	WITHOUT_CLASSIFICATION	2.115308100151784E-6	DEFECT
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999999948510632	WITHOUT_CLASSIFICATION	5.14893677174059E-9	DEFECT
store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999958103316173	WITHOUT_CLASSIFICATION	4.189668382645935E-6	DEFECT
use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999998173212407	WITHOUT_CLASSIFICATION	1.826787592592069E-7	DEFECT
no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999998768597893	WITHOUT_CLASSIFICATION	1.2314021074321407E-7	DEFECT
only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9996066323731602	WITHOUT_CLASSIFICATION	3.933676268398461E-4	DEFECT
opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999972803149393	WITHOUT_CLASSIFICATION	2.719685060760317E-6	DEFECT
opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999387449049276	WITHOUT_CLASSIFICATION	6.12550950723572E-5	DEFECT
No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999996982923113	WITHOUT_CLASSIFICATION	3.017076886459329E-7	DEFECT
If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999642963041689	WITHOUT_CLASSIFICATION	3.570369583094547E-5	DEFECT
The current block is already associated with proc. No need to create a new one	WITHOUT_CLASSIFICATION	0.999999975674497	WITHOUT_CLASSIFICATION	2.4325502973147616E-8	DEFECT
Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999718871510285	WITHOUT_CLASSIFICATION	2.811284897155678E-5	DEFECT
NUL	WITHOUT_CLASSIFICATION	0.9999447261001959	WITHOUT_CLASSIFICATION	5.527389980401009E-5	DEFECT
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999383647285808	WITHOUT_CLASSIFICATION	6.163527141914038E-5	DEFECT
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999986897974313	WITHOUT_CLASSIFICATION	1.3102025686499855E-6	DEFECT
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999286953711	WITHOUT_CLASSIFICATION	7.130462886167209E-8	DEFECT
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999999637110635	WITHOUT_CLASSIFICATION	3.6288936557690755E-8	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9999981752811189	WITHOUT_CLASSIFICATION	1.824718881032256E-6	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9999981752811189	WITHOUT_CLASSIFICATION	1.824718881032256E-6	DEFECT
classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999998455272312	WITHOUT_CLASSIFICATION	1.5447276882350133E-7	DEFECT
must be power of 2 must be power of 2	WITHOUT_CLASSIFICATION	0.9999980277794016	WITHOUT_CLASSIFICATION	1.9722205984122555E-6	DEFECT
Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999996978541934	WITHOUT_CLASSIFICATION	3.0214580651668536E-7	DEFECT
note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.762398845356068	DEFECT	0.23760115464393206	WITHOUT_CLASSIFICATION
System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999998465025125	WITHOUT_CLASSIFICATION	1.534974875386366E-7	DEFECT
protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }	WITHOUT_CLASSIFICATION	0.9999999735095527	WITHOUT_CLASSIFICATION	2.6490447290633248E-8	DEFECT
EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9990757061496771	WITHOUT_CLASSIFICATION	9.242938503229249E-4	DEFECT
Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999602540326	WITHOUT_CLASSIFICATION	3.974596734925242E-8	DEFECT
references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.	WITHOUT_CLASSIFICATION	0.99730522021771	WITHOUT_CLASSIFICATION	0.002694779782290077	DEFECT
ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999997449438991	WITHOUT_CLASSIFICATION	2.550561008647468E-7	DEFECT
must be called under lock	WITHOUT_CLASSIFICATION	0.9999982629669883	WITHOUT_CLASSIFICATION	1.7370330116939352E-6	DEFECT
must be called under lock	WITHOUT_CLASSIFICATION	0.9999982629669883	WITHOUT_CLASSIFICATION	1.7370330116939352E-6	DEFECT
must be called under lock	WITHOUT_CLASSIFICATION	0.9999982629669883	WITHOUT_CLASSIFICATION	1.7370330116939352E-6	DEFECT
note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999153014999	WITHOUT_CLASSIFICATION	8.469850009501148E-8	DEFECT
temp method to verify tableSize value must be called under lock	WITHOUT_CLASSIFICATION	0.9999984259067054	WITHOUT_CLASSIFICATION	1.5740932945796671E-6	DEFECT
Single node in list	WITHOUT_CLASSIFICATION	0.9999966070178518	WITHOUT_CLASSIFICATION	3.392982148273595E-6	DEFECT
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999990466837979	WITHOUT_CLASSIFICATION	9.533162020696648E-7	DEFECT
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999990466837979	WITHOUT_CLASSIFICATION	9.533162020696648E-7	DEFECT
entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9998672559044511	WITHOUT_CLASSIFICATION	1.3274409554881866E-4	DEFECT
Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999636251560395	WITHOUT_CLASSIFICATION	3.637484396047945E-5	DEFECT
Start of string ([, (, {, <, ', ", \n)	WITHOUT_CLASSIFICATION	0.9999997210634809	WITHOUT_CLASSIFICATION	2.7893651912432655E-7	DEFECT
Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999991673461123	WITHOUT_CLASSIFICATION	8.326538877001275E-7	DEFECT
How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999955233978229	WITHOUT_CLASSIFICATION	4.476602177081549E-6	DEFECT
For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999940284466139	WITHOUT_CLASSIFICATION	5.971553386057785E-6	DEFECT
Last full line read.	WITHOUT_CLASSIFICATION	0.9999991340346641	WITHOUT_CLASSIFICATION	8.659653358653862E-7	DEFECT
Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999155522842732	WITHOUT_CLASSIFICATION	8.444771572672451E-5	DEFECT
Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.989083230577598	WITHOUT_CLASSIFICATION	0.010916769422402045	DEFECT
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999997936004503	WITHOUT_CLASSIFICATION	2.06399549702042E-6	DEFECT
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999997936004503	WITHOUT_CLASSIFICATION	2.06399549702042E-6	DEFECT
End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999971535850452	WITHOUT_CLASSIFICATION	2.84641495487898E-6	DEFECT
How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999295816087638	WITHOUT_CLASSIFICATION	7.04183912361534E-5	DEFECT
Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999948327028015	WITHOUT_CLASSIFICATION	5.167297198536058E-6	DEFECT
Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9998449037003357	WITHOUT_CLASSIFICATION	1.5509629966435092E-4	DEFECT
Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999532572329018	WITHOUT_CLASSIFICATION	4.674276709820678E-5	DEFECT
just ignore	WITHOUT_CLASSIFICATION	0.9999999726845374	WITHOUT_CLASSIFICATION	2.7315462531503286E-8	DEFECT
octal constant	WITHOUT_CLASSIFICATION	0.9999975840996757	WITHOUT_CLASSIFICATION	2.4159003243029646E-6	DEFECT
hex constant	WITHOUT_CLASSIFICATION	0.9999977777336021	WITHOUT_CLASSIFICATION	2.2222663979966747E-6	DEFECT
PUSH(1)	WITHOUT_CLASSIFICATION	0.9999242760481076	WITHOUT_CLASSIFICATION	7.572395189228837E-5	DEFECT
POP	WITHOUT_CLASSIFICATION	0.9999488631380705	WITHOUT_CLASSIFICATION	5.1136861929424826E-5	DEFECT
PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999982675224193	WITHOUT_CLASSIFICATION	1.732477580749497E-6	DEFECT
LEXPOP	WITHOUT_CLASSIFICATION	0.9999319010957136	WITHOUT_CLASSIFICATION	6.809890428634995E-5	DEFECT
SET_P	WITHOUT_CLASSIFICATION	0.9999762520539544	WITHOUT_CLASSIFICATION	2.3747946045707937E-5	DEFECT
Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999959914474029	WITHOUT_CLASSIFICATION	4.008552597056347E-6	DEFECT
Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999479848224125	WITHOUT_CLASSIFICATION	5.201517758749873E-5	DEFECT
Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999977542009386	WITHOUT_CLASSIFICATION	2.2457990613339326E-6	DEFECT
Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999865317560515	WITHOUT_CLASSIFICATION	1.3468243948530361E-5	DEFECT
Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9996342366037043	WITHOUT_CLASSIFICATION	3.6576339629569083E-4	DEFECT
Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999980262811046	WITHOUT_CLASSIFICATION	1.9737188955166167E-6	DEFECT
Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999870049230929	WITHOUT_CLASSIFICATION	1.2995076907191424E-5	DEFECT
Give a name to a value. Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9942268883541996	WITHOUT_CLASSIFICATION	0.005773111645800479	DEFECT
When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999998579416592	WITHOUT_CLASSIFICATION	1.4205834076414448E-7	DEFECT
Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999951347116379	WITHOUT_CLASSIFICATION	4.8652883620687585E-6	DEFECT
Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999980208559992	WITHOUT_CLASSIFICATION	1.979144000810266E-6	DEFECT
1.9 only	WITHOUT_CLASSIFICATION	0.9999863063114373	WITHOUT_CLASSIFICATION	1.3693688562797794E-5	DEFECT
Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999590571547614	WITHOUT_CLASSIFICATION	4.094284523852094E-5	DEFECT
Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999950456928128	WITHOUT_CLASSIFICATION	4.954307187208102E-6	DEFECT
no mb || ismbchar(term)	WITHOUT_CLASSIFICATION	0.999999814870166	WITHOUT_CLASSIFICATION	1.8512983410373197E-7	DEFECT
Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.	WITHOUT_CLASSIFICATION	0.9998396894748807	WITHOUT_CLASSIFICATION	1.603105251193634E-4	DEFECT
DEBUGGING HELP	WITHOUT_CLASSIFICATION	0.99991760287735	WITHOUT_CLASSIFICATION	8.23971226500192E-5	DEFECT
'\v'	WITHOUT_CLASSIFICATION	0.9998666786257331	WITHOUT_CLASSIFICATION	1.333213742668787E-4	DEFECT
end of script.	WITHOUT_CLASSIFICATION	0.9999987953264655	WITHOUT_CLASSIFICATION	1.2046735345892137E-6	DEFECT
white spaces	WITHOUT_CLASSIFICATION	0.9999992038731962	WITHOUT_CLASSIFICATION	7.961268037134648E-7	DEFECT
'\v'	WITHOUT_CLASSIFICATION	0.9998666786257331	WITHOUT_CLASSIFICATION	1.333213742668787E-4	DEFECT
it's a comment	WITHOUT_CLASSIFICATION	0.9999902909210971	WITHOUT_CLASSIFICATION	9.709078902927582E-6	DEFECT
Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999930380287407	WITHOUT_CLASSIFICATION	6.961971259250119E-6	DEFECT
$\: output record separator	WITHOUT_CLASSIFICATION	0.9999979428776702	WITHOUT_CLASSIFICATION	2.05712232986494E-6	DEFECT
EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999947010866839	WITHOUT_CLASSIFICATION	5.298913316128298E-6	DEFECT
documentation nodes	WITHOUT_CLASSIFICATION	0.9999977474108216	WITHOUT_CLASSIFICATION	2.2525891784737254E-6	DEFECT
In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9968146216761319	WITHOUT_CLASSIFICATION	0.00318537832386821	DEFECT
Just a plain bang	WITHOUT_CLASSIFICATION	0.9999977894003064	WITHOUT_CLASSIFICATION	2.2105996937411383E-6	DEFECT
$_: last read line string	WITHOUT_CLASSIFICATION	0.9999528661927752	WITHOUT_CLASSIFICATION	4.713380722480041E-5	DEFECT
$~: match-data	WITHOUT_CLASSIFICATION	0.9997152812462397	WITHOUT_CLASSIFICATION	2.847187537603977E-4	DEFECT
$: argv	WITHOUT_CLASSIFICATION	0.9999491631708644	WITHOUT_CLASSIFICATION	5.083682913578706E-5	DEFECT
$$: pid	WITHOUT_CLASSIFICATION	0.9999237239232527	WITHOUT_CLASSIFICATION	7.627607674731311E-5	DEFECT
$?: last status	WITHOUT_CLASSIFICATION	0.9998185725084944	WITHOUT_CLASSIFICATION	1.8142749150569209E-4	DEFECT
$!: error string	WITHOUT_CLASSIFICATION	0.9999455137507544	WITHOUT_CLASSIFICATION	5.448624924568681E-5	DEFECT
$@: error position	WITHOUT_CLASSIFICATION	0.999956282732038	WITHOUT_CLASSIFICATION	4.371726796204117E-5	DEFECT
$/: input record separator	WITHOUT_CLASSIFICATION	0.9999983864202174	WITHOUT_CLASSIFICATION	1.6135797825259175E-6	DEFECT
$;: field separator	WITHOUT_CLASSIFICATION	0.9999984061646989	WITHOUT_CLASSIFICATION	1.5938353010427059E-6	DEFECT
$,: output field separator	WITHOUT_CLASSIFICATION	0.9999990700761884	WITHOUT_CLASSIFICATION	9.299238115506979E-7	DEFECT
$.: last read line number	WITHOUT_CLASSIFICATION	0.9999745640915652	WITHOUT_CLASSIFICATION	2.5435908434888362E-5	DEFECT
$=: ignorecase	WITHOUT_CLASSIFICATION	0.9999996797450075	WITHOUT_CLASSIFICATION	3.2025499249569356E-7	DEFECT
$:: load path	WITHOUT_CLASSIFICATION	0.9997762270434929	WITHOUT_CLASSIFICATION	2.2377295650715192E-4	DEFECT
$<: reading filename	WITHOUT_CLASSIFICATION	0.9999743608735975	WITHOUT_CLASSIFICATION	2.5639126402452944E-5	DEFECT
$": already loaded files	WITHOUT_CLASSIFICATION	0.9999941975781359	WITHOUT_CLASSIFICATION	5.802421864093005E-6	DEFECT
$&: last match	WITHOUT_CLASSIFICATION	0.9998041909183849	WITHOUT_CLASSIFICATION	1.9580908161497606E-4	DEFECT
$`: string before last match	WITHOUT_CLASSIFICATION	0.9999825093492942	WITHOUT_CLASSIFICATION	1.749065070573414E-5	DEFECT
$': string after last match	WITHOUT_CLASSIFICATION	0.9999642258714984	WITHOUT_CLASSIFICATION	3.577412850156744E-5	DEFECT
methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999982180126037	WITHOUT_CLASSIFICATION	1.78198739630088E-6	DEFECT
See if it is a reserved word.	WITHOUT_CLASSIFICATION	0.9999855390034974	WITHOUT_CLASSIFICATION	1.446099650267316E-5	DEFECT
enum lex_state	WITHOUT_CLASSIFICATION	0.9999980094581097	WITHOUT_CLASSIFICATION	1.990541890258546E-6	DEFECT
block (primary)	WITHOUT_CLASSIFICATION	0.9999993749455977	WITHOUT_CLASSIFICATION	6.25054402467151E-7	DEFECT
block (expr)	WITHOUT_CLASSIFICATION	0.9999977396167198	WITHOUT_CLASSIFICATION	2.260383280166587E-6	DEFECT
hash	WITHOUT_CLASSIFICATION	0.999984325186882	WITHOUT_CLASSIFICATION	1.567481311805493E-5	DEFECT
ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9972156020454944	WITHOUT_CLASSIFICATION	0.002784397954505537	DEFECT
FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9710694065865326	WITHOUT_CLASSIFICATION	0.028930593413467355	DEFECT
We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9998988088329077	WITHOUT_CLASSIFICATION	1.0119116709227396E-4	DEFECT
hexadecimal	WITHOUT_CLASSIFICATION	0.9999282260151892	WITHOUT_CLASSIFICATION	7.177398481085102E-5	DEFECT
binary	WITHOUT_CLASSIFICATION	0.9999919477609587	WITHOUT_CLASSIFICATION	8.052239041338508E-6	DEFECT
decimal	WITHOUT_CLASSIFICATION	0.9999911581519975	WITHOUT_CLASSIFICATION	8.841848002596495E-6	DEFECT
Octal	WITHOUT_CLASSIFICATION	0.9999814131551119	WITHOUT_CLASSIFICATION	1.8586844888123237E-5	DEFECT
'_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999999723916587	WITHOUT_CLASSIFICATION	2.7608341335116222E-8	DEFECT
backslash	WITHOUT_CLASSIFICATION	0.9999827288783478	WITHOUT_CLASSIFICATION	1.7271121652220047E-5	DEFECT
newline	WITHOUT_CLASSIFICATION	0.9999645861144913	WITHOUT_CLASSIFICATION	3.5413885508665344E-5	DEFECT
horizontal tab	WITHOUT_CLASSIFICATION	0.9999979263651845	WITHOUT_CLASSIFICATION	2.0736348154459956E-6	DEFECT
form feed	WITHOUT_CLASSIFICATION	0.9999985174745819	WITHOUT_CLASSIFICATION	1.4825254180650168E-6	DEFECT
vertical tab	WITHOUT_CLASSIFICATION	0.9999987488223409	WITHOUT_CLASSIFICATION	1.251177659113289E-6	DEFECT
alarm(bell)	WITHOUT_CLASSIFICATION	0.9999857185548846	WITHOUT_CLASSIFICATION	1.4281445115340099E-5	DEFECT
escape	WITHOUT_CLASSIFICATION	0.9999954229782941	WITHOUT_CLASSIFICATION	4.577021705921E-6	DEFECT
hex constant	WITHOUT_CLASSIFICATION	0.9999977777336021	WITHOUT_CLASSIFICATION	2.2222663979966747E-6	DEFECT
char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999943851398099	WITHOUT_CLASSIFICATION	5.614860190101282E-6	DEFECT
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999990147170197	WITHOUT_CLASSIFICATION	9.852829802832044E-7	DEFECT
space	WITHOUT_CLASSIFICATION	0.9999957337372778	WITHOUT_CLASSIFICATION	4.2662627222829355E-6	DEFECT
Where we started this marker match	WITHOUT_CLASSIFICATION	0.999997159799561	WITHOUT_CLASSIFICATION	2.8402004389806533E-6	DEFECT
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999987659641014	WITHOUT_CLASSIFICATION	1.2340358985756791E-6	DEFECT
We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999879343987329	WITHOUT_CLASSIFICATION	1.2065601267024851E-5	DEFECT
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999990147170197	WITHOUT_CLASSIFICATION	9.852829802832044E-7	DEFECT
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9249103444819466	WITHOUT_CLASSIFICATION	0.07508965551805338	DEFECT
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9249103444819466	WITHOUT_CLASSIFICATION	0.07508965551805338	DEFECT
Where we get our newest char's	WITHOUT_CLASSIFICATION	0.999999915347123	WITHOUT_CLASSIFICATION	8.465287702080849E-8	DEFECT
Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999992503585108	WITHOUT_CLASSIFICATION	7.496414893387512E-7	DEFECT
index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999993775505504	WITHOUT_CLASSIFICATION	6.224494496789399E-7	DEFECT
Character read before previous read	WITHOUT_CLASSIFICATION	0.9999998475512365	WITHOUT_CLASSIFICATION	1.5244876342170727E-7	DEFECT
keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999922200432837	WITHOUT_CLASSIFICATION	7.779956716368022E-6	DEFECT
NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999954518409416	WITHOUT_CLASSIFICATION	4.548159058278362E-6	DEFECT
BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999832409723014	WITHOUT_CLASSIFICATION	1.6759027698583027E-5	DEFECT
TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now	WITHOUT_CLASSIFICATION	0.9378342246080592	WITHOUT_CLASSIFICATION	0.06216577539194073	DEFECT
Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999981887394502	WITHOUT_CLASSIFICATION	1.8112605498311262E-6	DEFECT
that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9998491533851834	WITHOUT_CLASSIFICATION	1.5084661481642973E-4	DEFECT
Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999609937882	WITHOUT_CLASSIFICATION	3.9006211767568164E-8	DEFECT
Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999981086142768	WITHOUT_CLASSIFICATION	1.8913857230590232E-6	DEFECT
this set is only for darwin	WITHOUT_CLASSIFICATION	0.999252711505677	WITHOUT_CLASSIFICATION	7.472884943230908E-4	DEFECT
DigestLibrary	WITHOUT_CLASSIFICATION	0.9999960858235389	WITHOUT_CLASSIFICATION	3.9141764610802545E-6	DEFECT
all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999298320246507	WITHOUT_CLASSIFICATION	7.016797534929512E-5	DEFECT
all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999723912507086	WITHOUT_CLASSIFICATION	2.7608749291313228E-5	DEFECT
do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999994686338977	WITHOUT_CLASSIFICATION	5.313661023630059E-7	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999777932802006	WITHOUT_CLASSIFICATION	2.220671979934033E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999777932802006	WITHOUT_CLASSIFICATION	2.220671979934033E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999777932802006	WITHOUT_CLASSIFICATION	2.220671979934033E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999777932802006	WITHOUT_CLASSIFICATION	2.220671979934033E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999777932802006	WITHOUT_CLASSIFICATION	2.220671979934033E-5	DEFECT
line 329	WITHOUT_CLASSIFICATION	0.9999895613880105	WITHOUT_CLASSIFICATION	1.0438611989432896E-5	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999992755771221	WITHOUT_CLASSIFICATION	7.244228780150731E-7	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998089309166619	WITHOUT_CLASSIFICATION	1.910690833380647E-4	DEFECT
dynamically increase	WITHOUT_CLASSIFICATION	0.9999791777363042	WITHOUT_CLASSIFICATION	2.0822263695837693E-5	DEFECT
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9991950504259035	WITHOUT_CLASSIFICATION	8.049495740965164E-4	DEFECT
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999998326503878	WITHOUT_CLASSIFICATION	1.6734961220567585E-7	DEFECT
shift to yyN	WITHOUT_CLASSIFICATION	0.9999964630094327	WITHOUT_CLASSIFICATION	3.53699056737398E-6	DEFECT
reduce (yyN)	WITHOUT_CLASSIFICATION	0.999994231990092	WITHOUT_CLASSIFICATION	5.7680099079729835E-6	DEFECT
leave stack alone	WITHOUT_CLASSIFICATION	0.9999961919330888	WITHOUT_CLASSIFICATION	3.8080669112563917E-6	DEFECT
line 271	WITHOUT_CLASSIFICATION	0.9999941658117828	WITHOUT_CLASSIFICATION	5.834188217139408E-6	DEFECT
line 274	WITHOUT_CLASSIFICATION	0.9999905153617912	WITHOUT_CLASSIFICATION	9.484638208830494E-6	DEFECT
line 303	WITHOUT_CLASSIFICATION	0.9999904109563788	WITHOUT_CLASSIFICATION	9.589043621318178E-6	DEFECT
line 311	WITHOUT_CLASSIFICATION	0.9999953935035515	WITHOUT_CLASSIFICATION	4.606496448456105E-6	DEFECT
line 314	WITHOUT_CLASSIFICATION	0.9999919393714094	WITHOUT_CLASSIFICATION	8.060628590678404E-6	DEFECT
line 317	WITHOUT_CLASSIFICATION	0.9999909868909166	WITHOUT_CLASSIFICATION	9.013109083476452E-6	DEFECT
line 332	WITHOUT_CLASSIFICATION	0.9999906238655271	WITHOUT_CLASSIFICATION	9.376134473006608E-6	DEFECT
line 338	WITHOUT_CLASSIFICATION	0.9999946151077153	WITHOUT_CLASSIFICATION	5.38489228478263E-6	DEFECT
line 341	WITHOUT_CLASSIFICATION	0.9999935958989928	WITHOUT_CLASSIFICATION	6.404101007218174E-6	DEFECT
line 344	WITHOUT_CLASSIFICATION	0.9999916880493491	WITHOUT_CLASSIFICATION	8.311950650822923E-6	DEFECT
line 351	WITHOUT_CLASSIFICATION	0.999989747128536	WITHOUT_CLASSIFICATION	1.025287146402066E-5	DEFECT
line 358	WITHOUT_CLASSIFICATION	0.9999878881047886	WITHOUT_CLASSIFICATION	1.2111895211516637E-5	DEFECT
line 367	WITHOUT_CLASSIFICATION	0.9999908059472183	WITHOUT_CLASSIFICATION	9.194052781725463E-6	DEFECT
line 372	WITHOUT_CLASSIFICATION	0.9999848121507449	WITHOUT_CLASSIFICATION	1.5187849255100052E-5	DEFECT
line 378	WITHOUT_CLASSIFICATION	0.9999922835728042	WITHOUT_CLASSIFICATION	7.716427195851876E-6	DEFECT
line 382	WITHOUT_CLASSIFICATION	0.9999909730244688	WITHOUT_CLASSIFICATION	9.026975531089795E-6	DEFECT
line 407	WITHOUT_CLASSIFICATION	0.999992564974675	WITHOUT_CLASSIFICATION	7.43502532491692E-6	DEFECT
line 411	WITHOUT_CLASSIFICATION	0.999995099981552	WITHOUT_CLASSIFICATION	4.900018448029215E-6	DEFECT
line 414	WITHOUT_CLASSIFICATION	0.9999927021850444	WITHOUT_CLASSIFICATION	7.297814955638592E-6	DEFECT
line 417	WITHOUT_CLASSIFICATION	0.999989145175653	WITHOUT_CLASSIFICATION	1.0854824347080827E-5	DEFECT
line 420	WITHOUT_CLASSIFICATION	0.9999863557164705	WITHOUT_CLASSIFICATION	1.3644283529464162E-5	DEFECT
line 426	WITHOUT_CLASSIFICATION	0.9999877770719648	WITHOUT_CLASSIFICATION	1.2222928035118898E-5	DEFECT
line 434	WITHOUT_CLASSIFICATION	0.9999921783543249	WITHOUT_CLASSIFICATION	7.821645675089634E-6	DEFECT
line 443	WITHOUT_CLASSIFICATION	0.9999915045617662	WITHOUT_CLASSIFICATION	8.495438233863783E-6	DEFECT
line 446	WITHOUT_CLASSIFICATION	0.999991475719178	WITHOUT_CLASSIFICATION	8.524280822085782E-6	DEFECT
line 452	WITHOUT_CLASSIFICATION	0.9999845196822014	WITHOUT_CLASSIFICATION	1.5480317798622302E-5	DEFECT
line 457	WITHOUT_CLASSIFICATION	0.9999870437736855	WITHOUT_CLASSIFICATION	1.2956226314571844E-5	DEFECT
line 464	WITHOUT_CLASSIFICATION	0.9999919884697679	WITHOUT_CLASSIFICATION	8.011530232057546E-6	DEFECT
line 467	WITHOUT_CLASSIFICATION	0.9999912512652717	WITHOUT_CLASSIFICATION	8.748734728230111E-6	DEFECT
line 470	WITHOUT_CLASSIFICATION	0.9999906055942732	WITHOUT_CLASSIFICATION	9.394405726738503E-6	DEFECT
line 479	WITHOUT_CLASSIFICATION	0.9999917760344108	WITHOUT_CLASSIFICATION	8.22396558924855E-6	DEFECT
line 484	WITHOUT_CLASSIFICATION	0.99999375465295	WITHOUT_CLASSIFICATION	6.245347049955779E-6	DEFECT
line 486	WITHOUT_CLASSIFICATION	0.9999925564163616	WITHOUT_CLASSIFICATION	7.443583638323491E-6	DEFECT
line 492	WITHOUT_CLASSIFICATION	0.9999900491761021	WITHOUT_CLASSIFICATION	9.950823897830639E-6	DEFECT
line 498	WITHOUT_CLASSIFICATION	0.9999935594396857	WITHOUT_CLASSIFICATION	6.440560314227479E-6	DEFECT
line 501	WITHOUT_CLASSIFICATION	0.9999881878299594	WITHOUT_CLASSIFICATION	1.1812170040689253E-5	DEFECT
line 504	WITHOUT_CLASSIFICATION	0.9999792852683272	WITHOUT_CLASSIFICATION	2.07147316726929E-5	DEFECT
line 507	WITHOUT_CLASSIFICATION	0.9999854483310004	WITHOUT_CLASSIFICATION	1.455166899960549E-5	DEFECT
line 510	WITHOUT_CLASSIFICATION	0.9999922037116372	WITHOUT_CLASSIFICATION	7.796288362851448E-6	DEFECT
line 519	WITHOUT_CLASSIFICATION	0.9999903827752812	WITHOUT_CLASSIFICATION	9.617224718756307E-6	DEFECT
line 525	WITHOUT_CLASSIFICATION	0.999982235000919	WITHOUT_CLASSIFICATION	1.7764999080934358E-5	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998089309166619	WITHOUT_CLASSIFICATION	1.910690833380647E-4	DEFECT
line 537	WITHOUT_CLASSIFICATION	0.999985382554749	WITHOUT_CLASSIFICATION	1.4617445251113364E-5	DEFECT
line 540	WITHOUT_CLASSIFICATION	0.9999844378504589	WITHOUT_CLASSIFICATION	1.55621495411247E-5	DEFECT
line 543	WITHOUT_CLASSIFICATION	0.9999846143815408	WITHOUT_CLASSIFICATION	1.538561845915435E-5	DEFECT
line 546	WITHOUT_CLASSIFICATION	0.9999845691437431	WITHOUT_CLASSIFICATION	1.5430856256986152E-5	DEFECT
line 556	WITHOUT_CLASSIFICATION	0.9999876758324112	WITHOUT_CLASSIFICATION	1.232416758879966E-5	DEFECT
line 559	WITHOUT_CLASSIFICATION	0.9999877070991665	WITHOUT_CLASSIFICATION	1.2292900833534004E-5	DEFECT
line 563	WITHOUT_CLASSIFICATION	0.9999832545269971	WITHOUT_CLASSIFICATION	1.6745473002864164E-5	DEFECT
line 566	WITHOUT_CLASSIFICATION	0.9999865025462512	WITHOUT_CLASSIFICATION	1.3497453748678535E-5	DEFECT
line 569	WITHOUT_CLASSIFICATION	0.9999849991318789	WITHOUT_CLASSIFICATION	1.5000868121093985E-5	DEFECT
line 575	WITHOUT_CLASSIFICATION	0.9999843477986623	WITHOUT_CLASSIFICATION	1.565220133772631E-5	DEFECT
line 578	WITHOUT_CLASSIFICATION	0.9999877137299877	WITHOUT_CLASSIFICATION	1.2286270012224482E-5	DEFECT
line 587	WITHOUT_CLASSIFICATION	0.9999881026571175	WITHOUT_CLASSIFICATION	1.1897342882577714E-5	DEFECT
line 596	WITHOUT_CLASSIFICATION	0.9999850434651789	WITHOUT_CLASSIFICATION	1.4956534820978713E-5	DEFECT
line 604	WITHOUT_CLASSIFICATION	0.9999869728263664	WITHOUT_CLASSIFICATION	1.302717363356076E-5	DEFECT
line 607	WITHOUT_CLASSIFICATION	0.9999906150471712	WITHOUT_CLASSIFICATION	9.384952828717906E-6	DEFECT
line 610	WITHOUT_CLASSIFICATION	0.9999923398010035	WITHOUT_CLASSIFICATION	7.660198996411884E-6	DEFECT
line 613	WITHOUT_CLASSIFICATION	0.9999891916188689	WITHOUT_CLASSIFICATION	1.0808381131088612E-5	DEFECT
line 616	WITHOUT_CLASSIFICATION	0.9999916846728404	WITHOUT_CLASSIFICATION	8.315327159675699E-6	DEFECT
line 634	WITHOUT_CLASSIFICATION	0.9999868664527958	WITHOUT_CLASSIFICATION	1.3133547204195072E-5	DEFECT
line 638	WITHOUT_CLASSIFICATION	0.9999897602010556	WITHOUT_CLASSIFICATION	1.0239798944450682E-5	DEFECT
line 643	WITHOUT_CLASSIFICATION	0.999987430482971	WITHOUT_CLASSIFICATION	1.256951702887622E-5	DEFECT
line 646	WITHOUT_CLASSIFICATION	0.9999894324001644	WITHOUT_CLASSIFICATION	1.0567599835673698E-5	DEFECT
line 655	WITHOUT_CLASSIFICATION	0.9999865837841668	WITHOUT_CLASSIFICATION	1.3416215833266498E-5	DEFECT
line 660	WITHOUT_CLASSIFICATION	0.9999893468235235	WITHOUT_CLASSIFICATION	1.0653176476619442E-5	DEFECT
line 667	WITHOUT_CLASSIFICATION	0.9999899181923596	WITHOUT_CLASSIFICATION	1.0081807640380523E-5	DEFECT
line 670	WITHOUT_CLASSIFICATION	0.9999875070525074	WITHOUT_CLASSIFICATION	1.2492947492544304E-5	DEFECT
line 672	WITHOUT_CLASSIFICATION	0.9999826316816306	WITHOUT_CLASSIFICATION	1.7368318369425417E-5	DEFECT
line 696	WITHOUT_CLASSIFICATION	0.9999899395638707	WITHOUT_CLASSIFICATION	1.0060436129368641E-5	DEFECT
line 701	WITHOUT_CLASSIFICATION	0.9999952765344754	WITHOUT_CLASSIFICATION	4.7234655245232136E-6	DEFECT
line 717	WITHOUT_CLASSIFICATION	0.9999939811363941	WITHOUT_CLASSIFICATION	6.01886360580362E-6	DEFECT
line 720	WITHOUT_CLASSIFICATION	0.9999849930510659	WITHOUT_CLASSIFICATION	1.5006948934191025E-5	DEFECT
line 726	WITHOUT_CLASSIFICATION	0.9999866045281781	WITHOUT_CLASSIFICATION	1.3395471821910165E-5	DEFECT
line 729	WITHOUT_CLASSIFICATION	0.9999888469086128	WITHOUT_CLASSIFICATION	1.1153091387346671E-5	DEFECT
line 732	WITHOUT_CLASSIFICATION	0.9999889446401453	WITHOUT_CLASSIFICATION	1.1055359854699206E-5	DEFECT
line 735	WITHOUT_CLASSIFICATION	0.9999867486067507	WITHOUT_CLASSIFICATION	1.3251393249259064E-5	DEFECT
line 738	WITHOUT_CLASSIFICATION	0.9999932047343235	WITHOUT_CLASSIFICATION	6.795265676499495E-6	DEFECT
line 751	WITHOUT_CLASSIFICATION	0.9999910979196559	WITHOUT_CLASSIFICATION	8.902080344063592E-6	DEFECT
line 754	WITHOUT_CLASSIFICATION	0.9999869505796707	WITHOUT_CLASSIFICATION	1.3049420329348149E-5	DEFECT
line 757	WITHOUT_CLASSIFICATION	0.9999866594529946	WITHOUT_CLASSIFICATION	1.3340547005486441E-5	DEFECT
line 760	WITHOUT_CLASSIFICATION	0.9999921883490881	WITHOUT_CLASSIFICATION	7.811650911832492E-6	DEFECT
line 763	WITHOUT_CLASSIFICATION	0.9999910420167407	WITHOUT_CLASSIFICATION	8.957983259209693E-6	DEFECT
line 769	WITHOUT_CLASSIFICATION	0.9999921224527775	WITHOUT_CLASSIFICATION	7.877547222628577E-6	DEFECT
line 772	WITHOUT_CLASSIFICATION	0.9999887229313369	WITHOUT_CLASSIFICATION	1.1277068663108655E-5	DEFECT
line 775	WITHOUT_CLASSIFICATION	0.9999885237208508	WITHOUT_CLASSIFICATION	1.1476279149121519E-5	DEFECT
line 782	WITHOUT_CLASSIFICATION	0.9999920571999004	WITHOUT_CLASSIFICATION	7.942800099608828E-6	DEFECT
line 788	WITHOUT_CLASSIFICATION	0.9999947175419976	WITHOUT_CLASSIFICATION	5.282458002405254E-6	DEFECT
line 791	WITHOUT_CLASSIFICATION	0.9999947494796307	WITHOUT_CLASSIFICATION	5.250520369312298E-6	DEFECT
line 794	WITHOUT_CLASSIFICATION	0.9999918946261716	WITHOUT_CLASSIFICATION	8.105373828413808E-6	DEFECT
line 797	WITHOUT_CLASSIFICATION	0.9999932925665858	WITHOUT_CLASSIFICATION	6.70743341429995E-6	DEFECT
line 803	WITHOUT_CLASSIFICATION	0.9999892237386232	WITHOUT_CLASSIFICATION	1.0776261376921454E-5	DEFECT
line 806	WITHOUT_CLASSIFICATION	0.9999921340613651	WITHOUT_CLASSIFICATION	7.865938634864495E-6	DEFECT
line 809	WITHOUT_CLASSIFICATION	0.9999917432150148	WITHOUT_CLASSIFICATION	8.256784985218307E-6	DEFECT
line 815	WITHOUT_CLASSIFICATION	0.9999933450439208	WITHOUT_CLASSIFICATION	6.654956079204552E-6	DEFECT
line 818	WITHOUT_CLASSIFICATION	0.9999963078597894	WITHOUT_CLASSIFICATION	3.6921402106051184E-6	DEFECT
line 821	WITHOUT_CLASSIFICATION	0.9999939547717281	WITHOUT_CLASSIFICATION	6.0452282718126975E-6	DEFECT
line 824	WITHOUT_CLASSIFICATION	0.9999907341514621	WITHOUT_CLASSIFICATION	9.26584853790827E-6	DEFECT
line 830	WITHOUT_CLASSIFICATION	0.9999928367433204	WITHOUT_CLASSIFICATION	7.163256679613524E-6	DEFECT
line 833	WITHOUT_CLASSIFICATION	0.9999938316336845	WITHOUT_CLASSIFICATION	6.168366315541206E-6	DEFECT
line 836	WITHOUT_CLASSIFICATION	0.9999920105649921	WITHOUT_CLASSIFICATION	7.989435007954499E-6	DEFECT
line 839	WITHOUT_CLASSIFICATION	0.9999924999319895	WITHOUT_CLASSIFICATION	7.50006801051548E-6	DEFECT
line 842	WITHOUT_CLASSIFICATION	0.9999907132479223	WITHOUT_CLASSIFICATION	9.286752077672688E-6	DEFECT
line 848	WITHOUT_CLASSIFICATION	0.9999936657502321	WITHOUT_CLASSIFICATION	6.334249767966821E-6	DEFECT
line 852	WITHOUT_CLASSIFICATION	0.999987165170132	WITHOUT_CLASSIFICATION	1.283482986812139E-5	DEFECT
line 858	WITHOUT_CLASSIFICATION	0.9999907913966251	WITHOUT_CLASSIFICATION	9.208603374857326E-6	DEFECT
line 861	WITHOUT_CLASSIFICATION	0.9999944890288391	WITHOUT_CLASSIFICATION	5.510971160824045E-6	DEFECT
line 868	WITHOUT_CLASSIFICATION	0.9999936723693065	WITHOUT_CLASSIFICATION	6.327630693445515E-6	DEFECT
line 871	WITHOUT_CLASSIFICATION	0.9999957667339662	WITHOUT_CLASSIFICATION	4.233266033831548E-6	DEFECT
line 876	WITHOUT_CLASSIFICATION	0.999993086836667	WITHOUT_CLASSIFICATION	6.913163332897998E-6	DEFECT
line 879	WITHOUT_CLASSIFICATION	0.999993240900683	WITHOUT_CLASSIFICATION	6.759099317010206E-6	DEFECT
line 883	WITHOUT_CLASSIFICATION	0.9999935489296643	WITHOUT_CLASSIFICATION	6.451070335659886E-6	DEFECT
line 893	WITHOUT_CLASSIFICATION	0.9999913766316544	WITHOUT_CLASSIFICATION	8.623368345661027E-6	DEFECT
line 896	WITHOUT_CLASSIFICATION	0.999993352725416	WITHOUT_CLASSIFICATION	6.6472745840294005E-6	DEFECT
line 899	WITHOUT_CLASSIFICATION	0.9999942777753168	WITHOUT_CLASSIFICATION	5.722224683246106E-6	DEFECT
line 903	WITHOUT_CLASSIFICATION	0.9999862966418475	WITHOUT_CLASSIFICATION	1.3703358152565838E-5	DEFECT
line 907	WITHOUT_CLASSIFICATION	0.999992450554546	WITHOUT_CLASSIFICATION	7.549445454042699E-6	DEFECT
line 915	WITHOUT_CLASSIFICATION	0.9999914221843238	WITHOUT_CLASSIFICATION	8.577815676187592E-6	DEFECT
line 920	WITHOUT_CLASSIFICATION	0.9999865293655404	WITHOUT_CLASSIFICATION	1.3470634459483711E-5	DEFECT
line 923	WITHOUT_CLASSIFICATION	0.9999881478037183	WITHOUT_CLASSIFICATION	1.1852196281715093E-5	DEFECT
line 926	WITHOUT_CLASSIFICATION	0.9999879978948499	WITHOUT_CLASSIFICATION	1.2002105150093053E-5	DEFECT
line 932	WITHOUT_CLASSIFICATION	0.9999848335985975	WITHOUT_CLASSIFICATION	1.5166401402493116E-5	DEFECT
line 936	WITHOUT_CLASSIFICATION	0.9999871182214918	WITHOUT_CLASSIFICATION	1.2881778508204402E-5	DEFECT
line 940	WITHOUT_CLASSIFICATION	0.999989637929724	WITHOUT_CLASSIFICATION	1.0362070276054922E-5	DEFECT
line 944	WITHOUT_CLASSIFICATION	0.9999912086282815	WITHOUT_CLASSIFICATION	8.791371718385476E-6	DEFECT
line 948	WITHOUT_CLASSIFICATION	0.9999921879131795	WITHOUT_CLASSIFICATION	7.812086820541715E-6	DEFECT
line 956	WITHOUT_CLASSIFICATION	0.9999871306279844	WITHOUT_CLASSIFICATION	1.2869372015550582E-5	DEFECT
line 960	WITHOUT_CLASSIFICATION	0.9999907233207243	WITHOUT_CLASSIFICATION	9.276679275629486E-6	DEFECT
line 964	WITHOUT_CLASSIFICATION	0.9999905836161098	WITHOUT_CLASSIFICATION	9.416383890123684E-6	DEFECT
line 967	WITHOUT_CLASSIFICATION	0.9999912208636271	WITHOUT_CLASSIFICATION	8.779136372978206E-6	DEFECT
line 972	WITHOUT_CLASSIFICATION	0.9999861958715682	WITHOUT_CLASSIFICATION	1.3804128431779423E-5	DEFECT
line 978	WITHOUT_CLASSIFICATION	0.9999929788851324	WITHOUT_CLASSIFICATION	7.021114867664638E-6	DEFECT
line 980	WITHOUT_CLASSIFICATION	0.9999926902540338	WITHOUT_CLASSIFICATION	7.3097459661908574E-6	DEFECT
line 984	WITHOUT_CLASSIFICATION	0.9999926696910645	WITHOUT_CLASSIFICATION	7.3303089354129885E-6	DEFECT
line 986	WITHOUT_CLASSIFICATION	0.999992540915815	WITHOUT_CLASSIFICATION	7.459084184985589E-6	DEFECT
line 996	WITHOUT_CLASSIFICATION	0.9999917614686801	WITHOUT_CLASSIFICATION	8.238531320022657E-6	DEFECT
line 1001	WITHOUT_CLASSIFICATION	0.9999964858358166	WITHOUT_CLASSIFICATION	3.5141641834757237E-6	DEFECT
line 1004	WITHOUT_CLASSIFICATION	0.9999943464977948	WITHOUT_CLASSIFICATION	5.6535022051521945E-6	DEFECT
line 1008	WITHOUT_CLASSIFICATION	0.999995710348174	WITHOUT_CLASSIFICATION	4.289651825990392E-6	DEFECT
line 1014	WITHOUT_CLASSIFICATION	0.9999959761802499	WITHOUT_CLASSIFICATION	4.02381975000199E-6	DEFECT
line 1029	WITHOUT_CLASSIFICATION	0.9999953553881924	WITHOUT_CLASSIFICATION	4.64461180757441E-6	DEFECT
line 1032	WITHOUT_CLASSIFICATION	0.9999923606905877	WITHOUT_CLASSIFICATION	7.639309412318108E-6	DEFECT
line 1034	WITHOUT_CLASSIFICATION	0.9999935767663448	WITHOUT_CLASSIFICATION	6.423233655144934E-6	DEFECT
line 1045	WITHOUT_CLASSIFICATION	0.9999934836444055	WITHOUT_CLASSIFICATION	6.516355594493332E-6	DEFECT
line 1048	WITHOUT_CLASSIFICATION	0.9999960745890052	WITHOUT_CLASSIFICATION	3.925410994875809E-6	DEFECT
line 1051	WITHOUT_CLASSIFICATION	0.9999951660910038	WITHOUT_CLASSIFICATION	4.833908996185252E-6	DEFECT
line 1058	WITHOUT_CLASSIFICATION	0.9999952418758047	WITHOUT_CLASSIFICATION	4.7581241953586355E-6	DEFECT
line 1070	WITHOUT_CLASSIFICATION	0.9999968533164747	WITHOUT_CLASSIFICATION	3.1466835253099227E-6	DEFECT
line 1073	WITHOUT_CLASSIFICATION	0.9999961098893935	WITHOUT_CLASSIFICATION	3.890110606505062E-6	DEFECT
line 1076	WITHOUT_CLASSIFICATION	0.9999963274938279	WITHOUT_CLASSIFICATION	3.6725061720594646E-6	DEFECT
line 1079	WITHOUT_CLASSIFICATION	0.9999965581805725	WITHOUT_CLASSIFICATION	3.4418194275389375E-6	DEFECT
line 1082	WITHOUT_CLASSIFICATION	0.9999951002802961	WITHOUT_CLASSIFICATION	4.8997197037665715E-6	DEFECT
line 1089	WITHOUT_CLASSIFICATION	0.9999965950410651	WITHOUT_CLASSIFICATION	3.4049589348199875E-6	DEFECT
line 1097	WITHOUT_CLASSIFICATION	0.9999953376120225	WITHOUT_CLASSIFICATION	4.662387977450365E-6	DEFECT
line 1100	WITHOUT_CLASSIFICATION	0.9999967611616843	WITHOUT_CLASSIFICATION	3.238838315643648E-6	DEFECT
line 1103	WITHOUT_CLASSIFICATION	0.9999958997487732	WITHOUT_CLASSIFICATION	4.100251226799118E-6	DEFECT
line 1107	WITHOUT_CLASSIFICATION	0.999997714222871	WITHOUT_CLASSIFICATION	2.2857771290430743E-6	DEFECT
line 1111	WITHOUT_CLASSIFICATION	0.9999968644303069	WITHOUT_CLASSIFICATION	3.1355696931020338E-6	DEFECT
line 1113	WITHOUT_CLASSIFICATION	0.9999959931250959	WITHOUT_CLASSIFICATION	4.006874904104936E-6	DEFECT
line 1115	WITHOUT_CLASSIFICATION	0.9999950470797582	WITHOUT_CLASSIFICATION	4.952920241832641E-6	DEFECT
line 1119	WITHOUT_CLASSIFICATION	0.9999964887608063	WITHOUT_CLASSIFICATION	3.5112391938715864E-6	DEFECT
line 1130	WITHOUT_CLASSIFICATION	0.9999956269624997	WITHOUT_CLASSIFICATION	4.373037500365682E-6	DEFECT
line 1133	WITHOUT_CLASSIFICATION	0.9999962342568406	WITHOUT_CLASSIFICATION	3.765743159430379E-6	DEFECT
line 1135	WITHOUT_CLASSIFICATION	0.9999930682259767	WITHOUT_CLASSIFICATION	6.931774023375759E-6	DEFECT
line 1137	WITHOUT_CLASSIFICATION	0.9999954419789538	WITHOUT_CLASSIFICATION	4.558021046112704E-6	DEFECT
line 1140	WITHOUT_CLASSIFICATION	0.9999945025288296	WITHOUT_CLASSIFICATION	5.497471170409406E-6	DEFECT
line 1151	WITHOUT_CLASSIFICATION	0.9999949094500007	WITHOUT_CLASSIFICATION	5.09054999932973E-6	DEFECT
line 1154	WITHOUT_CLASSIFICATION	0.9999941680077428	WITHOUT_CLASSIFICATION	5.8319922572618784E-6	DEFECT
line 1158	WITHOUT_CLASSIFICATION	0.999994989258334	WITHOUT_CLASSIFICATION	5.01074166602334E-6	DEFECT
line 1164	WITHOUT_CLASSIFICATION	0.9999957272207637	WITHOUT_CLASSIFICATION	4.272779236251424E-6	DEFECT
line 1175	WITHOUT_CLASSIFICATION	0.999989179777708	WITHOUT_CLASSIFICATION	1.08202222919824E-5	DEFECT
line 1178	WITHOUT_CLASSIFICATION	0.999995406692152	WITHOUT_CLASSIFICATION	4.593307848002684E-6	DEFECT
line 1187	WITHOUT_CLASSIFICATION	0.9999971225069053	WITHOUT_CLASSIFICATION	2.877493094587216E-6	DEFECT
line 1189	WITHOUT_CLASSIFICATION	0.9999972804064096	WITHOUT_CLASSIFICATION	2.7195935905160786E-6	DEFECT
line 1193	WITHOUT_CLASSIFICATION	0.9999946156044186	WITHOUT_CLASSIFICATION	5.384395581344345E-6	DEFECT
line 1204	WITHOUT_CLASSIFICATION	0.9999893627080734	WITHOUT_CLASSIFICATION	1.0637291926566484E-5	DEFECT
line 1207	WITHOUT_CLASSIFICATION	0.9999923324551079	WITHOUT_CLASSIFICATION	7.66754489212387E-6	DEFECT
line 1210	WITHOUT_CLASSIFICATION	0.9999943943692053	WITHOUT_CLASSIFICATION	5.605630794657904E-6	DEFECT
line 1214	WITHOUT_CLASSIFICATION	0.9999913398715077	WITHOUT_CLASSIFICATION	8.660128492251761E-6	DEFECT
line 1234	WITHOUT_CLASSIFICATION	0.9999919930712325	WITHOUT_CLASSIFICATION	8.006928767408741E-6	DEFECT
line 1239	WITHOUT_CLASSIFICATION	0.9999914641886777	WITHOUT_CLASSIFICATION	8.535811322283577E-6	DEFECT
line 1243	WITHOUT_CLASSIFICATION	0.999991167866399	WITHOUT_CLASSIFICATION	8.832133601016998E-6	DEFECT
line 1247	WITHOUT_CLASSIFICATION	0.9999921408153764	WITHOUT_CLASSIFICATION	7.859184623653619E-6	DEFECT
line 1251	WITHOUT_CLASSIFICATION	0.9999882956425579	WITHOUT_CLASSIFICATION	1.1704357442117392E-5	DEFECT
line 1263	WITHOUT_CLASSIFICATION	0.9999896318950001	WITHOUT_CLASSIFICATION	1.0368104999818845E-5	DEFECT
line 1269	WITHOUT_CLASSIFICATION	0.9999908824236942	WITHOUT_CLASSIFICATION	9.117576305816594E-6	DEFECT
line 1280	WITHOUT_CLASSIFICATION	0.9999931322170216	WITHOUT_CLASSIFICATION	6.86778297844733E-6	DEFECT
line 1283	WITHOUT_CLASSIFICATION	0.9999927134520772	WITHOUT_CLASSIFICATION	7.2865479227957015E-6	DEFECT
line 1290	WITHOUT_CLASSIFICATION	0.9999924176569465	WITHOUT_CLASSIFICATION	7.582343053528054E-6	DEFECT
line 1296	WITHOUT_CLASSIFICATION	0.9999922296704186	WITHOUT_CLASSIFICATION	7.770329581384313E-6	DEFECT
line 1299	WITHOUT_CLASSIFICATION	0.9999933110061704	WITHOUT_CLASSIFICATION	6.688993829667098E-6	DEFECT
line 1302	WITHOUT_CLASSIFICATION	0.9999921181614204	WITHOUT_CLASSIFICATION	7.881838579550253E-6	DEFECT
line 1309	WITHOUT_CLASSIFICATION	0.9999925043354362	WITHOUT_CLASSIFICATION	7.495664563904395E-6	DEFECT
line 1313	WITHOUT_CLASSIFICATION	0.9999945271353223	WITHOUT_CLASSIFICATION	5.47286467757987E-6	DEFECT
line 1315	WITHOUT_CLASSIFICATION	0.9999913629250935	WITHOUT_CLASSIFICATION	8.637074906452832E-6	DEFECT
line 1320	WITHOUT_CLASSIFICATION	0.9999894370362632	WITHOUT_CLASSIFICATION	1.0562963736867406E-5	DEFECT
line 1328	WITHOUT_CLASSIFICATION	0.9999929466579479	WITHOUT_CLASSIFICATION	7.053342052019221E-6	DEFECT
line 1335	WITHOUT_CLASSIFICATION	0.9999915984328311	WITHOUT_CLASSIFICATION	8.401567168882306E-6	DEFECT
line 1348	WITHOUT_CLASSIFICATION	0.9999943879468062	WITHOUT_CLASSIFICATION	5.612053193838931E-6	DEFECT
line 1352	WITHOUT_CLASSIFICATION	0.9999866719438095	WITHOUT_CLASSIFICATION	1.3328056190511345E-5	DEFECT
line 1358	WITHOUT_CLASSIFICATION	0.9999909560964727	WITHOUT_CLASSIFICATION	9.043903527394144E-6	DEFECT
line 1374	WITHOUT_CLASSIFICATION	0.9999931301012754	WITHOUT_CLASSIFICATION	6.86989872459425E-6	DEFECT
line 1381	WITHOUT_CLASSIFICATION	0.999995384006511	WITHOUT_CLASSIFICATION	4.6159934890241234E-6	DEFECT
line 1387	WITHOUT_CLASSIFICATION	0.9999949243202018	WITHOUT_CLASSIFICATION	5.075679798130299E-6	DEFECT
line 1392	WITHOUT_CLASSIFICATION	0.9999917388619407	WITHOUT_CLASSIFICATION	8.261138059380688E-6	DEFECT
line 1415	WITHOUT_CLASSIFICATION	0.9999901571238673	WITHOUT_CLASSIFICATION	9.842876132661053E-6	DEFECT
line 1431	WITHOUT_CLASSIFICATION	0.9999922685044205	WITHOUT_CLASSIFICATION	7.731495579619105E-6	DEFECT
line 1434	WITHOUT_CLASSIFICATION	0.999992854946961	WITHOUT_CLASSIFICATION	7.145053039021476E-6	DEFECT
line 1440	WITHOUT_CLASSIFICATION	0.999991739977186	WITHOUT_CLASSIFICATION	8.260022813945845E-6	DEFECT
line 1443	WITHOUT_CLASSIFICATION	0.999991827881981	WITHOUT_CLASSIFICATION	8.172118018923397E-6	DEFECT
line 1453	WITHOUT_CLASSIFICATION	0.9999884577428315	WITHOUT_CLASSIFICATION	1.154225716841366E-5	DEFECT
line 1456	WITHOUT_CLASSIFICATION	0.9999890051302308	WITHOUT_CLASSIFICATION	1.0994869769175363E-5	DEFECT
line 1462	WITHOUT_CLASSIFICATION	0.9999886459671918	WITHOUT_CLASSIFICATION	1.1354032808146945E-5	DEFECT
line 1465	WITHOUT_CLASSIFICATION	0.9999881765782987	WITHOUT_CLASSIFICATION	1.182342170130553E-5	DEFECT
line 1470	WITHOUT_CLASSIFICATION	0.9999914939895183	WITHOUT_CLASSIFICATION	8.506010481736104E-6	DEFECT
line 1477	WITHOUT_CLASSIFICATION	0.9999932807782133	WITHOUT_CLASSIFICATION	6.719221786785263E-6	DEFECT
line 1480	WITHOUT_CLASSIFICATION	0.9999930274119372	WITHOUT_CLASSIFICATION	6.972588062868642E-6	DEFECT
line 1485	WITHOUT_CLASSIFICATION	0.9999907581000668	WITHOUT_CLASSIFICATION	9.24189993331902E-6	DEFECT
line 1488	WITHOUT_CLASSIFICATION	0.9999943881245857	WITHOUT_CLASSIFICATION	5.611875414230845E-6	DEFECT
line 1496	WITHOUT_CLASSIFICATION	0.9999920515162245	WITHOUT_CLASSIFICATION	7.948483775421682E-6	DEFECT
line 1502	WITHOUT_CLASSIFICATION	0.9999887439252141	WITHOUT_CLASSIFICATION	1.1256074785822556E-5	DEFECT
line 1510	WITHOUT_CLASSIFICATION	0.9999940961997663	WITHOUT_CLASSIFICATION	5.903800233642626E-6	DEFECT
line 1513	WITHOUT_CLASSIFICATION	0.9999916892761305	WITHOUT_CLASSIFICATION	8.310723869644717E-6	DEFECT
line 1516	WITHOUT_CLASSIFICATION	0.9999923742662483	WITHOUT_CLASSIFICATION	7.625733751628318E-6	DEFECT
line 1533	WITHOUT_CLASSIFICATION	0.9999929597725851	WITHOUT_CLASSIFICATION	7.040227414956326E-6	DEFECT
line 1550	WITHOUT_CLASSIFICATION	0.9999923144191627	WITHOUT_CLASSIFICATION	7.685580837202842E-6	DEFECT
line 1553	WITHOUT_CLASSIFICATION	0.9999924754094581	WITHOUT_CLASSIFICATION	7.52459054188888E-6	DEFECT
line 1556	WITHOUT_CLASSIFICATION	0.9999927048382666	WITHOUT_CLASSIFICATION	7.295161733351996E-6	DEFECT
line 1565	WITHOUT_CLASSIFICATION	0.9999927065432234	WITHOUT_CLASSIFICATION	7.293456776596295E-6	DEFECT
line 1568	WITHOUT_CLASSIFICATION	0.9999930839483893	WITHOUT_CLASSIFICATION	6.916051610686016E-6	DEFECT
line 1571	WITHOUT_CLASSIFICATION	0.9999927850813987	WITHOUT_CLASSIFICATION	7.214918601360162E-6	DEFECT
line 1574	WITHOUT_CLASSIFICATION	0.9999908330777376	WITHOUT_CLASSIFICATION	9.16692226235824E-6	DEFECT
line 1577	WITHOUT_CLASSIFICATION	0.9999918777528054	WITHOUT_CLASSIFICATION	8.122247194629418E-6	DEFECT
line 1587	WITHOUT_CLASSIFICATION	0.9999929588099502	WITHOUT_CLASSIFICATION	7.041190049771475E-6	DEFECT
line 1595	WITHOUT_CLASSIFICATION	0.9999927229718791	WITHOUT_CLASSIFICATION	7.277028120863227E-6	DEFECT
line 1598	WITHOUT_CLASSIFICATION	0.9999932692019985	WITHOUT_CLASSIFICATION	6.730798001461621E-6	DEFECT
line 1600	WITHOUT_CLASSIFICATION	0.9999924497119492	WITHOUT_CLASSIFICATION	7.550288050746458E-6	DEFECT
line 1609	WITHOUT_CLASSIFICATION	0.9999928678140347	WITHOUT_CLASSIFICATION	7.132185965339805E-6	DEFECT
line 1623	WITHOUT_CLASSIFICATION	0.9999910126271486	WITHOUT_CLASSIFICATION	8.987372851488574E-6	DEFECT
line 1626	WITHOUT_CLASSIFICATION	0.9999919112394062	WITHOUT_CLASSIFICATION	8.088760593819886E-6	DEFECT
line 1629	WITHOUT_CLASSIFICATION	0.9999924083806536	WITHOUT_CLASSIFICATION	7.591619346357183E-6	DEFECT
line 1632	WITHOUT_CLASSIFICATION	0.9999911185571251	WITHOUT_CLASSIFICATION	8.881442874962225E-6	DEFECT
line 1638	WITHOUT_CLASSIFICATION	0.9999945409544183	WITHOUT_CLASSIFICATION	5.459045581686009E-6	DEFECT
line 1641	WITHOUT_CLASSIFICATION	0.9999943329673644	WITHOUT_CLASSIFICATION	5.66703263558622E-6	DEFECT
line 1644	WITHOUT_CLASSIFICATION	0.9999942515291774	WITHOUT_CLASSIFICATION	5.748470822535289E-6	DEFECT
line 1649	WITHOUT_CLASSIFICATION	0.9999938775418659	WITHOUT_CLASSIFICATION	6.122458134179912E-6	DEFECT
line 1655	WITHOUT_CLASSIFICATION	0.9999929857457894	WITHOUT_CLASSIFICATION	7.014254210562929E-6	DEFECT
line 1658	WITHOUT_CLASSIFICATION	0.9999925587962255	WITHOUT_CLASSIFICATION	7.44120377459809E-6	DEFECT
line 1661	WITHOUT_CLASSIFICATION	0.999994530609686	WITHOUT_CLASSIFICATION	5.4693903139754105E-6	DEFECT
line 1672	WITHOUT_CLASSIFICATION	0.9999907529549136	WITHOUT_CLASSIFICATION	9.24704508641442E-6	DEFECT
line 1677	WITHOUT_CLASSIFICATION	0.999994755327734	WITHOUT_CLASSIFICATION	5.2446722659946E-6	DEFECT
line 1687	WITHOUT_CLASSIFICATION	0.99999513800525	WITHOUT_CLASSIFICATION	4.861994749981488E-6	DEFECT
line 1694	WITHOUT_CLASSIFICATION	0.9999934234474385	WITHOUT_CLASSIFICATION	6.576552561512788E-6	DEFECT
line 1705	WITHOUT_CLASSIFICATION	0.999979291185834	WITHOUT_CLASSIFICATION	2.07088141661256E-5	DEFECT
line 1708	WITHOUT_CLASSIFICATION	0.9999839550048092	WITHOUT_CLASSIFICATION	1.604499519077231E-5	DEFECT
line 1725	WITHOUT_CLASSIFICATION	0.999965202454579	WITHOUT_CLASSIFICATION	3.4797545420997265E-5	DEFECT
line 1733	WITHOUT_CLASSIFICATION	0.9999893211992711	WITHOUT_CLASSIFICATION	1.0678800729021647E-5	DEFECT
line 1742	WITHOUT_CLASSIFICATION	0.9999850972671163	WITHOUT_CLASSIFICATION	1.4902732883748335E-5	DEFECT
line 1745	WITHOUT_CLASSIFICATION	0.9999840196347246	WITHOUT_CLASSIFICATION	1.598036527538783E-5	DEFECT
line 1749	WITHOUT_CLASSIFICATION	0.9999886758155873	WITHOUT_CLASSIFICATION	1.1324184412653583E-5	DEFECT
line 1757	WITHOUT_CLASSIFICATION	0.9999740532514289	WITHOUT_CLASSIFICATION	2.594674857113728E-5	DEFECT
line 1769	WITHOUT_CLASSIFICATION	0.9999883146039332	WITHOUT_CLASSIFICATION	1.1685396066691263E-5	DEFECT
line 1772	WITHOUT_CLASSIFICATION	0.9999832837834302	WITHOUT_CLASSIFICATION	1.6716216569807735E-5	DEFECT
line 1775	WITHOUT_CLASSIFICATION	0.9999829824039981	WITHOUT_CLASSIFICATION	1.701759600194095E-5	DEFECT
line 1784	WITHOUT_CLASSIFICATION	0.9999905705386862	WITHOUT_CLASSIFICATION	9.42946131372466E-6	DEFECT
line 1808	WITHOUT_CLASSIFICATION	0.9999957735405198	WITHOUT_CLASSIFICATION	4.226459480196764E-6	DEFECT
line 1814	WITHOUT_CLASSIFICATION	0.9999953002674314	WITHOUT_CLASSIFICATION	4.699732568597159E-6	DEFECT
line 1818	WITHOUT_CLASSIFICATION	0.9999966614366633	WITHOUT_CLASSIFICATION	3.3385633367613302E-6	DEFECT
line 1822	WITHOUT_CLASSIFICATION	0.9999954487235763	WITHOUT_CLASSIFICATION	4.5512764236338E-6	DEFECT
force for args	WITHOUT_CLASSIFICATION	0.9999988498685409	WITHOUT_CLASSIFICATION	1.1501314590720362E-6	DEFECT
XXX 0;	WITHOUT_CLASSIFICATION	0.9999306126470029	WITHOUT_CLASSIFICATION	6.938735299707553E-5	DEFECT
$$ = $3;	WITHOUT_CLASSIFICATION	0.9999754334026094	WITHOUT_CLASSIFICATION	2.456659739054658E-5	DEFECT
}	WITHOUT_CLASSIFICATION	0.9999145255926309	WITHOUT_CLASSIFICATION	8.547440736906815E-5	DEFECT
last expression should not be void	WITHOUT_CLASSIFICATION	0.9999509404453603	WITHOUT_CLASSIFICATION	4.905955463972865E-5	DEFECT
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9999037489210788	WITHOUT_CLASSIFICATION	9.625107892114094E-5	DEFECT
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9999942841992345	WITHOUT_CLASSIFICATION	5.715800765518426E-6	DEFECT
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.999991324240477	WITHOUT_CLASSIFICATION	8.675759522986509E-6	DEFECT
NOEX_PRIVATE for toplevel	WITHOUT_CLASSIFICATION	0.9999999558440309	WITHOUT_CLASSIFICATION	4.4155969083968224E-8	DEFECT
mirko: check	WITHOUT_CLASSIFICATION	0.9999923334090213	WITHOUT_CLASSIFICATION	7.666590978684574E-6	DEFECT
Include pipes on multiple arg type	WITHOUT_CLASSIFICATION	0.9999861936441685	WITHOUT_CLASSIFICATION	1.3806355831371236E-5	DEFECT
line 529	WITHOUT_CLASSIFICATION	0.9999840845563881	WITHOUT_CLASSIFICATION	1.5915443611910846E-5	DEFECT
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9999714970467808	WITHOUT_CLASSIFICATION	2.8502953219155094E-5	DEFECT
XXX	WITHOUT_CLASSIFICATION	0.9995872592864216	WITHOUT_CLASSIFICATION	4.127407135784798E-4	DEFECT
zero length array	WITHOUT_CLASSIFICATION	0.999995455476913	WITHOUT_CLASSIFICATION	4.544523087023396E-6	DEFECT
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9999630466926746	WITHOUT_CLASSIFICATION	3.695330732554753E-5	DEFECT
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9999509555853162	WITHOUT_CLASSIFICATION	4.904441468380379E-5	DEFECT
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9999715169023832	WITHOUT_CLASSIFICATION	2.8483097616827722E-5	DEFECT
line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999995421493234	WITHOUT_CLASSIFICATION	4.578506766694152E-7	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999983923565	WITHOUT_CLASSIFICATION	1.607643501106185E-8	DEFECT
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9993629431600003	WITHOUT_CLASSIFICATION	6.370568399996532E-4	DEFECT
line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999859297391357	WITHOUT_CLASSIFICATION	1.4070260864177304E-5	DEFECT
local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999997569821051	WITHOUT_CLASSIFICATION	2.430178948710937E-7	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999977673668	WITHOUT_CLASSIFICATION	2.2326332005420803E-8	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999977673668	WITHOUT_CLASSIFICATION	2.2326332005420803E-8	DEFECT
We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999964889158657	WITHOUT_CLASSIFICATION	3.5110841342921006E-6	DEFECT
ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999790140971971	WITHOUT_CLASSIFICATION	2.0985902802779634E-5	DEFECT
odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.999796913442535	WITHOUT_CLASSIFICATION	2.0308655746497723E-4	DEFECT
What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999884844371854	WITHOUT_CLASSIFICATION	1.1515562814552574E-5	DEFECT
Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9997741503154844	WITHOUT_CLASSIFICATION	2.258496845155641E-4	DEFECT
We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999962423929005	WITHOUT_CLASSIFICATION	3.7576070995687837E-6	DEFECT
Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9997777207782247	WITHOUT_CLASSIFICATION	2.2227922177518912E-4	DEFECT
Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.999979436611443	WITHOUT_CLASSIFICATION	2.0563388557045167E-5	DEFECT
Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9975678475488359	WITHOUT_CLASSIFICATION	0.0024321524511641663	DEFECT
__END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999998083386521	WITHOUT_CLASSIFICATION	1.916613479170529E-7	DEFECT
Parser states:	WITHOUT_CLASSIFICATION	0.9999973545893035	WITHOUT_CLASSIFICATION	2.645410696463216E-6	DEFECT
Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9997413464676888	WITHOUT_CLASSIFICATION	2.5865353231127076E-4	DEFECT
Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9992345210930828	WITHOUT_CLASSIFICATION	7.654789069171904E-4	DEFECT
LOCALVAR	WITHOUT_CLASSIFICATION	0.9999485870409383	WITHOUT_CLASSIFICATION	5.141295906186142E-5	DEFECT
CONSTANT	WITHOUT_CLASSIFICATION	0.9999950064796397	WITHOUT_CLASSIFICATION	4.993520360298886E-6	DEFECT
INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999772205367605	WITHOUT_CLASSIFICATION	2.2779463239401252E-5	DEFECT
Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.999999804648038	WITHOUT_CLASSIFICATION	1.953519620409544E-7	DEFECT
MRI: block_append	WITHOUT_CLASSIFICATION	0.9999011120014258	WITHOUT_CLASSIFICATION	9.888799857420728E-5	DEFECT
Reduces overhead in interp by not set position every single line we encounter.	WITHOUT_CLASSIFICATION	0.999804124405089	WITHOUT_CLASSIFICATION	1.9587559491101306E-4	DEFECT
Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9995390076592052	WITHOUT_CLASSIFICATION	4.6099234079481107E-4	DEFECT
return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999791441125	WITHOUT_CLASSIFICATION	2.0855887463606297E-8	DEFECT
Node	WITHOUT_CLASSIFICATION	0.9999809198571824	WITHOUT_CLASSIFICATION	1.908014281759999E-5	DEFECT
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.8735604686752392	WITHOUT_CLASSIFICATION	0.12643953132476085	DEFECT
case CONSTNODE: handleUselessWarn(node, "a constant"); return;	WITHOUT_CLASSIFICATION	0.9999999190406136	WITHOUT_CLASSIFICATION	8.09593863963192E-8	DEFECT
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.8735604686752392	WITHOUT_CLASSIFICATION	0.12643953132476085	DEFECT
case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;	WITHOUT_CLASSIFICATION	0.999999179905466	WITHOUT_CLASSIFICATION	8.200945339786684E-7	DEFECT
case SELFNODE: handleUselessWarn(node, "self"); return;	WITHOUT_CLASSIFICATION	0.9999998030752989	WITHOUT_CLASSIFICATION	1.969247010774307E-7	DEFECT
FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.752799796057746	DEFECT	0.24720020394225395	WITHOUT_CLASSIFICATION
MRI: range_op	WITHOUT_CLASSIFICATION	0.9999623211159259	WITHOUT_CLASSIFICATION	3.7678884074051536E-5	DEFECT
Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999125033084456	WITHOUT_CLASSIFICATION	8.749669155440074E-5	DEFECT
foo()	WITHOUT_CLASSIFICATION	0.9999449865614469	WITHOUT_CLASSIFICATION	5.501343855306417E-5	DEFECT
foo()	WITHOUT_CLASSIFICATION	0.9999449865614469	WITHOUT_CLASSIFICATION	5.501343855306417E-5	DEFECT
foo()	WITHOUT_CLASSIFICATION	0.9999449865614469	WITHOUT_CLASSIFICATION	5.501343855306417E-5	DEFECT
tail must be EvStrNode at this point	WITHOUT_CLASSIFICATION	0.9999993504123538	WITHOUT_CLASSIFICATION	6.495876463623562E-7	DEFECT
Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999976824086926	WITHOUT_CLASSIFICATION	2.317591307387221E-6	DEFECT
Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999998962916199	WITHOUT_CLASSIFICATION	1.0370838000991457E-7	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999523438248753	WITHOUT_CLASSIFICATION	4.765617512481385E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999523438248753	WITHOUT_CLASSIFICATION	4.765617512481385E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999523438248753	WITHOUT_CLASSIFICATION	4.765617512481385E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999523438248753	WITHOUT_CLASSIFICATION	4.765617512481385E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999523438248753	WITHOUT_CLASSIFICATION	4.765617512481385E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999523438248753	WITHOUT_CLASSIFICATION	4.765617512481385E-5	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9998798534070868	WITHOUT_CLASSIFICATION	1.201465929132262E-4	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9998798534070868	WITHOUT_CLASSIFICATION	1.201465929132262E-4	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9998798534070868	WITHOUT_CLASSIFICATION	1.201465929132262E-4	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9998798534070868	WITHOUT_CLASSIFICATION	1.201465929132262E-4	DEFECT
yyLen 542	WITHOUT_CLASSIFICATION	0.9998798534070868	WITHOUT_CLASSIFICATION	1.201465929132262E-4	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999573991419229	WITHOUT_CLASSIFICATION	4.260085807716061E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999573991419229	WITHOUT_CLASSIFICATION	4.260085807716061E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999573991419229	WITHOUT_CLASSIFICATION	4.260085807716061E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999573991419229	WITHOUT_CLASSIFICATION	4.260085807716061E-5	DEFECT
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999573991419229	WITHOUT_CLASSIFICATION	4.260085807716061E-5	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998369103345013	WITHOUT_CLASSIFICATION	1.6308966549876064E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998369103345013	WITHOUT_CLASSIFICATION	1.6308966549876064E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998369103345013	WITHOUT_CLASSIFICATION	1.6308966549876064E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998369103345013	WITHOUT_CLASSIFICATION	1.6308966549876064E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998369103345013	WITHOUT_CLASSIFICATION	1.6308966549876064E-4	DEFECT
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998369103345013	WITHOUT_CLASSIFICATION	1.6308966549876064E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9997292102668617	WITHOUT_CLASSIFICATION	2.707897331383389E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9997292102668617	WITHOUT_CLASSIFICATION	2.707897331383389E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9997292102668617	WITHOUT_CLASSIFICATION	2.707897331383389E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9997292102668617	WITHOUT_CLASSIFICATION	2.707897331383389E-4	DEFECT
yySindex 945	WITHOUT_CLASSIFICATION	0.9997292102668617	WITHOUT_CLASSIFICATION	2.707897331383389E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9994953409647399	WITHOUT_CLASSIFICATION	5.046590352601206E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9994953409647399	WITHOUT_CLASSIFICATION	5.046590352601206E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9994953409647399	WITHOUT_CLASSIFICATION	5.046590352601206E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9994953409647399	WITHOUT_CLASSIFICATION	5.046590352601206E-4	DEFECT
yyRindex 945	WITHOUT_CLASSIFICATION	0.9994953409647399	WITHOUT_CLASSIFICATION	5.046590352601206E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998089309166619	WITHOUT_CLASSIFICATION	1.910690833380647E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998089309166619	WITHOUT_CLASSIFICATION	1.910690833380647E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998089309166619	WITHOUT_CLASSIFICATION	1.910690833380647E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998089309166619	WITHOUT_CLASSIFICATION	1.910690833380647E-4	DEFECT
yyGindex 152	WITHOUT_CLASSIFICATION	0.9998089309166619	WITHOUT_CLASSIFICATION	1.910690833380647E-4	DEFECT
dynamically increase	WITHOUT_CLASSIFICATION	0.9999791777363042	WITHOUT_CLASSIFICATION	2.0822263695837693E-5	DEFECT
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999998326503878	WITHOUT_CLASSIFICATION	1.6734961220567585E-7	DEFECT
shift to yyN	WITHOUT_CLASSIFICATION	0.9999964630094327	WITHOUT_CLASSIFICATION	3.53699056737398E-6	DEFECT
reduce (yyN)	WITHOUT_CLASSIFICATION	0.999994231990092	WITHOUT_CLASSIFICATION	5.7680099079729835E-6	DEFECT
leave stack alone	WITHOUT_CLASSIFICATION	0.9999961919330888	WITHOUT_CLASSIFICATION	3.8080669112563917E-6	DEFECT
line 321	WITHOUT_CLASSIFICATION	0.9999923758364488	WITHOUT_CLASSIFICATION	7.6241635510942504E-6	DEFECT
line 351	WITHOUT_CLASSIFICATION	0.999989747128536	WITHOUT_CLASSIFICATION	1.025287146402066E-5	DEFECT
line 382	WITHOUT_CLASSIFICATION	0.9999909730244688	WITHOUT_CLASSIFICATION	9.026975531089795E-6	DEFECT
line 417	WITHOUT_CLASSIFICATION	0.999989145175653	WITHOUT_CLASSIFICATION	1.0854824347080827E-5	DEFECT
line 420	WITHOUT_CLASSIFICATION	0.9999863557164705	WITHOUT_CLASSIFICATION	1.3644283529464162E-5	DEFECT
line 423	WITHOUT_CLASSIFICATION	0.9999879521224706	WITHOUT_CLASSIFICATION	1.2047877529405925E-5	DEFECT
line 426	WITHOUT_CLASSIFICATION	0.9999877770719648	WITHOUT_CLASSIFICATION	1.2222928035118898E-5	DEFECT
line 280	WITHOUT_CLASSIFICATION	0.9999919456075673	WITHOUT_CLASSIFICATION	8.054392432771633E-6	DEFECT
line 283	WITHOUT_CLASSIFICATION	0.9999912526451585	WITHOUT_CLASSIFICATION	8.747354841431755E-6	DEFECT
line 296	WITHOUT_CLASSIFICATION	0.999990526978934	WITHOUT_CLASSIFICATION	9.47302106610083E-6	DEFECT
line 324	WITHOUT_CLASSIFICATION	0.9999882842397093	WITHOUT_CLASSIFICATION	1.171576029059279E-5	DEFECT
line 327	WITHOUT_CLASSIFICATION	0.9999895351487169	WITHOUT_CLASSIFICATION	1.0464851283041668E-5	DEFECT
line 331	WITHOUT_CLASSIFICATION	0.999994663017522	WITHOUT_CLASSIFICATION	5.336982477964084E-6	DEFECT
line 333	WITHOUT_CLASSIFICATION	0.9999934544945827	WITHOUT_CLASSIFICATION	6.545505417398927E-6	DEFECT
line 336	WITHOUT_CLASSIFICATION	0.9999920362662843	WITHOUT_CLASSIFICATION	7.96373371563928E-6	DEFECT
line 342	WITHOUT_CLASSIFICATION	0.9999883560016664	WITHOUT_CLASSIFICATION	1.164399833357104E-5	DEFECT
line 345	WITHOUT_CLASSIFICATION	0.9999877743189656	WITHOUT_CLASSIFICATION	1.2225681034529956E-5	DEFECT
line 348	WITHOUT_CLASSIFICATION	0.9999924841436959	WITHOUT_CLASSIFICATION	7.515856304047367E-6	DEFECT
line 354	WITHOUT_CLASSIFICATION	0.9999859069301402	WITHOUT_CLASSIFICATION	1.409306985980563E-5	DEFECT
line 368	WITHOUT_CLASSIFICATION	0.9999920501173983	WITHOUT_CLASSIFICATION	7.949882601765507E-6	DEFECT
line 377	WITHOUT_CLASSIFICATION	0.9999908664956977	WITHOUT_CLASSIFICATION	9.133504302292134E-6	DEFECT
line 388	WITHOUT_CLASSIFICATION	0.9999939807176879	WITHOUT_CLASSIFICATION	6.01928231211477E-6	DEFECT
line 392	WITHOUT_CLASSIFICATION	0.9999889581254595	WITHOUT_CLASSIFICATION	1.104187454054577E-5	DEFECT
line 397	WITHOUT_CLASSIFICATION	0.9999912686789167	WITHOUT_CLASSIFICATION	8.731321083153575E-6	DEFECT
line 429	WITHOUT_CLASSIFICATION	0.9999898231724533	WITHOUT_CLASSIFICATION	1.0176827546715059E-5	DEFECT
line 432	WITHOUT_CLASSIFICATION	0.9999884087706916	WITHOUT_CLASSIFICATION	1.1591229308333965E-5	DEFECT
line 436	WITHOUT_CLASSIFICATION	0.9999901297377125	WITHOUT_CLASSIFICATION	9.870262287516325E-6	DEFECT
line 445	WITHOUT_CLASSIFICATION	0.9999890390903171	WITHOUT_CLASSIFICATION	1.0960909682922104E-5	DEFECT
line 448	WITHOUT_CLASSIFICATION	0.9999934057073674	WITHOUT_CLASSIFICATION	6.5942926326489755E-6	DEFECT
line 454	WITHOUT_CLASSIFICATION	0.9999895618902199	WITHOUT_CLASSIFICATION	1.0438109780125002E-5	DEFECT
line 459	WITHOUT_CLASSIFICATION	0.9999877909141033	WITHOUT_CLASSIFICATION	1.2209085896783133E-5	DEFECT
line 466	WITHOUT_CLASSIFICATION	0.9999914561924702	WITHOUT_CLASSIFICATION	8.543807529890817E-6	DEFECT
line 469	WITHOUT_CLASSIFICATION	0.9999906774616505	WITHOUT_CLASSIFICATION	9.322538349403647E-6	DEFECT
line 478	WITHOUT_CLASSIFICATION	0.999993372828312	WITHOUT_CLASSIFICATION	6.62717168799822E-6	DEFECT
line 481	WITHOUT_CLASSIFICATION	0.9999951220366597	WITHOUT_CLASSIFICATION	4.877963340165354E-6	DEFECT
line 488	WITHOUT_CLASSIFICATION	0.9999939075104439	WITHOUT_CLASSIFICATION	6.0924895561394575E-6	DEFECT
line 494	WITHOUT_CLASSIFICATION	0.9999928796643678	WITHOUT_CLASSIFICATION	7.120335632167158E-6	DEFECT
line 497	WITHOUT_CLASSIFICATION	0.9999921479169221	WITHOUT_CLASSIFICATION	7.852083077916847E-6	DEFECT
line 503	WITHOUT_CLASSIFICATION	0.999973275482957	WITHOUT_CLASSIFICATION	2.67245170429212E-5	DEFECT
line 506	WITHOUT_CLASSIFICATION	0.9999797607371287	WITHOUT_CLASSIFICATION	2.0239262871288526E-5	DEFECT
line 509	WITHOUT_CLASSIFICATION	0.9999787637003908	WITHOUT_CLASSIFICATION	2.123629960920293E-5	DEFECT
line 512	WITHOUT_CLASSIFICATION	0.9999878737381097	WITHOUT_CLASSIFICATION	1.2126261890332571E-5	DEFECT
line 521	WITHOUT_CLASSIFICATION	0.9999880037171808	WITHOUT_CLASSIFICATION	1.19962828192908E-5	DEFECT
line 526	WITHOUT_CLASSIFICATION	0.9999803232801526	WITHOUT_CLASSIFICATION	1.967671984734632E-5	DEFECT
line 540	WITHOUT_CLASSIFICATION	0.9999844378504589	WITHOUT_CLASSIFICATION	1.55621495411247E-5	DEFECT
line 543	WITHOUT_CLASSIFICATION	0.9999846143815408	WITHOUT_CLASSIFICATION	1.538561845915435E-5	DEFECT
line 546	WITHOUT_CLASSIFICATION	0.9999845691437431	WITHOUT_CLASSIFICATION	1.5430856256986152E-5	DEFECT
line 566	WITHOUT_CLASSIFICATION	0.9999865025462512	WITHOUT_CLASSIFICATION	1.3497453748678535E-5	DEFECT
line 610	WITHOUT_CLASSIFICATION	0.9999923398010035	WITHOUT_CLASSIFICATION	7.660198996411884E-6	DEFECT
line 672	WITHOUT_CLASSIFICATION	0.9999826316816306	WITHOUT_CLASSIFICATION	1.7368318369425417E-5	DEFECT
line 691	WITHOUT_CLASSIFICATION	0.999992008989494	WITHOUT_CLASSIFICATION	7.99101050591822E-6	DEFECT
line 696	WITHOUT_CLASSIFICATION	0.9999899395638707	WITHOUT_CLASSIFICATION	1.0060436129368641E-5	DEFECT
line 772	WITHOUT_CLASSIFICATION	0.9999887229313369	WITHOUT_CLASSIFICATION	1.1277068663108655E-5	DEFECT
line 782	WITHOUT_CLASSIFICATION	0.9999920571999004	WITHOUT_CLASSIFICATION	7.942800099608828E-6	DEFECT
line 785	WITHOUT_CLASSIFICATION	0.9999912810832452	WITHOUT_CLASSIFICATION	8.718916754822007E-6	DEFECT
line 788	WITHOUT_CLASSIFICATION	0.9999947175419976	WITHOUT_CLASSIFICATION	5.282458002405254E-6	DEFECT
line 791	WITHOUT_CLASSIFICATION	0.9999947494796307	WITHOUT_CLASSIFICATION	5.250520369312298E-6	DEFECT
line 534	WITHOUT_CLASSIFICATION	0.9999853787769374	WITHOUT_CLASSIFICATION	1.4621223062480909E-5	DEFECT
line 549	WITHOUT_CLASSIFICATION	0.9999859421930832	WITHOUT_CLASSIFICATION	1.4057806916774258E-5	DEFECT
line 552	WITHOUT_CLASSIFICATION	0.9999840909534109	WITHOUT_CLASSIFICATION	1.5909046589198573E-5	DEFECT
line 558	WITHOUT_CLASSIFICATION	0.9999894964249063	WITHOUT_CLASSIFICATION	1.0503575093633367E-5	DEFECT
line 561	WITHOUT_CLASSIFICATION	0.9999890203682559	WITHOUT_CLASSIFICATION	1.0979631744105654E-5	DEFECT
line 571	WITHOUT_CLASSIFICATION	0.999990472312737	WITHOUT_CLASSIFICATION	9.52768726306278E-6	DEFECT
line 574	WITHOUT_CLASSIFICATION	0.9999845108771857	WITHOUT_CLASSIFICATION	1.548912281429768E-5	DEFECT
line 579	WITHOUT_CLASSIFICATION	0.9999847875421665	WITHOUT_CLASSIFICATION	1.5212457833594784E-5	DEFECT
line 586	WITHOUT_CLASSIFICATION	0.9999870964628454	WITHOUT_CLASSIFICATION	1.2903537154602745E-5	DEFECT
line 589	WITHOUT_CLASSIFICATION	0.9999886392652164	WITHOUT_CLASSIFICATION	1.1360734783536423E-5	DEFECT
line 592	WITHOUT_CLASSIFICATION	0.9999823500563583	WITHOUT_CLASSIFICATION	1.764994364173088E-5	DEFECT
line 595	WITHOUT_CLASSIFICATION	0.9999875197389496	WITHOUT_CLASSIFICATION	1.2480261050406024E-5	DEFECT
line 598	WITHOUT_CLASSIFICATION	0.9999883809715937	WITHOUT_CLASSIFICATION	1.1619028406202405E-5	DEFECT
line 623	WITHOUT_CLASSIFICATION	0.9999811285293669	WITHOUT_CLASSIFICATION	1.8871470633047747E-5	DEFECT
line 627	WITHOUT_CLASSIFICATION	0.99998401782645	WITHOUT_CLASSIFICATION	1.5982173550024528E-5	DEFECT
line 630	WITHOUT_CLASSIFICATION	0.9999874022198866	WITHOUT_CLASSIFICATION	1.259778011346643E-5	DEFECT
line 633	WITHOUT_CLASSIFICATION	0.9999891518921307	WITHOUT_CLASSIFICATION	1.0848107869307213E-5	DEFECT
line 639	WITHOUT_CLASSIFICATION	0.9999868098844261	WITHOUT_CLASSIFICATION	1.319011557381957E-5	DEFECT
line 648	WITHOUT_CLASSIFICATION	0.999990247756641	WITHOUT_CLASSIFICATION	9.752243358881247E-6	DEFECT
line 657	WITHOUT_CLASSIFICATION	0.9999824344888433	WITHOUT_CLASSIFICATION	1.756551115672884E-5	DEFECT
line 661	WITHOUT_CLASSIFICATION	0.9999919724717935	WITHOUT_CLASSIFICATION	8.027528206523308E-6	DEFECT
line 666	WITHOUT_CLASSIFICATION	0.9999906270679744	WITHOUT_CLASSIFICATION	9.372932025662456E-6	DEFECT
line 678	WITHOUT_CLASSIFICATION	0.9999913468301628	WITHOUT_CLASSIFICATION	8.65316983718531E-6	DEFECT
line 682	WITHOUT_CLASSIFICATION	0.999987854229836	WITHOUT_CLASSIFICATION	1.2145770163877978E-5	DEFECT
line 688	WITHOUT_CLASSIFICATION	0.9999920377227007	WITHOUT_CLASSIFICATION	7.962277299192464E-6	DEFECT
line 699	WITHOUT_CLASSIFICATION	0.9999896711069898	WITHOUT_CLASSIFICATION	1.032889301031825E-5	DEFECT
line 706	WITHOUT_CLASSIFICATION	0.9999903562329393	WITHOUT_CLASSIFICATION	9.643767060683865E-6	DEFECT
line 708	WITHOUT_CLASSIFICATION	0.9999920268110261	WITHOUT_CLASSIFICATION	7.973188973983022E-6	DEFECT
line 727	WITHOUT_CLASSIFICATION	0.9999898244782202	WITHOUT_CLASSIFICATION	1.0175521779817861E-5	DEFECT
line 737	WITHOUT_CLASSIFICATION	0.999992070825564	WITHOUT_CLASSIFICATION	7.929174436032582E-6	DEFECT
line 753	WITHOUT_CLASSIFICATION	0.9999865165197641	WITHOUT_CLASSIFICATION	1.348348023576235E-5	DEFECT
line 779	WITHOUT_CLASSIFICATION	0.9999930938178552	WITHOUT_CLASSIFICATION	6.906182144734951E-6	DEFECT
line 801	WITHOUT_CLASSIFICATION	0.9999956495860196	WITHOUT_CLASSIFICATION	4.3504139803360216E-6	DEFECT
line 808	WITHOUT_CLASSIFICATION	0.9999932192362927	WITHOUT_CLASSIFICATION	6.780763707291139E-6	DEFECT
line 811	WITHOUT_CLASSIFICATION	0.9999965971056207	WITHOUT_CLASSIFICATION	3.4028943792077184E-6	DEFECT
line 817	WITHOUT_CLASSIFICATION	0.9999933418610226	WITHOUT_CLASSIFICATION	6.658138977461175E-6	DEFECT
line 842	WITHOUT_CLASSIFICATION	0.9999907132479223	WITHOUT_CLASSIFICATION	9.286752077672688E-6	DEFECT
line 845	WITHOUT_CLASSIFICATION	0.9999900422995155	WITHOUT_CLASSIFICATION	9.957700484400412E-6	DEFECT
line 848	WITHOUT_CLASSIFICATION	0.9999936657502321	WITHOUT_CLASSIFICATION	6.334249767966821E-6	DEFECT
line 893	WITHOUT_CLASSIFICATION	0.9999913766316544	WITHOUT_CLASSIFICATION	8.623368345661027E-6	DEFECT
line 899	WITHOUT_CLASSIFICATION	0.9999942777753168	WITHOUT_CLASSIFICATION	5.722224683246106E-6	DEFECT
line 932	WITHOUT_CLASSIFICATION	0.9999848335985975	WITHOUT_CLASSIFICATION	1.5166401402493116E-5	DEFECT
line 944	WITHOUT_CLASSIFICATION	0.9999912086282815	WITHOUT_CLASSIFICATION	8.791371718385476E-6	DEFECT
line 960	WITHOUT_CLASSIFICATION	0.9999907233207243	WITHOUT_CLASSIFICATION	9.276679275629486E-6	DEFECT
line 980	WITHOUT_CLASSIFICATION	0.9999926902540338	WITHOUT_CLASSIFICATION	7.3097459661908574E-6	DEFECT
line 1004	WITHOUT_CLASSIFICATION	0.9999943464977948	WITHOUT_CLASSIFICATION	5.6535022051521945E-6	DEFECT
line 1038	WITHOUT_CLASSIFICATION	0.9999953044433297	WITHOUT_CLASSIFICATION	4.695556670265448E-6	DEFECT
line 820	WITHOUT_CLASSIFICATION	0.9999887359444489	WITHOUT_CLASSIFICATION	1.126405555117086E-5	DEFECT
line 826	WITHOUT_CLASSIFICATION	0.9999900843875734	WITHOUT_CLASSIFICATION	9.915612426573775E-6	DEFECT
line 829	WITHOUT_CLASSIFICATION	0.9999917466239072	WITHOUT_CLASSIFICATION	8.253376092757578E-6	DEFECT
line 832	WITHOUT_CLASSIFICATION	0.9999905272912486	WITHOUT_CLASSIFICATION	9.472708751329375E-6	DEFECT
line 851	WITHOUT_CLASSIFICATION	0.999993084975815	WITHOUT_CLASSIFICATION	6.915024184983827E-6	DEFECT
line 857	WITHOUT_CLASSIFICATION	0.9999892579150561	WITHOUT_CLASSIFICATION	1.0742084943780833E-5	DEFECT
line 860	WITHOUT_CLASSIFICATION	0.9999926866956904	WITHOUT_CLASSIFICATION	7.313304309490966E-6	DEFECT
line 863	WITHOUT_CLASSIFICATION	0.9999916134933441	WITHOUT_CLASSIFICATION	8.3865066558078E-6	DEFECT
line 866	WITHOUT_CLASSIFICATION	0.9999932410529858	WITHOUT_CLASSIFICATION	6.758947014141613E-6	DEFECT
line 869	WITHOUT_CLASSIFICATION	0.9999926275474657	WITHOUT_CLASSIFICATION	7.3724525343249E-6	DEFECT
line 875	WITHOUT_CLASSIFICATION	0.9999887681331765	WITHOUT_CLASSIFICATION	1.1231866823509943E-5	DEFECT
line 884	WITHOUT_CLASSIFICATION	0.9999938309844411	WITHOUT_CLASSIFICATION	6.169015558995277E-6	DEFECT
line 887	WITHOUT_CLASSIFICATION	0.9999942121124886	WITHOUT_CLASSIFICATION	5.78788751144514E-6	DEFECT
line 890	WITHOUT_CLASSIFICATION	0.9999936248436764	WITHOUT_CLASSIFICATION	6.375156323557518E-6	DEFECT
line 902	WITHOUT_CLASSIFICATION	0.9999885430205679	WITHOUT_CLASSIFICATION	1.1456979432075047E-5	DEFECT
line 909	WITHOUT_CLASSIFICATION	0.9999904096766411	WITHOUT_CLASSIFICATION	9.590323358863651E-6	DEFECT
line 912	WITHOUT_CLASSIFICATION	0.9999923324992139	WITHOUT_CLASSIFICATION	7.667500786115275E-6	DEFECT
line 916	WITHOUT_CLASSIFICATION	0.9999936325697556	WITHOUT_CLASSIFICATION	6.367430244303418E-6	DEFECT
line 922	WITHOUT_CLASSIFICATION	0.9999913765000015	WITHOUT_CLASSIFICATION	8.623499998437258E-6	DEFECT
line 928	WITHOUT_CLASSIFICATION	0.9999910062743274	WITHOUT_CLASSIFICATION	8.99372567271612E-6	DEFECT
line 941	WITHOUT_CLASSIFICATION	0.9999932265191365	WITHOUT_CLASSIFICATION	6.773480863541172E-6	DEFECT
line 947	WITHOUT_CLASSIFICATION	0.9999908828648867	WITHOUT_CLASSIFICATION	9.117135113209836E-6	DEFECT
line 951	WITHOUT_CLASSIFICATION	0.9999915224751732	WITHOUT_CLASSIFICATION	8.477524826788942E-6	DEFECT
line 955	WITHOUT_CLASSIFICATION	0.999989252535015	WITHOUT_CLASSIFICATION	1.0747464984956327E-5	DEFECT
line 965	WITHOUT_CLASSIFICATION	0.9999870185644514	WITHOUT_CLASSIFICATION	1.2981435548511711E-5	DEFECT
line 969	WITHOUT_CLASSIFICATION	0.9999917657907132	WITHOUT_CLASSIFICATION	8.234209286700244E-6	DEFECT
line 977	WITHOUT_CLASSIFICATION	0.999992157291362	WITHOUT_CLASSIFICATION	7.842708638084799E-6	DEFECT
line 983	WITHOUT_CLASSIFICATION	0.9999922595067291	WITHOUT_CLASSIFICATION	7.740493270886479E-6	DEFECT
line 1013	WITHOUT_CLASSIFICATION	0.999996344161622	WITHOUT_CLASSIFICATION	3.6558383780022865E-6	DEFECT
line 1023	WITHOUT_CLASSIFICATION	0.9999945014523546	WITHOUT_CLASSIFICATION	5.498547645497271E-6	DEFECT
line 1035	WITHOUT_CLASSIFICATION	0.9999908432142237	WITHOUT_CLASSIFICATION	9.156785776189847E-6	DEFECT
line 1041	WITHOUT_CLASSIFICATION	0.999995722804873	WITHOUT_CLASSIFICATION	4.2771951270582734E-6	DEFECT
line 1043	WITHOUT_CLASSIFICATION	0.9999949405894023	WITHOUT_CLASSIFICATION	5.059410597612279E-6	DEFECT
line 1054	WITHOUT_CLASSIFICATION	0.9999944620284851	WITHOUT_CLASSIFICATION	5.537971514977417E-6	DEFECT
line 1057	WITHOUT_CLASSIFICATION	0.999994131250088	WITHOUT_CLASSIFICATION	5.868749912033051E-6	DEFECT
line 1060	WITHOUT_CLASSIFICATION	0.9999959650990317	WITHOUT_CLASSIFICATION	4.034900968315288E-6	DEFECT
line 1069	WITHOUT_CLASSIFICATION	0.9999953587450762	WITHOUT_CLASSIFICATION	4.641254923816464E-6	DEFECT
line 1075	WITHOUT_CLASSIFICATION	0.9999943716072754	WITHOUT_CLASSIFICATION	5.628392724487927E-6	DEFECT
line 1105	WITHOUT_CLASSIFICATION	0.9999963567886129	WITHOUT_CLASSIFICATION	3.643211387033698E-6	DEFECT
line 1111	WITHOUT_CLASSIFICATION	0.9999968644303069	WITHOUT_CLASSIFICATION	3.1355696931020338E-6	DEFECT
line 1122	WITHOUT_CLASSIFICATION	0.9999961907898849	WITHOUT_CLASSIFICATION	3.8092101151190444E-6	DEFECT
line 1130	WITHOUT_CLASSIFICATION	0.9999956269624997	WITHOUT_CLASSIFICATION	4.373037500365682E-6	DEFECT
line 1140	WITHOUT_CLASSIFICATION	0.9999945025288296	WITHOUT_CLASSIFICATION	5.497471170409406E-6	DEFECT
line 1158	WITHOUT_CLASSIFICATION	0.999994989258334	WITHOUT_CLASSIFICATION	5.01074166602334E-6	DEFECT
line 1204	WITHOUT_CLASSIFICATION	0.9999893627080734	WITHOUT_CLASSIFICATION	1.0637291926566484E-5	DEFECT
line 1207	WITHOUT_CLASSIFICATION	0.9999923324551079	WITHOUT_CLASSIFICATION	7.66754489212387E-6	DEFECT
line 1247	WITHOUT_CLASSIFICATION	0.9999921408153764	WITHOUT_CLASSIFICATION	7.859184623653619E-6	DEFECT
line 1251	WITHOUT_CLASSIFICATION	0.9999882956425579	WITHOUT_CLASSIFICATION	1.1704357442117392E-5	DEFECT
line 1261	WITHOUT_CLASSIFICATION	0.9999912826160023	WITHOUT_CLASSIFICATION	8.717383997715097E-6	DEFECT
line 1078	WITHOUT_CLASSIFICATION	0.999997281671633	WITHOUT_CLASSIFICATION	2.7183283669552563E-6	DEFECT
line 1084	WITHOUT_CLASSIFICATION	0.9999961328522202	WITHOUT_CLASSIFICATION	3.867147779758795E-6	DEFECT
line 1087	WITHOUT_CLASSIFICATION	0.9999963717690542	WITHOUT_CLASSIFICATION	3.6282309458033423E-6	DEFECT
line 1090	WITHOUT_CLASSIFICATION	0.9999957368688525	WITHOUT_CLASSIFICATION	4.2631311475459E-6	DEFECT
line 1093	WITHOUT_CLASSIFICATION	0.9999924669778081	WITHOUT_CLASSIFICATION	7.533022191914325E-6	DEFECT
line 1114	WITHOUT_CLASSIFICATION	0.9999955820343639	WITHOUT_CLASSIFICATION	4.417965636118919E-6	DEFECT
line 1116	WITHOUT_CLASSIFICATION	0.9999963233827962	WITHOUT_CLASSIFICATION	3.676617203861979E-6	DEFECT
line 1118	WITHOUT_CLASSIFICATION	0.9999974011618681	WITHOUT_CLASSIFICATION	2.5988381318496083E-6	DEFECT
line 1124	WITHOUT_CLASSIFICATION	0.9999953212774795	WITHOUT_CLASSIFICATION	4.678722520531023E-6	DEFECT
line 1126	WITHOUT_CLASSIFICATION	0.9999948547393908	WITHOUT_CLASSIFICATION	5.145260609264789E-6	DEFECT
line 1138	WITHOUT_CLASSIFICATION	0.9999964454227428	WITHOUT_CLASSIFICATION	3.554577257097358E-6	DEFECT
line 1144	WITHOUT_CLASSIFICATION	0.9999950916220661	WITHOUT_CLASSIFICATION	4.908377933922098E-6	DEFECT
line 1149	WITHOUT_CLASSIFICATION	0.9999950336895957	WITHOUT_CLASSIFICATION	4.9663104042122345E-6	DEFECT
line 1155	WITHOUT_CLASSIFICATION	0.9999951239553347	WITHOUT_CLASSIFICATION	4.876044665258486E-6	DEFECT
line 1162	WITHOUT_CLASSIFICATION	0.9999943420550913	WITHOUT_CLASSIFICATION	5.657944908664949E-6	DEFECT
line 1173	WITHOUT_CLASSIFICATION	0.9999934679849631	WITHOUT_CLASSIFICATION	6.532015036783749E-6	DEFECT
line 1179	WITHOUT_CLASSIFICATION	0.9999943713003291	WITHOUT_CLASSIFICATION	5.628699670980839E-6	DEFECT
line 1182	WITHOUT_CLASSIFICATION	0.9999961677765268	WITHOUT_CLASSIFICATION	3.832223473222181E-6	DEFECT
line 1190	WITHOUT_CLASSIFICATION	0.9999960018451092	WITHOUT_CLASSIFICATION	3.998154890933892E-6	DEFECT
line 1196	WITHOUT_CLASSIFICATION	0.9999959170500258	WITHOUT_CLASSIFICATION	4.082949974224239E-6	DEFECT
line 1213	WITHOUT_CLASSIFICATION	0.9999920816962797	WITHOUT_CLASSIFICATION	7.918303720374723E-6	DEFECT
line 1217	WITHOUT_CLASSIFICATION	0.9999900743672412	WITHOUT_CLASSIFICATION	9.925632758757428E-6	DEFECT
line 1231	WITHOUT_CLASSIFICATION	0.9999921442224435	WITHOUT_CLASSIFICATION	7.855777556513624E-6	DEFECT
line 1236	WITHOUT_CLASSIFICATION	0.9999909276564977	WITHOUT_CLASSIFICATION	9.07234350239009E-6	DEFECT
line 1244	WITHOUT_CLASSIFICATION	0.9999924216314153	WITHOUT_CLASSIFICATION	7.5783685846938315E-6	DEFECT
line 1254	WITHOUT_CLASSIFICATION	0.9999864538527047	WITHOUT_CLASSIFICATION	1.3546147295350357E-5	DEFECT
line 1258	WITHOUT_CLASSIFICATION	0.9999883592307203	WITHOUT_CLASSIFICATION	1.1640769279772181E-5	DEFECT
line 1264	WITHOUT_CLASSIFICATION	0.9999908225154698	WITHOUT_CLASSIFICATION	9.177484530272149E-6	DEFECT
line 1270	WITHOUT_CLASSIFICATION	0.9999909411106092	WITHOUT_CLASSIFICATION	9.058889390876996E-6	DEFECT
line 1273	WITHOUT_CLASSIFICATION	0.9999909143908389	WITHOUT_CLASSIFICATION	9.085609161130987E-6	DEFECT
line 1276	WITHOUT_CLASSIFICATION	0.999992288758235	WITHOUT_CLASSIFICATION	7.711241764951322E-6	DEFECT
line 1279	WITHOUT_CLASSIFICATION	0.9999920715946703	WITHOUT_CLASSIFICATION	7.928405329583158E-6	DEFECT
line 1282	WITHOUT_CLASSIFICATION	0.999993985668068	WITHOUT_CLASSIFICATION	6.014331932036522E-6	DEFECT
line 1289	WITHOUT_CLASSIFICATION	0.9999937569390397	WITHOUT_CLASSIFICATION	6.243060960243017E-6	DEFECT
line 1292	WITHOUT_CLASSIFICATION	0.9999936410210915	WITHOUT_CLASSIFICATION	6.358978908605367E-6	DEFECT
line 1295	WITHOUT_CLASSIFICATION	0.9999898764522624	WITHOUT_CLASSIFICATION	1.0123547737475296E-5	DEFECT
line 1298	WITHOUT_CLASSIFICATION	0.9999940418614466	WITHOUT_CLASSIFICATION	5.958138553387112E-6	DEFECT
line 1305	WITHOUT_CLASSIFICATION	0.99999164828127	WITHOUT_CLASSIFICATION	8.35171872995271E-6	DEFECT
line 1348	WITHOUT_CLASSIFICATION	0.9999943879468062	WITHOUT_CLASSIFICATION	5.612053193838931E-6	DEFECT
line 1387	WITHOUT_CLASSIFICATION	0.9999949243202018	WITHOUT_CLASSIFICATION	5.075679798130299E-6	DEFECT
line 1392	WITHOUT_CLASSIFICATION	0.9999917388619407	WITHOUT_CLASSIFICATION	8.261138059380688E-6	DEFECT
line 1448	WITHOUT_CLASSIFICATION	0.999993656674057	WITHOUT_CLASSIFICATION	6.343325943018966E-6	DEFECT
line 1462	WITHOUT_CLASSIFICATION	0.9999886459671918	WITHOUT_CLASSIFICATION	1.1354032808146945E-5	DEFECT
line 1470	WITHOUT_CLASSIFICATION	0.9999914939895183	WITHOUT_CLASSIFICATION	8.506010481736104E-6	DEFECT
line 1496	WITHOUT_CLASSIFICATION	0.9999920515162245	WITHOUT_CLASSIFICATION	7.948483775421682E-6	DEFECT
line 1502	WITHOUT_CLASSIFICATION	0.9999887439252141	WITHOUT_CLASSIFICATION	1.1256074785822556E-5	DEFECT
line 1595	WITHOUT_CLASSIFICATION	0.9999927229718791	WITHOUT_CLASSIFICATION	7.277028120863227E-6	DEFECT
line 1598	WITHOUT_CLASSIFICATION	0.9999932692019985	WITHOUT_CLASSIFICATION	6.730798001461621E-6	DEFECT
line 1308	WITHOUT_CLASSIFICATION	0.9999941776945551	WITHOUT_CLASSIFICATION	5.8223054449076475E-6	DEFECT
line 1311	WITHOUT_CLASSIFICATION	0.9999955835798507	WITHOUT_CLASSIFICATION	4.416420149205658E-6	DEFECT
line 1317	WITHOUT_CLASSIFICATION	0.9999913587942059	WITHOUT_CLASSIFICATION	8.641205794142889E-6	DEFECT
line 1323	WITHOUT_CLASSIFICATION	0.9999929147121207	WITHOUT_CLASSIFICATION	7.0852878793214765E-6	DEFECT
line 1326	WITHOUT_CLASSIFICATION	0.9999905698382956	WITHOUT_CLASSIFICATION	9.430161704461534E-6	DEFECT
line 1329	WITHOUT_CLASSIFICATION	0.999992148437407	WITHOUT_CLASSIFICATION	7.851562592991096E-6	DEFECT
line 1337	WITHOUT_CLASSIFICATION	0.9999944755066854	WITHOUT_CLASSIFICATION	5.524493314646009E-6	DEFECT
line 1342	WITHOUT_CLASSIFICATION	0.9999913054742232	WITHOUT_CLASSIFICATION	8.694525776663555E-6	DEFECT
line 1345	WITHOUT_CLASSIFICATION	0.9999908711327923	WITHOUT_CLASSIFICATION	9.128867207728011E-6	DEFECT
line 1354	WITHOUT_CLASSIFICATION	0.9999894767560358	WITHOUT_CLASSIFICATION	1.0523243964260829E-5	DEFECT
line 1359	WITHOUT_CLASSIFICATION	0.9999895078673264	WITHOUT_CLASSIFICATION	1.0492132673698058E-5	DEFECT
line 1366	WITHOUT_CLASSIFICATION	0.9999932956500304	WITHOUT_CLASSIFICATION	6.704349969662588E-6	DEFECT
line 1369	WITHOUT_CLASSIFICATION	0.9999926845765239	WITHOUT_CLASSIFICATION	7.3154234760497805E-6	DEFECT
line 1373	WITHOUT_CLASSIFICATION	0.9999940907192524	WITHOUT_CLASSIFICATION	5.909280747572349E-6	DEFECT
line 1377	WITHOUT_CLASSIFICATION	0.9999937363933843	WITHOUT_CLASSIFICATION	6.263606615693342E-6	DEFECT
line 1383	WITHOUT_CLASSIFICATION	0.9999956860401734	WITHOUT_CLASSIFICATION	4.313959826619344E-6	DEFECT
line 1399	WITHOUT_CLASSIFICATION	0.9999939912913066	WITHOUT_CLASSIFICATION	6.0087086933750576E-6	DEFECT
line 1401	WITHOUT_CLASSIFICATION	0.9999933304822939	WITHOUT_CLASSIFICATION	6.669517706086843E-6	DEFECT
line 1406	WITHOUT_CLASSIFICATION	0.9999905753383087	WITHOUT_CLASSIFICATION	9.424661691279594E-6	DEFECT
line 1417	WITHOUT_CLASSIFICATION	0.9999894827406157	WITHOUT_CLASSIFICATION	1.051725938427452E-5	DEFECT
line 1424	WITHOUT_CLASSIFICATION	0.9999910714623776	WITHOUT_CLASSIFICATION	8.92853762240054E-6	DEFECT
line 1427	WITHOUT_CLASSIFICATION	0.9999906579456488	WITHOUT_CLASSIFICATION	9.342054351142586E-6	DEFECT
line 1430	WITHOUT_CLASSIFICATION	0.9999919725140288	WITHOUT_CLASSIFICATION	8.02748597119414E-6	DEFECT
line 1433	WITHOUT_CLASSIFICATION	0.99999354109049	WITHOUT_CLASSIFICATION	6.458909510035617E-6	DEFECT
line 1436	WITHOUT_CLASSIFICATION	0.9999909835394007	WITHOUT_CLASSIFICATION	9.016460599280885E-6	DEFECT
line 1442	WITHOUT_CLASSIFICATION	0.9999901666772713	WITHOUT_CLASSIFICATION	9.833322728714714E-6	DEFECT
line 1445	WITHOUT_CLASSIFICATION	0.999989456240695	WITHOUT_CLASSIFICATION	1.0543759305015936E-5	DEFECT
line 1458	WITHOUT_CLASSIFICATION	0.9999903989060032	WITHOUT_CLASSIFICATION	9.601093996821525E-6	DEFECT
line 1464	WITHOUT_CLASSIFICATION	0.9999926777881389	WITHOUT_CLASSIFICATION	7.322211861040755E-6	DEFECT
line 1489	WITHOUT_CLASSIFICATION	0.9999939629642621	WITHOUT_CLASSIFICATION	6.037035737803001E-6	DEFECT
line 1493	WITHOUT_CLASSIFICATION	0.9999896932358405	WITHOUT_CLASSIFICATION	1.030676415950863E-5	DEFECT
line 1507	WITHOUT_CLASSIFICATION	0.9999927566188132	WITHOUT_CLASSIFICATION	7.243381186886516E-6	DEFECT
line 1519	WITHOUT_CLASSIFICATION	0.9999927172782745	WITHOUT_CLASSIFICATION	7.28272172554774E-6	DEFECT
line 1532	WITHOUT_CLASSIFICATION	0.9999891883864729	WITHOUT_CLASSIFICATION	1.0811613527120152E-5	DEFECT
line 1538	WITHOUT_CLASSIFICATION	0.999993356932811	WITHOUT_CLASSIFICATION	6.6430671890083605E-6	DEFECT
line 1542	WITHOUT_CLASSIFICATION	0.9999890483297124	WITHOUT_CLASSIFICATION	1.0951670287703736E-5	DEFECT
line 1557	WITHOUT_CLASSIFICATION	0.9999922780460164	WITHOUT_CLASSIFICATION	7.721953983557165E-6	DEFECT
line 1573	WITHOUT_CLASSIFICATION	0.999989659599869	WITHOUT_CLASSIFICATION	1.0340400131095704E-5	DEFECT
line 1591	WITHOUT_CLASSIFICATION	0.999992568440612	WITHOUT_CLASSIFICATION	7.431559388011023E-6	DEFECT
line 1615	WITHOUT_CLASSIFICATION	0.999991772838108	WITHOUT_CLASSIFICATION	8.22716189188312E-6	DEFECT
line 1629	WITHOUT_CLASSIFICATION	0.9999924083806536	WITHOUT_CLASSIFICATION	7.591619346357183E-6	DEFECT
line 1632	WITHOUT_CLASSIFICATION	0.9999911185571251	WITHOUT_CLASSIFICATION	8.881442874962225E-6	DEFECT
line 1705	WITHOUT_CLASSIFICATION	0.999979291185834	WITHOUT_CLASSIFICATION	2.07088141661256E-5	DEFECT
line 1716	WITHOUT_CLASSIFICATION	0.999990502403542	WITHOUT_CLASSIFICATION	9.49759645800077E-6	DEFECT
line 1725	WITHOUT_CLASSIFICATION	0.999965202454579	WITHOUT_CLASSIFICATION	3.4797545420997265E-5	DEFECT
line 1742	WITHOUT_CLASSIFICATION	0.9999850972671163	WITHOUT_CLASSIFICATION	1.4902732883748335E-5	DEFECT
line 1749	WITHOUT_CLASSIFICATION	0.9999886758155873	WITHOUT_CLASSIFICATION	1.1324184412653583E-5	DEFECT
line 1818	WITHOUT_CLASSIFICATION	0.9999966614366633	WITHOUT_CLASSIFICATION	3.3385633367613302E-6	DEFECT
line 1822	WITHOUT_CLASSIFICATION	0.9999954487235763	WITHOUT_CLASSIFICATION	4.5512764236338E-6	DEFECT
line 1607	WITHOUT_CLASSIFICATION	0.99999499397673	WITHOUT_CLASSIFICATION	5.006023270042329E-6	DEFECT
line 1610	WITHOUT_CLASSIFICATION	0.9999952829156724	WITHOUT_CLASSIFICATION	4.71708432764676E-6	DEFECT
line 1622	WITHOUT_CLASSIFICATION	0.9999932360065795	WITHOUT_CLASSIFICATION	6.7639934204636305E-6	DEFECT
line 1625	WITHOUT_CLASSIFICATION	0.9999867047605774	WITHOUT_CLASSIFICATION	1.3295239422586954E-5	DEFECT
line 1636	WITHOUT_CLASSIFICATION	0.9999936749971614	WITHOUT_CLASSIFICATION	6.325002838626088E-6	DEFECT
line 1639	WITHOUT_CLASSIFICATION	0.9999929680707873	WITHOUT_CLASSIFICATION	7.03192921270508E-6	DEFECT
line 1647	WITHOUT_CLASSIFICATION	0.9999940913015062	WITHOUT_CLASSIFICATION	5.90869849376465E-6	DEFECT
line 1651	WITHOUT_CLASSIFICATION	0.999992440277123	WITHOUT_CLASSIFICATION	7.559722877008703E-6	DEFECT
line 1657	WITHOUT_CLASSIFICATION	0.9999908219006367	WITHOUT_CLASSIFICATION	9.178099363246766E-6	DEFECT
line 1660	WITHOUT_CLASSIFICATION	0.9999943273199148	WITHOUT_CLASSIFICATION	5.672680085204841E-6	DEFECT
line 1663	WITHOUT_CLASSIFICATION	0.9999934948719851	WITHOUT_CLASSIFICATION	6.5051280148295146E-6	DEFECT
line 1678	WITHOUT_CLASSIFICATION	0.9999953929952318	WITHOUT_CLASSIFICATION	4.607004768233051E-6	DEFECT
line 1702	WITHOUT_CLASSIFICATION	0.9999786032439844	WITHOUT_CLASSIFICATION	2.1396756015545268E-5	DEFECT
line 1711	WITHOUT_CLASSIFICATION	0.9999940906349585	WITHOUT_CLASSIFICATION	5.9093650414767544E-6	DEFECT
line 1719	WITHOUT_CLASSIFICATION	0.9999909296127898	WITHOUT_CLASSIFICATION	9.070387210185346E-6	DEFECT
line 1722	WITHOUT_CLASSIFICATION	0.9999843152529395	WITHOUT_CLASSIFICATION	1.5684747060571327E-5	DEFECT
line 1731	WITHOUT_CLASSIFICATION	0.9999880560892428	WITHOUT_CLASSIFICATION	1.194391075712089E-5	DEFECT
line 1734	WITHOUT_CLASSIFICATION	0.9999871003656042	WITHOUT_CLASSIFICATION	1.2899634395814912E-5	DEFECT
line 1738	WITHOUT_CLASSIFICATION	0.9999899200143736	WITHOUT_CLASSIFICATION	1.0079985626273E-5	DEFECT
line 1746	WITHOUT_CLASSIFICATION	0.9999875720832314	WITHOUT_CLASSIFICATION	1.2427916768722653E-5	DEFECT
line 1756	WITHOUT_CLASSIFICATION	0.9999760310216655	WITHOUT_CLASSIFICATION	2.396897833452761E-5	DEFECT
line 1758	WITHOUT_CLASSIFICATION	0.9999740761620977	WITHOUT_CLASSIFICATION	2.5923837902312908E-5	DEFECT
line 1761	WITHOUT_CLASSIFICATION	0.9999888273006542	WITHOUT_CLASSIFICATION	1.1172699345878302E-5	DEFECT
line 1767	WITHOUT_CLASSIFICATION	0.9999900210103391	WITHOUT_CLASSIFICATION	9.978989660885023E-6	DEFECT
line 1776	WITHOUT_CLASSIFICATION	0.9999895257231709	WITHOUT_CLASSIFICATION	1.0474276829079838E-5	DEFECT
line 1782	WITHOUT_CLASSIFICATION	0.9999882177871717	WITHOUT_CLASSIFICATION	1.1782212828258323E-5	DEFECT
line 1785	WITHOUT_CLASSIFICATION	0.9999870665139488	WITHOUT_CLASSIFICATION	1.2933486051388306E-5	DEFECT
line 1788	WITHOUT_CLASSIFICATION	0.9999921640827293	WITHOUT_CLASSIFICATION	7.835917270739381E-6	DEFECT
line 1791	WITHOUT_CLASSIFICATION	0.9999902388337988	WITHOUT_CLASSIFICATION	9.761166201281499E-6	DEFECT
line 1797	WITHOUT_CLASSIFICATION	0.9999902544262839	WITHOUT_CLASSIFICATION	9.745573716189433E-6	DEFECT
line 1800	WITHOUT_CLASSIFICATION	0.9999945726263646	WITHOUT_CLASSIFICATION	5.4273736353927456E-6	DEFECT
line 1803	WITHOUT_CLASSIFICATION	0.9999932831311377	WITHOUT_CLASSIFICATION	6.716868862355283E-6	DEFECT
line 1806	WITHOUT_CLASSIFICATION	0.999995097147469	WITHOUT_CLASSIFICATION	4.902852530957314E-6	DEFECT
line 1809	WITHOUT_CLASSIFICATION	0.9999948535315362	WITHOUT_CLASSIFICATION	5.146468463807923E-6	DEFECT
line 1815	WITHOUT_CLASSIFICATION	0.9999947311949224	WITHOUT_CLASSIFICATION	5.268805077549191E-6	DEFECT
line 1825	WITHOUT_CLASSIFICATION	0.9999910535826463	WITHOUT_CLASSIFICATION	8.946417353666626E-6	DEFECT
line 1828	WITHOUT_CLASSIFICATION	0.9999951477848499	WITHOUT_CLASSIFICATION	4.852215150076E-6	DEFECT
line 1831	WITHOUT_CLASSIFICATION	0.9999957312428199	WITHOUT_CLASSIFICATION	4.268757180057236E-6	DEFECT
line 1847	WITHOUT_CLASSIFICATION	0.9999957487775243	WITHOUT_CLASSIFICATION	4.251222475765776E-6	DEFECT
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9999942841992345	WITHOUT_CLASSIFICATION	5.715800765518426E-6	DEFECT
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.999991324240477	WITHOUT_CLASSIFICATION	8.675759522986509E-6	DEFECT
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9999714970467808	WITHOUT_CLASSIFICATION	2.8502953219155094E-5	DEFECT
zero length array	WITHOUT_CLASSIFICATION	0.999995455476913	WITHOUT_CLASSIFICATION	4.544523087023396E-6	DEFECT
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9999630466926746	WITHOUT_CLASSIFICATION	3.695330732554753E-5	DEFECT
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9999509555853162	WITHOUT_CLASSIFICATION	4.904441468380379E-5	DEFECT
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9999715169023832	WITHOUT_CLASSIFICATION	2.8483097616827722E-5	DEFECT
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999182941174826	WITHOUT_CLASSIFICATION	8.170588251743004E-5	DEFECT
line 1854	WITHOUT_CLASSIFICATION	0.9999937280679093	WITHOUT_CLASSIFICATION	6.2719320906734354E-6	DEFECT
line 1869	WITHOUT_CLASSIFICATION	0.9999954382070341	WITHOUT_CLASSIFICATION	4.561792965930609E-6	DEFECT
line 1872	WITHOUT_CLASSIFICATION	0.9999933567696997	WITHOUT_CLASSIFICATION	6.64323030029672E-6	DEFECT
line 1877	WITHOUT_CLASSIFICATION	0.9999962270961779	WITHOUT_CLASSIFICATION	3.7729038220904614E-6	DEFECT
line 1886	WITHOUT_CLASSIFICATION	0.9999961168513908	WITHOUT_CLASSIFICATION	3.883148609243322E-6	DEFECT
line 1898	WITHOUT_CLASSIFICATION	0.9999968970545569	WITHOUT_CLASSIFICATION	3.1029454432620874E-6	DEFECT
line 1902	WITHOUT_CLASSIFICATION	0.9999926290884713	WITHOUT_CLASSIFICATION	7.370911528675683E-6	DEFECT
line 1905	WITHOUT_CLASSIFICATION	0.9999921851156388	WITHOUT_CLASSIFICATION	7.814884361084967E-6	DEFECT
line 1911	WITHOUT_CLASSIFICATION	0.9999962065639456	WITHOUT_CLASSIFICATION	3.793436054336435E-6	DEFECT
line 1918	WITHOUT_CLASSIFICATION	0.9999961073286873	WITHOUT_CLASSIFICATION	3.892671312778858E-6	DEFECT
line 1935	WITHOUT_CLASSIFICATION	0.9999877125447383	WITHOUT_CLASSIFICATION	1.2287455261599626E-5	DEFECT
line 1938	WITHOUT_CLASSIFICATION	0.9999936990757039	WITHOUT_CLASSIFICATION	6.300924296006144E-6	DEFECT
line 1942	WITHOUT_CLASSIFICATION	0.9999910923116253	WITHOUT_CLASSIFICATION	8.907688374643306E-6	DEFECT
line 1948	WITHOUT_CLASSIFICATION	0.999994540254797	WITHOUT_CLASSIFICATION	5.459745203129777E-6	DEFECT
line 1960	WITHOUT_CLASSIFICATION	0.9999938322524347	WITHOUT_CLASSIFICATION	6.167747565324232E-6	DEFECT
line 1963	WITHOUT_CLASSIFICATION	0.999992927155426	WITHOUT_CLASSIFICATION	7.072844574008091E-6	DEFECT
line 1968	WITHOUT_CLASSIFICATION	0.9999951157785435	WITHOUT_CLASSIFICATION	4.88422145645802E-6	DEFECT
line 1972	WITHOUT_CLASSIFICATION	0.9999907019477348	WITHOUT_CLASSIFICATION	9.298052265199933E-6	DEFECT
line 1982	WITHOUT_CLASSIFICATION	0.9999938097246491	WITHOUT_CLASSIFICATION	6.190275350923645E-6	DEFECT
line 1995	WITHOUT_CLASSIFICATION	0.9999922327009468	WITHOUT_CLASSIFICATION	7.767299053082694E-6	DEFECT
line 2000	WITHOUT_CLASSIFICATION	0.9999542015704295	WITHOUT_CLASSIFICATION	4.579842957057293E-5	DEFECT
line 2006	WITHOUT_CLASSIFICATION	0.9999530566499693	WITHOUT_CLASSIFICATION	4.6943350030752566E-5	DEFECT
line 2010	WITHOUT_CLASSIFICATION	0.9999913644328069	WITHOUT_CLASSIFICATION	8.635567193076982E-6	DEFECT
We may need to subtract addition offset off of first	WITHOUT_CLASSIFICATION	0.9999997455376001	WITHOUT_CLASSIFICATION	2.544623999553245E-7	DEFECT
string fragment (we optimistically take one off in	WITHOUT_CLASSIFICATION	0.9999998277529855	WITHOUT_CLASSIFICATION	1.72247014543956E-7	DEFECT
ParserSupport.literal_concat). Check token length	WITHOUT_CLASSIFICATION	0.9999967722575954	WITHOUT_CLASSIFICATION	3.2277424045444204E-6	DEFECT
and subtract as neeeded.	WITHOUT_CLASSIFICATION	0.999999787016274	WITHOUT_CLASSIFICATION	2.129837259975679E-7	DEFECT
$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);	WITHOUT_CLASSIFICATION	0.9999993535683286	WITHOUT_CLASSIFICATION	6.464316714594324E-7	DEFECT
ENEBO: arg surrounded by in_defined set/unset	WITHOUT_CLASSIFICATION	0.9999920436434374	WITHOUT_CLASSIFICATION	7.956356562579297E-6	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999983923565	WITHOUT_CLASSIFICATION	1.607643501106185E-8	DEFECT
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9993629431600003	WITHOUT_CLASSIFICATION	6.370568399996532E-4	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999977673668	WITHOUT_CLASSIFICATION	2.2326332005420803E-8	DEFECT
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999977673668	WITHOUT_CLASSIFICATION	2.2326332005420803E-8	DEFECT
ENEBO: Removed !compile_for_eval which probably is to reduce warnings	WITHOUT_CLASSIFICATION	0.9969978785210463	WITHOUT_CLASSIFICATION	0.0030021214789537503	DEFECT
was $$ = null;	WITHOUT_CLASSIFICATION	0.9999693673096669	WITHOUT_CLASSIFICATION	3.0632690333077046E-5	DEFECT
line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999942707291957	WITHOUT_CLASSIFICATION	5.72927080443578E-6	DEFECT
line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999811599537035	WITHOUT_CLASSIFICATION	1.884004629651788E-5	DEFECT
we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999965800727251	WITHOUT_CLASSIFICATION	3.419927274794024E-6	DEFECT
No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999977147469492	WITHOUT_CLASSIFICATION	2.2852530506812048E-6	DEFECT
Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.	WITHOUT_CLASSIFICATION	0.9999992821736752	WITHOUT_CLASSIFICATION	7.178263247825446E-7	DEFECT
Live reference to module	WITHOUT_CLASSIFICATION	0.9999965524649035	WITHOUT_CLASSIFICATION	3.4475350965626665E-6	DEFECT
Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999992024921559	WITHOUT_CLASSIFICATION	7.975078441444724E-7	DEFECT
Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999999719703326	WITHOUT_CLASSIFICATION	2.802966738247568E-8	DEFECT
number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999930137820495	WITHOUT_CLASSIFICATION	6.9862179504302955E-6	DEFECT
number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999996662354181	WITHOUT_CLASSIFICATION	3.337645819008434E-7	DEFECT
index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999999647848724	WITHOUT_CLASSIFICATION	3.521512761142779E-8	DEFECT
Note that this object equality check is intentional, to ensure the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999999963059089	WITHOUT_CLASSIFICATION	3.6940911789556215E-9	DEFECT
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999990139021949	WITHOUT_CLASSIFICATION	9.86097805020604E-7	DEFECT
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999990139021949	WITHOUT_CLASSIFICATION	9.86097805020604E-7	DEFECT
Note: Only used by compiler until it can use getConstant again or use some other refactoring	WITHOUT_CLASSIFICATION	0.9999993509838272	WITHOUT_CLASSIFICATION	6.490161727162014E-7	DEFECT
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.999999887817805	WITHOUT_CLASSIFICATION	1.1218219494931795E-7	DEFECT
Try and unload the autoload specified from internedName	WITHOUT_CLASSIFICATION	0.9999999908934558	WITHOUT_CLASSIFICATION	9.106544121178309E-9	DEFECT
We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.999999562954296	WITHOUT_CLASSIFICATION	4.3704570402792466E-7	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999998668525063	WITHOUT_CLASSIFICATION	1.3314749370122897E-6	DEFECT
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999565452122	WITHOUT_CLASSIFICATION	4.345478778980551E-8	DEFECT
source extensions	WITHOUT_CLASSIFICATION	0.9999956579134495	WITHOUT_CLASSIFICATION	4.342086550501434E-6	DEFECT
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999565452122	WITHOUT_CLASSIFICATION	4.345478778980551E-8	DEFECT
. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999981420565772	WITHOUT_CLASSIFICATION	1.8579434226664851E-6	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9990872674069441	WITHOUT_CLASSIFICATION	9.12732593055965E-4	DEFECT
Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9950434213370574	WITHOUT_CLASSIFICATION	0.004956578662942627	DEFECT
Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9922009791839449	WITHOUT_CLASSIFICATION	0.007799020816055141	DEFECT
private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999935866706908	WITHOUT_CLASSIFICATION	6.413329309247794E-6	DEFECT
private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999986895740095	WITHOUT_CLASSIFICATION	1.3104259904988194E-6	DEFECT
List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.	WITHOUT_CLASSIFICATION	0.9999999925779592	WITHOUT_CLASSIFICATION	7.4220407693464194E-9	DEFECT
File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999896975654251	WITHOUT_CLASSIFICATION	1.0302434574937473E-5	DEFECT
Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999899716047435	WITHOUT_CLASSIFICATION	1.0028395256528773E-5	DEFECT
In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.	WITHOUT_CLASSIFICATION	0.9510914778074496	WITHOUT_CLASSIFICATION	0.04890852219255028	DEFECT
TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999999690153146	WITHOUT_CLASSIFICATION	3.0984685283712784E-8	DEFECT
CATCH MANAGEMENT	WITHOUT_CLASSIFICATION	0.9999847729893505	WITHOUT_CLASSIFICATION	1.5227010649568162E-5	DEFECT
FRAME MANAGEMENT	WITHOUT_CLASSIFICATION	0.9999370715911061	WITHOUT_CLASSIFICATION	6.292840889394558E-5	DEFECT
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999236812539508	WITHOUT_CLASSIFICATION	7.631874604928445E-5	DEFECT
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999049589473	WITHOUT_CLASSIFICATION	9.50410527087293E-8	DEFECT
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999049589473	WITHOUT_CLASSIFICATION	9.50410527087293E-8	DEFECT
look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999956721003331	WITHOUT_CLASSIFICATION	4.3278996668648214E-6	DEFECT
if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999988712210977	WITHOUT_CLASSIFICATION	1.1287789023097945E-6	DEFECT
look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999998044257178	WITHOUT_CLASSIFICATION	1.9557428226128877E-7	DEFECT
All entries following removed node can stay in list, but all preceding ones need to be cloned.	WITHOUT_CLASSIFICATION	0.9999608207991423	WITHOUT_CLASSIFICATION	3.9179200857683525E-5	DEFECT
required and optional only	WITHOUT_CLASSIFICATION	0.9999940956396454	WITHOUT_CLASSIFICATION	5.904360354618887E-6	DEFECT
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999565452122	WITHOUT_CLASSIFICATION	4.345478778980551E-8	DEFECT
look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999790096569642	WITHOUT_CLASSIFICATION	2.09903430358081E-5	DEFECT
set the binding's frame's "previous" file and line to current, so trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999063580571	WITHOUT_CLASSIFICATION	9.364194277917757E-8	DEFECT
framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999907832107704	WITHOUT_CLASSIFICATION	9.21678922955095E-6	DEFECT
look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999810405519128	WITHOUT_CLASSIFICATION	1.8959448087159302E-5	DEFECT
unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999866885118	WITHOUT_CLASSIFICATION	1.3311488141678682E-8	DEFECT
try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999785644267	WITHOUT_CLASSIFICATION	2.1435573264580218E-8	DEFECT
Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999998596770572	WITHOUT_CLASSIFICATION	1.403229428866201E-7	DEFECT
Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999972684489621	WITHOUT_CLASSIFICATION	2.73155103800867E-6	DEFECT
Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.	WITHOUT_CLASSIFICATION	0.9999999974661586	WITHOUT_CLASSIFICATION	2.533841433312997E-9	DEFECT
new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999999609248396	WITHOUT_CLASSIFICATION	3.907516032016219E-8	DEFECT
No argument blocks	WITHOUT_CLASSIFICATION	0.9999999965297723	WITHOUT_CLASSIFICATION	3.470227755635774E-9	DEFECT
just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999298782221	WITHOUT_CLASSIFICATION	7.012177799159418E-8	DEFECT
Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.999974829020761	WITHOUT_CLASSIFICATION	2.5170979239065413E-5	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999997537540046	WITHOUT_CLASSIFICATION	2.462459953615979E-7	DEFECT
This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999191635497469	WITHOUT_CLASSIFICATION	8.083645025320055E-5	DEFECT
Highest reserved id	WITHOUT_CLASSIFICATION	0.9999980972344975	WITHOUT_CLASSIFICATION	1.9027655024575812E-6	DEFECT
binary typed calls	WITHOUT_CLASSIFICATION	0.9999993089460099	WITHOUT_CLASSIFICATION	6.910539901864159E-7	DEFECT
id must always be even	WITHOUT_CLASSIFICATION	0.9998647845980734	WITHOUT_CLASSIFICATION	1.3521540192658807E-4	DEFECT
with block pass	WITHOUT_CLASSIFICATION	0.9999977906576394	WITHOUT_CLASSIFICATION	2.209342360619306E-6	DEFECT
no block	WITHOUT_CLASSIFICATION	0.9999991408182183	WITHOUT_CLASSIFICATION	8.591817818526519E-7	DEFECT
with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999999044059176	WITHOUT_CLASSIFICATION	9.559408244087824E-8	DEFECT
assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9977895069488244	WITHOUT_CLASSIFICATION	0.002210493051175606	DEFECT
if we have multiple asgn with just args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999999989929452	WITHOUT_CLASSIFICATION	1.0070547853504653E-9	DEFECT
&& args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999996883117457	WITHOUT_CLASSIFICATION	3.1168825436081695E-7	DEFECT
return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999917460572825	WITHOUT_CLASSIFICATION	8.253942717558378E-6	DEFECT
ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999998258379086	WITHOUT_CLASSIFICATION	1.7416209135299434E-7	DEFECT
predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999988789782184	WITHOUT_CLASSIFICATION	1.121021781624899E-6	DEFECT
fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999869885136285	WITHOUT_CLASSIFICATION	1.3011486371348677E-5	DEFECT
Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999634502536712	WITHOUT_CLASSIFICATION	3.6549746328808675E-5	DEFECT
Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999998100405034	WITHOUT_CLASSIFICATION	1.8995949655176945E-7	DEFECT
Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999836201605821	WITHOUT_CLASSIFICATION	1.6379839417921545E-5	DEFECT
Lastline	WITHOUT_CLASSIFICATION	0.9999977350221879	WITHOUT_CLASSIFICATION	2.264977812172241E-6	DEFECT
No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999999858673952	WITHOUT_CLASSIFICATION	1.4132604754246296E-8	DEFECT
bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9984273533333936	WITHOUT_CLASSIFICATION	0.001572646666606397	DEFECT
Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999888107662291	WITHOUT_CLASSIFICATION	1.118923377092332E-5	DEFECT
try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999990766436015	WITHOUT_CLASSIFICATION	9.233563984464311E-7	DEFECT
Some helper functions:	WITHOUT_CLASSIFICATION	0.9999413777605777	WITHOUT_CLASSIFICATION	5.862223942225934E-5	DEFECT
silently ignore	WITHOUT_CLASSIFICATION	0.9999990537279345	WITHOUT_CLASSIFICATION	9.462720654573758E-7	DEFECT
used by compiler	WITHOUT_CLASSIFICATION	0.9999997724976587	WITHOUT_CLASSIFICATION	2.2750234140020495E-7	DEFECT
initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999936084537	WITHOUT_CLASSIFICATION	6.391546352070738E-9	DEFECT
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999182941174826	WITHOUT_CLASSIFICATION	8.170588251743004E-5	DEFECT
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999996792027397	WITHOUT_CLASSIFICATION	3.207972603556112E-7	DEFECT
Single node on list	WITHOUT_CLASSIFICATION	0.9999971917751717	WITHOUT_CLASSIFICATION	2.8082248283389956E-6	DEFECT
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999383647285808	WITHOUT_CLASSIFICATION	6.163527141914038E-5	DEFECT
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999986897974313	WITHOUT_CLASSIFICATION	1.3102025686499855E-6	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9990872674069441	WITHOUT_CLASSIFICATION	9.12732593055965E-4	DEFECT
Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.	WITHOUT_CLASSIFICATION	0.9998820287102888	WITHOUT_CLASSIFICATION	1.179712897112026E-4	DEFECT
We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999678853604	WITHOUT_CLASSIFICATION	3.2114639683015334E-8	DEFECT
If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.	WITHOUT_CLASSIFICATION	0.9999577544891318	WITHOUT_CLASSIFICATION	4.2245510868242233E-5	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999988946056876	WITHOUT_CLASSIFICATION	1.1053943123921876E-6	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999988946056876	WITHOUT_CLASSIFICATION	1.1053943123921876E-6	DEFECT
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999975149829271	WITHOUT_CLASSIFICATION	2.48501707289121E-5	DEFECT
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999975149829271	WITHOUT_CLASSIFICATION	2.48501707289121E-5	DEFECT
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999975149829271	WITHOUT_CLASSIFICATION	2.48501707289121E-5	DEFECT
no extra args for rest	WITHOUT_CLASSIFICATION	0.9999776298116695	WITHOUT_CLASSIFICATION	2.2370188330482913E-5	DEFECT
no extra args for rest	WITHOUT_CLASSIFICATION	0.9999776298116695	WITHOUT_CLASSIFICATION	2.2370188330482913E-5	DEFECT
extra args for rest	WITHOUT_CLASSIFICATION	0.9999407133635106	WITHOUT_CLASSIFICATION	5.9286636489448604E-5	DEFECT
extra args for rest	WITHOUT_CLASSIFICATION	0.9999407133635106	WITHOUT_CLASSIFICATION	5.9286636489448604E-5	DEFECT
This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.	WITHOUT_CLASSIFICATION	0.9999995597978634	WITHOUT_CLASSIFICATION	4.40202136659355E-7	DEFECT
This is the proper behavior for all non-expanded assigners.	WITHOUT_CLASSIFICATION	0.9999692365732367	WITHOUT_CLASSIFICATION	3.076342676332814E-5	DEFECT
prefill ?	WITHOUT_CLASSIFICATION	0.999999590143572	WITHOUT_CLASSIFICATION	4.098564279831781E-7	DEFECT
prefill ?	WITHOUT_CLASSIFICATION	0.999999590143572	WITHOUT_CLASSIFICATION	4.098564279831781E-7	DEFECT
MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999986895472786	WITHOUT_CLASSIFICATION	1.3104527214857026E-6	DEFECT
retrieve method module name	WITHOUT_CLASSIFICATION	0.9999973329934045	WITHOUT_CLASSIFICATION	2.6670065954972104E-6	DEFECT
call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999082532461206	WITHOUT_CLASSIFICATION	9.174675387925127E-5	DEFECT
if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999377519119	WITHOUT_CLASSIFICATION	6.224808810901076E-8	DEFECT
if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9998964383136449	WITHOUT_CLASSIFICATION	1.0356168635509557E-4	DEFECT
method object already present, push various args tc self klazz name	WITHOUT_CLASSIFICATION	0.9999999594614442	WITHOUT_CLASSIFICATION	4.053855592952811E-8	DEFECT
if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999971606015204	WITHOUT_CLASSIFICATION	2.8393984795412896E-6	DEFECT
invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9998409024014878	WITHOUT_CLASSIFICATION	1.5909759851219691E-4	DEFECT
caller	WITHOUT_CLASSIFICATION	0.999990399394603	WITHOUT_CLASSIFICATION	9.600605396973085E-6	DEFECT
calltype block	WITHOUT_CLASSIFICATION	0.9999924749196251	WITHOUT_CLASSIFICATION	7.525080374953269E-6	DEFECT
if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999999101376771	WITHOUT_CLASSIFICATION	8.98623228872129E-8	DEFECT
load arity for check	WITHOUT_CLASSIFICATION	0.9999995318761935	WITHOUT_CLASSIFICATION	4.681238064775368E-7	DEFECT
throw	WITHOUT_CLASSIFICATION	0.9998793010624439	WITHOUT_CLASSIFICATION	1.2069893755604636E-4	DEFECT
load arity for error	WITHOUT_CLASSIFICATION	0.9999865258621945	WITHOUT_CLASSIFICATION	1.3474137805607842E-5	DEFECT
arity ok, continue	WITHOUT_CLASSIFICATION	0.9999959000281651	WITHOUT_CLASSIFICATION	4.09997183483403E-6	DEFECT
InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998722205322863	WITHOUT_CLASSIFICATION	1.277794677137009E-4	DEFECT
ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999489221501653	WITHOUT_CLASSIFICATION	5.107784983463183E-5	DEFECT
FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9997856778186968	WITHOUT_CLASSIFICATION	2.1432218130315386E-4	DEFECT
InvocationCallback	WITHOUT_CLASSIFICATION	0.9997399314262888	WITHOUT_CLASSIFICATION	2.6006857371124585E-4	DEFECT
DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998916260969296	WITHOUT_CLASSIFICATION	1.0837390307030896E-4	DEFECT
for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999723061465448	WITHOUT_CLASSIFICATION	2.7693853455199437E-5	DEFECT
for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999256181150146	WITHOUT_CLASSIFICATION	7.438188498542275E-5	DEFECT
load the encoding	WITHOUT_CLASSIFICATION	0.9999950931072906	WITHOUT_CLASSIFICATION	4.906892709369021E-6	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999924431801049	WITHOUT_CLASSIFICATION	7.556819895054089E-6	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999998346898864	WITHOUT_CLASSIFICATION	1.6531011360918772E-6	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999973536638881	WITHOUT_CLASSIFICATION	2.646336111796651E-6	DEFECT
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999913409743236	WITHOUT_CLASSIFICATION	8.659025676368408E-6	DEFECT
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999912060944913	WITHOUT_CLASSIFICATION	8.793905508655056E-6	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999946038869127	WITHOUT_CLASSIFICATION	5.3961130872505765E-6	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999988195688476	WITHOUT_CLASSIFICATION	1.180431152384157E-6	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999981103282763	WITHOUT_CLASSIFICATION	1.8896717236424632E-6	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999980350825964	WITHOUT_CLASSIFICATION	1.964917403553563E-6	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995701640311	WITHOUT_CLASSIFICATION	4.2983596896050077E-7	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997384332319	WITHOUT_CLASSIFICATION	2.6156676819111896E-7	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995701640311	WITHOUT_CLASSIFICATION	4.2983596896050077E-7	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995701640311	WITHOUT_CLASSIFICATION	4.2983596896050077E-7	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995701640311	WITHOUT_CLASSIFICATION	4.2983596896050077E-7	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995701640311	WITHOUT_CLASSIFICATION	4.2983596896050077E-7	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995701640311	WITHOUT_CLASSIFICATION	4.2983596896050077E-7	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995701640311	WITHOUT_CLASSIFICATION	4.2983596896050077E-7	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997384332319	WITHOUT_CLASSIFICATION	2.6156676819111896E-7	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997384332319	WITHOUT_CLASSIFICATION	2.6156676819111896E-7	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997384332319	WITHOUT_CLASSIFICATION	2.6156676819111896E-7	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997384332319	WITHOUT_CLASSIFICATION	2.6156676819111896E-7	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997384332319	WITHOUT_CLASSIFICATION	2.6156676819111896E-7	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997384332319	WITHOUT_CLASSIFICATION	2.6156676819111896E-7	DEFECT
If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9991315778217931	WITHOUT_CLASSIFICATION	8.6842217820698E-4	DEFECT
BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999711068656086	WITHOUT_CLASSIFICATION	2.8893134391268326E-5	DEFECT
ThreadContext	WITHOUT_CLASSIFICATION	0.9999883422952306	WITHOUT_CLASSIFICATION	1.165770476933983E-5	DEFECT
BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999970952257149	WITHOUT_CLASSIFICATION	2.9047742850953322E-5	DEFECT
Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999700317780209	WITHOUT_CLASSIFICATION	2.9968221979137537E-5	DEFECT
RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999972914531707	WITHOUT_CLASSIFICATION	2.7085468292399055E-6	DEFECT
add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999999195406747	WITHOUT_CLASSIFICATION	8.04593253708273E-8	DEFECT
if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999987230834445	WITHOUT_CLASSIFICATION	1.276916555504444E-6	DEFECT
wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999922402651206	WITHOUT_CLASSIFICATION	7.759734879544485E-6	DEFECT
add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999824333503665	WITHOUT_CLASSIFICATION	1.756664963351288E-5	DEFECT
Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999516888827483	WITHOUT_CLASSIFICATION	4.8311117251720085E-5	DEFECT
"." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999909487452855	WITHOUT_CLASSIFICATION	9.051254714510436E-6	DEFECT
Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999952273335644	WITHOUT_CLASSIFICATION	4.772666435702964E-6	DEFECT
Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999996862656824	WITHOUT_CLASSIFICATION	3.1373431760136156E-7	DEFECT
Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999995701203679	WITHOUT_CLASSIFICATION	4.2987963217258765E-7	DEFECT
We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999991398909494	WITHOUT_CLASSIFICATION	8.601090506466547E-7	DEFECT
If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999803042748971	WITHOUT_CLASSIFICATION	1.9695725102778504E-5	DEFECT
quietly try to load the class	WITHOUT_CLASSIFICATION	0.999986144325401	WITHOUT_CLASSIFICATION	1.3855674598977418E-5	DEFECT
If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999974004709311	WITHOUT_CLASSIFICATION	2.5995290689023157E-6	DEFECT
no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999027474882152	WITHOUT_CLASSIFICATION	9.725251178474762E-5	DEFECT
if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999963832585882	WITHOUT_CLASSIFICATION	3.6167414116744597E-6	DEFECT
signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999993459569452	WITHOUT_CLASSIFICATION	6.540430547738867E-7	DEFECT
source extensions	WITHOUT_CLASSIFICATION	0.9999956579134495	WITHOUT_CLASSIFICATION	4.342086550501434E-6	DEFECT
We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9915400899701102	WITHOUT_CLASSIFICATION	0.008459910029889732	DEFECT
This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999285059845845	WITHOUT_CLASSIFICATION	7.149401541548668E-5	DEFECT
Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999935352971223	WITHOUT_CLASSIFICATION	6.464702877644804E-6	DEFECT
It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.	WITHOUT_CLASSIFICATION	0.9999992989922375	WITHOUT_CLASSIFICATION	7.01007762542526E-7	DEFECT
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999863627940557	WITHOUT_CLASSIFICATION	1.3637205944338641E-5	DEFECT
extension extensions	WITHOUT_CLASSIFICATION	0.9999651325690806	WITHOUT_CLASSIFICATION	3.486743091937976E-5	DEFECT
unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.999872950596577	WITHOUT_CLASSIFICATION	1.2704940342299782E-4	DEFECT
try all extensions	WITHOUT_CLASSIFICATION	0.999994307978013	WITHOUT_CLASSIFICATION	5.692021987025566E-6	DEFECT
if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999811365397264	WITHOUT_CLASSIFICATION	1.886346027358767E-5	DEFECT
unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.999939711204394	WITHOUT_CLASSIFICATION	6.028879560605121E-5	DEFECT
try only literal search	WITHOUT_CLASSIFICATION	0.9999992257306493	WITHOUT_CLASSIFICATION	7.742693508712914E-7	DEFECT
attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999994544048497	WITHOUT_CLASSIFICATION	5.455951503343543E-7	DEFECT
otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999999548456041	WITHOUT_CLASSIFICATION	4.515439589796279E-8	DEFECT
allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.999998755640611	WITHOUT_CLASSIFICATION	1.2443593890461341E-6	DEFECT
Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999568241325714	WITHOUT_CLASSIFICATION	4.317586742852918E-5	DEFECT
check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999997571064819	WITHOUT_CLASSIFICATION	2.4289351806635516E-7	DEFECT
if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999923271062964	WITHOUT_CLASSIFICATION	7.672893703659622E-6	DEFECT
end suffix iteration	WITHOUT_CLASSIFICATION	0.9999965536284836	WITHOUT_CLASSIFICATION	3.4463715163544847E-6	DEFECT
if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999994982512952	WITHOUT_CLASSIFICATION	5.017487048479464E-7	DEFECT
if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999999198506851	WITHOUT_CLASSIFICATION	8.014931476398875E-8	DEFECT
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999999594699847	WITHOUT_CLASSIFICATION	4.053001529486908E-7	DEFECT
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999999594699847	WITHOUT_CLASSIFICATION	4.053001529486908E-7	DEFECT
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999976421882295	WITHOUT_CLASSIFICATION	2.3578117704272E-6	DEFECT
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999976421882295	WITHOUT_CLASSIFICATION	2.3578117704272E-6	DEFECT
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999998353069048	WITHOUT_CLASSIFICATION	1.6469309523048778E-7	DEFECT
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999998353069048	WITHOUT_CLASSIFICATION	1.6469309523048778E-7	DEFECT
actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998732299956855	WITHOUT_CLASSIFICATION	1.26770004314445E-4	DEFECT
handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999998459814122	WITHOUT_CLASSIFICATION	1.5401858765724824E-7	DEFECT
if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999998060339361	WITHOUT_CLASSIFICATION	1.9396606376624387E-7	DEFECT
if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999641773385612	WITHOUT_CLASSIFICATION	3.58226614386933E-5	DEFECT
otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999876051796096	WITHOUT_CLASSIFICATION	1.239482039048178E-5	DEFECT
Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999180749796015	WITHOUT_CLASSIFICATION	8.192502039855382E-5	DEFECT
signed short, native	WITHOUT_CLASSIFICATION	0.9999999332222574	WITHOUT_CLASSIFICATION	6.677774257731145E-8	DEFECT
If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999962972671241	WITHOUT_CLASSIFICATION	3.7027328757596417E-6	DEFECT
write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999996061279885	WITHOUT_CLASSIFICATION	3.9387201140742757E-7	DEFECT
if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999044305356856	WITHOUT_CLASSIFICATION	9.556946431439773E-5	DEFECT
Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9998948704713306	WITHOUT_CLASSIFICATION	1.0512952866936516E-4	DEFECT
Directories and unavailable resources are not able to open a stream.	WITHOUT_CLASSIFICATION	0.9999987917702335	WITHOUT_CLASSIFICATION	1.2082297664343076E-6	DEFECT
Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999955629963028	WITHOUT_CLASSIFICATION	4.4370036971661305E-6	DEFECT
object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here	WITHOUT_CLASSIFICATION	0.9991478428026832	WITHOUT_CLASSIFICATION	8.521571973168451E-4	DEFECT
flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999459613945596	WITHOUT_CLASSIFICATION	5.403860544031748E-5	DEFECT
write('S');	WITHOUT_CLASSIFICATION	0.9999702334493944	WITHOUT_CLASSIFICATION	2.9766550605539792E-5	DEFECT
switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.	WITHOUT_CLASSIFICATION	0.9999997101700734	WITHOUT_CLASSIFICATION	2.8982992664856523E-7	DEFECT
object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999994893068977	WITHOUT_CLASSIFICATION	5.106931022572026E-7	DEFECT
We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999991799466427	WITHOUT_CLASSIFICATION	8.200533572909179E-7	DEFECT
w_symbol	WITHOUT_CLASSIFICATION	0.9999711794608169	WITHOUT_CLASSIFICATION	2.882053918312906E-5	DEFECT
w_unique	WITHOUT_CLASSIFICATION	0.9999730094104567	WITHOUT_CLASSIFICATION	2.699058954335986E-5	DEFECT
call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.999888842387249	WITHOUT_CLASSIFICATION	1.1115761275112643E-4	DEFECT
Major Minor	WITHOUT_CLASSIFICATION	0.9999918862529685	WITHOUT_CLASSIFICATION	8.113747031501715E-6	DEFECT
any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999728756031339	WITHOUT_CLASSIFICATION	2.7124396866185904E-5	DEFECT
"hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999984205998771	WITHOUT_CLASSIFICATION	1.579400122915986E-6	DEFECT
All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999950697338729	WITHOUT_CLASSIFICATION	4.930266127233025E-6	DEFECT
sic	WITHOUT_CLASSIFICATION	0.9999787353024862	WITHOUT_CLASSIFICATION	2.126469751381161E-5	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999147719921	WITHOUT_CLASSIFICATION	8.522800792319602E-8	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999147719921	WITHOUT_CLASSIFICATION	8.522800792319602E-8	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999147719921	WITHOUT_CLASSIFICATION	8.522800792319602E-8	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999641898711	WITHOUT_CLASSIFICATION	3.581012882476061E-8	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999641898711	WITHOUT_CLASSIFICATION	3.581012882476061E-8	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999997537540046	WITHOUT_CLASSIFICATION	2.462459953615979E-7	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999997537540046	WITHOUT_CLASSIFICATION	2.462459953615979E-7	DEFECT
If we are setting post arguments we can assume there are no pre or others	WITHOUT_CLASSIFICATION	0.999999997552317	WITHOUT_CLASSIFICATION	2.4476830005826004E-9	DEFECT
XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.7947733101308204	WITHOUT_CLASSIFICATION	0.20522668986917958	DEFECT
unsigned short, native	WITHOUT_CLASSIFICATION	0.9999999078775849	WITHOUT_CLASSIFICATION	9.212241506005718E-8	DEFECT
int, native long, native	WITHOUT_CLASSIFICATION	0.999996964786031	WITHOUT_CLASSIFICATION	3.035213969140361E-6	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999147719921	WITHOUT_CLASSIFICATION	8.522800792319602E-8	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999147719921	WITHOUT_CLASSIFICATION	8.522800792319602E-8	DEFECT
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999147719921	WITHOUT_CLASSIFICATION	8.522800792319602E-8	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999641898711	WITHOUT_CLASSIFICATION	3.581012882476061E-8	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999641898711	WITHOUT_CLASSIFICATION	3.581012882476061E-8	DEFECT
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999641898711	WITHOUT_CLASSIFICATION	3.581012882476061E-8	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999997537540046	WITHOUT_CLASSIFICATION	2.462459953615979E-7	DEFECT
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999997537540046	WITHOUT_CLASSIFICATION	2.462459953615979E-7	DEFECT
Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999984266450392	WITHOUT_CLASSIFICATION	1.5733549607839825E-6	DEFECT
Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999776021901	WITHOUT_CLASSIFICATION	2.239780992039722E-8	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998578481447	WITHOUT_CLASSIFICATION	1.421518553157622E-7	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998578481447	WITHOUT_CLASSIFICATION	1.421518553157622E-7	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998578481447	WITHOUT_CLASSIFICATION	1.421518553157622E-7	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998578481447	WITHOUT_CLASSIFICATION	1.421518553157622E-7	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998578481447	WITHOUT_CLASSIFICATION	1.421518553157622E-7	DEFECT
SunSignalFacade	WITHOUT_CLASSIFICATION	0.999971534766664	WITHOUT_CLASSIFICATION	2.846523333604665E-5	DEFECT
All braces pushed..	WITHOUT_CLASSIFICATION	0.999998624046037	WITHOUT_CLASSIFICATION	1.375953962995468E-6	DEFECT
failed : try next recursion	WITHOUT_CLASSIFICATION	0.9999259922717774	WITHOUT_CLASSIFICATION	7.400772822265692E-5	DEFECT
leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999971318798804	WITHOUT_CLASSIFICATION	2.868120119721297E-6	DEFECT
are we at ''	WITHOUT_CLASSIFICATION	0.9999850858080213	WITHOUT_CLASSIFICATION	1.4914191978698048E-5	DEFECT
No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999908902826449	WITHOUT_CLASSIFICATION	9.109717355109195E-6	DEFECT
not enough bytes	WITHOUT_CLASSIFICATION	0.999942782342905	WITHOUT_CLASSIFICATION	5.721765709495155E-5	DEFECT
Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999904536650579	WITHOUT_CLASSIFICATION	9.546334942119538E-6	DEFECT
skip inner braces	WITHOUT_CLASSIFICATION	0.9999995778957064	WITHOUT_CLASSIFICATION	4.221042935865901E-7	DEFECT
Process {}'s (example: Dir.glob("{jruby,jython}/README")	WITHOUT_CLASSIFICATION	0.9999785064628434	WITHOUT_CLASSIFICATION	2.1493537156643813E-5	DEFECT
complete, according to Posix.2	WITHOUT_CLASSIFICATION	0.9999781746996638	WITHOUT_CLASSIFICATION	2.1825300336308844E-5	DEFECT
Only accept an open brace if there is a close	WITHOUT_CLASSIFICATION	0.9999997856620323	WITHOUT_CLASSIFICATION	2.1433796766750686E-7	DEFECT
brace to match it. Bracket expressions must be	WITHOUT_CLASSIFICATION	0.9999855508985527	WITHOUT_CLASSIFICATION	1.444910144736543E-5	DEFECT
index of left-most brace index of right-most brace	WITHOUT_CLASSIFICATION	0.9999968902371434	WITHOUT_CLASSIFICATION	3.1097628565192606E-6	DEFECT
Length check is a hack. We should not be reeiving "" as a filename ever.	WITHOUT_CLASSIFICATION	0.9999955666665196	WITHOUT_CLASSIFICATION	4.43333348045596E-6	DEFECT
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999993739248759	WITHOUT_CLASSIFICATION	6.2607512409469045E-6	DEFECT
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999993739248759	WITHOUT_CLASSIFICATION	6.2607512409469045E-6	DEFECT
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999993739248759	WITHOUT_CLASSIFICATION	6.2607512409469045E-6	DEFECT
Pickaxe says @ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9999891532282105	WITHOUT_CLASSIFICATION	1.0846771789545067E-5	DEFECT
Pickaxe says @@ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.99998915540444	WITHOUT_CLASSIFICATION	1.0844595559975635E-5	DEFECT
SimpleSampler	WITHOUT_CLASSIFICATION	0.9999860956445215	WITHOUT_CLASSIFICATION	1.3904355478451922E-5	DEFECT
convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )	WITHOUT_CLASSIFICATION	0.9999982301346345	WITHOUT_CLASSIFICATION	1.7698653655001414E-6	DEFECT
b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999972038612204	WITHOUT_CLASSIFICATION	2.796138779534818E-6	DEFECT
single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999833708545515	WITHOUT_CLASSIFICATION	1.6629145448592507E-5	DEFECT
single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999967017631192	WITHOUT_CLASSIFICATION	3.2982368808101133E-6	DEFECT
single precision, native	WITHOUT_CLASSIFICATION	0.9999996307993732	WITHOUT_CLASSIFICATION	3.6920062696531754E-7	DEFECT
single precision, native single precision, native	WITHOUT_CLASSIFICATION	0.9999985693476314	WITHOUT_CLASSIFICATION	1.4306523685455211E-6	DEFECT
double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999926565399883	WITHOUT_CLASSIFICATION	7.3434600117886656E-6	DEFECT
double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999971096687101	WITHOUT_CLASSIFICATION	2.890331289810166E-6	DEFECT
double precision, native	WITHOUT_CLASSIFICATION	0.9999998055803935	WITHOUT_CLASSIFICATION	1.9441960650345785E-7	DEFECT
signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999981515174406	WITHOUT_CLASSIFICATION	1.8484825594183912E-6	DEFECT
signed char	WITHOUT_CLASSIFICATION	0.9999999842542023	WITHOUT_CLASSIFICATION	1.5745797736607054E-8	DEFECT
unsigned char	WITHOUT_CLASSIFICATION	0.9999999868879793	WITHOUT_CLASSIFICATION	1.311202066591796E-8	DEFECT
long, little-endian	WITHOUT_CLASSIFICATION	0.9999732616409841	WITHOUT_CLASSIFICATION	2.6738359015925767E-5	DEFECT
long, big-endian	WITHOUT_CLASSIFICATION	0.9999919096961624	WITHOUT_CLASSIFICATION	8.09030383764685E-6	DEFECT
unsigned int, native	WITHOUT_CLASSIFICATION	0.9999999588438023	WITHOUT_CLASSIFICATION	4.115619766464313E-8	DEFECT
int, native	WITHOUT_CLASSIFICATION	0.9999988772340253	WITHOUT_CLASSIFICATION	1.1227659746521121E-6	DEFECT
64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999876707343708	WITHOUT_CLASSIFICATION	1.2329265629352412E-5	DEFECT
How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9995033955832109	WITHOUT_CLASSIFICATION	4.966044167891749E-4	DEFECT
See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999983705734796	WITHOUT_CLASSIFICATION	1.6294265204577737E-6	DEFECT
Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9985102915173414	WITHOUT_CLASSIFICATION	0.0014897084826586823	DEFECT
Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999973545583871	WITHOUT_CLASSIFICATION	2.6454416127923657E-6	DEFECT
obtain a	WITHOUT_CLASSIFICATION	0.9999961452969113	WITHOUT_CLASSIFICATION	3.854703088724765E-6	DEFECT
obtain b	WITHOUT_CLASSIFICATION	0.9999968405183605	WITHOUT_CLASSIFICATION	3.159481639575355E-6	DEFECT
obtain c	WITHOUT_CLASSIFICATION	0.9999979274719577	WITHOUT_CLASSIFICATION	2.072528042262783E-6	DEFECT
obtain d	WITHOUT_CLASSIFICATION	0.999996446266375	WITHOUT_CLASSIFICATION	3.553733625109178E-6	DEFECT
encode.limit() -	WITHOUT_CLASSIFICATION	0.9999944619360097	WITHOUT_CLASSIFICATION	5.5380639902425915E-6	DEFECT
1	WITHOUT_CLASSIFICATION	0.9998985806477879	WITHOUT_CLASSIFICATION	1.01419352212002E-4	DEFECT
2	WITHOUT_CLASSIFICATION	0.9997973606082802	WITHOUT_CLASSIFICATION	2.02639391719959E-4	DEFECT
3	WITHOUT_CLASSIFICATION	0.9998329812362751	WITHOUT_CLASSIFICATION	1.6701876372492635E-4	DEFECT
4	WITHOUT_CLASSIFICATION	0.9998349373767508	WITHOUT_CLASSIFICATION	1.6506262324933062E-4	DEFECT
5	WITHOUT_CLASSIFICATION	0.9997861447909832	WITHOUT_CLASSIFICATION	2.138552090168202E-4	DEFECT
6	WITHOUT_CLASSIFICATION	0.9998193062326697	WITHOUT_CLASSIFICATION	1.806937673302324E-4	DEFECT
7	WITHOUT_CLASSIFICATION	0.9998497591046779	WITHOUT_CLASSIFICATION	1.5024089532216772E-4	DEFECT
Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999997684793095	WITHOUT_CLASSIFICATION	2.3152069055019858E-7	DEFECT
Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.999998932096605	WITHOUT_CLASSIFICATION	1.0679033950302585E-6	DEFECT
In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999999913945533	WITHOUT_CLASSIFICATION	8.605446720823276E-9	DEFECT
normal exit, this should be faster than a test at each iterations for string with more than about 40 char	WITHOUT_CLASSIFICATION	0.9988591505843086	WITHOUT_CLASSIFICATION	0.0011408494156912687	DEFECT
We encountered '\0' when were reading the buffer above, increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999032917894212	WITHOUT_CLASSIFICATION	9.670821057872401E-5	DEFECT
MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9870799614823984	WITHOUT_CLASSIFICATION	0.012920038517601597	DEFECT
Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999675539429538	WITHOUT_CLASSIFICATION	3.2446057046143106E-5	DEFECT
'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999738225312254	WITHOUT_CLASSIFICATION	2.6177468774631614E-5	DEFECT
if the low bit is set set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999983973870826	WITHOUT_CLASSIFICATION	1.602612917295622E-6	DEFECT
if the index is not a multiple of 8, we are not on a byte boundary shift the byte	WITHOUT_CLASSIFICATION	0.9999909119096975	WITHOUT_CLASSIFICATION	9.088090302480044E-6	DEFECT
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999698014551618	WITHOUT_CLASSIFICATION	3.0198544838247524E-5	DEFECT
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999698014551618	WITHOUT_CLASSIFICATION	3.0198544838247524E-5	DEFECT
do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999977138734891	WITHOUT_CLASSIFICATION	2.286126510946826E-6	DEFECT
we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999973887252838	WITHOUT_CLASSIFICATION	2.611274716299193E-6	DEFECT
if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999868745009316	WITHOUT_CLASSIFICATION	1.3125499068407603E-5	DEFECT
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9998421947490181	WITHOUT_CLASSIFICATION	1.5780525098191243E-4	DEFECT
we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999942182164292	WITHOUT_CLASSIFICATION	5.781783570780793E-6	DEFECT
populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999982657129918	WITHOUT_CLASSIFICATION	1.734287008244816E-6	DEFECT
are we recursing?	WITHOUT_CLASSIFICATION	0.9999993099097403	WITHOUT_CLASSIFICATION	6.900902597285655E-7	DEFECT
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999996462347854	WITHOUT_CLASSIFICATION	3.537652146650819E-7	DEFECT
default PidGetter	WITHOUT_CLASSIFICATION	0.9999994385916352	WITHOUT_CLASSIFICATION	5.614083647875791E-7	DEFECT
ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999947453249249	WITHOUT_CLASSIFICATION	5.2546750750553385E-6	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999995785564354	WITHOUT_CLASSIFICATION	4.214435646816797E-7	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999995785564354	WITHOUT_CLASSIFICATION	4.214435646816797E-7	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999995785564354	WITHOUT_CLASSIFICATION	4.214435646816797E-7	DEFECT
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999995785564354	WITHOUT_CLASSIFICATION	4.214435646816797E-7	DEFECT
try both	WITHOUT_CLASSIFICATION	0.999998002896264	WITHOUT_CLASSIFICATION	1.9971037360120024E-6	DEFECT
just unix	WITHOUT_CLASSIFICATION	0.9999989943901196	WITHOUT_CLASSIFICATION	1.0056098802828376E-6	DEFECT
just windows	WITHOUT_CLASSIFICATION	0.9999976109703376	WITHOUT_CLASSIFICATION	2.38902966249873E-6	DEFECT
neither	WITHOUT_CLASSIFICATION	0.9999959387439131	WITHOUT_CLASSIFICATION	4.061256086838296E-6	DEFECT
CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999955801285969	WITHOUT_CLASSIFICATION	4.41987140307885E-6	DEFECT
single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999336744901418	WITHOUT_CLASSIFICATION	6.632550985821026E-5	DEFECT
direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999488096281728	WITHOUT_CLASSIFICATION	5.119037182723789E-5	DEFECT
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999984803157973	WITHOUT_CLASSIFICATION	1.5196842027088657E-5	DEFECT
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999984803157973	WITHOUT_CLASSIFICATION	1.5196842027088657E-5	DEFECT
close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999595280679368	WITHOUT_CLASSIFICATION	4.0471932063177134E-5	DEFECT
ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.999998574637236	WITHOUT_CLASSIFICATION	1.425362764054606E-6	DEFECT
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999873957471	WITHOUT_CLASSIFICATION	1.2604252882754074E-8	DEFECT
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9937609317122733	WITHOUT_CLASSIFICATION	0.006239068287726739	DEFECT
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9937609317122733	WITHOUT_CLASSIFICATION	0.006239068287726739	DEFECT
popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.993442028613231	WITHOUT_CLASSIFICATION	0.006557971386768977	DEFECT
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999990906755485	WITHOUT_CLASSIFICATION	9.093244515143879E-7	DEFECT
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999990906755485	WITHOUT_CLASSIFICATION	9.093244515143879E-7	DEFECT
execute command with sh -c this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9922860463654412	WITHOUT_CLASSIFICATION	0.007713953634558881	DEFECT
We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999995723740635	WITHOUT_CLASSIFICATION	4.2762593645693743E-7	DEFECT
we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999644901841374	WITHOUT_CLASSIFICATION	3.5509815862650606E-5	DEFECT
The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9339005176309475	WITHOUT_CLASSIFICATION	0.06609948236905248	DEFECT
Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.999979352771773	WITHOUT_CLASSIFICATION	2.064722822704138E-5	DEFECT
Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999920491043	WITHOUT_CLASSIFICATION	7.950895772156313E-9	DEFECT
Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.999023831711566	WITHOUT_CLASSIFICATION	9.761682884340885E-4	DEFECT
sequential	WITHOUT_CLASSIFICATION	0.999998718059663	WITHOUT_CLASSIFICATION	1.2819403370411074E-6	DEFECT
reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999477325284	WITHOUT_CLASSIFICATION	5.2267471618349214E-8	DEFECT
do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999976582978763	WITHOUT_CLASSIFICATION	2.341702123649681E-6	DEFECT
if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999874345043936	WITHOUT_CLASSIFICATION	1.25654956062604E-5	DEFECT
SignalFacade	WITHOUT_CLASSIFICATION	0.9999771038235169	WITHOUT_CLASSIFICATION	2.289617648307668E-5	DEFECT
this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9998792393601561	WITHOUT_CLASSIFICATION	1.2076063984386821E-4	DEFECT
this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999454120429788	WITHOUT_CLASSIFICATION	5.458795702115644E-5	DEFECT
basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999995266024728	WITHOUT_CLASSIFICATION	4.7339752708474117E-7	DEFECT
not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999484055566107	WITHOUT_CLASSIFICATION	5.159444338922643E-5	DEFECT
Args	WITHOUT_CLASSIFICATION	0.999980099773322	WITHOUT_CLASSIFICATION	1.990022667806512E-5	DEFECT
static methods only	WITHOUT_CLASSIFICATION	0.9999988907843359	WITHOUT_CLASSIFICATION	1.1092156640944153E-6	DEFECT
System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999993555950163	WITHOUT_CLASSIFICATION	6.444049836259888E-7	DEFECT
MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9921216193567605	WITHOUT_CLASSIFICATION	0.007878380643239551	DEFECT
last index (+1) accessed by next() last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9995153386616588	WITHOUT_CLASSIFICATION	4.8466133834122575E-4	DEFECT
Special form of sprintf that returns a RubyString and handles tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999915310545268	WITHOUT_CLASSIFICATION	8.468945473324157E-6	DEFECT
Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999869497505839	WITHOUT_CLASSIFICATION	1.3050249416062484E-5	DEFECT
MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )	WITHOUT_CLASSIFICATION	0.9999283807520027	WITHOUT_CLASSIFICATION	7.161924799728211E-5	DEFECT
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.998494220078663	WITHOUT_CLASSIFICATION	0.0015057799213370436	DEFECT
MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9980824106468406	WITHOUT_CLASSIFICATION	0.0019175893531593647	DEFECT
'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999986975547561	WITHOUT_CLASSIFICATION	1.3024452439083544E-6	DEFECT
'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9998554434291687	WITHOUT_CLASSIFICATION	1.4455657083136062E-4	DEFECT
We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999833826998	WITHOUT_CLASSIFICATION	1.6617300150650688E-8	DEFECT
skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999752466583361	WITHOUT_CLASSIFICATION	2.4753341663853407E-5	DEFECT
..	WITHOUT_CLASSIFICATION	0.9996797771869326	WITHOUT_CLASSIFICATION	3.2022281306737986E-4	DEFECT
the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999975858441572	WITHOUT_CLASSIFICATION	2.414155842715676E-6	DEFECT
FIXME: what is correct 'recv' argument? (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9974493883508513	DEFECT	0.002550611649148709	WITHOUT_CLASSIFICATION
gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9998808446784643	WITHOUT_CLASSIFICATION	1.191553215356988E-4	DEFECT
OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999866146527	WITHOUT_CLASSIFICATION	1.3385347398047034E-8	DEFECT
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9998039999178246	WITHOUT_CLASSIFICATION	1.9600008217536422E-4	DEFECT
intDigits = 1;	WITHOUT_CLASSIFICATION	0.999994221915116	WITHOUT_CLASSIFICATION	5.778084883919637E-6	DEFECT
System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999696136314	WITHOUT_CLASSIFICATION	3.038636859373752E-8	DEFECT
System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999999643425415	WITHOUT_CLASSIFICATION	3.565745849625422E-8	DEFECT
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9998039999178246	WITHOUT_CLASSIFICATION	1.9600008217536422E-4	DEFECT
intDigits = 1;	WITHOUT_CLASSIFICATION	0.999994221915116	WITHOUT_CLASSIFICATION	5.778084883919637E-6	DEFECT
precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999035193361299	WITHOUT_CLASSIFICATION	9.648066387005918E-5	DEFECT
deal with length/width	WITHOUT_CLASSIFICATION	0.9999634320087926	WITHOUT_CLASSIFICATION	3.656799120749035E-5	DEFECT
deal with length/width	WITHOUT_CLASSIFICATION	0.9999634320087926	WITHOUT_CLASSIFICATION	3.656799120749035E-5	DEFECT
first digit is always printed	WITHOUT_CLASSIFICATION	0.9999975194853888	WITHOUT_CLASSIFICATION	2.4805146112431886E-6	DEFECT
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9954726738978118	WITHOUT_CLASSIFICATION	0.004527326102188175	DEFECT
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.999941741266982	WITHOUT_CLASSIFICATION	5.825873301805386E-5	DEFECT
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999514811244871	WITHOUT_CLASSIFICATION	4.8518875512925706E-5	DEFECT
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9996889317309633	WITHOUT_CLASSIFICATION	3.110682690367832E-4	DEFECT
MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05	WITHOUT_CLASSIFICATION	0.9672430988116717	WITHOUT_CLASSIFICATION	0.03275690118832834	DEFECT
'.' is printed	WITHOUT_CLASSIFICATION	0.9999920835206013	WITHOUT_CLASSIFICATION	7.91647939859727E-6	DEFECT
all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999993909160361	WITHOUT_CLASSIFICATION	6.090839639536471E-7	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999725599589915	WITHOUT_CLASSIFICATION	2.744004100847899E-5	DEFECT
'.'	WITHOUT_CLASSIFICATION	0.9999062471997926	WITHOUT_CLASSIFICATION	9.375280020733801E-5	DEFECT
decimal form, like (but not just like!) 'f'	WITHOUT_CLASSIFICATION	0.9999973943878785	WITHOUT_CLASSIFICATION	2.605612121624579E-6	DEFECT
digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999982973898739	WITHOUT_CLASSIFICATION	1.7026101261079557E-6	DEFECT
will have a trailing '.' g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999278895273553	WITHOUT_CLASSIFICATION	7.21104726446312E-5	DEFECT
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999967959120281	WITHOUT_CLASSIFICATION	3.2040879720028163E-6	DEFECT
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999967959120281	WITHOUT_CLASSIFICATION	3.2040879720028163E-6	DEFECT
always need at least a 0	WITHOUT_CLASSIFICATION	0.9999026162191316	WITHOUT_CLASSIFICATION	9.738378086847229E-5	DEFECT
always need at least a 0	WITHOUT_CLASSIFICATION	0.9999026162191316	WITHOUT_CLASSIFICATION	9.738378086847229E-5	DEFECT
digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.999998696214452	WITHOUT_CLASSIFICATION	1.3037855480145654E-6	DEFECT
(1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999929101371423	WITHOUT_CLASSIFICATION	7.08986285763442E-6	DEFECT
(1|intlen)	WITHOUT_CLASSIFICATION	0.9999847089357793	WITHOUT_CLASSIFICATION	1.529106422071613E-5	DEFECT
will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999374016107276	WITHOUT_CLASSIFICATION	6.259838927234621E-5	DEFECT
fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999984383766888	WITHOUT_CLASSIFICATION	1.5616233112925846E-6	DEFECT
System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.999999655802583	WITHOUT_CLASSIFICATION	3.441974171129728E-7	DEFECT
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.999941741266982	WITHOUT_CLASSIFICATION	5.825873301805386E-5	DEFECT
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999514811244871	WITHOUT_CLASSIFICATION	4.8518875512925706E-5	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999725599589915	WITHOUT_CLASSIFICATION	2.744004100847899E-5	DEFECT
'.'	WITHOUT_CLASSIFICATION	0.9999062471997926	WITHOUT_CLASSIFICATION	9.375280020733801E-5	DEFECT
equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999950362082869	WITHOUT_CLASSIFICATION	4.9637917131099175E-6	DEFECT
'.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.999994796418549	WITHOUT_CLASSIFICATION	5.203581450914788E-6	DEFECT
\v	WITHOUT_CLASSIFICATION	0.9998727579372351	WITHOUT_CLASSIFICATION	1.2724206276495666E-4	DEFECT
dangling '%' char	WITHOUT_CLASSIFICATION	0.9999946017846219	WITHOUT_CLASSIFICATION	5.3982153781583815E-6	DEFECT
main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999998705496069	WITHOUT_CLASSIFICATION	1.294503930630198E-7	DEFECT
debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999894232782494	WITHOUT_CLASSIFICATION	1.0576721750571511E-5	DEFECT
MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do	WITHOUT_CLASSIFICATION	0.9995397897440412	WITHOUT_CLASSIFICATION	4.602102559586776E-4	DEFECT
"%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999559040820234	WITHOUT_CLASSIFICATION	4.4095917976653626E-5	DEFECT
limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999923662022395	WITHOUT_CLASSIFICATION	7.633797760519287E-6	DEFECT
negative values	WITHOUT_CLASSIFICATION	0.9999967968502741	WITHOUT_CLASSIFICATION	3.203149725885348E-6	DEFECT
calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.	WITHOUT_CLASSIFICATION	0.9999921441247931	WITHOUT_CLASSIFICATION	7.855875206929843E-6	DEFECT
relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999996023983414	WITHOUT_CLASSIFICATION	3.9760165864562624E-7	DEFECT
no such luck...	WITHOUT_CLASSIFICATION	0.9999928893008092	WITHOUT_CLASSIFICATION	7.110699190738462E-6	DEFECT
ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998313695476142	WITHOUT_CLASSIFICATION	1.6863045238586492E-4	DEFECT
go through negated powers of 32 until we find one small enough	WITHOUT_CLASSIFICATION	0.9999947345052178	WITHOUT_CLASSIFICATION	5.2654947821929225E-6	DEFECT
add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.999996252719422	WITHOUT_CLASSIFICATION	3.747280577916312E-6	DEFECT
constant vector a	WITHOUT_CLASSIFICATION	0.9999992881505982	WITHOUT_CLASSIFICATION	7.118494017771216E-7	DEFECT
most significant w-r bits	WITHOUT_CLASSIFICATION	0.9999996813912367	WITHOUT_CLASSIFICATION	3.186087633664637E-7	DEFECT
least significant r bits	WITHOUT_CLASSIFICATION	0.9999999634711974	WITHOUT_CLASSIFICATION	3.652880259733635E-8	DEFECT
state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999989388447978	WITHOUT_CLASSIFICATION	1.0611552021631079E-6	DEFECT
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999990559457305	WITHOUT_CLASSIFICATION	9.440542695161486E-7	DEFECT
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999990559457305	WITHOUT_CLASSIFICATION	9.440542695161486E-7	DEFECT
MSB is 1; assuring non-zero initial array	WITHOUT_CLASSIFICATION	0.9999944235070278	WITHOUT_CLASSIFICATION	5.576492972157878E-6	DEFECT
Tempering	WITHOUT_CLASSIFICATION	0.9999896150838197	WITHOUT_CLASSIFICATION	1.0384916180293399E-5	DEFECT
MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9968890869486402	WITHOUT_CLASSIFICATION	0.0031109130513597796	DEFECT
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999996980352371	WITHOUT_CLASSIFICATION	3.019647628789643E-7	DEFECT
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999996980352371	WITHOUT_CLASSIFICATION	3.019647628789643E-7	DEFECT
\v	WITHOUT_CLASSIFICATION	0.9998727579372351	WITHOUT_CLASSIFICATION	1.2724206276495666E-4	DEFECT
System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999958744058375	WITHOUT_CLASSIFICATION	4.125594162524749E-6	DEFECT
System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999995568462902	WITHOUT_CLASSIFICATION	4.4315370986437653E-7	DEFECT
System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999145482682	WITHOUT_CLASSIFICATION	8.545173180184283E-8	DEFECT
System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999998647115835	WITHOUT_CLASSIFICATION	1.3528841644019578E-7	DEFECT
System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999996025614981	WITHOUT_CLASSIFICATION	3.9743850197672323E-7	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999998190932538	WITHOUT_CLASSIFICATION	1.8090674623565092E-7	DEFECT
no number	WITHOUT_CLASSIFICATION	0.9999997825429088	WITHOUT_CLASSIFICATION	2.1745709121412532E-7	DEFECT
trailing garbage	WITHOUT_CLASSIFICATION	0.9999985706685318	WITHOUT_CLASSIFICATION	1.4293314681238335E-6	DEFECT
System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999989729380051	WITHOUT_CLASSIFICATION	1.0270619949400576E-6	DEFECT
it was not found at all!	WITHOUT_CLASSIFICATION	0.9998388666621567	WITHOUT_CLASSIFICATION	1.611333378433114E-4	DEFECT
can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999969110244891	WITHOUT_CLASSIFICATION	3.0889755110091295E-6	DEFECT
we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999998000761743	WITHOUT_CLASSIFICATION	1.9992382582703051E-7	DEFECT
goto next bucket	WITHOUT_CLASSIFICATION	0.999960450290022	WITHOUT_CLASSIFICATION	3.954970997806122E-5	DEFECT
we reached the end	WITHOUT_CLASSIFICATION	0.9999979872981668	WITHOUT_CLASSIFICATION	2.012701833126868E-6	DEFECT
entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.999998351338603	WITHOUT_CLASSIFICATION	1.648661396990685E-6	DEFECT
states	WITHOUT_CLASSIFICATION	0.9999979838687731	WITHOUT_CLASSIFICATION	2.0161312269441623E-6	DEFECT
remove leading whitespace (includes _ for lax) get sign, if any	WITHOUT_CLASSIFICATION	0.9999214934738899	WITHOUT_CLASSIFICATION	7.850652611007733E-5	DEFECT
optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999994779969672	WITHOUT_CLASSIFICATION	5.220030326806457E-7	DEFECT
fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999971975665	WITHOUT_CLASSIFICATION	2.802433436397403E-9	DEFECT
drop through for sign	WITHOUT_CLASSIFICATION	0.9999967467367322	WITHOUT_CLASSIFICATION	3.2532632676773397E-6	DEFECT
switch will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999116845373075	WITHOUT_CLASSIFICATION	8.831546269244856E-5	DEFECT
drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999990063494462	WITHOUT_CLASSIFICATION	9.936505537966417E-7	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.99999999815533	WITHOUT_CLASSIFICATION	1.844670010340259E-9	DEFECT
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999995246236525	WITHOUT_CLASSIFICATION	4.7537634750203E-7	DEFECT
no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999952398915072	WITHOUT_CLASSIFICATION	4.760108492719999E-6	DEFECT
ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999995393169273	WITHOUT_CLASSIFICATION	4.6068307270885264E-7	DEFECT
just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999651622621	WITHOUT_CLASSIFICATION	3.483773799631002E-8	DEFECT
ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999996342257158	WITHOUT_CLASSIFICATION	3.657742842511446E-7	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999244786547	WITHOUT_CLASSIFICATION	7.55213452538549E-8	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999244786547	WITHOUT_CLASSIFICATION	7.55213452538549E-8	DEFECT
oh, well, it was worth a try. go let Double/FloatingDecimal handle it	WITHOUT_CLASSIFICATION	0.999999779156272	WITHOUT_CLASSIFICATION	2.2084372802040972E-7	DEFECT
ignore switch	WITHOUT_CLASSIFICATION	0.9999999151552978	WITHOUT_CLASSIFICATION	8.48447021891355E-8	DEFECT
ignore switch	WITHOUT_CLASSIFICATION	0.9999999151552978	WITHOUT_CLASSIFICATION	8.48447021891355E-8	DEFECT
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999957519187535	WITHOUT_CLASSIFICATION	4.248081246601776E-6	DEFECT
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999957519187535	WITHOUT_CLASSIFICATION	4.248081246601776E-6	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999993181830752	WITHOUT_CLASSIFICATION	6.81816924717463E-7	DEFECT
first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999527223408	WITHOUT_CLASSIFICATION	4.72776592279656E-8	DEFECT
no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999984617298092	WITHOUT_CLASSIFICATION	1.5382701907552491E-6	DEFECT
switch if	WITHOUT_CLASSIFICATION	0.9999985611799685	WITHOUT_CLASSIFICATION	1.4388200314378716E-6	DEFECT
difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999344963466	WITHOUT_CLASSIFICATION	6.550365340667162E-8	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999780363160254	WITHOUT_CLASSIFICATION	2.1963683974522425E-5	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999780363160254	WITHOUT_CLASSIFICATION	2.1963683974522425E-5	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.99999999815533	WITHOUT_CLASSIFICATION	1.844670010340259E-9	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.99999999815533	WITHOUT_CLASSIFICATION	1.844670010340259E-9	DEFECT
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.99999999815533	WITHOUT_CLASSIFICATION	1.844670010340259E-9	DEFECT
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999995246236525	WITHOUT_CLASSIFICATION	4.7537634750203E-7	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999244786547	WITHOUT_CLASSIFICATION	7.55213452538549E-8	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999244786547	WITHOUT_CLASSIFICATION	7.55213452538549E-8	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999244786547	WITHOUT_CLASSIFICATION	7.55213452538549E-8	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999993181830752	WITHOUT_CLASSIFICATION	6.81816924717463E-7	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999993181830752	WITHOUT_CLASSIFICATION	6.81816924717463E-7	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999993181830752	WITHOUT_CLASSIFICATION	6.81816924717463E-7	DEFECT
switch if	WITHOUT_CLASSIFICATION	0.9999985611799685	WITHOUT_CLASSIFICATION	1.4388200314378716E-6	DEFECT
switch if	WITHOUT_CLASSIFICATION	0.9999985611799685	WITHOUT_CLASSIFICATION	1.4388200314378716E-6	DEFECT
lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999989936632105	WITHOUT_CLASSIFICATION	1.0063367895247805E-6	DEFECT
switch for no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999998619118176	WITHOUT_CLASSIFICATION	1.3808818243064162E-7	DEFECT
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999999539987084	WITHOUT_CLASSIFICATION	4.600129158485122E-8	DEFECT
TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.7025836946666121	WITHOUT_CLASSIFICATION	0.29741630533338786	DEFECT
no digits, error	WITHOUT_CLASSIFICATION	0.9999971134318154	WITHOUT_CLASSIFICATION	2.886568184615683E-6	DEFECT
too big for us	WITHOUT_CLASSIFICATION	0.9999986292170786	WITHOUT_CLASSIFICATION	1.3707829214548424E-6	DEFECT
too big for us	WITHOUT_CLASSIFICATION	0.9999986292170786	WITHOUT_CLASSIFICATION	1.3707829214548424E-6	DEFECT
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999996975094261	WITHOUT_CLASSIFICATION	3.024905739183872E-7	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999997575994181	WITHOUT_CLASSIFICATION	2.424005818562715E-7	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999997575994181	WITHOUT_CLASSIFICATION	2.424005818562715E-7	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999997575994181	WITHOUT_CLASSIFICATION	2.424005818562715E-7	DEFECT
first char must be digit	WITHOUT_CLASSIFICATION	0.999999970564101	WITHOUT_CLASSIFICATION	2.943589903510568E-8	DEFECT
no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999999274073533	WITHOUT_CLASSIFICATION	7.259264665361772E-8	DEFECT
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999995246236525	WITHOUT_CLASSIFICATION	4.7537634750203E-7	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999993181830752	WITHOUT_CLASSIFICATION	6.81816924717463E-7	DEFECT
switch for	WITHOUT_CLASSIFICATION	0.9999993181830752	WITHOUT_CLASSIFICATION	6.81816924717463E-7	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999997575994181	WITHOUT_CLASSIFICATION	2.424005818562715E-7	DEFECT
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999996975094261	WITHOUT_CLASSIFICATION	3.024905739183872E-7	DEFECT
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9999687718674579	WITHOUT_CLASSIFICATION	3.122813254213411E-5	DEFECT
switch while	WITHOUT_CLASSIFICATION	0.9999987380555257	WITHOUT_CLASSIFICATION	1.2619444742845615E-6	DEFECT
All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)	WITHOUT_CLASSIFICATION	0.9999768143755212	WITHOUT_CLASSIFICATION	2.3185624478674872E-5	DEFECT
Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999997750009264	WITHOUT_CLASSIFICATION	2.249990735807245E-7	DEFECT
rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999831737947014	WITHOUT_CLASSIFICATION	1.6826205298613743E-5	DEFECT
rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999979874662077	WITHOUT_CLASSIFICATION	2.0125337923310492E-6	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999867772077471	WITHOUT_CLASSIFICATION	1.3222792252946958E-5	DEFECT
arg cannot be negative	WITHOUT_CLASSIFICATION	0.999984646980008	WITHOUT_CLASSIFICATION	1.5353019992086346E-5	DEFECT
NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999967890364186	WITHOUT_CLASSIFICATION	3.210963581289904E-6	DEFECT
Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999999773718474	WITHOUT_CLASSIFICATION	2.262815246841982E-8	DEFECT
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999995821300345	WITHOUT_CLASSIFICATION	4.1786996555976347E-7	DEFECT
strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999708270333	WITHOUT_CLASSIFICATION	2.9172966821521117E-8	DEFECT
Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999991517290343	WITHOUT_CLASSIFICATION	8.482709656782747E-7	DEFECT
Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999997022919751	WITHOUT_CLASSIFICATION	2.9770802496919147E-7	DEFECT
Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999985475243346	WITHOUT_CLASSIFICATION	1.4524756654218813E-6	DEFECT
next entry to return current slot current entry	WITHOUT_CLASSIFICATION	0.999985661804334	WITHOUT_CLASSIFICATION	1.4338195665905435E-5	DEFECT
advance to first entry	WITHOUT_CLASSIFICATION	0.9999998274986632	WITHOUT_CLASSIFICATION	1.725013368080184E-7	DEFECT
The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999982550302695	WITHOUT_CLASSIFICATION	1.7449697304393068E-6	DEFECT
package-protected	WITHOUT_CLASSIFICATION	0.9999915059805448	WITHOUT_CLASSIFICATION	8.494019455232612E-6	DEFECT
raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999995252801289	WITHOUT_CLASSIFICATION	4.7471987117653947E-7	DEFECT
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9991982973459289	WITHOUT_CLASSIFICATION	8.017026540710744E-4	DEFECT
if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999640997151	WITHOUT_CLASSIFICATION	3.590028491032842E-8	DEFECT
if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999984850239	WITHOUT_CLASSIFICATION	1.5149761447971817E-9	DEFECT
otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999993828486061	WITHOUT_CLASSIFICATION	6.171513938341755E-7	DEFECT
r/w buffer are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999778285953821	WITHOUT_CLASSIFICATION	2.2171404617914943E-5	DEFECT
this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999690310754976	WITHOUT_CLASSIFICATION	3.0968924502440523E-5	DEFECT
unread back	WITHOUT_CLASSIFICATION	0.9999958034248513	WITHOUT_CLASSIFICATION	4.196575148770944E-6	DEFECT
iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999987264090711	WITHOUT_CLASSIFICATION	1.2735909289170066E-6	DEFECT
terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999988708660449	WITHOUT_CLASSIFICATION	1.129133955121474E-6	DEFECT
no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999964858517186	WITHOUT_CLASSIFICATION	3.514148281334333E-6	DEFECT
found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999352988896	WITHOUT_CLASSIFICATION	6.470111039655665E-8	DEFECT
Check file size - special files in /proc have zero size and need to be handled by the generic read path.	WITHOUT_CLASSIFICATION	0.9999999579800825	WITHOUT_CLASSIFICATION	4.201991751478086E-8	DEFECT
Copy any buffered data (including ungetc byte)	WITHOUT_CLASSIFICATION	0.9999731693722961	WITHOUT_CLASSIFICATION	2.683062770395348E-5	DEFECT
Now read unbuffered directly from the file	WITHOUT_CLASSIFICATION	0.9999949996207099	WITHOUT_CLASSIFICATION	5.0003792900849714E-6	DEFECT
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9999687718674579	WITHOUT_CLASSIFICATION	3.122813254213411E-5	DEFECT
Need to clamp source (buffer) size to avoid overrun	WITHOUT_CLASSIFICATION	0.9999999842425709	WITHOUT_CLASSIFICATION	1.575742915286196E-8	DEFECT
not closing from finalize	WITHOUT_CLASSIFICATION	0.9999998750908475	WITHOUT_CLASSIFICATION	1.2490915240937792E-7	DEFECT
clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9996479645288353	WITHOUT_CLASSIFICATION	3.5203547116480807E-4	DEFECT
silence	WITHOUT_CLASSIFICATION	0.9999963668647911	WITHOUT_CLASSIFICATION	3.6331352087501445E-6	DEFECT
silence	WITHOUT_CLASSIFICATION	0.9999963668647911	WITHOUT_CLASSIFICATION	3.6331352087501445E-6	DEFECT
Don't bother	WITHOUT_CLASSIFICATION	0.9999937000228836	WITHOUT_CLASSIFICATION	6.299977116391891E-6	DEFECT
Don't bother	WITHOUT_CLASSIFICATION	0.9999937000228836	WITHOUT_CLASSIFICATION	6.299977116391891E-6	DEFECT
For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.999997705769989	WITHOUT_CLASSIFICATION	2.2942300109094146E-6	DEFECT
Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999221044915734	WITHOUT_CLASSIFICATION	7.789550842658966E-4	DEFECT
Adjust for buffered data	WITHOUT_CLASSIFICATION	0.999999351772259	WITHOUT_CLASSIFICATION	6.482277409649416E-7	DEFECT
for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999997061020973	WITHOUT_CLASSIFICATION	2.9389790262994827E-7	DEFECT
libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999998693512439	WITHOUT_CLASSIFICATION	1.3064875618074755E-7	DEFECT
we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999978061085224	WITHOUT_CLASSIFICATION	2.1938914775548893E-6	DEFECT
128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999531885655988	WITHOUT_CLASSIFICATION	4.6811434401089166E-5	DEFECT
limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations	WITHOUT_CLASSIFICATION	0.9999995192666957	WITHOUT_CLASSIFICATION	4.807333042174954E-7	DEFECT
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999993834366252	WITHOUT_CLASSIFICATION	6.16563374776716E-7	DEFECT
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9999857325227477	WITHOUT_CLASSIFICATION	1.4267477252309589E-5	DEFECT
Avoid double-copying for reads that are larger than the buffer size	WITHOUT_CLASSIFICATION	0.9999949409568957	WITHOUT_CLASSIFICATION	5.059043104305458E-6	DEFECT
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999981035236739	WITHOUT_CLASSIFICATION	1.8964763260949918E-6	DEFECT
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999981035236739	WITHOUT_CLASSIFICATION	1.8964763260949918E-6	DEFECT
Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.	WITHOUT_CLASSIFICATION	0.9999989661198322	WITHOUT_CLASSIFICATION	1.0338801677228248E-6	DEFECT
We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.	WITHOUT_CLASSIFICATION	0.999999837214197	WITHOUT_CLASSIFICATION	1.627858029069675E-7	DEFECT
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999998931042486	WITHOUT_CLASSIFICATION	1.0689575124864351E-7	DEFECT
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999998931042486	WITHOUT_CLASSIFICATION	1.0689575124864351E-7	DEFECT
Doesn't fit in buffer. Write immediately. ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999951512137895	WITHOUT_CLASSIFICATION	4.848786210549154E-6	DEFECT
truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999756454050263	WITHOUT_CLASSIFICATION	2.4354594973780002E-5	DEFECT
how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999803040135928	WITHOUT_CLASSIFICATION	1.969598640710466E-5	DEFECT
if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.999996172173351	WITHOUT_CLASSIFICATION	3.827826648891601E-6	DEFECT
close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999997578540631	WITHOUT_CLASSIFICATION	2.421459369479588E-7	DEFECT
putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999982973980432	WITHOUT_CLASSIFICATION	1.7026019567993993E-6	DEFECT
save the ungot	WITHOUT_CLASSIFICATION	0.9999947929438264	WITHOUT_CLASSIFICATION	5.207056173504459E-6	DEFECT
otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999994202485957	WITHOUT_CLASSIFICATION	5.797514043521128E-7	DEFECT
ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9994287160022368	WITHOUT_CLASSIFICATION	5.712839977632165E-4	DEFECT
flush first	WITHOUT_CLASSIFICATION	0.9999992224670674	WITHOUT_CLASSIFICATION	7.775329325811794E-7	DEFECT
Wake up any channels that became unblocked	WITHOUT_CLASSIFICATION	0.9999995774785551	WITHOUT_CLASSIFICATION	4.225214450023916E-7	DEFECT
Register any new blocking I/O requests	WITHOUT_CLASSIFICATION	0.9999960580192147	WITHOUT_CLASSIFICATION	3.941980785299357E-6	DEFECT
Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999997438635321	WITHOUT_CLASSIFICATION	2.561364679827795E-7	DEFECT
Wait for I/O on any channel	WITHOUT_CLASSIFICATION	0.9999993226983217	WITHOUT_CLASSIFICATION	6.773016783550473E-7	DEFECT
Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.999998260139542	WITHOUT_CLASSIFICATION	1.7398604580742E-6	DEFECT
Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.999974002063328	WITHOUT_CLASSIFICATION	2.5997936672062956E-5	DEFECT
seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999915350256775	WITHOUT_CLASSIFICATION	8.464974322553516E-6	DEFECT
seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.999999302204525	WITHOUT_CLASSIFICATION	6.977954749950059E-7	DEFECT
result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);	WITHOUT_CLASSIFICATION	0.9999985124204192	WITHOUT_CLASSIFICATION	1.4875795808594134E-6	DEFECT
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999994282142448	WITHOUT_CLASSIFICATION	5.717857552143275E-7	DEFECT
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.6595205814557461	WITHOUT_CLASSIFICATION	0.3404794185442539	DEFECT
make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999951448607373	WITHOUT_CLASSIFICATION	4.8551392627510775E-6	DEFECT
make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999858385897706	WITHOUT_CLASSIFICATION	1.4161410229390083E-5	DEFECT
first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999999291006166	WITHOUT_CLASSIFICATION	7.089938342004821E-8	DEFECT
then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999871269493125	WITHOUT_CLASSIFICATION	1.2873050687517079E-5	DEFECT
if we get here, the class and field exist; construct our Unsafe impl that calls it directly	WITHOUT_CLASSIFICATION	0.9999554835406929	WITHOUT_CLASSIFICATION	4.451645930708892E-5	DEFECT
else leave it null	WITHOUT_CLASSIFICATION	0.99998569506926	WITHOUT_CLASSIFICATION	1.4304930739901382E-5	DEFECT
TypeMatcher	WITHOUT_CLASSIFICATION	0.9999878888582169	WITHOUT_CLASSIFICATION	1.2111141783039205E-5	DEFECT
This is now needed, since module Java isn't in by default	WITHOUT_CLASSIFICATION	0.9999523801163104	WITHOUT_CLASSIFICATION	4.7619883689659336E-5	DEFECT
Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999330423404	WITHOUT_CLASSIFICATION	6.695765966167743E-8	DEFECT
Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999864144134885	WITHOUT_CLASSIFICATION	1.358558651148114E-5	DEFECT
Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999994424329333	WITHOUT_CLASSIFICATION	5.57567066736466E-7	DEFECT
Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999992052835724	WITHOUT_CLASSIFICATION	7.947164274440585E-7	DEFECT
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999822214185654	WITHOUT_CLASSIFICATION	1.7778581434623767E-5	DEFECT
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999822214185654	WITHOUT_CLASSIFICATION	1.7778581434623767E-5	DEFECT
Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.999994165712427	WITHOUT_CLASSIFICATION	5.83428757296634E-6	DEFECT
If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999999597614381	WITHOUT_CLASSIFICATION	4.023856190416173E-8	DEFECT
assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999683714633	WITHOUT_CLASSIFICATION	3.162853678010426E-8	DEFECT
Init	WITHOUT_CLASSIFICATION	0.9999118210014198	WITHOUT_CLASSIFICATION	8.81789985801417E-5	DEFECT
Block	WITHOUT_CLASSIFICATION	0.9998909341665411	WITHOUT_CLASSIFICATION	1.0906583345891393E-4	DEFECT
Copy constructor	WITHOUT_CLASSIFICATION	0.9999998551392194	WITHOUT_CLASSIFICATION	1.4486078050556978E-7	DEFECT
presumably this require should fail	WITHOUT_CLASSIFICATION	0.9982783350482061	WITHOUT_CLASSIFICATION	0.0017216649517939012	DEFECT
JRUBY-646 presumably this require should fail	WITHOUT_CLASSIFICATION	0.9949484863150657	WITHOUT_CLASSIFICATION	0.005051513684934211	DEFECT
Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999501971180448	WITHOUT_CLASSIFICATION	4.980288195537131E-5	DEFECT
ok	WITHOUT_CLASSIFICATION	0.9997767807427842	WITHOUT_CLASSIFICATION	2.2321925721577053E-4	DEFECT
Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.999998160645526	WITHOUT_CLASSIFICATION	1.8393544739647867E-6	DEFECT
load should work several times in a row	WITHOUT_CLASSIFICATION	0.9980305156266003	WITHOUT_CLASSIFICATION	0.00196948437339973	DEFECT
reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.999999639255592	WITHOUT_CLASSIFICATION	3.6074440808178626E-7	DEFECT
call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9998866363952501	WITHOUT_CLASSIFICATION	1.133636047499097E-4	DEFECT
Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999999931717471	WITHOUT_CLASSIFICATION	6.82825279205341E-9	DEFECT
wait for the go signal	WITHOUT_CLASSIFICATION	0.9999990329445481	WITHOUT_CLASSIFICATION	9.670554519804035E-7	DEFECT
run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999903988690835	WITHOUT_CLASSIFICATION	9.601130916590208E-6	DEFECT
wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999995319573461	WITHOUT_CLASSIFICATION	4.6804265390672287E-7	DEFECT
notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999997581384664	WITHOUT_CLASSIFICATION	2.4186153355374427E-7	DEFECT
wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999958951693014	WITHOUT_CLASSIFICATION	4.104830698668451E-6	DEFECT
we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999733328103092	WITHOUT_CLASSIFICATION	2.6667189690806913E-5	DEFECT
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.999999976704219	WITHOUT_CLASSIFICATION	2.3295780968412122E-8	DEFECT
MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.	WITHOUT_CLASSIFICATION	0.9999938652195872	WITHOUT_CLASSIFICATION	6.13478041269056E-6	DEFECT
if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999804844439105	WITHOUT_CLASSIFICATION	1.9515556089394807E-5	DEFECT
there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999984616278502	WITHOUT_CLASSIFICATION	1.5383721497812255E-6	DEFECT
construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999982431627014	WITHOUT_CLASSIFICATION	1.7568372985778015E-6	DEFECT
Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999463322636	WITHOUT_CLASSIFICATION	5.366773625461471E-8	DEFECT
assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999986169274425	WITHOUT_CLASSIFICATION	1.383072557510839E-6	DEFECT
void methods should work	WITHOUT_CLASSIFICATION	0.9892957212439293	WITHOUT_CLASSIFICATION	0.010704278756070596	DEFECT
methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649	WITHOUT_CLASSIFICATION	0.967388446354205	WITHOUT_CLASSIFICATION	0.03261155364579506	DEFECT
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999267580169023	WITHOUT_CLASSIFICATION	7.324198309773122E-5	DEFECT
Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999999989902216	WITHOUT_CLASSIFICATION	1.0097784270340488E-9	DEFECT
Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999864072752606	WITHOUT_CLASSIFICATION	1.3592724739476561E-5	DEFECT
assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999800581875821	WITHOUT_CLASSIFICATION	1.9941812417954946E-5	DEFECT
int n = 10;	WITHOUT_CLASSIFICATION	0.9999769150778821	WITHOUT_CLASSIFICATION	2.308492211781284E-5	DEFECT
there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999997738437403	WITHOUT_CLASSIFICATION	2.2615625981978563E-7	DEFECT
No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999952229897497	WITHOUT_CLASSIFICATION	4.777010250297705E-6	DEFECT
value equality	WITHOUT_CLASSIFICATION	0.999995842458484	WITHOUT_CLASSIFICATION	4.157541515957204E-6	DEFECT
identity equality	WITHOUT_CLASSIFICATION	0.9999977420377645	WITHOUT_CLASSIFICATION	2.257962235526249E-6	DEFECT
bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999996753951674	WITHOUT_CLASSIFICATION	3.246048325773712E-7	DEFECT
bench Integer fib	WITHOUT_CLASSIFICATION	0.9999958705059084	WITHOUT_CLASSIFICATION	4.1294940915523755E-6	DEFECT
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999942829445032	WITHOUT_CLASSIFICATION	5.717055496736686E-6	DEFECT
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999942829445032	WITHOUT_CLASSIFICATION	5.717055496736686E-6	DEFECT
bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999902689020211	WITHOUT_CLASSIFICATION	9.731097978833306E-6	DEFECT
bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999998281401868	WITHOUT_CLASSIFICATION	1.7185981305702023E-7	DEFECT
bench Long fib	WITHOUT_CLASSIFICATION	0.9999921670796699	WITHOUT_CLASSIFICATION	7.832920330109931E-6	DEFECT
skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999969460917805	WITHOUT_CLASSIFICATION	3.0539082196679972E-6	DEFECT
start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999998730835261	WITHOUT_CLASSIFICATION	1.269164740046828E-7	DEFECT
public class Hello { public static String getMessage() { return "....."; } }	WITHOUT_CLASSIFICATION	0.9999997938955323	WITHOUT_CLASSIFICATION	2.061044678180406E-7	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998558395207193	WITHOUT_CLASSIFICATION	1.4416047928075425E-4	DEFECT
Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9560389238568647	WITHOUT_CLASSIFICATION	0.04396107614313526	DEFECT
We are creating a new IO object that shares the same IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999996189867428	WITHOUT_CLASSIFICATION	3.8101325721263836E-7	DEFECT
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999973492677	WITHOUT_CLASSIFICATION	2.6507323484040145E-9	DEFECT
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999993353107268	WITHOUT_CLASSIFICATION	6.646892731780322E-7	DEFECT
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9999974451257437	WITHOUT_CLASSIFICATION	2.554874256206689E-6	DEFECT
Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9997921045394714	WITHOUT_CLASSIFICATION	2.0789546052851643E-4	DEFECT
Force the client socket to be blocking	WITHOUT_CLASSIFICATION	0.9999991249178952	WITHOUT_CLASSIFICATION	8.750821048026325E-7	DEFECT
Additional context surrounding tokens that both the lexer and grammar use.	WITHOUT_CLASSIFICATION	0.9999978884785508	WITHOUT_CLASSIFICATION	2.1115214492084584E-6	DEFECT
Enebo: c can never be antrhign but '.' Why did I put this here?	WITHOUT_CLASSIFICATION	0.9995558307560544	WITHOUT_CLASSIFICATION	4.441692439455746E-4	DEFECT
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9997254834910094	WITHOUT_CLASSIFICATION	2.745165089905366E-4	DEFECT
[C,C] [C, boolean]	WITHOUT_CLASSIFICATION	0.9999991132396905	WITHOUT_CLASSIFICATION	8.867603096256777E-7	DEFECT
Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999998686298	WITHOUT_CLASSIFICATION	1.3137029244830756E-10	DEFECT
ignore; job was cancelled FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9299746618730552	WITHOUT_CLASSIFICATION	0.0700253381269448	DEFECT
check arity checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999998853251754	WITHOUT_CLASSIFICATION	1.1467482464096081E-7	DEFECT
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9999728005103463	WITHOUT_CLASSIFICATION	2.7199489653787323E-5	DEFECT
we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.	WITHOUT_CLASSIFICATION	0.9999999956902509	WITHOUT_CLASSIFICATION	4.309749083534846E-9	DEFECT
Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.999995420968782	WITHOUT_CLASSIFICATION	4.579031217880239E-6	DEFECT
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999933471471695	WITHOUT_CLASSIFICATION	6.652852830565156E-6	DEFECT
it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999992769375985	WITHOUT_CLASSIFICATION	7.230624014957238E-7	DEFECT
package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,	WITHOUT_CLASSIFICATION	0.9999998220450523	WITHOUT_CLASSIFICATION	1.7795494770463628E-7	DEFECT
construct the proxy method	WITHOUT_CLASSIFICATION	0.9999970768348975	WITHOUT_CLASSIFICATION	2.9231651025859398E-6	DEFECT
line 159 "-" %token constants	WITHOUT_CLASSIFICATION	0.9999307123874667	WITHOUT_CLASSIFICATION	6.92876125332893E-5	DEFECT
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9999962224083558	WITHOUT_CLASSIFICATION	3.7775916441825714E-6	DEFECT
line 152 "-" %token constants	WITHOUT_CLASSIFICATION	0.9998607269273386	WITHOUT_CLASSIFICATION	1.3927307266147247E-4	DEFECT
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999918192698206	WITHOUT_CLASSIFICATION	8.18073017930038E-6	DEFECT
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9999962224083558	WITHOUT_CLASSIFICATION	3.7775916441825714E-6	DEFECT
We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999997597230204	WITHOUT_CLASSIFICATION	2.40276979631579E-7	DEFECT
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.998494220078663	WITHOUT_CLASSIFICATION	0.0015057799213370436	DEFECT
A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.	WITHOUT_CLASSIFICATION	0.9997373482264461	WITHOUT_CLASSIFICATION	2.626517735538826E-4	DEFECT
TODO: make it 16 now ? MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9218298811295668	WITHOUT_CLASSIFICATION	0.07817011887043329	DEFECT
check visibility dup method	WITHOUT_CLASSIFICATION	0.999999902924134	WITHOUT_CLASSIFICATION	9.707586593400055E-8	DEFECT
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998578481447	WITHOUT_CLASSIFICATION	1.421518553157622E-7	DEFECT
unsigned int, native unsigned long, native	WITHOUT_CLASSIFICATION	0.9999998208013336	WITHOUT_CLASSIFICATION	1.7919866638394992E-7	DEFECT
need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999994905818613	WITHOUT_CLASSIFICATION	5.094181387611855E-7	DEFECT
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9954726738978118	WITHOUT_CLASSIFICATION	0.004527326102188175	DEFECT
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999994282142448	WITHOUT_CLASSIFICATION	5.717857552143275E-7	DEFECT
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999999539987084	WITHOUT_CLASSIFICATION	4.600129158485122E-8	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999635285607735	WITHOUT_CLASSIFICATION	3.647143922644074E-5	DEFECT
Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999996297817548	WITHOUT_CLASSIFICATION	3.7021824515789285E-7	DEFECT
captures begin and end are used when not groups defined source string	WITHOUT_CLASSIFICATION	0.9999997888661672	WITHOUT_CLASSIFICATION	2.1113383279706014E-7	DEFECT
INSTANCE VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9999378486715997	WITHOUT_CLASSIFICATION	6.215132840031819E-5	DEFECT
switch while	WITHOUT_CLASSIFICATION	0.9999987380555257	WITHOUT_CLASSIFICATION	1.2619444742845615E-6	DEFECT
For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999997055025355	WITHOUT_CLASSIFICATION	2.944974645498812E-7	DEFECT
This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999999947178068	WITHOUT_CLASSIFICATION	5.282193315091938E-9	DEFECT
Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9604050893143783	WITHOUT_CLASSIFICATION	0.03959491068562168	DEFECT
Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9999910179435324	WITHOUT_CLASSIFICATION	8.982056467603603E-6	DEFECT
expected	WITHOUT_CLASSIFICATION	0.9999838684070478	WITHOUT_CLASSIFICATION	1.6131592952183666E-5	DEFECT
Do nothing	WITHOUT_CLASSIFICATION	0.9999986196672243	WITHOUT_CLASSIFICATION	1.3803327757787938E-6	DEFECT
constructor	WITHOUT_CLASSIFICATION	0.9999982455943275	WITHOUT_CLASSIFICATION	1.7544056724260353E-6	DEFECT
If a line is followed by a blank line put it back.	WITHOUT_CLASSIFICATION	0.9999940597730976	WITHOUT_CLASSIFICATION	5.94022690243149E-6	DEFECT
$>: default output handle	WITHOUT_CLASSIFICATION	0.9999993015558815	WITHOUT_CLASSIFICATION	6.984441184390138E-7	DEFECT
line 423	WITHOUT_CLASSIFICATION	0.9999879521224706	WITHOUT_CLASSIFICATION	1.2047877529405925E-5	DEFECT
line 486	WITHOUT_CLASSIFICATION	0.9999925564163616	WITHOUT_CLASSIFICATION	7.443583638323491E-6	DEFECT
Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9998097753153986	WITHOUT_CLASSIFICATION	1.9022468460145353E-4	DEFECT
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999298189789	WITHOUT_CLASSIFICATION	7.01810211144646E-8	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999973353228817	WITHOUT_CLASSIFICATION	2.6646771181886777E-6	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999973353228817	WITHOUT_CLASSIFICATION	2.6646771181886777E-6	DEFECT
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999994778229744	WITHOUT_CLASSIFICATION	5.221770256667714E-7	DEFECT
if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999954481473	WITHOUT_CLASSIFICATION	4.5518527300735E-9	DEFECT
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999650928469	WITHOUT_CLASSIFICATION	3.490715301715603E-8	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9940788027560385	WITHOUT_CLASSIFICATION	0.005921197243961463	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9940788027560385	WITHOUT_CLASSIFICATION	0.005921197243961463	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9940788027560385	WITHOUT_CLASSIFICATION	0.005921197243961463	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9940788027560385	WITHOUT_CLASSIFICATION	0.005921197243961463	DEFECT
Decrease value to hit upper range.	WITHOUT_CLASSIFICATION	0.9999992052465694	WITHOUT_CLASSIFICATION	7.947534305755495E-7	DEFECT
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999997207081995	WITHOUT_CLASSIFICATION	2.7929180050227293E-7	DEFECT
"else" body	WITHOUT_CLASSIFICATION	0.9999937660201511	WITHOUT_CLASSIFICATION	6.233979848890861E-6	DEFECT
done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done	WITHOUT_CLASSIFICATION	0.9992167018050212	WITHOUT_CLASSIFICATION	7.832981949787429E-4	DEFECT
read-volatile	WITHOUT_CLASSIFICATION	0.9999981752811189	WITHOUT_CLASSIFICATION	1.824718881032256E-6	DEFECT
$+: string matches last paren.	WITHOUT_CLASSIFICATION	0.999885963295373	WITHOUT_CLASSIFICATION	1.1403670462699483E-4	DEFECT
should alter global state	WITHOUT_CLASSIFICATION	0.999997322560791	WITHOUT_CLASSIFICATION	2.6774392089334162E-6	DEFECT
should alter global state	WITHOUT_CLASSIFICATION	0.999997322560791	WITHOUT_CLASSIFICATION	2.6774392089334162E-6	DEFECT
Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9998745508803971	WITHOUT_CLASSIFICATION	1.2544911960284108E-4	DEFECT
10!	WITHOUT_CLASSIFICATION	0.9998009786965603	WITHOUT_CLASSIFICATION	1.9902130343979314E-4	DEFECT
case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done	WITHOUT_CLASSIFICATION	0.9999948990384425	WITHOUT_CLASSIFICATION	5.100961557510734E-6	DEFECT
Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9968569566671123	WITHOUT_CLASSIFICATION	0.003143043332887693	DEFECT
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999993499149621	WITHOUT_CLASSIFICATION	6.500850379000148E-7	DEFECT
first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999991440652961	WITHOUT_CLASSIFICATION	8.559347039781473E-7	DEFECT
Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.	WITHOUT_CLASSIFICATION	0.9999999073633852	WITHOUT_CLASSIFICATION	9.263661480735136E-8	DEFECT
Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999945041865187	WITHOUT_CLASSIFICATION	5.495813481196477E-6	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999777932802006	WITHOUT_CLASSIFICATION	2.220671979934033E-5	DEFECT
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999777932802006	WITHOUT_CLASSIFICATION	2.220671979934033E-5	DEFECT
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999918192698206	WITHOUT_CLASSIFICATION	8.18073017930038E-6	DEFECT
line 449	WITHOUT_CLASSIFICATION	0.9999922344702864	WITHOUT_CLASSIFICATION	7.76552971354912E-6	DEFECT
line 495	WITHOUT_CLASSIFICATION	0.9999886803864632	WITHOUT_CLASSIFICATION	1.1319613536956731E-5	DEFECT
Management/monitoring	WITHOUT_CLASSIFICATION	0.9999479181491748	WITHOUT_CLASSIFICATION	5.208185082509906E-5	DEFECT
if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999877198354	WITHOUT_CLASSIFICATION	1.228016448618794E-8	DEFECT
14!	WITHOUT_CLASSIFICATION	0.9996911292237856	WITHOUT_CLASSIFICATION	3.0887077621449973E-4	DEFECT
Process any set of annotations No supported options	WITHOUT_CLASSIFICATION	0.9999997674379605	WITHOUT_CLASSIFICATION	2.3256203948367992E-7	DEFECT
add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999938434006387	WITHOUT_CLASSIFICATION	6.156599361329096E-6	DEFECT
extract item from array	WITHOUT_CLASSIFICATION	0.9999965770840105	WITHOUT_CLASSIFICATION	3.422915989519865E-6	DEFECT
extract item from array	WITHOUT_CLASSIFICATION	0.9999965770840105	WITHOUT_CLASSIFICATION	3.422915989519865E-6	DEFECT
case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done	WITHOUT_CLASSIFICATION	0.9999956156644316	WITHOUT_CLASSIFICATION	4.384335568365395E-6	DEFECT
Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run	WITHOUT_CLASSIFICATION	0.9999998584095228	WITHOUT_CLASSIFICATION	1.4159047715917893E-7	DEFECT
The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.	WITHOUT_CLASSIFICATION	0.9999957967272775	WITHOUT_CLASSIFICATION	4.203272722556458E-6	DEFECT
index for the item	WITHOUT_CLASSIFICATION	0.9999908842861956	WITHOUT_CLASSIFICATION	9.115713804383089E-6	DEFECT
Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999952317409408	WITHOUT_CLASSIFICATION	4.768259059167523E-6	DEFECT
18!	WITHOUT_CLASSIFICATION	0.9998182860941527	WITHOUT_CLASSIFICATION	1.8171390584734837E-4	DEFECT
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999988180618631	WITHOUT_CLASSIFICATION	1.1819381369958703E-6	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999999917047887	WITHOUT_CLASSIFICATION	8.295211301128405E-8	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999999917047887	WITHOUT_CLASSIFICATION	8.295211301128405E-8	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999999917047887	WITHOUT_CLASSIFICATION	8.295211301128405E-8	DEFECT
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999999917047887	WITHOUT_CLASSIFICATION	8.295211301128405E-8	DEFECT
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999831636651092	WITHOUT_CLASSIFICATION	1.6836334890801806E-5	DEFECT
This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction	WITHOUT_CLASSIFICATION	0.9996750971620858	WITHOUT_CLASSIFICATION	3.249028379142587E-4	DEFECT
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9997823575698167	WITHOUT_CLASSIFICATION	2.1764243018336402E-4	DEFECT
An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999987790471386	WITHOUT_CLASSIFICATION	1.2209528613227115E-6	DEFECT
MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999996332086172	WITHOUT_CLASSIFICATION	3.6679138289303536E-7	DEFECT
22!	WITHOUT_CLASSIFICATION	0.9996216694558693	WITHOUT_CLASSIFICATION	3.783305441307218E-4	DEFECT
attribute set.	WITHOUT_CLASSIFICATION	0.9999995353456065	WITHOUT_CLASSIFICATION	4.6465439357093893E-7	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999672472181	WITHOUT_CLASSIFICATION	3.275278189687435E-7	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999672472181	WITHOUT_CLASSIFICATION	3.275278189687435E-7	DEFECT
grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999672472181	WITHOUT_CLASSIFICATION	3.275278189687435E-7	DEFECT
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999642897426385	WITHOUT_CLASSIFICATION	3.571025736140677E-5	DEFECT
Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9998255330455806	WITHOUT_CLASSIFICATION	1.7446695441937013E-4	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999999095511881	WITHOUT_CLASSIFICATION	9.044881187890601E-8	DEFECT
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999999095511881	WITHOUT_CLASSIFICATION	9.044881187890601E-8	DEFECT
AF_INET	WITHOUT_CLASSIFICATION	0.9999687840552548	WITHOUT_CLASSIFICATION	3.121594474520971E-5	DEFECT
Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.	WITHOUT_CLASSIFICATION	0.9999999802439198	WITHOUT_CLASSIFICATION	1.9756080275520912E-8	DEFECT
Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999997842508683	WITHOUT_CLASSIFICATION	2.1574913166304538E-7	DEFECT
BASE64	WITHOUT_CLASSIFICATION	0.9996024827431769	WITHOUT_CLASSIFICATION	3.975172568231006E-4	DEFECT
note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.	WITHOUT_CLASSIFICATION	0.9999999954259386	WITHOUT_CLASSIFICATION	4.574061340486104E-9	DEFECT
element set	WITHOUT_CLASSIFICATION	0.9999981387680585	WITHOUT_CLASSIFICATION	1.8612319414005644E-6	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999904954360103	WITHOUT_CLASSIFICATION	9.50456398968068E-6	DEFECT
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999904954360103	WITHOUT_CLASSIFICATION	9.50456398968068E-6	DEFECT
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999962919301062	WITHOUT_CLASSIFICATION	3.7080698937237008E-6	DEFECT
SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy	WITHOUT_CLASSIFICATION	0.9998962296382407	WITHOUT_CLASSIFICATION	1.0377036175934732E-4	DEFECT
getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999998941711471	WITHOUT_CLASSIFICATION	1.0582885286604229E-7	DEFECT
IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999990608457895	WITHOUT_CLASSIFICATION	9.391542105509585E-7	DEFECT
promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999981984975028	WITHOUT_CLASSIFICATION	1.8015024970698464E-6	DEFECT
Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999995141629308	WITHOUT_CLASSIFICATION	4.858370693084345E-7	DEFECT
carriage return	WITHOUT_CLASSIFICATION	0.9999991081839134	WITHOUT_CLASSIFICATION	8.918160867340071E-7	DEFECT
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998901186375976	WITHOUT_CLASSIFICATION	1.0988136240250225E-4	DEFECT
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9991950504259035	WITHOUT_CLASSIFICATION	8.049495740965164E-4	DEFECT
String construction routines by NOT byte[] buffer and making the target String shared	WITHOUT_CLASSIFICATION	0.9999999801796154	WITHOUT_CLASSIFICATION	1.9820384595043304E-8	DEFECT
insert all nodes in sequence, hash them in the final instruction KEY	WITHOUT_CLASSIFICATION	0.999999257131109	WITHOUT_CLASSIFICATION	7.428688909088951E-7	DEFECT
return last value from execution	WITHOUT_CLASSIFICATION	0.9999613755854972	WITHOUT_CLASSIFICATION	3.8624414502824474E-5	DEFECT
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9998880491658995	WITHOUT_CLASSIFICATION	1.1195083410048044E-4	DEFECT
Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999963293745824	WITHOUT_CLASSIFICATION	3.67062541759728E-6	DEFECT
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999899479631	WITHOUT_CLASSIFICATION	1.0052036755563847E-8	DEFECT
For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999999938966524	WITHOUT_CLASSIFICATION	6.103347653039882E-9	DEFECT
implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999754180283331	WITHOUT_CLASSIFICATION	2.458197166687264E-5	DEFECT
CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999903177	WITHOUT_CLASSIFICATION	9.682299863939086E-9	DEFECT
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999997979497305	WITHOUT_CLASSIFICATION	2.0205026952304637E-7	DEFECT
leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999932205929442	WITHOUT_CLASSIFICATION	6.779407055782626E-6	DEFECT
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999997183095549	WITHOUT_CLASSIFICATION	2.8169044515299406E-7	DEFECT
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9959233011497668	WITHOUT_CLASSIFICATION	0.00407669885023315	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999998084544626	WITHOUT_CLASSIFICATION	1.9154553738266754E-7	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999998084544626	WITHOUT_CLASSIFICATION	1.9154553738266754E-7	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999998084544626	WITHOUT_CLASSIFICATION	1.9154553738266754E-7	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999998084544626	WITHOUT_CLASSIFICATION	1.9154553738266754E-7	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999998084544626	WITHOUT_CLASSIFICATION	1.9154553738266754E-7	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999998084544626	WITHOUT_CLASSIFICATION	1.9154553738266754E-7	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999998084544626	WITHOUT_CLASSIFICATION	1.9154553738266754E-7	DEFECT
Need to initialize	WITHOUT_CLASSIFICATION	0.9999998084544626	WITHOUT_CLASSIFICATION	1.9154553738266754E-7	DEFECT
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9961060616931025	WITHOUT_CLASSIFICATION	0.0038939383068976132	DEFECT
fall through	WITHOUT_CLASSIFICATION	0.9999237022778441	WITHOUT_CLASSIFICATION	7.629772215586052E-5	DEFECT
deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9998878978046915	WITHOUT_CLASSIFICATION	1.1210219530859438E-4	DEFECT
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9807808169061321	WITHOUT_CLASSIFICATION	0.019219183093868022	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998558395207193	WITHOUT_CLASSIFICATION	1.4416047928075425E-4	DEFECT
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998558395207193	WITHOUT_CLASSIFICATION	1.4416047928075425E-4	DEFECT
store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999998921617876	WITHOUT_CLASSIFICATION	1.0783821230238465E-7	DEFECT
the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999991801039259	WITHOUT_CLASSIFICATION	8.198960742788514E-7	DEFECT
First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999660138826	WITHOUT_CLASSIFICATION	3.398611729453575E-8	DEFECT
public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999899234393876	WITHOUT_CLASSIFICATION	1.007656061231962E-5	DEFECT
get current context	WITHOUT_CLASSIFICATION	0.9999929732445038	WITHOUT_CLASSIFICATION	7.026755496236063E-6	DEFECT
octal constant	WITHOUT_CLASSIFICATION	0.9999975840996757	WITHOUT_CLASSIFICATION	2.4159003243029646E-6	DEFECT
read	WITHOUT_CLASSIFICATION	0.9999927529371219	WITHOUT_CLASSIFICATION	7.247062878137458E-6	DEFECT
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9936240847645167	WITHOUT_CLASSIFICATION	0.006375915235483342	DEFECT
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999996719422362	WITHOUT_CLASSIFICATION	3.2805776389577575E-7	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999768749199437	WITHOUT_CLASSIFICATION	2.3125080056360314E-5	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999768749199437	WITHOUT_CLASSIFICATION	2.3125080056360314E-5	DEFECT
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999768749199437	WITHOUT_CLASSIFICATION	2.3125080056360314E-5	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999982808601943	WITHOUT_CLASSIFICATION	1.7191398056896098E-6	DEFECT
at end	WITHOUT_CLASSIFICATION	0.9999903727923023	WITHOUT_CLASSIFICATION	9.62720769766729E-6	DEFECT
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9999988301835029	WITHOUT_CLASSIFICATION	1.16981649716699E-6	DEFECT
save blocking state	WITHOUT_CLASSIFICATION	0.9999997496599891	WITHOUT_CLASSIFICATION	2.503400110061161E-7	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
receiver	WITHOUT_CLASSIFICATION	0.9999957071356658	WITHOUT_CLASSIFICATION	4.292864334300131E-6	DEFECT
invoke static __file__	WITHOUT_CLASSIFICATION	0.9999998901937205	WITHOUT_CLASSIFICATION	1.0980627942487072E-7	DEFECT
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999999413873731	WITHOUT_CLASSIFICATION	5.8612626885363044E-8	DEFECT
fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999203874222914	WITHOUT_CLASSIFICATION	7.96125777086E-5	DEFECT
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999953317477673	WITHOUT_CLASSIFICATION	4.668252232600539E-6	DEFECT
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999953317477673	WITHOUT_CLASSIFICATION	4.668252232600539E-6	DEFECT
load null block	WITHOUT_CLASSIFICATION	0.9999947195798058	WITHOUT_CLASSIFICATION	5.280420194221842E-6	DEFECT
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999999684682797	WITHOUT_CLASSIFICATION	3.153172039124783E-8	DEFECT
nothing else to here - the module version will be included in the class.	WITHOUT_CLASSIFICATION	0.9999786905768558	WITHOUT_CLASSIFICATION	2.130942314419204E-5	DEFECT
JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9976697385453666	WITHOUT_CLASSIFICATION	0.0023302614546334348	DEFECT
block given	WITHOUT_CLASSIFICATION	0.9999953561537288	WITHOUT_CLASSIFICATION	4.643846271172147E-6	DEFECT
block given	WITHOUT_CLASSIFICATION	0.9999953561537288	WITHOUT_CLASSIFICATION	4.643846271172147E-6	DEFECT
Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9999994432981839	WITHOUT_CLASSIFICATION	5.567018161171611E-7	DEFECT
Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999987849361119	WITHOUT_CLASSIFICATION	1.2150638880763919E-6	DEFECT
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999702627918244	WITHOUT_CLASSIFICATION	2.973720817559455E-5	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999953010057588	WITHOUT_CLASSIFICATION	4.698994241199892E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999953010057588	WITHOUT_CLASSIFICATION	4.698994241199892E-6	DEFECT
self	WITHOUT_CLASSIFICATION	0.9999953010057588	WITHOUT_CLASSIFICATION	4.698994241199892E-6	DEFECT
declare the field	WITHOUT_CLASSIFICATION	0.9999997895291077	WITHOUT_CLASSIFICATION	2.1047089214610745E-7	DEFECT
Assign the values.	WITHOUT_CLASSIFICATION	0.9999974623527168	WITHOUT_CLASSIFICATION	2.5376472832320885E-6	DEFECT
Assign the values.	WITHOUT_CLASSIFICATION	0.9999974623527168	WITHOUT_CLASSIFICATION	2.5376472832320885E-6	DEFECT
check arity	WITHOUT_CLASSIFICATION	0.9999996369651648	WITHOUT_CLASSIFICATION	3.6303483518094467E-7	DEFECT
check arity	WITHOUT_CLASSIFICATION	0.9999996369651648	WITHOUT_CLASSIFICATION	3.6303483518094467E-7	DEFECT
create the class	WITHOUT_CLASSIFICATION	0.9999987057053685	WITHOUT_CLASSIFICATION	1.2942946314036209E-6	DEFECT
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999994520237022	WITHOUT_CLASSIFICATION	5.479762977017389E-7	DEFECT
No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999831967150332	WITHOUT_CLASSIFICATION	1.6803284966801656E-5	DEFECT
1.8	WITHOUT_CLASSIFICATION	0.9999224377354651	WITHOUT_CLASSIFICATION	7.75622645348962E-5	DEFECT
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9999890738808469	WITHOUT_CLASSIFICATION	1.0926119153167844E-5	DEFECT
Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999875867777412	WITHOUT_CLASSIFICATION	1.2413222258678785E-5	DEFECT
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999986849454	WITHOUT_CLASSIFICATION	1.3150545712141773E-9	DEFECT
block	WITHOUT_CLASSIFICATION	0.9999780363160254	WITHOUT_CLASSIFICATION	2.1963683974522425E-5	DEFECT
Label for the start of the method Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999999328291386	WITHOUT_CLASSIFICATION	6.717086143168004E-8	DEFECT
comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999993836374645	WITHOUT_CLASSIFICATION	6.163625353976889E-7	DEFECT
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9259559106464491	DEFECT	0.07404408935355086	WITHOUT_CLASSIFICATION
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999867453587478	WITHOUT_CLASSIFICATION	1.3254641252278672E-5	DEFECT
all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.999996117719604	WITHOUT_CLASSIFICATION	3.8822803960596384E-6	DEFECT
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999929587373548	WITHOUT_CLASSIFICATION	7.041262645199122E-6	DEFECT
Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999983866610732	WITHOUT_CLASSIFICATION	1.6133389267070705E-6	DEFECT
Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999997560681737	WITHOUT_CLASSIFICATION	2.43931826287565E-7	DEFECT
Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999997907473851	WITHOUT_CLASSIFICATION	2.0925261501908085E-7	DEFECT
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999996423832394	WITHOUT_CLASSIFICATION	3.5761676059805485E-6	DEFECT
ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999946049756335	WITHOUT_CLASSIFICATION	5.395024366453214E-6	DEFECT
return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999997270805827	WITHOUT_CLASSIFICATION	2.729194172959373E-7	DEFECT
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999635285607735	WITHOUT_CLASSIFICATION	3.647143922644074E-5	DEFECT
arg	WITHOUT_CLASSIFICATION	0.9999745743924388	WITHOUT_CLASSIFICATION	2.5425607561340855E-5	DEFECT
Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999985882203243	WITHOUT_CLASSIFICATION	1.411779675804857E-6	DEFECT
normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.999999594108787	WITHOUT_CLASSIFICATION	4.058912130138772E-7	DEFECT
coerce arguments	WITHOUT_CLASSIFICATION	0.9999997970493224	WITHOUT_CLASSIFICATION	2.0295067749573296E-7	DEFECT
0.0 is ok float range inverted float range? NaN +infinity -infinity	WITHOUT_CLASSIFICATION	0.9999931346654478	WITHOUT_CLASSIFICATION	6.865334552190701E-6	DEFECT
expected	WITHOUT_CLASSIFICATION	0.9999838684070478	WITHOUT_CLASSIFICATION	1.6131592952183666E-5	DEFECT
set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999998095289444	WITHOUT_CLASSIFICATION	1.9047105552788168E-7	DEFECT
ignore backslashed spaces in %w	WITHOUT_CLASSIFICATION	0.9999987326966353	WITHOUT_CLASSIFICATION	1.2673033646849727E-6	DEFECT
Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9998499600870843	WITHOUT_CLASSIFICATION	1.5003991291564532E-4	DEFECT
no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999988793951093	WITHOUT_CLASSIFICATION	1.1206048906726192E-6	DEFECT
<=> may return nil in many circumstances, e.g. 3 <=> NaN	WITHOUT_CLASSIFICATION	0.9999962919270379	WITHOUT_CLASSIFICATION	3.708072962185347E-6	DEFECT
use numbered access method	WITHOUT_CLASSIFICATION	0.9999856611394575	WITHOUT_CLASSIFICATION	1.4338860542493308E-5	DEFECT
Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999946359067764	WITHOUT_CLASSIFICATION	5.364093223611213E-6	DEFECT
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999995112079593	WITHOUT_CLASSIFICATION	4.887920407204508E-7	DEFECT
The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999970230750623	WITHOUT_CLASSIFICATION	2.9769249376657425E-6	DEFECT
Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999999892584196	WITHOUT_CLASSIFICATION	1.07415805415789E-8	DEFECT
arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999985079156309	WITHOUT_CLASSIFICATION	1.4920843691465276E-6	DEFECT
build scope names string	WITHOUT_CLASSIFICATION	0.9999984145684016	WITHOUT_CLASSIFICATION	1.5854315984079228E-6	DEFECT
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.99900179604802	WITHOUT_CLASSIFICATION	9.982039519799981E-4	DEFECT
Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999522960375404	WITHOUT_CLASSIFICATION	4.770396245955259E-5	DEFECT
finally	WITHOUT_CLASSIFICATION	0.999969815467109	WITHOUT_CLASSIFICATION	3.0184532890966733E-5	DEFECT
MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999999961991449	WITHOUT_CLASSIFICATION	3.800855069808371E-9	DEFECT
?l | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.999998430852544	WITHOUT_CLASSIFICATION	1.569147456003259E-6	DEFECT
This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9893847258588473	WITHOUT_CLASSIFICATION	0.010615274141152778	DEFECT
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999999637110635	WITHOUT_CLASSIFICATION	3.6288936557690755E-8	DEFECT
specific arity	WITHOUT_CLASSIFICATION	0.9999998740856397	WITHOUT_CLASSIFICATION	1.2591436018899675E-7	DEFECT
In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999995493967345	WITHOUT_CLASSIFICATION	4.5060326535767624E-7	DEFECT
?w | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999913723167377	WITHOUT_CLASSIFICATION	8.627683262345786E-6	DEFECT
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999587706121956	WITHOUT_CLASSIFICATION	4.1229387804289435E-5	DEFECT
@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }	WITHOUT_CLASSIFICATION	0.9999885207088045	WITHOUT_CLASSIFICATION	1.1479291195367186E-5	DEFECT
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999986530957589	WITHOUT_CLASSIFICATION	1.3469042411192065E-6	DEFECT
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999986530957589	WITHOUT_CLASSIFICATION	1.3469042411192065E-6	DEFECT
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998529222884	WITHOUT_CLASSIFICATION	1.470777115378778E-7	DEFECT
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998529222884	WITHOUT_CLASSIFICATION	1.470777115378778E-7	DEFECT
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999546873732085	WITHOUT_CLASSIFICATION	4.5312626791489095E-5	DEFECT
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999546873732085	WITHOUT_CLASSIFICATION	4.5312626791489095E-5	DEFECT
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9999901639223493	WITHOUT_CLASSIFICATION	9.8360776506533E-6	DEFECT
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9999901639223493	WITHOUT_CLASSIFICATION	9.8360776506533E-6	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999977920040746	WITHOUT_CLASSIFICATION	2.2079959253676854E-6	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999977920040746	WITHOUT_CLASSIFICATION	2.2079959253676854E-6	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999977920040746	WITHOUT_CLASSIFICATION	2.2079959253676854E-6	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999977920040746	WITHOUT_CLASSIFICATION	2.2079959253676854E-6	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999977920040746	WITHOUT_CLASSIFICATION	2.2079959253676854E-6	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999977920040746	WITHOUT_CLASSIFICATION	2.2079959253676854E-6	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999977920040746	WITHOUT_CLASSIFICATION	2.2079959253676854E-6	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999977920040746	WITHOUT_CLASSIFICATION	2.2079959253676854E-6	DEFECT
write-volatile	WITHOUT_CLASSIFICATION	0.9999977920040746	WITHOUT_CLASSIFICATION	2.2079959253676854E-6	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999975005690539	WITHOUT_CLASSIFICATION	2.499430946135246E-6	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999975005690539	WITHOUT_CLASSIFICATION	2.499430946135246E-6	DEFECT
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999975005690539	WITHOUT_CLASSIFICATION	2.499430946135246E-6	DEFECT
Add property name aliases	WITHOUT_CLASSIFICATION	0.999999146452785	WITHOUT_CLASSIFICATION	8.535472151596933E-7	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999680937809813	WITHOUT_CLASSIFICATION	3.190621901872704E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999680937809813	WITHOUT_CLASSIFICATION	3.190621901872704E-5	DEFECT
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999680937809813	WITHOUT_CLASSIFICATION	3.190621901872704E-5	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999977429572982	WITHOUT_CLASSIFICATION	2.2570427018704063E-6	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999977429572982	WITHOUT_CLASSIFICATION	2.2570427018704063E-6	DEFECT
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999977429572982	WITHOUT_CLASSIFICATION	2.2570427018704063E-6	DEFECT
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9999199350025081	WITHOUT_CLASSIFICATION	8.006499749189072E-5	DEFECT
backspace	WITHOUT_CLASSIFICATION	0.9999953800745381	WITHOUT_CLASSIFICATION	4.619925461871243E-6	DEFECT
yySindex 889	WITHOUT_CLASSIFICATION	0.9998947631616273	WITHOUT_CLASSIFICATION	1.0523683837263457E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998712663809336	WITHOUT_CLASSIFICATION	1.287336190664449E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998712663809336	WITHOUT_CLASSIFICATION	1.287336190664449E-4	DEFECT
yyGindex 136	WITHOUT_CLASSIFICATION	0.9998712663809336	WITHOUT_CLASSIFICATION	1.287336190664449E-4	DEFECT
package-private	WITHOUT_CLASSIFICATION	0.9999867409347081	WITHOUT_CLASSIFICATION	1.3259065291962801E-5	DEFECT
fall through	WITHOUT_CLASSIFICATION	0.9999237022778441	WITHOUT_CLASSIFICATION	7.629772215586052E-5	DEFECT
fall through	WITHOUT_CLASSIFICATION	0.9999237022778441	WITHOUT_CLASSIFICATION	7.629772215586052E-5	DEFECT
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.9991491761530504	WITHOUT_CLASSIFICATION	8.508238469496021E-4	DEFECT
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999880592574	WITHOUT_CLASSIFICATION	1.1940742633413777E-8	DEFECT
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999880592574	WITHOUT_CLASSIFICATION	1.1940742633413777E-8	DEFECT
Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable	WITHOUT_CLASSIFICATION	0.7849299374229701	WITHOUT_CLASSIFICATION	0.21507006257702982	DEFECT
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999996792027397	WITHOUT_CLASSIFICATION	3.207972603556112E-7	DEFECT
The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999950690879527	WITHOUT_CLASSIFICATION	4.930912047338331E-6	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999983815357397	WITHOUT_CLASSIFICATION	1.6184642602900423E-6	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999983815357397	WITHOUT_CLASSIFICATION	1.6184642602900423E-6	DEFECT
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.999995393365125	WITHOUT_CLASSIFICATION	4.606634875070018E-6	DEFECT
We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999999645197037	WITHOUT_CLASSIFICATION	3.548029615648535E-8	DEFECT
note that addMethod now does its own put, so any change made to functionality here should be made there as well	WITHOUT_CLASSIFICATION	0.9999999281020322	WITHOUT_CLASSIFICATION	7.189796771506709E-8	DEFECT
Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }	WITHOUT_CLASSIFICATION	0.9999999835173432	WITHOUT_CLASSIFICATION	1.648265683732595E-8	DEFECT
empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.	WITHOUT_CLASSIFICATION	0.9744774545443763	WITHOUT_CLASSIFICATION	0.025522545455623744	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999983815357397	WITHOUT_CLASSIFICATION	1.6184642602900423E-6	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999983815357397	WITHOUT_CLASSIFICATION	1.6184642602900423E-6	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999983815357397	WITHOUT_CLASSIFICATION	1.6184642602900423E-6	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999983815357397	WITHOUT_CLASSIFICATION	1.6184642602900423E-6	DEFECT
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999983815357397	WITHOUT_CLASSIFICATION	1.6184642602900423E-6	DEFECT
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999998281390213	WITHOUT_CLASSIFICATION	1.7186097870271688E-7	DEFECT
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999997775137567	WITHOUT_CLASSIFICATION	2.2248624330743988E-6	DEFECT
if it's an inner class and it's not public, we can't access it; skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999983334748679	WITHOUT_CLASSIFICATION	1.6665251321202138E-6	DEFECT
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999955156573341	WITHOUT_CLASSIFICATION	4.484342665899142E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.	WITHOUT_CLASSIFICATION	0.9998893780788973	WITHOUT_CLASSIFICATION	1.1062192110270077E-4	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
not reached	WITHOUT_CLASSIFICATION	0.9999963396929958	WITHOUT_CLASSIFICATION	3.660307004239196E-6	DEFECT
This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9686228247235094	WITHOUT_CLASSIFICATION	0.03137717527649064	DEFECT
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9991346540068079	WITHOUT_CLASSIFICATION	8.653459931919797E-4	DEFECT
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999413677406	WITHOUT_CLASSIFICATION	5.863225953071407E-8	DEFECT
get "self"	WITHOUT_CLASSIFICATION	0.9999997659586545	WITHOUT_CLASSIFICATION	2.3404134543700376E-7	DEFECT
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999924788860105	WITHOUT_CLASSIFICATION	7.521113989520486E-6	DEFECT
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9999728005103463	WITHOUT_CLASSIFICATION	2.7199489653787323E-5	DEFECT
only public methods	WITHOUT_CLASSIFICATION	0.9999979444311106	WITHOUT_CLASSIFICATION	2.0555688894043333E-6	DEFECT
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999988025569	WITHOUT_CLASSIFICATION	1.1974431797841363E-9	DEFECT
First try to use drive letter from supplied dir value, then try current work dir.	WITHOUT_CLASSIFICATION	0.9999858344682303	WITHOUT_CLASSIFICATION	1.4165531769618659E-5	DEFECT
JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.	WITHOUT_CLASSIFICATION	0.9990787486327597	WITHOUT_CLASSIFICATION	9.212513672403462E-4	DEFECT
generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999998588160859	WITHOUT_CLASSIFICATION	1.4118391421792597E-7	DEFECT
block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry	WITHOUT_CLASSIFICATION	0.9999999988599305	WITHOUT_CLASSIFICATION	1.1400695367850052E-9	DEFECT
Add aliases in Type::, NativeType:: and FFI::TYPE_	WITHOUT_CLASSIFICATION	0.9999677773849762	WITHOUT_CLASSIFICATION	3.222261502377374E-5	DEFECT
Create constants for flock	WITHOUT_CLASSIFICATION	0.9999982801621387	WITHOUT_CLASSIFICATION	1.7198378613846045E-6	DEFECT
double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999959666169923	WITHOUT_CLASSIFICATION	4.033383007686522E-6	DEFECT
indices for temp values	WITHOUT_CLASSIFICATION	0.9999931919813135	WITHOUT_CLASSIFICATION	6.808018686441736E-6	DEFECT
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999973492677	WITHOUT_CLASSIFICATION	2.6507323484040145E-9	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999999115196758	WITHOUT_CLASSIFICATION	8.84803242345518E-8	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999999115196758	WITHOUT_CLASSIFICATION	8.84803242345518E-8	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999999115196758	WITHOUT_CLASSIFICATION	8.84803242345518E-8	DEFECT
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999999115196758	WITHOUT_CLASSIFICATION	8.84803242345518E-8	DEFECT
snapshot of contents of directory current position in directory	WITHOUT_CLASSIFICATION	0.9999833919997175	WITHOUT_CLASSIFICATION	1.660800028249167E-5	DEFECT
Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999819946991693	WITHOUT_CLASSIFICATION	1.8005300830800423E-5	DEFECT
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999990333545988	WITHOUT_CLASSIFICATION	9.666454011973938E-6	DEFECT
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999990333545988	WITHOUT_CLASSIFICATION	9.666454011973938E-6	DEFECT
set self to the class	WITHOUT_CLASSIFICATION	0.9999940346343204	WITHOUT_CLASSIFICATION	5.965365679661575E-6	DEFECT
---------- Public fields, methods ---------	WITHOUT_CLASSIFICATION	0.9999954295286179	WITHOUT_CLASSIFICATION	4.570471382133433E-6	DEFECT
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9999915638518705	WITHOUT_CLASSIFICATION	8.436148129413856E-6	DEFECT
zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999897937172	WITHOUT_CLASSIFICATION	1.0206282850001529E-8	DEFECT
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9998274201473459	WITHOUT_CLASSIFICATION	1.725798526541334E-4	DEFECT
Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999987506002408	WITHOUT_CLASSIFICATION	1.2493997591657168E-6	DEFECT
Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9998864967254825	WITHOUT_CLASSIFICATION	1.1350327451746864E-4	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.9999979895808285	WITHOUT_CLASSIFICATION	2.0104191713872207E-6	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.9999979895808285	WITHOUT_CLASSIFICATION	2.0104191713872207E-6	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.9999979895808285	WITHOUT_CLASSIFICATION	2.0104191713872207E-6	DEFECT
do nothing	WITHOUT_CLASSIFICATION	0.9999979895808285	WITHOUT_CLASSIFICATION	2.0104191713872207E-6	DEFECT
If an IO exception occurs (something odd, but possible) A directory may return null.	WITHOUT_CLASSIFICATION	0.9998956379446192	WITHOUT_CLASSIFICATION	1.0436205538071797E-4	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999962249466964	WITHOUT_CLASSIFICATION	3.7750533036191626E-6	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999962249466964	WITHOUT_CLASSIFICATION	3.7750533036191626E-6	DEFECT
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999962249466964	WITHOUT_CLASSIFICATION	3.7750533036191626E-6	DEFECT
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999986422727257	WITHOUT_CLASSIFICATION	1.357727274288856E-6	DEFECT
finally with no exception	WITHOUT_CLASSIFICATION	0.999997843557942	WITHOUT_CLASSIFICATION	2.156442058057191E-6	DEFECT
Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999996207933612	WITHOUT_CLASSIFICATION	3.7920663876712476E-7	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9940788027560385	WITHOUT_CLASSIFICATION	0.005921197243961463	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9940788027560385	WITHOUT_CLASSIFICATION	0.005921197243961463	DEFECT
The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.	WITHOUT_CLASSIFICATION	0.9999001294992381	WITHOUT_CLASSIFICATION	9.98705007619461E-5	DEFECT
This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9998887620045123	WITHOUT_CLASSIFICATION	1.112379954878218E-4	DEFECT
not a class	WITHOUT_CLASSIFICATION	0.9999422865807321	WITHOUT_CLASSIFICATION	5.7713419267879076E-5	DEFECT
not a class	WITHOUT_CLASSIFICATION	0.9999422865807321	WITHOUT_CLASSIFICATION	5.7713419267879076E-5	DEFECT
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9994853644466544	WITHOUT_CLASSIFICATION	5.146355533455669E-4	DEFECT
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9994853644466544	WITHOUT_CLASSIFICATION	5.146355533455669E-4	DEFECT
io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999989535772578	WITHOUT_CLASSIFICATION	1.046422742254629E-6	DEFECT
In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999994631182233	WITHOUT_CLASSIFICATION	5.368817766498258E-7	DEFECT
rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999999743980663	WITHOUT_CLASSIFICATION	2.560193369438119E-8	DEFECT
Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9994532940470476	WITHOUT_CLASSIFICATION	5.467059529522644E-4	DEFECT
CONSTANT API METHODS	WITHOUT_CLASSIFICATION	0.9999918856970968	WITHOUT_CLASSIFICATION	8.114302903143517E-6	DEFECT
create the default thread group	WITHOUT_CLASSIFICATION	0.9999999276281031	WITHOUT_CLASSIFICATION	7.23718968464429E-8	DEFECT
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999997892406445	WITHOUT_CLASSIFICATION	2.1075935553697795E-7	DEFECT
============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================	WITHOUT_CLASSIFICATION	0.999960790435222	WITHOUT_CLASSIFICATION	3.920956477806847E-5	DEFECT
LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module	WITHOUT_CLASSIFICATION	0.9999999252213483	WITHOUT_CLASSIFICATION	7.477865166327311E-8	DEFECT
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999986734364	WITHOUT_CLASSIFICATION	1.3265636702368671E-9	DEFECT
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999986734364	WITHOUT_CLASSIFICATION	1.3265636702368671E-9	DEFECT
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999993741079689	WITHOUT_CLASSIFICATION	6.258920309883689E-7	DEFECT
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999993741079689	WITHOUT_CLASSIFICATION	6.258920309883689E-7	DEFECT
retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999866283597069	WITHOUT_CLASSIFICATION	1.3371640293135759E-5	DEFECT
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999893014365014	WITHOUT_CLASSIFICATION	1.0698563498654213E-5	DEFECT
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9998211422816773	WITHOUT_CLASSIFICATION	1.7885771832273505E-4	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999992755771221	WITHOUT_CLASSIFICATION	7.244228780150731E-7	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999992755771221	WITHOUT_CLASSIFICATION	7.244228780150731E-7	DEFECT
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999992755771221	WITHOUT_CLASSIFICATION	7.244228780150731E-7	DEFECT
line 286	WITHOUT_CLASSIFICATION	0.9999914881473092	WITHOUT_CLASSIFICATION	8.51185269089855E-6	DEFECT
line 476	WITHOUT_CLASSIFICATION	0.9999915885811411	WITHOUT_CLASSIFICATION	8.41141885890022E-6	DEFECT
line 513	WITHOUT_CLASSIFICATION	0.9999890252469196	WITHOUT_CLASSIFICATION	1.097475308047374E-5	DEFECT
line 530	WITHOUT_CLASSIFICATION	0.9999873951761044	WITHOUT_CLASSIFICATION	1.260482389557217E-5	DEFECT
line 533	WITHOUT_CLASSIFICATION	0.9999879230916402	WITHOUT_CLASSIFICATION	1.2076908359858322E-5	DEFECT
line 537	WITHOUT_CLASSIFICATION	0.999985382554749	WITHOUT_CLASSIFICATION	1.4617445251113364E-5	DEFECT
line 551	WITHOUT_CLASSIFICATION	0.99999160239912	WITHOUT_CLASSIFICATION	8.39760088004726E-6	DEFECT
end loop	WITHOUT_CLASSIFICATION	0.9999978328018575	WITHOUT_CLASSIFICATION	2.1671981424394153E-6	DEFECT
MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999527564320043	WITHOUT_CLASSIFICATION	4.724356799576086E-5	DEFECT
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999811029191731	WITHOUT_CLASSIFICATION	1.889708082684784E-5	DEFECT
Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!	WITHOUT_CLASSIFICATION	0.9999999805181636	WITHOUT_CLASSIFICATION	1.9481836366771923E-8	DEFECT
fields should really be an immutable map as it is never modified after construction	WITHOUT_CLASSIFICATION	0.9999975558947011	WITHOUT_CLASSIFICATION	2.4441052989167073E-6	DEFECT
load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999979834570015	WITHOUT_CLASSIFICATION	2.016542998504953E-6	DEFECT
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9940788027560385	WITHOUT_CLASSIFICATION	0.005921197243961463	DEFECT
If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9998726246880788	WITHOUT_CLASSIFICATION	1.2737531192119048E-4	DEFECT
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9999884318041987	WITHOUT_CLASSIFICATION	1.1568195801247283E-5	DEFECT
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999973353228817	WITHOUT_CLASSIFICATION	2.6646771181886777E-6	DEFECT
value	WITHOUT_CLASSIFICATION	0.999982680277077	WITHOUT_CLASSIFICATION	1.731972292295338E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.999982680277077	WITHOUT_CLASSIFICATION	1.731972292295338E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.999982680277077	WITHOUT_CLASSIFICATION	1.731972292295338E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.999982680277077	WITHOUT_CLASSIFICATION	1.731972292295338E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.999982680277077	WITHOUT_CLASSIFICATION	1.731972292295338E-5	DEFECT
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999523438248753	WITHOUT_CLASSIFICATION	4.765617512481385E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.999982680277077	WITHOUT_CLASSIFICATION	1.731972292295338E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.999982680277077	WITHOUT_CLASSIFICATION	1.731972292295338E-5	DEFECT
value	WITHOUT_CLASSIFICATION	0.999982680277077	WITHOUT_CLASSIFICATION	1.731972292295338E-5	DEFECT
MRI has extra pointer which makes our code look a little bit more strange in comparison	WITHOUT_CLASSIFICATION	0.999997624721791	WITHOUT_CLASSIFICATION	2.375278209142366E-6	DEFECT
Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.	WITHOUT_CLASSIFICATION	0.9999974027355901	WITHOUT_CLASSIFICATION	2.5972644097743288E-6	DEFECT
tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.881020550960559	DEFECT	0.11897944903944103	WITHOUT_CLASSIFICATION
What is \v in C? case '\v': c2 = 'v'; break;	WITHOUT_CLASSIFICATION	0.9982367122977679	WITHOUT_CLASSIFICATION	0.0017632877022321512	DEFECT
Consider Thread aspects of this	WITHOUT_CLASSIFICATION	0.9999987488734124	WITHOUT_CLASSIFICATION	1.2511265875937406E-6	DEFECT
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999987659641014	WITHOUT_CLASSIFICATION	1.2340358985756791E-6	DEFECT
An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999996679575	WITHOUT_CLASSIFICATION	3.32042454347403E-10	DEFECT
line 572	WITHOUT_CLASSIFICATION	0.9999755232440954	WITHOUT_CLASSIFICATION	2.447675590462285E-5	DEFECT
line 601	WITHOUT_CLASSIFICATION	0.9999929549879187	WITHOUT_CLASSIFICATION	7.045012081189214E-6	DEFECT
line 601	WITHOUT_CLASSIFICATION	0.9999929549879187	WITHOUT_CLASSIFICATION	7.045012081189214E-6	DEFECT
line 625	WITHOUT_CLASSIFICATION	0.9999720831064011	WITHOUT_CLASSIFICATION	2.7916893598843398E-5	DEFECT
line 649	WITHOUT_CLASSIFICATION	0.9999885131152009	WITHOUT_CLASSIFICATION	1.148688479913515E-5	DEFECT
line 691	WITHOUT_CLASSIFICATION	0.999992008989494	WITHOUT_CLASSIFICATION	7.99101050591822E-6	DEFECT
line 723	WITHOUT_CLASSIFICATION	0.9999867963710327	WITHOUT_CLASSIFICATION	1.3203628967250782E-5	DEFECT
line 732	WITHOUT_CLASSIFICATION	0.9999889446401453	WITHOUT_CLASSIFICATION	1.1055359854699206E-5	DEFECT
line 745	WITHOUT_CLASSIFICATION	0.9999892264254996	WITHOUT_CLASSIFICATION	1.0773574500389174E-5	DEFECT
line 766	WITHOUT_CLASSIFICATION	0.9999927804813848	WITHOUT_CLASSIFICATION	7.219518615138222E-6	DEFECT
line 785	WITHOUT_CLASSIFICATION	0.9999912810832452	WITHOUT_CLASSIFICATION	8.718916754822007E-6	DEFECT
line 794	WITHOUT_CLASSIFICATION	0.9999918946261716	WITHOUT_CLASSIFICATION	8.105373828413808E-6	DEFECT
line 800	WITHOUT_CLASSIFICATION	0.9999913370443044	WITHOUT_CLASSIFICATION	8.66295569554351E-6	DEFECT
line 812	WITHOUT_CLASSIFICATION	0.9999940544908386	WITHOUT_CLASSIFICATION	5.94550916155144E-6	DEFECT
line 827	WITHOUT_CLASSIFICATION	0.9999917412943542	WITHOUT_CLASSIFICATION	8.258705645851194E-6	DEFECT
line 839	WITHOUT_CLASSIFICATION	0.9999924999319895	WITHOUT_CLASSIFICATION	7.50006801051548E-6	DEFECT
line 845	WITHOUT_CLASSIFICATION	0.9999900422995155	WITHOUT_CLASSIFICATION	9.957700484400412E-6	DEFECT
line 864	WITHOUT_CLASSIFICATION	0.9999925765588231	WITHOUT_CLASSIFICATION	7.423441176907924E-6	DEFECT
line 886	WITHOUT_CLASSIFICATION	0.9999937240840401	WITHOUT_CLASSIFICATION	6.275915959926531E-6	DEFECT
line 896	WITHOUT_CLASSIFICATION	0.999993352725416	WITHOUT_CLASSIFICATION	6.6472745840294005E-6	DEFECT
line 911	WITHOUT_CLASSIFICATION	0.9999956138811691	WITHOUT_CLASSIFICATION	4.386118830942451E-6	DEFECT
line 929	WITHOUT_CLASSIFICATION	0.9999914236370043	WITHOUT_CLASSIFICATION	8.57636299568691E-6	DEFECT
line 952	WITHOUT_CLASSIFICATION	0.9999837238835453	WITHOUT_CLASSIFICATION	1.6276116454757612E-5	DEFECT
line 970	WITHOUT_CLASSIFICATION	0.9999900804897378	WITHOUT_CLASSIFICATION	9.9195102622049E-6	DEFECT
line 972	WITHOUT_CLASSIFICATION	0.9999861958715682	WITHOUT_CLASSIFICATION	1.3804128431779423E-5	DEFECT
line 991	WITHOUT_CLASSIFICATION	0.9999945142192936	WITHOUT_CLASSIFICATION	5.485780706348315E-6	DEFECT
line 1011	WITHOUT_CLASSIFICATION	0.9999979566575748	WITHOUT_CLASSIFICATION	2.0433424252326177E-6	DEFECT
line 1026	WITHOUT_CLASSIFICATION	0.9999944215602791	WITHOUT_CLASSIFICATION	5.578439721029787E-6	DEFECT
line 1038	WITHOUT_CLASSIFICATION	0.9999953044433297	WITHOUT_CLASSIFICATION	4.695556670265448E-6	DEFECT
line 1067	WITHOUT_CLASSIFICATION	0.9999956444162617	WITHOUT_CLASSIFICATION	4.355583738344632E-6	DEFECT
line 1085	WITHOUT_CLASSIFICATION	0.9999946957940028	WITHOUT_CLASSIFICATION	5.30420599720659E-6	DEFECT
line 1097	WITHOUT_CLASSIFICATION	0.9999953376120225	WITHOUT_CLASSIFICATION	4.662387977450365E-6	DEFECT
line 1105	WITHOUT_CLASSIFICATION	0.9999963567886129	WITHOUT_CLASSIFICATION	3.643211387033698E-6	DEFECT
line 1122	WITHOUT_CLASSIFICATION	0.9999961907898849	WITHOUT_CLASSIFICATION	3.8092101151190444E-6	DEFECT
line 1133	WITHOUT_CLASSIFICATION	0.9999962342568406	WITHOUT_CLASSIFICATION	3.765743159430379E-6	DEFECT
line 1145	WITHOUT_CLASSIFICATION	0.9999929907331032	WITHOUT_CLASSIFICATION	7.009266896768666E-6	DEFECT
line 1169	WITHOUT_CLASSIFICATION	0.9999957541074974	WITHOUT_CLASSIFICATION	4.2458925026904974E-6	DEFECT
line 1201	WITHOUT_CLASSIFICATION	0.9999926505105154	WITHOUT_CLASSIFICATION	7.349489484609856E-6	DEFECT
line 1210	WITHOUT_CLASSIFICATION	0.9999943943692053	WITHOUT_CLASSIFICATION	5.605630794657904E-6	DEFECT
line 1229	WITHOUT_CLASSIFICATION	0.9999940631795322	WITHOUT_CLASSIFICATION	5.936820467806942E-6	DEFECT
line 1261	WITHOUT_CLASSIFICATION	0.9999912826160023	WITHOUT_CLASSIFICATION	8.717383997715097E-6	DEFECT
line 1287	WITHOUT_CLASSIFICATION	0.9999934625230928	WITHOUT_CLASSIFICATION	6.537476907210558E-6	DEFECT
line 1293	WITHOUT_CLASSIFICATION	0.999989919719589	WITHOUT_CLASSIFICATION	1.0080280411090525E-5	DEFECT
line 1307	WITHOUT_CLASSIFICATION	0.9999947508230865	WITHOUT_CLASSIFICATION	5.249176913376202E-6	DEFECT
line 1320	WITHOUT_CLASSIFICATION	0.9999894370362632	WITHOUT_CLASSIFICATION	1.0562963736867406E-5	DEFECT
line 1325	WITHOUT_CLASSIFICATION	0.9999862495234065	WITHOUT_CLASSIFICATION	1.3750476593440169E-5	DEFECT
line 1363	WITHOUT_CLASSIFICATION	0.9999936564968451	WITHOUT_CLASSIFICATION	6.343503154945985E-6	DEFECT
line 1398	WITHOUT_CLASSIFICATION	0.9999946478174189	WITHOUT_CLASSIFICATION	5.352182581215302E-6	DEFECT
line 1448	WITHOUT_CLASSIFICATION	0.999993656674057	WITHOUT_CLASSIFICATION	6.343325943018966E-6	DEFECT
line 1456	WITHOUT_CLASSIFICATION	0.9999890051302308	WITHOUT_CLASSIFICATION	1.0994869769175363E-5	DEFECT
line 1473	WITHOUT_CLASSIFICATION	0.9999914457825769	WITHOUT_CLASSIFICATION	8.554217423090275E-6	DEFECT
line 1492	WITHOUT_CLASSIFICATION	0.9999905834690284	WITHOUT_CLASSIFICATION	9.416530971569353E-6	DEFECT
line 1513	WITHOUT_CLASSIFICATION	0.9999916892761305	WITHOUT_CLASSIFICATION	8.310723869644717E-6	DEFECT
line 1523	WITHOUT_CLASSIFICATION	0.9999883197929413	WITHOUT_CLASSIFICATION	1.1680207058580132E-5	DEFECT
line 1562	WITHOUT_CLASSIFICATION	0.9999886425031058	WITHOUT_CLASSIFICATION	1.1357496894296869E-5	DEFECT
line 1582	WITHOUT_CLASSIFICATION	0.9999906226094647	WITHOUT_CLASSIFICATION	9.37739053543712E-6	DEFECT
line 1603	WITHOUT_CLASSIFICATION	0.9999910298832743	WITHOUT_CLASSIFICATION	8.970116725846982E-6	DEFECT
line 1603	WITHOUT_CLASSIFICATION	0.9999910298832743	WITHOUT_CLASSIFICATION	8.970116725846982E-6	DEFECT
line 1615	WITHOUT_CLASSIFICATION	0.999991772838108	WITHOUT_CLASSIFICATION	8.22716189188312E-6	DEFECT
line 1620	WITHOUT_CLASSIFICATION	0.9999897851474443	WITHOUT_CLASSIFICATION	1.0214852555804597E-5	DEFECT
line 1635	WITHOUT_CLASSIFICATION	0.999989354345356	WITHOUT_CLASSIFICATION	1.0645654644139386E-5	DEFECT
line 1652	WITHOUT_CLASSIFICATION	0.9999890338439559	WITHOUT_CLASSIFICATION	1.096615604413469E-5	DEFECT
line 1681	WITHOUT_CLASSIFICATION	0.999995578338948	WITHOUT_CLASSIFICATION	4.4216610518886E-6	DEFECT
line 1708	WITHOUT_CLASSIFICATION	0.9999839550048092	WITHOUT_CLASSIFICATION	1.604499519077231E-5	DEFECT
line 1716	WITHOUT_CLASSIFICATION	0.999990502403542	WITHOUT_CLASSIFICATION	9.49759645800077E-6	DEFECT
line 1755	WITHOUT_CLASSIFICATION	0.999979982999441	WITHOUT_CLASSIFICATION	2.001700055895191E-5	DEFECT
line 1772	WITHOUT_CLASSIFICATION	0.9999832837834302	WITHOUT_CLASSIFICATION	1.6716216569807735E-5	DEFECT
line 1789	WITHOUT_CLASSIFICATION	0.999991697080357	WITHOUT_CLASSIFICATION	8.30291964299322E-6	DEFECT
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999748928301516	WITHOUT_CLASSIFICATION	2.510716984834081E-5	DEFECT
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999748928301516	WITHOUT_CLASSIFICATION	2.510716984834081E-5	DEFECT
force for args	WITHOUT_CLASSIFICATION	0.9999988498685409	WITHOUT_CLASSIFICATION	1.1501314590720362E-6	DEFECT
last expression should not be void	WITHOUT_CLASSIFICATION	0.9999509404453603	WITHOUT_CLASSIFICATION	4.905955463972865E-5	DEFECT
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9999037489210788	WITHOUT_CLASSIFICATION	9.625107892114094E-5	DEFECT
We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.99999999997147	WITHOUT_CLASSIFICATION	2.8529925462755692E-11	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999983923565	WITHOUT_CLASSIFICATION	1.607643501106185E-8	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999983923565	WITHOUT_CLASSIFICATION	1.607643501106185E-8	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999983923565	WITHOUT_CLASSIFICATION	1.607643501106185E-8	DEFECT
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999983923565	WITHOUT_CLASSIFICATION	1.607643501106185E-8	DEFECT
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.8735604686752392	WITHOUT_CLASSIFICATION	0.12643953132476085	DEFECT
This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.	WITHOUT_CLASSIFICATION	0.9487393823299902	WITHOUT_CLASSIFICATION	0.05126061767000975	DEFECT
line 313	WITHOUT_CLASSIFICATION	0.9999944424667642	WITHOUT_CLASSIFICATION	5.5575332357966E-6	DEFECT
line 339	WITHOUT_CLASSIFICATION	0.9999925763953421	WITHOUT_CLASSIFICATION	7.4236046578717085E-6	DEFECT
line 361	WITHOUT_CLASSIFICATION	0.9999926791336322	WITHOUT_CLASSIFICATION	7.320866367863412E-6	DEFECT
line 413	WITHOUT_CLASSIFICATION	0.9999922475557587	WITHOUT_CLASSIFICATION	7.752444241351151E-6	DEFECT
line 451	WITHOUT_CLASSIFICATION	0.9999916596555088	WITHOUT_CLASSIFICATION	8.340344491243948E-6	DEFECT
line 472	WITHOUT_CLASSIFICATION	0.9999869363733574	WITHOUT_CLASSIFICATION	1.3063626642658467E-5	DEFECT
line 500	WITHOUT_CLASSIFICATION	0.9999696915193407	WITHOUT_CLASSIFICATION	3.030848065939797E-5	DEFECT
line 515	WITHOUT_CLASSIFICATION	0.9999916003148587	WITHOUT_CLASSIFICATION	8.39968514126994E-6	DEFECT
line 555	WITHOUT_CLASSIFICATION	0.9999894666084553	WITHOUT_CLASSIFICATION	1.0533391544694191E-5	DEFECT
line 582	WITHOUT_CLASSIFICATION	0.9999841552564274	WITHOUT_CLASSIFICATION	1.5844743572646455E-5	DEFECT
line 619	WITHOUT_CLASSIFICATION	0.999990528567952	WITHOUT_CLASSIFICATION	9.471432047924236E-6	DEFECT
line 636	WITHOUT_CLASSIFICATION	0.999988135891649	WITHOUT_CLASSIFICATION	1.1864108350929859E-5	DEFECT
line 669	WITHOUT_CLASSIFICATION	0.9999892569573704	WITHOUT_CLASSIFICATION	1.074304262967518E-5	DEFECT
line 703	WITHOUT_CLASSIFICATION	0.9999872053307628	WITHOUT_CLASSIFICATION	1.2794669237329328E-5	DEFECT
line 776	WITHOUT_CLASSIFICATION	0.9999929364013201	WITHOUT_CLASSIFICATION	7.063598679942433E-6	DEFECT
line 814	WITHOUT_CLASSIFICATION	0.9999940638307833	WITHOUT_CLASSIFICATION	5.936169216790596E-6	DEFECT
line 823	WITHOUT_CLASSIFICATION	0.9999902263756965	WITHOUT_CLASSIFICATION	9.773624303526863E-6	DEFECT
line 854	WITHOUT_CLASSIFICATION	0.9999898633648285	WITHOUT_CLASSIFICATION	1.0136635171391755E-5	DEFECT
line 872	WITHOUT_CLASSIFICATION	0.9999892632787579	WITHOUT_CLASSIFICATION	1.073672124207888E-5	DEFECT
line 905	WITHOUT_CLASSIFICATION	0.9999878529341989	WITHOUT_CLASSIFICATION	1.2147065801085423E-5	DEFECT
line 925	WITHOUT_CLASSIFICATION	0.9999824667816204	WITHOUT_CLASSIFICATION	1.753321837966773E-5	DEFECT
line 958	WITHOUT_CLASSIFICATION	0.9999889556463145	WITHOUT_CLASSIFICATION	1.1044353685546606E-5	DEFECT
line 992	WITHOUT_CLASSIFICATION	0.9999902416754993	WITHOUT_CLASSIFICATION	9.758324500767737E-6	DEFECT
line 1047	WITHOUT_CLASSIFICATION	0.9999954979365979	WITHOUT_CLASSIFICATION	4.50206340212116E-6	DEFECT
line 1072	WITHOUT_CLASSIFICATION	0.9999939272236607	WITHOUT_CLASSIFICATION	6.072776339340496E-6	DEFECT
line 1081	WITHOUT_CLASSIFICATION	0.9999967022102066	WITHOUT_CLASSIFICATION	3.297789793396424E-6	DEFECT
line 1108	WITHOUT_CLASSIFICATION	0.999997461664451	WITHOUT_CLASSIFICATION	2.5383355489893414E-6	DEFECT
line 1136	WITHOUT_CLASSIFICATION	0.9999950881177156	WITHOUT_CLASSIFICATION	4.911882284337286E-6	DEFECT
line 1168	WITHOUT_CLASSIFICATION	0.9999965546500126	WITHOUT_CLASSIFICATION	3.4453499873690214E-6	DEFECT
line 1192	WITHOUT_CLASSIFICATION	0.9999950830165636	WITHOUT_CLASSIFICATION	4.916983436423835E-6	DEFECT
line 1241	WITHOUT_CLASSIFICATION	0.9999929255999992	WITHOUT_CLASSIFICATION	7.074400000831866E-6	DEFECT
line 1267	WITHOUT_CLASSIFICATION	0.9999914472104079	WITHOUT_CLASSIFICATION	8.552789592069967E-6	DEFECT
line 1286	WITHOUT_CLASSIFICATION	0.9999929096256835	WITHOUT_CLASSIFICATION	7.0903743164697834E-6	DEFECT
line 1301	WITHOUT_CLASSIFICATION	0.9999949466651537	WITHOUT_CLASSIFICATION	5.05333484643396E-6	DEFECT
line 1314	WITHOUT_CLASSIFICATION	0.9999922719732891	WITHOUT_CLASSIFICATION	7.728026710823902E-6	DEFECT
line 1333	WITHOUT_CLASSIFICATION	0.9999951068295436	WITHOUT_CLASSIFICATION	4.893170456342977E-6	DEFECT
line 1362	WITHOUT_CLASSIFICATION	0.9999902517030914	WITHOUT_CLASSIFICATION	9.748296908651652E-6	DEFECT
line 1395	WITHOUT_CLASSIFICATION	0.9999905932581337	WITHOUT_CLASSIFICATION	9.406741866426508E-6	DEFECT
line 1420	WITHOUT_CLASSIFICATION	0.9999874851366563	WITHOUT_CLASSIFICATION	1.2514863343742516E-5	DEFECT
line 1439	WITHOUT_CLASSIFICATION	0.9999915950675812	WITHOUT_CLASSIFICATION	8.404932418828142E-6	DEFECT
line 1476	WITHOUT_CLASSIFICATION	0.9999923822470101	WITHOUT_CLASSIFICATION	7.617752989898183E-6	DEFECT
line 1535	WITHOUT_CLASSIFICATION	0.9999919954819968	WITHOUT_CLASSIFICATION	8.004518003126397E-6	DEFECT
line 1588	WITHOUT_CLASSIFICATION	0.9999937494683769	WITHOUT_CLASSIFICATION	6.250531623045991E-6	DEFECT
line 1618	WITHOUT_CLASSIFICATION	0.9999956831335309	WITHOUT_CLASSIFICATION	4.316866468955738E-6	DEFECT
line 1643	WITHOUT_CLASSIFICATION	0.9999933005003506	WITHOUT_CLASSIFICATION	6.699499649468887E-6	DEFECT
line 1669	WITHOUT_CLASSIFICATION	0.9999942794670984	WITHOUT_CLASSIFICATION	5.72053290152722E-6	DEFECT
line 1728	WITHOUT_CLASSIFICATION	0.9999839815164844	WITHOUT_CLASSIFICATION	1.6018483515702792E-5	DEFECT
line 1753	WITHOUT_CLASSIFICATION	0.999975262397824	WITHOUT_CLASSIFICATION	2.473760217603292E-5	DEFECT
line 1779	WITHOUT_CLASSIFICATION	0.9999897591479369	WITHOUT_CLASSIFICATION	1.0240852063089568E-5	DEFECT
line 1794	WITHOUT_CLASSIFICATION	0.9999882232944787	WITHOUT_CLASSIFICATION	1.1776705521374355E-5	DEFECT
line 1812	WITHOUT_CLASSIFICATION	0.9999952928728819	WITHOUT_CLASSIFICATION	4.707127118067999E-6	DEFECT
line 1837	WITHOUT_CLASSIFICATION	0.9999953804182519	WITHOUT_CLASSIFICATION	4.6195817482355896E-6	DEFECT
line 1895	WITHOUT_CLASSIFICATION	0.999994571311214	WITHOUT_CLASSIFICATION	5.4286887860329555E-6	DEFECT
line 1925	WITHOUT_CLASSIFICATION	0.9999880414648872	WITHOUT_CLASSIFICATION	1.1958535112918106E-5	DEFECT
line 1950	WITHOUT_CLASSIFICATION	0.9999905444399335	WITHOUT_CLASSIFICATION	9.455560066539485E-6	DEFECT
line 1992	WITHOUT_CLASSIFICATION	0.9999933449775714	WITHOUT_CLASSIFICATION	6.6550224286303935E-6	DEFECT
line 2014	WITHOUT_CLASSIFICATION	0.9999848017246319	WITHOUT_CLASSIFICATION	1.5198275368076483E-5	DEFECT
Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999998799193904	WITHOUT_CLASSIFICATION	1.2008060953641137E-7	DEFECT
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.999999887817805	WITHOUT_CLASSIFICATION	1.1218219494931795E-7	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999998668525063	WITHOUT_CLASSIFICATION	1.3314749370122897E-6	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999998668525063	WITHOUT_CLASSIFICATION	1.3314749370122897E-6	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999998668525063	WITHOUT_CLASSIFICATION	1.3314749370122897E-6	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999998668525063	WITHOUT_CLASSIFICATION	1.3314749370122897E-6	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999998668525063	WITHOUT_CLASSIFICATION	1.3314749370122897E-6	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999998668525063	WITHOUT_CLASSIFICATION	1.3314749370122897E-6	DEFECT
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999998668525063	WITHOUT_CLASSIFICATION	1.3314749370122897E-6	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9990872674069441	WITHOUT_CLASSIFICATION	9.12732593055965E-4	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9990872674069441	WITHOUT_CLASSIFICATION	9.12732593055965E-4	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9990872674069441	WITHOUT_CLASSIFICATION	9.12732593055965E-4	DEFECT
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9990872674069441	WITHOUT_CLASSIFICATION	9.12732593055965E-4	DEFECT
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999236812539508	WITHOUT_CLASSIFICATION	7.631874604928445E-5	DEFECT
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999236812539508	WITHOUT_CLASSIFICATION	7.631874604928445E-5	DEFECT
We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999994958223863	WITHOUT_CLASSIFICATION	5.041776136362125E-7	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999988946056876	WITHOUT_CLASSIFICATION	1.1053943123921876E-6	DEFECT
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999988946056876	WITHOUT_CLASSIFICATION	1.1053943123921876E-6	DEFECT
tc under method self under method name args	WITHOUT_CLASSIFICATION	0.9999991807365007	WITHOUT_CLASSIFICATION	8.192634992592592E-7	DEFECT
allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999979513843174	WITHOUT_CLASSIFICATION	2.048615682671702E-6	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999980350825964	WITHOUT_CLASSIFICATION	1.964917403553563E-6	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999980350825964	WITHOUT_CLASSIFICATION	1.964917403553563E-6	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999980350825964	WITHOUT_CLASSIFICATION	1.964917403553563E-6	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999980350825964	WITHOUT_CLASSIFICATION	1.964917403553563E-6	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999980350825964	WITHOUT_CLASSIFICATION	1.964917403553563E-6	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999980350825964	WITHOUT_CLASSIFICATION	1.964917403553563E-6	DEFECT
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999980350825964	WITHOUT_CLASSIFICATION	1.964917403553563E-6	DEFECT
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995701640311	WITHOUT_CLASSIFICATION	4.2983596896050077E-7	DEFECT
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997384332319	WITHOUT_CLASSIFICATION	2.6156676819111896E-7	DEFECT
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999863627940557	WITHOUT_CLASSIFICATION	1.3637205944338641E-5	DEFECT
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999863627940557	WITHOUT_CLASSIFICATION	1.3637205944338641E-5	DEFECT
Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999996661092088	WITHOUT_CLASSIFICATION	3.338907911542902E-7	DEFECT
end suffix iteration	WITHOUT_CLASSIFICATION	0.9999965536284836	WITHOUT_CLASSIFICATION	3.4463715163544847E-6	DEFECT
end suffix iteration	WITHOUT_CLASSIFICATION	0.9999965536284836	WITHOUT_CLASSIFICATION	3.4463715163544847E-6	DEFECT
Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e	WITHOUT_CLASSIFICATION	0.9999999933128416	WITHOUT_CLASSIFICATION	6.6871583207181055E-9	DEFECT
Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local	WITHOUT_CLASSIFICATION	0.9996736729940341	WITHOUT_CLASSIFICATION	3.2632700596580636E-4	DEFECT
This method handles '' patterns and delegates to fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.999997618591794	WITHOUT_CLASSIFICATION	2.381408206062498E-6	DEFECT
Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9948536123437858	WITHOUT_CLASSIFICATION	0.005146387656214218	DEFECT
double precision, native double precision, native	WITHOUT_CLASSIFICATION	0.9999997373846145	WITHOUT_CLASSIFICATION	2.626153854640799E-7	DEFECT
64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999986611115783	WITHOUT_CLASSIFICATION	1.3388884217301208E-6	DEFECT
Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999980474364771	WITHOUT_CLASSIFICATION	1.9525635228894348E-6	DEFECT
calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999994263509324	WITHOUT_CLASSIFICATION	5.736490676514379E-7	DEFECT
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999873957471	WITHOUT_CLASSIFICATION	1.2604252882754074E-8	DEFECT
MRI behavior: for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9998653954968807	WITHOUT_CLASSIFICATION	1.3460450311937494E-4	DEFECT
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9998421947490181	WITHOUT_CLASSIFICATION	1.5780525098191243E-4	DEFECT
exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999605901823567	WITHOUT_CLASSIFICATION	3.940981764329365E-5	DEFECT
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999996462347854	WITHOUT_CLASSIFICATION	3.537652146650819E-7	DEFECT
The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999946850993561	WITHOUT_CLASSIFICATION	5.314900643998518E-6	DEFECT
first digit is always printed	WITHOUT_CLASSIFICATION	0.9999975194853888	WITHOUT_CLASSIFICATION	2.4805146112431886E-6	DEFECT
an empirically derived rule: precision applies to significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.999993477394822	WITHOUT_CLASSIFICATION	6.522605177934657E-6	DEFECT
an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999992515653132	WITHOUT_CLASSIFICATION	7.484346868263992E-7	DEFECT
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9996889317309633	WITHOUT_CLASSIFICATION	3.110682690367832E-4	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999725599589915	WITHOUT_CLASSIFICATION	2.744004100847899E-5	DEFECT
now some data...	WITHOUT_CLASSIFICATION	0.9999725599589915	WITHOUT_CLASSIFICATION	2.744004100847899E-5	DEFECT
MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999882404839593	WITHOUT_CLASSIFICATION	1.1759516040745814E-5	DEFECT
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999244786547	WITHOUT_CLASSIFICATION	7.55213452538549E-8	DEFECT
calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999972538093234	WITHOUT_CLASSIFICATION	2.7461906767293874E-6	DEFECT
switch	WITHOUT_CLASSIFICATION	0.9999908603635294	WITHOUT_CLASSIFICATION	9.139636470620201E-6	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999867772077471	WITHOUT_CLASSIFICATION	1.3222792252946958E-5	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999867772077471	WITHOUT_CLASSIFICATION	1.3222792252946958E-5	DEFECT
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999867772077471	WITHOUT_CLASSIFICATION	1.3222792252946958E-5	DEFECT
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999995821300345	WITHOUT_CLASSIFICATION	4.1786996555976347E-7	DEFECT
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9991982973459289	WITHOUT_CLASSIFICATION	8.017026540710744E-4	DEFECT
call chmod after we created the RandomAccesFile because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999999481938475	WITHOUT_CLASSIFICATION	5.180615240740039E-8	DEFECT
attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999940680760093	WITHOUT_CLASSIFICATION	5.931923990633819E-6	DEFECT
When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M	WITHOUT_CLASSIFICATION	0.9999997221566079	WITHOUT_CLASSIFICATION	2.778433920580618E-7	DEFECT
If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file	WITHOUT_CLASSIFICATION	0.9999999775208279	WITHOUT_CLASSIFICATION	2.2479172057206247E-8	DEFECT
Cannot discern the total read length - allocate at least enough for the buffered data	WITHOUT_CLASSIFICATION	0.9996170469232522	WITHOUT_CLASSIFICATION	3.82953076747857E-4	DEFECT
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9999857325227477	WITHOUT_CLASSIFICATION	1.4267477252309589E-5	DEFECT
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999993834366252	WITHOUT_CLASSIFICATION	6.16563374776716E-7	DEFECT
already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.999998453868414	WITHOUT_CLASSIFICATION	1.5461315859434734E-6	DEFECT
reset buffer	WITHOUT_CLASSIFICATION	0.9999982059874746	WITHOUT_CLASSIFICATION	1.7940125253027543E-6	DEFECT
Synchronize and re-check to avoid creating more than one Selector per provider	WITHOUT_CLASSIFICATION	0.9999997507587887	WITHOUT_CLASSIFICATION	2.492412114089044E-7	DEFECT
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.6595205814557461	WITHOUT_CLASSIFICATION	0.3404794185442539	DEFECT
Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999096094815009	WITHOUT_CLASSIFICATION	9.039051849916624E-5	DEFECT
Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999987745114	WITHOUT_CLASSIFICATION	1.2254885493218079E-9	DEFECT
value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.999999906622486	WITHOUT_CLASSIFICATION	9.33775140499204E-8	DEFECT
Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999757659301278	WITHOUT_CLASSIFICATION	2.4234069872152262E-5	DEFECT
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999267580169023	WITHOUT_CLASSIFICATION	7.324198309773122E-5	DEFECT
change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999888854019956	WITHOUT_CLASSIFICATION	1.1114598004498898E-5	DEFECT
FIXME: This is a system error based on errno	DEFECT	0.6346896958057238	WITHOUT_CLASSIFICATION	0.3653103041942761	DEFECT
TODO: In MRI 1.9, an explicit check for negative length is added here. IndexError is raised when length is negative. See [ruby-core:12953] for more details. New note: This is actually under re-evaluation, see [ruby-core:17483].	DEFECT	0.9296540804693761	DEFECT	0.07034591953062383	WITHOUT_CLASSIFICATION
TODO: make sure it's really safe to not to copy it	DEFECT	0.9991562435433741	WITHOUT_CLASSIFICATION	8.437564566259897E-4	DEFECT
TODO: Numeric.new works in Ruby and it does here too. However trying to use that instance in a numeric operation should generate an ArgumentError. Doing this seems so pathological I do not see the need to fix this now.	DEFECT	0.6019153723353118	DEFECT	0.39808462766468805	WITHOUT_CLASSIFICATION
FIXME: We can't guarantee this will always be a RubyIO...so the old code here is not safe	DEFECT	0.9977101880628042	DEFECT	0.002289811937195749	WITHOUT_CLASSIFICATION
dump the trace and continue this is currently only here for Android, which seems to have bugs in its enumeration logic http:code.google.com/p/android/issues/detail?id=2812	DEFECT	0.724257158909361	WITHOUT_CLASSIFICATION	0.2757428410906389	DEFECT
FIXME: Add at_exit and finalizers to exit, then make exit_bang not call those.	DEFECT	0.697610025639992	WITHOUT_CLASSIFICATION	0.3023899743600081	DEFECT
TODO: need to isolate the "current" thread from class creation	DEFECT	0.9874017385183388	WITHOUT_CLASSIFICATION	0.01259826148166113	DEFECT
FIXME: not correct exception	DEFECT	0.9906541820420528	DEFECT	0.00934581795794721	WITHOUT_CLASSIFICATION
XXX actually only on windows...	DEFECT	0.9962087975007834	WITHOUT_CLASSIFICATION	0.0037912024992166585	DEFECT
Enebo : Should ~frogger\\foo work (it doesnt in linux ruby)?	DEFECT	0.9991497278421003	WITHOUT_CLASSIFICATION	8.502721578996851E-4	DEFECT
FIXME can't use static; would interfere with other runtimes in the same JVM	DEFECT	0.9728569077325508	WITHOUT_CLASSIFICATION	0.027143092267449168	DEFECT
TODO: anything threads attached to original fd are notified of the close... see rb_thread_fd_close	DEFECT	0.9994175418786223	WITHOUT_CLASSIFICATION	5.824581213777662E-4	DEFECT
TODO: This is an freopen in MRI, this is close, but not quite the same	DEFECT	0.7012486340051354	DEFECT	0.29875136599486474	WITHOUT_CLASSIFICATION
TODO: sys fail	DEFECT	0.7334862077815169	WITHOUT_CLASSIFICATION	0.2665137922184831	DEFECT
TODO: Ruby locks the string here	DEFECT	0.9522243919187504	WITHOUT_CLASSIFICATION	0.04777560808124952	DEFECT
TODO: Ruby locks the string here	DEFECT	0.9522243919187504	WITHOUT_CLASSIFICATION	0.04777560808124952	DEFECT
FIXME: check how ruby 1.9 handles this	DEFECT	0.9980163889752259	WITHOUT_CLASSIFICATION	0.001983611024774056	DEFECT
FIXME: MRI has special case for constants here	DEFECT	0.9849205462797115	WITHOUT_CLASSIFICATION	0.015079453720288565	DEFECT
FIXME: Throw the right ArgumentError's if the class is missing or if it's a module.	DEFECT	0.5135881255516941	WITHOUT_CLASSIFICATION	0.4864118744483059	DEFECT
ENEBO: Very wrong	DEFECT	0.9972749089217001	WITHOUT_CLASSIFICATION	0.002725091078299909	DEFECT
ENEBO: Very wrong	DEFECT	0.9972749089217001	WITHOUT_CLASSIFICATION	0.002725091078299909	DEFECT
synchronized method per JRUBY-1173 (unsafe Double-Checked Locking) FIXME: synchronization is still wrong in CP code	DEFECT	0.9397762238231102	DEFECT	0.06022377617688975	WITHOUT_CLASSIFICATION
FIXME: I'm not sure this is right, but the old code returned the undef, which definitely isn't right...	DEFECT	0.6078329919913747	DEFECT	0.3921670080086253	WITHOUT_CLASSIFICATION
FIXME: Errno descriptions from Constantine on Windows are not useful at the moment.	DEFECT	0.9559313417251486	WITHOUT_CLASSIFICATION	0.04406865827485126	DEFECT
TODO: full-precision remainder is 1000x slower than MRI!	DEFECT	0.9792743359338528	WITHOUT_CLASSIFICATION	0.020725664066147117	DEFECT
TODO: take BigDecimal.mode into account.	DEFECT	0.7778413144017479	WITHOUT_CLASSIFICATION	0.22215868559825205	DEFECT
TODO: full-precision divmod is 1000x slower than MRI!	DEFECT	0.7937772250393055	WITHOUT_CLASSIFICATION	0.20622277496069458	DEFECT
TODO: proper sign	DEFECT	0.9977086502470334	WITHOUT_CLASSIFICATION	0.0022913497529665227	DEFECT
FIXME: No argument seems to work for -K in MRI plus this should not siphon off additional args 'jruby -K ~/scripts/foo'. Also better error processing.	DEFECT	0.9973196303900888	DEFECT	0.002680369609911222	WITHOUT_CLASSIFICATION
FIXME: -x flag not supported case 'x' : break;	DEFECT	0.8094316364265182	DEFECT	0.1905683635734818	WITHOUT_CLASSIFICATION
FIXME: We are assuming that original string will be raw bytes. If -Ku is provided this will not be true, but that is ok for now. Deal with that when someone needs it.	DEFECT	0.9589574191447093	DEFECT	0.04104258085529064	WITHOUT_CLASSIFICATION
FIXME: This is causing a verification error for some reason nilClass.dispatcher = callbackFactory.createDispatcher(nilClass);	DEFECT	0.9227999760259471	DEFECT	0.07720002397405289	WITHOUT_CLASSIFICATION
FIXME: for some reason this dispatcher causes a VerifyError... classClass.dispatcher = callbackFactory.createDispatcher(classClass);	DEFECT	0.9913250120883235	DEFECT	0.008674987911676636	WITHOUT_CLASSIFICATION
TODO: Rewriter and compiler assume case when empty expression. In MRI this is just a when. assert caseNode != null : "caseNode is not null";	DEFECT	0.971687697725412	WITHOUT_CLASSIFICATION	0.028312302274587958	DEFECT
TODO: This code effectively disables all inspection-based optimizations; none of them are 100% safe yet	DEFECT	0.992530538346074	WITHOUT_CLASSIFICATION	0.007469461653925926	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
FIXME: this should reset to what it was before	DEFECT	0.7439443850229955	DEFECT	0.2560556149770044	WITHOUT_CLASSIFICATION
FIXME: if we terminate immediately, this appears to break while in method arguments we need to push a nil for the cases where we will never enter the body	DEFECT	0.9615304911866069	WITHOUT_CLASSIFICATION	0.03846950881339296	DEFECT
SSS FIXME: Incorect!	DEFECT	0.7656811916743549	DEFECT	0.23431880832564508	WITHOUT_CLASSIFICATION
SSS FIXME: There are also differences in variable scoping between 1.8 and 1.9 Ruby 1.8 is the buggy semantics if I understand correctly. The semantics of how this shadows other variables outside the block needs to be figured out during live var analysis.	DEFECT	0.9973062078627328	DEFECT	0.002693792137267252	WITHOUT_CLASSIFICATION
SSS FIXME: This doesn't preserve original order of when clauses. We could consider preserving the order (or maybe not, since we would have to sort the constants first in any case) for outputing jump tables in certain situations. add body to map for emitting later	DEFECT	0.8703703052367602	WITHOUT_CLASSIFICATION	0.12962969476323982	DEFECT
IMPORTANT: Receive the block argument before the opt and splat args This is so that the arg can be encoded as 'rest of the array'. This won't work if the block argument hasn't been received yet!	DEFECT	0.9999978281943084	WITHOUT_CLASSIFICATION	2.1718056916873093E-6	DEFECT
Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization?	DEFECT	0.5003484663976022	WITHOUT_CLASSIFICATION	0.4996515336023978	DEFECT
Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization?	DEFECT	0.5003484663976022	WITHOUT_CLASSIFICATION	0.4996515336023978	DEFECT
Walk up the scope tree right now as much as possible, to avoid run-time walking SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?	DEFECT	0.6686006484021692	DEFECT	0.33139935159783096	WITHOUT_CLASSIFICATION
SSS FIXME: Verify semantics of this instruction	DEFECT	0.9974076338340737	WITHOUT_CLASSIFICATION	0.0025923661659262697	DEFECT
The following constants capture pre-known static call sites -- JRuby implementations of methods of ruby classes SSS FIXME: Note that compiler/impl/BaseBodyCompiler is using op_match2 for match() and and op_match for match2 ... Is this a bug there?	DEFECT	0.999941188404141	DEFECT	5.881159585888537E-5	WITHOUT_CLASSIFICATION
SSS FIXME: For constant arrays, we should never get here!	DEFECT	0.904460702528196	WITHOUT_CLASSIFICATION	0.09553929747180401	DEFECT
FIXME: This is wrong	DEFECT	0.9811443983550971	DEFECT	0.0188556016449029	WITHOUT_CLASSIFICATION
FIXME: may need to broaden for IPV6 IP address strings	DEFECT	0.865875809801372	DEFECT	0.13412419019862792	WITHOUT_CLASSIFICATION
XXX Wrong, but will have to do for now	DEFECT	0.9999245701008884	WITHOUT_CLASSIFICATION	7.542989911161993E-5	DEFECT
FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error	DEFECT	0.8793552259476606	DEFECT	0.1206447740523395	WITHOUT_CLASSIFICATION
FIXME: vulture daemon thread prevents finalization, find alternative approach. vulture.start();	DEFECT	0.9861961965471241	WITHOUT_CLASSIFICATION	0.013803803452875827	DEFECT
If we outgrow our pushback stack then grow it (this should only happen in pretty pathological cases).	DEFECT	0.9999673537867728	WITHOUT_CLASSIFICATION	3.2646213227165524E-5	DEFECT
FIXME: Broken but behaving	DEFECT	0.9998155985569255	DEFECT	1.844014430743844E-4	WITHOUT_CLASSIFICATION
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.9775653849673605	WITHOUT_CLASSIFICATION	0.022434615032639566	DEFECT
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.9775653849673605	WITHOUT_CLASSIFICATION	0.022434615032639566	DEFECT
FIXME: this seems like a good assertion, but it breaks compiled code and the code seems to run without it... assert currentModule != null : "Can't push null RubyClass";	DEFECT	0.9999576149417001	DEFECT	4.238505829997997E-5	WITHOUT_CLASSIFICATION
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.6223693254571869	WITHOUT_CLASSIFICATION	0.3776306745428131	DEFECT
FIXME: I got a bunch of NPEs when I didn't check for nulls here...HOW?!	DEFECT	0.9800769780293962	DEFECT	0.0199230219706038	WITHOUT_CLASSIFICATION
MRI 1.8 behavior: this combination of flags is not allowed	DEFECT	0.9988579719940895	WITHOUT_CLASSIFICATION	0.0011420280059105028	DEFECT
FIXME: Arg may also be true, false, and nil and still be valid. Strangely enough, protocol conversion is not happening in Ruby on this arg?	DEFECT	0.9812551841142425	DEFECT	0.018744815885757417	WITHOUT_CLASSIFICATION
TODO: Rubicon TestKernel dies without this line. A cursory glance implies we falsely set $! to nil and this sets it back to something valid. This should get fixed at the same time we address bug #1296484.	DEFECT	0.9765929328921287	DEFECT	0.023407067107871302	WITHOUT_CLASSIFICATION
This is the result of a bug that left off all trailing arguments. E.g.: system "ls", "-1", "dir" would be seen as system "ls"	DEFECT	0.9970830796570551	WITHOUT_CLASSIFICATION	0.0029169203429447663	DEFECT
We are in eval with binding break out early FIXME: This is broken with the new backtrace stuff	DEFECT	0.999212370723537	DEFECT	7.876292764630573E-4	WITHOUT_CLASSIFICATION
Walk up the scope tree right now as much as possible, to avoid run-time walking SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?	DEFECT	0.6686006484021692	DEFECT	0.33139935159783096	WITHOUT_CLASSIFICATION
This was a getOpt with one mandatory arg, but it did not work so I am parsing it for now.	DEFECT	0.9999707867670065	WITHOUT_CLASSIFICATION	2.9213232993542025E-5	DEFECT
FIXME: I doubt any of the constants referenced in this method are ever redefined -- should compare to the known values, rather than do an expensive constant lookup.	DEFECT	0.9917488181711414	DEFECT	0.00825118182885864	WITHOUT_CLASSIFICATION
SSS FIXME: Why is the for node being built using closures and not as a "regular" loop with branches? This has implications on inlining, implementations of closures, next, break, etc. When "each" and the block it consumes are inlined together in the caller, the "loop" from the each should become a normal loop without any closures. But, in this implementation of for, we replace one closure with another!	DEFECT	0.9978621717254422	WITHOUT_CLASSIFICATION	0.0021378282745578765	DEFECT
TODO: full-precision remainder is 1000x slower than MRI!	DEFECT	0.9792743359338528	WITHOUT_CLASSIFICATION	0.020725664066147117	DEFECT
TODO: Adding implicit nils caused multiple problems in compiler -- revist after landing assert bodyNode != null : "bodyNode is not null";	DEFECT	0.992929333281607	WITHOUT_CLASSIFICATION	0.007070666718392964	DEFECT
FIXME: It may be possible to killpg on systems which support it. POSIX library needs to tell whether a particular method works or not	DEFECT	0.9321173227142614	DEFECT	0.0678826772857386	WITHOUT_CLASSIFICATION
FIXME: if we terminate immediately, this appears to break while in method arguments we need to push a nil for the cases where we will never enter the body	DEFECT	0.9615304911866069	WITHOUT_CLASSIFICATION	0.03846950881339296	DEFECT
zero args with block FIXME: omit args index; subtract one from normal block index	DEFECT	0.9984248704888367	WITHOUT_CLASSIFICATION	0.0015751295111634384	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
FIXME: Broken but behaving	DEFECT	0.9998155985569255	DEFECT	1.844014430743844E-4	WITHOUT_CLASSIFICATION
TODO: we loose encoding information here, fix it	DEFECT	0.9201270418305999	DEFECT	0.07987295816940011	WITHOUT_CLASSIFICATION
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
TODO: don't require pop	DEFECT	0.7494167317723875	WITHOUT_CLASSIFICATION	0.25058326822761245	DEFECT
FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error	DEFECT	0.8793552259476606	DEFECT	0.1206447740523395	WITHOUT_CLASSIFICATION
vulture thread will periodically expunge dead entries. entries are also expunged during 'put' operations; this is designed to cover the case where many objects are created initially, followed by limited put activity. FIXME: DISABLED (below) pending resolution of finalization issue	DEFECT	0.6073862268452308	DEFECT	0.39261377315476914	WITHOUT_CLASSIFICATION
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.9775653849673605	WITHOUT_CLASSIFICATION	0.022434615032639566	DEFECT
TODO: We should use implicit nil for body, but problem (punt til later)	DEFECT	0.9775653849673605	WITHOUT_CLASSIFICATION	0.022434615032639566	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.6223693254571869	WITHOUT_CLASSIFICATION	0.3776306745428131	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.6223693254571869	WITHOUT_CLASSIFICATION	0.3776306745428131	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.6223693254571869	WITHOUT_CLASSIFICATION	0.3776306745428131	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.6223693254571869	WITHOUT_CLASSIFICATION	0.3776306745428131	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.6223693254571869	WITHOUT_CLASSIFICATION	0.3776306745428131	DEFECT
Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here	DEFECT	0.6223693254571869	WITHOUT_CLASSIFICATION	0.3776306745428131	DEFECT
TODO: We overflow on large files...We could increase to long to limit this, but then the impl gets more involved since java io APIs based on int (means we have to chunk up a long into a series of int ops).	DEFECT	0.9992056446151298	WITHOUT_CLASSIFICATION	7.943553848701113E-4	DEFECT
