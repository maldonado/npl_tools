// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999995747009434	WITHOUT_CLASSIFICATION	4.2529905664781624E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999207926710799	WITHOUT_CLASSIFICATION	7.920732892017913E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999925401107691	WITHOUT_CLASSIFICATION	7.459889230922136E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999105058777762	WITHOUT_CLASSIFICATION	8.949412222391715E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9993959664467159	WITHOUT_CLASSIFICATION	6.040335532840244E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999996389991391	WITHOUT_CLASSIFICATION	3.6100086094604423E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999734545476834	WITHOUT_CLASSIFICATION	2.654545231666624E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999996466704916	WITHOUT_CLASSIFICATION	3.533295085272403E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999961794859639	WITHOUT_CLASSIFICATION	3.820514036132768E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999994672972011	WITHOUT_CLASSIFICATION	5.327027988437383E-7	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999995192748101	WITHOUT_CLASSIFICATION	4.80725189998178E-7	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.999999734605281	WITHOUT_CLASSIFICATION	2.6539471890674124E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999777570661318	WITHOUT_CLASSIFICATION	2.224293386812927E-5	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999997587101238	WITHOUT_CLASSIFICATION	2.412898762427849E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999996204943039	WITHOUT_CLASSIFICATION	3.795056961419636E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999999381778382	WITHOUT_CLASSIFICATION	6.182216180087692E-8	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999965044710728	WITHOUT_CLASSIFICATION	3.4955289270829947E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999734545476834	WITHOUT_CLASSIFICATION	2.654545231666624E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999997367225186	WITHOUT_CLASSIFICATION	2.632774813407338E-7	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999997981996341	WITHOUT_CLASSIFICATION	2.0180036585400998E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999996405516228	WITHOUT_CLASSIFICATION	3.5944837713627955E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999746936356844	WITHOUT_CLASSIFICATION	2.5306364315679124E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999746936356844	WITHOUT_CLASSIFICATION	2.5306364315679124E-5	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999975738053675	WITHOUT_CLASSIFICATION	2.4261946325997037E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999999508168753	WITHOUT_CLASSIFICATION	4.918312471800206E-8	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9999976496083853	WITHOUT_CLASSIFICATION	2.350391614733693E-6	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9999816654231326	WITHOUT_CLASSIFICATION	1.8334576867327064E-5	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999988838287726	WITHOUT_CLASSIFICATION	1.1161712273716744E-6	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999977133576212	WITHOUT_CLASSIFICATION	2.2866423787028608E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999205483453052	WITHOUT_CLASSIFICATION	7.945165469484385E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999906302749407	WITHOUT_CLASSIFICATION	9.369725059345488E-6	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999998759547293	WITHOUT_CLASSIFICATION	1.240452708323701E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9999100200401682	WITHOUT_CLASSIFICATION	8.997995983177409E-5	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999993022382365	WITHOUT_CLASSIFICATION	6.977617635027722E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999985561722353	WITHOUT_CLASSIFICATION	1.4438277646479668E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999163652180802	WITHOUT_CLASSIFICATION	8.363478191966669E-5	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999941452193202	WITHOUT_CLASSIFICATION	5.854780679870017E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999968835970888	WITHOUT_CLASSIFICATION	3.1164029112096877E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999949155913782	WITHOUT_CLASSIFICATION	5.084408621866496E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999996450703635	WITHOUT_CLASSIFICATION	3.5492963655406275E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999999815435975	WITHOUT_CLASSIFICATION	1.8456402515291477E-8	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999905333714443	WITHOUT_CLASSIFICATION	9.466628555802037E-6	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999937458208	WITHOUT_CLASSIFICATION	6.254179149792101E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999976502698	WITHOUT_CLASSIFICATION	2.349730287792907E-9	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.999929943919169	WITHOUT_CLASSIFICATION	7.005608083100988E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.999943850769442	WITHOUT_CLASSIFICATION	5.614923055801482E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999749876724248	WITHOUT_CLASSIFICATION	2.5012327575211084E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998979553018	WITHOUT_CLASSIFICATION	1.0204469823522411E-7	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9995402962940255	WITHOUT_CLASSIFICATION	4.5970370597444134E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9996965171881335	WITHOUT_CLASSIFICATION	3.034828118666254E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999608689404	WITHOUT_CLASSIFICATION	3.9131059510442525E-8	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999749876724248	WITHOUT_CLASSIFICATION	2.5012327575211084E-5	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9999933215478332	WITHOUT_CLASSIFICATION	6.678452166851777E-6	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9998005235718642	WITHOUT_CLASSIFICATION	1.99476428135795E-4	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999723044793833	WITHOUT_CLASSIFICATION	2.7695520616647413E-5	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9998989666265997	WITHOUT_CLASSIFICATION	1.0103337340025315E-4	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9999747439667681	WITHOUT_CLASSIFICATION	2.525603323195107E-5	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9999732310334524	WITHOUT_CLASSIFICATION	2.6768966547597145E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999999933854989	WITHOUT_CLASSIFICATION	6.61450109974598E-8	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995921493732	WITHOUT_CLASSIFICATION	4.0785062686189873E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999980959634269	WITHOUT_CLASSIFICATION	1.9040365729997778E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999476523529	WITHOUT_CLASSIFICATION	5.234764715047918E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999979826819	WITHOUT_CLASSIFICATION	2.0173181089870275E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999999074435963	WITHOUT_CLASSIFICATION	9.255640370119442E-8	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988997282738	WITHOUT_CLASSIFICATION	1.1002717261180713E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990476613889	WITHOUT_CLASSIFICATION	9.52338611185431E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999999932367232	WITHOUT_CLASSIFICATION	6.763276845606578E-9	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999172363175	WITHOUT_CLASSIFICATION	8.276368246736127E-8	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.999855000989864	WITHOUT_CLASSIFICATION	1.4499901013596158E-4	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999953932981903	WITHOUT_CLASSIFICATION	4.6067018096312475E-6	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999811887694855	WITHOUT_CLASSIFICATION	1.8811230514450383E-5	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9999910383539509	WITHOUT_CLASSIFICATION	8.96164604907872E-6	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999934723115321	WITHOUT_CLASSIFICATION	6.5276884677545395E-6	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9998019313426573	WITHOUT_CLASSIFICATION	1.9806865734275567E-4	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9999946085642015	WITHOUT_CLASSIFICATION	5.391435798480417E-6	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9998059932773982	WITHOUT_CLASSIFICATION	1.9400672260192454E-4	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.999999891959176	WITHOUT_CLASSIFICATION	1.0804082402324207E-7	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9998344490628954	WITHOUT_CLASSIFICATION	1.6555093710452295E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9990584551123028	WITHOUT_CLASSIFICATION	9.415448876971057E-4	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.999999734605281	WITHOUT_CLASSIFICATION	2.6539471890674124E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999777570661318	WITHOUT_CLASSIFICATION	2.224293386812927E-5	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999997587101238	WITHOUT_CLASSIFICATION	2.412898762427849E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999959349138265	WITHOUT_CLASSIFICATION	4.065086173494965E-6	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9999978765982384	WITHOUT_CLASSIFICATION	2.123401761679691E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999996204943039	WITHOUT_CLASSIFICATION	3.795056961419636E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999999381778382	WITHOUT_CLASSIFICATION	6.182216180087692E-8	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999965044710728	WITHOUT_CLASSIFICATION	3.4955289270829947E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999778749985619	WITHOUT_CLASSIFICATION	2.2125001438047543E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999778749985619	WITHOUT_CLASSIFICATION	2.2125001438047543E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999778749985619	WITHOUT_CLASSIFICATION	2.2125001438047543E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999996389991391	WITHOUT_CLASSIFICATION	3.6100086094604423E-7	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999995278422343	WITHOUT_CLASSIFICATION	4.7215776568795545E-7	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9999999612065246	WITHOUT_CLASSIFICATION	3.8793475545834905E-8	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.999995705460387	WITHOUT_CLASSIFICATION	4.294539613049405E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999996405516228	WITHOUT_CLASSIFICATION	3.5944837713627955E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999999080920812	WITHOUT_CLASSIFICATION	9.190791885918825E-8	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999205483453052	WITHOUT_CLASSIFICATION	7.945165469484385E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999906302749407	WITHOUT_CLASSIFICATION	9.369725059345488E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9999100200401682	WITHOUT_CLASSIFICATION	8.997995983177409E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999163652180802	WITHOUT_CLASSIFICATION	8.363478191966669E-5	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9999843111070744	WITHOUT_CLASSIFICATION	1.568889292562471E-5	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9999556780428451	WITHOUT_CLASSIFICATION	4.432195715485671E-5	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999994736589045	WITHOUT_CLASSIFICATION	5.263410955303567E-7	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999992726065098	WITHOUT_CLASSIFICATION	7.273934902481802E-7	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999537109074638	WITHOUT_CLASSIFICATION	4.6289092536194334E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999996450703635	WITHOUT_CLASSIFICATION	3.5492963655406275E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999905333714443	WITHOUT_CLASSIFICATION	9.466628555802037E-6	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999996972890435	WITHOUT_CLASSIFICATION	3.027109565564591E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.999709454875563	WITHOUT_CLASSIFICATION	2.9054512443708083E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.999999924031392	WITHOUT_CLASSIFICATION	7.59686079663736E-8	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999945754192457	WITHOUT_CLASSIFICATION	5.424580754166411E-6	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.999998305068563	WITHOUT_CLASSIFICATION	1.6949314370763821E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9999523090721185	WITHOUT_CLASSIFICATION	4.769092788152632E-5	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9999989020865223	WITHOUT_CLASSIFICATION	1.0979134777537807E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999890173100825	WITHOUT_CLASSIFICATION	1.0982689917403181E-5	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.999994486074223	WITHOUT_CLASSIFICATION	5.5139257770699646E-6	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999915615538549	WITHOUT_CLASSIFICATION	8.438446145041419E-6	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999995489660839	WITHOUT_CLASSIFICATION	4.5103391611258556E-7	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.999994486074223	WITHOUT_CLASSIFICATION	5.5139257770699646E-6	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999858345932875	WITHOUT_CLASSIFICATION	1.4165406712589682E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.999998299556399	WITHOUT_CLASSIFICATION	1.7004436010673405E-6	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999996811472368	WITHOUT_CLASSIFICATION	3.1885276315909E-7	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999963659373848	WITHOUT_CLASSIFICATION	3.6340626150850668E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.999994486074223	WITHOUT_CLASSIFICATION	5.5139257770699646E-6	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999915615538549	WITHOUT_CLASSIFICATION	8.438446145041419E-6	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.999997454607345	WITHOUT_CLASSIFICATION	2.5453926550169766E-6	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999019737352	WITHOUT_CLASSIFICATION	9.802626468817075E-8	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999931606735466	WITHOUT_CLASSIFICATION	6.839326453389905E-6	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999964004778933	WITHOUT_CLASSIFICATION	3.599522106614882E-6	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999995283929967	WITHOUT_CLASSIFICATION	4.716070033916612E-7	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9999422021415267	WITHOUT_CLASSIFICATION	5.779785847334424E-5	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9999989201849854	WITHOUT_CLASSIFICATION	1.0798150145921144E-6	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9999851376586286	WITHOUT_CLASSIFICATION	1.486234137130928E-5	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9999896665310223	WITHOUT_CLASSIFICATION	1.0333468977631978E-5	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9999854853687868	WITHOUT_CLASSIFICATION	1.4514631213078517E-5	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9951936031592399	WITHOUT_CLASSIFICATION	0.00480639684076003	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999985329105774	WITHOUT_CLASSIFICATION	1.4670894226538263E-6	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999992999541907	WITHOUT_CLASSIFICATION	7.000458092758116E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998979553018	WITHOUT_CLASSIFICATION	1.0204469823522411E-7	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999879103023	WITHOUT_CLASSIFICATION	1.2089697737313077E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999931175142579	WITHOUT_CLASSIFICATION	6.882485742082877E-6	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9999995773459028	WITHOUT_CLASSIFICATION	4.226540971346363E-7	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9997616441345462	WITHOUT_CLASSIFICATION	2.3835586545385275E-4	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9999889769816158	WITHOUT_CLASSIFICATION	1.1023018384211762E-5	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999432325696567	WITHOUT_CLASSIFICATION	5.676743034342088E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.99997937635813	WITHOUT_CLASSIFICATION	2.0623641870065473E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999879103023	WITHOUT_CLASSIFICATION	1.2089697737313077E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999931175142579	WITHOUT_CLASSIFICATION	6.882485742082877E-6	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999921608001873	WITHOUT_CLASSIFICATION	7.839199812749965E-6	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999921608001873	WITHOUT_CLASSIFICATION	7.839199812749965E-6	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.999958076339024	WITHOUT_CLASSIFICATION	4.19236609759319E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9997499960995089	WITHOUT_CLASSIFICATION	2.500039004911569E-4	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999978308299803	WITHOUT_CLASSIFICATION	2.169170019725131E-6	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.999958076339024	WITHOUT_CLASSIFICATION	4.19236609759319E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9997499960995089	WITHOUT_CLASSIFICATION	2.500039004911569E-4	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999996351133067	WITHOUT_CLASSIFICATION	3.648866932339607E-7	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999772595766336	WITHOUT_CLASSIFICATION	2.274042336628907E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999869626893	WITHOUT_CLASSIFICATION	1.3037310567821573E-8	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999998970360351	WITHOUT_CLASSIFICATION	1.0296396488999195E-7	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999869626893	WITHOUT_CLASSIFICATION	1.3037310567821573E-8	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999994994182376	WITHOUT_CLASSIFICATION	5.005817623297716E-7	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999993623381	WITHOUT_CLASSIFICATION	6.376618767829756E-10	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999993623381	WITHOUT_CLASSIFICATION	6.376618767829756E-10	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9999995118202026	WITHOUT_CLASSIFICATION	4.881797974548351E-7	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999999947874894	WITHOUT_CLASSIFICATION	5.2125106658655496E-9	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.999999889445986	WITHOUT_CLASSIFICATION	1.1055401401074008E-7	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999999995822383	WITHOUT_CLASSIFICATION	4.177616346232861E-10	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999994365123402	WITHOUT_CLASSIFICATION	5.634876596656471E-7	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999999801626898	WITHOUT_CLASSIFICATION	1.9837310265643036E-8	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999996922027129	WITHOUT_CLASSIFICATION	3.077972870577718E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997719883693	WITHOUT_CLASSIFICATION	2.280116305710753E-7	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999997236611589	WITHOUT_CLASSIFICATION	2.7633884112170363E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999999282381141	WITHOUT_CLASSIFICATION	7.176188589653591E-7	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999999982126627	WITHOUT_CLASSIFICATION	1.7873372768628681E-9	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997719883693	WITHOUT_CLASSIFICATION	2.280116305710753E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999999282381141	WITHOUT_CLASSIFICATION	7.176188589653591E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997719883693	WITHOUT_CLASSIFICATION	2.280116305710753E-7	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9999995057762467	WITHOUT_CLASSIFICATION	4.94223753339907E-7	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999997217352214	WITHOUT_CLASSIFICATION	2.782647784904074E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997719883693	WITHOUT_CLASSIFICATION	2.280116305710753E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997719883693	WITHOUT_CLASSIFICATION	2.280116305710753E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997719883693	WITHOUT_CLASSIFICATION	2.280116305710753E-7	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999990320725425	WITHOUT_CLASSIFICATION	9.679274574883317E-7	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999998478243584	WITHOUT_CLASSIFICATION	1.521756416661452E-7	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.999999911560567	WITHOUT_CLASSIFICATION	8.843943304347605E-8	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999649238582715	WITHOUT_CLASSIFICATION	3.507614172842272E-5	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9999597383978648	WITHOUT_CLASSIFICATION	4.026160213524747E-5	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999993696563553	WITHOUT_CLASSIFICATION	6.303436446905774E-7	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999995005811378	WITHOUT_CLASSIFICATION	4.994188621919215E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999810677234	WITHOUT_CLASSIFICATION	1.8932276622099933E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999810677234	WITHOUT_CLASSIFICATION	1.8932276622099933E-8	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999905445521908	WITHOUT_CLASSIFICATION	9.455447809103643E-6	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999607076979351	WITHOUT_CLASSIFICATION	3.9292302064946585E-5	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999978574575576	WITHOUT_CLASSIFICATION	2.142542442418438E-6	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999963298162179	WITHOUT_CLASSIFICATION	3.670183782073152E-6	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999995471476676	WITHOUT_CLASSIFICATION	4.5285233245309775E-7	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999999709870955	WITHOUT_CLASSIFICATION	2.9012904477988642E-8	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999649238582715	WITHOUT_CLASSIFICATION	3.507614172842272E-5	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.999994112149433	WITHOUT_CLASSIFICATION	5.887850566871973E-6	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999985829501884	WITHOUT_CLASSIFICATION	1.4170498116118705E-6	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999979208682785	WITHOUT_CLASSIFICATION	2.079131721341892E-6	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999997912143462	WITHOUT_CLASSIFICATION	2.087856538827679E-7	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9999801782035935	WITHOUT_CLASSIFICATION	1.9821796406407675E-5	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9999984764391413	WITHOUT_CLASSIFICATION	1.523560858716721E-6	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999641158883188	WITHOUT_CLASSIFICATION	3.588411168121447E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.999993806652041	WITHOUT_CLASSIFICATION	6.193347958981304E-6	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999995406749373	WITHOUT_CLASSIFICATION	4.593250626506907E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999999282381141	WITHOUT_CLASSIFICATION	7.176188589653591E-7	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999830233174327	WITHOUT_CLASSIFICATION	1.6976682567230677E-5	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.999999991471309	WITHOUT_CLASSIFICATION	8.528691036087575E-9	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999993752458727	WITHOUT_CLASSIFICATION	6.24754127297711E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999993752458727	WITHOUT_CLASSIFICATION	6.24754127297711E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999997741879196	WITHOUT_CLASSIFICATION	2.2581208034625374E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999999282381141	WITHOUT_CLASSIFICATION	7.176188589653591E-7	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999999292646695	WITHOUT_CLASSIFICATION	7.073533053558576E-8	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999715719718658	WITHOUT_CLASSIFICATION	2.842802813415345E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9999195708627905	WITHOUT_CLASSIFICATION	8.042913720941711E-5	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999999449983717	WITHOUT_CLASSIFICATION	5.50016282765636E-8	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999997062944419	WITHOUT_CLASSIFICATION	2.937055581576652E-7	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9999932757860877	WITHOUT_CLASSIFICATION	6.724213912266032E-6	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999992146749349	WITHOUT_CLASSIFICATION	7.853250649946646E-7	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999998992083419	WITHOUT_CLASSIFICATION	1.007916580773306E-7	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9998510033220919	WITHOUT_CLASSIFICATION	1.4899667790811623E-4	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.99999996556817	WITHOUT_CLASSIFICATION	3.443183002730059E-8	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999996908748542	WITHOUT_CLASSIFICATION	3.091251457704734E-7	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999946697448084	WITHOUT_CLASSIFICATION	5.3302551914778725E-6	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.999995572846531	WITHOUT_CLASSIFICATION	4.427153469069221E-6	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.999997202152799	WITHOUT_CLASSIFICATION	2.7978472010442843E-6	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999373983519685	WITHOUT_CLASSIFICATION	6.260164803158501E-5	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999999920670032	WITHOUT_CLASSIFICATION	7.932996879397875E-9	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999999075466833	WITHOUT_CLASSIFICATION	9.24533167065993E-8	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9999999169558818	WITHOUT_CLASSIFICATION	8.304411826893054E-8	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999999840967729	WITHOUT_CLASSIFICATION	1.5903226993764494E-8	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999997617329714	WITHOUT_CLASSIFICATION	2.3826702852905018E-7	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9997629453722466	WITHOUT_CLASSIFICATION	2.3705462775326294E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999999282381141	WITHOUT_CLASSIFICATION	7.176188589653591E-7	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999999389816966	WITHOUT_CLASSIFICATION	6.101830344534268E-8	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999995307874056	WITHOUT_CLASSIFICATION	4.692125944491444E-7	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9999976350709036	WITHOUT_CLASSIFICATION	2.3649290964829673E-6	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999997783355812	WITHOUT_CLASSIFICATION	2.2166441892136623E-7	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9999913467814193	WITHOUT_CLASSIFICATION	8.653218580569211E-6	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999998650668793	WITHOUT_CLASSIFICATION	1.3493312070931367E-7	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999976764312587	WITHOUT_CLASSIFICATION	2.3235687412636653E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999999282381141	WITHOUT_CLASSIFICATION	7.176188589653591E-7	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999999914087667	WITHOUT_CLASSIFICATION	8.591233315311441E-9	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999979419342138	WITHOUT_CLASSIFICATION	2.0580657862027014E-6	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999979419342138	WITHOUT_CLASSIFICATION	2.0580657862027014E-6	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999338959587524	WITHOUT_CLASSIFICATION	6.610404124757186E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999338959587524	WITHOUT_CLASSIFICATION	6.610404124757186E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999969764196	WITHOUT_CLASSIFICATION	3.023580389251881E-8	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999995815067935	WITHOUT_CLASSIFICATION	4.184932065779744E-7	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999966808156633	WITHOUT_CLASSIFICATION	3.3191843367866707E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999966808156633	WITHOUT_CLASSIFICATION	3.3191843367866707E-6	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999941181917129	WITHOUT_CLASSIFICATION	5.881808287132622E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999998643862772	WITHOUT_CLASSIFICATION	1.3561372284419995E-7	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999998478243584	WITHOUT_CLASSIFICATION	1.521756416661452E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999998127896788	WITHOUT_CLASSIFICATION	1.872103212698502E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999998127896788	WITHOUT_CLASSIFICATION	1.872103212698502E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999998127896788	WITHOUT_CLASSIFICATION	1.872103212698502E-7	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999998643862772	WITHOUT_CLASSIFICATION	1.3561372284419995E-7	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999999932061655	WITHOUT_CLASSIFICATION	6.793834504155314E-9	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.999994975522482	WITHOUT_CLASSIFICATION	5.024477518036286E-6	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9999995153081361	WITHOUT_CLASSIFICATION	4.846918639163374E-7	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9999641425537147	WITHOUT_CLASSIFICATION	3.585744628519318E-5	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999932536169361	WITHOUT_CLASSIFICATION	6.746383063861433E-6	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999999784842816	WITHOUT_CLASSIFICATION	2.1515718356325117E-8	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999925401107691	WITHOUT_CLASSIFICATION	7.459889230922136E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999105058777762	WITHOUT_CLASSIFICATION	8.949412222391715E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9993959664467159	WITHOUT_CLASSIFICATION	6.040335532840244E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999996389991391	WITHOUT_CLASSIFICATION	3.6100086094604423E-7	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999996466704916	WITHOUT_CLASSIFICATION	3.533295085272403E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999961794859639	WITHOUT_CLASSIFICATION	3.820514036132768E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999994672972011	WITHOUT_CLASSIFICATION	5.327027988437383E-7	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.999999734605281	WITHOUT_CLASSIFICATION	2.6539471890674124E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999777570661318	WITHOUT_CLASSIFICATION	2.224293386812927E-5	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999997587101238	WITHOUT_CLASSIFICATION	2.412898762427849E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.99999595268728	WITHOUT_CLASSIFICATION	4.0473127199298536E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999996204943039	WITHOUT_CLASSIFICATION	3.795056961419636E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999999381778382	WITHOUT_CLASSIFICATION	6.182216180087692E-8	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999965044710728	WITHOUT_CLASSIFICATION	3.4955289270829947E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999997367225186	WITHOUT_CLASSIFICATION	2.632774813407338E-7	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999997981996341	WITHOUT_CLASSIFICATION	2.0180036585400998E-7	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999997164697568	WITHOUT_CLASSIFICATION	2.8353024321775383E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999996782453309	WITHOUT_CLASSIFICATION	3.217546692372964E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999996405516228	WITHOUT_CLASSIFICATION	3.5944837713627955E-7	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999975738053675	WITHOUT_CLASSIFICATION	2.4261946325997037E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999999508168753	WITHOUT_CLASSIFICATION	4.918312471800206E-8	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999999080920812	WITHOUT_CLASSIFICATION	9.190791885918825E-8	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999205483453052	WITHOUT_CLASSIFICATION	7.945165469484385E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999906302749407	WITHOUT_CLASSIFICATION	9.369725059345488E-6	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999998759547293	WITHOUT_CLASSIFICATION	1.240452708323701E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9999100200401682	WITHOUT_CLASSIFICATION	8.997995983177409E-5	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999795508719	WITHOUT_CLASSIFICATION	2.0449128060433297E-8	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999998285582324	WITHOUT_CLASSIFICATION	1.7144176767175113E-7	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999968835970888	WITHOUT_CLASSIFICATION	3.1164029112096877E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999993022382365	WITHOUT_CLASSIFICATION	6.977617635027722E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999163652180802	WITHOUT_CLASSIFICATION	8.363478191966669E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999985561722353	WITHOUT_CLASSIFICATION	1.4438277646479668E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999995103987185	WITHOUT_CLASSIFICATION	4.896012814578958E-7	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999969195629084	WITHOUT_CLASSIFICATION	3.080437091709383E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999163652180802	WITHOUT_CLASSIFICATION	8.363478191966669E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999996450703635	WITHOUT_CLASSIFICATION	3.5492963655406275E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999949155913782	WITHOUT_CLASSIFICATION	5.084408621866496E-6	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999974741231783	WITHOUT_CLASSIFICATION	2.5258768216441977E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999905333714443	WITHOUT_CLASSIFICATION	9.466628555802037E-6	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999900018971828	WITHOUT_CLASSIFICATION	9.998102817284678E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999995103987185	WITHOUT_CLASSIFICATION	4.896012814578958E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999905333714443	WITHOUT_CLASSIFICATION	9.466628555802037E-6	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999962812530172	WITHOUT_CLASSIFICATION	3.718746982718935E-6	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999999860155648	WITHOUT_CLASSIFICATION	1.3984435215280659E-8	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999994156312888	WITHOUT_CLASSIFICATION	5.843687111605908E-7	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999998880782656	WITHOUT_CLASSIFICATION	1.1192173449929649E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999998930051546	WITHOUT_CLASSIFICATION	1.0699484538197679E-7	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9999784275763094	WITHOUT_CLASSIFICATION	2.1572423690614693E-5	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.999999977651402	WITHOUT_CLASSIFICATION	2.2348597892267317E-8	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999991250091151	WITHOUT_CLASSIFICATION	8.74990884882203E-7	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9999128943014505	WITHOUT_CLASSIFICATION	8.71056985494676E-5	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999875102016242	WITHOUT_CLASSIFICATION	1.2489798375866982E-5	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999993561603195	WITHOUT_CLASSIFICATION	6.438396804766063E-7	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9999996611815378	WITHOUT_CLASSIFICATION	3.38818462194507E-7	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9999999399079459	WITHOUT_CLASSIFICATION	6.009205409610398E-8	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.999999794887134	WITHOUT_CLASSIFICATION	2.0511286595754703E-7	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9999999605975407	WITHOUT_CLASSIFICATION	3.940245935960689E-8	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999995162330505	WITHOUT_CLASSIFICATION	4.837669494270289E-7	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9999999542711142	WITHOUT_CLASSIFICATION	4.572888582464376E-8	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999999784692483	WITHOUT_CLASSIFICATION	2.1530751804011478E-8	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999999940717338	WITHOUT_CLASSIFICATION	5.92826627330169E-9	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999999818664858	WITHOUT_CLASSIFICATION	1.8133514201352724E-8	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999956199837653	WITHOUT_CLASSIFICATION	4.3800162347088715E-6	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999998944609332	WITHOUT_CLASSIFICATION	1.0553906674934746E-7	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999999987107114	WITHOUT_CLASSIFICATION	1.2892885053709633E-9	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999999745546385	WITHOUT_CLASSIFICATION	2.544536157087887E-8	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9999979443775642	WITHOUT_CLASSIFICATION	2.0556224358933564E-6	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9999433205714717	WITHOUT_CLASSIFICATION	5.6679428528390755E-5	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999926769396664	WITHOUT_CLASSIFICATION	7.3230603335985925E-6	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999994561020277	WITHOUT_CLASSIFICATION	5.438979722185007E-7	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999999860924063	WITHOUT_CLASSIFICATION	1.3907593789958514E-8	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.999999347778941	WITHOUT_CLASSIFICATION	6.522210589277693E-7	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999937458208	WITHOUT_CLASSIFICATION	6.254179149792101E-9	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999978823153383	WITHOUT_CLASSIFICATION	2.117684661789074E-6	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999997572395556	WITHOUT_CLASSIFICATION	2.4276044442280264E-7	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999979368670034	WITHOUT_CLASSIFICATION	2.063132996645834E-6	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999994876135918	WITHOUT_CLASSIFICATION	5.123864082752367E-7	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999838163797276	WITHOUT_CLASSIFICATION	1.618362027234268E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9998311919505561	WITHOUT_CLASSIFICATION	1.688080494439349E-4	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999989443185089	WITHOUT_CLASSIFICATION	1.0556814910251262E-6	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999987716487847	WITHOUT_CLASSIFICATION	1.2283512152078931E-6	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999994716128365	WITHOUT_CLASSIFICATION	5.283871634700991E-7	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999880606790126	WITHOUT_CLASSIFICATION	1.193932098744907E-5	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.999999543208246	WITHOUT_CLASSIFICATION	4.5679175391349804E-7	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999987045713448	WITHOUT_CLASSIFICATION	1.2954286552197786E-6	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999914971988536	WITHOUT_CLASSIFICATION	8.502801146439564E-6	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999928997046317	WITHOUT_CLASSIFICATION	7.100295368358294E-6	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999990480354307	WITHOUT_CLASSIFICATION	9.51964569374889E-7	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999776657047452	WITHOUT_CLASSIFICATION	2.2334295254788297E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.999977881753885	WITHOUT_CLASSIFICATION	2.2118246115062362E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999998208958419	WITHOUT_CLASSIFICATION	1.791041580870269E-7	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999999981374948	WITHOUT_CLASSIFICATION	1.8625051566220394E-9	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999998796098483	WITHOUT_CLASSIFICATION	1.2039015183361242E-7	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9998002151265284	WITHOUT_CLASSIFICATION	1.9978487347168335E-4	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9990629900804023	WITHOUT_CLASSIFICATION	9.37009919597632E-4	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999996613913469	WITHOUT_CLASSIFICATION	3.386086530744036E-7	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999997980860805	WITHOUT_CLASSIFICATION	2.0191391938043173E-7	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999999947874894	WITHOUT_CLASSIFICATION	5.2125106658655496E-9	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9999692986554558	WITHOUT_CLASSIFICATION	3.0701344544130215E-5	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999992524714454	WITHOUT_CLASSIFICATION	7.475285546680433E-7	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999999967591421	WITHOUT_CLASSIFICATION	3.240857892401651E-9	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999998475814073	WITHOUT_CLASSIFICATION	1.524185927530155E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999999894030355	WITHOUT_CLASSIFICATION	1.0596964492389426E-8	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999975492264979	WITHOUT_CLASSIFICATION	2.4507735020117095E-6	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9998195378297411	WITHOUT_CLASSIFICATION	1.8046217025880688E-4	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9999938592182549	WITHOUT_CLASSIFICATION	6.1407817451382035E-6	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.999999995176999	WITHOUT_CLASSIFICATION	4.82300096143482E-9	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999998659256555	WITHOUT_CLASSIFICATION	1.3407434459430377E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999999839141611	WITHOUT_CLASSIFICATION	1.6085838885946684E-8	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999993696563553	WITHOUT_CLASSIFICATION	6.303436446905774E-7	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999995005811378	WITHOUT_CLASSIFICATION	4.994188621919215E-7	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999999709870955	WITHOUT_CLASSIFICATION	2.9012904477988642E-8	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999975492264979	WITHOUT_CLASSIFICATION	2.4507735020117095E-6	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999998659256555	WITHOUT_CLASSIFICATION	1.3407434459430377E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999999839141611	WITHOUT_CLASSIFICATION	1.6085838885946684E-8	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999998957107796	WITHOUT_CLASSIFICATION	1.042892203284797E-7	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.999999488226797	WITHOUT_CLASSIFICATION	5.117732030821172E-7	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999992511063543	WITHOUT_CLASSIFICATION	7.48893645710798E-7	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9999989782450591	WITHOUT_CLASSIFICATION	1.0217549408514874E-6	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999996048395529	WITHOUT_CLASSIFICATION	3.9516044722921504E-7	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999999992971758	WITHOUT_CLASSIFICATION	7.028242725433608E-10	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999999846297853	WITHOUT_CLASSIFICATION	1.53702147363989E-8	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999990063619423	WITHOUT_CLASSIFICATION	9.936380576298757E-7	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.999999434130815	WITHOUT_CLASSIFICATION	5.658691850102168E-7	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9999936859216205	WITHOUT_CLASSIFICATION	6.314078379409774E-6	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999997073030781	WITHOUT_CLASSIFICATION	2.9269692193789403E-7	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9999941815059582	WITHOUT_CLASSIFICATION	5.818494041840475E-6	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999976443742644	WITHOUT_CLASSIFICATION	2.355625735629445E-6	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.999994048434852	WITHOUT_CLASSIFICATION	5.951565148137809E-6	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999983108112014	WITHOUT_CLASSIFICATION	1.6891887986091798E-6	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999993576533444	WITHOUT_CLASSIFICATION	6.423466556932627E-7	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9996679367761993	WITHOUT_CLASSIFICATION	3.320632238007577E-4	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999980061332228	WITHOUT_CLASSIFICATION	1.9938667772881324E-6	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999992263326904	WITHOUT_CLASSIFICATION	7.736673096366889E-7	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999972760840949	WITHOUT_CLASSIFICATION	2.7239159049342176E-6	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999999975293137	WITHOUT_CLASSIFICATION	2.4706863904544685E-9	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999999980040104	WITHOUT_CLASSIFICATION	1.9959895836747636E-9	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999998475814073	WITHOUT_CLASSIFICATION	1.524185927530155E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999999894030355	WITHOUT_CLASSIFICATION	1.0596964492389426E-8	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999999731878415	WITHOUT_CLASSIFICATION	2.681215842149175E-8	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999999918971717	WITHOUT_CLASSIFICATION	8.102828258551787E-9	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999999124682356	WITHOUT_CLASSIFICATION	8.753176440520207E-8	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999996301362566	WITHOUT_CLASSIFICATION	3.698637433625976E-7	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999999521149844	WITHOUT_CLASSIFICATION	4.788501557849254E-8	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999948041672024	WITHOUT_CLASSIFICATION	5.195832797496002E-6	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.999698503150788	WITHOUT_CLASSIFICATION	3.0149684921206075E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999628358024147	WITHOUT_CLASSIFICATION	3.716419758519125E-5	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999998144612079	WITHOUT_CLASSIFICATION	1.8553879223319835E-7	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999998144612079	WITHOUT_CLASSIFICATION	1.8553879223319835E-7	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999961741998433	WITHOUT_CLASSIFICATION	3.825800156686025E-6	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9999981136200301	WITHOUT_CLASSIFICATION	1.8863799699000906E-6	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999956705608698	WITHOUT_CLASSIFICATION	4.329439130192835E-6	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9999997223026046	WITHOUT_CLASSIFICATION	2.776973953584269E-7	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999999967633797	WITHOUT_CLASSIFICATION	3.236620296053501E-9	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999886174795	WITHOUT_CLASSIFICATION	1.1382520494604151E-8	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999984092222741	WITHOUT_CLASSIFICATION	1.5907777259171328E-6	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999984092222741	WITHOUT_CLASSIFICATION	1.5907777259171328E-6	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.999999985344724	WITHOUT_CLASSIFICATION	1.4655275928713305E-8	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999999304720154	WITHOUT_CLASSIFICATION	6.95279846663973E-8	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999978353695584	WITHOUT_CLASSIFICATION	2.164630441611272E-6	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.99999988236835	WITHOUT_CLASSIFICATION	1.1763164992660828E-7	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999999912558141	WITHOUT_CLASSIFICATION	8.744185906294623E-9	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999964685237167	WITHOUT_CLASSIFICATION	3.531476283324755E-6	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999999491069838	WITHOUT_CLASSIFICATION	5.089301631162382E-8	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999994476224057	WITHOUT_CLASSIFICATION	5.523775944017917E-7	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999999924426031	WITHOUT_CLASSIFICATION	7.557396874423892E-9	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.999999997834608	WITHOUT_CLASSIFICATION	2.1653919213573326E-9	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999799118422754	WITHOUT_CLASSIFICATION	2.0088157724585537E-5	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999977652684	WITHOUT_CLASSIFICATION	2.2347316328328233E-9	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9999990901378882	WITHOUT_CLASSIFICATION	9.098621117561247E-7	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999998542385884	WITHOUT_CLASSIFICATION	1.4576141160122008E-7	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999971054314173	WITHOUT_CLASSIFICATION	2.8945685826569752E-6	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999986675685648	WITHOUT_CLASSIFICATION	1.332431435180581E-6	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.999999935306218	WITHOUT_CLASSIFICATION	6.469378202449048E-8	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999997469611185	WITHOUT_CLASSIFICATION	2.5303888149894535E-7	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999998887640974	WITHOUT_CLASSIFICATION	1.1123590259577263E-7	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999996925887368	WITHOUT_CLASSIFICATION	3.074112632447938E-7	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.999990741505337	WITHOUT_CLASSIFICATION	9.25849466309561E-6	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.999999986664808	WITHOUT_CLASSIFICATION	1.3335191953509899E-8	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.999999953272069	WITHOUT_CLASSIFICATION	4.6727930940105064E-8	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9999951399913575	WITHOUT_CLASSIFICATION	4.860008642537703E-6	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999999913537392	WITHOUT_CLASSIFICATION	8.64626087798867E-9	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999996712095435	WITHOUT_CLASSIFICATION	3.287904564864245E-7	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999997671630321	WITHOUT_CLASSIFICATION	2.3283696793642668E-7	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999999766041473	WITHOUT_CLASSIFICATION	2.3395852738088012E-8	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.999998968570817	WITHOUT_CLASSIFICATION	1.0314291830110543E-6	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999999782156248	WITHOUT_CLASSIFICATION	2.17843751127742E-8	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999973716731415	WITHOUT_CLASSIFICATION	2.6283268584528383E-6	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999997174515615	WITHOUT_CLASSIFICATION	2.825484385736818E-7	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9999865393311774	WITHOUT_CLASSIFICATION	1.3460668822622829E-5	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999998839513449	WITHOUT_CLASSIFICATION	1.1604865507573029E-7	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.996435779497463	WITHOUT_CLASSIFICATION	0.0035642205025368896	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999990170827447	WITHOUT_CLASSIFICATION	9.829172552185804E-7	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999281725499163	WITHOUT_CLASSIFICATION	7.182745008372854E-5	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9998852268165405	WITHOUT_CLASSIFICATION	1.147731834595415E-4	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9998832413440261	WITHOUT_CLASSIFICATION	1.1675865597396422E-4	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999971232756182	WITHOUT_CLASSIFICATION	2.8767243818892247E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999985814066733	WITHOUT_CLASSIFICATION	1.4185933266914294E-6	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9999773990510572	WITHOUT_CLASSIFICATION	2.2600948942800078E-5	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999999830127321	WITHOUT_CLASSIFICATION	1.6987267906527937E-8	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9999580770042364	WITHOUT_CLASSIFICATION	4.19229957635054E-5	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9999984328034103	WITHOUT_CLASSIFICATION	1.5671965897622795E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999985814066733	WITHOUT_CLASSIFICATION	1.4185933266914294E-6	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999999830127321	WITHOUT_CLASSIFICATION	1.6987267906527937E-8	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.999998557701107	WITHOUT_CLASSIFICATION	1.4422988929128679E-6	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999999930565431	WITHOUT_CLASSIFICATION	6.943456981409559E-9	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9999992348171733	WITHOUT_CLASSIFICATION	7.651828265862001E-7	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.999999797290958	WITHOUT_CLASSIFICATION	2.027090419459768E-7	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999971232756182	WITHOUT_CLASSIFICATION	2.8767243818892247E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999971232756182	WITHOUT_CLASSIFICATION	2.8767243818892247E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999985814066733	WITHOUT_CLASSIFICATION	1.4185933266914294E-6	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999997711605733	WITHOUT_CLASSIFICATION	2.2883942686414107E-7	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999492123816504	WITHOUT_CLASSIFICATION	5.078761834965168E-5	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999997380637169	WITHOUT_CLASSIFICATION	2.6193628319718577E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999997380637169	WITHOUT_CLASSIFICATION	2.6193628319718577E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999020413027	WITHOUT_CLASSIFICATION	9.795869735254735E-8	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999992901538522	WITHOUT_CLASSIFICATION	7.098461477561808E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999504803042373	WITHOUT_CLASSIFICATION	4.9519695762722905E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999504803042373	WITHOUT_CLASSIFICATION	4.9519695762722905E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.999999475196717	WITHOUT_CLASSIFICATION	5.248032830644754E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999992901538522	WITHOUT_CLASSIFICATION	7.098461477561808E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999504803042373	WITHOUT_CLASSIFICATION	4.9519695762722905E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.999999475196717	WITHOUT_CLASSIFICATION	5.248032830644754E-7	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999988142175779	WITHOUT_CLASSIFICATION	1.1857824221942453E-6	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9999999851984088	WITHOUT_CLASSIFICATION	1.4801591149024197E-8	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999999734685191	WITHOUT_CLASSIFICATION	2.653148089368215E-8	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9999897105875659	WITHOUT_CLASSIFICATION	1.028941243410855E-5	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999997833704372	WITHOUT_CLASSIFICATION	2.1662956291602942E-7	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999999880155462	WITHOUT_CLASSIFICATION	1.1984453635325131E-8	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999799126005849	WITHOUT_CLASSIFICATION	2.0087399415034947E-5	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999998962601083	WITHOUT_CLASSIFICATION	1.0373989157255472E-7	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9999290372866171	WITHOUT_CLASSIFICATION	7.096271338292939E-5	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9999790993407448	WITHOUT_CLASSIFICATION	2.0900659255264033E-5	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999982884812022	WITHOUT_CLASSIFICATION	1.7115187978737523E-6	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999905504578563	WITHOUT_CLASSIFICATION	9.449542143757583E-6	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999999491650606	WITHOUT_CLASSIFICATION	5.0834939375364876E-8	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999999959174262	WITHOUT_CLASSIFICATION	4.082573869240604E-9	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999999997408758	WITHOUT_CLASSIFICATION	2.5912420689619373E-10	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999981536620731	WITHOUT_CLASSIFICATION	1.8463379268902172E-6	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999992572094345	WITHOUT_CLASSIFICATION	7.427905653830173E-7	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999996119252016	WITHOUT_CLASSIFICATION	3.8807479833810913E-7	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.999999849846646	WITHOUT_CLASSIFICATION	1.5015335399735852E-7	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999995063997632	WITHOUT_CLASSIFICATION	4.936002368253828E-7	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999972738034	WITHOUT_CLASSIFICATION	2.7261966563845854E-9	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999990140054075	WITHOUT_CLASSIFICATION	9.859945924526307E-7	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999958597622	WITHOUT_CLASSIFICATION	4.140237866402463E-9	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999856480376	WITHOUT_CLASSIFICATION	1.4351962437665968E-8	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999997359523637	WITHOUT_CLASSIFICATION	2.640476363028427E-7	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.999999995155764	WITHOUT_CLASSIFICATION	4.844236088072427E-9	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999999466443055	WITHOUT_CLASSIFICATION	5.3355694600118376E-8	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999990050095466	WITHOUT_CLASSIFICATION	9.949904533963174E-7	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999996858984437	WITHOUT_CLASSIFICATION	3.1410155624520923E-7	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9999701050559714	WITHOUT_CLASSIFICATION	2.9894944028557405E-5	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.999999879984902	WITHOUT_CLASSIFICATION	1.2001509798019332E-7	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999999535540205	WITHOUT_CLASSIFICATION	4.64459796075794E-8	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999999335145656	WITHOUT_CLASSIFICATION	6.64854343267053E-8	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999997560328886	WITHOUT_CLASSIFICATION	2.439671114109459E-7	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999999264663105	WITHOUT_CLASSIFICATION	7.353368947786176E-8	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999994702971018	WITHOUT_CLASSIFICATION	5.297028982351672E-7	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999999986108122	WITHOUT_CLASSIFICATION	1.389187688540303E-9	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999998410186022	WITHOUT_CLASSIFICATION	1.5898139780777935E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999997944844177	WITHOUT_CLASSIFICATION	2.0551558229727965E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999997944844177	WITHOUT_CLASSIFICATION	2.0551558229727965E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999997944844177	WITHOUT_CLASSIFICATION	2.0551558229727965E-6	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999998145968844	WITHOUT_CLASSIFICATION	1.8540311572323162E-7	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9999964003775648	WITHOUT_CLASSIFICATION	3.5996224353128838E-6	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9999841429901777	WITHOUT_CLASSIFICATION	1.5857009822388902E-5	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9999999738946771	WITHOUT_CLASSIFICATION	2.6105322917459086E-8	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.999879716041815	WITHOUT_CLASSIFICATION	1.2028395818485515E-4	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999947274160835	WITHOUT_CLASSIFICATION	5.272583916522691E-6	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999708378494	WITHOUT_CLASSIFICATION	2.9162150596156322E-8	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999998392912053	WITHOUT_CLASSIFICATION	1.607087946731178E-7	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999865299722759	WITHOUT_CLASSIFICATION	1.3470027724175531E-5	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999977861067841	WITHOUT_CLASSIFICATION	2.2138932158495242E-6	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9999943251200947	WITHOUT_CLASSIFICATION	5.674879905284716E-6	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999754738391033	WITHOUT_CLASSIFICATION	2.4526160896614634E-5	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999921709789098	WITHOUT_CLASSIFICATION	7.829021090202305E-6	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.999996360290817	WITHOUT_CLASSIFICATION	3.639709183083953E-6	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9999860643405492	WITHOUT_CLASSIFICATION	1.3935659450885234E-5	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999884889624767	WITHOUT_CLASSIFICATION	1.1511037523313867E-5	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999999977025879	WITHOUT_CLASSIFICATION	2.2974120809059828E-9	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999966704414772	WITHOUT_CLASSIFICATION	3.3295585227977953E-6	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999809731346841	WITHOUT_CLASSIFICATION	1.9026865315856008E-5	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9999975198645541	WITHOUT_CLASSIFICATION	2.480135445843795E-6	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9999977135846112	WITHOUT_CLASSIFICATION	2.2864153887895234E-6	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999980929202769	WITHOUT_CLASSIFICATION	1.9070797231601624E-6	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9999738550789086	WITHOUT_CLASSIFICATION	2.614492109147127E-5	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9999989113367295	WITHOUT_CLASSIFICATION	1.0886632705073213E-6	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999997469265834	WITHOUT_CLASSIFICATION	2.5307341652895125E-7	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999943087936278	WITHOUT_CLASSIFICATION	5.691206372127482E-6	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.999999882830669	WITHOUT_CLASSIFICATION	1.1716933096838164E-7	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999996352220089	WITHOUT_CLASSIFICATION	3.647779912535856E-7	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999998525135433	WITHOUT_CLASSIFICATION	1.4748645665777197E-7	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9998055388444672	WITHOUT_CLASSIFICATION	1.9446115553278397E-4	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999873412654758	WITHOUT_CLASSIFICATION	1.2658734524218743E-5	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999686804344334	WITHOUT_CLASSIFICATION	3.1319565566472435E-5	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9999524830631524	WITHOUT_CLASSIFICATION	4.7516936847617675E-5	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9999964915289049	WITHOUT_CLASSIFICATION	3.5084710951713245E-6	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9999962828763985	WITHOUT_CLASSIFICATION	3.7171236015636724E-6	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999990113245228	WITHOUT_CLASSIFICATION	9.886754770862678E-7	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.999999999638596	WITHOUT_CLASSIFICATION	3.6140394331814945E-10	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999813332469503	WITHOUT_CLASSIFICATION	1.866675304974707E-5	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999996631183783	WITHOUT_CLASSIFICATION	3.3688162180180233E-7	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999808205618437	WITHOUT_CLASSIFICATION	1.9179438156318042E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999998490795601	WITHOUT_CLASSIFICATION	1.5092044001376927E-7	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999992326905496	WITHOUT_CLASSIFICATION	7.673094503744992E-7	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999948041672024	WITHOUT_CLASSIFICATION	5.195832797496002E-6	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.999999900503154	WITHOUT_CLASSIFICATION	9.949684592053619E-8	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999960859193338	WITHOUT_CLASSIFICATION	3.9140806662375736E-6	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9999970554942046	WITHOUT_CLASSIFICATION	2.9445057954297454E-6	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9999866815959956	WITHOUT_CLASSIFICATION	1.3318404004376752E-5	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9999885469528559	WITHOUT_CLASSIFICATION	1.1453047144191519E-5	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9999169608437237	WITHOUT_CLASSIFICATION	8.303915627627153E-5	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.999996263317573	WITHOUT_CLASSIFICATION	3.736682427117495E-6	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999999999197777	WITHOUT_CLASSIFICATION	8.022225058215315E-11	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9999976226095952	WITHOUT_CLASSIFICATION	2.3773904047610657E-6	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999987763766104	WITHOUT_CLASSIFICATION	1.2236233895736167E-6	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999999071213902	WITHOUT_CLASSIFICATION	9.287860978188276E-8	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999978765655586	WITHOUT_CLASSIFICATION	2.1234344412903758E-6	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999997174120909	WITHOUT_CLASSIFICATION	2.8258790901346764E-7	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999972636419727	WITHOUT_CLASSIFICATION	2.7363580272325424E-6	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999980489693064	WITHOUT_CLASSIFICATION	1.9510306935774887E-6	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.999999802643356	WITHOUT_CLASSIFICATION	1.9735664393128894E-7	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999965800897437	WITHOUT_CLASSIFICATION	3.4199102563265524E-6	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999997889000727	WITHOUT_CLASSIFICATION	2.1109992735341902E-7	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.999999691746775	WITHOUT_CLASSIFICATION	3.082532250091233E-7	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9999939642215739	WITHOUT_CLASSIFICATION	6.035778426102999E-6	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9999728437989668	WITHOUT_CLASSIFICATION	2.7156201033143314E-5	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9998472903763901	WITHOUT_CLASSIFICATION	1.5270962360992792E-4	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999982848358892	WITHOUT_CLASSIFICATION	1.7151641107831099E-6	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999871740441687	WITHOUT_CLASSIFICATION	1.2825955831205365E-5	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999991041593036	WITHOUT_CLASSIFICATION	8.958406963424838E-7	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999991041593036	WITHOUT_CLASSIFICATION	8.958406963424838E-7	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999929301992365	WITHOUT_CLASSIFICATION	7.069800763507401E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999929301992365	WITHOUT_CLASSIFICATION	7.069800763507401E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999982848358892	WITHOUT_CLASSIFICATION	1.7151641107831099E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999929301992365	WITHOUT_CLASSIFICATION	7.069800763507401E-6	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999996157865179	WITHOUT_CLASSIFICATION	3.842134821014568E-7	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999997733590438	WITHOUT_CLASSIFICATION	2.2664095617887139E-7	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999997733590438	WITHOUT_CLASSIFICATION	2.2664095617887139E-7	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999997287894234	WITHOUT_CLASSIFICATION	2.712105765614903E-7	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999997884940149	WITHOUT_CLASSIFICATION	2.115059850255537E-7	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.999987321930013	WITHOUT_CLASSIFICATION	1.2678069986845361E-5	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9999883949913386	WITHOUT_CLASSIFICATION	1.1605008661254426E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.999995372255635	WITHOUT_CLASSIFICATION	4.627744365010986E-6	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999989901969135	WITHOUT_CLASSIFICATION	1.0098030864403542E-6	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.999992117900315	WITHOUT_CLASSIFICATION	7.882099685131511E-6	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9999829435516465	WITHOUT_CLASSIFICATION	1.705644835344871E-5	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9999844553559046	WITHOUT_CLASSIFICATION	1.554464409539888E-5	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999999341944554	WITHOUT_CLASSIFICATION	6.580554461232798E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999999721217098	WITHOUT_CLASSIFICATION	2.7878290318289445E-8	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999999997041102	WITHOUT_CLASSIFICATION	2.9588969989743545E-10	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999999848949609	WITHOUT_CLASSIFICATION	1.5105039088650223E-7	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999997195128801	WITHOUT_CLASSIFICATION	2.8048711976897613E-7	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999985422820089	WITHOUT_CLASSIFICATION	1.4577179911398659E-6	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999999486556088	WITHOUT_CLASSIFICATION	5.1344391199516727E-8	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999959706515651	WITHOUT_CLASSIFICATION	4.029348434971619E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9916196299342525	WITHOUT_CLASSIFICATION	0.008380370065747626	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.992431489099716	WITHOUT_CLASSIFICATION	0.007568510900283964	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999992667998263	WITHOUT_CLASSIFICATION	7.332001735601099E-7	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999999780144638	WITHOUT_CLASSIFICATION	2.198553611852339E-8	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9999970216887741	WITHOUT_CLASSIFICATION	2.9783112257226274E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999681798547	WITHOUT_CLASSIFICATION	3.1820145279463995E-8	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.999999542377485	WITHOUT_CLASSIFICATION	4.5762251495538276E-7	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.999999542377485	WITHOUT_CLASSIFICATION	4.5762251495538276E-7	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999917453667586	WITHOUT_CLASSIFICATION	8.254633241497193E-6	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9999964404328066	WITHOUT_CLASSIFICATION	3.5595671934296724E-6	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9999392096090874	WITHOUT_CLASSIFICATION	6.079039091268734E-5	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999646742892858	WITHOUT_CLASSIFICATION	3.532571071417447E-5	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999997427809459	WITHOUT_CLASSIFICATION	2.5721905402938165E-7	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999998055260221	WITHOUT_CLASSIFICATION	1.9447397796166885E-7	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999998501760314	WITHOUT_CLASSIFICATION	1.4982396860478673E-7	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9999880854025224	WITHOUT_CLASSIFICATION	1.191459747747925E-5	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999417790775663	WITHOUT_CLASSIFICATION	5.822092243377332E-5	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999783133106224	WITHOUT_CLASSIFICATION	2.168668937754994E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999999612802596	WITHOUT_CLASSIFICATION	3.871974050898567E-8	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9998844002424159	WITHOUT_CLASSIFICATION	1.1559975758423981E-4	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999999478787308	WITHOUT_CLASSIFICATION	5.212126930690815E-8	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9998740477913045	WITHOUT_CLASSIFICATION	1.2595220869558005E-4	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999999860808199	WITHOUT_CLASSIFICATION	1.391918011720525E-8	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999979732716604	WITHOUT_CLASSIFICATION	2.026728339671606E-6	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9999964337808498	WITHOUT_CLASSIFICATION	3.5662191501171485E-6	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999999260135893	WITHOUT_CLASSIFICATION	7.398641059144145E-8	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999986925586472	WITHOUT_CLASSIFICATION	1.3074413528402603E-6	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999999796532291	WITHOUT_CLASSIFICATION	2.0346770968901864E-8	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999990143004124	WITHOUT_CLASSIFICATION	9.856995876696283E-7	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999125154573565	WITHOUT_CLASSIFICATION	8.748454264355995E-5	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9999962073014431	WITHOUT_CLASSIFICATION	3.792698556918703E-6	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.999997832939082	WITHOUT_CLASSIFICATION	2.167060918165887E-6	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999992338404029	WITHOUT_CLASSIFICATION	7.661595972228317E-7	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999984705689703	WITHOUT_CLASSIFICATION	1.5294310297555967E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999999985493211	WITHOUT_CLASSIFICATION	1.450678883873745E-9	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.999999851899852	WITHOUT_CLASSIFICATION	1.481001481068696E-7	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999998309382607	WITHOUT_CLASSIFICATION	1.6906173929110557E-7	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999995730377415	WITHOUT_CLASSIFICATION	4.269622585163554E-7	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999992190484321	WITHOUT_CLASSIFICATION	7.809515679077316E-7	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999999977816388	WITHOUT_CLASSIFICATION	2.2183611123461605E-9	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999987758589053	WITHOUT_CLASSIFICATION	1.2241410947394533E-6	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999996031134198	WITHOUT_CLASSIFICATION	3.968865802547038E-7	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.999991469914372	WITHOUT_CLASSIFICATION	8.530085627943512E-6	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999997196098335	WITHOUT_CLASSIFICATION	2.80390166517854E-7	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999999992131292	WITHOUT_CLASSIFICATION	7.868706991142452E-10	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999997265591047	WITHOUT_CLASSIFICATION	2.7344089523108934E-7	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9999873783083834	WITHOUT_CLASSIFICATION	1.2621691616688285E-5	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9999704163753411	WITHOUT_CLASSIFICATION	2.9583624658930773E-5	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999999985038742	WITHOUT_CLASSIFICATION	1.4961257837854224E-9	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999999993146061	WITHOUT_CLASSIFICATION	6.85393809056501E-10	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999998862572286	WITHOUT_CLASSIFICATION	1.1374277148945961E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999925401107691	WITHOUT_CLASSIFICATION	7.459889230922136E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999105058777762	WITHOUT_CLASSIFICATION	8.949412222391715E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999417790775663	WITHOUT_CLASSIFICATION	5.822092243377332E-5	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999783133106224	WITHOUT_CLASSIFICATION	2.168668937754994E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999999612802596	WITHOUT_CLASSIFICATION	3.871974050898567E-8	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999997130496032	WITHOUT_CLASSIFICATION	2.869503968276956E-7	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9999998351079509	WITHOUT_CLASSIFICATION	1.6489204914602063E-7	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999985606580408	WITHOUT_CLASSIFICATION	1.4393419591351373E-6	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999992782735165	WITHOUT_CLASSIFICATION	7.217264833758115E-7	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999996317170795	WITHOUT_CLASSIFICATION	3.682829205370166E-7	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9999995113335448	WITHOUT_CLASSIFICATION	4.886664552174041E-7	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999997505826258	WITHOUT_CLASSIFICATION	2.494173742680376E-7	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999966224915522	WITHOUT_CLASSIFICATION	3.3775084477744152E-6	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999999835883673	WITHOUT_CLASSIFICATION	1.6411632739138284E-8	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999993127107525	WITHOUT_CLASSIFICATION	6.87289247645963E-7	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999917159887829	WITHOUT_CLASSIFICATION	8.284011217077272E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999917159887829	WITHOUT_CLASSIFICATION	8.284011217077272E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999994553095757	WITHOUT_CLASSIFICATION	5.446904242672812E-7	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.999998117384239	WITHOUT_CLASSIFICATION	1.882615761009765E-6	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999903414439	WITHOUT_CLASSIFICATION	9.658556116805674E-9	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999997967665724	WITHOUT_CLASSIFICATION	2.0323342775713998E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.999999958334735	WITHOUT_CLASSIFICATION	4.166526503745827E-8	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999560082689	WITHOUT_CLASSIFICATION	4.3991731188101564E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999778242684	WITHOUT_CLASSIFICATION	2.2175731595250885E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999999000948515	WITHOUT_CLASSIFICATION	9.990514851006846E-8	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999948886612869	WITHOUT_CLASSIFICATION	5.111338713121647E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999986069353	WITHOUT_CLASSIFICATION	1.393064576588806E-9	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998823539616	WITHOUT_CLASSIFICATION	1.1764603840366092E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999999672851766	WITHOUT_CLASSIFICATION	3.2714823390369983E-7	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999921312238	WITHOUT_CLASSIFICATION	7.86877620672855E-9	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999451334178571	WITHOUT_CLASSIFICATION	5.4866582142865996E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999999199407705	WITHOUT_CLASSIFICATION	8.005922949029356E-8	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999989517250586	WITHOUT_CLASSIFICATION	1.0482749414073223E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999995192748101	WITHOUT_CLASSIFICATION	4.80725189998178E-7	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9993959664467159	WITHOUT_CLASSIFICATION	6.040335532840244E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999996389991391	WITHOUT_CLASSIFICATION	3.6100086094604423E-7	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999996466704916	WITHOUT_CLASSIFICATION	3.533295085272403E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999961794859639	WITHOUT_CLASSIFICATION	3.820514036132768E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999994672972011	WITHOUT_CLASSIFICATION	5.327027988437383E-7	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.999999734605281	WITHOUT_CLASSIFICATION	2.6539471890674124E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999777570661318	WITHOUT_CLASSIFICATION	2.224293386812927E-5	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999997587101238	WITHOUT_CLASSIFICATION	2.412898762427849E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.99999595268728	WITHOUT_CLASSIFICATION	4.0473127199298536E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999996204943039	WITHOUT_CLASSIFICATION	3.795056961419636E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999999381778382	WITHOUT_CLASSIFICATION	6.182216180087692E-8	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999965044710728	WITHOUT_CLASSIFICATION	3.4955289270829947E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999997367225186	WITHOUT_CLASSIFICATION	2.632774813407338E-7	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999997981996341	WITHOUT_CLASSIFICATION	2.0180036585400998E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999996405516228	WITHOUT_CLASSIFICATION	3.5944837713627955E-7	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999975738053675	WITHOUT_CLASSIFICATION	2.4261946325997037E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999999508168753	WITHOUT_CLASSIFICATION	4.918312471800206E-8	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999999080920812	WITHOUT_CLASSIFICATION	9.190791885918825E-8	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999205483453052	WITHOUT_CLASSIFICATION	7.945165469484385E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999906302749407	WITHOUT_CLASSIFICATION	9.369725059345488E-6	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999998759547293	WITHOUT_CLASSIFICATION	1.240452708323701E-7	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999795508719	WITHOUT_CLASSIFICATION	2.0449128060433297E-8	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999993022382365	WITHOUT_CLASSIFICATION	6.977617635027722E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999985561722353	WITHOUT_CLASSIFICATION	1.4438277646479668E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999995103987185	WITHOUT_CLASSIFICATION	4.896012814578958E-7	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999968835970888	WITHOUT_CLASSIFICATION	3.1164029112096877E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999949155913782	WITHOUT_CLASSIFICATION	5.084408621866496E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999996450703635	WITHOUT_CLASSIFICATION	3.5492963655406275E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9999905333714443	WITHOUT_CLASSIFICATION	9.466628555802037E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999994553095757	WITHOUT_CLASSIFICATION	5.446904242672812E-7	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.999998117384239	WITHOUT_CLASSIFICATION	1.882615761009765E-6	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999903414439	WITHOUT_CLASSIFICATION	9.658556116805674E-9	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999997967665724	WITHOUT_CLASSIFICATION	2.0323342775713998E-7	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999778242684	WITHOUT_CLASSIFICATION	2.2175731595250885E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999999000948515	WITHOUT_CLASSIFICATION	9.990514851006846E-8	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9999926194710306	WITHOUT_CLASSIFICATION	7.380528969381437E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999994156312888	WITHOUT_CLASSIFICATION	5.843687111605908E-7	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999998880782656	WITHOUT_CLASSIFICATION	1.1192173449929649E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998823539616	WITHOUT_CLASSIFICATION	1.1764603840366092E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999999672851766	WITHOUT_CLASSIFICATION	3.2714823390369983E-7	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999921312238	WITHOUT_CLASSIFICATION	7.86877620672855E-9	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999451334178571	WITHOUT_CLASSIFICATION	5.4866582142865996E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999989517250586	WITHOUT_CLASSIFICATION	1.0482749414073223E-6	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999995799793501	WITHOUT_CLASSIFICATION	4.2002064997252977E-7	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999996609440481	WITHOUT_CLASSIFICATION	3.3905595188891634E-7	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999999215084506	WITHOUT_CLASSIFICATION	7.849154933831628E-8	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9999081648082028	WITHOUT_CLASSIFICATION	9.183519179720819E-5	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999971673613915	WITHOUT_CLASSIFICATION	2.832638608560549E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.999999972544684	WITHOUT_CLASSIFICATION	2.7455316029979942E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999998062697032	WITHOUT_CLASSIFICATION	1.9373029676898647E-7	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999995747009434	WITHOUT_CLASSIFICATION	4.2529905664781624E-7	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999999376241502	WITHOUT_CLASSIFICATION	6.237584981785163E-8	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999994916686755	WITHOUT_CLASSIFICATION	5.083313245376426E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999999376241502	WITHOUT_CLASSIFICATION	6.237584981785163E-8	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9999936529776926	WITHOUT_CLASSIFICATION	6.347022307434994E-6	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999995443692877	WITHOUT_CLASSIFICATION	4.5563071232875583E-7	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999972160293897	WITHOUT_CLASSIFICATION	2.7839706102752364E-6	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999972160293897	WITHOUT_CLASSIFICATION	2.7839706102752364E-6	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999972675674731	WITHOUT_CLASSIFICATION	2.732432526903713E-6	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999995315793818	WITHOUT_CLASSIFICATION	4.6842061818374244E-7	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999990770886759	WITHOUT_CLASSIFICATION	9.229113242107803E-7	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999915957262503	WITHOUT_CLASSIFICATION	8.40427374970594E-6	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9999381833057891	WITHOUT_CLASSIFICATION	6.18166942108938E-5	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999999992741605	WITHOUT_CLASSIFICATION	7.258395533249948E-10	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.999996675811346	WITHOUT_CLASSIFICATION	3.324188654065747E-6	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999999986749148	WITHOUT_CLASSIFICATION	1.3250851846510507E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.999999726970847	WITHOUT_CLASSIFICATION	2.730291530202386E-7	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999998826278041	WITHOUT_CLASSIFICATION	1.1737219581767036E-7	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999986042805198	WITHOUT_CLASSIFICATION	1.3957194802833827E-6	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.999999788316759	WITHOUT_CLASSIFICATION	2.116832411265688E-7	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999968398644936	WITHOUT_CLASSIFICATION	3.1601355064800126E-6	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999968398644936	WITHOUT_CLASSIFICATION	3.1601355064800126E-6	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999999064760696	WITHOUT_CLASSIFICATION	9.352393038224869E-8	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999999599251077	WITHOUT_CLASSIFICATION	4.007489240420035E-8	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9999981485381891	WITHOUT_CLASSIFICATION	1.85146181092827E-6	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9999854031953197	WITHOUT_CLASSIFICATION	1.4596804680264404E-5	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9999867131267616	WITHOUT_CLASSIFICATION	1.3286873238425161E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999990564035781	WITHOUT_CLASSIFICATION	9.435964219724135E-7	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999996504608596	WITHOUT_CLASSIFICATION	3.495391404628864E-7	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.99999999027399	WITHOUT_CLASSIFICATION	9.726009926976559E-9	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999950431162	WITHOUT_CLASSIFICATION	4.9568838258304835E-9	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999999598304423	WITHOUT_CLASSIFICATION	4.016955765251573E-8	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999999329690509	WITHOUT_CLASSIFICATION	6.703094913441292E-8	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999741537988706	WITHOUT_CLASSIFICATION	2.5846201129364404E-5	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999721755197722	WITHOUT_CLASSIFICATION	2.782448022778296E-5	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9944835029246758	WITHOUT_CLASSIFICATION	0.005516497075324144	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999646742892858	WITHOUT_CLASSIFICATION	3.532571071417447E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999106645803	WITHOUT_CLASSIFICATION	8.933541973223417E-8	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999999812494855	WITHOUT_CLASSIFICATION	1.875051447548709E-8	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999998407521864	WITHOUT_CLASSIFICATION	1.592478136289559E-7	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999948419679394	WITHOUT_CLASSIFICATION	5.158032060663228E-6	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9996306128258285	WITHOUT_CLASSIFICATION	3.693871741715362E-4	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999995426686811	WITHOUT_CLASSIFICATION	4.5733131897014775E-7	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9999859360891098	WITHOUT_CLASSIFICATION	1.4063910890219298E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999998100237418	WITHOUT_CLASSIFICATION	1.8997625818127256E-7	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999995380377233	WITHOUT_CLASSIFICATION	4.6196227669141763E-7	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999991827832043	WITHOUT_CLASSIFICATION	8.172167956728395E-7	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999722885657	WITHOUT_CLASSIFICATION	2.771143427588122E-8	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999722885657	WITHOUT_CLASSIFICATION	2.771143427588122E-8	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9987983510455017	WITHOUT_CLASSIFICATION	0.0012016489544982893	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999947807805233	WITHOUT_CLASSIFICATION	5.219219476765256E-6	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999905260097	WITHOUT_CLASSIFICATION	9.473990344624971E-9	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999942543567606	WITHOUT_CLASSIFICATION	5.745643239332286E-6	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999914533731527	WITHOUT_CLASSIFICATION	8.546626847367737E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999908010348108	WITHOUT_CLASSIFICATION	9.198965189201523E-6	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999978486893941	WITHOUT_CLASSIFICATION	2.1513106058933774E-6	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9999775621797838	WITHOUT_CLASSIFICATION	2.2437820216151575E-5	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.99999926835446	WITHOUT_CLASSIFICATION	7.316455400750262E-7	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9998880665143753	WITHOUT_CLASSIFICATION	1.1193348562464236E-4	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999870068424707	WITHOUT_CLASSIFICATION	1.2993157529314084E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999997985403978	WITHOUT_CLASSIFICATION	2.0145960225091526E-7	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.999999668547139	WITHOUT_CLASSIFICATION	3.3145286097127936E-7	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.999973403991541	WITHOUT_CLASSIFICATION	2.659600845889821E-5	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999999983650137	WITHOUT_CLASSIFICATION	1.6349863727716464E-9	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999993423562001	WITHOUT_CLASSIFICATION	6.57643799812134E-7	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.999999997741947	WITHOUT_CLASSIFICATION	2.258053019098804E-9	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9999708223066188	WITHOUT_CLASSIFICATION	2.9177693381097803E-5	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.999898020100024	WITHOUT_CLASSIFICATION	1.0197989997600837E-4	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999940152195396	WITHOUT_CLASSIFICATION	5.984780460446046E-6	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999999246286427	WITHOUT_CLASSIFICATION	7.537135726808544E-8	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999997523049535	WITHOUT_CLASSIFICATION	2.476950465632735E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.99999595268728	WITHOUT_CLASSIFICATION	4.0473127199298536E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999997164697568	WITHOUT_CLASSIFICATION	2.8353024321775383E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999995103987185	WITHOUT_CLASSIFICATION	4.896012814578958E-7	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.999999972544684	WITHOUT_CLASSIFICATION	2.7455316029979942E-8	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.999997001967002	WITHOUT_CLASSIFICATION	2.9980329980237707E-6	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999993962729857	WITHOUT_CLASSIFICATION	6.03727014333387E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999994672972011	WITHOUT_CLASSIFICATION	5.327027988437383E-7	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999959179849888	WITHOUT_CLASSIFICATION	4.082015011162025E-6	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9999982743730222	WITHOUT_CLASSIFICATION	1.725626977811799E-6	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999996649619747	WITHOUT_CLASSIFICATION	3.350380253714045E-7	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999732702515101	WITHOUT_CLASSIFICATION	2.672974848993245E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999995103987185	WITHOUT_CLASSIFICATION	4.896012814578958E-7	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999915615538549	WITHOUT_CLASSIFICATION	8.438446145041419E-6	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999858345932875	WITHOUT_CLASSIFICATION	1.4165406712589682E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999628358024147	WITHOUT_CLASSIFICATION	3.716419758519125E-5	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999999154939777	WITHOUT_CLASSIFICATION	8.450602231733633E-8	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999974055613823	WITHOUT_CLASSIFICATION	2.5944386176826805E-6	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9999800855906037	WITHOUT_CLASSIFICATION	1.991440939630708E-5	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999999953268652	WITHOUT_CLASSIFICATION	4.673134816595285E-9	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.999995980200418	WITHOUT_CLASSIFICATION	4.019799581943819E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999971232756182	WITHOUT_CLASSIFICATION	2.8767243818892247E-6	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9933834231489276	WITHOUT_CLASSIFICATION	0.006616576851072416	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999020413027	WITHOUT_CLASSIFICATION	9.795869735254735E-8	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999020413027	WITHOUT_CLASSIFICATION	9.795869735254735E-8	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999020413027	WITHOUT_CLASSIFICATION	9.795869735254735E-8	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999504803042373	WITHOUT_CLASSIFICATION	4.9519695762722905E-5	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9998837826028422	WITHOUT_CLASSIFICATION	1.1621739715784558E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999936154052446	WITHOUT_CLASSIFICATION	6.384594755338983E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999977289532147	WITHOUT_CLASSIFICATION	2.2710467852946397E-6	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999998962601083	WITHOUT_CLASSIFICATION	1.0373989157255472E-7	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.999998659259814	WITHOUT_CLASSIFICATION	1.3407401860699075E-6	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.9999986202893931	WITHOUT_CLASSIFICATION	1.3797106068695734E-6	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9999917428397377	WITHOUT_CLASSIFICATION	8.257160262250222E-6	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999726363637975	WITHOUT_CLASSIFICATION	2.7363636202472115E-5	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999993289905547	WITHOUT_CLASSIFICATION	6.710094454107828E-7	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999999999939289	WITHOUT_CLASSIFICATION	6.071117332818273E-12	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999764798753	WITHOUT_CLASSIFICATION	2.3520124741344588E-8	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999947165536553	WITHOUT_CLASSIFICATION	5.2834463446278315E-6	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999991589088637	WITHOUT_CLASSIFICATION	8.41091136393182E-7	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999278836537804	WITHOUT_CLASSIFICATION	7.21163462195272E-5	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999999986447924	WITHOUT_CLASSIFICATION	1.3552076164395364E-9	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.999997920432798	WITHOUT_CLASSIFICATION	2.07956720201699E-6	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999991650331893	WITHOUT_CLASSIFICATION	8.349668105850821E-7	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999763520497	WITHOUT_CLASSIFICATION	2.3647950289650763E-8	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999998050289572	WITHOUT_CLASSIFICATION	1.9497104274649334E-7	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999999999997328	WITHOUT_CLASSIFICATION	2.6724545804302495E-13	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999997944844177	WITHOUT_CLASSIFICATION	2.0551558229727965E-6	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999860667266175	WITHOUT_CLASSIFICATION	1.3933273382519617E-5	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999555430468	WITHOUT_CLASSIFICATION	4.445695335787974E-8	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999200425698	WITHOUT_CLASSIFICATION	7.995743026281061E-8	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.999999797347548	WITHOUT_CLASSIFICATION	2.0265245207713506E-7	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.999999568670173	WITHOUT_CLASSIFICATION	4.3132982684866586E-7	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999990463648087	WITHOUT_CLASSIFICATION	9.536351911807237E-7	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.999993834897897	WITHOUT_CLASSIFICATION	6.165102103010247E-6	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.999999966198409	WITHOUT_CLASSIFICATION	3.380159098929524E-8	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999999347571344	WITHOUT_CLASSIFICATION	6.524286552838503E-8	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999890636183798	WITHOUT_CLASSIFICATION	1.0936381620269763E-5	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999476169723	WITHOUT_CLASSIFICATION	5.2383027696895396E-8	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9999999645395337	WITHOUT_CLASSIFICATION	3.546046633210635E-8	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9999999899642135	WITHOUT_CLASSIFICATION	1.0035786669320567E-8	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9999998820758417	WITHOUT_CLASSIFICATION	1.1792415822347053E-7	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.999987267818345	WITHOUT_CLASSIFICATION	1.2732181654972554E-5	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9999971956562345	WITHOUT_CLASSIFICATION	2.8043437654769836E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999929301992365	WITHOUT_CLASSIFICATION	7.069800763507401E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999929301992365	WITHOUT_CLASSIFICATION	7.069800763507401E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999999848949609	WITHOUT_CLASSIFICATION	1.5105039088650223E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999999848949609	WITHOUT_CLASSIFICATION	1.5105039088650223E-7	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999984645692934	WITHOUT_CLASSIFICATION	1.535430706533191E-6	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999868232850317	WITHOUT_CLASSIFICATION	1.3176714968160853E-5	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999916517340687	WITHOUT_CLASSIFICATION	8.348265931318418E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999998874766532	WITHOUT_CLASSIFICATION	1.1252334675193347E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999998874766532	WITHOUT_CLASSIFICATION	1.1252334675193347E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999998874766532	WITHOUT_CLASSIFICATION	1.1252334675193347E-7	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.999999701534213	WITHOUT_CLASSIFICATION	2.984657869782502E-7	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999998812625174	WITHOUT_CLASSIFICATION	1.1873748260844903E-7	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9998844002424159	WITHOUT_CLASSIFICATION	1.1559975758423981E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999995862710551	WITHOUT_CLASSIFICATION	4.1372894480710426E-7	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999997384111685	WITHOUT_CLASSIFICATION	2.6158883147939E-7	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9999997322408462	WITHOUT_CLASSIFICATION	2.6775915394616943E-7	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999995098686869	WITHOUT_CLASSIFICATION	4.901313130919237E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999970434591187	WITHOUT_CLASSIFICATION	2.9565408812865957E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999970434591187	WITHOUT_CLASSIFICATION	2.9565408812865957E-6	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999999992735703	WITHOUT_CLASSIFICATION	7.264296341421201E-10	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999999645396113	WITHOUT_CLASSIFICATION	3.54603887089246E-8	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9999999160633042	WITHOUT_CLASSIFICATION	8.393669591151148E-8	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.999999993299291	WITHOUT_CLASSIFICATION	6.700708919576057E-9	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999999836677674	WITHOUT_CLASSIFICATION	1.633223260652007E-8	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999911175477735	WITHOUT_CLASSIFICATION	8.882452226588957E-6	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9999997453469869	WITHOUT_CLASSIFICATION	2.5465301317722E-7	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999917159887829	WITHOUT_CLASSIFICATION	8.284011217077272E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.999999958334735	WITHOUT_CLASSIFICATION	4.166526503745827E-8	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999560082689	WITHOUT_CLASSIFICATION	4.3991731188101564E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999986069353	WITHOUT_CLASSIFICATION	1.393064576588806E-9	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999999199407705	WITHOUT_CLASSIFICATION	8.005922949029356E-8	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999991561087072	WITHOUT_CLASSIFICATION	8.438912927028982E-7	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999999965802678	WITHOUT_CLASSIFICATION	3.419732298406018E-9	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.999999957047158	WITHOUT_CLASSIFICATION	4.295284191603572E-8	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999998062697032	WITHOUT_CLASSIFICATION	1.9373029676898647E-7	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9999937771935152	WITHOUT_CLASSIFICATION	6.222806484732818E-6	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9999945484584067	WITHOUT_CLASSIFICATION	5.451541593263956E-6	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999999064760696	WITHOUT_CLASSIFICATION	9.352393038224869E-8	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999316019662	WITHOUT_CLASSIFICATION	6.839803373568132E-8	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999435595648826	WITHOUT_CLASSIFICATION	5.64404351174404E-5	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999999973680724	WITHOUT_CLASSIFICATION	2.6319276787874323E-9	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.999999989712021	WITHOUT_CLASSIFICATION	1.0287979098035195E-8	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9999652465325042	WITHOUT_CLASSIFICATION	3.47534674958143E-5	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999998718985074	WITHOUT_CLASSIFICATION	1.2810149262147027E-7	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999999448444873	WITHOUT_CLASSIFICATION	5.51555125933962E-8	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9999993986940027	WITHOUT_CLASSIFICATION	6.013059973233217E-7	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999999991074395	WITHOUT_CLASSIFICATION	8.925603709778339E-10	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999775634986	WITHOUT_CLASSIFICATION	2.2436501412071157E-8	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999775634986	WITHOUT_CLASSIFICATION	2.2436501412071157E-8	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9999999882070411	WITHOUT_CLASSIFICATION	1.1792958829419122E-8	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999971631498062	WITHOUT_CLASSIFICATION	2.8368501937614957E-6	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999999894548348	WITHOUT_CLASSIFICATION	1.0545165246707598E-8	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999984776763784	WITHOUT_CLASSIFICATION	1.5223236216003071E-6	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999984776763784	WITHOUT_CLASSIFICATION	1.5223236216003071E-6	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999999215409808	WITHOUT_CLASSIFICATION	7.845901921187381E-8	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9998610565353921	WITHOUT_CLASSIFICATION	1.389434646079174E-4	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999999073961892	WITHOUT_CLASSIFICATION	9.260381085079875E-8	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999999971633299	WITHOUT_CLASSIFICATION	2.8366701880282836E-9	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999948980813478	WITHOUT_CLASSIFICATION	5.10191865219969E-6	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999999980032174	WITHOUT_CLASSIFICATION	1.9967825563908704E-9	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.999999986529408	WITHOUT_CLASSIFICATION	1.3470592083782328E-8	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999989998811033	WITHOUT_CLASSIFICATION	1.0001188967366888E-6	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9999999903223888	WITHOUT_CLASSIFICATION	9.677611221540308E-9	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9999972012932107	WITHOUT_CLASSIFICATION	2.7987067893035562E-6	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999962069384	WITHOUT_CLASSIFICATION	3.79306165944107E-9	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999980732336937	WITHOUT_CLASSIFICATION	1.9267663063346545E-6	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999921805006371	WITHOUT_CLASSIFICATION	7.8194993628731E-6	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999716399628	WITHOUT_CLASSIFICATION	2.836003723896257E-8	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999836226858481	WITHOUT_CLASSIFICATION	1.6377314151930607E-5	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999998041808628	WITHOUT_CLASSIFICATION	1.9581913739065335E-7	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999983163252235	WITHOUT_CLASSIFICATION	1.683674776408048E-6	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999984982607	WITHOUT_CLASSIFICATION	1.501739188922351E-9	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999997013203039	WITHOUT_CLASSIFICATION	2.9867969607600933E-7	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999998154583333	WITHOUT_CLASSIFICATION	1.845416667283668E-7	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999979177857157	WITHOUT_CLASSIFICATION	2.0822142842739053E-6	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9999966102216035	WITHOUT_CLASSIFICATION	3.389778396389776E-6	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9999986494410503	WITHOUT_CLASSIFICATION	1.3505589496005526E-6	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9999898318144581	WITHOUT_CLASSIFICATION	1.0168185541784792E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999990456821762	WITHOUT_CLASSIFICATION	9.543178237116969E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999990456821762	WITHOUT_CLASSIFICATION	9.543178237116969E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999990456821762	WITHOUT_CLASSIFICATION	9.543178237116969E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999990456821762	WITHOUT_CLASSIFICATION	9.543178237116969E-7	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999999331502796	WITHOUT_CLASSIFICATION	6.684972035791467E-8	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999815326198914	WITHOUT_CLASSIFICATION	1.8467380108572697E-5	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999937426154437	WITHOUT_CLASSIFICATION	6.2573845563602294E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999937426154437	WITHOUT_CLASSIFICATION	6.2573845563602294E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999937426154437	WITHOUT_CLASSIFICATION	6.2573845563602294E-6	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999999918292415	WITHOUT_CLASSIFICATION	8.170758558968224E-9	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999984066144105	WITHOUT_CLASSIFICATION	1.5933855894102282E-6	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999984966359617	WITHOUT_CLASSIFICATION	1.5033640382597243E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999992111252016	WITHOUT_CLASSIFICATION	7.888747984616676E-7	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999992111252016	WITHOUT_CLASSIFICATION	7.888747984616676E-7	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999888644138327	WITHOUT_CLASSIFICATION	1.1135586167187284E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999888644138327	WITHOUT_CLASSIFICATION	1.1135586167187284E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999888644138327	WITHOUT_CLASSIFICATION	1.1135586167187284E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999888644138327	WITHOUT_CLASSIFICATION	1.1135586167187284E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999888644138327	WITHOUT_CLASSIFICATION	1.1135586167187284E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999888644138327	WITHOUT_CLASSIFICATION	1.1135586167187284E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999888644138327	WITHOUT_CLASSIFICATION	1.1135586167187284E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999888644138327	WITHOUT_CLASSIFICATION	1.1135586167187284E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999888644138327	WITHOUT_CLASSIFICATION	1.1135586167187284E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999888644138327	WITHOUT_CLASSIFICATION	1.1135586167187284E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999888644138327	WITHOUT_CLASSIFICATION	1.1135586167187284E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999888644138327	WITHOUT_CLASSIFICATION	1.1135586167187284E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999888644138327	WITHOUT_CLASSIFICATION	1.1135586167187284E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999948419679394	WITHOUT_CLASSIFICATION	5.158032060663228E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999948419679394	WITHOUT_CLASSIFICATION	5.158032060663228E-6	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9981900300957947	WITHOUT_CLASSIFICATION	0.0018099699042053836	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9981900300957947	WITHOUT_CLASSIFICATION	0.0018099699042053836	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999805042553337	WITHOUT_CLASSIFICATION	1.9495744666290974E-5	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999993883233916	WITHOUT_CLASSIFICATION	6.116766084676037E-7	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999942592671238	WITHOUT_CLASSIFICATION	5.740732876273411E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999954910828517	WITHOUT_CLASSIFICATION	4.508917148356798E-6	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.99999866782827	WITHOUT_CLASSIFICATION	1.3321717300399963E-6	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999950595178825	WITHOUT_CLASSIFICATION	4.940482117569257E-6	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999635354753706	WITHOUT_CLASSIFICATION	3.6464524629323865E-5	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999998072204123	WITHOUT_CLASSIFICATION	1.927795877063812E-7	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999999563453226	WITHOUT_CLASSIFICATION	4.3654677431472895E-8	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999952446831962	WITHOUT_CLASSIFICATION	4.75531680387667E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999975788359746	WITHOUT_CLASSIFICATION	2.4211640253957567E-6	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999894562976913	WITHOUT_CLASSIFICATION	1.0543702308707562E-5	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999998870334043	WITHOUT_CLASSIFICATION	1.1296659576287559E-7	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999967097653628	WITHOUT_CLASSIFICATION	3.2902346370960286E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999977024040335	WITHOUT_CLASSIFICATION	2.297595966490959E-6	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9999918750926892	WITHOUT_CLASSIFICATION	8.124907310806148E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.999998668750662	WITHOUT_CLASSIFICATION	1.3312493380601585E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999953071979868	WITHOUT_CLASSIFICATION	4.6928020131526105E-6	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.999992700000598	WITHOUT_CLASSIFICATION	7.299999402087751E-6	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999999499692283	WITHOUT_CLASSIFICATION	5.003077172187073E-8	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999858701713666	WITHOUT_CLASSIFICATION	1.4129828633336926E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999858701713666	WITHOUT_CLASSIFICATION	1.4129828633336926E-5	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999983268250073	WITHOUT_CLASSIFICATION	1.6731749925701544E-6	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9999734475763541	WITHOUT_CLASSIFICATION	2.6552423645928934E-5	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9993356190218808	WITHOUT_CLASSIFICATION	6.643809781192592E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9991969773666526	WITHOUT_CLASSIFICATION	8.030226333475183E-4	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9990429449318677	WITHOUT_CLASSIFICATION	9.57055068132318E-4	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9993073664127797	WITHOUT_CLASSIFICATION	6.926335872201942E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9993914148482047	WITHOUT_CLASSIFICATION	6.085851517953391E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9992980706267544	WITHOUT_CLASSIFICATION	7.019293732456763E-4	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.999379337580328	WITHOUT_CLASSIFICATION	6.206624196718775E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9991858153921364	WITHOUT_CLASSIFICATION	8.141846078635638E-4	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9993616893649312	WITHOUT_CLASSIFICATION	6.38310635068798E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9994893890003876	WITHOUT_CLASSIFICATION	5.106109996123759E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9991909234092413	WITHOUT_CLASSIFICATION	8.090765907586794E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9982319346116931	WITHOUT_CLASSIFICATION	0.0017680653883068	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9991013344457986	WITHOUT_CLASSIFICATION	8.986655542012955E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9992005091458889	WITHOUT_CLASSIFICATION	7.994908541111612E-4	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999998505005461	WITHOUT_CLASSIFICATION	1.494994538753281E-7	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999832532386771	WITHOUT_CLASSIFICATION	1.674676132289435E-5	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999956861033644	WITHOUT_CLASSIFICATION	4.31389663554954E-6	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999999827321779	WITHOUT_CLASSIFICATION	1.726782206752348E-8	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999913659336924	WITHOUT_CLASSIFICATION	8.634066307609723E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999913659336924	WITHOUT_CLASSIFICATION	8.634066307609723E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999913659336924	WITHOUT_CLASSIFICATION	8.634066307609723E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999913659336924	WITHOUT_CLASSIFICATION	8.634066307609723E-6	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9874208767723986	WITHOUT_CLASSIFICATION	0.012579123227601423	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999078372928	WITHOUT_CLASSIFICATION	9.216270725834771E-8	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999999988123759	WITHOUT_CLASSIFICATION	1.187624192518985E-9	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999998072633604	WITHOUT_CLASSIFICATION	1.927366397113436E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999998072633604	WITHOUT_CLASSIFICATION	1.927366397113436E-7	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999912642902712	WITHOUT_CLASSIFICATION	8.735709728870941E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999989441702154	WITHOUT_CLASSIFICATION	1.055829784550981E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999989441702154	WITHOUT_CLASSIFICATION	1.055829784550981E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999984245633587	WITHOUT_CLASSIFICATION	1.5754366411894487E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999984245633587	WITHOUT_CLASSIFICATION	1.5754366411894487E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999976481642245	WITHOUT_CLASSIFICATION	2.35183577541644E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999916234571158	WITHOUT_CLASSIFICATION	8.376542884218781E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999970244262726	WITHOUT_CLASSIFICATION	2.9755737274718804E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999990498198843	WITHOUT_CLASSIFICATION	9.501801156332718E-7	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999998385907705	WITHOUT_CLASSIFICATION	1.6140922958567428E-7	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999606186966	WITHOUT_CLASSIFICATION	3.938130343247701E-8	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.999999769331042	WITHOUT_CLASSIFICATION	2.3066895802927488E-7	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999471282235043	WITHOUT_CLASSIFICATION	5.28717764957532E-5	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9999875357882176	WITHOUT_CLASSIFICATION	1.246421178225594E-5	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9999875357882176	WITHOUT_CLASSIFICATION	1.246421178225594E-5	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999995513897011	WITHOUT_CLASSIFICATION	4.486102989113632E-7	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999999670290516	WITHOUT_CLASSIFICATION	3.297094842012929E-8	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999926068146758	WITHOUT_CLASSIFICATION	7.39318532419672E-6	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999965422559	WITHOUT_CLASSIFICATION	3.4577440019782406E-9	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999975556993362	WITHOUT_CLASSIFICATION	2.444300663869191E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999405004195	WITHOUT_CLASSIFICATION	5.949958036298331E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999405004195	WITHOUT_CLASSIFICATION	5.949958036298331E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999405004195	WITHOUT_CLASSIFICATION	5.949958036298331E-8	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999991590125	WITHOUT_CLASSIFICATION	8.409874894882648E-10	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999991590125	WITHOUT_CLASSIFICATION	8.409874894882648E-10	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999998213039076	WITHOUT_CLASSIFICATION	1.7869609224809618E-7	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.999999970859717	WITHOUT_CLASSIFICATION	2.9140282882705355E-8	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.999999970859717	WITHOUT_CLASSIFICATION	2.9140282882705355E-8	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9998164283529879	WITHOUT_CLASSIFICATION	1.835716470121134E-4	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999999392411242	WITHOUT_CLASSIFICATION	6.075887586690003E-8	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999942543567606	WITHOUT_CLASSIFICATION	5.745643239332286E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999963879580114	WITHOUT_CLASSIFICATION	3.612041988641401E-6	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999961976172115	WITHOUT_CLASSIFICATION	3.8023827885487766E-6	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999961976172115	WITHOUT_CLASSIFICATION	3.8023827885487766E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969393357235	WITHOUT_CLASSIFICATION	3.0606642764183748E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969393357235	WITHOUT_CLASSIFICATION	3.0606642764183748E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969393357235	WITHOUT_CLASSIFICATION	3.0606642764183748E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969393357235	WITHOUT_CLASSIFICATION	3.0606642764183748E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969393357235	WITHOUT_CLASSIFICATION	3.0606642764183748E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969393357235	WITHOUT_CLASSIFICATION	3.0606642764183748E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969393357235	WITHOUT_CLASSIFICATION	3.0606642764183748E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969393357235	WITHOUT_CLASSIFICATION	3.0606642764183748E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969393357235	WITHOUT_CLASSIFICATION	3.0606642764183748E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969393357235	WITHOUT_CLASSIFICATION	3.0606642764183748E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969393357235	WITHOUT_CLASSIFICATION	3.0606642764183748E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969393357235	WITHOUT_CLASSIFICATION	3.0606642764183748E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999895810374729	WITHOUT_CLASSIFICATION	1.0418962527126691E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999928084951313	WITHOUT_CLASSIFICATION	7.191504868718448E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999964480641427	WITHOUT_CLASSIFICATION	3.551935857383177E-6	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999949413739458	WITHOUT_CLASSIFICATION	5.058626054155812E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999954825150278	WITHOUT_CLASSIFICATION	4.5174849722387545E-6	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999967854064967	WITHOUT_CLASSIFICATION	3.2145935034086345E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965543247495	WITHOUT_CLASSIFICATION	3.4456752504760487E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965543247495	WITHOUT_CLASSIFICATION	3.4456752504760487E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965543247495	WITHOUT_CLASSIFICATION	3.4456752504760487E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965543247495	WITHOUT_CLASSIFICATION	3.4456752504760487E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999960015259407	WITHOUT_CLASSIFICATION	3.998474059283038E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999960015259407	WITHOUT_CLASSIFICATION	3.998474059283038E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999960015259407	WITHOUT_CLASSIFICATION	3.998474059283038E-6	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999931161567888	WITHOUT_CLASSIFICATION	6.8838432112554755E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999925800251424	WITHOUT_CLASSIFICATION	7.419974857722846E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999992533063691	WITHOUT_CLASSIFICATION	7.466936309036628E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999992533063691	WITHOUT_CLASSIFICATION	7.466936309036628E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999925166884776	WITHOUT_CLASSIFICATION	7.483311522462239E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999935161641796	WITHOUT_CLASSIFICATION	6.483835820358646E-6	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999913031237951	WITHOUT_CLASSIFICATION	8.6968762049823E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999981678997832	WITHOUT_CLASSIFICATION	1.8321002167804068E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999915088054143	WITHOUT_CLASSIFICATION	8.49119458579549E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999923818452	WITHOUT_CLASSIFICATION	7.618154669231898E-9	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.999965522432441	WITHOUT_CLASSIFICATION	3.447756755909526E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999978308299803	WITHOUT_CLASSIFICATION	2.169170019725131E-6	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999981504162537	WITHOUT_CLASSIFICATION	1.8495837462653498E-6	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999966011533503	WITHOUT_CLASSIFICATION	3.3988466496193756E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9999998957701131	WITHOUT_CLASSIFICATION	1.0422988695383223E-7	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9998009516492476	WITHOUT_CLASSIFICATION	1.9904835075248674E-4	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999994049436867	WITHOUT_CLASSIFICATION	5.950563132716164E-7	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999998720768648	WITHOUT_CLASSIFICATION	1.2792313526086922E-7	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9999582768644413	WITHOUT_CLASSIFICATION	4.1723135558734566E-5	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9999928287549941	WITHOUT_CLASSIFICATION	7.171245005989592E-6	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999994383859158	WITHOUT_CLASSIFICATION	5.616140842801638E-7	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999996446430411	WITHOUT_CLASSIFICATION	3.553569588771599E-7	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999997425706282	WITHOUT_CLASSIFICATION	2.5742937178132764E-7	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999999812422975	WITHOUT_CLASSIFICATION	1.8757702451401314E-8	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9999759589494955	WITHOUT_CLASSIFICATION	2.404105050447147E-5	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9999674805669121	WITHOUT_CLASSIFICATION	3.251943308786443E-5	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999926426695529	WITHOUT_CLASSIFICATION	7.357330447162299E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999923818452	WITHOUT_CLASSIFICATION	7.618154669231898E-9	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999952802687629	WITHOUT_CLASSIFICATION	4.719731236970705E-6	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999994362919654	WITHOUT_CLASSIFICATION	5.637080345241692E-7	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999995962978036	WITHOUT_CLASSIFICATION	4.03702196406408E-7	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9999968810417127	WITHOUT_CLASSIFICATION	3.118958287263747E-6	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9999727113415599	WITHOUT_CLASSIFICATION	2.7288658440084276E-5	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9998196274774379	WITHOUT_CLASSIFICATION	1.8037252256206717E-4	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9998577870194346	WITHOUT_CLASSIFICATION	1.4221298056537736E-4	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999990219468821	WITHOUT_CLASSIFICATION	9.780531179614615E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999732376750372	WITHOUT_CLASSIFICATION	2.6762324962780845E-5	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9998740727510999	WITHOUT_CLASSIFICATION	1.2592724890014687E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999608689404	WITHOUT_CLASSIFICATION	3.9131059510442525E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999999933854989	WITHOUT_CLASSIFICATION	6.61450109974598E-8	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995921493732	WITHOUT_CLASSIFICATION	4.0785062686189873E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999491288915	WITHOUT_CLASSIFICATION	5.087110854762849E-8	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999980959634269	WITHOUT_CLASSIFICATION	1.9040365729997778E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999476523529	WITHOUT_CLASSIFICATION	5.234764715047918E-8	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999997418344273	WITHOUT_CLASSIFICATION	2.581655727591642E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999979826819	WITHOUT_CLASSIFICATION	2.0173181089870275E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999999074435963	WITHOUT_CLASSIFICATION	9.255640370119442E-8	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988997282738	WITHOUT_CLASSIFICATION	1.1002717261180713E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990476613889	WITHOUT_CLASSIFICATION	9.52338611185431E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999999045801422	WITHOUT_CLASSIFICATION	9.541985780378818E-8	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999172363175	WITHOUT_CLASSIFICATION	8.276368246736127E-8	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9999939714749911	WITHOUT_CLASSIFICATION	6.0285250089329535E-6	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999931636929393	WITHOUT_CLASSIFICATION	6.836307060664968E-6	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9999833022696856	WITHOUT_CLASSIFICATION	1.669773031445571E-5	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999989804672424	WITHOUT_CLASSIFICATION	1.01953275754139E-6	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999986420975668	WITHOUT_CLASSIFICATION	1.3579024331374046E-6	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.999999446532107	WITHOUT_CLASSIFICATION	5.534678929323857E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9992217894601295	WITHOUT_CLASSIFICATION	7.782105398703802E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999991994056804	WITHOUT_CLASSIFICATION	8.00594319629212E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9992217894601295	WITHOUT_CLASSIFICATION	7.782105398703802E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9999988555843047	WITHOUT_CLASSIFICATION	1.1444156952995798E-6	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999998517777596	WITHOUT_CLASSIFICATION	1.4822224029322273E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999996866702218	WITHOUT_CLASSIFICATION	3.133297781750241E-7	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.999997607300393	WITHOUT_CLASSIFICATION	2.3926996069438412E-6	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999999285853324	WITHOUT_CLASSIFICATION	7.141466766978227E-8	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999999987402324	WITHOUT_CLASSIFICATION	1.2597675199335381E-9	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9999999395343793	WITHOUT_CLASSIFICATION	6.046562074625705E-8	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9999972848603089	WITHOUT_CLASSIFICATION	2.715139691022511E-6	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9998009516492476	WITHOUT_CLASSIFICATION	1.9904835075248674E-4	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9999678074616803	WITHOUT_CLASSIFICATION	3.219253831965541E-5	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9999839461755318	WITHOUT_CLASSIFICATION	1.605382446825493E-5	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999943644971585	WITHOUT_CLASSIFICATION	5.635502841526198E-6	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999999922459808	WITHOUT_CLASSIFICATION	7.754019187771548E-9	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9999871571559641	WITHOUT_CLASSIFICATION	1.284284403583214E-5	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999942025575563	WITHOUT_CLASSIFICATION	5.7974424436510885E-6	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9999839903379962	WITHOUT_CLASSIFICATION	1.6009662003850127E-5	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999999428421298	WITHOUT_CLASSIFICATION	5.715787009431137E-8	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999987233822514	WITHOUT_CLASSIFICATION	1.2766177486395755E-6	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999929475620838	WITHOUT_CLASSIFICATION	7.052437916163608E-6	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.999999824255086	WITHOUT_CLASSIFICATION	1.7574491395028038E-7	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9988269762918449	WITHOUT_CLASSIFICATION	0.0011730237081550802	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999910483757284	WITHOUT_CLASSIFICATION	8.951624271608428E-6	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999987241163573	WITHOUT_CLASSIFICATION	1.2758836427686944E-6	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.999999947858832	WITHOUT_CLASSIFICATION	5.214116803360367E-8	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999983484642122	WITHOUT_CLASSIFICATION	1.6515357877790373E-6	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999999732647017	WITHOUT_CLASSIFICATION	2.6735298375330916E-8	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999941241922579	WITHOUT_CLASSIFICATION	5.875807742188508E-6	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.999964924910573	WITHOUT_CLASSIFICATION	3.5075089427093076E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.999964924910573	WITHOUT_CLASSIFICATION	3.5075089427093076E-5	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999957483997273	WITHOUT_CLASSIFICATION	4.251600272725242E-6	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9999999266893169	WITHOUT_CLASSIFICATION	7.331068309768482E-8	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9999743471202714	WITHOUT_CLASSIFICATION	2.5652879728557926E-5	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9999620180228722	WITHOUT_CLASSIFICATION	3.798197712772675E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999993202881083	WITHOUT_CLASSIFICATION	6.797118916903244E-7	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9999568934056065	WITHOUT_CLASSIFICATION	4.310659439357148E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9990584551123028	WITHOUT_CLASSIFICATION	9.415448876971057E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999997545383019	WITHOUT_CLASSIFICATION	2.4546169804549445E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999982249925321	WITHOUT_CLASSIFICATION	1.7750074679248147E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999997613376767	WITHOUT_CLASSIFICATION	2.3866232336856754E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998872186462534	WITHOUT_CLASSIFICATION	1.1278135374664271E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999947229046507	WITHOUT_CLASSIFICATION	5.277095349280076E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999628392680227	WITHOUT_CLASSIFICATION	3.716073197732976E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9999660349468128	WITHOUT_CLASSIFICATION	3.3965053187275145E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998979553018	WITHOUT_CLASSIFICATION	1.0204469823522411E-7	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9999511881310477	WITHOUT_CLASSIFICATION	4.881186895239334E-5	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999992745471743	WITHOUT_CLASSIFICATION	7.25452825614358E-7	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999922311901142	WITHOUT_CLASSIFICATION	7.768809885892097E-6	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999753592038644	WITHOUT_CLASSIFICATION	2.4640796135717604E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999993202881083	WITHOUT_CLASSIFICATION	6.797118916903244E-7	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999992745471743	WITHOUT_CLASSIFICATION	7.25452825614358E-7	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999997545383019	WITHOUT_CLASSIFICATION	2.4546169804549445E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999982249925321	WITHOUT_CLASSIFICATION	1.7750074679248147E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999941241922579	WITHOUT_CLASSIFICATION	5.875807742188508E-6	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999993947444085	WITHOUT_CLASSIFICATION	6.052555915778803E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999941241922579	WITHOUT_CLASSIFICATION	5.875807742188508E-6	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999985713905392	WITHOUT_CLASSIFICATION	1.428609460900463E-6	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.999998789793673	WITHOUT_CLASSIFICATION	1.2102063270513466E-6	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997370132969	WITHOUT_CLASSIFICATION	2.62986703143793E-7	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999623761936	WITHOUT_CLASSIFICATION	3.76238063420883E-8	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999776500957649	WITHOUT_CLASSIFICATION	2.2349904235136067E-5	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999776500957649	WITHOUT_CLASSIFICATION	2.2349904235136067E-5	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9999908676102196	WITHOUT_CLASSIFICATION	9.132389780457148E-6	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999999548400117	WITHOUT_CLASSIFICATION	4.5159988307496326E-7	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998057217271	WITHOUT_CLASSIFICATION	1.9427827289156062E-7	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997802956248	WITHOUT_CLASSIFICATION	2.1970437523819615E-7	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997733615277	WITHOUT_CLASSIFICATION	2.266384722250106E-7	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999995869723222	WITHOUT_CLASSIFICATION	4.1302767782478645E-7	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997927192552	WITHOUT_CLASSIFICATION	2.0728074474431584E-7	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997990610947	WITHOUT_CLASSIFICATION	2.0093890524805894E-7	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999996515294373	WITHOUT_CLASSIFICATION	3.4847056281017026E-7	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998251176874	WITHOUT_CLASSIFICATION	1.748823125808577E-7	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998304682838	WITHOUT_CLASSIFICATION	1.6953171625159916E-7	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998879208127	WITHOUT_CLASSIFICATION	1.1207918727031731E-7	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999996890519528	WITHOUT_CLASSIFICATION	3.1094804726727095E-7	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998692522033	WITHOUT_CLASSIFICATION	1.3074779665727361E-7	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998732524862	WITHOUT_CLASSIFICATION	1.2674751383587305E-7	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997831684945	WITHOUT_CLASSIFICATION	2.1683150548875717E-7	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999274303891	WITHOUT_CLASSIFICATION	7.256961087301981E-8	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999936374176	WITHOUT_CLASSIFICATION	6.36258240570813E-8	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999012700106	WITHOUT_CLASSIFICATION	9.8729989359268E-8	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999996558672135	WITHOUT_CLASSIFICATION	3.4413278654323425E-7	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998848249267	WITHOUT_CLASSIFICATION	1.1517507323004963E-7	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998883487557	WITHOUT_CLASSIFICATION	1.116512442583171E-7	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998860622199	WITHOUT_CLASSIFICATION	1.1393778010740895E-7	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997351515798	WITHOUT_CLASSIFICATION	2.648484201748631E-7	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998670840318	WITHOUT_CLASSIFICATION	1.3291596828341832E-7	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998711506506	WITHOUT_CLASSIFICATION	1.2884934936447646E-7	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997728590593	WITHOUT_CLASSIFICATION	2.271409406719877E-7	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999995305598076	WITHOUT_CLASSIFICATION	4.6944019242654817E-7	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999269923392	WITHOUT_CLASSIFICATION	7.300766081064458E-8	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997056126649	WITHOUT_CLASSIFICATION	2.9438733507819946E-7	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.999939623115549	WITHOUT_CLASSIFICATION	6.037688445100621E-5	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999990853332646	WITHOUT_CLASSIFICATION	9.146667353689253E-7	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997072137154	WITHOUT_CLASSIFICATION	2.927862846034605E-7	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998768888837	WITHOUT_CLASSIFICATION	1.2311111626809913E-7	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998806555193	WITHOUT_CLASSIFICATION	1.1934448080832567E-7	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998009513381	WITHOUT_CLASSIFICATION	1.9904866180885366E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999941241922579	WITHOUT_CLASSIFICATION	5.875807742188508E-6	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999163037925	WITHOUT_CLASSIFICATION	8.369620745371977E-8	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999188645127	WITHOUT_CLASSIFICATION	8.113548731369035E-8	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997767861184	WITHOUT_CLASSIFICATION	2.2321388156605994E-7	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999252943221	WITHOUT_CLASSIFICATION	7.470567784407724E-8	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999275799734	WITHOUT_CLASSIFICATION	7.242002666205755E-8	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998287842855	WITHOUT_CLASSIFICATION	1.7121571444658008E-7	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999928007023	WITHOUT_CLASSIFICATION	7.199297696499169E-8	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999608898099	WITHOUT_CLASSIFICATION	3.911019006606753E-8	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999996956472847	WITHOUT_CLASSIFICATION	3.0435271530751494E-7	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999551870368	WITHOUT_CLASSIFICATION	4.481296325967835E-8	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999565862305	WITHOUT_CLASSIFICATION	4.341376940509267E-8	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999971570336011	WITHOUT_CLASSIFICATION	2.8429663988984385E-6	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999999759646945	WITHOUT_CLASSIFICATION	2.403530556751233E-8	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999855363048186	WITHOUT_CLASSIFICATION	1.4463695181420107E-5	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999985062047274	WITHOUT_CLASSIFICATION	1.4937952725269085E-6	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999999622328714	WITHOUT_CLASSIFICATION	3.776712874337276E-8	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9999886202481113	WITHOUT_CLASSIFICATION	1.1379751888600139E-5	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9999763971193719	WITHOUT_CLASSIFICATION	2.3602880628070664E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999992533063691	WITHOUT_CLASSIFICATION	7.466936309036628E-6	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999947229046507	WITHOUT_CLASSIFICATION	5.277095349280076E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999997183450231	WITHOUT_CLASSIFICATION	2.816549769165759E-7	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999999836226818	WITHOUT_CLASSIFICATION	1.6377318151287414E-8	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999947518607664	WITHOUT_CLASSIFICATION	5.2481392336299665E-6	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.99999371145745	WITHOUT_CLASSIFICATION	6.288542550125937E-6	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999998359517932	WITHOUT_CLASSIFICATION	1.6404820690939135E-7	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999951479992113	WITHOUT_CLASSIFICATION	4.852000788737234E-6	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999996937216442	WITHOUT_CLASSIFICATION	3.062783557082107E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997719883693	WITHOUT_CLASSIFICATION	2.280116305710753E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997719883693	WITHOUT_CLASSIFICATION	2.280116305710753E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998872186462534	WITHOUT_CLASSIFICATION	1.1278135374664271E-4	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999941256562429	WITHOUT_CLASSIFICATION	5.874343757127043E-6	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.999999999524924	WITHOUT_CLASSIFICATION	4.750760224338794E-10	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999937159690201	WITHOUT_CLASSIFICATION	6.284030979928362E-6	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999876826421936	WITHOUT_CLASSIFICATION	1.2317357806397501E-5	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999920173509717	WITHOUT_CLASSIFICATION	7.982649028291572E-6	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999793950742902	WITHOUT_CLASSIFICATION	2.0604925709742427E-5	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999999761443189	WITHOUT_CLASSIFICATION	2.3855681166511262E-8	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999998805530064	WITHOUT_CLASSIFICATION	1.1944699365438438E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997719883693	WITHOUT_CLASSIFICATION	2.280116305710753E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999830233174327	WITHOUT_CLASSIFICATION	1.6976682567230677E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999999292646695	WITHOUT_CLASSIFICATION	7.073533053558576E-8	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999960694564071	WITHOUT_CLASSIFICATION	3.930543592952625E-6	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999999242444706	WITHOUT_CLASSIFICATION	7.575552932731138E-8	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999811483415508	WITHOUT_CLASSIFICATION	1.8851658449087368E-5	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999999849214738	WITHOUT_CLASSIFICATION	1.507852615923869E-8	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999999908638247	WITHOUT_CLASSIFICATION	9.136175244487253E-9	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999718925767173	WITHOUT_CLASSIFICATION	2.8107423282738985E-5	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999995985863825	WITHOUT_CLASSIFICATION	4.014136173514684E-7	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999992278726121	WITHOUT_CLASSIFICATION	7.721273879250802E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998872186462534	WITHOUT_CLASSIFICATION	1.1278135374664271E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997719883693	WITHOUT_CLASSIFICATION	2.280116305710753E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999960694564071	WITHOUT_CLASSIFICATION	3.930543592952625E-6	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999999242444706	WITHOUT_CLASSIFICATION	7.575552932731138E-8	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999811483415508	WITHOUT_CLASSIFICATION	1.8851658449087368E-5	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999972665881384	WITHOUT_CLASSIFICATION	2.7334118615009684E-6	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9999982091000021	WITHOUT_CLASSIFICATION	1.7908999978355317E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999998643862772	WITHOUT_CLASSIFICATION	1.3561372284419995E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999993592918	WITHOUT_CLASSIFICATION	6.407081838970799E-10	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999856986943557	WITHOUT_CLASSIFICATION	1.4301305644335901E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999856986943557	WITHOUT_CLASSIFICATION	1.4301305644335901E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999856986943557	WITHOUT_CLASSIFICATION	1.4301305644335901E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999957736683851	WITHOUT_CLASSIFICATION	4.226331614931801E-6	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999998249950334	WITHOUT_CLASSIFICATION	1.7500496662236781E-7	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999869281532994	WITHOUT_CLASSIFICATION	1.307184670062296E-5	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999916360849744	WITHOUT_CLASSIFICATION	8.363915025600203E-6	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999990447888655	WITHOUT_CLASSIFICATION	9.552111344893152E-7	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999999685149549	WITHOUT_CLASSIFICATION	3.148504503680124E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9998010316893011	WITHOUT_CLASSIFICATION	1.9896831069889196E-4	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999988853827549	WITHOUT_CLASSIFICATION	1.1146172450763563E-6	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999998285582324	WITHOUT_CLASSIFICATION	1.7144176767175113E-7	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999996038803683	WITHOUT_CLASSIFICATION	3.9611963169760825E-7	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9999977067235009	WITHOUT_CLASSIFICATION	2.2932764991432834E-6	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999999165228378	WITHOUT_CLASSIFICATION	8.34771621701749E-8	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9999951550173677	WITHOUT_CLASSIFICATION	4.8449826322175256E-6	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.999999874244403	WITHOUT_CLASSIFICATION	1.2575559709160132E-7	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999999442751882	WITHOUT_CLASSIFICATION	5.572481176297634E-8	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999997922299821	WITHOUT_CLASSIFICATION	2.0777001784274775E-7	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9970990372988014	WITHOUT_CLASSIFICATION	0.0029009627011984877	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9989448329792774	WITHOUT_CLASSIFICATION	0.0010551670207225741	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999997302106504	WITHOUT_CLASSIFICATION	2.6978934965239706E-7	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999796552725829	WITHOUT_CLASSIFICATION	2.0344727417130376E-5	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999997542196949	WITHOUT_CLASSIFICATION	2.457803050010122E-7	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999991112287863	WITHOUT_CLASSIFICATION	8.887712137833919E-7	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999993077203604	WITHOUT_CLASSIFICATION	6.922796396931025E-7	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.999999328953965	WITHOUT_CLASSIFICATION	6.710460350222532E-7	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999995641458859	WITHOUT_CLASSIFICATION	4.358541140707222E-7	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999875102016242	WITHOUT_CLASSIFICATION	1.2489798375866982E-5	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999797363460855	WITHOUT_CLASSIFICATION	2.0263653914447007E-5	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999965626734137	WITHOUT_CLASSIFICATION	3.4373265861977413E-6	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999981259216799	WITHOUT_CLASSIFICATION	1.8740783200931187E-6	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9999962794781632	WITHOUT_CLASSIFICATION	3.720521836750372E-6	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999969403260126	WITHOUT_CLASSIFICATION	3.0596739875462023E-6	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9999884986911669	WITHOUT_CLASSIFICATION	1.1501308833219017E-5	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999999028012858	WITHOUT_CLASSIFICATION	9.71987141574927E-8	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9998365895491056	WITHOUT_CLASSIFICATION	1.6341045089448964E-4	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9999695338096732	WITHOUT_CLASSIFICATION	3.0466190326677686E-5	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9999996897804936	WITHOUT_CLASSIFICATION	3.1021950636306203E-7	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999952802687629	WITHOUT_CLASSIFICATION	4.719731236970705E-6	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9999475162591911	WITHOUT_CLASSIFICATION	5.248374080885148E-5	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999999940917585	WITHOUT_CLASSIFICATION	5.90824143717302E-9	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999994562328828	WITHOUT_CLASSIFICATION	5.437671171234609E-7	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999990838288021	WITHOUT_CLASSIFICATION	9.161711979075926E-7	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.99999569387422	WITHOUT_CLASSIFICATION	4.306125779922333E-6	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999944962906399	WITHOUT_CLASSIFICATION	5.5037093601524045E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.99999569387422	WITHOUT_CLASSIFICATION	4.306125779922333E-6	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999999251805979	WITHOUT_CLASSIFICATION	7.481940214219882E-8	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999995659193736	WITHOUT_CLASSIFICATION	4.340806264455342E-7	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999537380260787	WITHOUT_CLASSIFICATION	4.6261973921379046E-5	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999994781906869	WITHOUT_CLASSIFICATION	5.218093130887031E-7	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999999186411724	WITHOUT_CLASSIFICATION	8.135882758576632E-8	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999995735735554	WITHOUT_CLASSIFICATION	4.264264445267458E-7	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999949190048609	WITHOUT_CLASSIFICATION	5.080995139060494E-6	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999973953591906	WITHOUT_CLASSIFICATION	2.6046408093488625E-6	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999989795536792	WITHOUT_CLASSIFICATION	1.0204463207217454E-6	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999988727780508	WITHOUT_CLASSIFICATION	1.127221949181098E-6	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999997600946348	WITHOUT_CLASSIFICATION	2.399053651794808E-7	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999996125902663	WITHOUT_CLASSIFICATION	3.874097337542264E-7	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999960892045338	WITHOUT_CLASSIFICATION	3.910795466272501E-6	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999999774716762	WITHOUT_CLASSIFICATION	2.2528323803784258E-8	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.999999305627748	WITHOUT_CLASSIFICATION	6.943722519827932E-7	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999963041096004	WITHOUT_CLASSIFICATION	3.6958903995330646E-6	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999999673923894	WITHOUT_CLASSIFICATION	3.260761056116892E-8	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9999934799047523	WITHOUT_CLASSIFICATION	6.520095247635003E-6	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999999311116041	WITHOUT_CLASSIFICATION	6.888839587912073E-8	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999998311390608	WITHOUT_CLASSIFICATION	1.688609391599093E-7	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999999330552622	WITHOUT_CLASSIFICATION	6.694473771910267E-8	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999967558347	WITHOUT_CLASSIFICATION	3.244165300025137E-6	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999985398648998	WITHOUT_CLASSIFICATION	1.4601351001198753E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999996352220089	WITHOUT_CLASSIFICATION	3.647779912535856E-7	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999944291292664	WITHOUT_CLASSIFICATION	5.570870733644076E-6	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9999998351881091	WITHOUT_CLASSIFICATION	1.6481189083853353E-7	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999761209965532	WITHOUT_CLASSIFICATION	2.3879003446753157E-5	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.999991433783915	WITHOUT_CLASSIFICATION	8.566216085023263E-6	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9998787551676996	WITHOUT_CLASSIFICATION	1.2124483230037491E-4	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9999771536049192	WITHOUT_CLASSIFICATION	2.2846395080787575E-5	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999888389460766	WITHOUT_CLASSIFICATION	1.1161053923457768E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999873412654758	WITHOUT_CLASSIFICATION	1.2658734524218743E-5	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999999882708134	WITHOUT_CLASSIFICATION	1.1729186661103182E-8	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999986637794762	WITHOUT_CLASSIFICATION	1.3362205238050744E-6	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999986263518786	WITHOUT_CLASSIFICATION	1.3736481213325594E-6	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999991252823066	WITHOUT_CLASSIFICATION	8.747176933024E-7	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999961194243	WITHOUT_CLASSIFICATION	3.8805757301412105E-9	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9999993676365266	WITHOUT_CLASSIFICATION	6.323634733094734E-7	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999994562328828	WITHOUT_CLASSIFICATION	5.437671171234609E-7	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999997502428368	WITHOUT_CLASSIFICATION	2.497571631584049E-7	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999999534791579	WITHOUT_CLASSIFICATION	4.652084215422481E-8	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999997976970205	WITHOUT_CLASSIFICATION	2.0230297945549984E-7	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999997009117019	WITHOUT_CLASSIFICATION	2.9908829805278744E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999944962906399	WITHOUT_CLASSIFICATION	5.5037093601524045E-6	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999813332469503	WITHOUT_CLASSIFICATION	1.866675304974707E-5	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999996319384225	WITHOUT_CLASSIFICATION	3.680615775459108E-7	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999995530077553	WITHOUT_CLASSIFICATION	4.4699224470303596E-7	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999972537001397	WITHOUT_CLASSIFICATION	2.746299860368298E-6	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999993795639883	WITHOUT_CLASSIFICATION	6.204360117255672E-7	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999930952617725	WITHOUT_CLASSIFICATION	6.904738227521858E-6	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.999998700140455	WITHOUT_CLASSIFICATION	1.2998595450051166E-6	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999990217944315	WITHOUT_CLASSIFICATION	9.782055684923435E-7	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999998051260819	WITHOUT_CLASSIFICATION	1.948739180647267E-7	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9999873834812133	WITHOUT_CLASSIFICATION	1.2616518786719295E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999994362919654	WITHOUT_CLASSIFICATION	5.637080345241692E-7	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999992326905496	WITHOUT_CLASSIFICATION	7.673094503744992E-7	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999943932910541	WITHOUT_CLASSIFICATION	5.606708945880044E-6	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.999999691071029	WITHOUT_CLASSIFICATION	3.0892897088815626E-7	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999995017609559	WITHOUT_CLASSIFICATION	4.982390441136999E-7	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999998190121049	WITHOUT_CLASSIFICATION	1.809878951829324E-7	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9999994229524821	WITHOUT_CLASSIFICATION	5.770475178960791E-7	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999997120612305	WITHOUT_CLASSIFICATION	2.8793876956411177E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999994186774476	WITHOUT_CLASSIFICATION	5.813225523759073E-7	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.999999872365916	WITHOUT_CLASSIFICATION	1.2763408397207738E-7	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999995916019674	WITHOUT_CLASSIFICATION	4.08398032676795E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999994186774476	WITHOUT_CLASSIFICATION	5.813225523759073E-7	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999996675257415	WITHOUT_CLASSIFICATION	3.324742584076107E-7	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999994377955724	WITHOUT_CLASSIFICATION	5.622044275610161E-7	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999996762492666	WITHOUT_CLASSIFICATION	3.2375073339131136E-7	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999999600315457	WITHOUT_CLASSIFICATION	3.9968454243646536E-8	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999999826030337	WITHOUT_CLASSIFICATION	1.7396966240196904E-8	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999999806930872	WITHOUT_CLASSIFICATION	1.930691287993727E-8	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999999680420378	WITHOUT_CLASSIFICATION	3.195796221993532E-8	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999989734395918	WITHOUT_CLASSIFICATION	1.0265604082794288E-6	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999981722828584	WITHOUT_CLASSIFICATION	1.8277171415276568E-6	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.999999978448746	WITHOUT_CLASSIFICATION	2.1551253952146202E-8	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999980806297383	WITHOUT_CLASSIFICATION	1.919370261821876E-6	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999999907484346	WITHOUT_CLASSIFICATION	9.25156550133109E-9	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999999995265574	WITHOUT_CLASSIFICATION	4.734425418233194E-10	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999999767316021	WITHOUT_CLASSIFICATION	2.3268397781135754E-8	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999986167596713	WITHOUT_CLASSIFICATION	1.383240328746303E-6	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999739499909602	WITHOUT_CLASSIFICATION	2.605000903964417E-5	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999949547243876	WITHOUT_CLASSIFICATION	5.045275612385035E-6	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999991444079003	WITHOUT_CLASSIFICATION	8.555920997663628E-7	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999999106741755	WITHOUT_CLASSIFICATION	8.932582457350993E-8	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999998345682177	WITHOUT_CLASSIFICATION	1.654317822401305E-7	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999997135176967	WITHOUT_CLASSIFICATION	2.8648230335205966E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999992533063691	WITHOUT_CLASSIFICATION	7.466936309036628E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999992533063691	WITHOUT_CLASSIFICATION	7.466936309036628E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999996866702218	WITHOUT_CLASSIFICATION	3.133297781750241E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997719883693	WITHOUT_CLASSIFICATION	2.280116305710753E-7	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999993842273855	WITHOUT_CLASSIFICATION	6.157726144448045E-7	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999874378636	WITHOUT_CLASSIFICATION	1.2562136526948314E-8	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999874378636	WITHOUT_CLASSIFICATION	1.2562136526948314E-8	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999681798547	WITHOUT_CLASSIFICATION	3.1820145279463995E-8	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.999999990547021	WITHOUT_CLASSIFICATION	9.452978920690795E-9	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9999999961603455	WITHOUT_CLASSIFICATION	3.839654434482309E-9	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999998851102085	WITHOUT_CLASSIFICATION	1.1488979139234501E-7	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999999648805531	WITHOUT_CLASSIFICATION	3.511944678627526E-8	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9999989953693768	WITHOUT_CLASSIFICATION	1.0046306232950985E-6	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999988126537985	WITHOUT_CLASSIFICATION	1.1873462014573682E-6	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9999951475390458	WITHOUT_CLASSIFICATION	4.852460954122059E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999999431548536	WITHOUT_CLASSIFICATION	5.6845146344918266E-8	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999999431548536	WITHOUT_CLASSIFICATION	5.6845146344918266E-8	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987240905082	WITHOUT_CLASSIFICATION	1.275909491883687E-6	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987240905082	WITHOUT_CLASSIFICATION	1.275909491883687E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999808205618437	WITHOUT_CLASSIFICATION	1.9179438156318042E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999999626786892	WITHOUT_CLASSIFICATION	3.732131075435441E-8	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999979090311654	WITHOUT_CLASSIFICATION	2.0909688345680074E-6	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9999960406441517	WITHOUT_CLASSIFICATION	3.9593558482585726E-6	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.999999994484432	WITHOUT_CLASSIFICATION	5.515567941275633E-9	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999999850966282	WITHOUT_CLASSIFICATION	1.490337182048288E-8	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999916803713972	WITHOUT_CLASSIFICATION	8.319628602745581E-6	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999993553503266	WITHOUT_CLASSIFICATION	6.446496733835676E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9999930839471076	WITHOUT_CLASSIFICATION	6.916052892396285E-6	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999995980277443	WITHOUT_CLASSIFICATION	4.019722557705826E-7	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999999708014591	WITHOUT_CLASSIFICATION	2.9198540921500528E-8	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999988717001174	WITHOUT_CLASSIFICATION	1.1282998826934524E-6	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999988717001174	WITHOUT_CLASSIFICATION	1.1282998826934524E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999923818452	WITHOUT_CLASSIFICATION	7.618154669231898E-9	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999639742921	WITHOUT_CLASSIFICATION	3.6025707820054396E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999639742921	WITHOUT_CLASSIFICATION	3.6025707820054396E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999923818452	WITHOUT_CLASSIFICATION	7.618154669231898E-9	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999999134597922	WITHOUT_CLASSIFICATION	8.654020777497469E-8	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9999545704595848	WITHOUT_CLASSIFICATION	4.5429540415191934E-5	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9999982742285745	WITHOUT_CLASSIFICATION	1.7257714256388188E-6	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999979100982155	WITHOUT_CLASSIFICATION	2.0899017846305176E-6	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.999993809901586	WITHOUT_CLASSIFICATION	6.190098413944425E-6	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999995860019767	WITHOUT_CLASSIFICATION	4.1399802326955236E-7	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999977289532147	WITHOUT_CLASSIFICATION	2.2710467852946397E-6	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999994419730994	WITHOUT_CLASSIFICATION	5.580269005418374E-7	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999994419730994	WITHOUT_CLASSIFICATION	5.580269005418374E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999997006095013	WITHOUT_CLASSIFICATION	2.993904987678298E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999997006095013	WITHOUT_CLASSIFICATION	2.993904987678298E-7	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.999997445435341	WITHOUT_CLASSIFICATION	2.554564659022849E-6	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999994068507981	WITHOUT_CLASSIFICATION	5.931492019392079E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999949238662578	WITHOUT_CLASSIFICATION	5.076133742258299E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999949238662578	WITHOUT_CLASSIFICATION	5.076133742258299E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999949238662578	WITHOUT_CLASSIFICATION	5.076133742258299E-6	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999946022726961	WITHOUT_CLASSIFICATION	5.397727303913307E-6	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999984425578736	WITHOUT_CLASSIFICATION	1.5574421263136834E-6	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999993676972696	WITHOUT_CLASSIFICATION	6.323027303262997E-7	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999998217241446	WITHOUT_CLASSIFICATION	1.7827585546803814E-7	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999998895152171	WITHOUT_CLASSIFICATION	1.1048478279825838E-7	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9997592559451475	WITHOUT_CLASSIFICATION	2.4074405485259576E-4	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999999313546111	WITHOUT_CLASSIFICATION	6.864538893830831E-8	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9999888897626864	WITHOUT_CLASSIFICATION	1.1110237313582035E-5	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999998997745339	WITHOUT_CLASSIFICATION	1.0022546603880391E-7	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999997588690092	WITHOUT_CLASSIFICATION	2.411309908626893E-7	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999979367423824	WITHOUT_CLASSIFICATION	2.0632576175459137E-6	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999978447253474	WITHOUT_CLASSIFICATION	2.1552746525834883E-6	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999764798753	WITHOUT_CLASSIFICATION	2.3520124741344588E-8	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9999999924223827	WITHOUT_CLASSIFICATION	7.577617330727677E-9	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.99999986447765	WITHOUT_CLASSIFICATION	1.3552234988949819E-7	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.99999956084198	WITHOUT_CLASSIFICATION	4.391580199160972E-7	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999853665529749	WITHOUT_CLASSIFICATION	1.463344702508267E-5	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9999881050379099	WITHOUT_CLASSIFICATION	1.1894962090108335E-5	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.999999952563454	WITHOUT_CLASSIFICATION	4.743654616658238E-8	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999999999468218	WITHOUT_CLASSIFICATION	5.3178164689524243E-11	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999999995392028	WITHOUT_CLASSIFICATION	4.6079719700584336E-10	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999956409800473	WITHOUT_CLASSIFICATION	4.359019952661784E-6	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999985689721104	WITHOUT_CLASSIFICATION	1.4310278896521834E-6	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9999949748151807	WITHOUT_CLASSIFICATION	5.025184819215948E-6	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9999988218680517	WITHOUT_CLASSIFICATION	1.178131948288361E-6	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999961790344816	WITHOUT_CLASSIFICATION	3.820965518457678E-6	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999993612138747	WITHOUT_CLASSIFICATION	6.387861252560639E-7	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999999914423252	WITHOUT_CLASSIFICATION	8.55767482360198E-9	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999988442597944	WITHOUT_CLASSIFICATION	1.1557402057486512E-6	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999998050289572	WITHOUT_CLASSIFICATION	1.9497104274649334E-7	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999886812605	WITHOUT_CLASSIFICATION	1.131873964742686E-8	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999496214340943	WITHOUT_CLASSIFICATION	5.037856590580849E-5	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999950019684829	WITHOUT_CLASSIFICATION	4.998031517091265E-6	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9999964576787571	WITHOUT_CLASSIFICATION	3.5423212428998244E-6	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999463577092769	WITHOUT_CLASSIFICATION	5.3642290723150346E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999996664659944	WITHOUT_CLASSIFICATION	3.3353400561399096E-7	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999967774700861	WITHOUT_CLASSIFICATION	3.2225299139642475E-6	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999994538572662	WITHOUT_CLASSIFICATION	5.461427338291503E-7	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999998876533918	WITHOUT_CLASSIFICATION	1.1234660829561488E-7	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999555430468	WITHOUT_CLASSIFICATION	4.445695335787974E-8	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999949097403127	WITHOUT_CLASSIFICATION	5.090259687290813E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999200425698	WITHOUT_CLASSIFICATION	7.995743026281061E-8	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999966911435273	WITHOUT_CLASSIFICATION	3.3088564726997854E-6	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999999507416638	WITHOUT_CLASSIFICATION	4.92583361232048E-8	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999989934596634	WITHOUT_CLASSIFICATION	1.00654033661593E-6	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999997092790202	WITHOUT_CLASSIFICATION	2.9072097982062146E-7	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.99999979566878	WITHOUT_CLASSIFICATION	2.0433121999820118E-7	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999997224103705	WITHOUT_CLASSIFICATION	2.7758962951865597E-7	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999812496074991	WITHOUT_CLASSIFICATION	1.8750392500788986E-5	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999911024604481	WITHOUT_CLASSIFICATION	8.897539551928907E-6	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999969204740381	WITHOUT_CLASSIFICATION	3.079525961958292E-6	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.999997421858003	WITHOUT_CLASSIFICATION	2.57814199710369E-6	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999999116555771	WITHOUT_CLASSIFICATION	8.83444229015252E-8	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999976032110225	WITHOUT_CLASSIFICATION	2.3967889775987077E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9999976941104062	WITHOUT_CLASSIFICATION	2.3058895937613357E-6	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9998476040675208	WITHOUT_CLASSIFICATION	1.5239593247907824E-4	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999966911435273	WITHOUT_CLASSIFICATION	3.3088564726997854E-6	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999966911435273	WITHOUT_CLASSIFICATION	3.3088564726997854E-6	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999994622735444	WITHOUT_CLASSIFICATION	5.377264556938907E-7	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999980183389297	WITHOUT_CLASSIFICATION	1.9816610703569313E-6	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999476169723	WITHOUT_CLASSIFICATION	5.2383027696895396E-8	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999971557915369	WITHOUT_CLASSIFICATION	2.8442084630594364E-6	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999971557915369	WITHOUT_CLASSIFICATION	2.8442084630594364E-6	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999998172714692	WITHOUT_CLASSIFICATION	1.8272853079841737E-7	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999990038254362	WITHOUT_CLASSIFICATION	9.961745638081004E-7	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9999997764692361	WITHOUT_CLASSIFICATION	2.2353076401435902E-7	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9999793610181431	WITHOUT_CLASSIFICATION	2.0638981856856573E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999995877624547	WITHOUT_CLASSIFICATION	4.122375452945195E-6	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9999999635225433	WITHOUT_CLASSIFICATION	3.647745680146278E-8	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999997519760555	WITHOUT_CLASSIFICATION	2.4802394454150555E-7	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999984982427919	WITHOUT_CLASSIFICATION	1.5017572081238408E-6	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9999637764784444	WITHOUT_CLASSIFICATION	3.6223521555573607E-5	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9999523678770279	WITHOUT_CLASSIFICATION	4.763212297220327E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999999927510653	WITHOUT_CLASSIFICATION	7.2489346178783095E-9	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.999999967027268	WITHOUT_CLASSIFICATION	3.297273189163056E-8	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999995877624547	WITHOUT_CLASSIFICATION	4.122375452945195E-6	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999431548536	WITHOUT_CLASSIFICATION	5.6845146344918266E-8	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999431548536	WITHOUT_CLASSIFICATION	5.6845146344918266E-8	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999944227501664	WITHOUT_CLASSIFICATION	5.577249833620823E-6	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999997602826521	WITHOUT_CLASSIFICATION	2.3971734784881954E-7	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999999433819731	WITHOUT_CLASSIFICATION	5.6618026917167275E-8	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999892624850564	WITHOUT_CLASSIFICATION	1.0737514943605959E-5	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9999925630189429	WITHOUT_CLASSIFICATION	7.436981057029144E-6	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999940193839698	WITHOUT_CLASSIFICATION	5.980616030228635E-6	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999940193839698	WITHOUT_CLASSIFICATION	5.980616030228635E-6	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999946152238106	WITHOUT_CLASSIFICATION	5.38477618937567E-6	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9999821763817391	WITHOUT_CLASSIFICATION	1.7823618260867092E-5	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9999994575088234	WITHOUT_CLASSIFICATION	5.424911765169547E-7	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9999706898568321	WITHOUT_CLASSIFICATION	2.9310143167853246E-5	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9999462211029004	WITHOUT_CLASSIFICATION	5.3778897099555414E-5	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999441332565144	WITHOUT_CLASSIFICATION	5.586674348562525E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.999996784646059	WITHOUT_CLASSIFICATION	3.2153539409257557E-6	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9999886319202268	WITHOUT_CLASSIFICATION	1.1368079773269472E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999608689404	WITHOUT_CLASSIFICATION	3.9131059510442525E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999999933854989	WITHOUT_CLASSIFICATION	6.61450109974598E-8	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995921493732	WITHOUT_CLASSIFICATION	4.0785062686189873E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999491288915	WITHOUT_CLASSIFICATION	5.087110854762849E-8	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999980959634269	WITHOUT_CLASSIFICATION	1.9040365729997778E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999476523529	WITHOUT_CLASSIFICATION	5.234764715047918E-8	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999997418344273	WITHOUT_CLASSIFICATION	2.581655727591642E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999979826819	WITHOUT_CLASSIFICATION	2.0173181089870275E-8	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999052993288	WITHOUT_CLASSIFICATION	9.470067124970181E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999999074435963	WITHOUT_CLASSIFICATION	9.255640370119442E-8	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988997282738	WITHOUT_CLASSIFICATION	1.1002717261180713E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990476613889	WITHOUT_CLASSIFICATION	9.52338611185431E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999999045801422	WITHOUT_CLASSIFICATION	9.541985780378818E-8	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999172363175	WITHOUT_CLASSIFICATION	8.276368246736127E-8	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999999448741104	WITHOUT_CLASSIFICATION	5.512588973648702E-8	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999995927383292	WITHOUT_CLASSIFICATION	4.072616708598159E-7	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999998804378812	WITHOUT_CLASSIFICATION	1.1956211886911912E-7	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999994164450254	WITHOUT_CLASSIFICATION	5.835549745460867E-7	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999932995441524	WITHOUT_CLASSIFICATION	6.700455847677139E-6	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999987018242077	WITHOUT_CLASSIFICATION	1.2981757922584202E-6	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999999493737761	WITHOUT_CLASSIFICATION	5.062622376661046E-8	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9999983795007374	WITHOUT_CLASSIFICATION	1.6204992624845815E-6	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999985551878077	WITHOUT_CLASSIFICATION	1.4448121924256748E-6	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999981077076485	WITHOUT_CLASSIFICATION	1.8922923513800736E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999996399267549	WITHOUT_CLASSIFICATION	3.6007324502123044E-7	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999996399267549	WITHOUT_CLASSIFICATION	3.6007324502123044E-7	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999994666896708	WITHOUT_CLASSIFICATION	5.333103292282971E-7	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999984645692934	WITHOUT_CLASSIFICATION	1.535430706533191E-6	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999994192988726	WITHOUT_CLASSIFICATION	5.807011273773922E-7	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999981585899451	WITHOUT_CLASSIFICATION	1.841410054959059E-6	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999981585899451	WITHOUT_CLASSIFICATION	1.841410054959059E-6	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999997479468997	WITHOUT_CLASSIFICATION	2.5205310029653936E-7	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.999912494756596	WITHOUT_CLASSIFICATION	8.750524340385923E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999998874766532	WITHOUT_CLASSIFICATION	1.1252334675193347E-7	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9999921406148583	WITHOUT_CLASSIFICATION	7.85938514161636E-6	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999950882870159	WITHOUT_CLASSIFICATION	4.911712984187799E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999491288915	WITHOUT_CLASSIFICATION	5.087110854762849E-8	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998737272845	WITHOUT_CLASSIFICATION	1.2627271546134704E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999476523529	WITHOUT_CLASSIFICATION	5.234764715047918E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999979826819	WITHOUT_CLASSIFICATION	2.0173181089870275E-8	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988997282738	WITHOUT_CLASSIFICATION	1.1002717261180713E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990476613889	WITHOUT_CLASSIFICATION	9.52338611185431E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999999932367232	WITHOUT_CLASSIFICATION	6.763276845606578E-9	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999172363175	WITHOUT_CLASSIFICATION	8.276368246736127E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998979553018	WITHOUT_CLASSIFICATION	1.0204469823522411E-7	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999639742921	WITHOUT_CLASSIFICATION	3.6025707820054396E-8	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999960908828696	WITHOUT_CLASSIFICATION	3.90911713043912E-6	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999889896789965	WITHOUT_CLASSIFICATION	1.1010321003478254E-5	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999998712551509	WITHOUT_CLASSIFICATION	1.287448492048651E-7	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.999996515507267	WITHOUT_CLASSIFICATION	3.484492733080579E-6	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.999994688446749	WITHOUT_CLASSIFICATION	5.311553250965128E-6	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999995056207474	WITHOUT_CLASSIFICATION	4.943792527383325E-7	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9999526624161654	WITHOUT_CLASSIFICATION	4.733758383447753E-5	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.999992427804726	WITHOUT_CLASSIFICATION	7.572195273940112E-6	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999993470953205	WITHOUT_CLASSIFICATION	6.529046795187764E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999998378791435	WITHOUT_CLASSIFICATION	1.6212085660730947E-7	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999993351804398	WITHOUT_CLASSIFICATION	6.648195601971522E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999891387372056	WITHOUT_CLASSIFICATION	1.0861262794384339E-5	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999816689632112	WITHOUT_CLASSIFICATION	1.833103678882642E-5	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.999995133449589	WITHOUT_CLASSIFICATION	4.866550410988535E-6	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999999679192212	WITHOUT_CLASSIFICATION	3.2080778730483546E-8	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9999988973010202	WITHOUT_CLASSIFICATION	1.1026989797134781E-6	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.999978973617182	WITHOUT_CLASSIFICATION	2.102638281789025E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999995862710551	WITHOUT_CLASSIFICATION	4.1372894480710426E-7	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.999991163713872	WITHOUT_CLASSIFICATION	8.836286128031228E-6	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.999991163713872	WITHOUT_CLASSIFICATION	8.836286128031228E-6	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999998932468717	WITHOUT_CLASSIFICATION	1.067531284151283E-7	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999605773348832	WITHOUT_CLASSIFICATION	3.942266511672607E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999970434591187	WITHOUT_CLASSIFICATION	2.9565408812865957E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999970434591187	WITHOUT_CLASSIFICATION	2.9565408812865957E-6	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9999998834040176	WITHOUT_CLASSIFICATION	1.1659598237276031E-7	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999951828851401	WITHOUT_CLASSIFICATION	4.817114859858918E-6	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9999867164103069	WITHOUT_CLASSIFICATION	1.3283589693085498E-5	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.999998677578352	WITHOUT_CLASSIFICATION	1.3224216480277746E-6	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999999190067909	WITHOUT_CLASSIFICATION	8.099320920309921E-8	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999995839644523	WITHOUT_CLASSIFICATION	4.160355475852626E-7	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999999786976377	WITHOUT_CLASSIFICATION	2.1302362376179558E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999768788285	WITHOUT_CLASSIFICATION	2.312117155878824E-8	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999996049413362	WITHOUT_CLASSIFICATION	3.950586637697501E-7	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.999999560832749	WITHOUT_CLASSIFICATION	4.3916725097335125E-7	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9996655792293936	WITHOUT_CLASSIFICATION	3.344207706063763E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.999995133449589	WITHOUT_CLASSIFICATION	4.866550410988535E-6	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9999999740949973	WITHOUT_CLASSIFICATION	2.590500266889564E-8	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998872186462534	WITHOUT_CLASSIFICATION	1.1278135374664271E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999947229046507	WITHOUT_CLASSIFICATION	5.277095349280076E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999890265315	WITHOUT_CLASSIFICATION	1.0973468423750622E-8	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9998773937684945	WITHOUT_CLASSIFICATION	1.2260623150548537E-4	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999998884479159	WITHOUT_CLASSIFICATION	1.1155208413668999E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999998845018098	WITHOUT_CLASSIFICATION	1.1549819018709673E-7	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999960333796655	WITHOUT_CLASSIFICATION	3.96662033459788E-6	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999960333796655	WITHOUT_CLASSIFICATION	3.96662033459788E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9999924347630312	WITHOUT_CLASSIFICATION	7.565236968760796E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999367685355	WITHOUT_CLASSIFICATION	6.323146457756099E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999768788285	WITHOUT_CLASSIFICATION	2.312117155878824E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999768788285	WITHOUT_CLASSIFICATION	2.312117155878824E-8	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999965082672543	WITHOUT_CLASSIFICATION	3.491732745668647E-6	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9998032662948303	WITHOUT_CLASSIFICATION	1.9673370516976645E-4	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.999999308422023	WITHOUT_CLASSIFICATION	6.915779769100669E-7	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.99999788806662	WITHOUT_CLASSIFICATION	2.1119333799539104E-6	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999980738924167	WITHOUT_CLASSIFICATION	1.9261075832451683E-6	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999982923134749	WITHOUT_CLASSIFICATION	1.7076865251858574E-6	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999888138721402	WITHOUT_CLASSIFICATION	1.1186127859855932E-5	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999999464864334	WITHOUT_CLASSIFICATION	5.351356655110637E-8	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999999113028242	WITHOUT_CLASSIFICATION	8.869717581056327E-8	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9999997293667553	WITHOUT_CLASSIFICATION	2.7063324476492506E-7	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999997860037154	WITHOUT_CLASSIFICATION	2.139962846867877E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999998588209175	WITHOUT_CLASSIFICATION	1.4117908242951763E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999998588209175	WITHOUT_CLASSIFICATION	1.4117908242951763E-7	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999999897962016	WITHOUT_CLASSIFICATION	1.0203798385425213E-8	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999873675950508	WITHOUT_CLASSIFICATION	1.2632404949242765E-5	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999873675950508	WITHOUT_CLASSIFICATION	1.2632404949242765E-5	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999917961701514	WITHOUT_CLASSIFICATION	8.203829848615839E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999917961701514	WITHOUT_CLASSIFICATION	8.203829848615839E-6	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999954746900079	WITHOUT_CLASSIFICATION	4.525309992164694E-6	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.999999837475366	WITHOUT_CLASSIFICATION	1.625246339837363E-7	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.999999837475366	WITHOUT_CLASSIFICATION	1.625246339837363E-7	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999999286443572	WITHOUT_CLASSIFICATION	7.135564282194533E-8	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999998806191338	WITHOUT_CLASSIFICATION	1.193808660737238E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999997613376767	WITHOUT_CLASSIFICATION	2.3866232336856754E-7	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999990564035781	WITHOUT_CLASSIFICATION	9.435964219724135E-7	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999316019662	WITHOUT_CLASSIFICATION	6.839803373568132E-8	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9999996669322566	WITHOUT_CLASSIFICATION	3.330677433885794E-7	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9999435595648826	WITHOUT_CLASSIFICATION	5.64404351174404E-5	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999392613552894	WITHOUT_CLASSIFICATION	6.073864471050295E-5	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999984420070839	WITHOUT_CLASSIFICATION	1.5579929161947518E-6	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999997631038251	WITHOUT_CLASSIFICATION	2.3689617482102898E-7	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999999807805554	WITHOUT_CLASSIFICATION	1.9219444644308764E-8	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.9999999972870109	WITHOUT_CLASSIFICATION	2.712989133820697E-9	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999885324005638	WITHOUT_CLASSIFICATION	1.1467599436153618E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999998806191338	WITHOUT_CLASSIFICATION	1.193808660737238E-7	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999999290070455	WITHOUT_CLASSIFICATION	7.099295445100899E-8	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999999973680724	WITHOUT_CLASSIFICATION	2.6319276787874323E-9	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999999919027646	WITHOUT_CLASSIFICATION	8.0972353968998E-9	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9997056750270789	WITHOUT_CLASSIFICATION	2.9432497292116583E-4	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999999993995644	WITHOUT_CLASSIFICATION	6.004355126943726E-10	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999994830102193	WITHOUT_CLASSIFICATION	5.169897806320225E-7	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9999999727589225	WITHOUT_CLASSIFICATION	2.7241077427850242E-8	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999999314232444	WITHOUT_CLASSIFICATION	6.857675552309513E-8	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999999219021289	WITHOUT_CLASSIFICATION	7.80978711627562E-8	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9999999649204764	WITHOUT_CLASSIFICATION	3.507952355456487E-8	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9999992311290301	WITHOUT_CLASSIFICATION	7.688709698216216E-7	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9999951294905807	WITHOUT_CLASSIFICATION	4.870509419309744E-6	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999999720404558	WITHOUT_CLASSIFICATION	2.7959544205949742E-8	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999943613461965	WITHOUT_CLASSIFICATION	5.638653803504631E-6	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.999999450179999	WITHOUT_CLASSIFICATION	5.498200010059029E-7	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999999895044582	WITHOUT_CLASSIFICATION	1.0495541844319897E-8	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999940032014386	WITHOUT_CLASSIFICATION	5.996798561355753E-6	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999999619638846	WITHOUT_CLASSIFICATION	3.8036115410897216E-8	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999996079517335	WITHOUT_CLASSIFICATION	3.920482665882761E-7	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999997861313815	WITHOUT_CLASSIFICATION	2.138686184739349E-7	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999998249851112	WITHOUT_CLASSIFICATION	1.7501488873417925E-7	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9999972327179435	WITHOUT_CLASSIFICATION	2.767282056567244E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999999448444873	WITHOUT_CLASSIFICATION	5.51555125933962E-8	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999999731858064	WITHOUT_CLASSIFICATION	2.6814193614406055E-8	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9993592264722053	WITHOUT_CLASSIFICATION	6.407735277946243E-4	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.999999984617782	WITHOUT_CLASSIFICATION	1.538221803894756E-8	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999998778731398	WITHOUT_CLASSIFICATION	1.2212686010336172E-7	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999991149611028	WITHOUT_CLASSIFICATION	8.850388972545565E-7	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999991691546684	WITHOUT_CLASSIFICATION	8.308453317653252E-7	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9999322424658093	WITHOUT_CLASSIFICATION	6.775753419067324E-5	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999991400093289	WITHOUT_CLASSIFICATION	8.599906711567393E-7	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999999796503997	WITHOUT_CLASSIFICATION	2.0349600353366524E-8	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.99999983951405	WITHOUT_CLASSIFICATION	1.6048594998322422E-7	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9999992567899483	WITHOUT_CLASSIFICATION	7.432100516013303E-7	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999954805719088	WITHOUT_CLASSIFICATION	4.519428091194133E-6	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9999873520169327	WITHOUT_CLASSIFICATION	1.264798306738877E-5	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999996449858358	WITHOUT_CLASSIFICATION	3.550141641150541E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999999731858064	WITHOUT_CLASSIFICATION	2.6814193614406055E-8	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999950431162	WITHOUT_CLASSIFICATION	4.9568838258304835E-9	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999997553989362	WITHOUT_CLASSIFICATION	2.446010638536931E-7	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999997553989362	WITHOUT_CLASSIFICATION	2.446010638536931E-7	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999999987744271	WITHOUT_CLASSIFICATION	1.225572980857712E-9	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999999987744271	WITHOUT_CLASSIFICATION	1.225572980857712E-9	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9999965286595531	WITHOUT_CLASSIFICATION	3.4713404467620087E-6	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999999453356734	WITHOUT_CLASSIFICATION	5.466432653563546E-8	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.999999909221889	WITHOUT_CLASSIFICATION	9.077811109530808E-8	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999988142844638	WITHOUT_CLASSIFICATION	1.1857155361956163E-6	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9999999451374224	WITHOUT_CLASSIFICATION	5.486257760079908E-8	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9999985910986888	WITHOUT_CLASSIFICATION	1.4089013111973188E-6	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999949675831079	WITHOUT_CLASSIFICATION	5.0324168921116425E-6	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.999999437930092	WITHOUT_CLASSIFICATION	5.620699079471129E-7	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999999959349736	WITHOUT_CLASSIFICATION	4.065026485642337E-9	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999983465462	WITHOUT_CLASSIFICATION	1.6534538004470308E-9	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.999905145006808	WITHOUT_CLASSIFICATION	9.485499319202599E-5	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999977263718859	WITHOUT_CLASSIFICATION	2.27362811411303E-6	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999993309816991	WITHOUT_CLASSIFICATION	6.690183009555285E-7	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9999995228607595	WITHOUT_CLASSIFICATION	4.771392404405667E-7	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9999999588884703	WITHOUT_CLASSIFICATION	4.1111529766881075E-8	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.999992134941354	WITHOUT_CLASSIFICATION	7.865058645964809E-6	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999989320804147	WITHOUT_CLASSIFICATION	1.0679195853402372E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999890265315	WITHOUT_CLASSIFICATION	1.0973468423750622E-8	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.999998756189871	WITHOUT_CLASSIFICATION	1.2438101289948243E-6	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999995695572049	WITHOUT_CLASSIFICATION	4.304427950972046E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998979553018	WITHOUT_CLASSIFICATION	1.0204469823522411E-7	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999995695572049	WITHOUT_CLASSIFICATION	4.304427950972046E-7	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9999988702348089	WITHOUT_CLASSIFICATION	1.129765191116663E-6	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999116895671903	WITHOUT_CLASSIFICATION	8.831043280972502E-5	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9999943888952422	WITHOUT_CLASSIFICATION	5.611104757810335E-6	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999999894548348	WITHOUT_CLASSIFICATION	1.0545165246707598E-8	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999995963808096	WITHOUT_CLASSIFICATION	4.0361919037888063E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999782144654256	WITHOUT_CLASSIFICATION	2.178553457442896E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999782144654256	WITHOUT_CLASSIFICATION	2.178553457442896E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999989224050814	WITHOUT_CLASSIFICATION	1.0775949186863623E-6	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9999947333756282	WITHOUT_CLASSIFICATION	5.266624371882229E-6	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999999805331904	WITHOUT_CLASSIFICATION	1.946680963346681E-8	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.999999975871158	WITHOUT_CLASSIFICATION	2.412884203945246E-8	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999999516560318	WITHOUT_CLASSIFICATION	4.834396810611507E-8	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9999987603731253	WITHOUT_CLASSIFICATION	1.2396268747092474E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999995963808096	WITHOUT_CLASSIFICATION	4.0361919037888063E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999782144654256	WITHOUT_CLASSIFICATION	2.178553457442896E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999782144654256	WITHOUT_CLASSIFICATION	2.178553457442896E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999989224050814	WITHOUT_CLASSIFICATION	1.0775949186863623E-6	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999999490646351	WITHOUT_CLASSIFICATION	5.093536497008762E-8	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999999364988488	WITHOUT_CLASSIFICATION	6.350115119529655E-8	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9999985940178653	WITHOUT_CLASSIFICATION	1.4059821346289056E-6	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.999995467651973	WITHOUT_CLASSIFICATION	4.532348027084691E-6	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999939949117495	WITHOUT_CLASSIFICATION	6.005088250541351E-6	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9999766145563699	WITHOUT_CLASSIFICATION	2.3385443630091484E-5	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999999518219451	WITHOUT_CLASSIFICATION	4.8178054883530836E-8	DEFECT
// {	WITHOUT_CLASSIFICATION	0.999992322364334	WITHOUT_CLASSIFICATION	7.677635666059191E-6	DEFECT
// {	WITHOUT_CLASSIFICATION	0.999992322364334	WITHOUT_CLASSIFICATION	7.677635666059191E-6	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999984930833824	WITHOUT_CLASSIFICATION	1.506916617577494E-6	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.999999793163401	WITHOUT_CLASSIFICATION	2.0683659890299635E-7	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999996607511135	WITHOUT_CLASSIFICATION	3.3924888647833735E-7	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9999408526675733	WITHOUT_CLASSIFICATION	5.914733242665549E-5	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999996424928026	WITHOUT_CLASSIFICATION	3.575071974367711E-7	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9999848221615769	WITHOUT_CLASSIFICATION	1.5177838423165901E-5	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999965975623049	WITHOUT_CLASSIFICATION	3.4024376952343904E-6	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999999826049343	WITHOUT_CLASSIFICATION	1.7395065755845022E-8	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999948056149647	WITHOUT_CLASSIFICATION	5.194385035299475E-6	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9999821694460801	WITHOUT_CLASSIFICATION	1.7830553919962592E-5	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999999854829781	WITHOUT_CLASSIFICATION	1.4517021953367505E-8	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.999999769253476	WITHOUT_CLASSIFICATION	2.3074652392354632E-7	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999999924573769	WITHOUT_CLASSIFICATION	7.542623042354376E-9	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9999437435393791	WITHOUT_CLASSIFICATION	5.625646062091878E-5	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9999995615294782	WITHOUT_CLASSIFICATION	4.3847052181659997E-7	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999999130876879	WITHOUT_CLASSIFICATION	8.691231215550209E-8	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999972992956966	WITHOUT_CLASSIFICATION	2.700704303393181E-6	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999972477383106	WITHOUT_CLASSIFICATION	2.7522616894676305E-6	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999969462572529	WITHOUT_CLASSIFICATION	3.0537427471943113E-6	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999998564360064	WITHOUT_CLASSIFICATION	1.4356399365016378E-7	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999999785176905	WITHOUT_CLASSIFICATION	2.1482309436116253E-8	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999987285941115	WITHOUT_CLASSIFICATION	1.271405888395978E-6	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9999996915619086	WITHOUT_CLASSIFICATION	3.084380914513734E-7	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9999999738926536	WITHOUT_CLASSIFICATION	2.6107346419761856E-8	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999977443629922	WITHOUT_CLASSIFICATION	2.2556370078396732E-6	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999987558011713	WITHOUT_CLASSIFICATION	1.2441988287507252E-6	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999999428799801	WITHOUT_CLASSIFICATION	5.7120019897397785E-8	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9999991980523139	WITHOUT_CLASSIFICATION	8.019476860523214E-7	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999998885011709	WITHOUT_CLASSIFICATION	1.1149882899397791E-7	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999934442118095	WITHOUT_CLASSIFICATION	6.555788190576949E-6	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999994577104999	WITHOUT_CLASSIFICATION	5.42289500116329E-7	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999986635447842	WITHOUT_CLASSIFICATION	1.3364552158898946E-6	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9999977351402628	WITHOUT_CLASSIFICATION	2.264859737259118E-6	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999999878312618	WITHOUT_CLASSIFICATION	1.2168738126184744E-8	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999991910122222	WITHOUT_CLASSIFICATION	8.089877778749798E-7	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999991910122222	WITHOUT_CLASSIFICATION	8.089877778749798E-7	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9999998214367454	WITHOUT_CLASSIFICATION	1.7856325462709592E-7	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999985855751623	WITHOUT_CLASSIFICATION	1.4144248376869668E-6	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999994113108089	WITHOUT_CLASSIFICATION	5.88689191002809E-7	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999994393428097	WITHOUT_CLASSIFICATION	5.606571902862003E-7	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.999999712346441	WITHOUT_CLASSIFICATION	2.8765355903689925E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999923818452	WITHOUT_CLASSIFICATION	7.618154669231898E-9	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999995848886972	WITHOUT_CLASSIFICATION	4.151113027861159E-7	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999486830110604	WITHOUT_CLASSIFICATION	5.131698893958262E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999922958092138	WITHOUT_CLASSIFICATION	7.704190786227057E-6	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9996174565877556	WITHOUT_CLASSIFICATION	3.825434122444078E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999999655493023	WITHOUT_CLASSIFICATION	3.4450697620448896E-8	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999998958375672	WITHOUT_CLASSIFICATION	1.0416243289760731E-7	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9999957687049847	WITHOUT_CLASSIFICATION	4.231295015166447E-6	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9999890259848515	WITHOUT_CLASSIFICATION	1.0974015148401824E-5	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9979682394925378	WITHOUT_CLASSIFICATION	0.0020317605074622485	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9167944237191029	WITHOUT_CLASSIFICATION	0.08320557628089711	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999987577379625	WITHOUT_CLASSIFICATION	1.2422620373487448E-6	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999954827369687	WITHOUT_CLASSIFICATION	4.517263031325524E-6	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.999994589445009	WITHOUT_CLASSIFICATION	5.410554991074259E-6	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9999971000842532	WITHOUT_CLASSIFICATION	2.8999157467542334E-6	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999997126774892	WITHOUT_CLASSIFICATION	2.873225108155444E-7	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999999878048997	WITHOUT_CLASSIFICATION	1.2195100177870051E-8	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9999720850611757	WITHOUT_CLASSIFICATION	2.791493882436888E-5	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999329769325244	WITHOUT_CLASSIFICATION	6.702306747560557E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999962069384	WITHOUT_CLASSIFICATION	3.79306165944107E-9	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999999979773505	WITHOUT_CLASSIFICATION	2.0226494771343345E-9	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.999999927471626	WITHOUT_CLASSIFICATION	7.252837395253992E-8	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999999764928802	WITHOUT_CLASSIFICATION	2.350711990680293E-8	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999997502783387	WITHOUT_CLASSIFICATION	2.4972166136735594E-7	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999872543685876	WITHOUT_CLASSIFICATION	1.2745631412427044E-5	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999933957722595	WITHOUT_CLASSIFICATION	6.6042277405414265E-6	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9999975317574115	WITHOUT_CLASSIFICATION	2.468242588421776E-6	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999968446849997	WITHOUT_CLASSIFICATION	3.155315000334285E-6	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999998859424556	WITHOUT_CLASSIFICATION	1.1405754443920016E-7	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999974786814579	WITHOUT_CLASSIFICATION	2.5213185421552586E-6	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9999956045763367	WITHOUT_CLASSIFICATION	4.395423663237943E-6	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999899171115898	WITHOUT_CLASSIFICATION	1.0082888410219456E-5	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9999966242526717	WITHOUT_CLASSIFICATION	3.375747328314302E-6	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999988175259845	WITHOUT_CLASSIFICATION	1.182474015464996E-6	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9999994862471149	WITHOUT_CLASSIFICATION	5.137528851211879E-7	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999819842957542	WITHOUT_CLASSIFICATION	1.801570424574048E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999999838899509	WITHOUT_CLASSIFICATION	1.6110049029525103E-8	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9999999194399287	WITHOUT_CLASSIFICATION	8.056007138212377E-8	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999954464184965	WITHOUT_CLASSIFICATION	4.5535815035521895E-6	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999985789079819	WITHOUT_CLASSIFICATION	1.4210920180803628E-6	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9999594307042028	WITHOUT_CLASSIFICATION	4.056929579718103E-5	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999991006728545	WITHOUT_CLASSIFICATION	8.993271455320423E-7	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9999999977359593	WITHOUT_CLASSIFICATION	2.264040749407183E-9	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999991006728545	WITHOUT_CLASSIFICATION	8.993271455320423E-7	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998762911526053	WITHOUT_CLASSIFICATION	1.2370884739454902E-4	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9684267162552457	WITHOUT_CLASSIFICATION	0.0315732837447543	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999999892348486	WITHOUT_CLASSIFICATION	1.0765151497796997E-8	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999999756550442	WITHOUT_CLASSIFICATION	2.4344955907063856E-8	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.999999845691047	WITHOUT_CLASSIFICATION	1.5430895291382684E-7	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999999985266674	WITHOUT_CLASSIFICATION	1.4733325518793795E-9	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999995195490882	WITHOUT_CLASSIFICATION	4.804509119318648E-7	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9999963716498615	WITHOUT_CLASSIFICATION	3.628350138435739E-6	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9999699677579382	WITHOUT_CLASSIFICATION	3.0032242061758875E-5	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9999990166252286	WITHOUT_CLASSIFICATION	9.83374771406575E-7	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9999990871783238	WITHOUT_CLASSIFICATION	9.128216761953429E-7	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999997906356499	WITHOUT_CLASSIFICATION	2.0936435005153623E-7	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999992868546633	WITHOUT_CLASSIFICATION	7.13145336595461E-7	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9994251222070165	WITHOUT_CLASSIFICATION	5.74877792983417E-4	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9999984746329941	WITHOUT_CLASSIFICATION	1.5253670059975008E-6	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999836226858481	WITHOUT_CLASSIFICATION	1.6377314151930607E-5	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9995996126945527	WITHOUT_CLASSIFICATION	4.003873054473772E-4	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9999509447489824	WITHOUT_CLASSIFICATION	4.905525101758287E-5	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.999981401241478	WITHOUT_CLASSIFICATION	1.8598758521925348E-5	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999979525523881	WITHOUT_CLASSIFICATION	2.0474476118693867E-6	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999999531883014	WITHOUT_CLASSIFICATION	4.6811698709003825E-8	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999991526106263	WITHOUT_CLASSIFICATION	8.473893737655209E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999995195490882	WITHOUT_CLASSIFICATION	4.804509119318648E-7	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999999361658651	WITHOUT_CLASSIFICATION	6.38341348832729E-8	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999979424936323	WITHOUT_CLASSIFICATION	2.0575063678190793E-6	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999979424936323	WITHOUT_CLASSIFICATION	2.0575063678190793E-6	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999983163252235	WITHOUT_CLASSIFICATION	1.683674776408048E-6	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999987660564018	WITHOUT_CLASSIFICATION	1.2339435981787078E-6	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999987660564018	WITHOUT_CLASSIFICATION	1.2339435981787078E-6	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999941914702392	WITHOUT_CLASSIFICATION	5.8085297608575284E-6	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999941914702392	WITHOUT_CLASSIFICATION	5.8085297608575284E-6	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.8680259220794916	WITHOUT_CLASSIFICATION	0.1319740779205085	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999998223853359	WITHOUT_CLASSIFICATION	1.776146641718163E-7	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999984982607	WITHOUT_CLASSIFICATION	1.501739188922351E-9	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999984829505073	WITHOUT_CLASSIFICATION	1.5170494927560049E-6	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999997705095083	WITHOUT_CLASSIFICATION	2.2949049164605014E-7	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999995400574384	WITHOUT_CLASSIFICATION	4.599425616675081E-7	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9999443477665432	WITHOUT_CLASSIFICATION	5.565223345682503E-5	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999930295319062	WITHOUT_CLASSIFICATION	6.970468093845828E-6	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999998245219264	WITHOUT_CLASSIFICATION	1.7547807363921225E-7	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9999969660335295	WITHOUT_CLASSIFICATION	3.0339664705936716E-6	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999997140839361	WITHOUT_CLASSIFICATION	2.859160638709845E-7	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999971040300935	WITHOUT_CLASSIFICATION	2.8959699066574862E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999997013203039	WITHOUT_CLASSIFICATION	2.9867969607600933E-7	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999991219869342	WITHOUT_CLASSIFICATION	8.780130657674147E-7	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9999971372249552	WITHOUT_CLASSIFICATION	2.8627750448555935E-6	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.999996937749355	WITHOUT_CLASSIFICATION	3.062250644971794E-6	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999995767241131	WITHOUT_CLASSIFICATION	4.2327588688039437E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999994605040287	WITHOUT_CLASSIFICATION	5.394959712197798E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999994605040287	WITHOUT_CLASSIFICATION	5.394959712197798E-7	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999998154583333	WITHOUT_CLASSIFICATION	1.845416667283668E-7	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9986321161772136	WITHOUT_CLASSIFICATION	0.00136788382278642	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999995476697376	WITHOUT_CLASSIFICATION	4.523302622669894E-7	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9999953141247185	WITHOUT_CLASSIFICATION	4.6858752814420435E-6	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999986795169541	WITHOUT_CLASSIFICATION	1.320483045911303E-6	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999975447693008	WITHOUT_CLASSIFICATION	2.4552306991545427E-6	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999969326838016	WITHOUT_CLASSIFICATION	3.067316198431282E-6	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999989892933011	WITHOUT_CLASSIFICATION	1.0107066989585737E-6	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9999991332308161	WITHOUT_CLASSIFICATION	8.6676918386325E-7	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.999998729348982	WITHOUT_CLASSIFICATION	1.2706510180380012E-6	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999999992240802	WITHOUT_CLASSIFICATION	7.759198444640234E-10	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999996132071315	WITHOUT_CLASSIFICATION	3.8679286848366737E-7	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999986323912226	WITHOUT_CLASSIFICATION	1.367608777481248E-6	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999997226442293	WITHOUT_CLASSIFICATION	2.77355770692672E-7	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9999992267205555	WITHOUT_CLASSIFICATION	7.73279444529516E-7	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999999055576064	WITHOUT_CLASSIFICATION	9.44423935533377E-8	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.999970234623867	WITHOUT_CLASSIFICATION	2.9765376132852753E-5	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999499067057849	WITHOUT_CLASSIFICATION	5.009329421512232E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9999485591673053	WITHOUT_CLASSIFICATION	5.1440832694743414E-5	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999861034723763	WITHOUT_CLASSIFICATION	1.3896527623771106E-5	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9999625830387063	WITHOUT_CLASSIFICATION	3.7416961293679676E-5	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999890518874622	WITHOUT_CLASSIFICATION	1.0948112537744878E-5	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999856886398265	WITHOUT_CLASSIFICATION	1.4311360173475721E-5	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999998530259525	WITHOUT_CLASSIFICATION	1.4697404751478596E-7	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999999993430112	WITHOUT_CLASSIFICATION	6.569887017224026E-10	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.999999999254763	WITHOUT_CLASSIFICATION	7.452369838668838E-10	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999999708757862	WITHOUT_CLASSIFICATION	2.9124213824028662E-8	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999999701369998	WITHOUT_CLASSIFICATION	2.986300022159313E-8	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999892286681559	WITHOUT_CLASSIFICATION	1.0771331844206106E-5	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9999990251161889	WITHOUT_CLASSIFICATION	9.748838110615401E-7	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999999793626924	WITHOUT_CLASSIFICATION	2.063730756095155E-8	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999998639347296	WITHOUT_CLASSIFICATION	1.3606527029923032E-7	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999984633321526	WITHOUT_CLASSIFICATION	1.5366678474852704E-6	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999968463707984	WITHOUT_CLASSIFICATION	3.1536292014410675E-6	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9999957627082157	WITHOUT_CLASSIFICATION	4.237291784354722E-6	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9999981976701893	WITHOUT_CLASSIFICATION	1.8023298107635013E-6	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.999933666424539	WITHOUT_CLASSIFICATION	6.633357546107349E-5	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9999927355614113	WITHOUT_CLASSIFICATION	7.264438588658515E-6	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.999999676259954	WITHOUT_CLASSIFICATION	3.237400459984004E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999990456821762	WITHOUT_CLASSIFICATION	9.543178237116969E-7	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999994371953915	WITHOUT_CLASSIFICATION	5.628046084372919E-7	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.999999784039368	WITHOUT_CLASSIFICATION	2.1596063208995175E-7	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999952519394116	WITHOUT_CLASSIFICATION	4.7480605883382974E-6	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999991974637548	WITHOUT_CLASSIFICATION	8.025362452136604E-7	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9977871443700492	WITHOUT_CLASSIFICATION	0.0022128556299506907	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999999331502796	WITHOUT_CLASSIFICATION	6.684972035791467E-8	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.999984768255913	WITHOUT_CLASSIFICATION	1.5231744087112811E-5	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999991974637548	WITHOUT_CLASSIFICATION	8.025362452136604E-7	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.999997003230014	WITHOUT_CLASSIFICATION	2.9967699861282116E-6	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999998299637912	WITHOUT_CLASSIFICATION	1.700362087384889E-7	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999998220239615	WITHOUT_CLASSIFICATION	1.7797603850085512E-7	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.999970645840697	WITHOUT_CLASSIFICATION	2.9354159303071887E-5	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999955796335949	WITHOUT_CLASSIFICATION	4.4203664051429165E-6	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9977871443700492	WITHOUT_CLASSIFICATION	0.0022128556299506907	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.999984768255913	WITHOUT_CLASSIFICATION	1.5231744087112811E-5	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999932186271118	WITHOUT_CLASSIFICATION	6.781372888249088E-6	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999815326198914	WITHOUT_CLASSIFICATION	1.8467380108572697E-5	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999973594385241	WITHOUT_CLASSIFICATION	2.6405614758523247E-6	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999997973635166	WITHOUT_CLASSIFICATION	2.0263648334355836E-7	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999948326442187	WITHOUT_CLASSIFICATION	5.167355781279104E-6	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999970694797053	WITHOUT_CLASSIFICATION	2.930520294655143E-6	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9997802106072613	WITHOUT_CLASSIFICATION	2.1978939273883033E-4	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999989666927908	WITHOUT_CLASSIFICATION	1.0333072092358416E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999937426154437	WITHOUT_CLASSIFICATION	6.2573845563602294E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999937426154437	WITHOUT_CLASSIFICATION	6.2573845563602294E-6	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9999990297539871	WITHOUT_CLASSIFICATION	9.702460128742937E-7	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.999995684481786	WITHOUT_CLASSIFICATION	4.315518214068342E-6	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999966876594876	WITHOUT_CLASSIFICATION	3.3123405125678806E-6	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999537994696446	WITHOUT_CLASSIFICATION	4.620053035549074E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999608689404	WITHOUT_CLASSIFICATION	3.9131059510442525E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999999933854989	WITHOUT_CLASSIFICATION	6.61450109974598E-8	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995921493732	WITHOUT_CLASSIFICATION	4.0785062686189873E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995921493732	WITHOUT_CLASSIFICATION	4.0785062686189873E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999491288915	WITHOUT_CLASSIFICATION	5.087110854762849E-8	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998737272845	WITHOUT_CLASSIFICATION	1.2627271546134704E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998737272845	WITHOUT_CLASSIFICATION	1.2627271546134704E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999980959634269	WITHOUT_CLASSIFICATION	1.9040365729997778E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999476523529	WITHOUT_CLASSIFICATION	5.234764715047918E-8	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999476523529	WITHOUT_CLASSIFICATION	5.234764715047918E-8	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999997418344273	WITHOUT_CLASSIFICATION	2.581655727591642E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999979826819	WITHOUT_CLASSIFICATION	2.0173181089870275E-8	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999052993288	WITHOUT_CLASSIFICATION	9.470067124970181E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999999074435963	WITHOUT_CLASSIFICATION	9.255640370119442E-8	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988997282738	WITHOUT_CLASSIFICATION	1.1002717261180713E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990476613889	WITHOUT_CLASSIFICATION	9.52338611185431E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999999045801422	WITHOUT_CLASSIFICATION	9.541985780378818E-8	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999172363175	WITHOUT_CLASSIFICATION	8.276368246736127E-8	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999993470953205	WITHOUT_CLASSIFICATION	6.529046795187764E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999998378791435	WITHOUT_CLASSIFICATION	1.6212085660730947E-7	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.999990018662289	WITHOUT_CLASSIFICATION	9.981337711084488E-6	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9999142828086723	WITHOUT_CLASSIFICATION	8.571719132765506E-5	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999829594685644	WITHOUT_CLASSIFICATION	1.7040531435545374E-5	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999938446557762	WITHOUT_CLASSIFICATION	6.15534422385854E-6	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9999905389974696	WITHOUT_CLASSIFICATION	9.461002530391693E-6	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999999887758415	WITHOUT_CLASSIFICATION	1.1224158516500216E-8	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999999976496663	WITHOUT_CLASSIFICATION	2.350333648457311E-9	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999998725183863	WITHOUT_CLASSIFICATION	1.2748161375936822E-7	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999997738074202	WITHOUT_CLASSIFICATION	2.2619257982056214E-7	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9999928687505418	WITHOUT_CLASSIFICATION	7.131249458261788E-6	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999984966359617	WITHOUT_CLASSIFICATION	1.5033640382597243E-6	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.999998416628028	WITHOUT_CLASSIFICATION	1.5833719720526297E-6	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9999961714356665	WITHOUT_CLASSIFICATION	3.828564333415528E-6	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999923875321122	WITHOUT_CLASSIFICATION	7.612467887743005E-6	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9999963570293033	WITHOUT_CLASSIFICATION	3.6429706967560803E-6	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999834701690592	WITHOUT_CLASSIFICATION	1.652983094080422E-5	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999903650260751	WITHOUT_CLASSIFICATION	9.634973924909061E-6	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9999885505023527	WITHOUT_CLASSIFICATION	1.1449497647419995E-5	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999915342565494	WITHOUT_CLASSIFICATION	8.46574345067552E-6	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999973896251055	WITHOUT_CLASSIFICATION	2.610374894462213E-6	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999999302734495	WITHOUT_CLASSIFICATION	6.972655056377266E-8	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9999565257250924	WITHOUT_CLASSIFICATION	4.347427490753674E-5	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9999780834882455	WITHOUT_CLASSIFICATION	2.1916511754518524E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999979826819	WITHOUT_CLASSIFICATION	2.0173181089870275E-8	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999052993288	WITHOUT_CLASSIFICATION	9.470067124970181E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999999074435963	WITHOUT_CLASSIFICATION	9.255640370119442E-8	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990476613889	WITHOUT_CLASSIFICATION	9.52338611185431E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999999932367232	WITHOUT_CLASSIFICATION	6.763276845606578E-9	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999172363175	WITHOUT_CLASSIFICATION	8.276368246736127E-8	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999993470953205	WITHOUT_CLASSIFICATION	6.529046795187764E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999998378791435	WITHOUT_CLASSIFICATION	1.6212085660730947E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.999992322364334	WITHOUT_CLASSIFICATION	7.677635666059191E-6	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9999565020234362	WITHOUT_CLASSIFICATION	4.3497976563779394E-5	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.999999697519357	WITHOUT_CLASSIFICATION	3.0248064296497465E-7	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9999599589397516	WITHOUT_CLASSIFICATION	4.004106024825244E-5	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999144564725371	WITHOUT_CLASSIFICATION	8.55435274629225E-5	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9999957346396916	WITHOUT_CLASSIFICATION	4.265360308402006E-6	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999994535466054	WITHOUT_CLASSIFICATION	5.464533945842849E-7	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999994535466054	WITHOUT_CLASSIFICATION	5.464533945842849E-7	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999533571196583	WITHOUT_CLASSIFICATION	4.6642880341712876E-5	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999094837681928	WITHOUT_CLASSIFICATION	9.051623180726843E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999199438693155	WITHOUT_CLASSIFICATION	8.005613068460415E-5	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.999997530831212	WITHOUT_CLASSIFICATION	2.4691687879301434E-6	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.999997530831212	WITHOUT_CLASSIFICATION	2.4691687879301434E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999888644138327	WITHOUT_CLASSIFICATION	1.1135586167187284E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999888644138327	WITHOUT_CLASSIFICATION	1.1135586167187284E-5	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999999692132586	WITHOUT_CLASSIFICATION	3.0786741321952786E-8	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.999999965088432	WITHOUT_CLASSIFICATION	3.491156785423355E-8	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999999387909662	WITHOUT_CLASSIFICATION	6.120903383316244E-8	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999999958460253	WITHOUT_CLASSIFICATION	4.1539747609875176E-9	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999750630919457	WITHOUT_CLASSIFICATION	2.4936908054279847E-5	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999746225574035	WITHOUT_CLASSIFICATION	2.5377442596416752E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9999898674840542	WITHOUT_CLASSIFICATION	1.013251594588506E-5	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999637617401042	WITHOUT_CLASSIFICATION	3.6238259895857684E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999989534643842	WITHOUT_CLASSIFICATION	1.0465356158947215E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999693145801416	WITHOUT_CLASSIFICATION	3.068541985830104E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999693145801416	WITHOUT_CLASSIFICATION	3.068541985830104E-5	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9981900300957947	WITHOUT_CLASSIFICATION	0.0018099699042053836	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9988982051971004	WITHOUT_CLASSIFICATION	0.0011017948028996004	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9988982051971004	WITHOUT_CLASSIFICATION	0.0011017948028996004	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9988982051971004	WITHOUT_CLASSIFICATION	0.0011017948028996004	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999805042553337	WITHOUT_CLASSIFICATION	1.9495744666290974E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999805042553337	WITHOUT_CLASSIFICATION	1.9495744666290974E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999897167501766	WITHOUT_CLASSIFICATION	1.0283249823415975E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999897167501766	WITHOUT_CLASSIFICATION	1.0283249823415975E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999897167501766	WITHOUT_CLASSIFICATION	1.0283249823415975E-5	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999972023560394	WITHOUT_CLASSIFICATION	2.797643960544629E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999972023560394	WITHOUT_CLASSIFICATION	2.797643960544629E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999972023560394	WITHOUT_CLASSIFICATION	2.797643960544629E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999998448067	WITHOUT_CLASSIFICATION	1.5519326015574607E-10	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999998448067	WITHOUT_CLASSIFICATION	1.5519326015574607E-10	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999974054755222	WITHOUT_CLASSIFICATION	2.5945244778691406E-6	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999974054755222	WITHOUT_CLASSIFICATION	2.5945244778691406E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999994558557541	WITHOUT_CLASSIFICATION	5.441442459372357E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999994558557541	WITHOUT_CLASSIFICATION	5.441442459372357E-7	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999106645803	WITHOUT_CLASSIFICATION	8.933541973223417E-8	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999106645803	WITHOUT_CLASSIFICATION	8.933541973223417E-8	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999998811776539	WITHOUT_CLASSIFICATION	1.18822346149252E-7	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999998811776539	WITHOUT_CLASSIFICATION	1.18822346149252E-7	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999938511087973	WITHOUT_CLASSIFICATION	6.1488912027202945E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999938511087973	WITHOUT_CLASSIFICATION	6.1488912027202945E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999826523980389	WITHOUT_CLASSIFICATION	1.7347601961182332E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999826523980389	WITHOUT_CLASSIFICATION	1.7347601961182332E-5	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999998448067	WITHOUT_CLASSIFICATION	1.5519326015574607E-10	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999974054755222	WITHOUT_CLASSIFICATION	2.5945244778691406E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999994558557541	WITHOUT_CLASSIFICATION	5.441442459372357E-7	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999998811776539	WITHOUT_CLASSIFICATION	1.18822346149252E-7	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999938511087973	WITHOUT_CLASSIFICATION	6.1488912027202945E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999826523980389	WITHOUT_CLASSIFICATION	1.7347601961182332E-5	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9999919843748202	WITHOUT_CLASSIFICATION	8.015625179822555E-6	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9999981711571414	WITHOUT_CLASSIFICATION	1.8288428585460601E-6	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9999361973209207	WITHOUT_CLASSIFICATION	6.380267907944919E-5	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9996648060535406	WITHOUT_CLASSIFICATION	3.351939464595168E-4	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999946417845379	WITHOUT_CLASSIFICATION	5.358215462126656E-6	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9999946217226179	WITHOUT_CLASSIFICATION	5.378277382118341E-6	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999999685535956	WITHOUT_CLASSIFICATION	3.1446404460192404E-8	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9999982665850116	WITHOUT_CLASSIFICATION	1.733414988381919E-6	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999912511821007	WITHOUT_CLASSIFICATION	8.748817899286147E-6	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999996283714758	WITHOUT_CLASSIFICATION	3.71628524189298E-7	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999964085429381	WITHOUT_CLASSIFICATION	3.5914570618040806E-6	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9999997454040211	WITHOUT_CLASSIFICATION	2.545959787651257E-7	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999977774315468	WITHOUT_CLASSIFICATION	2.2225684531321045E-6	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999993748028273	WITHOUT_CLASSIFICATION	6.251971727551442E-7	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999956067304374	WITHOUT_CLASSIFICATION	4.3932695625407E-6	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999942592671238	WITHOUT_CLASSIFICATION	5.740732876273411E-6	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999923455867112	WITHOUT_CLASSIFICATION	7.654413288733069E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999502839000306	WITHOUT_CLASSIFICATION	4.971609996926532E-5	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999954910828517	WITHOUT_CLASSIFICATION	4.508917148356798E-6	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9999901773131574	WITHOUT_CLASSIFICATION	9.822686842648927E-6	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9999997505549828	WITHOUT_CLASSIFICATION	2.4944501718252997E-7	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999893249672979	WITHOUT_CLASSIFICATION	1.0675032702244763E-5	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999993983128996	WITHOUT_CLASSIFICATION	6.016871003366308E-7	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999938101899299	WITHOUT_CLASSIFICATION	6.1898100700467705E-6	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999777345101913	WITHOUT_CLASSIFICATION	2.226548980871133E-5	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9999701462791086	WITHOUT_CLASSIFICATION	2.985372089147491E-5	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999705868193641	WITHOUT_CLASSIFICATION	2.9413180635914336E-5	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.99999724285426	WITHOUT_CLASSIFICATION	2.7571457400342093E-6	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999950595178825	WITHOUT_CLASSIFICATION	4.940482117569257E-6	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999938809311695	WITHOUT_CLASSIFICATION	6.11906883044658E-6	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9999985973456987	WITHOUT_CLASSIFICATION	1.4026543013403796E-6	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999635354753706	WITHOUT_CLASSIFICATION	3.6464524629323865E-5	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999778838399555	WITHOUT_CLASSIFICATION	2.2116160044516573E-5	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999778838399555	WITHOUT_CLASSIFICATION	2.2116160044516573E-5	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.999997096979351	WITHOUT_CLASSIFICATION	2.9030206488449458E-6	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.999994237679756	WITHOUT_CLASSIFICATION	5.76232024397753E-6	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9999056728935919	WITHOUT_CLASSIFICATION	9.432710640822318E-5	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9999998370522797	WITHOUT_CLASSIFICATION	1.6294772035252985E-7	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999998072204123	WITHOUT_CLASSIFICATION	1.927795877063812E-7	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999995458214379	WITHOUT_CLASSIFICATION	4.541785620324465E-7	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9999912526604788	WITHOUT_CLASSIFICATION	8.747339521209668E-6	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9997518206514067	WITHOUT_CLASSIFICATION	2.4817934859326836E-4	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9999996562755217	WITHOUT_CLASSIFICATION	3.437244783548035E-7	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9999975522946586	WITHOUT_CLASSIFICATION	2.4477053414128164E-6	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9999954242364877	WITHOUT_CLASSIFICATION	4.575763512380719E-6	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9999995740134238	WITHOUT_CLASSIFICATION	4.259865762001865E-7	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999858701713666	WITHOUT_CLASSIFICATION	1.4129828633336926E-5	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999858701713666	WITHOUT_CLASSIFICATION	1.4129828633336926E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999952446831962	WITHOUT_CLASSIFICATION	4.75531680387667E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999952446831962	WITHOUT_CLASSIFICATION	4.75531680387667E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999952446831962	WITHOUT_CLASSIFICATION	4.75531680387667E-6	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9998164352064093	WITHOUT_CLASSIFICATION	1.8356479359075704E-4	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999851767826254	WITHOUT_CLASSIFICATION	1.4823217374571355E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999975788359746	WITHOUT_CLASSIFICATION	2.4211640253957567E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999975788359746	WITHOUT_CLASSIFICATION	2.4211640253957567E-6	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9999897404262025	WITHOUT_CLASSIFICATION	1.0259573797477254E-5	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999994925894584	WITHOUT_CLASSIFICATION	5.074105416309981E-7	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999993913145914	WITHOUT_CLASSIFICATION	6.086854086665763E-7	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999994838249093	WITHOUT_CLASSIFICATION	5.161750905956157E-7	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9999907369634111	WITHOUT_CLASSIFICATION	9.263036588897372E-6	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999957287248429	WITHOUT_CLASSIFICATION	4.271275157137236E-6	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999940855534535	WITHOUT_CLASSIFICATION	5.9144465464853945E-6	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999998585936243	WITHOUT_CLASSIFICATION	1.4140637572105458E-7	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999992993112051	WITHOUT_CLASSIFICATION	7.006887948893667E-7	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9993776500477334	WITHOUT_CLASSIFICATION	6.223499522667447E-4	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999938240675753	WITHOUT_CLASSIFICATION	6.175932424580209E-6	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.999995428785514	WITHOUT_CLASSIFICATION	4.571214486144801E-6	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.999999910433569	WITHOUT_CLASSIFICATION	8.956643104780772E-8	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9999916058761208	WITHOUT_CLASSIFICATION	8.394123879106346E-6	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999882803600814	WITHOUT_CLASSIFICATION	1.1719639918712303E-5	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999977004204313	WITHOUT_CLASSIFICATION	2.299579568589102E-6	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.999999970098626	WITHOUT_CLASSIFICATION	2.9901374071772884E-8	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999954945111585	WITHOUT_CLASSIFICATION	4.505488841466401E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999952970022036	WITHOUT_CLASSIFICATION	4.702997796463591E-6	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9999969452613989	WITHOUT_CLASSIFICATION	3.0547386009685775E-6	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999137437325695	WITHOUT_CLASSIFICATION	8.62562674305593E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999967097653628	WITHOUT_CLASSIFICATION	3.2902346370960286E-6	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9988129081958207	WITHOUT_CLASSIFICATION	0.0011870918041793732	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.999998668750662	WITHOUT_CLASSIFICATION	1.3312493380601585E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.999998668750662	WITHOUT_CLASSIFICATION	1.3312493380601585E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.999998668750662	WITHOUT_CLASSIFICATION	1.3312493380601585E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999953071979868	WITHOUT_CLASSIFICATION	4.6928020131526105E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999953071979868	WITHOUT_CLASSIFICATION	4.6928020131526105E-6	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.999992700000598	WITHOUT_CLASSIFICATION	7.299999402087751E-6	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999962666440297	WITHOUT_CLASSIFICATION	3.7333559702340037E-6	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999962666440297	WITHOUT_CLASSIFICATION	3.7333559702340037E-6	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999803469558073	WITHOUT_CLASSIFICATION	1.9653044192685765E-5	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.999999795713203	WITHOUT_CLASSIFICATION	2.0428679704822943E-7	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.999992700000598	WITHOUT_CLASSIFICATION	7.299999402087751E-6	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999998553403757	WITHOUT_CLASSIFICATION	1.446596243892836E-7	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.999992700000598	WITHOUT_CLASSIFICATION	7.299999402087751E-6	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999996091729008	WITHOUT_CLASSIFICATION	3.908270993491329E-7	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999996091729008	WITHOUT_CLASSIFICATION	3.908270993491329E-7	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999858701713666	WITHOUT_CLASSIFICATION	1.4129828633336926E-5	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9997812678753505	WITHOUT_CLASSIFICATION	2.1873212464954683E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9995318775675989	WITHOUT_CLASSIFICATION	4.6812243240113493E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9991526794020303	WITHOUT_CLASSIFICATION	8.473205979696606E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9993488588967797	WITHOUT_CLASSIFICATION	6.511411032203248E-4	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9995271376520461	WITHOUT_CLASSIFICATION	4.7286234795395374E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9990024666921672	WITHOUT_CLASSIFICATION	9.975333078328286E-4	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9989025511793188	WITHOUT_CLASSIFICATION	0.0010974488206812027	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9995581694090864	WITHOUT_CLASSIFICATION	4.4183059091356904E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.999415777126361	WITHOUT_CLASSIFICATION	5.842228736390536E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9995702597568022	WITHOUT_CLASSIFICATION	4.297402431977582E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.999426522009854	WITHOUT_CLASSIFICATION	5.734779901460648E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9994904422281149	WITHOUT_CLASSIFICATION	5.095577718851463E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9996241299601197	WITHOUT_CLASSIFICATION	3.7587003988026884E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9990043681376344	WITHOUT_CLASSIFICATION	9.956318623656564E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9993976393726602	WITHOUT_CLASSIFICATION	6.023606273397538E-4	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9993704386866121	WITHOUT_CLASSIFICATION	6.295613133878807E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9991234873100433	WITHOUT_CLASSIFICATION	8.7651268995676E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9989632385995372	WITHOUT_CLASSIFICATION	0.0010367614004627378	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9988546673194433	WITHOUT_CLASSIFICATION	0.0011453326805567216	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9995481871525937	WITHOUT_CLASSIFICATION	4.5181284740625736E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9995124766758847	WITHOUT_CLASSIFICATION	4.8752332411529744E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9989440688013976	WITHOUT_CLASSIFICATION	0.0010559311986023212	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9992356227414626	WITHOUT_CLASSIFICATION	7.643772585374172E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9991021249892637	WITHOUT_CLASSIFICATION	8.97875010736335E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9993839446407669	WITHOUT_CLASSIFICATION	6.160553592330412E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9993297230000162	WITHOUT_CLASSIFICATION	6.702769999836806E-4	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9994430922503115	WITHOUT_CLASSIFICATION	5.569077496885557E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9994110766792317	WITHOUT_CLASSIFICATION	5.88923320768372E-4	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9993376179382725	WITHOUT_CLASSIFICATION	6.623820617274996E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9995694181981308	WITHOUT_CLASSIFICATION	4.305818018691543E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9995032066163015	WITHOUT_CLASSIFICATION	4.967933836984202E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9991984902587628	WITHOUT_CLASSIFICATION	8.015097412373083E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9991832688678646	WITHOUT_CLASSIFICATION	8.167311321354311E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9992054238667517	WITHOUT_CLASSIFICATION	7.945761332482543E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9994023739577269	WITHOUT_CLASSIFICATION	5.976260422731004E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9995310336765622	WITHOUT_CLASSIFICATION	4.689663234378439E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9993844827884855	WITHOUT_CLASSIFICATION	6.155172115144682E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9989439767892286	WITHOUT_CLASSIFICATION	0.0010560232107713217	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9993951048226655	WITHOUT_CLASSIFICATION	6.048951773345656E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.999254721052897	WITHOUT_CLASSIFICATION	7.452789471030108E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9992796937785878	WITHOUT_CLASSIFICATION	7.203062214121854E-4	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.999367714984541	WITHOUT_CLASSIFICATION	6.322850154589165E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9995148457540372	WITHOUT_CLASSIFICATION	4.8515424596296295E-4	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9994062765416506	WITHOUT_CLASSIFICATION	5.937234583494352E-4	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9995811813159869	WITHOUT_CLASSIFICATION	4.188186840130024E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9991161648812645	WITHOUT_CLASSIFICATION	8.838351187355609E-4	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9990001639229878	WITHOUT_CLASSIFICATION	9.99836077012081E-4	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9994527540158897	WITHOUT_CLASSIFICATION	5.47245984110275E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9989716366540559	WITHOUT_CLASSIFICATION	0.0010283633459440618	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9991793056111203	WITHOUT_CLASSIFICATION	8.206943888796509E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9990133482481124	WITHOUT_CLASSIFICATION	9.866517518876223E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9990388632729538	WITHOUT_CLASSIFICATION	9.611367270460682E-4	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9993913803885114	WITHOUT_CLASSIFICATION	6.086196114886054E-4	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9996777838909466	WITHOUT_CLASSIFICATION	3.222161090534498E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9993458556593791	WITHOUT_CLASSIFICATION	6.541443406210211E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9993554064754251	WITHOUT_CLASSIFICATION	6.445935245748318E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9994890908240582	WITHOUT_CLASSIFICATION	5.109091759417981E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9988517370416564	WITHOUT_CLASSIFICATION	0.001148262958343536	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9993561083502797	WITHOUT_CLASSIFICATION	6.438916497203025E-4	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9994726082983403	WITHOUT_CLASSIFICATION	5.273917016596841E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9984045135088472	WITHOUT_CLASSIFICATION	0.0015954864911528473	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9994227789454652	WITHOUT_CLASSIFICATION	5.772210545348118E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9995706321847464	WITHOUT_CLASSIFICATION	4.2936781525366937E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9990887779235028	WITHOUT_CLASSIFICATION	9.112220764971239E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9990929010424731	WITHOUT_CLASSIFICATION	9.070989575269685E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9992117365986098	WITHOUT_CLASSIFICATION	7.882634013901833E-4	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9991422450895476	WITHOUT_CLASSIFICATION	8.577549104524291E-4	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9991875703488037	WITHOUT_CLASSIFICATION	8.124296511963245E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9994938440074752	WITHOUT_CLASSIFICATION	5.061559925247131E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9992288875881772	WITHOUT_CLASSIFICATION	7.711124118229229E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9992780398368428	WITHOUT_CLASSIFICATION	7.219601631571687E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9990470410153394	WITHOUT_CLASSIFICATION	9.529589846606269E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9994114444357937	WITHOUT_CLASSIFICATION	5.885555642064115E-4	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9994988792010864	WITHOUT_CLASSIFICATION	5.011207989137399E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9996088155707211	WITHOUT_CLASSIFICATION	3.911844292788561E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9990030660363037	WITHOUT_CLASSIFICATION	9.969339636961764E-4	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9990082317008587	WITHOUT_CLASSIFICATION	9.917682991412483E-4	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9986330718798656	WITHOUT_CLASSIFICATION	0.0013669281201343954	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9990596823059339	WITHOUT_CLASSIFICATION	9.403176940661114E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9994371461798558	WITHOUT_CLASSIFICATION	5.628538201441522E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9999902572484283	WITHOUT_CLASSIFICATION	9.742751571793237E-6	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999949914260762	WITHOUT_CLASSIFICATION	5.00857392385803E-6	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.999999299254765	WITHOUT_CLASSIFICATION	7.007452349615365E-7	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999992780114895	WITHOUT_CLASSIFICATION	7.219885104454323E-7	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999999526661051	WITHOUT_CLASSIFICATION	4.7333894904923604E-8	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999998709896197	WITHOUT_CLASSIFICATION	1.290103801656366E-7	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999949952278246	WITHOUT_CLASSIFICATION	5.004772175396177E-6	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999936177954568	WITHOUT_CLASSIFICATION	6.382204543200884E-6	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999977882735472	WITHOUT_CLASSIFICATION	2.211726452766404E-6	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999984564355971	WITHOUT_CLASSIFICATION	1.5435644028197303E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999995458214379	WITHOUT_CLASSIFICATION	4.541785620324465E-7	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9998164352064093	WITHOUT_CLASSIFICATION	1.8356479359075704E-4	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999851767826254	WITHOUT_CLASSIFICATION	1.4823217374571355E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999975788359746	WITHOUT_CLASSIFICATION	2.4211640253957567E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999954945111585	WITHOUT_CLASSIFICATION	4.505488841466401E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999952970022036	WITHOUT_CLASSIFICATION	4.702997796463591E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999977024040335	WITHOUT_CLASSIFICATION	2.297595966490959E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999953071979868	WITHOUT_CLASSIFICATION	4.6928020131526105E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999858701713666	WITHOUT_CLASSIFICATION	1.4129828633336926E-5	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999939297582202	WITHOUT_CLASSIFICATION	6.0702417797167965E-6	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999968794239917	WITHOUT_CLASSIFICATION	3.120576008254569E-6	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999984412699131	WITHOUT_CLASSIFICATION	1.5587300869853243E-6	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999982064611292	WITHOUT_CLASSIFICATION	1.7935388707386776E-6	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9998658511154661	WITHOUT_CLASSIFICATION	1.3414888453383824E-4	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.999986160129111	WITHOUT_CLASSIFICATION	1.3839870888899237E-5	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999998230270435	WITHOUT_CLASSIFICATION	1.7697295652193464E-7	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999999748954512	WITHOUT_CLASSIFICATION	2.5104548775799376E-8	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999502839000306	WITHOUT_CLASSIFICATION	4.971609996926532E-5	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9999965248927906	WITHOUT_CLASSIFICATION	3.4751072095008194E-6	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999980178331678	WITHOUT_CLASSIFICATION	1.982166832325007E-6	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999997804775843	WITHOUT_CLASSIFICATION	2.1952241573971866E-7	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999959229945593	WITHOUT_CLASSIFICATION	4.0770054407107304E-6	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999984873252816	WITHOUT_CLASSIFICATION	1.5126747183310335E-6	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.999986691209099	WITHOUT_CLASSIFICATION	1.3308790901113404E-5	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9999778513031179	WITHOUT_CLASSIFICATION	2.214869688201228E-5	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999987725312676	WITHOUT_CLASSIFICATION	1.2274687324168998E-6	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999992077681152	WITHOUT_CLASSIFICATION	7.922318846351929E-7	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999802826821339	WITHOUT_CLASSIFICATION	1.971731786618049E-5	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999929805815412	WITHOUT_CLASSIFICATION	7.019418458871344E-6	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999966744844457	WITHOUT_CLASSIFICATION	3.3255155541148336E-6	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9999948845965112	WITHOUT_CLASSIFICATION	5.115403488883533E-6	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999999751725344	WITHOUT_CLASSIFICATION	2.482746563721361E-8	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999996952426223	WITHOUT_CLASSIFICATION	3.047573777358174E-7	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9999725329520903	WITHOUT_CLASSIFICATION	2.7467047909686E-5	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999903149400905	WITHOUT_CLASSIFICATION	9.685059909476573E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999966305331637	WITHOUT_CLASSIFICATION	3.369466836431885E-6	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.999998619710001	WITHOUT_CLASSIFICATION	1.380289998955354E-6	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9997409928481565	WITHOUT_CLASSIFICATION	2.59007151843431E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999999750656846	WITHOUT_CLASSIFICATION	2.4934315463034757E-8	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999988123539473	WITHOUT_CLASSIFICATION	1.187646052808957E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999078372928	WITHOUT_CLASSIFICATION	9.216270725834771E-8	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999078372928	WITHOUT_CLASSIFICATION	9.216270725834771E-8	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999998100237418	WITHOUT_CLASSIFICATION	1.8997625818127256E-7	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999972510094146	WITHOUT_CLASSIFICATION	2.7489905854255755E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999936476939467	WITHOUT_CLASSIFICATION	6.352306053287923E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9576306967003365	WITHOUT_CLASSIFICATION	0.04236930329966352	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999812882626326	WITHOUT_CLASSIFICATION	1.871173736744394E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999984803524642	WITHOUT_CLASSIFICATION	1.5196475357925372E-6	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9965510436504241	WITHOUT_CLASSIFICATION	0.0034489563495759476	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999912642902712	WITHOUT_CLASSIFICATION	8.735709728870941E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999994757760553	WITHOUT_CLASSIFICATION	5.24223944727141E-7	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999668743578657	WITHOUT_CLASSIFICATION	3.312564213424655E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999984245633587	WITHOUT_CLASSIFICATION	1.5754366411894487E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999839026591432	WITHOUT_CLASSIFICATION	1.6097340856794252E-5	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999871530725515	WITHOUT_CLASSIFICATION	1.2846927448409382E-5	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999976613329224	WITHOUT_CLASSIFICATION	2.3386670774616855E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999976481642245	WITHOUT_CLASSIFICATION	2.35183577541644E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999916234571158	WITHOUT_CLASSIFICATION	8.376542884218781E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999972970515529	WITHOUT_CLASSIFICATION	2.7029484471190904E-6	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999641008904165	WITHOUT_CLASSIFICATION	3.589910958351402E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999947596581978	WITHOUT_CLASSIFICATION	5.2403418022370755E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999974259213	WITHOUT_CLASSIFICATION	2.5740788064315488E-9	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999970244262726	WITHOUT_CLASSIFICATION	2.9755737274718804E-6	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999955560062204	WITHOUT_CLASSIFICATION	4.443993779653183E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999999238845652	WITHOUT_CLASSIFICATION	7.611543473879576E-8	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999971086700883	WITHOUT_CLASSIFICATION	2.8913299117061823E-6	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999989307248319	WITHOUT_CLASSIFICATION	1.069275168115412E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999990498198843	WITHOUT_CLASSIFICATION	9.501801156332718E-7	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999038867304	WITHOUT_CLASSIFICATION	9.611326958301077E-8	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999998385907705	WITHOUT_CLASSIFICATION	1.6140922958567428E-7	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999900514523	WITHOUT_CLASSIFICATION	9.948547757650161E-9	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999493872523	WITHOUT_CLASSIFICATION	5.061274768041766E-8	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999998340856837	WITHOUT_CLASSIFICATION	1.6591431630549254E-7	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.999999769331042	WITHOUT_CLASSIFICATION	2.3066895802927488E-7	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999977316865212	WITHOUT_CLASSIFICATION	2.2683134788161488E-6	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999711322698	WITHOUT_CLASSIFICATION	2.8867730236560997E-8	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999845887415436	WITHOUT_CLASSIFICATION	1.5411258456477268E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999565640181439	WITHOUT_CLASSIFICATION	4.343598185616418E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999997626219254	WITHOUT_CLASSIFICATION	2.3737807467655086E-7	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999999287823009	WITHOUT_CLASSIFICATION	7.121769898608082E-8	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.999999708639981	WITHOUT_CLASSIFICATION	2.913600190013571E-7	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999965422559	WITHOUT_CLASSIFICATION	3.4577440019782406E-9	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999934611784076	WITHOUT_CLASSIFICATION	6.538821592442293E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999975556993362	WITHOUT_CLASSIFICATION	2.444300663869191E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999995308108057	WITHOUT_CLASSIFICATION	4.6918919420194925E-7	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999091741727363	WITHOUT_CLASSIFICATION	9.08258272637351E-5	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999462274412314	WITHOUT_CLASSIFICATION	5.377255876857868E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9994275576818243	WITHOUT_CLASSIFICATION	5.72442318175674E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999922928524433	WITHOUT_CLASSIFICATION	7.707147556628692E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999997445206956	WITHOUT_CLASSIFICATION	2.554793044110724E-7	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999915523049245	WITHOUT_CLASSIFICATION	8.447695075428914E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999998882412909	WITHOUT_CLASSIFICATION	1.1175870905137909E-7	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999999700940073	WITHOUT_CLASSIFICATION	2.9905992621099575E-8	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999492891738	WITHOUT_CLASSIFICATION	5.0710826167298074E-8	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999953254265	WITHOUT_CLASSIFICATION	4.674573564096369E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999405004195	WITHOUT_CLASSIFICATION	5.949958036298331E-8	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999945378255	WITHOUT_CLASSIFICATION	5.462174523508671E-9	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999998236969911	WITHOUT_CLASSIFICATION	1.7630300893849315E-7	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9991246106033952	WITHOUT_CLASSIFICATION	8.753893966048534E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.999999912568383	WITHOUT_CLASSIFICATION	8.743161696557249E-8	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999995380377233	WITHOUT_CLASSIFICATION	4.6196227669141763E-7	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999999244243826	WITHOUT_CLASSIFICATION	7.557561737940447E-8	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999546423390689	WITHOUT_CLASSIFICATION	4.53576609311001E-5	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999970942067162	WITHOUT_CLASSIFICATION	2.905793283727064E-6	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999997199353866	WITHOUT_CLASSIFICATION	2.800646134251081E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999816580988918	WITHOUT_CLASSIFICATION	1.8341901108118156E-5	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999999005153556	WITHOUT_CLASSIFICATION	9.948464449871321E-8	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999985659984378	WITHOUT_CLASSIFICATION	1.4340015621545159E-6	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999847612956	WITHOUT_CLASSIFICATION	1.5238704465829568E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999996818507398	WITHOUT_CLASSIFICATION	3.1814926010014475E-7	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999829767898644	WITHOUT_CLASSIFICATION	1.7023210135659622E-5	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.999969947089991	WITHOUT_CLASSIFICATION	3.0052910009077204E-5	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999998213039076	WITHOUT_CLASSIFICATION	1.7869609224809618E-7	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999990729307925	WITHOUT_CLASSIFICATION	9.270692074426668E-7	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999939101523388	WITHOUT_CLASSIFICATION	6.0898476611571014E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999999614489742	WITHOUT_CLASSIFICATION	3.855102582474585E-8	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999995839922492	WITHOUT_CLASSIFICATION	4.1600775082340117E-7	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9998336651988944	WITHOUT_CLASSIFICATION	1.6633480110549737E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999997242524732	WITHOUT_CLASSIFICATION	2.7574752678767017E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999994757879938	WITHOUT_CLASSIFICATION	5.242120062523185E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999854231029414	WITHOUT_CLASSIFICATION	1.4576897058726078E-5	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999986892265933	WITHOUT_CLASSIFICATION	1.3107734066471104E-6	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999996554479486	WITHOUT_CLASSIFICATION	3.445520513877372E-7	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999887957849932	WITHOUT_CLASSIFICATION	1.1204215006744333E-5	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999947807805233	WITHOUT_CLASSIFICATION	5.219219476765256E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999974234217666	WITHOUT_CLASSIFICATION	2.5765782334430132E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9998164283529879	WITHOUT_CLASSIFICATION	1.835716470121134E-4	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999997514552587	WITHOUT_CLASSIFICATION	2.485447413021401E-7	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9999521587877038	WITHOUT_CLASSIFICATION	4.784121229610388E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999824697902359	WITHOUT_CLASSIFICATION	1.753020976415654E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999996716559897	WITHOUT_CLASSIFICATION	3.2834401034708856E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999998072633604	WITHOUT_CLASSIFICATION	1.927366397113436E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999946232245	WITHOUT_CLASSIFICATION	5.376775453695461E-9	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999988409349648	WITHOUT_CLASSIFICATION	1.1590650351739869E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999908354272605	WITHOUT_CLASSIFICATION	9.164572739432128E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999907166507835	WITHOUT_CLASSIFICATION	9.283349216513335E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999997011052533	WITHOUT_CLASSIFICATION	2.988947467869682E-7	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.999998707602252	WITHOUT_CLASSIFICATION	1.2923977479775365E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999952963869736	WITHOUT_CLASSIFICATION	4.703613026372811E-6	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999981968162066	WITHOUT_CLASSIFICATION	1.8031837934138515E-6	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999999160014824	WITHOUT_CLASSIFICATION	8.399851768075149E-8	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999993805151213	WITHOUT_CLASSIFICATION	6.194848786927286E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999873638733737	WITHOUT_CLASSIFICATION	1.2636126626178812E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999985697787299	WITHOUT_CLASSIFICATION	1.4302212700864886E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999935486213349	WITHOUT_CLASSIFICATION	6.451378664962323E-6	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999982736871571	WITHOUT_CLASSIFICATION	1.7263128428677602E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999963879580114	WITHOUT_CLASSIFICATION	3.612041988641401E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999908838039324	WITHOUT_CLASSIFICATION	9.116196067526215E-6	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999996912370602	WITHOUT_CLASSIFICATION	3.087629397956252E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891929876571	WITHOUT_CLASSIFICATION	1.0807012342954805E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999960674943043	WITHOUT_CLASSIFICATION	3.932505695723943E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969393357235	WITHOUT_CLASSIFICATION	3.0606642764183748E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999997497686334	WITHOUT_CLASSIFICATION	2.5023136660091005E-6	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999973861243319	WITHOUT_CLASSIFICATION	2.6138756681215966E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999913672058363	WITHOUT_CLASSIFICATION	8.632794163712336E-6	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897654851992	WITHOUT_CLASSIFICATION	1.023451480085009E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999996701044183	WITHOUT_CLASSIFICATION	3.2989558169393793E-6	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999959695557152	WITHOUT_CLASSIFICATION	4.030444284775657E-6	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999978813031262	WITHOUT_CLASSIFICATION	2.118696873873317E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999928084951313	WITHOUT_CLASSIFICATION	7.191504868718448E-6	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999964089418732	WITHOUT_CLASSIFICATION	3.591058126834854E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999964480641427	WITHOUT_CLASSIFICATION	3.551935857383177E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999953597258747	WITHOUT_CLASSIFICATION	4.640274125306304E-6	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999949413739458	WITHOUT_CLASSIFICATION	5.058626054155812E-6	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999955653298882	WITHOUT_CLASSIFICATION	4.434670111838473E-6	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999899266600317	WITHOUT_CLASSIFICATION	1.0073339968195197E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970406763389	WITHOUT_CLASSIFICATION	2.9593236611974687E-6	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999975135714808	WITHOUT_CLASSIFICATION	2.486428519206896E-6	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999890234859434	WITHOUT_CLASSIFICATION	1.097651405658391E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999874985064964	WITHOUT_CLASSIFICATION	1.250149350371799E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999887135787429	WITHOUT_CLASSIFICATION	1.1286421257022709E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965543247495	WITHOUT_CLASSIFICATION	3.4456752504760487E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999964480641427	WITHOUT_CLASSIFICATION	3.551935857383177E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999887135787429	WITHOUT_CLASSIFICATION	1.1286421257022709E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999967854064967	WITHOUT_CLASSIFICATION	3.2145935034086345E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965543247495	WITHOUT_CLASSIFICATION	3.4456752504760487E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965543247495	WITHOUT_CLASSIFICATION	3.4456752504760487E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999992743894198	WITHOUT_CLASSIFICATION	7.256105801969562E-6	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999904746414985	WITHOUT_CLASSIFICATION	9.525358501467824E-6	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999933206407007	WITHOUT_CLASSIFICATION	6.679359299235249E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999965336900621	WITHOUT_CLASSIFICATION	3.4663099378585087E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999994289298209	WITHOUT_CLASSIFICATION	5.710701791042143E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999960015259407	WITHOUT_CLASSIFICATION	3.998474059283038E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999960015259407	WITHOUT_CLASSIFICATION	3.998474059283038E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999900454091475	WITHOUT_CLASSIFICATION	9.954590852584727E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999392124476	WITHOUT_CLASSIFICATION	6.078755239976468E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999887989932992	WITHOUT_CLASSIFICATION	1.1201006700918803E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999957035280415	WITHOUT_CLASSIFICATION	4.2964719585367635E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999880377791013	WITHOUT_CLASSIFICATION	1.1962220898768653E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999995826826097	WITHOUT_CLASSIFICATION	4.173173902957908E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999993166618468	WITHOUT_CLASSIFICATION	6.8333815319441915E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999964480641427	WITHOUT_CLASSIFICATION	3.551935857383177E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965543247495	WITHOUT_CLASSIFICATION	3.4456752504760487E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999925800251424	WITHOUT_CLASSIFICATION	7.419974857722846E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999955990741157	WITHOUT_CLASSIFICATION	4.400925884342605E-6	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934906159149	WITHOUT_CLASSIFICATION	6.50938408508856E-6	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934276557765	WITHOUT_CLASSIFICATION	6.57234422354117E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999890927412359	WITHOUT_CLASSIFICATION	1.090725876399706E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999991550668641	WITHOUT_CLASSIFICATION	8.449331359023035E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999993996119445	WITHOUT_CLASSIFICATION	6.003880555110956E-6	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999913031237951	WITHOUT_CLASSIFICATION	8.6968762049823E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999958735891757	WITHOUT_CLASSIFICATION	4.12641082429823E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999958735891757	WITHOUT_CLASSIFICATION	4.12641082429823E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969056244752	WITHOUT_CLASSIFICATION	3.0943755248203778E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969056244752	WITHOUT_CLASSIFICATION	3.0943755248203778E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999981678997832	WITHOUT_CLASSIFICATION	1.8321002167804068E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999915088054143	WITHOUT_CLASSIFICATION	8.49119458579549E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999964480641427	WITHOUT_CLASSIFICATION	3.551935857383177E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999953597258747	WITHOUT_CLASSIFICATION	4.640274125306304E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965543247495	WITHOUT_CLASSIFICATION	3.4456752504760487E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999960015259407	WITHOUT_CLASSIFICATION	3.998474059283038E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999993996119445	WITHOUT_CLASSIFICATION	6.003880555110956E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999958735891757	WITHOUT_CLASSIFICATION	4.12641082429823E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969056244752	WITHOUT_CLASSIFICATION	3.0943755248203778E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999915088054143	WITHOUT_CLASSIFICATION	8.49119458579549E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999924751615151	WITHOUT_CLASSIFICATION	7.524838484843116E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999954996850364	WITHOUT_CLASSIFICATION	4.500314963608055E-6	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999996122249976	WITHOUT_CLASSIFICATION	3.877750023935451E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999956798539407	WITHOUT_CLASSIFICATION	4.320146059294822E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999888362335524	WITHOUT_CLASSIFICATION	1.116376644751833E-5	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999944352799585	WITHOUT_CLASSIFICATION	5.564720041466619E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999977178502228	WITHOUT_CLASSIFICATION	2.2821497771289563E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999960015259407	WITHOUT_CLASSIFICATION	3.998474059283038E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999908010348108	WITHOUT_CLASSIFICATION	9.198965189201523E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999977178502228	WITHOUT_CLASSIFICATION	2.2821497771289563E-6	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999951965870357	WITHOUT_CLASSIFICATION	4.8034129642356755E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999989257544296	WITHOUT_CLASSIFICATION	1.0742455704030429E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999889457967652	WITHOUT_CLASSIFICATION	1.1054203234713409E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999921040881378	WITHOUT_CLASSIFICATION	7.895911862137258E-6	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999928887508712	WITHOUT_CLASSIFICATION	7.1112491287715285E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999944655205081	WITHOUT_CLASSIFICATION	5.5344794920105556E-6	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924835363517	WITHOUT_CLASSIFICATION	7.516463648162852E-6	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999946152238106	WITHOUT_CLASSIFICATION	5.38477618937567E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999911122799899	WITHOUT_CLASSIFICATION	8.887720010087101E-6	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999987236904052	WITHOUT_CLASSIFICATION	1.276309594822376E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999900067286144	WITHOUT_CLASSIFICATION	9.99327138563508E-6	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907420329752	WITHOUT_CLASSIFICATION	9.257967024814277E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909484180359	WITHOUT_CLASSIFICATION	9.051581964062644E-6	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999988631163177	WITHOUT_CLASSIFICATION	1.1368836823665505E-6	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999981629994321	WITHOUT_CLASSIFICATION	1.837000567867958E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999906864169691	WITHOUT_CLASSIFICATION	9.313583030892991E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999950101156446	WITHOUT_CLASSIFICATION	4.989884355368151E-6	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999985808589668	WITHOUT_CLASSIFICATION	1.419141033281861E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999976448295224	WITHOUT_CLASSIFICATION	2.355170477673667E-6	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999976882354844	WITHOUT_CLASSIFICATION	2.3117645156041926E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999974259213	WITHOUT_CLASSIFICATION	2.5740788064315488E-9	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999885324005638	WITHOUT_CLASSIFICATION	1.1467599436153618E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999948326442187	WITHOUT_CLASSIFICATION	5.167355781279104E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999954400554432	WITHOUT_CLASSIFICATION	4.559944556775507E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999900067286144	WITHOUT_CLASSIFICATION	9.99327138563508E-6	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999923234857809	WITHOUT_CLASSIFICATION	7.676514219091155E-6	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999990961062577	WITHOUT_CLASSIFICATION	9.038937422949121E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999953963498821	WITHOUT_CLASSIFICATION	4.603650117924196E-6	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.999999177513429	WITHOUT_CLASSIFICATION	8.224865708616385E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999991465179453	WITHOUT_CLASSIFICATION	8.534820547217088E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999993361500015	WITHOUT_CLASSIFICATION	6.638499985002738E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999993764780624	WITHOUT_CLASSIFICATION	6.235219376597135E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999998748321954	WITHOUT_CLASSIFICATION	1.2516780460361445E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999998702665908	WITHOUT_CLASSIFICATION	1.297334093187592E-7	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.999999545264949	WITHOUT_CLASSIFICATION	4.547350510247861E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999998976129801	WITHOUT_CLASSIFICATION	1.0238701994925707E-7	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999996411181192	WITHOUT_CLASSIFICATION	3.5888188073521447E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.999998997723353	WITHOUT_CLASSIFICATION	1.0022766470115838E-6	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999999404842967	WITHOUT_CLASSIFICATION	5.95157032342658E-8	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999997011052533	WITHOUT_CLASSIFICATION	2.988947467869682E-7	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999999811221121	WITHOUT_CLASSIFICATION	1.8877887846418407E-8	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.999999214795904	WITHOUT_CLASSIFICATION	7.852040958979381E-7	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999988370923238	WITHOUT_CLASSIFICATION	1.1629076761943538E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999895711813998	WITHOUT_CLASSIFICATION	1.0428818600249644E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999903586030106	WITHOUT_CLASSIFICATION	9.64139698941567E-6	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999994083976583	WITHOUT_CLASSIFICATION	5.91602341656274E-7	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999974828375134	WITHOUT_CLASSIFICATION	2.51716248646452E-6	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999996926096595	WITHOUT_CLASSIFICATION	3.073903405273349E-7	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999995007847237	WITHOUT_CLASSIFICATION	4.99215276301533E-7	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999966305331637	WITHOUT_CLASSIFICATION	3.369466836431885E-6	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.999998619710001	WITHOUT_CLASSIFICATION	1.380289998955354E-6	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9997409928481565	WITHOUT_CLASSIFICATION	2.59007151843431E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999999750656846	WITHOUT_CLASSIFICATION	2.4934315463034757E-8	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999988123539473	WITHOUT_CLASSIFICATION	1.187646052808957E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999078372928	WITHOUT_CLASSIFICATION	9.216270725834771E-8	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999972510094146	WITHOUT_CLASSIFICATION	2.7489905854255755E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999936476939467	WITHOUT_CLASSIFICATION	6.352306053287923E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9576306967003365	WITHOUT_CLASSIFICATION	0.04236930329966352	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999812882626326	WITHOUT_CLASSIFICATION	1.871173736744394E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999984803524642	WITHOUT_CLASSIFICATION	1.5196475357925372E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999991827832043	WITHOUT_CLASSIFICATION	8.172167956728395E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999998072633604	WITHOUT_CLASSIFICATION	1.927366397113436E-7	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999668743578657	WITHOUT_CLASSIFICATION	3.312564213424655E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999839026591432	WITHOUT_CLASSIFICATION	1.6097340856794252E-5	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999972970515529	WITHOUT_CLASSIFICATION	2.7029484471190904E-6	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999641008904165	WITHOUT_CLASSIFICATION	3.589910958351402E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999947596581978	WITHOUT_CLASSIFICATION	5.2403418022370755E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999994757760553	WITHOUT_CLASSIFICATION	5.24223944727141E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999984245633587	WITHOUT_CLASSIFICATION	1.5754366411894487E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999974259213	WITHOUT_CLASSIFICATION	2.5740788064315488E-9	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999976613329224	WITHOUT_CLASSIFICATION	2.3386670774616855E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999903149400905	WITHOUT_CLASSIFICATION	9.685059909476573E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999871530725515	WITHOUT_CLASSIFICATION	1.2846927448409382E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999999238845652	WITHOUT_CLASSIFICATION	7.611543473879576E-8	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999971086700883	WITHOUT_CLASSIFICATION	2.8913299117061823E-6	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999989307248319	WITHOUT_CLASSIFICATION	1.069275168115412E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999997011052533	WITHOUT_CLASSIFICATION	2.988947467869682E-7	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999914461279141	WITHOUT_CLASSIFICATION	8.553872085871036E-6	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999969798385	WITHOUT_CLASSIFICATION	3.020161540268506E-9	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999038867304	WITHOUT_CLASSIFICATION	9.611326958301077E-8	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999900514523	WITHOUT_CLASSIFICATION	9.948547757650161E-9	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999606186966	WITHOUT_CLASSIFICATION	3.938130343247701E-8	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999493872523	WITHOUT_CLASSIFICATION	5.061274768041766E-8	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999998340856837	WITHOUT_CLASSIFICATION	1.6591431630549254E-7	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999977316865212	WITHOUT_CLASSIFICATION	2.2683134788161488E-6	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999471282235043	WITHOUT_CLASSIFICATION	5.28717764957532E-5	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999711322698	WITHOUT_CLASSIFICATION	2.8867730236560997E-8	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999845887415436	WITHOUT_CLASSIFICATION	1.5411258456477268E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999565640181439	WITHOUT_CLASSIFICATION	4.343598185616418E-5	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999995513897011	WITHOUT_CLASSIFICATION	4.486102989113632E-7	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999997626219254	WITHOUT_CLASSIFICATION	2.3737807467655086E-7	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999926068146758	WITHOUT_CLASSIFICATION	7.39318532419672E-6	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999934611784076	WITHOUT_CLASSIFICATION	6.538821592442293E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999999287823009	WITHOUT_CLASSIFICATION	7.121769898608082E-8	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.999999708639981	WITHOUT_CLASSIFICATION	2.913600190013571E-7	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999995308108057	WITHOUT_CLASSIFICATION	4.6918919420194925E-7	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999091741727363	WITHOUT_CLASSIFICATION	9.08258272637351E-5	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999462274412314	WITHOUT_CLASSIFICATION	5.377255876857868E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9987983510455017	WITHOUT_CLASSIFICATION	0.0012016489544982893	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9994275576818243	WITHOUT_CLASSIFICATION	5.72442318175674E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999922928524433	WITHOUT_CLASSIFICATION	7.707147556628692E-6	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999997445206956	WITHOUT_CLASSIFICATION	2.554793044110724E-7	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999915523049245	WITHOUT_CLASSIFICATION	8.447695075428914E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999998882412909	WITHOUT_CLASSIFICATION	1.1175870905137909E-7	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999999700940073	WITHOUT_CLASSIFICATION	2.9905992621099575E-8	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999492891738	WITHOUT_CLASSIFICATION	5.0710826167298074E-8	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999953254265	WITHOUT_CLASSIFICATION	4.674573564096369E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999405004195	WITHOUT_CLASSIFICATION	5.949958036298331E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999405004195	WITHOUT_CLASSIFICATION	5.949958036298331E-8	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999945378255	WITHOUT_CLASSIFICATION	5.462174523508671E-9	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999998236969911	WITHOUT_CLASSIFICATION	1.7630300893849315E-7	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9991246106033952	WITHOUT_CLASSIFICATION	8.753893966048534E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.999999912568383	WITHOUT_CLASSIFICATION	8.743161696557249E-8	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999999244243826	WITHOUT_CLASSIFICATION	7.557561737940447E-8	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999546423390689	WITHOUT_CLASSIFICATION	4.53576609311001E-5	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999970942067162	WITHOUT_CLASSIFICATION	2.905793283727064E-6	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999997199353866	WITHOUT_CLASSIFICATION	2.800646134251081E-7	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999999005153556	WITHOUT_CLASSIFICATION	9.948464449871321E-8	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999905260097	WITHOUT_CLASSIFICATION	9.473990344624971E-9	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999985659984378	WITHOUT_CLASSIFICATION	1.4340015621545159E-6	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999847612956	WITHOUT_CLASSIFICATION	1.5238704465829568E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999996818507398	WITHOUT_CLASSIFICATION	3.1814926010014475E-7	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999829767898644	WITHOUT_CLASSIFICATION	1.7023210135659622E-5	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.999969947089991	WITHOUT_CLASSIFICATION	3.0052910009077204E-5	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999990729307925	WITHOUT_CLASSIFICATION	9.270692074426668E-7	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999939101523388	WITHOUT_CLASSIFICATION	6.0898476611571014E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999999614489742	WITHOUT_CLASSIFICATION	3.855102582474585E-8	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999995839922492	WITHOUT_CLASSIFICATION	4.1600775082340117E-7	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9998336651988944	WITHOUT_CLASSIFICATION	1.6633480110549737E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999997242524732	WITHOUT_CLASSIFICATION	2.7574752678767017E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999994757879938	WITHOUT_CLASSIFICATION	5.242120062523185E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999854231029414	WITHOUT_CLASSIFICATION	1.4576897058726078E-5	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999986892265933	WITHOUT_CLASSIFICATION	1.3107734066471104E-6	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999996554479486	WITHOUT_CLASSIFICATION	3.445520513877372E-7	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999887957849932	WITHOUT_CLASSIFICATION	1.1204215006744333E-5	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999974234217666	WITHOUT_CLASSIFICATION	2.5765782334430132E-6	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999997514552587	WITHOUT_CLASSIFICATION	2.485447413021401E-7	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9999521587877038	WITHOUT_CLASSIFICATION	4.784121229610388E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999824697902359	WITHOUT_CLASSIFICATION	1.753020976415654E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999996716559897	WITHOUT_CLASSIFICATION	3.2834401034708856E-7	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999914533731527	WITHOUT_CLASSIFICATION	8.546626847367737E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999999795841166	WITHOUT_CLASSIFICATION	2.0415883430727005E-8	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999807585929625	WITHOUT_CLASSIFICATION	1.924140703746069E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999946232245	WITHOUT_CLASSIFICATION	5.376775453695461E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999998974399849	WITHOUT_CLASSIFICATION	1.0256001517260983E-7	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999988409349648	WITHOUT_CLASSIFICATION	1.1590650351739869E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999908354272605	WITHOUT_CLASSIFICATION	9.164572739432128E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999907166507835	WITHOUT_CLASSIFICATION	9.283349216513335E-6	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999999392411242	WITHOUT_CLASSIFICATION	6.075887586690003E-8	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.999998707602252	WITHOUT_CLASSIFICATION	1.2923977479775365E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999952963869736	WITHOUT_CLASSIFICATION	4.703613026372811E-6	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999981968162066	WITHOUT_CLASSIFICATION	1.8031837934138515E-6	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999999160014824	WITHOUT_CLASSIFICATION	8.399851768075149E-8	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999993805151213	WITHOUT_CLASSIFICATION	6.194848786927286E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999873638733737	WITHOUT_CLASSIFICATION	1.2636126626178812E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999985697787299	WITHOUT_CLASSIFICATION	1.4302212700864886E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999935486213349	WITHOUT_CLASSIFICATION	6.451378664962323E-6	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999982736871571	WITHOUT_CLASSIFICATION	1.7263128428677602E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999908838039324	WITHOUT_CLASSIFICATION	9.116196067526215E-6	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999996912370602	WITHOUT_CLASSIFICATION	3.087629397956252E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891929876571	WITHOUT_CLASSIFICATION	1.0807012342954805E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999960674943043	WITHOUT_CLASSIFICATION	3.932505695723943E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969393357235	WITHOUT_CLASSIFICATION	3.0606642764183748E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999997497686334	WITHOUT_CLASSIFICATION	2.5023136660091005E-6	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999973861243319	WITHOUT_CLASSIFICATION	2.6138756681215966E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999913672058363	WITHOUT_CLASSIFICATION	8.632794163712336E-6	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897654851992	WITHOUT_CLASSIFICATION	1.023451480085009E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999996701044183	WITHOUT_CLASSIFICATION	3.2989558169393793E-6	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999959695557152	WITHOUT_CLASSIFICATION	4.030444284775657E-6	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999978813031262	WITHOUT_CLASSIFICATION	2.118696873873317E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999895810374729	WITHOUT_CLASSIFICATION	1.0418962527126691E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999964089418732	WITHOUT_CLASSIFICATION	3.591058126834854E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999964480641427	WITHOUT_CLASSIFICATION	3.551935857383177E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999953597258747	WITHOUT_CLASSIFICATION	4.640274125306304E-6	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999955653298882	WITHOUT_CLASSIFICATION	4.434670111838473E-6	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999899266600317	WITHOUT_CLASSIFICATION	1.0073339968195197E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970406763389	WITHOUT_CLASSIFICATION	2.9593236611974687E-6	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999975135714808	WITHOUT_CLASSIFICATION	2.486428519206896E-6	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999890234859434	WITHOUT_CLASSIFICATION	1.097651405658391E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999954825150278	WITHOUT_CLASSIFICATION	4.5174849722387545E-6	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999874985064964	WITHOUT_CLASSIFICATION	1.250149350371799E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999887135787429	WITHOUT_CLASSIFICATION	1.1286421257022709E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965543247495	WITHOUT_CLASSIFICATION	3.4456752504760487E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965543247495	WITHOUT_CLASSIFICATION	3.4456752504760487E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999992743894198	WITHOUT_CLASSIFICATION	7.256105801969562E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999960015259407	WITHOUT_CLASSIFICATION	3.998474059283038E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999960015259407	WITHOUT_CLASSIFICATION	3.998474059283038E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999392124476	WITHOUT_CLASSIFICATION	6.078755239976468E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999887135787429	WITHOUT_CLASSIFICATION	1.1286421257022709E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965543247495	WITHOUT_CLASSIFICATION	3.4456752504760487E-6	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999904746414985	WITHOUT_CLASSIFICATION	9.525358501467824E-6	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999933206407007	WITHOUT_CLASSIFICATION	6.679359299235249E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999965336900621	WITHOUT_CLASSIFICATION	3.4663099378585087E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999994289298209	WITHOUT_CLASSIFICATION	5.710701791042143E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999960015259407	WITHOUT_CLASSIFICATION	3.998474059283038E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999900454091475	WITHOUT_CLASSIFICATION	9.954590852584727E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999887989932992	WITHOUT_CLASSIFICATION	1.1201006700918803E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999957035280415	WITHOUT_CLASSIFICATION	4.2964719585367635E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999880377791013	WITHOUT_CLASSIFICATION	1.1962220898768653E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999995826826097	WITHOUT_CLASSIFICATION	4.173173902957908E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999993166618468	WITHOUT_CLASSIFICATION	6.8333815319441915E-6	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999931161567888	WITHOUT_CLASSIFICATION	6.8838432112554755E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999935161641796	WITHOUT_CLASSIFICATION	6.483835820358646E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999955990741157	WITHOUT_CLASSIFICATION	4.400925884342605E-6	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934906159149	WITHOUT_CLASSIFICATION	6.50938408508856E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999890927412359	WITHOUT_CLASSIFICATION	1.090725876399706E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999964480641427	WITHOUT_CLASSIFICATION	3.551935857383177E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999964480641427	WITHOUT_CLASSIFICATION	3.551935857383177E-6	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934276557765	WITHOUT_CLASSIFICATION	6.57234422354117E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999991550668641	WITHOUT_CLASSIFICATION	8.449331359023035E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999993996119445	WITHOUT_CLASSIFICATION	6.003880555110956E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999958735891757	WITHOUT_CLASSIFICATION	4.12641082429823E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999958735891757	WITHOUT_CLASSIFICATION	4.12641082429823E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969056244752	WITHOUT_CLASSIFICATION	3.0943755248203778E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969056244752	WITHOUT_CLASSIFICATION	3.0943755248203778E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999981678997832	WITHOUT_CLASSIFICATION	1.8321002167804068E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999981678997832	WITHOUT_CLASSIFICATION	1.8321002167804068E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999915088054143	WITHOUT_CLASSIFICATION	8.49119458579549E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999924751615151	WITHOUT_CLASSIFICATION	7.524838484843116E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999953597258747	WITHOUT_CLASSIFICATION	4.640274125306304E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965543247495	WITHOUT_CLASSIFICATION	3.4456752504760487E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999960015259407	WITHOUT_CLASSIFICATION	3.998474059283038E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999993996119445	WITHOUT_CLASSIFICATION	6.003880555110956E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999958735891757	WITHOUT_CLASSIFICATION	4.12641082429823E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999969056244752	WITHOUT_CLASSIFICATION	3.0943755248203778E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999954996850364	WITHOUT_CLASSIFICATION	4.500314963608055E-6	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999996122249976	WITHOUT_CLASSIFICATION	3.877750023935451E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999956798539407	WITHOUT_CLASSIFICATION	4.320146059294822E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999888362335524	WITHOUT_CLASSIFICATION	1.116376644751833E-5	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999944352799585	WITHOUT_CLASSIFICATION	5.564720041466619E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999908010348108	WITHOUT_CLASSIFICATION	9.198965189201523E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999908010348108	WITHOUT_CLASSIFICATION	9.198965189201523E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999977178502228	WITHOUT_CLASSIFICATION	2.2821497771289563E-6	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999951965870357	WITHOUT_CLASSIFICATION	4.8034129642356755E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999989257544296	WITHOUT_CLASSIFICATION	1.0742455704030429E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999889457967652	WITHOUT_CLASSIFICATION	1.1054203234713409E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999921040881378	WITHOUT_CLASSIFICATION	7.895911862137258E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965543247495	WITHOUT_CLASSIFICATION	3.4456752504760487E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999960015259407	WITHOUT_CLASSIFICATION	3.998474059283038E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999977178502228	WITHOUT_CLASSIFICATION	2.2821497771289563E-6	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999928887508712	WITHOUT_CLASSIFICATION	7.1112491287715285E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999944655205081	WITHOUT_CLASSIFICATION	5.5344794920105556E-6	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924835363517	WITHOUT_CLASSIFICATION	7.516463648162852E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999911122799899	WITHOUT_CLASSIFICATION	8.887720010087101E-6	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999987236904052	WITHOUT_CLASSIFICATION	1.276309594822376E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999900067286144	WITHOUT_CLASSIFICATION	9.99327138563508E-6	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907420329752	WITHOUT_CLASSIFICATION	9.257967024814277E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909484180359	WITHOUT_CLASSIFICATION	9.051581964062644E-6	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999988631163177	WITHOUT_CLASSIFICATION	1.1368836823665505E-6	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999981629994321	WITHOUT_CLASSIFICATION	1.837000567867958E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999906864169691	WITHOUT_CLASSIFICATION	9.313583030892991E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999950101156446	WITHOUT_CLASSIFICATION	4.989884355368151E-6	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999985808589668	WITHOUT_CLASSIFICATION	1.419141033281861E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999976448295224	WITHOUT_CLASSIFICATION	2.355170477673667E-6	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999976882354844	WITHOUT_CLASSIFICATION	2.3117645156041926E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999922958092138	WITHOUT_CLASSIFICATION	7.704190786227057E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999954400554432	WITHOUT_CLASSIFICATION	4.559944556775507E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999900067286144	WITHOUT_CLASSIFICATION	9.99327138563508E-6	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999923234857809	WITHOUT_CLASSIFICATION	7.676514219091155E-6	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999990961062577	WITHOUT_CLASSIFICATION	9.038937422949121E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999953963498821	WITHOUT_CLASSIFICATION	4.603650117924196E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999914461279141	WITHOUT_CLASSIFICATION	8.553872085871036E-6	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.999999177513429	WITHOUT_CLASSIFICATION	8.224865708616385E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999991465179453	WITHOUT_CLASSIFICATION	8.534820547217088E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999993361500015	WITHOUT_CLASSIFICATION	6.638499985002738E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999993764780624	WITHOUT_CLASSIFICATION	6.235219376597135E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999998748321954	WITHOUT_CLASSIFICATION	1.2516780460361445E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999998702665908	WITHOUT_CLASSIFICATION	1.297334093187592E-7	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.999999545264949	WITHOUT_CLASSIFICATION	4.547350510247861E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999998976129801	WITHOUT_CLASSIFICATION	1.0238701994925707E-7	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999996411181192	WITHOUT_CLASSIFICATION	3.5888188073521447E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.999998997723353	WITHOUT_CLASSIFICATION	1.0022766470115838E-6	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999999404842967	WITHOUT_CLASSIFICATION	5.95157032342658E-8	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999997011052533	WITHOUT_CLASSIFICATION	2.988947467869682E-7	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999999811221121	WITHOUT_CLASSIFICATION	1.8877887846418407E-8	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.999999214795904	WITHOUT_CLASSIFICATION	7.852040958979381E-7	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999988370923238	WITHOUT_CLASSIFICATION	1.1629076761943538E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999895711813998	WITHOUT_CLASSIFICATION	1.0428818600249644E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999974259213	WITHOUT_CLASSIFICATION	2.5740788064315488E-9	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999903586030106	WITHOUT_CLASSIFICATION	9.64139698941567E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999903586030106	WITHOUT_CLASSIFICATION	9.64139698941567E-6	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999974828375134	WITHOUT_CLASSIFICATION	2.51716248646452E-6	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999996926096595	WITHOUT_CLASSIFICATION	3.073903405273349E-7	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999969798385	WITHOUT_CLASSIFICATION	3.020161540268506E-9	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999934212091628	WITHOUT_CLASSIFICATION	6.578790837131146E-6	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999934212091628	WITHOUT_CLASSIFICATION	6.578790837131146E-6	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9999792255772814	WITHOUT_CLASSIFICATION	2.0774422718568585E-5	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.999786948524228	WITHOUT_CLASSIFICATION	2.1305147577197451E-4	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999808426126329	WITHOUT_CLASSIFICATION	1.9157387367099924E-5	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999966370310173	WITHOUT_CLASSIFICATION	3.3629689827304077E-6	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.99993357370569	WITHOUT_CLASSIFICATION	6.642629431000324E-5	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999876254970773	WITHOUT_CLASSIFICATION	1.2374502922692953E-5	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.999999569095313	WITHOUT_CLASSIFICATION	4.3090468706354614E-7	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.999999847858475	WITHOUT_CLASSIFICATION	1.5214152498063763E-7	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9998017607853805	WITHOUT_CLASSIFICATION	1.9823921461956234E-4	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999979267028605	WITHOUT_CLASSIFICATION	2.0732971394376408E-6	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999942949028345	WITHOUT_CLASSIFICATION	5.705097165464267E-6	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999995900547624	WITHOUT_CLASSIFICATION	4.099452376171481E-7	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999972392695047	WITHOUT_CLASSIFICATION	2.7607304953702553E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999802858690415	WITHOUT_CLASSIFICATION	1.971413095853785E-5	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999991157339335	WITHOUT_CLASSIFICATION	8.842660665380159E-7	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999990825489412	WITHOUT_CLASSIFICATION	9.17451058719805E-7	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9996504964673807	WITHOUT_CLASSIFICATION	3.495035326193387E-4	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9999389546413517	WITHOUT_CLASSIFICATION	6.104535864832773E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999998388317419	WITHOUT_CLASSIFICATION	1.6116825799396737E-7	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9999988559156473	WITHOUT_CLASSIFICATION	1.144084352690407E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999998991659718	WITHOUT_CLASSIFICATION	1.0083402820587469E-7	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999920029815984	WITHOUT_CLASSIFICATION	7.997018401610547E-6	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999995511246984	WITHOUT_CLASSIFICATION	4.488753016188243E-7	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999957742629718	WITHOUT_CLASSIFICATION	4.2257370282310885E-6	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.999997408963573	WITHOUT_CLASSIFICATION	2.591036426977093E-6	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9999966507753174	WITHOUT_CLASSIFICATION	3.3492246825114266E-6	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999776297617586	WITHOUT_CLASSIFICATION	2.237023824132615E-5	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999500398302837	WITHOUT_CLASSIFICATION	4.996016971626942E-5	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999974486023471	WITHOUT_CLASSIFICATION	2.551397653018789E-6	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999998081347699	WITHOUT_CLASSIFICATION	1.918652300515115E-7	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999998081347699	WITHOUT_CLASSIFICATION	1.918652300515115E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999644112345	WITHOUT_CLASSIFICATION	3.55887655809863E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999644112345	WITHOUT_CLASSIFICATION	3.55887655809863E-8	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999995915209179	WITHOUT_CLASSIFICATION	4.0847908209670953E-7	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999670870149956	WITHOUT_CLASSIFICATION	3.2912985004386005E-5	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999999713594152	WITHOUT_CLASSIFICATION	2.864058480592336E-8	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9999926885298799	WITHOUT_CLASSIFICATION	7.311470120170577E-6	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999972457686906	WITHOUT_CLASSIFICATION	2.7542313093863146E-6	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999996604466206	WITHOUT_CLASSIFICATION	3.3955337939631594E-7	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999997688112503	WITHOUT_CLASSIFICATION	2.3118874965397287E-7	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999854402598053	WITHOUT_CLASSIFICATION	1.4559740194686115E-5	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999994286822245	WITHOUT_CLASSIFICATION	5.713177755035975E-7	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999999490547399	WITHOUT_CLASSIFICATION	5.094526015932942E-8	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999999490547399	WITHOUT_CLASSIFICATION	5.094526015932942E-8	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999791185009715	WITHOUT_CLASSIFICATION	2.0881499028515097E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999791185009715	WITHOUT_CLASSIFICATION	2.0881499028515097E-5	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999883344395111	WITHOUT_CLASSIFICATION	1.1665560488813947E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999999075093581	WITHOUT_CLASSIFICATION	9.249064182415531E-8	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999999126603318	WITHOUT_CLASSIFICATION	8.733966820139965E-8	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999996308045885	WITHOUT_CLASSIFICATION	3.691954115504836E-7	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9999999464527993	WITHOUT_CLASSIFICATION	5.354720069996159E-8	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999997870315176	WITHOUT_CLASSIFICATION	2.1296848232128109E-7	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999865439444326	WITHOUT_CLASSIFICATION	1.345605556725286E-5	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.999999962984482	WITHOUT_CLASSIFICATION	3.701551791303767E-8	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9999068046454165	WITHOUT_CLASSIFICATION	9.319535458346893E-5	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999956895425063	WITHOUT_CLASSIFICATION	4.310457493669431E-6	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9999994244946084	WITHOUT_CLASSIFICATION	5.755053916342001E-7	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999999605856779	WITHOUT_CLASSIFICATION	3.941432220488212E-8	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999987726187174	WITHOUT_CLASSIFICATION	1.2273812825901778E-6	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999981529803978	WITHOUT_CLASSIFICATION	1.8470196021283535E-6	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999999909702598	WITHOUT_CLASSIFICATION	9.029740188277539E-9	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999994353290127	WITHOUT_CLASSIFICATION	5.646709874027621E-7	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999998208619023	WITHOUT_CLASSIFICATION	1.7913809775885907E-7	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999988625243256	WITHOUT_CLASSIFICATION	1.1374756745400658E-6	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.999984249638658	WITHOUT_CLASSIFICATION	1.5750361342038854E-5	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999999429988021	WITHOUT_CLASSIFICATION	5.7001197816068495E-8	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9998103330955536	WITHOUT_CLASSIFICATION	1.896669044463591E-4	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999986217975727	WITHOUT_CLASSIFICATION	1.3782024272480377E-6	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999999624482245	WITHOUT_CLASSIFICATION	3.755177549074735E-8	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999998240736385	WITHOUT_CLASSIFICATION	1.7592636150663888E-7	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999997711421847	WITHOUT_CLASSIFICATION	2.2885781528402218E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9996052121154245	WITHOUT_CLASSIFICATION	3.9478788457542133E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.999999007048116	WITHOUT_CLASSIFICATION	9.929518840812298E-7	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999999518383847	WITHOUT_CLASSIFICATION	4.8161615275238834E-8	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999999518383847	WITHOUT_CLASSIFICATION	4.8161615275238834E-8	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999911705376281	WITHOUT_CLASSIFICATION	8.829462371904E-6	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9999970202950281	WITHOUT_CLASSIFICATION	2.979704971839262E-6	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999999470783305	WITHOUT_CLASSIFICATION	5.292166951181928E-8	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9998894575899335	WITHOUT_CLASSIFICATION	1.1054241006657701E-4	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999990252898154	WITHOUT_CLASSIFICATION	9.747101845598827E-7	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999992308089869	WITHOUT_CLASSIFICATION	7.691910131714246E-7	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.999999719667649	WITHOUT_CLASSIFICATION	2.8033235094854166E-7	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999569860979133	WITHOUT_CLASSIFICATION	4.301390208679905E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999644112345	WITHOUT_CLASSIFICATION	3.55887655809863E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999644112345	WITHOUT_CLASSIFICATION	3.55887655809863E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999644112345	WITHOUT_CLASSIFICATION	3.55887655809863E-8	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9996052121154245	WITHOUT_CLASSIFICATION	3.9478788457542133E-4	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9998880665143753	WITHOUT_CLASSIFICATION	1.1193348562464236E-4	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999976055091832	WITHOUT_CLASSIFICATION	2.394490816875302E-6	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999995608137499	WITHOUT_CLASSIFICATION	4.391862501278903E-7	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9995909059495359	WITHOUT_CLASSIFICATION	4.0909405046404975E-4	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999973726635704	WITHOUT_CLASSIFICATION	2.6273364296136086E-6	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999996921959896	WITHOUT_CLASSIFICATION	3.078040103708586E-7	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999988127960064	WITHOUT_CLASSIFICATION	1.1872039934962286E-6	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999999913879863	WITHOUT_CLASSIFICATION	8.612013731795075E-9	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999954552927446	WITHOUT_CLASSIFICATION	4.544707255415411E-6	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999996687597907	WITHOUT_CLASSIFICATION	3.312402092489616E-7	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999999909479568	WITHOUT_CLASSIFICATION	9.052043221669556E-9	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999997898488953	WITHOUT_CLASSIFICATION	2.101511046958303E-7	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999999669482779	WITHOUT_CLASSIFICATION	3.3051722168736435E-8	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999972899012756	WITHOUT_CLASSIFICATION	2.7100987245060553E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999993329344835	WITHOUT_CLASSIFICATION	6.670655165764821E-7	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9999565166336102	WITHOUT_CLASSIFICATION	4.3483366389719356E-5	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.999734164261959	WITHOUT_CLASSIFICATION	2.658357380409692E-4	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999995726317878	WITHOUT_CLASSIFICATION	4.2736821226056684E-7	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.999997447555908	WITHOUT_CLASSIFICATION	2.5524440921015175E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999995502596497	WITHOUT_CLASSIFICATION	4.497403503026806E-7	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.999999577350862	WITHOUT_CLASSIFICATION	4.2264913795201276E-7	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999999462547003	WITHOUT_CLASSIFICATION	5.3745299551084905E-8	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.999999930951392	WITHOUT_CLASSIFICATION	6.904860812917155E-8	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999903483815458	WITHOUT_CLASSIFICATION	9.651618454200418E-6	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999999639973691	WITHOUT_CLASSIFICATION	3.600263074605699E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999644112345	WITHOUT_CLASSIFICATION	3.55887655809863E-8	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999988127960064	WITHOUT_CLASSIFICATION	1.1872039934962286E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999993329344835	WITHOUT_CLASSIFICATION	6.670655165764821E-7	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999995210948476	WITHOUT_CLASSIFICATION	4.789051524440462E-7	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.999998905157894	WITHOUT_CLASSIFICATION	1.0948421060593903E-6	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999881877986037	WITHOUT_CLASSIFICATION	1.1812201396433028E-5	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.989389695223065	WITHOUT_CLASSIFICATION	0.010610304776935052	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999745024023599	WITHOUT_CLASSIFICATION	2.5497597640114873E-5	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.999789049188283	WITHOUT_CLASSIFICATION	2.1095081171692111E-4	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9999994319105606	WITHOUT_CLASSIFICATION	5.680894393201981E-7	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999728051919977	WITHOUT_CLASSIFICATION	2.7194808002208467E-5	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9999163287098578	WITHOUT_CLASSIFICATION	8.367129014214198E-5	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999998570815523	WITHOUT_CLASSIFICATION	1.42918447862776E-7	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999803703418365	WITHOUT_CLASSIFICATION	1.9629658163488663E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999803703418365	WITHOUT_CLASSIFICATION	1.9629658163488663E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.99999248819258	WITHOUT_CLASSIFICATION	7.511807419901334E-6	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9999733283854114	WITHOUT_CLASSIFICATION	2.667161458866836E-5	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999998401969088	WITHOUT_CLASSIFICATION	1.598030911128453E-7	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999999744194941	WITHOUT_CLASSIFICATION	2.558050595342421E-8	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999395283462167	WITHOUT_CLASSIFICATION	6.047165378318682E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999995465235375	WITHOUT_CLASSIFICATION	4.5347646243264467E-7	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999989639989764	WITHOUT_CLASSIFICATION	1.0360010236313213E-6	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999992798250347	WITHOUT_CLASSIFICATION	7.201749653539116E-7	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999959234783211	WITHOUT_CLASSIFICATION	4.076521678870961E-6	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999999350730715	WITHOUT_CLASSIFICATION	6.492692840880473E-8	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999895158311777	WITHOUT_CLASSIFICATION	1.0484168822305163E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999791185009715	WITHOUT_CLASSIFICATION	2.0881499028515097E-5	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999865439444326	WITHOUT_CLASSIFICATION	1.345605556725286E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999993329344835	WITHOUT_CLASSIFICATION	6.670655165764821E-7	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999395283462167	WITHOUT_CLASSIFICATION	6.047165378318682E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999995465235375	WITHOUT_CLASSIFICATION	4.5347646243264467E-7	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999485546318866	WITHOUT_CLASSIFICATION	5.144536811336697E-5	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999964013917594	WITHOUT_CLASSIFICATION	3.5986082406496522E-6	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9998916822402666	WITHOUT_CLASSIFICATION	1.0831775973344933E-4	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9998865854996849	WITHOUT_CLASSIFICATION	1.1341450031510346E-4	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9999810849470468	WITHOUT_CLASSIFICATION	1.8915052953158088E-5	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999987306949326	WITHOUT_CLASSIFICATION	1.2693050674953746E-6	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9996251849695145	WITHOUT_CLASSIFICATION	3.7481503048558896E-4	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9999999661283253	WITHOUT_CLASSIFICATION	3.3871674709958686E-8	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999505313276016	WITHOUT_CLASSIFICATION	4.946867239834367E-5	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9999998513494136	WITHOUT_CLASSIFICATION	1.486505864358648E-7	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999999724716143	WITHOUT_CLASSIFICATION	2.7528385697676922E-8	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.999999732205198	WITHOUT_CLASSIFICATION	2.6779480201535104E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999201345526022	WITHOUT_CLASSIFICATION	7.986544739776685E-5	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999995737379349	WITHOUT_CLASSIFICATION	4.2626206504021695E-7	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9999443028146853	WITHOUT_CLASSIFICATION	5.569718531484407E-5	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999990681664456	WITHOUT_CLASSIFICATION	9.318335542733889E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999201345526022	WITHOUT_CLASSIFICATION	7.986544739776685E-5	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999201345526022	WITHOUT_CLASSIFICATION	7.986544739776685E-5	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999201345526022	WITHOUT_CLASSIFICATION	7.986544739776685E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999999913244217	WITHOUT_CLASSIFICATION	8.67557828058568E-9	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999997471997418	WITHOUT_CLASSIFICATION	2.5280025815962206E-7	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999999546129662	WITHOUT_CLASSIFICATION	4.53870337122996E-8	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999998167745436	WITHOUT_CLASSIFICATION	1.8322545634427076E-7	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9999997519188529	WITHOUT_CLASSIFICATION	2.480811470685818E-7	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9999994338918179	WITHOUT_CLASSIFICATION	5.661081820902845E-7	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9999970075618527	WITHOUT_CLASSIFICATION	2.9924381473343594E-6	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999945934638661	WITHOUT_CLASSIFICATION	5.406536133780919E-6	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999997453835748	WITHOUT_CLASSIFICATION	2.5461642514327296E-7	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999961299227224	WITHOUT_CLASSIFICATION	3.8700772776167646E-6	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9999989655950788	WITHOUT_CLASSIFICATION	1.0344049212044898E-6	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.999995487641607	WITHOUT_CLASSIFICATION	4.512358393091827E-6	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999997967665724	WITHOUT_CLASSIFICATION	2.0323342775713998E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999903586030106	WITHOUT_CLASSIFICATION	9.64139698941567E-6	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999958272017923	WITHOUT_CLASSIFICATION	4.17279820773798E-6	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9999390003382256	WITHOUT_CLASSIFICATION	6.0999661774460524E-5	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9996501678076121	WITHOUT_CLASSIFICATION	3.4983219238792277E-4	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999992083565199	WITHOUT_CLASSIFICATION	7.916434800235077E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999999793455563	WITHOUT_CLASSIFICATION	2.0654443745719502E-8	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999999793455563	WITHOUT_CLASSIFICATION	2.0654443745719502E-8	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999992830692	WITHOUT_CLASSIFICATION	7.169307957710466E-9	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956294320059	WITHOUT_CLASSIFICATION	4.3705679941258715E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999992830692	WITHOUT_CLASSIFICATION	7.169307957710466E-9	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999999648074084	WITHOUT_CLASSIFICATION	3.519259159463939E-8	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999990653010942	WITHOUT_CLASSIFICATION	9.346989057062164E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999999830453687	WITHOUT_CLASSIFICATION	1.6954631158003627E-8	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999996875718409	WITHOUT_CLASSIFICATION	3.124281591463979E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999996875718409	WITHOUT_CLASSIFICATION	3.124281591463979E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999999622112345	WITHOUT_CLASSIFICATION	3.778876553001647E-8	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999999622112345	WITHOUT_CLASSIFICATION	3.778876553001647E-8	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999999817946177	WITHOUT_CLASSIFICATION	1.8205382249749024E-8	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999999817946177	WITHOUT_CLASSIFICATION	1.8205382249749024E-8	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996376550334	WITHOUT_CLASSIFICATION	3.6234496658226116E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996376550334	WITHOUT_CLASSIFICATION	3.6234496658226116E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996376550334	WITHOUT_CLASSIFICATION	3.6234496658226116E-7	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9999983218452937	WITHOUT_CLASSIFICATION	1.6781547062259176E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996376550334	WITHOUT_CLASSIFICATION	3.6234496658226116E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996376550334	WITHOUT_CLASSIFICATION	3.6234496658226116E-7	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999901373245932	WITHOUT_CLASSIFICATION	9.862675406789702E-6	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999999258975325	WITHOUT_CLASSIFICATION	7.410246743005227E-8	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.999998080983953	WITHOUT_CLASSIFICATION	1.9190160470184035E-6	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999960532486931	WITHOUT_CLASSIFICATION	3.946751306982905E-6	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999994284191437	WITHOUT_CLASSIFICATION	5.715808562755871E-7	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999999163367163	WITHOUT_CLASSIFICATION	8.366328385267728E-8	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999912552464296	WITHOUT_CLASSIFICATION	8.74475357031464E-6	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999979873063978	WITHOUT_CLASSIFICATION	2.01269360223888E-6	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.999932478939574	WITHOUT_CLASSIFICATION	6.752106042596885E-5	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999998950878332	WITHOUT_CLASSIFICATION	1.0491216686444228E-7	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999951149531243	WITHOUT_CLASSIFICATION	4.885046875634922E-6	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999752565973539	WITHOUT_CLASSIFICATION	2.4743402646113113E-5	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999928356599492	WITHOUT_CLASSIFICATION	7.164340050769028E-6	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999995784949275	WITHOUT_CLASSIFICATION	4.215050724889444E-7	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999985372939585	WITHOUT_CLASSIFICATION	1.4627060414592263E-6	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999998822305207	WITHOUT_CLASSIFICATION	1.1776947927081024E-7	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999980268393655	WITHOUT_CLASSIFICATION	1.973160634568983E-6	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999934460289416	WITHOUT_CLASSIFICATION	6.553971058442171E-6	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999994750319219	WITHOUT_CLASSIFICATION	5.24968078083464E-7	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.999999388696612	WITHOUT_CLASSIFICATION	6.1130338809702E-7	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999968282876248	WITHOUT_CLASSIFICATION	3.1717123751833777E-6	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9999844501698668	WITHOUT_CLASSIFICATION	1.5549830133215108E-5	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9999844501698668	WITHOUT_CLASSIFICATION	1.5549830133215108E-5	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9998278249232861	WITHOUT_CLASSIFICATION	1.7217507671392351E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9998278249232861	WITHOUT_CLASSIFICATION	1.7217507671392351E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.999999668547139	WITHOUT_CLASSIFICATION	3.3145286097127936E-7	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999919802049629	WITHOUT_CLASSIFICATION	8.019795036955785E-6	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999999742258515	WITHOUT_CLASSIFICATION	2.577414844392599E-8	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999996235005996	WITHOUT_CLASSIFICATION	3.764994004163686E-7	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999996948720585	WITHOUT_CLASSIFICATION	3.051279414804765E-7	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999986683724915	WITHOUT_CLASSIFICATION	1.3316275085331292E-6	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999998354122381	WITHOUT_CLASSIFICATION	1.645877618428759E-7	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.999898675278567	WITHOUT_CLASSIFICATION	1.0132472143296532E-4	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9999988085442872	WITHOUT_CLASSIFICATION	1.1914557127121502E-6	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999999157876956	WITHOUT_CLASSIFICATION	8.421230430889978E-8	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999998890746398	WITHOUT_CLASSIFICATION	1.1092536028569315E-7	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999991260411449	WITHOUT_CLASSIFICATION	8.739588550415759E-7	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999938696031897	WITHOUT_CLASSIFICATION	6.130396810383776E-6	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999999415018992	WITHOUT_CLASSIFICATION	5.8498100747251855E-8	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999996059875176	WITHOUT_CLASSIFICATION	3.9401248239909167E-7	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999902230455204	WITHOUT_CLASSIFICATION	9.77695447949228E-6	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999997568000109	WITHOUT_CLASSIFICATION	2.4319998912567213E-7	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.999985985805918	WITHOUT_CLASSIFICATION	1.4014194081982185E-5	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999998980316874	WITHOUT_CLASSIFICATION	1.0196831254668632E-7	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9999864826303273	WITHOUT_CLASSIFICATION	1.3517369672756891E-5	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999999030802943	WITHOUT_CLASSIFICATION	9.691970569703012E-8	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.999999077006087	WITHOUT_CLASSIFICATION	9.229939131032931E-7	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.999999966025322	WITHOUT_CLASSIFICATION	3.3974678011566197E-8	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9992001817395063	WITHOUT_CLASSIFICATION	7.998182604936851E-4	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999944114190362	WITHOUT_CLASSIFICATION	5.588580963801756E-6	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.999999546049254	WITHOUT_CLASSIFICATION	4.5395074601507027E-7	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999852667532457	WITHOUT_CLASSIFICATION	1.4733246754206741E-5	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9999766913267286	WITHOUT_CLASSIFICATION	2.3308673271407986E-5	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999997304715641	WITHOUT_CLASSIFICATION	2.6952843587254997E-7	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9999970156795107	WITHOUT_CLASSIFICATION	2.9843204893103267E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999923818452	WITHOUT_CLASSIFICATION	7.618154669231898E-9	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999608689404	WITHOUT_CLASSIFICATION	3.9131059510442525E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999999933854989	WITHOUT_CLASSIFICATION	6.61450109974598E-8	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995921493732	WITHOUT_CLASSIFICATION	4.0785062686189873E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999491288915	WITHOUT_CLASSIFICATION	5.087110854762849E-8	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999980959634269	WITHOUT_CLASSIFICATION	1.9040365729997778E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999476523529	WITHOUT_CLASSIFICATION	5.234764715047918E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999979826819	WITHOUT_CLASSIFICATION	2.0173181089870275E-8	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999052993288	WITHOUT_CLASSIFICATION	9.470067124970181E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999999074435963	WITHOUT_CLASSIFICATION	9.255640370119442E-8	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988997282738	WITHOUT_CLASSIFICATION	1.1002717261180713E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990476613889	WITHOUT_CLASSIFICATION	9.52338611185431E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999999932367232	WITHOUT_CLASSIFICATION	6.763276845606578E-9	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999172363175	WITHOUT_CLASSIFICATION	8.276368246736127E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998979553018	WITHOUT_CLASSIFICATION	1.0204469823522411E-7	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999934212091628	WITHOUT_CLASSIFICATION	6.578790837131146E-6	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9999988584051728	WITHOUT_CLASSIFICATION	1.1415948272489118E-6	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999999175968944	WITHOUT_CLASSIFICATION	8.240310547432123E-8	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999997894945338	WITHOUT_CLASSIFICATION	2.1050546620750064E-7	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9999996353516966	WITHOUT_CLASSIFICATION	3.646483034553527E-7	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.99999996491481	WITHOUT_CLASSIFICATION	3.508519006700163E-8	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9999999715209059	WITHOUT_CLASSIFICATION	2.847909415997232E-8	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999999783194637	WITHOUT_CLASSIFICATION	2.1680536183605795E-8	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999999106219136	WITHOUT_CLASSIFICATION	8.937808633121044E-8	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999969996730814	WITHOUT_CLASSIFICATION	3.0003269185116692E-6	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999956324946083	WITHOUT_CLASSIFICATION	4.367505391655499E-6	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9999808646094049	WITHOUT_CLASSIFICATION	1.9135390594954667E-5	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.999997072435649	WITHOUT_CLASSIFICATION	2.9275643509538034E-6	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.999985972915786	WITHOUT_CLASSIFICATION	1.4027084214047909E-5	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9999601837562532	WITHOUT_CLASSIFICATION	3.981624374679861E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9999963455535217	WITHOUT_CLASSIFICATION	3.654446478363023E-6	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9999714909893322	WITHOUT_CLASSIFICATION	2.8509010667746174E-5	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.999958827969035	WITHOUT_CLASSIFICATION	4.1172030965047636E-5	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9999843572791892	WITHOUT_CLASSIFICATION	1.564272081075621E-5	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999290848328	WITHOUT_CLASSIFICATION	7.091516718755714E-8	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.999993678817243	WITHOUT_CLASSIFICATION	6.3211827570430375E-6	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9997646161212275	WITHOUT_CLASSIFICATION	2.353838787725678E-4	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9999974392811467	WITHOUT_CLASSIFICATION	2.5607188532426288E-6	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9999999577155374	WITHOUT_CLASSIFICATION	4.228446259959413E-8	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.9961591006827297	WITHOUT_CLASSIFICATION	0.003840899317270298	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9999848491899813	WITHOUT_CLASSIFICATION	1.5150810018568998E-5	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9999998197229265	WITHOUT_CLASSIFICATION	1.802770733903659E-7	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999999602691501	WITHOUT_CLASSIFICATION	3.9730849974629456E-8	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999998712098106	WITHOUT_CLASSIFICATION	1.2879018938222462E-7	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999999456659591	WITHOUT_CLASSIFICATION	5.433404087279926E-8	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999994228611202	WITHOUT_CLASSIFICATION	5.77138879771412E-7	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999996718733458	WITHOUT_CLASSIFICATION	3.2812665420868864E-7	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9999556025055125	WITHOUT_CLASSIFICATION	4.439749448749424E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9999999673407387	WITHOUT_CLASSIFICATION	3.265926120528929E-8	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999993421977623	WITHOUT_CLASSIFICATION	6.578022377717302E-7	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999989043803811	WITHOUT_CLASSIFICATION	1.095619618909348E-6	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999996165847141	WITHOUT_CLASSIFICATION	3.834152858000941E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999993207826964	WITHOUT_CLASSIFICATION	6.792173037273183E-7	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999916270458568	WITHOUT_CLASSIFICATION	8.372954143181318E-6	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.999999965178043	WITHOUT_CLASSIFICATION	3.482195704012674E-8	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999815246001335	WITHOUT_CLASSIFICATION	1.8475399866528732E-5	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999998913371455	WITHOUT_CLASSIFICATION	1.0866285446568659E-7	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999997524086474	WITHOUT_CLASSIFICATION	2.475913526469933E-7	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999990041249704	WITHOUT_CLASSIFICATION	9.95875029471174E-7	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.999965314583703	WITHOUT_CLASSIFICATION	3.468541629708907E-5	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9999999580536962	WITHOUT_CLASSIFICATION	4.1946303745628325E-8	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999997639285836	WITHOUT_CLASSIFICATION	2.3607141638399143E-7	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999897554115381	WITHOUT_CLASSIFICATION	1.0244588461811715E-5	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9999999307383417	WITHOUT_CLASSIFICATION	6.926165826913905E-8	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9999515773310486	WITHOUT_CLASSIFICATION	4.8422668951488466E-5	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999996070588788	WITHOUT_CLASSIFICATION	3.9294112124846294E-7	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.999988385168392	WITHOUT_CLASSIFICATION	1.1614831608019253E-5	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999999090359475	WITHOUT_CLASSIFICATION	9.096405240559554E-8	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999998795339446	WITHOUT_CLASSIFICATION	1.2046605543532817E-7	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999959176957178	WITHOUT_CLASSIFICATION	4.0823042822628495E-6	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999991108096543	WITHOUT_CLASSIFICATION	8.891903457922529E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999991108096543	WITHOUT_CLASSIFICATION	8.891903457922529E-7	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999999982075575	WITHOUT_CLASSIFICATION	1.7924424984018093E-9	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999781688024917	WITHOUT_CLASSIFICATION	2.1831197508399895E-5	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.999998887495371	WITHOUT_CLASSIFICATION	1.1125046290118541E-6	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.999999699117607	WITHOUT_CLASSIFICATION	3.008823929531207E-7	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.99999977795469	WITHOUT_CLASSIFICATION	2.220453099547596E-7	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9997709405131141	WITHOUT_CLASSIFICATION	2.290594868858744E-4	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999998840812326	WITHOUT_CLASSIFICATION	1.1591876730863065E-7	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9999996315553894	WITHOUT_CLASSIFICATION	3.6844461059078836E-7	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999920928440057	WITHOUT_CLASSIFICATION	7.907155994386202E-6	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.999998758115391	WITHOUT_CLASSIFICATION	1.241884608934474E-6	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999999684820031	WITHOUT_CLASSIFICATION	3.151799690281522E-8	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9992707033972592	WITHOUT_CLASSIFICATION	7.292966027408588E-4	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999911952285607	WITHOUT_CLASSIFICATION	8.804771439262814E-6	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9999997973632136	WITHOUT_CLASSIFICATION	2.0263678638515703E-7	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999999795177962	WITHOUT_CLASSIFICATION	2.0482203845212974E-8	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9999979633495026	WITHOUT_CLASSIFICATION	2.0366504974096703E-6	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.999969664062397	WITHOUT_CLASSIFICATION	3.033593760302382E-5	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999999488478017	WITHOUT_CLASSIFICATION	5.115219816827689E-8	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999960418827569	WITHOUT_CLASSIFICATION	3.958117243043213E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9994072035344621	WITHOUT_CLASSIFICATION	5.927964655379577E-4	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999992019193944	WITHOUT_CLASSIFICATION	7.980806056278782E-7	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999979647698204	WITHOUT_CLASSIFICATION	2.035230179658645E-6	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999998840840977	WITHOUT_CLASSIFICATION	1.1591590232396946E-7	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999999626953857	WITHOUT_CLASSIFICATION	3.7304614228350836E-8	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999999335742786	WITHOUT_CLASSIFICATION	6.642572146362557E-8	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999996866702218	WITHOUT_CLASSIFICATION	3.133297781750241E-7	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999925166884776	WITHOUT_CLASSIFICATION	7.483311522462239E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996376550334	WITHOUT_CLASSIFICATION	3.6234496658226116E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996376550334	WITHOUT_CLASSIFICATION	3.6234496658226116E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996376550334	WITHOUT_CLASSIFICATION	3.6234496658226116E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996376550334	WITHOUT_CLASSIFICATION	3.6234496658226116E-7	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999893421676302	WITHOUT_CLASSIFICATION	1.065783236986651E-5	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9999980607022567	WITHOUT_CLASSIFICATION	1.9392977431993346E-6	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999990493999299	WITHOUT_CLASSIFICATION	9.506000701834539E-7	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9999525766571818	WITHOUT_CLASSIFICATION	4.742334281813779E-5	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999996729972414	WITHOUT_CLASSIFICATION	3.270027586089423E-7	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999868129604981	WITHOUT_CLASSIFICATION	1.3187039501919354E-5	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999987704683857	WITHOUT_CLASSIFICATION	1.229531614311503E-6	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.999999885131229	WITHOUT_CLASSIFICATION	1.1486877111235572E-7	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999869858593812	WITHOUT_CLASSIFICATION	1.3014140618906121E-5	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.999998884767034	WITHOUT_CLASSIFICATION	1.1152329660282645E-6	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.999999971620339	WITHOUT_CLASSIFICATION	2.8379660938969183E-8	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999411681579073	WITHOUT_CLASSIFICATION	5.883184209258771E-5	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999927584753868	WITHOUT_CLASSIFICATION	7.241524613208234E-6	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999896772941168	WITHOUT_CLASSIFICATION	1.0322705883242942E-5	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.999999738530651	WITHOUT_CLASSIFICATION	2.614693489845739E-7	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999936847537222	WITHOUT_CLASSIFICATION	6.315246277834716E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999999793455563	WITHOUT_CLASSIFICATION	2.0654443745719502E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999999793455563	WITHOUT_CLASSIFICATION	2.0654443745719502E-8	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999992830692	WITHOUT_CLASSIFICATION	7.169307957710466E-9	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999992830692	WITHOUT_CLASSIFICATION	7.169307957710466E-9	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999997985403978	WITHOUT_CLASSIFICATION	2.0145960225091526E-7	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9999069751620588	WITHOUT_CLASSIFICATION	9.302483794117883E-5	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999997173773095	WITHOUT_CLASSIFICATION	2.826226904637346E-7	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999992988604145	WITHOUT_CLASSIFICATION	7.011395855470745E-7	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9999970895305091	WITHOUT_CLASSIFICATION	2.9104694908926643E-6	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999992878645816	WITHOUT_CLASSIFICATION	7.121354184151045E-7	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9999996723966568	WITHOUT_CLASSIFICATION	3.2760334318662364E-7	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999998410536453	WITHOUT_CLASSIFICATION	1.589463546743054E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999732376750372	WITHOUT_CLASSIFICATION	2.6762324962780845E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999732376750372	WITHOUT_CLASSIFICATION	2.6762324962780845E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999998588209175	WITHOUT_CLASSIFICATION	1.4117908242951763E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999998588209175	WITHOUT_CLASSIFICATION	1.4117908242951763E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999990681664456	WITHOUT_CLASSIFICATION	9.318335542733889E-7	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999990653010942	WITHOUT_CLASSIFICATION	9.346989057062164E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999999648074084	WITHOUT_CLASSIFICATION	3.519259159463939E-8	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999999830453687	WITHOUT_CLASSIFICATION	1.6954631158003627E-8	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999996875718409	WITHOUT_CLASSIFICATION	3.124281591463979E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999996875718409	WITHOUT_CLASSIFICATION	3.124281591463979E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999999622112345	WITHOUT_CLASSIFICATION	3.778876553001647E-8	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999999622112345	WITHOUT_CLASSIFICATION	3.778876553001647E-8	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999999817946177	WITHOUT_CLASSIFICATION	1.8205382249749024E-8	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999999817946177	WITHOUT_CLASSIFICATION	1.8205382249749024E-8	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9999972966455662	WITHOUT_CLASSIFICATION	2.703354433787051E-6	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.999999809446809	WITHOUT_CLASSIFICATION	1.905531910384392E-7	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9999959252446571	WITHOUT_CLASSIFICATION	4.074755343011667E-6	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9992911857600442	WITHOUT_CLASSIFICATION	7.088142399558635E-4	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999995641569115	WITHOUT_CLASSIFICATION	4.3584308852010867E-7	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999999465915176	WITHOUT_CLASSIFICATION	5.340848241368944E-8	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999998259340348	WITHOUT_CLASSIFICATION	1.7406596524121015E-7	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9999984049073907	WITHOUT_CLASSIFICATION	1.5950926093227494E-6	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9999997252371209	WITHOUT_CLASSIFICATION	2.7476287917810384E-7	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999940366357392	WITHOUT_CLASSIFICATION	5.963364260814712E-6	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999999479615179	WITHOUT_CLASSIFICATION	5.203848203938078E-8	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9999963388698987	WITHOUT_CLASSIFICATION	3.6611301013189954E-6	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999996599236395	WITHOUT_CLASSIFICATION	3.40076360526201E-7	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999996775330258	WITHOUT_CLASSIFICATION	3.2246697432101366E-7	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999978209207759	WITHOUT_CLASSIFICATION	2.1790792240751573E-6	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999901243836322	WITHOUT_CLASSIFICATION	9.875616367822486E-6	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999947106046018	WITHOUT_CLASSIFICATION	5.289395398220982E-6	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999997652915793	WITHOUT_CLASSIFICATION	2.3470842082651643E-7	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.999999997583422	WITHOUT_CLASSIFICATION	2.416578100579482E-9	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999996005613119	WITHOUT_CLASSIFICATION	3.9943868805600787E-7	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999999743894056	WITHOUT_CLASSIFICATION	2.5610594349647508E-8	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9999975957175631	WITHOUT_CLASSIFICATION	2.4042824368728457E-6	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999938307300739	WITHOUT_CLASSIFICATION	6.169269926129504E-6	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999998504965087	WITHOUT_CLASSIFICATION	1.4950349123133965E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999992415985625	WITHOUT_CLASSIFICATION	7.584014375238612E-7	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999999975342746	WITHOUT_CLASSIFICATION	2.4657253118478135E-9	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9999770809200441	WITHOUT_CLASSIFICATION	2.2919079955873592E-5	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999999207311224	WITHOUT_CLASSIFICATION	7.926887758823134E-8	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9999773654154284	WITHOUT_CLASSIFICATION	2.263458457151321E-5	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9999628812067529	WITHOUT_CLASSIFICATION	3.711879324705023E-5	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999999925594562	WITHOUT_CLASSIFICATION	7.440543727633183E-9	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999977320320346	WITHOUT_CLASSIFICATION	2.267967965458099E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999997866142886	WITHOUT_CLASSIFICATION	2.1338571146295572E-7	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9999994529187565	WITHOUT_CLASSIFICATION	5.470812436377703E-7	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999997144775331	WITHOUT_CLASSIFICATION	2.8552246688839487E-7	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999999703596996	WITHOUT_CLASSIFICATION	2.964030046873211E-8	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999998871607504	WITHOUT_CLASSIFICATION	1.128392495953946E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999787046919	WITHOUT_CLASSIFICATION	2.1295307960663312E-8	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999998714640833	WITHOUT_CLASSIFICATION	1.285359166218493E-7	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999998734509812	WITHOUT_CLASSIFICATION	1.2654901884797968E-7	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999999355644058	WITHOUT_CLASSIFICATION	6.443559418760109E-8	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999990387075668	WITHOUT_CLASSIFICATION	9.61292433206302E-7	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999999466899542	WITHOUT_CLASSIFICATION	5.3310045849300756E-8	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999995495193738	WITHOUT_CLASSIFICATION	4.504806263096711E-7	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999999865935576	WITHOUT_CLASSIFICATION	1.3406442334829806E-8	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999845806655413	WITHOUT_CLASSIFICATION	1.5419334458721236E-5	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9991810318255119	WITHOUT_CLASSIFICATION	8.18968174487999E-4	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9999993975322068	WITHOUT_CLASSIFICATION	6.02467793290651E-7	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999158896569044	WITHOUT_CLASSIFICATION	8.411034309566481E-5	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999980250316792	WITHOUT_CLASSIFICATION	1.974968320720759E-6	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999959818304507	WITHOUT_CLASSIFICATION	4.018169549301525E-6	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999946376742228	WITHOUT_CLASSIFICATION	5.3623257772424955E-6	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9995541815036116	WITHOUT_CLASSIFICATION	4.458184963883373E-4	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.999726210044709	WITHOUT_CLASSIFICATION	2.7378995529110856E-4	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9999921018194515	WITHOUT_CLASSIFICATION	7.898180548585346E-6	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999999856226764	WITHOUT_CLASSIFICATION	1.437732341612389E-8	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.999990944716155	WITHOUT_CLASSIFICATION	9.055283845071915E-6	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999998770131049	WITHOUT_CLASSIFICATION	1.2298689510816661E-7	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999999658467627	WITHOUT_CLASSIFICATION	3.4153237374106E-8	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.999999986833247	WITHOUT_CLASSIFICATION	1.316675307712731E-8	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9999998991890173	WITHOUT_CLASSIFICATION	1.0081098259876882E-7	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999999998392824	WITHOUT_CLASSIFICATION	1.6071755466773262E-10	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999999767684966	WITHOUT_CLASSIFICATION	2.3231503279779575E-8	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999997390240296	WITHOUT_CLASSIFICATION	2.609759704497812E-7	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999999497305639	WITHOUT_CLASSIFICATION	5.02694360876883E-8	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9999849426183649	WITHOUT_CLASSIFICATION	1.5057381635209457E-5	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999994462987534	WITHOUT_CLASSIFICATION	5.537012466780133E-7	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999992449698581	WITHOUT_CLASSIFICATION	7.550301418795724E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999476523529	WITHOUT_CLASSIFICATION	5.234764715047918E-8	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9998891420372353	WITHOUT_CLASSIFICATION	1.1085796276462951E-4	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999998383545747	WITHOUT_CLASSIFICATION	1.61645425367365E-7	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999359195374	WITHOUT_CLASSIFICATION	6.408046263700387E-8	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999992782165239	WITHOUT_CLASSIFICATION	7.217834760628757E-7	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999999493120092	WITHOUT_CLASSIFICATION	5.068799072732569E-8	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999999875571787	WITHOUT_CLASSIFICATION	1.2442821387429312E-8	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999994834234017	WITHOUT_CLASSIFICATION	5.165765983053213E-7	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999958701351657	WITHOUT_CLASSIFICATION	4.129864834340845E-6	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999999120664934	WITHOUT_CLASSIFICATION	8.793350658887678E-8	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9999981848731458	WITHOUT_CLASSIFICATION	1.8151268541041059E-6	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999999770817286	WITHOUT_CLASSIFICATION	2.291827144702258E-8	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9999970286980371	WITHOUT_CLASSIFICATION	2.9713019628309266E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999979826819	WITHOUT_CLASSIFICATION	2.0173181089870275E-8	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999956590290912	WITHOUT_CLASSIFICATION	4.340970908874494E-6	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9999999999990861	WITHOUT_CLASSIFICATION	9.138760057904194E-13	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9998597646428764	WITHOUT_CLASSIFICATION	1.4023535712365834E-4	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999999242170016	WITHOUT_CLASSIFICATION	7.578299844268642E-8	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999999994288123	WITHOUT_CLASSIFICATION	5.711876282776157E-10	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9999878618483955	WITHOUT_CLASSIFICATION	1.2138151604499113E-5	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999989635257558	WITHOUT_CLASSIFICATION	1.0364742442141163E-6	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999999854498242	WITHOUT_CLASSIFICATION	1.4550175824859194E-8	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999964880908825	WITHOUT_CLASSIFICATION	3.5119091175001947E-6	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9999999971746624	WITHOUT_CLASSIFICATION	2.8253376378958774E-9	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999996849552625	WITHOUT_CLASSIFICATION	3.150447375689919E-7	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999886419425582	WITHOUT_CLASSIFICATION	1.135805744182084E-5	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9998959233983271	WITHOUT_CLASSIFICATION	1.0407660167290555E-4	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999998609905821	WITHOUT_CLASSIFICATION	1.3900941795575677E-7	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999998147043686	WITHOUT_CLASSIFICATION	1.8529563134021516E-7	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999993019998404	WITHOUT_CLASSIFICATION	6.980001596419399E-7	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999998336583535	WITHOUT_CLASSIFICATION	1.6634164642539075E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999882451415164	WITHOUT_CLASSIFICATION	1.1754858483599175E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999989893117629	WITHOUT_CLASSIFICATION	1.0106882370389636E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999989893117629	WITHOUT_CLASSIFICATION	1.0106882370389636E-6	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999998260521963	WITHOUT_CLASSIFICATION	1.7394780377737144E-7	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999996097939488	WITHOUT_CLASSIFICATION	3.90206051257066E-7	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999986702540327	WITHOUT_CLASSIFICATION	1.3297459672766276E-6	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999988031308786	WITHOUT_CLASSIFICATION	1.1968691213795697E-6	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999999019718872	WITHOUT_CLASSIFICATION	9.802811281488072E-8	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.999999844006853	WITHOUT_CLASSIFICATION	1.5599314693229977E-7	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9999997289308398	WITHOUT_CLASSIFICATION	2.7106916021910257E-7	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999969328890772	WITHOUT_CLASSIFICATION	3.067110922663627E-6	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.999990637772761	WITHOUT_CLASSIFICATION	9.36222723904077E-6	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9999995529896949	WITHOUT_CLASSIFICATION	4.470103050746751E-7	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999998107783938	WITHOUT_CLASSIFICATION	1.8922160609210446E-7	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999999942874837	WITHOUT_CLASSIFICATION	5.71251645248115E-9	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999992009190785	WITHOUT_CLASSIFICATION	7.990809215405464E-7	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999997861591627	WITHOUT_CLASSIFICATION	2.1384083731421694E-7	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9999988451980953	WITHOUT_CLASSIFICATION	1.1548019046499363E-6	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999998992411318	WITHOUT_CLASSIFICATION	1.0075886820478207E-7	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999982262316789	WITHOUT_CLASSIFICATION	1.7737683210699982E-6	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.999998705153601	WITHOUT_CLASSIFICATION	1.2948463990706497E-6	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999999582038959	WITHOUT_CLASSIFICATION	4.179610405079571E-8	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999998622025257	WITHOUT_CLASSIFICATION	1.3779747434170532E-7	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.999999373308766	WITHOUT_CLASSIFICATION	6.266912341124217E-7	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999999584335575	WITHOUT_CLASSIFICATION	4.156644257606187E-8	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999944432379727	WITHOUT_CLASSIFICATION	5.556762027387218E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999999858467284	WITHOUT_CLASSIFICATION	1.4153271489487515E-8	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999996286923384	WITHOUT_CLASSIFICATION	3.713076615316872E-7	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999999751587216	WITHOUT_CLASSIFICATION	2.4841278378060606E-8	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999985958148463	WITHOUT_CLASSIFICATION	1.4041851537438254E-6	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9999992089306708	WITHOUT_CLASSIFICATION	7.910693291605375E-7	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999991561280641	WITHOUT_CLASSIFICATION	8.438719359231265E-7	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999995600794351	WITHOUT_CLASSIFICATION	4.3992056479354384E-7	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9998455354824639	WITHOUT_CLASSIFICATION	1.544645175361041E-4	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9999892529456927	WITHOUT_CLASSIFICATION	1.0747054307266231E-5	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.999981063096191	WITHOUT_CLASSIFICATION	1.8936903809002652E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999983628013839	WITHOUT_CLASSIFICATION	1.6371986161654918E-6	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999991770543152	WITHOUT_CLASSIFICATION	8.229456848293364E-7	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999946742332166	WITHOUT_CLASSIFICATION	5.325766783465781E-6	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9999947921655636	WITHOUT_CLASSIFICATION	5.20783443644123E-6	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999991561280641	WITHOUT_CLASSIFICATION	8.438719359231265E-7	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999997179689096	WITHOUT_CLASSIFICATION	2.820310902903708E-7	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999999165380485	WITHOUT_CLASSIFICATION	8.346195149892545E-8	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999952476443938	WITHOUT_CLASSIFICATION	4.752355606238873E-6	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9999757130576101	WITHOUT_CLASSIFICATION	2.42869423898338E-5	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999945400073774	WITHOUT_CLASSIFICATION	5.4599926225730796E-6	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999981971292189	WITHOUT_CLASSIFICATION	1.8028707811971593E-6	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.99999946089367	WITHOUT_CLASSIFICATION	5.39106329942124E-7	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9999865997231925	WITHOUT_CLASSIFICATION	1.3400276807614845E-5	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999991499722399	WITHOUT_CLASSIFICATION	8.500277600650685E-7	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999999021884557	WITHOUT_CLASSIFICATION	9.781154435947472E-8	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999932487866168	WITHOUT_CLASSIFICATION	6.751213383312422E-6	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.999999382485888	WITHOUT_CLASSIFICATION	6.175141120275917E-7	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999968652675996	WITHOUT_CLASSIFICATION	3.1347324004430262E-6	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9998140727362061	WITHOUT_CLASSIFICATION	1.859272637938379E-4	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999976211609813	WITHOUT_CLASSIFICATION	2.3788390186856044E-6	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.999618457702735	WITHOUT_CLASSIFICATION	3.815422972649683E-4	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.999618457702735	WITHOUT_CLASSIFICATION	3.815422972649683E-4	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9842357236167661	WITHOUT_CLASSIFICATION	0.015764276383234004	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9994623698002872	WITHOUT_CLASSIFICATION	5.37630199712793E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9996472237184391	WITHOUT_CLASSIFICATION	3.5277628156091235E-4	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9999095551748797	WITHOUT_CLASSIFICATION	9.044482512032713E-5	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999980495659396	WITHOUT_CLASSIFICATION	1.9504340604859977E-6	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999975909992573	WITHOUT_CLASSIFICATION	2.4090007427357604E-6	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9999689834418165	WITHOUT_CLASSIFICATION	3.1016558183600194E-5	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999960875035778	WITHOUT_CLASSIFICATION	3.912496422204209E-6	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9992379131265627	WITHOUT_CLASSIFICATION	7.62086873437225E-4	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999931736172808	WITHOUT_CLASSIFICATION	6.8263827192016846E-6	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999999869292026	WITHOUT_CLASSIFICATION	1.3070797381809326E-8	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9932653018546852	WITHOUT_CLASSIFICATION	0.006734698145314825	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999975429839	WITHOUT_CLASSIFICATION	2.4570161956379332E-9	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956294320059	WITHOUT_CLASSIFICATION	4.3705679941258715E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956294320059	WITHOUT_CLASSIFICATION	4.3705679941258715E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9996472237184391	WITHOUT_CLASSIFICATION	3.5277628156091235E-4	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999999869292026	WITHOUT_CLASSIFICATION	1.3070797381809326E-8	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.999995015194085	WITHOUT_CLASSIFICATION	4.984805915141166E-6	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9998935409128258	WITHOUT_CLASSIFICATION	1.0645908717424014E-4	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999102982028487	WITHOUT_CLASSIFICATION	8.970179715133408E-5	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9999881145885283	WITHOUT_CLASSIFICATION	1.1885411471649492E-5	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999702998614113	WITHOUT_CLASSIFICATION	2.970013858871212E-5	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999990354411284	WITHOUT_CLASSIFICATION	9.645588714645222E-7	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999924050307384	WITHOUT_CLASSIFICATION	7.5949692616906125E-6	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999999239094993	WITHOUT_CLASSIFICATION	7.609050066738442E-8	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999999965913128	WITHOUT_CLASSIFICATION	3.4086871178656703E-9	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999722216257767	WITHOUT_CLASSIFICATION	2.7778374223275483E-5	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9999941302274898	WITHOUT_CLASSIFICATION	5.869772510202097E-6	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9999522410802367	WITHOUT_CLASSIFICATION	4.77589197633374E-5	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9997273978791394	WITHOUT_CLASSIFICATION	2.726021208605679E-4	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999648693106672	WITHOUT_CLASSIFICATION	3.513068933285646E-5	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9999881270986082	WITHOUT_CLASSIFICATION	1.1872901391848596E-5	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9999980166352033	WITHOUT_CLASSIFICATION	1.9833647966424433E-6	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999986955322934	WITHOUT_CLASSIFICATION	1.3044677065667802E-6	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999997826202017	WITHOUT_CLASSIFICATION	2.1737979828234042E-7	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999997883271587	WITHOUT_CLASSIFICATION	2.1167284113512078E-7	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999991760440998	WITHOUT_CLASSIFICATION	8.239559002585928E-7	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9999075278388854	WITHOUT_CLASSIFICATION	9.247216111463002E-5	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9999975474587819	WITHOUT_CLASSIFICATION	2.452541218126329E-6	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.5043412278243153	WITHOUT_CLASSIFICATION	0.49565877217568466	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9999594148490755	WITHOUT_CLASSIFICATION	4.058515092445653E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999872264345	WITHOUT_CLASSIFICATION	1.2773565604788551E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999999099475526	WITHOUT_CLASSIFICATION	9.005244741344325E-8	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999996639538937	WITHOUT_CLASSIFICATION	3.3604610624373977E-7	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999999652022008	WITHOUT_CLASSIFICATION	3.4797799272653755E-8	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9999796707640093	WITHOUT_CLASSIFICATION	2.032923599076675E-5	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9980801311204683	WITHOUT_CLASSIFICATION	0.001919868879531677	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999999700973508	WITHOUT_CLASSIFICATION	2.990264936976422E-8	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999999697614104	WITHOUT_CLASSIFICATION	3.023858960300835E-8	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999999433890376	WITHOUT_CLASSIFICATION	5.6610962357271E-8	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.999999868864859	WITHOUT_CLASSIFICATION	1.311351409735762E-7	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999908853169928	WITHOUT_CLASSIFICATION	9.114683007236304E-6	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999999318062248	WITHOUT_CLASSIFICATION	6.81937751877493E-8	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999999779272954	WITHOUT_CLASSIFICATION	2.2072704476180413E-8	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999997021242035	WITHOUT_CLASSIFICATION	2.978757963816034E-7	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999998588851834	WITHOUT_CLASSIFICATION	1.4111481667816184E-7	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999996644552458	WITHOUT_CLASSIFICATION	3.355447542174589E-7	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999998472285203	WITHOUT_CLASSIFICATION	1.5277147971093283E-7	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999955392044931	WITHOUT_CLASSIFICATION	4.460795506865262E-6	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999999923198054	WITHOUT_CLASSIFICATION	7.68019456699457E-9	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.999987362834708	WITHOUT_CLASSIFICATION	1.2637165292020276E-5	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999879101072905	WITHOUT_CLASSIFICATION	1.2089892709584935E-5	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9999402177317779	WITHOUT_CLASSIFICATION	5.978226822200732E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999052993288	WITHOUT_CLASSIFICATION	9.470067124970181E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999999074435963	WITHOUT_CLASSIFICATION	9.255640370119442E-8	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988997282738	WITHOUT_CLASSIFICATION	1.1002717261180713E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990476613889	WITHOUT_CLASSIFICATION	9.52338611185431E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999998152377635	WITHOUT_CLASSIFICATION	1.847622364244421E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999998534243785	WITHOUT_CLASSIFICATION	1.465756214487199E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999999932367232	WITHOUT_CLASSIFICATION	6.763276845606578E-9	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999172363175	WITHOUT_CLASSIFICATION	8.276368246736127E-8	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999734545476834	WITHOUT_CLASSIFICATION	2.654545231666624E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998979553018	WITHOUT_CLASSIFICATION	1.0204469823522411E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999999848949609	WITHOUT_CLASSIFICATION	1.5105039088650223E-7	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999994553095757	WITHOUT_CLASSIFICATION	5.446904242672812E-7	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.999998117384239	WITHOUT_CLASSIFICATION	1.882615761009765E-6	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999903414439	WITHOUT_CLASSIFICATION	9.658556116805674E-9	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999997967665724	WITHOUT_CLASSIFICATION	2.0323342775713998E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.999999958334735	WITHOUT_CLASSIFICATION	4.166526503745827E-8	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999560082689	WITHOUT_CLASSIFICATION	4.3991731188101564E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999778242684	WITHOUT_CLASSIFICATION	2.2175731595250885E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999999000948515	WITHOUT_CLASSIFICATION	9.990514851006846E-8	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.999988312911296	WITHOUT_CLASSIFICATION	1.1687088703961641E-5	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9999879610612151	WITHOUT_CLASSIFICATION	1.2038938784941041E-5	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999665547466141	WITHOUT_CLASSIFICATION	3.3445253385873694E-5	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9998713299127305	WITHOUT_CLASSIFICATION	1.2867008726936442E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999847247326861	WITHOUT_CLASSIFICATION	1.5275267313886875E-5	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999847247326861	WITHOUT_CLASSIFICATION	1.5275267313886875E-5	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999018317980872	WITHOUT_CLASSIFICATION	9.816820191281478E-5	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999324811157511	WITHOUT_CLASSIFICATION	6.751888424897227E-5	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9999864871966768	WITHOUT_CLASSIFICATION	1.3512803323109695E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999746936356844	WITHOUT_CLASSIFICATION	2.5306364315679124E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999746936356844	WITHOUT_CLASSIFICATION	2.5306364315679124E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999746936356844	WITHOUT_CLASSIFICATION	2.5306364315679124E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999265138897404	WITHOUT_CLASSIFICATION	7.348611025952236E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999608689404	WITHOUT_CLASSIFICATION	3.9131059510442525E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999999933854989	WITHOUT_CLASSIFICATION	6.61450109974598E-8	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995921493732	WITHOUT_CLASSIFICATION	4.0785062686189873E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999491288915	WITHOUT_CLASSIFICATION	5.087110854762849E-8	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999980959634269	WITHOUT_CLASSIFICATION	1.9040365729997778E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999996931362	WITHOUT_CLASSIFICATION	3.068637596487856E-10	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999476523529	WITHOUT_CLASSIFICATION	5.234764715047918E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.999999979826819	WITHOUT_CLASSIFICATION	2.0173181089870275E-8	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999052993288	WITHOUT_CLASSIFICATION	9.470067124970181E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999999074435963	WITHOUT_CLASSIFICATION	9.255640370119442E-8	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988997282738	WITHOUT_CLASSIFICATION	1.1002717261180713E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999990476613889	WITHOUT_CLASSIFICATION	9.52338611185431E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999172363175	WITHOUT_CLASSIFICATION	8.276368246736127E-8	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999994553095757	WITHOUT_CLASSIFICATION	5.446904242672812E-7	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.999998117384239	WITHOUT_CLASSIFICATION	1.882615761009765E-6	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999903414439	WITHOUT_CLASSIFICATION	9.658556116805674E-9	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999986069353	WITHOUT_CLASSIFICATION	1.393064576588806E-9	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998823539616	WITHOUT_CLASSIFICATION	1.1764603840366092E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999999672851766	WITHOUT_CLASSIFICATION	3.2714823390369983E-7	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999921312238	WITHOUT_CLASSIFICATION	7.86877620672855E-9	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999451334178571	WITHOUT_CLASSIFICATION	5.4866582142865996E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999999199407705	WITHOUT_CLASSIFICATION	8.005922949029356E-8	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999989517250586	WITHOUT_CLASSIFICATION	1.0482749414073223E-6	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.999992177674442	WITHOUT_CLASSIFICATION	7.822325558012615E-6	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.999942612287317	WITHOUT_CLASSIFICATION	5.738771268296629E-5	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9996855176850868	WITHOUT_CLASSIFICATION	3.144823149131776E-4	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9997421128548478	WITHOUT_CLASSIFICATION	2.578871451521245E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.99996590445192	WITHOUT_CLASSIFICATION	3.409554807989681E-5	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999993206696302	WITHOUT_CLASSIFICATION	6.793303697797041E-7	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999997107131863	WITHOUT_CLASSIFICATION	2.8928681365148067E-7	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9998932918076258	WITHOUT_CLASSIFICATION	1.0670819237426761E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999651937197772	WITHOUT_CLASSIFICATION	3.480628022286062E-5	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9998240427902976	WITHOUT_CLASSIFICATION	1.759572097023711E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9999453288290807	WITHOUT_CLASSIFICATION	5.467117091937593E-5	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.999504205934622	WITHOUT_CLASSIFICATION	4.95794065378E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999994156312888	WITHOUT_CLASSIFICATION	5.843687111605908E-7	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999998880782656	WITHOUT_CLASSIFICATION	1.1192173449929649E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.999999848949609	WITHOUT_CLASSIFICATION	1.5105039088650223E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999560082689	WITHOUT_CLASSIFICATION	4.3991731188101564E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.999999778242684	WITHOUT_CLASSIFICATION	2.2175731595250885E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999999000948515	WITHOUT_CLASSIFICATION	9.990514851006846E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998823539616	WITHOUT_CLASSIFICATION	1.1764603840366092E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.999999672851766	WITHOUT_CLASSIFICATION	3.2714823390369983E-7	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999921312238	WITHOUT_CLASSIFICATION	7.86877620672855E-9	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999451334178571	WITHOUT_CLASSIFICATION	5.4866582142865996E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999999199407705	WITHOUT_CLASSIFICATION	8.005922949029356E-8	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999999215084506	WITHOUT_CLASSIFICATION	7.849154933831628E-8	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9999081648082028	WITHOUT_CLASSIFICATION	9.183519179720819E-5	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999971673613915	WITHOUT_CLASSIFICATION	2.832638608560549E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999998388317419	WITHOUT_CLASSIFICATION	1.6116825799396737E-7	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999998388317419	WITHOUT_CLASSIFICATION	1.6116825799396737E-7	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999998388317419	WITHOUT_CLASSIFICATION	1.6116825799396737E-7	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999998388317419	WITHOUT_CLASSIFICATION	1.6116825799396737E-7	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999998388317419	WITHOUT_CLASSIFICATION	1.6116825799396737E-7	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.999997408963573	WITHOUT_CLASSIFICATION	2.591036426977093E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999644112345	WITHOUT_CLASSIFICATION	3.55887655809863E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999644112345	WITHOUT_CLASSIFICATION	3.55887655809863E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999644112345	WITHOUT_CLASSIFICATION	3.55887655809863E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999644112345	WITHOUT_CLASSIFICATION	3.55887655809863E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999644112345	WITHOUT_CLASSIFICATION	3.55887655809863E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999644112345	WITHOUT_CLASSIFICATION	3.55887655809863E-8	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999998804839295	WITHOUT_CLASSIFICATION	1.1951607051186657E-7	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.999988230225266	WITHOUT_CLASSIFICATION	1.1769774734098782E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999923818452	WITHOUT_CLASSIFICATION	7.618154669231898E-9	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999923818452	WITHOUT_CLASSIFICATION	7.618154669231898E-9	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999923818452	WITHOUT_CLASSIFICATION	7.618154669231898E-9	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999923818452	WITHOUT_CLASSIFICATION	7.618154669231898E-9	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999923818452	WITHOUT_CLASSIFICATION	7.618154669231898E-9	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999923818452	WITHOUT_CLASSIFICATION	7.618154669231898E-9	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999923818452	WITHOUT_CLASSIFICATION	7.618154669231898E-9	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999923818452	WITHOUT_CLASSIFICATION	7.618154669231898E-9	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999997659203486	WITHOUT_CLASSIFICATION	2.3407965153124053E-7	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999957301564765	WITHOUT_CLASSIFICATION	4.269843523552843E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996463820758	WITHOUT_CLASSIFICATION	3.5361792413908344E-7	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999993644382625	WITHOUT_CLASSIFICATION	6.355617374506219E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999732376750372	WITHOUT_CLASSIFICATION	2.6762324962780845E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999732376750372	WITHOUT_CLASSIFICATION	2.6762324962780845E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999732376750372	WITHOUT_CLASSIFICATION	2.6762324962780845E-5	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.999999007048116	WITHOUT_CLASSIFICATION	9.929518840812298E-7	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.99997937635813	WITHOUT_CLASSIFICATION	2.0623641870065473E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999957302063571	WITHOUT_CLASSIFICATION	4.269793642923851E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999772595766336	WITHOUT_CLASSIFICATION	2.274042336628907E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999772595766336	WITHOUT_CLASSIFICATION	2.274042336628907E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999993329344835	WITHOUT_CLASSIFICATION	6.670655165764821E-7	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999772595766336	WITHOUT_CLASSIFICATION	2.274042336628907E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999995502596497	WITHOUT_CLASSIFICATION	4.497403503026806E-7	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.999999577350862	WITHOUT_CLASSIFICATION	4.2264913795201276E-7	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999999462547003	WITHOUT_CLASSIFICATION	5.3745299551084905E-8	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999939217047719	WITHOUT_CLASSIFICATION	6.078295228048801E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999939217047719	WITHOUT_CLASSIFICATION	6.078295228048801E-6	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9999996192519683	WITHOUT_CLASSIFICATION	3.807480316545787E-7	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999987355111823	WITHOUT_CLASSIFICATION	1.2644888177008722E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999999282381141	WITHOUT_CLASSIFICATION	7.176188589653591E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999999282381141	WITHOUT_CLASSIFICATION	7.176188589653591E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.999999282381141	WITHOUT_CLASSIFICATION	7.176188589653591E-7	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9999992887171862	WITHOUT_CLASSIFICATION	7.112828136629879E-7	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.997830903814574	WITHOUT_CLASSIFICATION	0.0021690961854261602	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.999845852318135	WITHOUT_CLASSIFICATION	1.5414768186499997E-4	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999986994003495	WITHOUT_CLASSIFICATION	1.3005996504868539E-6	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9999976539290527	WITHOUT_CLASSIFICATION	2.3460709472870193E-6	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999983103965996	WITHOUT_CLASSIFICATION	1.6896034003611591E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.999943850769442	WITHOUT_CLASSIFICATION	5.614923055801482E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997580783404	WITHOUT_CLASSIFICATION	2.4192165959627797E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.999943850769442	WITHOUT_CLASSIFICATION	5.614923055801482E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999265138897404	WITHOUT_CLASSIFICATION	7.348611025952236E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999746936356844	WITHOUT_CLASSIFICATION	2.5306364315679124E-5	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999999945945021	WITHOUT_CLASSIFICATION	5.405497939339489E-9	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999982903962824	WITHOUT_CLASSIFICATION	1.709603717582012E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999207926710799	WITHOUT_CLASSIFICATION	7.920732892017913E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999997194923057	WITHOUT_CLASSIFICATION	2.8050769430337E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999265138897404	WITHOUT_CLASSIFICATION	7.348611025952236E-5	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999984111106731	WITHOUT_CLASSIFICATION	1.5888893267847142E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999999601640045	WITHOUT_CLASSIFICATION	3.983599549462841E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996376550334	WITHOUT_CLASSIFICATION	3.6234496658226116E-7	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999994284191437	WITHOUT_CLASSIFICATION	5.715808562755871E-7	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999971447535092	WITHOUT_CLASSIFICATION	2.8552464907277195E-6	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999971447535092	WITHOUT_CLASSIFICATION	2.8552464907277195E-6	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999942830393577	WITHOUT_CLASSIFICATION	5.716960642362615E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999999993836417	WITHOUT_CLASSIFICATION	6.163583399462777E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999985948094	WITHOUT_CLASSIFICATION	1.4051906254906473E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999999965761539	WITHOUT_CLASSIFICATION	3.4238461462404293E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999987305122	WITHOUT_CLASSIFICATION	1.2694877507225824E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999981373772	WITHOUT_CLASSIFICATION	1.862622804675714E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.99999999483915	WITHOUT_CLASSIFICATION	5.160849882134793E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999991815334558	WITHOUT_CLASSIFICATION	8.184665442563075E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999990432641935	WITHOUT_CLASSIFICATION	9.567358064643388E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999610522237	WITHOUT_CLASSIFICATION	3.8947776379066905E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.999999863562539	WITHOUT_CLASSIFICATION	1.3643746109073573E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999952918763	WITHOUT_CLASSIFICATION	4.708123621436992E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999926295722	WITHOUT_CLASSIFICATION	7.370427882106232E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999972853973	WITHOUT_CLASSIFICATION	2.7146027656375506E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999650555476	WITHOUT_CLASSIFICATION	3.494445242476171E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999556343	WITHOUT_CLASSIFICATION	4.436580541606448E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999533968	WITHOUT_CLASSIFICATION	4.660309262158928E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999994413371	WITHOUT_CLASSIFICATION	5.586628221193302E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999973293966	WITHOUT_CLASSIFICATION	2.6706032849157987E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999992560002	WITHOUT_CLASSIFICATION	7.439998515327921E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999996279213	WITHOUT_CLASSIFICATION	3.720787328846212E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999993592918	WITHOUT_CLASSIFICATION	6.407081838970799E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999556343	WITHOUT_CLASSIFICATION	4.436580541606448E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999969355015	WITHOUT_CLASSIFICATION	3.0644986049455395E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999556097	WITHOUT_CLASSIFICATION	4.439028352374104E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999993589382	WITHOUT_CLASSIFICATION	6.410616841605878E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999987455933	WITHOUT_CLASSIFICATION	1.2544066119051459E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999998382085	WITHOUT_CLASSIFICATION	1.6179145199307053E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999931039041	WITHOUT_CLASSIFICATION	6.896095913537269E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.999999997152446	WITHOUT_CLASSIFICATION	2.847553953744052E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999990088326	WITHOUT_CLASSIFICATION	9.911673078063549E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999998094711	WITHOUT_CLASSIFICATION	1.905290497531831E-10	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999999637482732	WITHOUT_CLASSIFICATION	3.625172678390865E-8	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999999637482732	WITHOUT_CLASSIFICATION	3.625172678390865E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999996279213	WITHOUT_CLASSIFICATION	3.720787328846212E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999999933532583	WITHOUT_CLASSIFICATION	6.64674174288536E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999355068	WITHOUT_CLASSIFICATION	6.44931394700044E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999999818434758	WITHOUT_CLASSIFICATION	1.8156524107055557E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999999955562918	WITHOUT_CLASSIFICATION	4.443708133358126E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999996157622	WITHOUT_CLASSIFICATION	3.8423770619855206E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999951546731	WITHOUT_CLASSIFICATION	4.84532696859659E-9	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999993574092503	WITHOUT_CLASSIFICATION	6.425907497059551E-7	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999994662535272	WITHOUT_CLASSIFICATION	5.337464728122322E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.999999998547784	WITHOUT_CLASSIFICATION	1.4522160207848036E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999738630403	WITHOUT_CLASSIFICATION	2.6136959764393036E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999930313916	WITHOUT_CLASSIFICATION	6.9686083079144255E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999904905382	WITHOUT_CLASSIFICATION	9.509461765202038E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999991332761	WITHOUT_CLASSIFICATION	8.667239246315167E-10	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999999996841237	WITHOUT_CLASSIFICATION	3.158763581391629E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999996931362	WITHOUT_CLASSIFICATION	3.068637596487856E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999792794	WITHOUT_CLASSIFICATION	2.0720633060981833E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999999933072564	WITHOUT_CLASSIFICATION	6.692743680926269E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997683604376	WITHOUT_CLASSIFICATION	2.3163956235904782E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999897265028	WITHOUT_CLASSIFICATION	1.027349714935697E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999792794	WITHOUT_CLASSIFICATION	2.0720633060981833E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999999841880924	WITHOUT_CLASSIFICATION	1.58119076055429E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999990128837	WITHOUT_CLASSIFICATION	9.871162624046849E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999988173666	WITHOUT_CLASSIFICATION	1.1826334126941268E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999999903244603	WITHOUT_CLASSIFICATION	9.675539639089807E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.999999967349315	WITHOUT_CLASSIFICATION	3.265068509946484E-8	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999537380260787	WITHOUT_CLASSIFICATION	4.6261973921379046E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999537380260787	WITHOUT_CLASSIFICATION	4.6261973921379046E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999537380260787	WITHOUT_CLASSIFICATION	4.6261973921379046E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999537380260787	WITHOUT_CLASSIFICATION	4.6261973921379046E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999537380260787	WITHOUT_CLASSIFICATION	4.6261973921379046E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999537380260787	WITHOUT_CLASSIFICATION	4.6261973921379046E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999983068008849	WITHOUT_CLASSIFICATION	1.6931991151528312E-6	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999958689487017	WITHOUT_CLASSIFICATION	4.131051298335856E-6	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999914067313757	WITHOUT_CLASSIFICATION	8.593268624367891E-6	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9999997723674433	WITHOUT_CLASSIFICATION	2.2763255663000435E-7	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999997655939531	WITHOUT_CLASSIFICATION	2.3440604702996098E-7	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9999992336891722	WITHOUT_CLASSIFICATION	7.663108279301355E-7	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999290848328	WITHOUT_CLASSIFICATION	7.091516718755714E-8	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.999994484289632	WITHOUT_CLASSIFICATION	5.515710368006488E-6	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9994407591834883	WITHOUT_CLASSIFICATION	5.592408165116932E-4	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.999999328280291	WITHOUT_CLASSIFICATION	6.717197090538432E-7	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999997000103494	WITHOUT_CLASSIFICATION	2.999896506543145E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999649238582715	WITHOUT_CLASSIFICATION	3.507614172842272E-5	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999997230575097	WITHOUT_CLASSIFICATION	2.7694249034249144E-7	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999991746011037	WITHOUT_CLASSIFICATION	8.253988963936345E-7	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999998781906932	WITHOUT_CLASSIFICATION	1.2180930677210335E-7	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999979557546491	WITHOUT_CLASSIFICATION	2.0442453508884273E-6	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999930344120225	WITHOUT_CLASSIFICATION	6.965587977406609E-6	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999990968612	WITHOUT_CLASSIFICATION	9.031389094631952E-10	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999990968612	WITHOUT_CLASSIFICATION	9.031389094631952E-10	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999990968612	WITHOUT_CLASSIFICATION	9.031389094631952E-10	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999998840840977	WITHOUT_CLASSIFICATION	1.1591590232396946E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999810677234	WITHOUT_CLASSIFICATION	1.8932276622099933E-8	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.999994410010792	WITHOUT_CLASSIFICATION	5.58998920802499E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999608689404	WITHOUT_CLASSIFICATION	3.9131059510442525E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999608689404	WITHOUT_CLASSIFICATION	3.9131059510442525E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999608689404	WITHOUT_CLASSIFICATION	3.9131059510442525E-8	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9293019600018442	WITHOUT_CLASSIFICATION	0.07069803999815587	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.999999933854989	WITHOUT_CLASSIFICATION	6.61450109974598E-8	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999998341563697	WITHOUT_CLASSIFICATION	1.6584363026397093E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995921493732	WITHOUT_CLASSIFICATION	4.0785062686189873E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995921493732	WITHOUT_CLASSIFICATION	4.0785062686189873E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999992415985625	WITHOUT_CLASSIFICATION	7.584014375238612E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999491288915	WITHOUT_CLASSIFICATION	5.087110854762849E-8	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999491288915	WITHOUT_CLASSIFICATION	5.087110854762849E-8	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999491288915	WITHOUT_CLASSIFICATION	5.087110854762849E-8	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9999097502300498	WITHOUT_CLASSIFICATION	9.024976995014362E-5	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998737272845	WITHOUT_CLASSIFICATION	1.2627271546134704E-7	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999998698748452	WITHOUT_CLASSIFICATION	1.301251546850522E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.999943850769442	WITHOUT_CLASSIFICATION	5.614923055801482E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.999943850769442	WITHOUT_CLASSIFICATION	5.614923055801482E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.999929943919169	WITHOUT_CLASSIFICATION	7.005608083100988E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999980959634269	WITHOUT_CLASSIFICATION	1.9040365729997778E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999980959634269	WITHOUT_CLASSIFICATION	1.9040365729997778E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999997866142886	WITHOUT_CLASSIFICATION	2.1338571146295572E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999052993288	WITHOUT_CLASSIFICATION	9.470067124970181E-8	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999052993288	WITHOUT_CLASSIFICATION	9.470067124970181E-8	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9992601497227488	WITHOUT_CLASSIFICATION	7.398502772511731E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999999074435963	WITHOUT_CLASSIFICATION	9.255640370119442E-8	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9999994859944182	WITHOUT_CLASSIFICATION	5.140055817553618E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999988997282738	WITHOUT_CLASSIFICATION	1.1002717261180713E-6	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999997604983248	WITHOUT_CLASSIFICATION	2.395016751973102E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.999943850769442	WITHOUT_CLASSIFICATION	5.614923055801482E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999746936356844	WITHOUT_CLASSIFICATION	2.5306364315679124E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999999932367232	WITHOUT_CLASSIFICATION	6.763276845606578E-9	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999999932367232	WITHOUT_CLASSIFICATION	6.763276845606578E-9	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999999932367232	WITHOUT_CLASSIFICATION	6.763276845606578E-9	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.999999984252149	WITHOUT_CLASSIFICATION	1.574785108164529E-8	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999999884517052	WITHOUT_CLASSIFICATION	1.154829484354722E-8	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999937213764887	WITHOUT_CLASSIFICATION	6.278623511332989E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999979807244059	WITHOUT_CLASSIFICATION	2.0192755941116534E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999979807244059	WITHOUT_CLASSIFICATION	2.0192755941116534E-6	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999996489668586	WITHOUT_CLASSIFICATION	3.5103314146440106E-7	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999963298162179	WITHOUT_CLASSIFICATION	3.670183782073152E-6	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999999983724719	WITHOUT_CLASSIFICATION	1.6275280538554105E-9	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999933415859706	WITHOUT_CLASSIFICATION	6.658414029393196E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999998336583535	WITHOUT_CLASSIFICATION	1.6634164642539075E-7	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999998336583535	WITHOUT_CLASSIFICATION	1.6634164642539075E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9992217894601295	WITHOUT_CLASSIFICATION	7.782105398703802E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9992217894601295	WITHOUT_CLASSIFICATION	7.782105398703802E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999998260521963	WITHOUT_CLASSIFICATION	1.7394780377737144E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999996866702218	WITHOUT_CLASSIFICATION	3.133297781750241E-7	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999998116952509	WITHOUT_CLASSIFICATION	1.883047490283148E-7	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999994115448301	WITHOUT_CLASSIFICATION	5.884551698944245E-7	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999998034247342	WITHOUT_CLASSIFICATION	1.96575265726406E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999999563409152	WITHOUT_CLASSIFICATION	4.365908471483454E-8	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999999563409152	WITHOUT_CLASSIFICATION	4.365908471483454E-8	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9999880527307772	WITHOUT_CLASSIFICATION	1.1947269222771629E-5	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999999974274075	WITHOUT_CLASSIFICATION	2.572592494399032E-9	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999983831523687	WITHOUT_CLASSIFICATION	1.61684763126866E-6	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9999999792318197	WITHOUT_CLASSIFICATION	2.0768180296429158E-8	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999991561280641	WITHOUT_CLASSIFICATION	8.438719359231265E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999997741879196	WITHOUT_CLASSIFICATION	2.2581208034625374E-7	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9999992657915922	WITHOUT_CLASSIFICATION	7.342084077820061E-7	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.999999998186151	WITHOUT_CLASSIFICATION	1.8138490084982412E-9	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9842357236167661	WITHOUT_CLASSIFICATION	0.015764276383234004	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999998764265167	WITHOUT_CLASSIFICATION	1.235734834265996E-7	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999662597619281	WITHOUT_CLASSIFICATION	3.374023807197285E-5	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999999922965686	WITHOUT_CLASSIFICATION	7.70343141468363E-9	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9996460938408559	WITHOUT_CLASSIFICATION	3.539061591442035E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999992533063691	WITHOUT_CLASSIFICATION	7.466936309036628E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999992533063691	WITHOUT_CLASSIFICATION	7.466936309036628E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999992533063691	WITHOUT_CLASSIFICATION	7.466936309036628E-6	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9999999697826862	WITHOUT_CLASSIFICATION	3.021731365556437E-8	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999993687632021	WITHOUT_CLASSIFICATION	6.312367980345031E-7	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999998850800785	WITHOUT_CLASSIFICATION	1.1491992149596579E-7	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.999995015194085	WITHOUT_CLASSIFICATION	4.984805915141166E-6	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999993225527867	WITHOUT_CLASSIFICATION	6.774472132451901E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999997553610854	WITHOUT_CLASSIFICATION	2.446389145269847E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999997553610854	WITHOUT_CLASSIFICATION	2.446389145269847E-7	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999943548825572	WITHOUT_CLASSIFICATION	5.645117442844021E-6	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.6826404875784837	WITHOUT_CLASSIFICATION	0.31735951242151633	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999910483757284	WITHOUT_CLASSIFICATION	8.951624271608428E-6	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999996622108571	WITHOUT_CLASSIFICATION	3.3778914287902514E-7	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999979524344477	WITHOUT_CLASSIFICATION	2.0475655523902053E-6	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9999755177705287	WITHOUT_CLASSIFICATION	2.448222947123911E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9999996286331587	WITHOUT_CLASSIFICATION	3.713668412023631E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999998169632427	WITHOUT_CLASSIFICATION	1.8303675726843704E-7	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999946741021535	WITHOUT_CLASSIFICATION	5.325897846572905E-6	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999999921864215	WITHOUT_CLASSIFICATION	7.813578377854138E-9	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.999993856459719	WITHOUT_CLASSIFICATION	6.143540280901694E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999966808156633	WITHOUT_CLASSIFICATION	3.3191843367866707E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999778749985619	WITHOUT_CLASSIFICATION	2.2125001438047543E-5	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.956421845122427	WITHOUT_CLASSIFICATION	0.04357815487757309	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999986048076958	WITHOUT_CLASSIFICATION	1.3951923042491258E-6	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999970194635192	WITHOUT_CLASSIFICATION	2.9805364809631445E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999975588390452	WITHOUT_CLASSIFICATION	2.4411609548414582E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.999999635895707	WITHOUT_CLASSIFICATION	3.6410429306135387E-7	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999856986943557	WITHOUT_CLASSIFICATION	1.4301305644335901E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999856986943557	WITHOUT_CLASSIFICATION	1.4301305644335901E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999856986943557	WITHOUT_CLASSIFICATION	1.4301305644335901E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999856986943557	WITHOUT_CLASSIFICATION	1.4301305644335901E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997097811093	WITHOUT_CLASSIFICATION	2.90218890636131E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999992785925024	WITHOUT_CLASSIFICATION	7.21407497737442E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999992785925024	WITHOUT_CLASSIFICATION	7.21407497737442E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999816580988918	WITHOUT_CLASSIFICATION	1.8341901108118156E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999999795841166	WITHOUT_CLASSIFICATION	2.0415883430727005E-8	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999807585929625	WITHOUT_CLASSIFICATION	1.924140703746069E-5	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999998974399849	WITHOUT_CLASSIFICATION	1.0256001517260983E-7	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.99998873715083	WITHOUT_CLASSIFICATION	1.1262849169902132E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999996466704916	WITHOUT_CLASSIFICATION	3.533295085272403E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9998010316893011	WITHOUT_CLASSIFICATION	1.9896831069889196E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956294320059	WITHOUT_CLASSIFICATION	4.3705679941258715E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956294320059	WITHOUT_CLASSIFICATION	4.3705679941258715E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956294320059	WITHOUT_CLASSIFICATION	4.3705679941258715E-6	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9999913424507885	WITHOUT_CLASSIFICATION	8.657549211518812E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999997164697568	WITHOUT_CLASSIFICATION	2.8353024321775383E-7	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9999613119402273	WITHOUT_CLASSIFICATION	3.868805977266565E-5	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999996782453309	WITHOUT_CLASSIFICATION	3.217546692372964E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999996782453309	WITHOUT_CLASSIFICATION	3.217546692372964E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999997133793875	WITHOUT_CLASSIFICATION	2.8662061243947156E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999999508168753	WITHOUT_CLASSIFICATION	4.918312471800206E-8	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999999080920812	WITHOUT_CLASSIFICATION	9.190791885918825E-8	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999906302749407	WITHOUT_CLASSIFICATION	9.369725059345488E-6	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9999100200401682	WITHOUT_CLASSIFICATION	8.997995983177409E-5	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999795508719	WITHOUT_CLASSIFICATION	2.0449128060433297E-8	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999163652180802	WITHOUT_CLASSIFICATION	8.363478191966669E-5	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999999949064118	WITHOUT_CLASSIFICATION	5.093588147095157E-9	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9999999796339273	WITHOUT_CLASSIFICATION	2.036607262065724E-8	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.999999996231421	WITHOUT_CLASSIFICATION	3.7685790411290185E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999036253827	WITHOUT_CLASSIFICATION	9.637461725695913E-8	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998872186462534	WITHOUT_CLASSIFICATION	1.1278135374664271E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998872186462534	WITHOUT_CLASSIFICATION	1.1278135374664271E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999999777718211	WITHOUT_CLASSIFICATION	2.2228178895043556E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999997613376767	WITHOUT_CLASSIFICATION	2.3866232336856754E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999997613376767	WITHOUT_CLASSIFICATION	2.3866232336856754E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999941241922579	WITHOUT_CLASSIFICATION	5.875807742188508E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999941241922579	WITHOUT_CLASSIFICATION	5.875807742188508E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999941241922579	WITHOUT_CLASSIFICATION	5.875807742188508E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999941241922579	WITHOUT_CLASSIFICATION	5.875807742188508E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999941241922579	WITHOUT_CLASSIFICATION	5.875807742188508E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999941241922579	WITHOUT_CLASSIFICATION	5.875807742188508E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999941241922579	WITHOUT_CLASSIFICATION	5.875807742188508E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999941241922579	WITHOUT_CLASSIFICATION	5.875807742188508E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999941241922579	WITHOUT_CLASSIFICATION	5.875807742188508E-6	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999564064935	WITHOUT_CLASSIFICATION	4.359350637058064E-8	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999564064935	WITHOUT_CLASSIFICATION	4.359350637058064E-8	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999302096779	WITHOUT_CLASSIFICATION	6.979032198509427E-8	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999875194636875	WITHOUT_CLASSIFICATION	1.248053631261003E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9999909489880705	WITHOUT_CLASSIFICATION	9.051011929574394E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999734545476834	WITHOUT_CLASSIFICATION	2.654545231666624E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999734545476834	WITHOUT_CLASSIFICATION	2.654545231666624E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999926263459375	WITHOUT_CLASSIFICATION	7.373654062495294E-5	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999999971116003	WITHOUT_CLASSIFICATION	2.8883996500180552E-9	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9998263225291046	WITHOUT_CLASSIFICATION	1.7367747089529588E-4	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.7636984142282948	WITHOUT_CLASSIFICATION	0.23630158577170518	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999963363525679	WITHOUT_CLASSIFICATION	3.6636474321206616E-6	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999963363525679	WITHOUT_CLASSIFICATION	3.6636474321206616E-6	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9436177326613855	WITHOUT_CLASSIFICATION	0.05638226733861459	DEFECT
// is this an error???	DEFECT	0.9999498533980358	WITHOUT_CLASSIFICATION	5.014660196413748E-5	DEFECT
// is this an error???	DEFECT	0.9999498533980358	WITHOUT_CLASSIFICATION	5.014660196413748E-5	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9991817655795211	WITHOUT_CLASSIFICATION	8.182344204789845E-4	DEFECT
