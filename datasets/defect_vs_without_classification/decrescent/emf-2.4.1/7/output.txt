// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.999998384379333	WITHOUT_CLASSIFICATION	1.6156206671302418E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999766774172124	WITHOUT_CLASSIFICATION	2.3322582787530767E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999987420969759	WITHOUT_CLASSIFICATION	1.2579030241354884E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9989862949045789	WITHOUT_CLASSIFICATION	0.0010137050954210458	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9998815739029411	WITHOUT_CLASSIFICATION	1.184260970588928E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999706443791	WITHOUT_CLASSIFICATION	2.9355620972003883E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999924328401206	WITHOUT_CLASSIFICATION	7.567159879354989E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999999025359398	WITHOUT_CLASSIFICATION	9.746406016122523E-8	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999828426008175	WITHOUT_CLASSIFICATION	1.7157399182556715E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999964218525254	WITHOUT_CLASSIFICATION	3.5781474746961757E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.99999243619694	WITHOUT_CLASSIFICATION	7.5638030599783185E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999988343559568	WITHOUT_CLASSIFICATION	1.1656440431385775E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.999612284557269	WITHOUT_CLASSIFICATION	3.877154427309578E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999991601221362	WITHOUT_CLASSIFICATION	8.398778638122585E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999993857944475	WITHOUT_CLASSIFICATION	6.142055524975307E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999998461962816	WITHOUT_CLASSIFICATION	1.5380371850854212E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999938978776729	WITHOUT_CLASSIFICATION	6.102122327126311E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999924328401206	WITHOUT_CLASSIFICATION	7.567159879354989E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999812050620185	WITHOUT_CLASSIFICATION	1.879493798158982E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999962261698665	WITHOUT_CLASSIFICATION	3.7738301335991053E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999978385127088	WITHOUT_CLASSIFICATION	2.161487291103489E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999906750272335	WITHOUT_CLASSIFICATION	9.324972766567035E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999906750272335	WITHOUT_CLASSIFICATION	9.324972766567035E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999988474522644	WITHOUT_CLASSIFICATION	1.152547735605749E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998210683582	WITHOUT_CLASSIFICATION	1.7893164186063913E-7	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9999968633212065	WITHOUT_CLASSIFICATION	3.1366787934949125E-6	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9999397990613277	WITHOUT_CLASSIFICATION	6.020093867235151E-5	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999966620935479	WITHOUT_CLASSIFICATION	3.3379064519976147E-6	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999923753887098	WITHOUT_CLASSIFICATION	7.624611290181277E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999175945199079	WITHOUT_CLASSIFICATION	8.240548009214339E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999054526585672	WITHOUT_CLASSIFICATION	9.45473414327454E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999993960132489	WITHOUT_CLASSIFICATION	6.039867510612324E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9989677663856228	WITHOUT_CLASSIFICATION	0.0010322336143771555	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999787872036333	WITHOUT_CLASSIFICATION	2.1212796366655962E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999877156696007	WITHOUT_CLASSIFICATION	1.228433039947477E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999945137767271	WITHOUT_CLASSIFICATION	5.48622327292462E-6	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999918267951918	WITHOUT_CLASSIFICATION	8.173204808150245E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999975230078946	WITHOUT_CLASSIFICATION	2.476992105325306E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999917520167303	WITHOUT_CLASSIFICATION	8.247983269635505E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999990077985602	WITHOUT_CLASSIFICATION	9.922014397028123E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.999999978281257	WITHOUT_CLASSIFICATION	2.171874298871672E-8	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.998488322890461	WITHOUT_CLASSIFICATION	0.0015116771095389852	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999446439708	WITHOUT_CLASSIFICATION	5.535602927203142E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999752209	WITHOUT_CLASSIFICATION	2.477902445170085E-11	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999749162084373	WITHOUT_CLASSIFICATION	2.5083791562771107E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999786697630595	WITHOUT_CLASSIFICATION	2.133023694050427E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999947578060935	WITHOUT_CLASSIFICATION	5.242193906500398E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998426622067	WITHOUT_CLASSIFICATION	1.5733779342724963E-7	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9998806087178252	WITHOUT_CLASSIFICATION	1.1939128217479627E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9998835596575786	WITHOUT_CLASSIFICATION	1.164403424213898E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999739095696	WITHOUT_CLASSIFICATION	2.6090430259231408E-8	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999947578060935	WITHOUT_CLASSIFICATION	5.242193906500398E-6	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9999972251399749	WITHOUT_CLASSIFICATION	2.774860025168106E-6	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9999737118641508	WITHOUT_CLASSIFICATION	2.62881358491503E-5	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999894032575636	WITHOUT_CLASSIFICATION	1.0596742436316938E-5	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9999892233449191	WITHOUT_CLASSIFICATION	1.0776655080970785E-5	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9999894026756844	WITHOUT_CLASSIFICATION	1.0597324315659564E-5	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9999940588933744	WITHOUT_CLASSIFICATION	5.941106625493961E-6	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998988093995	WITHOUT_CLASSIFICATION	1.0119060053122493E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999989102256516	WITHOUT_CLASSIFICATION	1.0897743484242335E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999975596331833	WITHOUT_CLASSIFICATION	2.4403668167903646E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998003726078	WITHOUT_CLASSIFICATION	1.9962739207355286E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998616658037	WITHOUT_CLASSIFICATION	1.3833419623214547E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999989620647842	WITHOUT_CLASSIFICATION	1.0379352158282991E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999922204944054	WITHOUT_CLASSIFICATION	7.77950559455138E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997983010415	WITHOUT_CLASSIFICATION	2.0169895843121647E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999984525663328	WITHOUT_CLASSIFICATION	1.5474336672938354E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999213077831	WITHOUT_CLASSIFICATION	7.869221691195799E-8	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9999653370294311	WITHOUT_CLASSIFICATION	3.4662970568916924E-5	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999998561878727	WITHOUT_CLASSIFICATION	1.4381212722337786E-7	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999936492683297	WITHOUT_CLASSIFICATION	6.350731670383986E-6	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9872351238574835	WITHOUT_CLASSIFICATION	0.012764876142516642	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999968948687289	WITHOUT_CLASSIFICATION	3.1051312711231435E-6	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9912132389741373	WITHOUT_CLASSIFICATION	0.00878676102586275	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9994232997949598	WITHOUT_CLASSIFICATION	5.767002050401979E-4	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999938614502184	WITHOUT_CLASSIFICATION	6.138549781580414E-6	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999999332818408	WITHOUT_CLASSIFICATION	6.671815912824396E-8	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9999514719441358	WITHOUT_CLASSIFICATION	4.852805586411422E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9993626771016868	WITHOUT_CLASSIFICATION	6.373228983131759E-4	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999988343559568	WITHOUT_CLASSIFICATION	1.1656440431385775E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.999612284557269	WITHOUT_CLASSIFICATION	3.877154427309578E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999991601221362	WITHOUT_CLASSIFICATION	8.398778638122585E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999916079237323	WITHOUT_CLASSIFICATION	8.392076267639997E-6	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9999970587210746	WITHOUT_CLASSIFICATION	2.941278925509532E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999993857944475	WITHOUT_CLASSIFICATION	6.142055524975307E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999998461962816	WITHOUT_CLASSIFICATION	1.5380371850854212E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999938978776729	WITHOUT_CLASSIFICATION	6.102122327126311E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999918764945983	WITHOUT_CLASSIFICATION	8.123505401715863E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999918764945983	WITHOUT_CLASSIFICATION	8.123505401715863E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999918764945983	WITHOUT_CLASSIFICATION	8.123505401715863E-6	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999706443791	WITHOUT_CLASSIFICATION	2.9355620972003883E-8	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999960308367604	WITHOUT_CLASSIFICATION	3.969163239560762E-6	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9999999635697048	WITHOUT_CLASSIFICATION	3.6430295171778004E-8	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999985309131463	WITHOUT_CLASSIFICATION	1.4690868536940394E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999978385127088	WITHOUT_CLASSIFICATION	2.161487291103489E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999985365432298	WITHOUT_CLASSIFICATION	1.463456770196494E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999175945199079	WITHOUT_CLASSIFICATION	8.240548009214339E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999054526585672	WITHOUT_CLASSIFICATION	9.45473414327454E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9989677663856228	WITHOUT_CLASSIFICATION	0.0010322336143771555	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999945137767271	WITHOUT_CLASSIFICATION	5.48622327292462E-6	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9999268710276915	WITHOUT_CLASSIFICATION	7.312897230852254E-5	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9999776791620917	WITHOUT_CLASSIFICATION	2.232083790840541E-5	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999994087173822	WITHOUT_CLASSIFICATION	5.91282617777946E-7	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999990186599588	WITHOUT_CLASSIFICATION	9.813400412151562E-7	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999901017574493	WITHOUT_CLASSIFICATION	9.89824255059243E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999990077985602	WITHOUT_CLASSIFICATION	9.922014397028123E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.998488322890461	WITHOUT_CLASSIFICATION	0.0015116771095389852	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999994965921614	WITHOUT_CLASSIFICATION	5.034078386665288E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9998242203230244	WITHOUT_CLASSIFICATION	1.7577967697548222E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999998769183067	WITHOUT_CLASSIFICATION	1.2308169326219888E-7	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999995637079159	WITHOUT_CLASSIFICATION	4.3629208405735915E-7	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999957085831334	WITHOUT_CLASSIFICATION	4.2914168665807166E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9999875275192742	WITHOUT_CLASSIFICATION	1.247248072576557E-5	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.999998980674791	WITHOUT_CLASSIFICATION	1.0193252089671705E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999973713893193	WITHOUT_CLASSIFICATION	2.6286106807655953E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.999972744421782	WITHOUT_CLASSIFICATION	2.7255578218013816E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999368378430308	WITHOUT_CLASSIFICATION	6.316215696918563E-5	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999403500534	WITHOUT_CLASSIFICATION	5.964994664417295E-8	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.999972744421782	WITHOUT_CLASSIFICATION	2.7255578218013816E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999069846187609	WITHOUT_CLASSIFICATION	9.30153812390211E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.999999787505934	WITHOUT_CLASSIFICATION	2.1249406607294904E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999743238127	WITHOUT_CLASSIFICATION	2.5676187208643817E-8	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999993789675774	WITHOUT_CLASSIFICATION	6.210324225233306E-7	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.999972744421782	WITHOUT_CLASSIFICATION	2.7255578218013816E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999368378430308	WITHOUT_CLASSIFICATION	6.316215696918563E-5	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999997960516065	WITHOUT_CLASSIFICATION	2.0394839355062382E-7	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999887459098	WITHOUT_CLASSIFICATION	1.1254090231692145E-8	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999990340683316	WITHOUT_CLASSIFICATION	9.659316684552576E-7	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999998272619907	WITHOUT_CLASSIFICATION	1.7273800942095444E-7	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999723246933	WITHOUT_CLASSIFICATION	2.767530666788905E-8	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9999843336545571	WITHOUT_CLASSIFICATION	1.5666345442839703E-5	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9999994275198067	WITHOUT_CLASSIFICATION	5.724801933324131E-7	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9999668986830972	WITHOUT_CLASSIFICATION	3.310131690275076E-5	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9998405832712024	WITHOUT_CLASSIFICATION	1.5941672879769527E-4	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9994746601562672	WITHOUT_CLASSIFICATION	5.253398437328428E-4	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9944597800758354	WITHOUT_CLASSIFICATION	0.005540219924164741	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999998639087594	WITHOUT_CLASSIFICATION	1.3609124065140338E-7	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999453713875	WITHOUT_CLASSIFICATION	5.46286126283406E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998426622067	WITHOUT_CLASSIFICATION	1.5733779342724963E-7	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999848763297	WITHOUT_CLASSIFICATION	1.5123670314960673E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999984293231293	WITHOUT_CLASSIFICATION	1.5706768706365857E-6	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.999881267449287	WITHOUT_CLASSIFICATION	1.1873255071307272E-4	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9999822157214205	WITHOUT_CLASSIFICATION	1.7784278579465046E-5	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9999983557167358	WITHOUT_CLASSIFICATION	1.6442832642858456E-6	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999848846318256	WITHOUT_CLASSIFICATION	1.5115368174346914E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999620707198847	WITHOUT_CLASSIFICATION	3.792928011531115E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999848763297	WITHOUT_CLASSIFICATION	1.5123670314960673E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999984293231293	WITHOUT_CLASSIFICATION	1.5706768706365857E-6	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999652981498629	WITHOUT_CLASSIFICATION	3.4701850137033E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999652981498629	WITHOUT_CLASSIFICATION	3.4701850137033E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999712248701934	WITHOUT_CLASSIFICATION	2.87751298065954E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9349594065919417	WITHOUT_CLASSIFICATION	0.06504059340805833	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.999829105333034	WITHOUT_CLASSIFICATION	1.7089466696591264E-4	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999712248701934	WITHOUT_CLASSIFICATION	2.87751298065954E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9349594065919417	WITHOUT_CLASSIFICATION	0.06504059340805833	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.999998080030932	WITHOUT_CLASSIFICATION	1.9199690680079124E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999565703566307	WITHOUT_CLASSIFICATION	4.342964336929194E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999956565696	WITHOUT_CLASSIFICATION	4.3434304002812425E-9	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999999782913889	WITHOUT_CLASSIFICATION	2.1708611163955063E-8	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999956565696	WITHOUT_CLASSIFICATION	4.3434304002812425E-9	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999998725801256	WITHOUT_CLASSIFICATION	1.274198743412872E-7	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999997057685	WITHOUT_CLASSIFICATION	2.9423145396392133E-10	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999997057685	WITHOUT_CLASSIFICATION	2.9423145396392133E-10	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9999983665646045	WITHOUT_CLASSIFICATION	1.6334353954549046E-6	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999994073701056	WITHOUT_CLASSIFICATION	5.926298944035277E-7	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9999636386481219	WITHOUT_CLASSIFICATION	3.636135187817204E-5	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.999999957337777	WITHOUT_CLASSIFICATION	4.2662222974551706E-8	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999995133847407	WITHOUT_CLASSIFICATION	4.866152593679959E-7	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999994710176237	WITHOUT_CLASSIFICATION	5.289823762860747E-7	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999952662853261	WITHOUT_CLASSIFICATION	4.733714673954149E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998399723788	WITHOUT_CLASSIFICATION	1.6002762105696936E-7	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999971397056316	WITHOUT_CLASSIFICATION	2.860294368395327E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878724393029	WITHOUT_CLASSIFICATION	1.2127560697241402E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999999998498621	WITHOUT_CLASSIFICATION	1.501379393572861E-10	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998399723788	WITHOUT_CLASSIFICATION	1.6002762105696936E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878724393029	WITHOUT_CLASSIFICATION	1.2127560697241402E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998399723788	WITHOUT_CLASSIFICATION	1.6002762105696936E-7	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9999996310313685	WITHOUT_CLASSIFICATION	3.689686315054787E-7	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999999330181517	WITHOUT_CLASSIFICATION	6.698184827792874E-8	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998399723788	WITHOUT_CLASSIFICATION	1.6002762105696936E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998399723788	WITHOUT_CLASSIFICATION	1.6002762105696936E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998399723788	WITHOUT_CLASSIFICATION	1.6002762105696936E-7	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999936694894389	WITHOUT_CLASSIFICATION	6.330510561098705E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999996815812007	WITHOUT_CLASSIFICATION	3.184187992633564E-7	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999990875393419	WITHOUT_CLASSIFICATION	9.124606580957835E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999318095120527	WITHOUT_CLASSIFICATION	6.819048794717722E-5	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9999093742444157	WITHOUT_CLASSIFICATION	9.06257555842395E-5	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999966198282679	WITHOUT_CLASSIFICATION	3.3801717320068434E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999999130120488	WITHOUT_CLASSIFICATION	8.698795118149853E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999994945290369	WITHOUT_CLASSIFICATION	5.054709631095567E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999994945290369	WITHOUT_CLASSIFICATION	5.054709631095567E-7	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999998117802981	WITHOUT_CLASSIFICATION	1.8821970195781845E-7	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.999999773468152	WITHOUT_CLASSIFICATION	2.2653184805874903E-7	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999806919526215	WITHOUT_CLASSIFICATION	1.9308047378559093E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999802336520186	WITHOUT_CLASSIFICATION	1.97663479813639E-5	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999916476055019	WITHOUT_CLASSIFICATION	8.352394498112375E-6	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.999999714703225	WITHOUT_CLASSIFICATION	2.852967749636734E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999318095120527	WITHOUT_CLASSIFICATION	6.819048794717722E-5	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9998213270048627	WITHOUT_CLASSIFICATION	1.7867299513724276E-4	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999997575571248	WITHOUT_CLASSIFICATION	2.4244287528038595E-7	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999913985373818	WITHOUT_CLASSIFICATION	8.601462618222702E-6	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999999311000888	WITHOUT_CLASSIFICATION	6.889991122094495E-8	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9999917593364922	WITHOUT_CLASSIFICATION	8.240663507777325E-6	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9999999649258661	WITHOUT_CLASSIFICATION	3.507413388366904E-8	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999556399036312	WITHOUT_CLASSIFICATION	4.4360096368722066E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9998992138760999	WITHOUT_CLASSIFICATION	1.0078612390008726E-4	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999995581979779	WITHOUT_CLASSIFICATION	4.4180202206320166E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878724393029	WITHOUT_CLASSIFICATION	1.2127560697241402E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999986506714154	WITHOUT_CLASSIFICATION	1.3493285846367213E-6	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.999999999583605	WITHOUT_CLASSIFICATION	4.1639503163298705E-10	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999987426497093	WITHOUT_CLASSIFICATION	1.2573502906786446E-6	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999987426497093	WITHOUT_CLASSIFICATION	1.2573502906786446E-6	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999978148257037	WITHOUT_CLASSIFICATION	2.1851742963690046E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878724393029	WITHOUT_CLASSIFICATION	1.2127560697241402E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999999002264444	WITHOUT_CLASSIFICATION	9.977355555949624E-8	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999784912471334	WITHOUT_CLASSIFICATION	2.1508752866550912E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9841938667125152	WITHOUT_CLASSIFICATION	0.01580613328748473	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999999444836942	WITHOUT_CLASSIFICATION	5.5516305848087245E-8	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999597069745558	WITHOUT_CLASSIFICATION	4.029302544408457E-5	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9995352975806462	WITHOUT_CLASSIFICATION	4.647024193538358E-4	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999993261881625	WITHOUT_CLASSIFICATION	6.738118375641061E-7	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999999439289567	WITHOUT_CLASSIFICATION	5.607104331963818E-8	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9997489575830244	WITHOUT_CLASSIFICATION	2.510424169756126E-4	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999999979454576	WITHOUT_CLASSIFICATION	2.0545425077183857E-9	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999979221208881	WITHOUT_CLASSIFICATION	2.0778791118580636E-6	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999992776011508	WITHOUT_CLASSIFICATION	7.223988492725441E-7	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9999993907872182	WITHOUT_CLASSIFICATION	6.092127817237441E-7	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9846853489959885	WITHOUT_CLASSIFICATION	0.015314651004011604	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999415098871608	WITHOUT_CLASSIFICATION	5.849011283916957E-5	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999998103860129	WITHOUT_CLASSIFICATION	1.8961398709712043E-7	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999998636584816	WITHOUT_CLASSIFICATION	1.3634151844549718E-7	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9999986010880386	WITHOUT_CLASSIFICATION	1.3989119613917933E-6	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999999876516942	WITHOUT_CLASSIFICATION	1.2348305797268826E-8	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999992070131298	WITHOUT_CLASSIFICATION	7.929868702209701E-7	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9997231858184914	WITHOUT_CLASSIFICATION	2.7681418150869307E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878724393029	WITHOUT_CLASSIFICATION	1.2127560697241402E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999998698814104	WITHOUT_CLASSIFICATION	1.3011858962564402E-7	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999943302896207	WITHOUT_CLASSIFICATION	5.6697103793244405E-6	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9999886562722811	WITHOUT_CLASSIFICATION	1.1343727718903796E-5	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999984114685782	WITHOUT_CLASSIFICATION	1.5885314218476666E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9999932849083849	WITHOUT_CLASSIFICATION	6.715091615054732E-6	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999993302338567	WITHOUT_CLASSIFICATION	6.697661433487436E-7	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9998944152509397	WITHOUT_CLASSIFICATION	1.0558474906029037E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878724393029	WITHOUT_CLASSIFICATION	1.2127560697241402E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999994650541034	WITHOUT_CLASSIFICATION	5.349458965701901E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999998680667107	WITHOUT_CLASSIFICATION	1.319332892434906E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999998680667107	WITHOUT_CLASSIFICATION	1.319332892434906E-7	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999971385763042	WITHOUT_CLASSIFICATION	2.8614236957077082E-6	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999971385763042	WITHOUT_CLASSIFICATION	2.8614236957077082E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998537426623	WITHOUT_CLASSIFICATION	1.462573376743374E-7	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999527986241735	WITHOUT_CLASSIFICATION	4.7201375826594256E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999970563736579	WITHOUT_CLASSIFICATION	2.9436263420259367E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999970563736579	WITHOUT_CLASSIFICATION	2.9436263420259367E-6	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999997653830174	WITHOUT_CLASSIFICATION	2.34616982654505E-7	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999976508280175	WITHOUT_CLASSIFICATION	2.3491719825931625E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999996815812007	WITHOUT_CLASSIFICATION	3.184187992633564E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.999999436188598	WITHOUT_CLASSIFICATION	5.638114021115183E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.999999436188598	WITHOUT_CLASSIFICATION	5.638114021115183E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.999999436188598	WITHOUT_CLASSIFICATION	5.638114021115183E-7	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999976508280175	WITHOUT_CLASSIFICATION	2.3491719825931625E-6	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999999547485167	WITHOUT_CLASSIFICATION	4.525148337925273E-8	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.999983248955302	WITHOUT_CLASSIFICATION	1.6751044698045886E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.999121442012818	WITHOUT_CLASSIFICATION	8.785579871819101E-4	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9999937333525744	WITHOUT_CLASSIFICATION	6.26664742555715E-6	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.999998487750277	WITHOUT_CLASSIFICATION	1.5122497229933368E-6	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999998219163768	WITHOUT_CLASSIFICATION	1.7808362310093968E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999987420969759	WITHOUT_CLASSIFICATION	1.2579030241354884E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9989862949045789	WITHOUT_CLASSIFICATION	0.0010137050954210458	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9998815739029411	WITHOUT_CLASSIFICATION	1.184260970588928E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999706443791	WITHOUT_CLASSIFICATION	2.9355620972003883E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999999025359398	WITHOUT_CLASSIFICATION	9.746406016122523E-8	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999828426008175	WITHOUT_CLASSIFICATION	1.7157399182556715E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999964218525254	WITHOUT_CLASSIFICATION	3.5781474746961757E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999988343559568	WITHOUT_CLASSIFICATION	1.1656440431385775E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.999612284557269	WITHOUT_CLASSIFICATION	3.877154427309578E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999991601221362	WITHOUT_CLASSIFICATION	8.398778638122585E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999946162317007	WITHOUT_CLASSIFICATION	5.38376829935108E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999993857944475	WITHOUT_CLASSIFICATION	6.142055524975307E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999998461962816	WITHOUT_CLASSIFICATION	1.5380371850854212E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999938978776729	WITHOUT_CLASSIFICATION	6.102122327126311E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999812050620185	WITHOUT_CLASSIFICATION	1.879493798158982E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999962261698665	WITHOUT_CLASSIFICATION	3.7738301335991053E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999996853599663	WITHOUT_CLASSIFICATION	3.146400337305418E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999998076034956	WITHOUT_CLASSIFICATION	1.9239650443378487E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999978385127088	WITHOUT_CLASSIFICATION	2.161487291103489E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999988474522644	WITHOUT_CLASSIFICATION	1.152547735605749E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998210683582	WITHOUT_CLASSIFICATION	1.7893164186063913E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999985365432298	WITHOUT_CLASSIFICATION	1.463456770196494E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999175945199079	WITHOUT_CLASSIFICATION	8.240548009214339E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999054526585672	WITHOUT_CLASSIFICATION	9.45473414327454E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999993960132489	WITHOUT_CLASSIFICATION	6.039867510612324E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9989677663856228	WITHOUT_CLASSIFICATION	0.0010322336143771555	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999881715259	WITHOUT_CLASSIFICATION	1.1828474029185571E-8	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999817401636	WITHOUT_CLASSIFICATION	1.8259836519418652E-8	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999975230078946	WITHOUT_CLASSIFICATION	2.476992105325306E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999787872036333	WITHOUT_CLASSIFICATION	2.1212796366655962E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999945137767271	WITHOUT_CLASSIFICATION	5.48622327292462E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999877156696007	WITHOUT_CLASSIFICATION	1.228433039947477E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999988689518658	WITHOUT_CLASSIFICATION	1.1310481341571555E-6	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999975797112928	WITHOUT_CLASSIFICATION	2.4202887072283628E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999945137767271	WITHOUT_CLASSIFICATION	5.48622327292462E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999990077985602	WITHOUT_CLASSIFICATION	9.922014397028123E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999917520167303	WITHOUT_CLASSIFICATION	8.247983269635505E-6	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999971061815494	WITHOUT_CLASSIFICATION	2.893818450551381E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.998488322890461	WITHOUT_CLASSIFICATION	0.0015116771095389852	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999984415182092	WITHOUT_CLASSIFICATION	1.5584817908849713E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999988689518658	WITHOUT_CLASSIFICATION	1.1310481341571555E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.998488322890461	WITHOUT_CLASSIFICATION	0.0015116771095389852	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999955404774717	WITHOUT_CLASSIFICATION	4.459522528335943E-6	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999999964508761	WITHOUT_CLASSIFICATION	3.5491237756654935E-9	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999952506417099	WITHOUT_CLASSIFICATION	4.749358290191087E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.999997932913885	WITHOUT_CLASSIFICATION	2.0670861150411254E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999999767011294	WITHOUT_CLASSIFICATION	2.3298870644585492E-8	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9999299579877536	WITHOUT_CLASSIFICATION	7.004201224633793E-5	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999999909616288	WITHOUT_CLASSIFICATION	9.038371213008802E-9	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999991586656886	WITHOUT_CLASSIFICATION	8.413343113907079E-7	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.999995622322241	WITHOUT_CLASSIFICATION	4.377677759014709E-6	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999761555143415	WITHOUT_CLASSIFICATION	2.3844485658510902E-5	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999996833287554	WITHOUT_CLASSIFICATION	3.16671244497403E-7	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9999997080841065	WITHOUT_CLASSIFICATION	2.919158935391184E-7	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9999995526390612	WITHOUT_CLASSIFICATION	4.4736093885621486E-7	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.999997556577232	WITHOUT_CLASSIFICATION	2.44342276809714E-6	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9999972982517062	WITHOUT_CLASSIFICATION	2.701748293659903E-6	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999986831655898	WITHOUT_CLASSIFICATION	1.3168344102062594E-6	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9999900697556174	WITHOUT_CLASSIFICATION	9.930244382620131E-6	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999907132873314	WITHOUT_CLASSIFICATION	9.286712668541709E-6	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999999214404708	WITHOUT_CLASSIFICATION	7.85595292000375E-8	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999975055137178	WITHOUT_CLASSIFICATION	2.494486282275188E-6	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999955018599447	WITHOUT_CLASSIFICATION	4.498140055304438E-6	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999999126560495	WITHOUT_CLASSIFICATION	8.73439505405816E-8	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999999956551635	WITHOUT_CLASSIFICATION	4.344836411485521E-9	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999984351956391	WITHOUT_CLASSIFICATION	1.5648043608015341E-6	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9999883072833958	WITHOUT_CLASSIFICATION	1.1692716604249762E-5	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9462678378461352	WITHOUT_CLASSIFICATION	0.05373216215386464	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.999999515936344	WITHOUT_CLASSIFICATION	4.840636561155137E-7	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999997587190816	WITHOUT_CLASSIFICATION	2.4128091829912926E-7	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999999803818311	WITHOUT_CLASSIFICATION	1.9618168848463E-8	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999986823927083	WITHOUT_CLASSIFICATION	1.3176072918188305E-6	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999446439708	WITHOUT_CLASSIFICATION	5.535602927203142E-8	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.999997844761795	WITHOUT_CLASSIFICATION	2.1552382049829714E-6	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999997508098264	WITHOUT_CLASSIFICATION	2.4919017363667344E-7	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999999789519931	WITHOUT_CLASSIFICATION	2.1048006885636947E-8	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999856638006669	WITHOUT_CLASSIFICATION	1.433619933315396E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999693969980249	WITHOUT_CLASSIFICATION	3.0603001975127024E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9996942233155404	WITHOUT_CLASSIFICATION	3.0577668445957496E-4	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999980183168742	WITHOUT_CLASSIFICATION	1.9816831258651803E-6	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999999195871284	WITHOUT_CLASSIFICATION	8.041287149880546E-8	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999993952350168	WITHOUT_CLASSIFICATION	6.047649830731029E-7	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999990093734605	WITHOUT_CLASSIFICATION	9.906265394923679E-7	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999987832136172	WITHOUT_CLASSIFICATION	1.21678638287055E-6	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999998013802681	WITHOUT_CLASSIFICATION	1.9861973180444095E-7	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999967208989298	WITHOUT_CLASSIFICATION	3.279101070281071E-6	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999665190670863	WITHOUT_CLASSIFICATION	3.348093291375298E-5	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999964682484558	WITHOUT_CLASSIFICATION	3.531751544136841E-6	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999718781480585	WITHOUT_CLASSIFICATION	2.8121851941439518E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999656049220752	WITHOUT_CLASSIFICATION	3.439507792492196E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999999977298443	WITHOUT_CLASSIFICATION	2.2701557627525854E-9	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999999727548144	WITHOUT_CLASSIFICATION	2.724518558190072E-8	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999999179207492	WITHOUT_CLASSIFICATION	8.207925079950317E-8	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9995147233319298	WITHOUT_CLASSIFICATION	4.852766680700842E-4	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9995498263789144	WITHOUT_CLASSIFICATION	4.5017362108548827E-4	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999992699213321	WITHOUT_CLASSIFICATION	7.300786678621275E-7	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999994969113457	WITHOUT_CLASSIFICATION	5.030886542656578E-7	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999994073701056	WITHOUT_CLASSIFICATION	5.926298944035277E-7	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9999878583069564	WITHOUT_CLASSIFICATION	1.2141693043543572E-5	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999989965310745	WITHOUT_CLASSIFICATION	1.0034689254714387E-6	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999999696486509	WITHOUT_CLASSIFICATION	3.035134918207427E-8	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.999999937149311	WITHOUT_CLASSIFICATION	6.285068887869311E-8	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999999849898961	WITHOUT_CLASSIFICATION	1.5010103913047032E-8	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9998978129659338	WITHOUT_CLASSIFICATION	1.0218703406613719E-4	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9998572091636759	WITHOUT_CLASSIFICATION	1.427908363240538E-4	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9999974210271404	WITHOUT_CLASSIFICATION	2.5789728595902567E-6	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999999980713548	WITHOUT_CLASSIFICATION	1.9286452235811446E-9	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999998521526292	WITHOUT_CLASSIFICATION	1.47847370780784E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999999961603068	WITHOUT_CLASSIFICATION	3.839693157702504E-9	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999966198282679	WITHOUT_CLASSIFICATION	3.3801717320068434E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999999130120488	WITHOUT_CLASSIFICATION	8.698795118149853E-8	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.999999714703225	WITHOUT_CLASSIFICATION	2.852967749636734E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9998978129659338	WITHOUT_CLASSIFICATION	1.0218703406613719E-4	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999998521526292	WITHOUT_CLASSIFICATION	1.47847370780784E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999999961603068	WITHOUT_CLASSIFICATION	3.839693157702504E-9	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999999683170593	WITHOUT_CLASSIFICATION	3.1682940777609386E-8	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999986502034509	WITHOUT_CLASSIFICATION	1.3497965490205755E-6	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999616517226536	WITHOUT_CLASSIFICATION	3.834827734641862E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9999957153519194	WITHOUT_CLASSIFICATION	4.284648080486645E-6	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999997774672578	WITHOUT_CLASSIFICATION	2.225327423808188E-7	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999999991623729	WITHOUT_CLASSIFICATION	8.376270308327886E-10	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999999969716117	WITHOUT_CLASSIFICATION	3.0283883547540986E-9	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999785651477037	WITHOUT_CLASSIFICATION	2.1434852296308414E-5	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999999855042694	WITHOUT_CLASSIFICATION	1.449573072699632E-8	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9998694779900806	WITHOUT_CLASSIFICATION	1.305220099194133E-4	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999886052342626	WITHOUT_CLASSIFICATION	1.1394765737383457E-5	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9999668348029246	WITHOUT_CLASSIFICATION	3.316519707541734E-5	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999993397337402	WITHOUT_CLASSIFICATION	6.602662597218734E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9999996990666519	WITHOUT_CLASSIFICATION	3.009333481144766E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999990987586883	WITHOUT_CLASSIFICATION	9.01241311744605E-7	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999999666144356	WITHOUT_CLASSIFICATION	3.3385564368357746E-8	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9996925411813901	WITHOUT_CLASSIFICATION	3.0745881860997195E-4	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999990579165122	WITHOUT_CLASSIFICATION	9.420834877292833E-7	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999999529172693	WITHOUT_CLASSIFICATION	4.708273062864901E-8	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999989988969631	WITHOUT_CLASSIFICATION	1.0011030368907069E-6	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999999964467331	WITHOUT_CLASSIFICATION	3.5532670576622364E-9	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.999999999819193	WITHOUT_CLASSIFICATION	1.808069650477746E-10	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.999999937149311	WITHOUT_CLASSIFICATION	6.285068887869311E-8	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999999849898961	WITHOUT_CLASSIFICATION	1.5010103913047032E-8	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999999855687624	WITHOUT_CLASSIFICATION	1.4431237617790723E-8	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999999988912053	WITHOUT_CLASSIFICATION	1.1087947628681832E-9	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.999999951097523	WITHOUT_CLASSIFICATION	4.8902476928526433E-8	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999996355770966	WITHOUT_CLASSIFICATION	3.6442290342622065E-7	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999716722819956	WITHOUT_CLASSIFICATION	2.832771800441257E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999964986463518	WITHOUT_CLASSIFICATION	3.501353648167264E-6	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9997317399322069	WITHOUT_CLASSIFICATION	2.6826006779316164E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999503695166406	WITHOUT_CLASSIFICATION	4.96304833594147E-5	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.99999819706616	WITHOUT_CLASSIFICATION	1.8029338400080191E-6	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.99999819706616	WITHOUT_CLASSIFICATION	1.8029338400080191E-6	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.999997093914483	WITHOUT_CLASSIFICATION	2.90608551689955E-6	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9999970200580653	WITHOUT_CLASSIFICATION	2.9799419346700407E-6	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999978602636266	WITHOUT_CLASSIFICATION	2.1397363734987823E-6	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9999986961674742	WITHOUT_CLASSIFICATION	1.3038325258218918E-6	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999999962564972	WITHOUT_CLASSIFICATION	3.743502782388013E-9	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999432463892	WITHOUT_CLASSIFICATION	5.6753610828388364E-8	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.999999631305474	WITHOUT_CLASSIFICATION	3.6869452595906317E-7	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.999999631305474	WITHOUT_CLASSIFICATION	3.6869452595906317E-7	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999999855250804	WITHOUT_CLASSIFICATION	1.4474919534279018E-8	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999959209155411	WITHOUT_CLASSIFICATION	4.079084458887201E-6	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999997450503717	WITHOUT_CLASSIFICATION	2.549496282774289E-7	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999999645180119	WITHOUT_CLASSIFICATION	3.548198806182182E-8	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999999761297386	WITHOUT_CLASSIFICATION	2.387026141305593E-8	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999937242074525	WITHOUT_CLASSIFICATION	6.2757925475267294E-6	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999999555446151	WITHOUT_CLASSIFICATION	4.445538491840941E-8	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999990568596075	WITHOUT_CLASSIFICATION	9.431403925138543E-7	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999999762156015	WITHOUT_CLASSIFICATION	2.378439843623967E-8	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999999864716709	WITHOUT_CLASSIFICATION	1.3528328982066265E-8	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9996183400073217	WITHOUT_CLASSIFICATION	3.816599926783249E-4	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.99999999877853	WITHOUT_CLASSIFICATION	1.2214700033290175E-9	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9999808889383137	WITHOUT_CLASSIFICATION	1.911106168632259E-5	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999997406200765	WITHOUT_CLASSIFICATION	2.5937992354090595E-7	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999947548623447	WITHOUT_CLASSIFICATION	5.245137655372062E-6	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999993194152201	WITHOUT_CLASSIFICATION	6.805847798373402E-7	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999980502086582	WITHOUT_CLASSIFICATION	1.94979134183291E-6	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999991845126421	WITHOUT_CLASSIFICATION	8.154873579061242E-7	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999999235415101	WITHOUT_CLASSIFICATION	7.645848981548729E-8	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.999999572119725	WITHOUT_CLASSIFICATION	4.278802750536258E-7	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9999992453448067	WITHOUT_CLASSIFICATION	7.546551932561683E-7	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999999859564921	WITHOUT_CLASSIFICATION	1.4043507897845196E-8	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999999895219156	WITHOUT_CLASSIFICATION	1.0478084450916835E-8	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9999940498422606	WITHOUT_CLASSIFICATION	5.950157739341305E-6	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999998584714571	WITHOUT_CLASSIFICATION	1.4152854289929494E-7	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999993386074263	WITHOUT_CLASSIFICATION	6.613925737334899E-7	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999997474588258	WITHOUT_CLASSIFICATION	2.525411741528255E-7	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999990310125633	WITHOUT_CLASSIFICATION	9.68987436802593E-7	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999984860598529	WITHOUT_CLASSIFICATION	1.5139401472330762E-6	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999999909423662	WITHOUT_CLASSIFICATION	9.057633759871503E-9	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999978351903651	WITHOUT_CLASSIFICATION	2.164809634942012E-6	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999827751149754	WITHOUT_CLASSIFICATION	1.7224885024655293E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9999911709402662	WITHOUT_CLASSIFICATION	8.829059733771738E-6	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.999996540856574	WITHOUT_CLASSIFICATION	3.4591434259295207E-6	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9998205424218216	WITHOUT_CLASSIFICATION	1.7945757817853188E-4	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999926412403166	WITHOUT_CLASSIFICATION	7.35875968337236E-6	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9998485142913004	WITHOUT_CLASSIFICATION	1.514857086996658E-4	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9999940295178505	WITHOUT_CLASSIFICATION	5.970482149504265E-6	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999817727681195	WITHOUT_CLASSIFICATION	1.822723188044492E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999805850597231	WITHOUT_CLASSIFICATION	1.941494027687142E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999983378822274	WITHOUT_CLASSIFICATION	1.662117772674925E-6	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9999217117580305	WITHOUT_CLASSIFICATION	7.828824196962453E-5	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999998381493101	WITHOUT_CLASSIFICATION	1.618506897064482E-7	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.999992657301848	WITHOUT_CLASSIFICATION	7.342698151967324E-6	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.999995102994724	WITHOUT_CLASSIFICATION	4.8970052759714295E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999983378822274	WITHOUT_CLASSIFICATION	1.662117772674925E-6	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999998381493101	WITHOUT_CLASSIFICATION	1.618506897064482E-7	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9999935313579458	WITHOUT_CLASSIFICATION	6.468642054217584E-6	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999999761272724	WITHOUT_CLASSIFICATION	2.38727276171956E-8	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9999979539173585	WITHOUT_CLASSIFICATION	2.0460826416301538E-6	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999999910801493	WITHOUT_CLASSIFICATION	8.919850751203506E-9	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999805850597231	WITHOUT_CLASSIFICATION	1.941494027687142E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999805850597231	WITHOUT_CLASSIFICATION	1.941494027687142E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999983378822274	WITHOUT_CLASSIFICATION	1.662117772674925E-6	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999995374218532	WITHOUT_CLASSIFICATION	4.6257814673819573E-7	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999946287388868	WITHOUT_CLASSIFICATION	5.3712611131894444E-6	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999977605393471	WITHOUT_CLASSIFICATION	2.2394606530124783E-6	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999977605393471	WITHOUT_CLASSIFICATION	2.2394606530124783E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999889980447	WITHOUT_CLASSIFICATION	1.1001955454487059E-8	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999925993829548	WITHOUT_CLASSIFICATION	7.400617045198208E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.999893478553179	WITHOUT_CLASSIFICATION	1.0652144682097552E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.999893478553179	WITHOUT_CLASSIFICATION	1.0652144682097552E-4	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999986440957569	WITHOUT_CLASSIFICATION	1.355904243018427E-6	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999925993829548	WITHOUT_CLASSIFICATION	7.400617045198208E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.999893478553179	WITHOUT_CLASSIFICATION	1.0652144682097552E-4	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999986440957569	WITHOUT_CLASSIFICATION	1.355904243018427E-6	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999970624568961	WITHOUT_CLASSIFICATION	2.9375431038893766E-6	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.999999799755823	WITHOUT_CLASSIFICATION	2.002441770378573E-7	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999999918281604	WITHOUT_CLASSIFICATION	8.171839778891744E-9	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9999987625987417	WITHOUT_CLASSIFICATION	1.2374012584185606E-6	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999810560043851	WITHOUT_CLASSIFICATION	1.894399561491283E-5	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999999141875873	WITHOUT_CLASSIFICATION	8.581241275417446E-8	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999759783851615	WITHOUT_CLASSIFICATION	2.4021614838496033E-5	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999986582647524	WITHOUT_CLASSIFICATION	1.341735247584777E-6	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.999719856364258	WITHOUT_CLASSIFICATION	2.8014363574200944E-4	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9999448448549708	WITHOUT_CLASSIFICATION	5.5155145029111045E-5	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999994107242117	WITHOUT_CLASSIFICATION	5.892757881603093E-7	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999971421729305	WITHOUT_CLASSIFICATION	2.8578270694730055E-6	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999999898252177	WITHOUT_CLASSIFICATION	1.017478220350393E-8	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999999792459017	WITHOUT_CLASSIFICATION	2.0754098243249628E-8	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999999999936798	WITHOUT_CLASSIFICATION	6.320233524574643E-12	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999975028006195	WITHOUT_CLASSIFICATION	2.497199380572782E-6	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999998295960846	WITHOUT_CLASSIFICATION	1.7040391546001785E-7	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999997814862014	WITHOUT_CLASSIFICATION	2.1851379870058087E-7	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9999997826429906	WITHOUT_CLASSIFICATION	2.1735700924390127E-7	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999974369574309	WITHOUT_CLASSIFICATION	2.5630425691702168E-6	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999999403293	WITHOUT_CLASSIFICATION	5.967067519997392E-11	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999990913037423	WITHOUT_CLASSIFICATION	9.086962576177841E-7	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999681915794	WITHOUT_CLASSIFICATION	3.180842064593556E-8	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999998775711784	WITHOUT_CLASSIFICATION	1.224288216685468E-7	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999996023687323	WITHOUT_CLASSIFICATION	3.976312677369921E-7	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999999923543357	WITHOUT_CLASSIFICATION	7.645664356112177E-9	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999999768451888	WITHOUT_CLASSIFICATION	2.3154811167511728E-8	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999996997357942	WITHOUT_CLASSIFICATION	3.002642058418664E-7	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999999957973977	WITHOUT_CLASSIFICATION	4.202602266136621E-9	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9997828803053584	WITHOUT_CLASSIFICATION	2.1711969464160248E-4	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9999993617499521	WITHOUT_CLASSIFICATION	6.382500479022672E-7	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999999821929426	WITHOUT_CLASSIFICATION	1.7807057404233454E-8	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999967463954346	WITHOUT_CLASSIFICATION	3.253604565392633E-6	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999999475362947	WITHOUT_CLASSIFICATION	5.2463705216257075E-8	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999999266741905	WITHOUT_CLASSIFICATION	7.332580957097645E-8	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999993683777163	WITHOUT_CLASSIFICATION	6.316222837920032E-7	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999999998400579	WITHOUT_CLASSIFICATION	1.5994208826988022E-10	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999983606069542	WITHOUT_CLASSIFICATION	1.6393930456882702E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999998335039435	WITHOUT_CLASSIFICATION	1.664960565076996E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999998335039435	WITHOUT_CLASSIFICATION	1.664960565076996E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999998335039435	WITHOUT_CLASSIFICATION	1.664960565076996E-6	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999988560740222	WITHOUT_CLASSIFICATION	1.1439259778191955E-6	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9999997749105943	WITHOUT_CLASSIFICATION	2.250894055665317E-7	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9999944282797449	WITHOUT_CLASSIFICATION	5.571720255052555E-6	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9999999919606711	WITHOUT_CLASSIFICATION	8.039328785406644E-9	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999771839915726	WITHOUT_CLASSIFICATION	2.2816008427296827E-5	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999978515487276	WITHOUT_CLASSIFICATION	2.1484512723625226E-6	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999980703093	WITHOUT_CLASSIFICATION	1.929690707466193E-9	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999974111168092	WITHOUT_CLASSIFICATION	2.5888831907512802E-6	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999997984546215	WITHOUT_CLASSIFICATION	2.0154537847269125E-7	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999992039901158	WITHOUT_CLASSIFICATION	7.960098841919836E-7	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.999995914999683	WITHOUT_CLASSIFICATION	4.085000317106977E-6	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999644764809241	WITHOUT_CLASSIFICATION	3.552351907597932E-5	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999988233748599	WITHOUT_CLASSIFICATION	1.1766251401063871E-6	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9998881272050321	WITHOUT_CLASSIFICATION	1.1187279496795963E-4	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9999703210004076	WITHOUT_CLASSIFICATION	2.9678999592371894E-5	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999999888048129	WITHOUT_CLASSIFICATION	1.1195187177171313E-8	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999998821164541	WITHOUT_CLASSIFICATION	1.178835458279171E-7	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999981907619091	WITHOUT_CLASSIFICATION	1.8092380909435228E-6	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999906142583613	WITHOUT_CLASSIFICATION	9.385741638667402E-6	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9999954136392637	WITHOUT_CLASSIFICATION	4.586360736292644E-6	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.999976465691802	WITHOUT_CLASSIFICATION	2.353430819807863E-5	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999997074621398	WITHOUT_CLASSIFICATION	2.925378601434459E-7	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9999681616606688	WITHOUT_CLASSIFICATION	3.183833933114934E-5	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9999997673783805	WITHOUT_CLASSIFICATION	2.3262161949934064E-7	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999978817014127	WITHOUT_CLASSIFICATION	2.1182985872743715E-6	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999992426459101	WITHOUT_CLASSIFICATION	7.573540898222779E-7	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999999992013962	WITHOUT_CLASSIFICATION	7.986037865585121E-10	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999995426846815	WITHOUT_CLASSIFICATION	4.573153184509974E-7	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999999481907061	WITHOUT_CLASSIFICATION	5.180929381847374E-8	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999810819633924	WITHOUT_CLASSIFICATION	1.8918036607483213E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999985760644696	WITHOUT_CLASSIFICATION	1.4239355304277315E-6	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999973017193217	WITHOUT_CLASSIFICATION	2.69828067832463E-6	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9982582810344655	WITHOUT_CLASSIFICATION	0.001741718965534581	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9999321074757678	WITHOUT_CLASSIFICATION	6.789252423223799E-5	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9999868751587975	WITHOUT_CLASSIFICATION	1.3124841202532778E-5	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999999790111094	WITHOUT_CLASSIFICATION	2.0988890631098707E-8	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999999788174765	WITHOUT_CLASSIFICATION	2.118252361649972E-8	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999920837221005	WITHOUT_CLASSIFICATION	7.916277899507398E-6	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.999998948029851	WITHOUT_CLASSIFICATION	1.051970148958636E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.999992591723502	WITHOUT_CLASSIFICATION	7.40827649801951E-6	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999975875181911	WITHOUT_CLASSIFICATION	2.412481808891616E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999968390498933	WITHOUT_CLASSIFICATION	3.1609501067317767E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999964986463518	WITHOUT_CLASSIFICATION	3.501353648167264E-6	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9995430383641436	WITHOUT_CLASSIFICATION	4.569616358564188E-4	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9998726061183203	WITHOUT_CLASSIFICATION	1.273938816798246E-4	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9996521412553551	WITHOUT_CLASSIFICATION	3.47858744644955E-4	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.999576909232145	WITHOUT_CLASSIFICATION	4.230907678549962E-4	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9999716018067017	WITHOUT_CLASSIFICATION	2.839819329834687E-5	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.996276668401402	WITHOUT_CLASSIFICATION	0.0037233315985980594	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999679110811873	WITHOUT_CLASSIFICATION	3.2088918812616175E-5	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999999998869133	WITHOUT_CLASSIFICATION	1.1308657547639737E-10	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9999513671224484	WITHOUT_CLASSIFICATION	4.863287755164432E-5	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.999997426676172	WITHOUT_CLASSIFICATION	2.573323827967941E-6	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.999999800681856	WITHOUT_CLASSIFICATION	1.993181440225967E-7	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999954425065104	WITHOUT_CLASSIFICATION	4.557493489617513E-6	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999990069405411	WITHOUT_CLASSIFICATION	9.930594588868178E-7	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999982611282758	WITHOUT_CLASSIFICATION	1.738871724165601E-6	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999882620902362	WITHOUT_CLASSIFICATION	1.1737909763722118E-5	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999997872504068	WITHOUT_CLASSIFICATION	2.127495932014928E-7	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999994442091238	WITHOUT_CLASSIFICATION	5.557908762515072E-7	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999999598814948	WITHOUT_CLASSIFICATION	4.0118505066155657E-8	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9999975622155588	WITHOUT_CLASSIFICATION	2.4377844411979274E-6	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.999955383392908	WITHOUT_CLASSIFICATION	4.4616607091924184E-5	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9999976057975082	WITHOUT_CLASSIFICATION	2.3942024917525554E-6	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9999362957139427	WITHOUT_CLASSIFICATION	6.370428605731935E-5	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.999977748536976	WITHOUT_CLASSIFICATION	2.2251463023936105E-5	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999961994762678	WITHOUT_CLASSIFICATION	3.8005237320648497E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999998237292209	WITHOUT_CLASSIFICATION	1.7627077896307037E-7	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999998237292209	WITHOUT_CLASSIFICATION	1.7627077896307037E-7	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999978268938087	WITHOUT_CLASSIFICATION	2.1731061912742236E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999978268938087	WITHOUT_CLASSIFICATION	2.1731061912742236E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.999977748536976	WITHOUT_CLASSIFICATION	2.2251463023936105E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999978268938087	WITHOUT_CLASSIFICATION	2.1731061912742236E-6	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999984152692745	WITHOUT_CLASSIFICATION	1.5847307256060159E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999984426900741	WITHOUT_CLASSIFICATION	1.5573099259978688E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999984426900741	WITHOUT_CLASSIFICATION	1.5573099259978688E-6	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999981359393321	WITHOUT_CLASSIFICATION	1.8640606680233801E-6	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999999312222635	WITHOUT_CLASSIFICATION	6.877773649561264E-8	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9999999804690745	WITHOUT_CLASSIFICATION	1.9530925522813614E-8	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.999854087440169	WITHOUT_CLASSIFICATION	1.4591255983099061E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9999877478429614	WITHOUT_CLASSIFICATION	1.2252157038483306E-5	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999970593569452	WITHOUT_CLASSIFICATION	2.9406430548605494E-6	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999920486815138	WITHOUT_CLASSIFICATION	7.951318486163392E-6	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9999844612326781	WITHOUT_CLASSIFICATION	1.5538767321861123E-5	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9999851421414938	WITHOUT_CLASSIFICATION	1.4857858506124558E-5	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999991448253275	WITHOUT_CLASSIFICATION	8.55174672528875E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999999852950473	WITHOUT_CLASSIFICATION	1.4704952770558915E-8	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999999990968643	WITHOUT_CLASSIFICATION	9.031356379421795E-10	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999979950381056	WITHOUT_CLASSIFICATION	2.004961894405656E-6	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.999999990875272	WITHOUT_CLASSIFICATION	9.12472795996778E-9	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999968356672436	WITHOUT_CLASSIFICATION	3.164332756466479E-6	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999999993674011	WITHOUT_CLASSIFICATION	6.325988733695686E-10	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.999999701813841	WITHOUT_CLASSIFICATION	2.981861588833105E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9907115333088967	WITHOUT_CLASSIFICATION	0.00928846669110332	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9989864800364796	WITHOUT_CLASSIFICATION	0.0010135199635203647	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999996427484538	WITHOUT_CLASSIFICATION	3.572515462277589E-7	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999999979192871	WITHOUT_CLASSIFICATION	2.080712931577314E-9	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9999987767136015	WITHOUT_CLASSIFICATION	1.2232863985514763E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999932706763	WITHOUT_CLASSIFICATION	6.729323656982569E-9	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999981966818114	WITHOUT_CLASSIFICATION	1.80331818858922E-6	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999981966818114	WITHOUT_CLASSIFICATION	1.80331818858922E-6	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999999300516959	WITHOUT_CLASSIFICATION	6.994830415254726E-8	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9999997584733141	WITHOUT_CLASSIFICATION	2.4152668583804123E-7	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9999932619905821	WITHOUT_CLASSIFICATION	6.738009417954487E-6	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999950457494946	WITHOUT_CLASSIFICATION	4.954250505390796E-6	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999997240562609	WITHOUT_CLASSIFICATION	2.759437391145439E-7	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999989523565394	WITHOUT_CLASSIFICATION	1.047643460631892E-6	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999998794403027	WITHOUT_CLASSIFICATION	1.2055969735279812E-7	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.999671524565051	WITHOUT_CLASSIFICATION	3.2847543494894736E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997410133049525	WITHOUT_CLASSIFICATION	2.589866950475459E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999607689799602	WITHOUT_CLASSIFICATION	3.923102003973468E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999993066636688	WITHOUT_CLASSIFICATION	6.933363311951605E-7	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999822412208739	WITHOUT_CLASSIFICATION	1.775877912612906E-5	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999998378654854	WITHOUT_CLASSIFICATION	1.6213451463966242E-7	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.999999020870909	WITHOUT_CLASSIFICATION	9.791290910148854E-7	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999999999005043	WITHOUT_CLASSIFICATION	9.949573385020034E-11	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999999312277141	WITHOUT_CLASSIFICATION	6.877228586786477E-8	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9999990591103068	WITHOUT_CLASSIFICATION	9.408896931941814E-7	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999999979313888	WITHOUT_CLASSIFICATION	2.068611274708387E-9	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999998663931492	WITHOUT_CLASSIFICATION	1.3360685081419975E-7	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999997651743888	WITHOUT_CLASSIFICATION	2.3482561116462766E-7	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999996637200753	WITHOUT_CLASSIFICATION	3.362799246484189E-7	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.999992237729842	WITHOUT_CLASSIFICATION	7.762270157999642E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9999677675154969	WITHOUT_CLASSIFICATION	3.2232484503192224E-5	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9999742772465982	WITHOUT_CLASSIFICATION	2.57227534018351E-5	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999996703520255	WITHOUT_CLASSIFICATION	3.296479744818153E-7	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999985001776399	WITHOUT_CLASSIFICATION	1.4998223600438835E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999999997418632	WITHOUT_CLASSIFICATION	2.581368320767365E-10	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999995337501233	WITHOUT_CLASSIFICATION	4.6624987664217105E-7	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999111600623	WITHOUT_CLASSIFICATION	8.883993776977251E-8	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999280542333	WITHOUT_CLASSIFICATION	7.194576663541207E-8	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.999999184364962	WITHOUT_CLASSIFICATION	8.156350378854289E-7	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999999070293326	WITHOUT_CLASSIFICATION	9.297066744273376E-8	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999735928569083	WITHOUT_CLASSIFICATION	2.6407143091611053E-5	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999991436747158	WITHOUT_CLASSIFICATION	8.563252842247952E-7	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9996569349926309	WITHOUT_CLASSIFICATION	3.430650073691598E-4	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999992298876336	WITHOUT_CLASSIFICATION	7.701123663903701E-7	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999999695811039	WITHOUT_CLASSIFICATION	3.041889601862921E-8	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999985524351814	WITHOUT_CLASSIFICATION	1.4475648185413527E-6	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9999889469742052	WITHOUT_CLASSIFICATION	1.1053025794923884E-5	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9998119353066864	WITHOUT_CLASSIFICATION	1.8806469331364615E-4	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999999746932702	WITHOUT_CLASSIFICATION	2.530672994743796E-8	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999999958772078	WITHOUT_CLASSIFICATION	4.12279217457155E-9	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999995223226599	WITHOUT_CLASSIFICATION	4.776773401469551E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999987420969759	WITHOUT_CLASSIFICATION	1.2579030241354884E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9989862949045789	WITHOUT_CLASSIFICATION	0.0010137050954210458	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997410133049525	WITHOUT_CLASSIFICATION	2.589866950475459E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999607689799602	WITHOUT_CLASSIFICATION	3.923102003973468E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999993066636688	WITHOUT_CLASSIFICATION	6.933363311951605E-7	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999997305454355	WITHOUT_CLASSIFICATION	2.694545645856329E-7	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9999999664521109	WITHOUT_CLASSIFICATION	3.3547889059500575E-8	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999998871003807	WITHOUT_CLASSIFICATION	1.1289961934531799E-7	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999991767338477	WITHOUT_CLASSIFICATION	8.232661522420213E-7	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999995388271761	WITHOUT_CLASSIFICATION	4.6117282392790894E-7	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.999998938508198	WITHOUT_CLASSIFICATION	1.0614918019524768E-6	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999994688578066	WITHOUT_CLASSIFICATION	5.311421934774584E-7	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.999991860731801	WITHOUT_CLASSIFICATION	8.13926819888659E-6	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999999109932945	WITHOUT_CLASSIFICATION	8.900670540652248E-8	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999998962049377	WITHOUT_CLASSIFICATION	1.0379506229217616E-7	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999980172614509	WITHOUT_CLASSIFICATION	1.9827385492099296E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999980172614509	WITHOUT_CLASSIFICATION	1.9827385492099296E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999997351134668	WITHOUT_CLASSIFICATION	2.6488653318502587E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999787976821926	WITHOUT_CLASSIFICATION	2.12023178074696E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.99999998687237	WITHOUT_CLASSIFICATION	1.3127629909914165E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.999999302989594	WITHOUT_CLASSIFICATION	6.970104059328298E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999994807149759	WITHOUT_CLASSIFICATION	5.192850241373427E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999931926831	WITHOUT_CLASSIFICATION	6.807316989481077E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999996540910712	WITHOUT_CLASSIFICATION	3.4590892887149344E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999989024251656	WITHOUT_CLASSIFICATION	1.0975748344001753E-6	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999952494115125	WITHOUT_CLASSIFICATION	4.750588487525715E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999848041464	WITHOUT_CLASSIFICATION	1.5195853557007277E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999874409917	WITHOUT_CLASSIFICATION	1.2559008235163543E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999960180609501	WITHOUT_CLASSIFICATION	3.981939049899411E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999998775495083	WITHOUT_CLASSIFICATION	1.2245049171612387E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.999910018442864	WITHOUT_CLASSIFICATION	8.998155713605569E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999957813794224	WITHOUT_CLASSIFICATION	4.218620577662818E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999689797733946	WITHOUT_CLASSIFICATION	3.102022660541112E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.99999243619694	WITHOUT_CLASSIFICATION	7.5638030599783185E-6	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9998815739029411	WITHOUT_CLASSIFICATION	1.184260970588928E-4	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999706443791	WITHOUT_CLASSIFICATION	2.9355620972003883E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999999025359398	WITHOUT_CLASSIFICATION	9.746406016122523E-8	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999828426008175	WITHOUT_CLASSIFICATION	1.7157399182556715E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999964218525254	WITHOUT_CLASSIFICATION	3.5781474746961757E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999988343559568	WITHOUT_CLASSIFICATION	1.1656440431385775E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.999612284557269	WITHOUT_CLASSIFICATION	3.877154427309578E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999991601221362	WITHOUT_CLASSIFICATION	8.398778638122585E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999946162317007	WITHOUT_CLASSIFICATION	5.38376829935108E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999993857944475	WITHOUT_CLASSIFICATION	6.142055524975307E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999998461962816	WITHOUT_CLASSIFICATION	1.5380371850854212E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999938978776729	WITHOUT_CLASSIFICATION	6.102122327126311E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999812050620185	WITHOUT_CLASSIFICATION	1.879493798158982E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999962261698665	WITHOUT_CLASSIFICATION	3.7738301335991053E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999978385127088	WITHOUT_CLASSIFICATION	2.161487291103489E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999988474522644	WITHOUT_CLASSIFICATION	1.152547735605749E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998210683582	WITHOUT_CLASSIFICATION	1.7893164186063913E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999985365432298	WITHOUT_CLASSIFICATION	1.463456770196494E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999175945199079	WITHOUT_CLASSIFICATION	8.240548009214339E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999054526585672	WITHOUT_CLASSIFICATION	9.45473414327454E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999993960132489	WITHOUT_CLASSIFICATION	6.039867510612324E-7	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999881715259	WITHOUT_CLASSIFICATION	1.1828474029185571E-8	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999787872036333	WITHOUT_CLASSIFICATION	2.1212796366655962E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999877156696007	WITHOUT_CLASSIFICATION	1.228433039947477E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999988689518658	WITHOUT_CLASSIFICATION	1.1310481341571555E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999975230078946	WITHOUT_CLASSIFICATION	2.476992105325306E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999917520167303	WITHOUT_CLASSIFICATION	8.247983269635505E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999990077985602	WITHOUT_CLASSIFICATION	9.922014397028123E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.998488322890461	WITHOUT_CLASSIFICATION	0.0015116771095389852	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999997351134668	WITHOUT_CLASSIFICATION	2.6488653318502587E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999787976821926	WITHOUT_CLASSIFICATION	2.12023178074696E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.99999998687237	WITHOUT_CLASSIFICATION	1.3127629909914165E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.999999302989594	WITHOUT_CLASSIFICATION	6.970104059328298E-7	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999996540910712	WITHOUT_CLASSIFICATION	3.4590892887149344E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999989024251656	WITHOUT_CLASSIFICATION	1.0975748344001753E-6	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.999959099567762	WITHOUT_CLASSIFICATION	4.0900432237953896E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999952506417099	WITHOUT_CLASSIFICATION	4.749358290191087E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.999997932913885	WITHOUT_CLASSIFICATION	2.0670861150411254E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999874409917	WITHOUT_CLASSIFICATION	1.2559008235163543E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999960180609501	WITHOUT_CLASSIFICATION	3.981939049899411E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999998775495083	WITHOUT_CLASSIFICATION	1.2245049171612387E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.999910018442864	WITHOUT_CLASSIFICATION	8.998155713605569E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999689797733946	WITHOUT_CLASSIFICATION	3.102022660541112E-5	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999859888819335	WITHOUT_CLASSIFICATION	1.401111806647779E-5	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999557381956716	WITHOUT_CLASSIFICATION	4.426180432836027E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999999858803911	WITHOUT_CLASSIFICATION	1.4119608920280637E-8	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9932469929747428	WITHOUT_CLASSIFICATION	0.006753007025257183	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999917425229669	WITHOUT_CLASSIFICATION	8.257477033181305E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999979130262158	WITHOUT_CLASSIFICATION	2.0869737841938374E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999998523741854	WITHOUT_CLASSIFICATION	1.4762581454847465E-7	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.999998384379333	WITHOUT_CLASSIFICATION	1.6156206671302418E-6	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999988131840302	WITHOUT_CLASSIFICATION	1.1868159698731042E-6	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999975551077382	WITHOUT_CLASSIFICATION	2.4448922616847015E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999988131840302	WITHOUT_CLASSIFICATION	1.1868159698731042E-6	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.968600988136887	WITHOUT_CLASSIFICATION	0.031399011863112954	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999986426847582	WITHOUT_CLASSIFICATION	1.3573152417449232E-6	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999351138501651	WITHOUT_CLASSIFICATION	6.48861498349863E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999351138501651	WITHOUT_CLASSIFICATION	6.48861498349863E-5	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.999998504086211	WITHOUT_CLASSIFICATION	1.4959137888949885E-6	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999993349410754	WITHOUT_CLASSIFICATION	6.650589245539773E-7	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999998055102408	WITHOUT_CLASSIFICATION	1.9448975916986586E-7	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999982714095531	WITHOUT_CLASSIFICATION	1.7285904468839286E-6	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9986140619964744	WITHOUT_CLASSIFICATION	0.0013859380035256027	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999999983307891	WITHOUT_CLASSIFICATION	1.6692108615951043E-9	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9999872387703533	WITHOUT_CLASSIFICATION	1.2761229646624584E-5	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.999999922981533	WITHOUT_CLASSIFICATION	7.701846709117773E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9999993992526176	WITHOUT_CLASSIFICATION	6.00747382306173E-7	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999993283983347	WITHOUT_CLASSIFICATION	6.71601665374559E-7	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999989266273323	WITHOUT_CLASSIFICATION	1.0733726678253671E-6	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999739552690979	WITHOUT_CLASSIFICATION	2.6044730902134724E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9998408609796827	WITHOUT_CLASSIFICATION	1.5913902031738984E-4	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9998408609796827	WITHOUT_CLASSIFICATION	1.5913902031738984E-4	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999997651284854	WITHOUT_CLASSIFICATION	2.3487151446804055E-7	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999987419775358	WITHOUT_CLASSIFICATION	1.2580224642271806E-6	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9999988712222251	WITHOUT_CLASSIFICATION	1.1287777748939954E-6	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9999911882688374	WITHOUT_CLASSIFICATION	8.811731162675793E-6	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9999995516139402	WITHOUT_CLASSIFICATION	4.483860597974123E-7	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999984138079826	WITHOUT_CLASSIFICATION	1.5861920174737511E-6	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999983691894702	WITHOUT_CLASSIFICATION	1.6308105298120256E-6	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999984815515692	WITHOUT_CLASSIFICATION	1.518448430729354E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999534154206	WITHOUT_CLASSIFICATION	4.65845793701064E-8	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999999453350809	WITHOUT_CLASSIFICATION	5.466491912480029E-8	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.999993774545821	WITHOUT_CLASSIFICATION	6.225454179036613E-6	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9997245230969528	WITHOUT_CLASSIFICATION	2.754769030470868E-4	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999964677898177	WITHOUT_CLASSIFICATION	3.532210182301364E-6	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.998554348342241	WITHOUT_CLASSIFICATION	0.0014456516577590155	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999950457494946	WITHOUT_CLASSIFICATION	4.954250505390796E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999730874081	WITHOUT_CLASSIFICATION	2.691259187593303E-8	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999955214520218	WITHOUT_CLASSIFICATION	4.4785479782812435E-6	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999998942481524	WITHOUT_CLASSIFICATION	1.0575184764865205E-7	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999838500016	WITHOUT_CLASSIFICATION	1.614999844600877E-8	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9999072682690624	WITHOUT_CLASSIFICATION	9.273173093753762E-5	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999606127047995	WITHOUT_CLASSIFICATION	3.9387295200380695E-5	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9999903410063117	WITHOUT_CLASSIFICATION	9.658993688276146E-6	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999999979257642	WITHOUT_CLASSIFICATION	2.074235871408187E-9	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999985362380759	WITHOUT_CLASSIFICATION	1.4637619241788769E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.999999379389459	WITHOUT_CLASSIFICATION	6.206105408640273E-7	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999851640357	WITHOUT_CLASSIFICATION	1.4835964368749962E-8	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999851640357	WITHOUT_CLASSIFICATION	1.4835964368749962E-8	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9996647964011662	WITHOUT_CLASSIFICATION	3.352035988337744E-4	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999936177657259	WITHOUT_CLASSIFICATION	6.382234274033756E-6	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999971135135	WITHOUT_CLASSIFICATION	2.8864864945605188E-9	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999439685080639	WITHOUT_CLASSIFICATION	5.6031491936097976E-5	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999509891976354	WITHOUT_CLASSIFICATION	4.901080236463321E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999585776088331	WITHOUT_CLASSIFICATION	4.1422391166878346E-5	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999972129342671	WITHOUT_CLASSIFICATION	2.787065732946544E-6	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9996798239313472	WITHOUT_CLASSIFICATION	3.2017606865277414E-4	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999993343736351	WITHOUT_CLASSIFICATION	6.656263648861711E-7	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9997711054682578	WITHOUT_CLASSIFICATION	2.2889453174226894E-4	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999763499001623	WITHOUT_CLASSIFICATION	2.365009983774487E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.999999902280081	WITHOUT_CLASSIFICATION	9.771991902461413E-8	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999995519090883	WITHOUT_CLASSIFICATION	4.4809091167440785E-7	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999753833202333	WITHOUT_CLASSIFICATION	2.4616679766606986E-5	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999999929694093	WITHOUT_CLASSIFICATION	7.030590676990471E-9	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999958936035735	WITHOUT_CLASSIFICATION	4.1063964264177445E-6	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999999999332831	WITHOUT_CLASSIFICATION	6.67168817650199E-11	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9995378528567035	WITHOUT_CLASSIFICATION	4.6214714329658255E-4	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9998466353353151	WITHOUT_CLASSIFICATION	1.5336466468481442E-4	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999994567632803	WITHOUT_CLASSIFICATION	5.432367196734804E-7	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999995149439223	WITHOUT_CLASSIFICATION	4.850560776863782E-7	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999999895866162	WITHOUT_CLASSIFICATION	1.0413383949025993E-8	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999946162317007	WITHOUT_CLASSIFICATION	5.38376829935108E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999996853599663	WITHOUT_CLASSIFICATION	3.146400337305418E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999988689518658	WITHOUT_CLASSIFICATION	1.1310481341571555E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999979130262158	WITHOUT_CLASSIFICATION	2.0869737841938374E-6	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.999999972499073	WITHOUT_CLASSIFICATION	2.7500927019607058E-8	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.999987283451057	WITHOUT_CLASSIFICATION	1.2716548943005503E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999964218525254	WITHOUT_CLASSIFICATION	3.5781474746961757E-6	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999994288774426	WITHOUT_CLASSIFICATION	5.711225574021211E-7	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9999956800360855	WITHOUT_CLASSIFICATION	4.319963914545771E-6	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999774127112491	WITHOUT_CLASSIFICATION	2.25872887509491E-5	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999428304904007	WITHOUT_CLASSIFICATION	5.716950959943133E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999988689518658	WITHOUT_CLASSIFICATION	1.1310481341571555E-6	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999368378430308	WITHOUT_CLASSIFICATION	6.316215696918563E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999069846187609	WITHOUT_CLASSIFICATION	9.30153812390211E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999503695166406	WITHOUT_CLASSIFICATION	4.96304833594147E-5	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999999172219873	WITHOUT_CLASSIFICATION	8.277801270549317E-8	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999992003971127	WITHOUT_CLASSIFICATION	7.996028873182772E-7	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9993024840692505	WITHOUT_CLASSIFICATION	6.975159307494278E-4	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999999973464189	WITHOUT_CLASSIFICATION	2.653581112280271E-9	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999909365885103	WITHOUT_CLASSIFICATION	9.063411489614619E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999805850597231	WITHOUT_CLASSIFICATION	1.941494027687142E-5	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.999998113964614	WITHOUT_CLASSIFICATION	1.8860353859213478E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999889980447	WITHOUT_CLASSIFICATION	1.1001955454487059E-8	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999889980447	WITHOUT_CLASSIFICATION	1.1001955454487059E-8	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999889980447	WITHOUT_CLASSIFICATION	1.1001955454487059E-8	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.999893478553179	WITHOUT_CLASSIFICATION	1.0652144682097552E-4	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9996102353959272	WITHOUT_CLASSIFICATION	3.89764604072708E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999995912435132	WITHOUT_CLASSIFICATION	4.0875648682806965E-7	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999999129031124	WITHOUT_CLASSIFICATION	8.709688756064697E-8	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999986582647524	WITHOUT_CLASSIFICATION	1.341735247584777E-6	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999999939618721	WITHOUT_CLASSIFICATION	6.0381278827494125E-9	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.999998360537513	WITHOUT_CLASSIFICATION	1.6394624869938017E-6	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.999996293003318	WITHOUT_CLASSIFICATION	3.706996681989449E-6	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999987061386764	WITHOUT_CLASSIFICATION	1.2938613236835226E-6	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999976368444456	WITHOUT_CLASSIFICATION	2.363155554304732E-6	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999999999861282	WITHOUT_CLASSIFICATION	1.3871886196465263E-11	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999910031737	WITHOUT_CLASSIFICATION	8.99682633195736E-9	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.999999542416362	WITHOUT_CLASSIFICATION	4.575836380096801E-7	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999982162693751	WITHOUT_CLASSIFICATION	1.78373062477677E-6	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9999448628824807	WITHOUT_CLASSIFICATION	5.5137117519213664E-5	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999999999969145	WITHOUT_CLASSIFICATION	3.085418479397062E-12	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999996186806589	WITHOUT_CLASSIFICATION	3.81319341062243E-7	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999994117553933	WITHOUT_CLASSIFICATION	5.882446067771416E-7	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999716752043	WITHOUT_CLASSIFICATION	2.8324795742649882E-8	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999972800457262	WITHOUT_CLASSIFICATION	2.719954273771234E-6	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999999999994663	WITHOUT_CLASSIFICATION	5.336593473343823E-13	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999998335039435	WITHOUT_CLASSIFICATION	1.664960565076996E-6	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.999997509069519	WITHOUT_CLASSIFICATION	2.4909304808919276E-6	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999940826199	WITHOUT_CLASSIFICATION	5.91738005894119E-9	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999878905531	WITHOUT_CLASSIFICATION	1.2109447009059747E-8	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999999827092849	WITHOUT_CLASSIFICATION	1.7290715080645025E-8	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999998786152925	WITHOUT_CLASSIFICATION	1.2138470740249777E-7	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999999920556141	WITHOUT_CLASSIFICATION	7.944385920130183E-9	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.999984786785415	WITHOUT_CLASSIFICATION	1.5213214585083475E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999981280634	WITHOUT_CLASSIFICATION	1.8719365755360703E-9	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999997443100379	WITHOUT_CLASSIFICATION	2.5568996211867864E-7	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999856025333436	WITHOUT_CLASSIFICATION	1.4397466656487676E-5	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999688239845	WITHOUT_CLASSIFICATION	3.117601553880696E-8	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9999999925383821	WITHOUT_CLASSIFICATION	7.461617813904742E-9	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.999999999016667	WITHOUT_CLASSIFICATION	9.833329991138797E-10	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.999996095637399	WITHOUT_CLASSIFICATION	3.90436260102264E-6	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9994064067054026	WITHOUT_CLASSIFICATION	5.935932945975066E-4	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9997755757928244	WITHOUT_CLASSIFICATION	2.2442420717553972E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999978268938087	WITHOUT_CLASSIFICATION	2.1731061912742236E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999978268938087	WITHOUT_CLASSIFICATION	2.1731061912742236E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999979950381056	WITHOUT_CLASSIFICATION	2.004961894405656E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999979950381056	WITHOUT_CLASSIFICATION	2.004961894405656E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999996851503712	WITHOUT_CLASSIFICATION	3.148496288119007E-7	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999647791892022	WITHOUT_CLASSIFICATION	3.522081079777203E-5	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.999999908278879	WITHOUT_CLASSIFICATION	9.17211211229095E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999998184209545	WITHOUT_CLASSIFICATION	1.815790455699133E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999998184209545	WITHOUT_CLASSIFICATION	1.815790455699133E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999998184209545	WITHOUT_CLASSIFICATION	1.815790455699133E-7	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999754112667828	WITHOUT_CLASSIFICATION	2.4588733217189166E-5	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999999830796872	WITHOUT_CLASSIFICATION	1.692031281272971E-8	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999822412208739	WITHOUT_CLASSIFICATION	1.775877912612906E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.999996985118561	WITHOUT_CLASSIFICATION	3.0148814390193562E-6	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999999091758532	WITHOUT_CLASSIFICATION	9.0824146749598E-8	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9999998076832499	WITHOUT_CLASSIFICATION	1.9231674997519843E-7	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999990506598502	WITHOUT_CLASSIFICATION	9.493401498449733E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999988945760186	WITHOUT_CLASSIFICATION	1.105423981308563E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999988945760186	WITHOUT_CLASSIFICATION	1.105423981308563E-6	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999999997163787	WITHOUT_CLASSIFICATION	2.836213520703495E-10	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999996500690606	WITHOUT_CLASSIFICATION	3.4993093937344235E-7	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9999998901589259	WITHOUT_CLASSIFICATION	1.0984107406655006E-7	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9999999951337293	WITHOUT_CLASSIFICATION	4.866270736459635E-9	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.999999981017595	WITHOUT_CLASSIFICATION	1.898240494109158E-8	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999897928622107	WITHOUT_CLASSIFICATION	1.0207137789283027E-5	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.999999960659801	WITHOUT_CLASSIFICATION	3.9340198948078774E-8	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999980172614509	WITHOUT_CLASSIFICATION	1.9827385492099296E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999994807149759	WITHOUT_CLASSIFICATION	5.192850241373427E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999931926831	WITHOUT_CLASSIFICATION	6.807316989481077E-9	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999848041464	WITHOUT_CLASSIFICATION	1.5195853557007277E-8	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999957813794224	WITHOUT_CLASSIFICATION	4.218620577662818E-6	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999999390276649	WITHOUT_CLASSIFICATION	6.097233508549562E-8	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999998095209901	WITHOUT_CLASSIFICATION	1.9047900982062275E-7	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999997987209556	WITHOUT_CLASSIFICATION	2.0127904441287593E-7	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999998523741854	WITHOUT_CLASSIFICATION	1.4762581454847465E-7	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9999961262781016	WITHOUT_CLASSIFICATION	3.873721898272059E-6	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9999999588305579	WITHOUT_CLASSIFICATION	4.1169442144189696E-8	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999997651284854	WITHOUT_CLASSIFICATION	2.3487151446804055E-7	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999015536537	WITHOUT_CLASSIFICATION	9.844634619833776E-8	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9997135748660654	WITHOUT_CLASSIFICATION	2.864251339345759E-4	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999999901489789	WITHOUT_CLASSIFICATION	9.851021162354322E-9	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999998437732075	WITHOUT_CLASSIFICATION	1.562267925546538E-7	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9999995753845947	WITHOUT_CLASSIFICATION	4.24615405265359E-7	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999943352567398	WITHOUT_CLASSIFICATION	5.6647432601831615E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999999259061437	WITHOUT_CLASSIFICATION	7.40938562848399E-8	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9999999116474125	WITHOUT_CLASSIFICATION	8.835258738132614E-8	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999999991818016	WITHOUT_CLASSIFICATION	8.181983283102074E-10	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999944233611	WITHOUT_CLASSIFICATION	5.576638841776009E-9	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999944233611	WITHOUT_CLASSIFICATION	5.576638841776009E-9	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9999999988114627	WITHOUT_CLASSIFICATION	1.1885372486519209E-9	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999783501626712	WITHOUT_CLASSIFICATION	2.1649837328755047E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999999490916928	WITHOUT_CLASSIFICATION	5.090830736102217E-8	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999967813714717	WITHOUT_CLASSIFICATION	3.2186285283098444E-6	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999967813714717	WITHOUT_CLASSIFICATION	3.2186285283098444E-6	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999767294877832	WITHOUT_CLASSIFICATION	2.3270512216809822E-5	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9121243183379716	WITHOUT_CLASSIFICATION	0.0878756816620284	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999998041216145	WITHOUT_CLASSIFICATION	1.9587838549398964E-7	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999999838193953	WITHOUT_CLASSIFICATION	1.618060470329204E-8	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999173204495286	WITHOUT_CLASSIFICATION	8.267955047136283E-5	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999999939951357	WITHOUT_CLASSIFICATION	6.004864258504783E-9	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999999884301999	WITHOUT_CLASSIFICATION	1.15698001710872E-8	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999938966960825	WITHOUT_CLASSIFICATION	6.103303917492303E-6	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9999996141410814	WITHOUT_CLASSIFICATION	3.8585891863679295E-7	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9999975479671676	WITHOUT_CLASSIFICATION	2.452032832345102E-6	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999993610973	WITHOUT_CLASSIFICATION	6.389026108368562E-10	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999998909122757	WITHOUT_CLASSIFICATION	1.0908772425830092E-7	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9998480276215507	WITHOUT_CLASSIFICATION	1.5197237844939595E-4	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999998457259	WITHOUT_CLASSIFICATION	1.5427410053203946E-10	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999679765426761	WITHOUT_CLASSIFICATION	3.2023457323863696E-5	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999999209703659	WITHOUT_CLASSIFICATION	7.902963411441881E-8	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.999999908892334	WITHOUT_CLASSIFICATION	9.110766599354029E-8	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999978483984	WITHOUT_CLASSIFICATION	2.151601521589345E-9	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.99999999486665	WITHOUT_CLASSIFICATION	5.133349995967968E-9	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999998852334214	WITHOUT_CLASSIFICATION	1.1476657854307737E-7	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999994256551684	WITHOUT_CLASSIFICATION	5.743448315983458E-7	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9999582801069237	WITHOUT_CLASSIFICATION	4.1719893076292814E-5	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9999910320743789	WITHOUT_CLASSIFICATION	8.967925621111795E-6	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9999942070447742	WITHOUT_CLASSIFICATION	5.792955225814975E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999997589283897	WITHOUT_CLASSIFICATION	2.410716103761517E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999997589283897	WITHOUT_CLASSIFICATION	2.410716103761517E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999997589283897	WITHOUT_CLASSIFICATION	2.410716103761517E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999997589283897	WITHOUT_CLASSIFICATION	2.410716103761517E-7	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999998743606067	WITHOUT_CLASSIFICATION	1.2563939329430755E-7	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999999374052947	WITHOUT_CLASSIFICATION	6.259470532248428E-8	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999981081412049	WITHOUT_CLASSIFICATION	1.8918587950928822E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999981081412049	WITHOUT_CLASSIFICATION	1.8918587950928822E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999981081412049	WITHOUT_CLASSIFICATION	1.8918587950928822E-6	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999998782217911	WITHOUT_CLASSIFICATION	1.2177820892941578E-7	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999645174372932	WITHOUT_CLASSIFICATION	3.5482562706817215E-5	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999996197368182	WITHOUT_CLASSIFICATION	3.802631817587798E-7	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999963336710241	WITHOUT_CLASSIFICATION	3.666328975900279E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999963336710241	WITHOUT_CLASSIFICATION	3.666328975900279E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999948328406144	WITHOUT_CLASSIFICATION	5.1671593856294046E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999948328406144	WITHOUT_CLASSIFICATION	5.1671593856294046E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999948328406144	WITHOUT_CLASSIFICATION	5.1671593856294046E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999948328406144	WITHOUT_CLASSIFICATION	5.1671593856294046E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999948328406144	WITHOUT_CLASSIFICATION	5.1671593856294046E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999948328406144	WITHOUT_CLASSIFICATION	5.1671593856294046E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999948328406144	WITHOUT_CLASSIFICATION	5.1671593856294046E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999948328406144	WITHOUT_CLASSIFICATION	5.1671593856294046E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999948328406144	WITHOUT_CLASSIFICATION	5.1671593856294046E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999948328406144	WITHOUT_CLASSIFICATION	5.1671593856294046E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999948328406144	WITHOUT_CLASSIFICATION	5.1671593856294046E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999948328406144	WITHOUT_CLASSIFICATION	5.1671593856294046E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999948328406144	WITHOUT_CLASSIFICATION	5.1671593856294046E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999838500016	WITHOUT_CLASSIFICATION	1.614999844600877E-8	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999838500016	WITHOUT_CLASSIFICATION	1.614999844600877E-8	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9873262065581236	WITHOUT_CLASSIFICATION	0.012673793441876255	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9873262065581236	WITHOUT_CLASSIFICATION	0.012673793441876255	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9998491244717275	WITHOUT_CLASSIFICATION	1.5087552827247356E-4	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999997742266356	WITHOUT_CLASSIFICATION	2.2577336448832033E-7	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999974770942841	WITHOUT_CLASSIFICATION	2.5229057158442645E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.999998522904521	WITHOUT_CLASSIFICATION	1.4770954789394664E-6	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9999998754016867	WITHOUT_CLASSIFICATION	1.2459831327326692E-7	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999895088552413	WITHOUT_CLASSIFICATION	1.0491144758789276E-5	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.999962538024254	WITHOUT_CLASSIFICATION	3.746197574607528E-5	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999999789363502	WITHOUT_CLASSIFICATION	2.1063649815615784E-8	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999999456916173	WITHOUT_CLASSIFICATION	5.430838269860163E-8	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.999992558472633	WITHOUT_CLASSIFICATION	7.441527366935948E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999976109922166	WITHOUT_CLASSIFICATION	2.389007783411939E-6	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999968822907023	WITHOUT_CLASSIFICATION	3.1177092976132412E-6	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999999870594554	WITHOUT_CLASSIFICATION	1.2940544546438519E-8	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999980774130154	WITHOUT_CLASSIFICATION	1.9225869847170073E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.99999842476802	WITHOUT_CLASSIFICATION	1.5752319799960254E-6	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9999965992743871	WITHOUT_CLASSIFICATION	3.4007256128105983E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999997485383535	WITHOUT_CLASSIFICATION	2.5146164657466055E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999994471513348	WITHOUT_CLASSIFICATION	5.5284866524263E-7	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999506040767412	WITHOUT_CLASSIFICATION	4.939592325875652E-5	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999995063040865	WITHOUT_CLASSIFICATION	4.936959135549257E-7	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948806147584	WITHOUT_CLASSIFICATION	5.1193852416052895E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948806147584	WITHOUT_CLASSIFICATION	5.1193852416052895E-6	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999952361022594	WITHOUT_CLASSIFICATION	4.763897740557599E-6	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9999955754687994	WITHOUT_CLASSIFICATION	4.424531200740587E-6	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9991925062540454	WITHOUT_CLASSIFICATION	8.074937459546242E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9988752381474519	WITHOUT_CLASSIFICATION	0.0011247618525480946	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9988784742617283	WITHOUT_CLASSIFICATION	0.0011215257382718267	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9993258316731927	WITHOUT_CLASSIFICATION	6.741683268073744E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9994032097083179	WITHOUT_CLASSIFICATION	5.967902916820967E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9979540056863441	WITHOUT_CLASSIFICATION	0.00204599431365597	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9992432704363423	WITHOUT_CLASSIFICATION	7.567295636577677E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9979452334780929	WITHOUT_CLASSIFICATION	0.0020547665219071377	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9992639736844502	WITHOUT_CLASSIFICATION	7.360263155497594E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9994556316001922	WITHOUT_CLASSIFICATION	5.44368399807835E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9987622508979679	WITHOUT_CLASSIFICATION	0.0012377491020321473	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9977680165479974	WITHOUT_CLASSIFICATION	0.00223198345200257	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9992302389849805	WITHOUT_CLASSIFICATION	7.697610150194852E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9987539455350014	WITHOUT_CLASSIFICATION	0.0012460544649985964	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999976057220146	WITHOUT_CLASSIFICATION	2.3942779853567565E-6	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999954607236842	WITHOUT_CLASSIFICATION	4.539276315797531E-6	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999994952665113	WITHOUT_CLASSIFICATION	5.047334886913843E-7	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999999987006958	WITHOUT_CLASSIFICATION	1.2993043219299921E-9	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999858434404187	WITHOUT_CLASSIFICATION	1.4156559581241048E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999858434404187	WITHOUT_CLASSIFICATION	1.4156559581241048E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999858434404187	WITHOUT_CLASSIFICATION	1.4156559581241048E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999858434404187	WITHOUT_CLASSIFICATION	1.4156559581241048E-5	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9994393059028291	WITHOUT_CLASSIFICATION	5.606940971709736E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999956170434	WITHOUT_CLASSIFICATION	4.382956543823726E-9	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999999999999758	WITHOUT_CLASSIFICATION	2.4301917620625283E-14	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999993817001559	WITHOUT_CLASSIFICATION	6.182998440699895E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999993817001559	WITHOUT_CLASSIFICATION	6.182998440699895E-7	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999963444598603	WITHOUT_CLASSIFICATION	3.6555401397035854E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999986407580389	WITHOUT_CLASSIFICATION	1.3592419610526733E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999986407580389	WITHOUT_CLASSIFICATION	1.3592419610526733E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999989414176449	WITHOUT_CLASSIFICATION	1.0585823551164865E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999989414176449	WITHOUT_CLASSIFICATION	1.0585823551164865E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999989734362538	WITHOUT_CLASSIFICATION	1.0265637462390497E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999964174471353	WITHOUT_CLASSIFICATION	3.5825528646744253E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999969476264914	WITHOUT_CLASSIFICATION	3.052373508529952E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999997764608579	WITHOUT_CLASSIFICATION	2.2353914202434483E-7	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999999978097847	WITHOUT_CLASSIFICATION	2.190215317960369E-9	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.999999998793883	WITHOUT_CLASSIFICATION	1.2061170166954086E-9	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.99999998710688	WITHOUT_CLASSIFICATION	1.2893120048206619E-8	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999977118252493	WITHOUT_CLASSIFICATION	2.288174750769656E-6	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9992335328657571	WITHOUT_CLASSIFICATION	7.664671342429893E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9992335328657571	WITHOUT_CLASSIFICATION	7.664671342429893E-4	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999905480908877	WITHOUT_CLASSIFICATION	9.451909112254315E-6	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999997747961904	WITHOUT_CLASSIFICATION	2.2520380954031184E-7	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.999999793090946	WITHOUT_CLASSIFICATION	2.0690905404881845E-7	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999989329361	WITHOUT_CLASSIFICATION	1.0670639563377026E-9	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999965993256137	WITHOUT_CLASSIFICATION	3.4006743863147574E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999764708196	WITHOUT_CLASSIFICATION	2.3529180425879526E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999764708196	WITHOUT_CLASSIFICATION	2.3529180425879526E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999764708196	WITHOUT_CLASSIFICATION	2.3529180425879526E-8	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999997011838	WITHOUT_CLASSIFICATION	2.9881617512834806E-10	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999997011838	WITHOUT_CLASSIFICATION	2.9881617512834806E-10	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999864593585	WITHOUT_CLASSIFICATION	1.3540641561025885E-8	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.999999998327482	WITHOUT_CLASSIFICATION	1.6725180266648624E-9	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.999999998327482	WITHOUT_CLASSIFICATION	1.6725180266648624E-9	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999999893516077	WITHOUT_CLASSIFICATION	1.064839226294993E-8	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999999737157945	WITHOUT_CLASSIFICATION	2.6284205393289327E-8	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999439685080639	WITHOUT_CLASSIFICATION	5.6031491936097976E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999647107872391	WITHOUT_CLASSIFICATION	3.528921276091784E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999660053275234	WITHOUT_CLASSIFICATION	3.3994672476603336E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999660053275234	WITHOUT_CLASSIFICATION	3.3994672476603336E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907827015039	WITHOUT_CLASSIFICATION	9.217298496036233E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907827015039	WITHOUT_CLASSIFICATION	9.217298496036233E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907827015039	WITHOUT_CLASSIFICATION	9.217298496036233E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907827015039	WITHOUT_CLASSIFICATION	9.217298496036233E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907827015039	WITHOUT_CLASSIFICATION	9.217298496036233E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907827015039	WITHOUT_CLASSIFICATION	9.217298496036233E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907827015039	WITHOUT_CLASSIFICATION	9.217298496036233E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907827015039	WITHOUT_CLASSIFICATION	9.217298496036233E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907827015039	WITHOUT_CLASSIFICATION	9.217298496036233E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907827015039	WITHOUT_CLASSIFICATION	9.217298496036233E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907827015039	WITHOUT_CLASSIFICATION	9.217298496036233E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907827015039	WITHOUT_CLASSIFICATION	9.217298496036233E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998436776544292	WITHOUT_CLASSIFICATION	1.5632234557093008E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999301909073559	WITHOUT_CLASSIFICATION	6.980909264406848E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999899287919646	WITHOUT_CLASSIFICATION	1.0071208035385551E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999332597452676	WITHOUT_CLASSIFICATION	6.67402547324174E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999212489767152	WITHOUT_CLASSIFICATION	7.87510232847745E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999250448367717	WITHOUT_CLASSIFICATION	7.495516322833734E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988743724412	WITHOUT_CLASSIFICATION	1.1256275588042253E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988743724412	WITHOUT_CLASSIFICATION	1.1256275588042253E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988743724412	WITHOUT_CLASSIFICATION	1.1256275588042253E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988743724412	WITHOUT_CLASSIFICATION	1.1256275588042253E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999843892869138	WITHOUT_CLASSIFICATION	1.5610713086300577E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999843892869138	WITHOUT_CLASSIFICATION	1.5610713086300577E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999843892869138	WITHOUT_CLASSIFICATION	1.5610713086300577E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999292598692338	WITHOUT_CLASSIFICATION	7.074013076632263E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999400936829703	WITHOUT_CLASSIFICATION	5.9906317029627186E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999912601660415	WITHOUT_CLASSIFICATION	8.739833958475198E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999912601660415	WITHOUT_CLASSIFICATION	8.739833958475198E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999949112608466	WITHOUT_CLASSIFICATION	5.088739153356376E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998637385711526	WITHOUT_CLASSIFICATION	1.362614288473777E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998900862049911	WITHOUT_CLASSIFICATION	1.0991379500902696E-4	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900972172757	WITHOUT_CLASSIFICATION	9.902782724251248E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999308695340661	WITHOUT_CLASSIFICATION	6.913046593391638E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999518478844	WITHOUT_CLASSIFICATION	4.815211556350565E-8	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9999954025410063	WITHOUT_CLASSIFICATION	4.597458993765682E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.999829105333034	WITHOUT_CLASSIFICATION	1.7089466696591264E-4	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999991355274735	WITHOUT_CLASSIFICATION	8.644725264653579E-7	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999912609019596	WITHOUT_CLASSIFICATION	8.739098040417589E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9999992722478996	WITHOUT_CLASSIFICATION	7.277521003825927E-7	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9907891865256192	WITHOUT_CLASSIFICATION	0.009210813474380861	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999997435971877	WITHOUT_CLASSIFICATION	2.564028123321159E-7	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999999126337701	WITHOUT_CLASSIFICATION	8.736622991112661E-8	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9999955593976048	WITHOUT_CLASSIFICATION	4.440602395172195E-6	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9999939612308133	WITHOUT_CLASSIFICATION	6.038769186738767E-6	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999994293559378	WITHOUT_CLASSIFICATION	5.706440621396471E-7	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999993614499486	WITHOUT_CLASSIFICATION	6.38550051262087E-7	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999981917885561	WITHOUT_CLASSIFICATION	1.8082114439178377E-6	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999999913385247	WITHOUT_CLASSIFICATION	8.661475338557128E-9	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9999989823509466	WITHOUT_CLASSIFICATION	1.0176490534623302E-6	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9999958015309179	WITHOUT_CLASSIFICATION	4.198469082053033E-6	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999971786583189	WITHOUT_CLASSIFICATION	2.8213416809497497E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999518478844	WITHOUT_CLASSIFICATION	4.815211556350565E-8	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999988430201867	WITHOUT_CLASSIFICATION	1.1569798133673692E-6	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999986308575579	WITHOUT_CLASSIFICATION	1.3691424421813484E-6	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999997082598902	WITHOUT_CLASSIFICATION	2.917401097496713E-7	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9999996773997968	WITHOUT_CLASSIFICATION	3.2260020330807286E-7	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.999992440253685	WITHOUT_CLASSIFICATION	7.5597463149416235E-6	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9999712846322604	WITHOUT_CLASSIFICATION	2.8715367739644456E-5	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9999714828607369	WITHOUT_CLASSIFICATION	2.8517139263136252E-5	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999998140910531	WITHOUT_CLASSIFICATION	1.859089468054182E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.999997451627817	WITHOUT_CLASSIFICATION	2.5483721830375685E-6	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.999966844943561	WITHOUT_CLASSIFICATION	3.315505643886646E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999739095696	WITHOUT_CLASSIFICATION	2.6090430259231408E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998988093995	WITHOUT_CLASSIFICATION	1.0119060053122493E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999989102256516	WITHOUT_CLASSIFICATION	1.0897743484242335E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998788595911	WITHOUT_CLASSIFICATION	1.2114040889346325E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999975596331833	WITHOUT_CLASSIFICATION	2.4403668167903646E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998003726078	WITHOUT_CLASSIFICATION	1.9962739207355286E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999998339072692	WITHOUT_CLASSIFICATION	1.660927306759412E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998616658037	WITHOUT_CLASSIFICATION	1.3833419623214547E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999989620647842	WITHOUT_CLASSIFICATION	1.0379352158282991E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999922204944054	WITHOUT_CLASSIFICATION	7.77950559455138E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997983010415	WITHOUT_CLASSIFICATION	2.0169895843121647E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999994667063631	WITHOUT_CLASSIFICATION	5.332936369937288E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999213077831	WITHOUT_CLASSIFICATION	7.869221691195799E-8	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9999903566695547	WITHOUT_CLASSIFICATION	9.643330445173195E-6	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999986254817809	WITHOUT_CLASSIFICATION	1.3745182191724191E-6	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.99999860256844	WITHOUT_CLASSIFICATION	1.3974315600373434E-6	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999985744953692	WITHOUT_CLASSIFICATION	1.4255046308509827E-6	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999934212897554	WITHOUT_CLASSIFICATION	6.578710244575072E-6	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999997406724054	WITHOUT_CLASSIFICATION	2.5932759465030493E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997172070335081	WITHOUT_CLASSIFICATION	2.827929664918455E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999938362487338	WITHOUT_CLASSIFICATION	6.1637512661756935E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997172070335081	WITHOUT_CLASSIFICATION	2.827929664918455E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9999994849985261	WITHOUT_CLASSIFICATION	5.150014739005139E-7	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999998599335596	WITHOUT_CLASSIFICATION	1.4006644046409897E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999969307724949	WITHOUT_CLASSIFICATION	3.0692275050559837E-6	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9999853017963848	WITHOUT_CLASSIFICATION	1.4698203615229275E-5	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999998498327205	WITHOUT_CLASSIFICATION	1.5016727954296641E-7	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999998887508921	WITHOUT_CLASSIFICATION	1.1124910782240371E-7	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9999999949824445	WITHOUT_CLASSIFICATION	5.017555408129851E-9	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9999991565490849	WITHOUT_CLASSIFICATION	8.434509151416132E-7	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9907891865256192	WITHOUT_CLASSIFICATION	0.009210813474380861	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9999940858446104	WITHOUT_CLASSIFICATION	5.91415538957158E-6	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9999962113091639	WITHOUT_CLASSIFICATION	3.7886908361790713E-6	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999998663410679	WITHOUT_CLASSIFICATION	1.336589321585564E-7	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.999999992391818	WITHOUT_CLASSIFICATION	7.608181939914063E-9	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9999957590674984	WITHOUT_CLASSIFICATION	4.2409325016946276E-6	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999965026281151	WITHOUT_CLASSIFICATION	3.4973718849279185E-6	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9999926074858243	WITHOUT_CLASSIFICATION	7.392514175629259E-6	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999999579202931	WITHOUT_CLASSIFICATION	4.207970704581798E-8	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999999758711854	WITHOUT_CLASSIFICATION	2.4128814648022637E-8	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999993337693215	WITHOUT_CLASSIFICATION	6.662306784978443E-7	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999999889144259	WITHOUT_CLASSIFICATION	1.1085574035187705E-8	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9999873733315514	WITHOUT_CLASSIFICATION	1.2626668448532948E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999980270567018	WITHOUT_CLASSIFICATION	1.9729432981778197E-6	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999944535449218	WITHOUT_CLASSIFICATION	5.5464550781871384E-6	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.999998886775235	WITHOUT_CLASSIFICATION	1.1132247651421615E-6	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999938980583681	WITHOUT_CLASSIFICATION	6.101941631915406E-6	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999998738366515	WITHOUT_CLASSIFICATION	1.2616334856080467E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999997571957265	WITHOUT_CLASSIFICATION	2.428042734886206E-6	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999592247048256	WITHOUT_CLASSIFICATION	4.077529517434592E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999592247048256	WITHOUT_CLASSIFICATION	4.077529517434592E-5	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999952491916576	WITHOUT_CLASSIFICATION	4.750808342463341E-6	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9992253913906899	WITHOUT_CLASSIFICATION	7.746086093101068E-4	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9911004256113262	WITHOUT_CLASSIFICATION	0.008899574388673823	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9999620422468096	WITHOUT_CLASSIFICATION	3.795775319041637E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999649685342	WITHOUT_CLASSIFICATION	3.5031465789961446E-8	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9999803860167158	WITHOUT_CLASSIFICATION	1.9613983284305822E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9993626771016868	WITHOUT_CLASSIFICATION	6.373228983131759E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999999581185217	WITHOUT_CLASSIFICATION	4.1881478272184604E-8	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999015208025	WITHOUT_CLASSIFICATION	9.847919751060184E-8	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999861465780973	WITHOUT_CLASSIFICATION	1.385342190269609E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999433023458295	WITHOUT_CLASSIFICATION	5.6697654170420845E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999950036620151	WITHOUT_CLASSIFICATION	4.996337984948771E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999887515801102	WITHOUT_CLASSIFICATION	1.1248419889698916E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9999961562130297	WITHOUT_CLASSIFICATION	3.843786970241455E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998426622067	WITHOUT_CLASSIFICATION	1.5733779342724963E-7	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9999974426696697	WITHOUT_CLASSIFICATION	2.557330330263745E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999668529052	WITHOUT_CLASSIFICATION	3.314709489852009E-8	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999978380738624	WITHOUT_CLASSIFICATION	2.161926137531865E-6	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999990447039886	WITHOUT_CLASSIFICATION	9.552960113224943E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999649685342	WITHOUT_CLASSIFICATION	3.5031465789961446E-8	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999668529052	WITHOUT_CLASSIFICATION	3.314709489852009E-8	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999999581185217	WITHOUT_CLASSIFICATION	4.1881478272184604E-8	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999015208025	WITHOUT_CLASSIFICATION	9.847919751060184E-8	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999997571957265	WITHOUT_CLASSIFICATION	2.428042734886206E-6	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999998753171746	WITHOUT_CLASSIFICATION	1.2468282536017305E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999997571957265	WITHOUT_CLASSIFICATION	2.428042734886206E-6	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998498781616	WITHOUT_CLASSIFICATION	1.501218384260873E-7	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9999995941416276	WITHOUT_CLASSIFICATION	4.0585837233681797E-7	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999905357976	WITHOUT_CLASSIFICATION	9.464202502206214E-9	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999962646428	WITHOUT_CLASSIFICATION	3.735357316784097E-9	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999915831768258	WITHOUT_CLASSIFICATION	8.416823174215124E-6	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999915831768258	WITHOUT_CLASSIFICATION	8.416823174215124E-6	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9999960105382171	WITHOUT_CLASSIFICATION	3.989461782850901E-6	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999043914345	WITHOUT_CLASSIFICATION	9.560856546247682E-8	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999841808611	WITHOUT_CLASSIFICATION	1.5819138893000183E-8	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999643405828	WITHOUT_CLASSIFICATION	3.565941717095129E-8	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999754203962	WITHOUT_CLASSIFICATION	2.457960379542935E-8	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999282372142	WITHOUT_CLASSIFICATION	7.17627858863618E-8	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999815508077	WITHOUT_CLASSIFICATION	1.8449192335043648E-8	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999732344161	WITHOUT_CLASSIFICATION	2.6765583905904658E-8	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999259906174	WITHOUT_CLASSIFICATION	7.400938257804255E-8	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999809732395	WITHOUT_CLASSIFICATION	1.9026760446859132E-8	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999723964961	WITHOUT_CLASSIFICATION	2.7603503926729745E-8	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999927962793	WITHOUT_CLASSIFICATION	7.203720743354084E-9	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999999943345268	WITHOUT_CLASSIFICATION	5.6654732109541756E-8	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999988806938	WITHOUT_CLASSIFICATION	1.1193062009696767E-8	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999837614115	WITHOUT_CLASSIFICATION	1.6238588439201702E-8	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999677828748	WITHOUT_CLASSIFICATION	3.221712521718121E-8	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999913348792	WITHOUT_CLASSIFICATION	8.665120899657222E-9	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999924440335	WITHOUT_CLASSIFICATION	7.555966562628505E-9	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999862723846	WITHOUT_CLASSIFICATION	1.372761531804676E-8	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999206952348	WITHOUT_CLASSIFICATION	7.930476519746558E-8	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999786701824	WITHOUT_CLASSIFICATION	2.132981752336618E-8	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999690552839	WITHOUT_CLASSIFICATION	3.0944716143131865E-8	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999903012451	WITHOUT_CLASSIFICATION	9.698754913356177E-9	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999413821398	WITHOUT_CLASSIFICATION	5.861786023473196E-8	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999849301814	WITHOUT_CLASSIFICATION	1.5069818622855686E-8	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999978137119	WITHOUT_CLASSIFICATION	2.1862880937345493E-8	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999533794324	WITHOUT_CLASSIFICATION	4.662056769609665E-8	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997610683262	WITHOUT_CLASSIFICATION	2.389316737741883E-7	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999761544289	WITHOUT_CLASSIFICATION	2.3845571069577096E-8	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999310671801	WITHOUT_CLASSIFICATION	6.893281991629722E-8	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9999767677363045	WITHOUT_CLASSIFICATION	2.3232263695419887E-5	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998113124069	WITHOUT_CLASSIFICATION	1.886875931473399E-7	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999641940349	WITHOUT_CLASSIFICATION	3.580596514924525E-8	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999929259504	WITHOUT_CLASSIFICATION	7.074049538398934E-9	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999897371622	WITHOUT_CLASSIFICATION	1.0262837744163039E-8	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999790578424	WITHOUT_CLASSIFICATION	2.0942157498160587E-8	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999997571957265	WITHOUT_CLASSIFICATION	2.428042734886206E-6	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999995862537	WITHOUT_CLASSIFICATION	4.1374630511557504E-9	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999939974816	WITHOUT_CLASSIFICATION	6.002518330158595E-9	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999702932593	WITHOUT_CLASSIFICATION	2.970674078494626E-8	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999920100724	WITHOUT_CLASSIFICATION	7.989927662032986E-9	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999884084312	WITHOUT_CLASSIFICATION	1.1591568691184136E-8	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999783986191	WITHOUT_CLASSIFICATION	2.1601380825693935E-8	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999957322967	WITHOUT_CLASSIFICATION	4.267703319267871E-9	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999931208118	WITHOUT_CLASSIFICATION	6.8791881831240336E-9	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999105186872	WITHOUT_CLASSIFICATION	8.948131278593342E-8	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999927877471	WITHOUT_CLASSIFICATION	7.212252890524634E-9	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999897268015	WITHOUT_CLASSIFICATION	1.027319844357206E-8	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999999067557113	WITHOUT_CLASSIFICATION	9.324428872936067E-8	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999999706619086	WITHOUT_CLASSIFICATION	2.933809136777903E-8	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999977434287893	WITHOUT_CLASSIFICATION	2.2565712106712042E-6	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999999744493314	WITHOUT_CLASSIFICATION	2.555066860874709E-8	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.999999958963056	WITHOUT_CLASSIFICATION	4.1036944006278527E-8	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9999401134341998	WITHOUT_CLASSIFICATION	5.9886565800359956E-5	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9999865165801535	WITHOUT_CLASSIFICATION	1.3483419846543658E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999912601660415	WITHOUT_CLASSIFICATION	8.739833958475198E-6	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999950036620151	WITHOUT_CLASSIFICATION	4.996337984948771E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999996870962476	WITHOUT_CLASSIFICATION	3.1290375231079265E-7	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999999685591126	WITHOUT_CLASSIFICATION	3.1440887365649086E-8	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999909843824611	WITHOUT_CLASSIFICATION	9.015617538881172E-6	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999967737401093	WITHOUT_CLASSIFICATION	3.2262598907545546E-6	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999999126251258	WITHOUT_CLASSIFICATION	8.737487414696816E-8	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999986336023862	WITHOUT_CLASSIFICATION	1.3663976138763442E-6	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999996326952431	WITHOUT_CLASSIFICATION	3.6730475688348645E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998399723788	WITHOUT_CLASSIFICATION	1.6002762105696936E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998399723788	WITHOUT_CLASSIFICATION	1.6002762105696936E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999433023458295	WITHOUT_CLASSIFICATION	5.6697654170420845E-5	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999949958649119	WITHOUT_CLASSIFICATION	5.004135088071168E-6	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.99999999773669	WITHOUT_CLASSIFICATION	2.2633101029829326E-9	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999960961452914	WITHOUT_CLASSIFICATION	3.903854708532201E-6	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999955840827821	WITHOUT_CLASSIFICATION	4.415917217902063E-6	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999961241211701	WITHOUT_CLASSIFICATION	3.8758788298905465E-6	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978591030262	WITHOUT_CLASSIFICATION	2.1408969737582174E-6	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.999999974956421	WITHOUT_CLASSIFICATION	2.504357891798635E-8	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999998212112523	WITHOUT_CLASSIFICATION	1.787887477596876E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998399723788	WITHOUT_CLASSIFICATION	1.6002762105696936E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999986506714154	WITHOUT_CLASSIFICATION	1.3493285846367213E-6	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999999002264444	WITHOUT_CLASSIFICATION	9.977355555949624E-8	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999991809164979	WITHOUT_CLASSIFICATION	8.190835022095245E-7	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.999999938133691	WITHOUT_CLASSIFICATION	6.186630899073558E-8	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999968168471745	WITHOUT_CLASSIFICATION	3.183152825526967E-6	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999996418734407	WITHOUT_CLASSIFICATION	3.581265591867717E-7	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999999902789208	WITHOUT_CLASSIFICATION	9.721079147718776E-9	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999993255184051	WITHOUT_CLASSIFICATION	6.74481595031667E-7	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999996393395952	WITHOUT_CLASSIFICATION	3.6066040470478164E-7	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999947986283707	WITHOUT_CLASSIFICATION	5.201371629285427E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999433023458295	WITHOUT_CLASSIFICATION	5.6697654170420845E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998399723788	WITHOUT_CLASSIFICATION	1.6002762105696936E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999991809164979	WITHOUT_CLASSIFICATION	8.190835022095245E-7	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.999999938133691	WITHOUT_CLASSIFICATION	6.186630899073558E-8	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999968168471745	WITHOUT_CLASSIFICATION	3.183152825526967E-6	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999970119142255	WITHOUT_CLASSIFICATION	2.9880857743582044E-6	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9999926067957222	WITHOUT_CLASSIFICATION	7.393204277886686E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999976508280175	WITHOUT_CLASSIFICATION	2.3491719825931625E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999706797	WITHOUT_CLASSIFICATION	2.932022555103586E-11	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999855342760223	WITHOUT_CLASSIFICATION	1.4465723977648839E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999855342760223	WITHOUT_CLASSIFICATION	1.4465723977648839E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999855342760223	WITHOUT_CLASSIFICATION	1.4465723977648839E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999990284911016	WITHOUT_CLASSIFICATION	9.71508898415651E-7	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999967179788929	WITHOUT_CLASSIFICATION	3.282021107168557E-6	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999964082619176	WITHOUT_CLASSIFICATION	3.5917380824927963E-6	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999993974857994	WITHOUT_CLASSIFICATION	6.025142005821205E-7	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999995822065448	WITHOUT_CLASSIFICATION	4.1779345509267485E-7	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999999903733718	WITHOUT_CLASSIFICATION	9.626628213476259E-9	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.999980282145683	WITHOUT_CLASSIFICATION	1.971785431696611E-5	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999977612168839	WITHOUT_CLASSIFICATION	2.2387831162195313E-6	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999817401636	WITHOUT_CLASSIFICATION	1.8259836519418652E-8	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.999999797312668	WITHOUT_CLASSIFICATION	2.0268733204969125E-7	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9999908850273105	WITHOUT_CLASSIFICATION	9.114972689517172E-6	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999999953678229	WITHOUT_CLASSIFICATION	4.632177086130757E-9	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9999368447808146	WITHOUT_CLASSIFICATION	6.31552191854193E-5	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.99999999103651	WITHOUT_CLASSIFICATION	8.963490010527493E-9	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.999999721525082	WITHOUT_CLASSIFICATION	2.784749180658107E-7	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999966386376167	WITHOUT_CLASSIFICATION	3.3613623833655355E-6	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9996140073044432	WITHOUT_CLASSIFICATION	3.8599269555693067E-4	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9975915962233591	WITHOUT_CLASSIFICATION	0.002408403776640888	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999980214910039	WITHOUT_CLASSIFICATION	1.978508996035438E-6	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999980623436658	WITHOUT_CLASSIFICATION	1.937656334102013E-6	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999997921123944	WITHOUT_CLASSIFICATION	2.078876055671179E-7	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.999992639183127	WITHOUT_CLASSIFICATION	7.360816873040736E-6	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999975865010169	WITHOUT_CLASSIFICATION	2.4134989830218883E-6	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999999883178903	WITHOUT_CLASSIFICATION	1.1682109705170379E-8	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999999626299071	WITHOUT_CLASSIFICATION	3.737009280265475E-8	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999761555143415	WITHOUT_CLASSIFICATION	2.3844485658510902E-5	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999860697848708	WITHOUT_CLASSIFICATION	1.3930215129151628E-5	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999991619185326	WITHOUT_CLASSIFICATION	8.380814675375282E-7	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999996436296786	WITHOUT_CLASSIFICATION	3.5637032128878456E-7	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9999979893826156	WITHOUT_CLASSIFICATION	2.0106173843560086E-6	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999991686651621	WITHOUT_CLASSIFICATION	8.313348378692407E-7	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9999950454297811	WITHOUT_CLASSIFICATION	4.95457021884621E-6	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999999694071926	WITHOUT_CLASSIFICATION	3.059280740231595E-8	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.999911497797791	WITHOUT_CLASSIFICATION	8.850220220911631E-5	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9999504367242313	WITHOUT_CLASSIFICATION	4.95632757686936E-5	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9999998524931891	WITHOUT_CLASSIFICATION	1.4750681087583948E-7	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999988430201867	WITHOUT_CLASSIFICATION	1.1569798133673692E-6	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9999151092053539	WITHOUT_CLASSIFICATION	8.489079464616004E-5	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.999999999587842	WITHOUT_CLASSIFICATION	4.121579209001003E-10	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.99999892891792	WITHOUT_CLASSIFICATION	1.0710820799635723E-6	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999985458360527	WITHOUT_CLASSIFICATION	1.454163947195729E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999902865157607	WITHOUT_CLASSIFICATION	9.7134842392962E-5	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999462213670501	WITHOUT_CLASSIFICATION	5.3778632949918334E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999902865157607	WITHOUT_CLASSIFICATION	9.7134842392962E-5	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999998705447214	WITHOUT_CLASSIFICATION	1.2945527858670234E-7	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999988329133865	WITHOUT_CLASSIFICATION	1.1670866134370839E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999745880411222	WITHOUT_CLASSIFICATION	2.54119588778262E-5	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999998753441379	WITHOUT_CLASSIFICATION	1.2465586205607517E-7	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999999661896772	WITHOUT_CLASSIFICATION	3.381032276305815E-8	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.999999927625089	WITHOUT_CLASSIFICATION	7.237491096986744E-8	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999960123455839	WITHOUT_CLASSIFICATION	3.987654416110686E-6	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999998359901721	WITHOUT_CLASSIFICATION	1.6400982799145157E-7	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.999999758434372	WITHOUT_CLASSIFICATION	2.4156562791779845E-7	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999998176854807	WITHOUT_CLASSIFICATION	1.8231451931402138E-7	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999999078719856	WITHOUT_CLASSIFICATION	9.212801448035842E-8	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999986760330812	WITHOUT_CLASSIFICATION	1.3239669187051238E-6	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999983769742606	WITHOUT_CLASSIFICATION	1.623025739336342E-6	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999999818349289	WITHOUT_CLASSIFICATION	1.8165071104085986E-8	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999962887831212	WITHOUT_CLASSIFICATION	3.7112168788871435E-6	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999984178464347	WITHOUT_CLASSIFICATION	1.5821535653085208E-6	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.99999999503451	WITHOUT_CLASSIFICATION	4.965490012777646E-9	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9999952311163566	WITHOUT_CLASSIFICATION	4.768883643357724E-6	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999999414612964	WITHOUT_CLASSIFICATION	5.853870339051795E-8	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999998998706073	WITHOUT_CLASSIFICATION	1.0012939269578983E-7	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999999746416861	WITHOUT_CLASSIFICATION	2.5358313896205756E-8	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999994445037511	WITHOUT_CLASSIFICATION	5.554962488618334E-7	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999971858751862	WITHOUT_CLASSIFICATION	2.814124813785266E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999995426846815	WITHOUT_CLASSIFICATION	4.573153184509974E-7	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999993171912898	WITHOUT_CLASSIFICATION	6.828087103313428E-7	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.999999799681311	WITHOUT_CLASSIFICATION	2.0031868901945952E-7	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999999181691638	WITHOUT_CLASSIFICATION	8.183083631077438E-8	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999987747525796	WITHOUT_CLASSIFICATION	1.2252474203756623E-6	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9999383877553415	WITHOUT_CLASSIFICATION	6.161224465850459E-5	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9999998141966465	WITHOUT_CLASSIFICATION	1.8580335349710648E-7	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999921375257655	WITHOUT_CLASSIFICATION	7.862474234401916E-6	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999985760644696	WITHOUT_CLASSIFICATION	1.4239355304277315E-6	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999999996891904	WITHOUT_CLASSIFICATION	3.1080961895062187E-10	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999754262615044	WITHOUT_CLASSIFICATION	2.457373849558504E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.999999278973616	WITHOUT_CLASSIFICATION	7.210263841700788E-7	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999994944230808	WITHOUT_CLASSIFICATION	5.0557691919284E-7	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999874217999	WITHOUT_CLASSIFICATION	1.2578200095510875E-8	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9999982321673732	WITHOUT_CLASSIFICATION	1.767832626830363E-6	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.99999892891792	WITHOUT_CLASSIFICATION	1.0710820799635723E-6	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999995995558141	WITHOUT_CLASSIFICATION	4.0044418601475886E-7	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999996163666995	WITHOUT_CLASSIFICATION	3.836333004780926E-7	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999996214668831	WITHOUT_CLASSIFICATION	3.785331167501522E-7	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999999343454407	WITHOUT_CLASSIFICATION	6.565455928649284E-8	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999462213670501	WITHOUT_CLASSIFICATION	5.3778632949918334E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999920837221005	WITHOUT_CLASSIFICATION	7.916277899507398E-6	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999958616974257	WITHOUT_CLASSIFICATION	4.1383025743092755E-6	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999995532109082	WITHOUT_CLASSIFICATION	4.467890918601588E-7	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.999994328994201	WITHOUT_CLASSIFICATION	5.67100579899074E-6	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999999689530785	WITHOUT_CLASSIFICATION	3.104692153050439E-8	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999953188428358	WITHOUT_CLASSIFICATION	4.681157164186449E-6	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9999995122341402	WITHOUT_CLASSIFICATION	4.87765859824403E-7	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999953051018565	WITHOUT_CLASSIFICATION	4.69489814347548E-6	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999999171145821	WITHOUT_CLASSIFICATION	8.28854178578478E-8	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9999537831677131	WITHOUT_CLASSIFICATION	4.621683228703281E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999986308575579	WITHOUT_CLASSIFICATION	1.3691424421813484E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999968390498933	WITHOUT_CLASSIFICATION	3.1609501067317767E-6	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999976236958106	WITHOUT_CLASSIFICATION	2.376304189459173E-6	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9999987397713835	WITHOUT_CLASSIFICATION	1.2602286164653818E-6	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999909285163087	WITHOUT_CLASSIFICATION	9.071483691280508E-6	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999999667957307	WITHOUT_CLASSIFICATION	3.320426939191531E-8	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9999899762741526	WITHOUT_CLASSIFICATION	1.0023725847267947E-5	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999999639033732	WITHOUT_CLASSIFICATION	3.609662670883697E-8	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999979440209699	WITHOUT_CLASSIFICATION	2.055979030221644E-6	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999999601590778	WITHOUT_CLASSIFICATION	3.984092216715299E-8	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999995316894895	WITHOUT_CLASSIFICATION	4.683105105909655E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999979440209699	WITHOUT_CLASSIFICATION	2.055979030221644E-6	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999999779596802	WITHOUT_CLASSIFICATION	2.2040319714377807E-8	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999967655643165	WITHOUT_CLASSIFICATION	3.2344356833747425E-6	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999999526791522	WITHOUT_CLASSIFICATION	4.732084769589482E-8	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.999999621708029	WITHOUT_CLASSIFICATION	3.782919709870801E-7	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999999962834135	WITHOUT_CLASSIFICATION	3.7165863757332716E-9	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999999546796592	WITHOUT_CLASSIFICATION	4.532034069437803E-8	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999999935631216	WITHOUT_CLASSIFICATION	6.436878432738371E-9	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999999040964466	WITHOUT_CLASSIFICATION	9.590355337692556E-8	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999993663187844	WITHOUT_CLASSIFICATION	6.336812155452463E-7	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999999958195133	WITHOUT_CLASSIFICATION	4.180486696761537E-9	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.999998185330518	WITHOUT_CLASSIFICATION	1.8146694820353871E-6	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999999938089104	WITHOUT_CLASSIFICATION	6.191089683223485E-9	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999999997829541	WITHOUT_CLASSIFICATION	2.170459803156292E-10	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999999963916555	WITHOUT_CLASSIFICATION	3.608344520249452E-9	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999991833868304	WITHOUT_CLASSIFICATION	8.166131696060406E-7	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999977705375145	WITHOUT_CLASSIFICATION	2.2294624855582156E-6	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.999999060787752	WITHOUT_CLASSIFICATION	9.392122478958357E-7	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999999008768882	WITHOUT_CLASSIFICATION	9.912311191871783E-8	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999999713907625	WITHOUT_CLASSIFICATION	2.860923747045049E-8	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999999874951822	WITHOUT_CLASSIFICATION	1.2504817746320564E-8	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.99999968854666	WITHOUT_CLASSIFICATION	3.114533399972325E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999912601660415	WITHOUT_CLASSIFICATION	8.739833958475198E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999912601660415	WITHOUT_CLASSIFICATION	8.739833958475198E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999969307724949	WITHOUT_CLASSIFICATION	3.0692275050559837E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998399723788	WITHOUT_CLASSIFICATION	1.6002762105696936E-7	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999998459710624	WITHOUT_CLASSIFICATION	1.5402893762053024E-7	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999938872952	WITHOUT_CLASSIFICATION	6.112704743982381E-9	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999938872952	WITHOUT_CLASSIFICATION	6.112704743982381E-9	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999932706763	WITHOUT_CLASSIFICATION	6.729323656982569E-9	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9999999950706273	WITHOUT_CLASSIFICATION	4.929372656816486E-9	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9999999962633215	WITHOUT_CLASSIFICATION	3.736678520556716E-9	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999999173787594	WITHOUT_CLASSIFICATION	8.262124067670752E-8	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999998714925986	WITHOUT_CLASSIFICATION	1.2850740140081461E-7	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9999659882629887	WITHOUT_CLASSIFICATION	3.401173701139163E-5	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999981443265181	WITHOUT_CLASSIFICATION	1.8556734818709762E-6	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9999969499448573	WITHOUT_CLASSIFICATION	3.0500551427040287E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999999481958187	WITHOUT_CLASSIFICATION	5.180418124566912E-8	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999999481958187	WITHOUT_CLASSIFICATION	5.180418124566912E-8	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999990023439687	WITHOUT_CLASSIFICATION	9.97656031347686E-7	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999990023439687	WITHOUT_CLASSIFICATION	9.97656031347686E-7	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.999992591723502	WITHOUT_CLASSIFICATION	7.40827649801951E-6	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999998352188609	WITHOUT_CLASSIFICATION	1.6478113914336123E-7	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999987569377377	WITHOUT_CLASSIFICATION	1.243062262386161E-6	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9999801106059013	WITHOUT_CLASSIFICATION	1.9889394098701202E-5	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999999925351682	WITHOUT_CLASSIFICATION	7.464831745214071E-9	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999999887640085	WITHOUT_CLASSIFICATION	1.1235991456025558E-8	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999965480788742	WITHOUT_CLASSIFICATION	3.451921125960693E-6	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999970193327538	WITHOUT_CLASSIFICATION	2.980667246223069E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9999810707449385	WITHOUT_CLASSIFICATION	1.8929255061449315E-5	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999969859878172	WITHOUT_CLASSIFICATION	3.01401218277903E-6	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999999254390092	WITHOUT_CLASSIFICATION	7.456099084411774E-8	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999999302190649	WITHOUT_CLASSIFICATION	6.978093517065874E-8	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999999302190649	WITHOUT_CLASSIFICATION	6.978093517065874E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999518478844	WITHOUT_CLASSIFICATION	4.815211556350565E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999775017101	WITHOUT_CLASSIFICATION	2.2498289892982337E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999775017101	WITHOUT_CLASSIFICATION	2.2498289892982337E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999518478844	WITHOUT_CLASSIFICATION	4.815211556350565E-8	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999992814934358	WITHOUT_CLASSIFICATION	7.185065642086137E-7	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9998719058589183	WITHOUT_CLASSIFICATION	1.280941410817332E-4	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9999976634818222	WITHOUT_CLASSIFICATION	2.336518177803752E-6	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999904253670411	WITHOUT_CLASSIFICATION	9.574632958881162E-6	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999949989236686	WITHOUT_CLASSIFICATION	5.001076331406912E-6	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999988338164589	WITHOUT_CLASSIFICATION	1.166183541017692E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999999129031124	WITHOUT_CLASSIFICATION	8.709688756064697E-8	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999996793544453	WITHOUT_CLASSIFICATION	3.2064555465341066E-7	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999996793544453	WITHOUT_CLASSIFICATION	3.2064555465341066E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999993295974322	WITHOUT_CLASSIFICATION	6.704025677953068E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999993295974322	WITHOUT_CLASSIFICATION	6.704025677953068E-7	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999948678399517	WITHOUT_CLASSIFICATION	5.132160048296558E-6	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.999997797027138	WITHOUT_CLASSIFICATION	2.202972861979949E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.999996778750493	WITHOUT_CLASSIFICATION	3.221249506985199E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.999996778750493	WITHOUT_CLASSIFICATION	3.221249506985199E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.999996778750493	WITHOUT_CLASSIFICATION	3.221249506985199E-6	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999992886325116	WITHOUT_CLASSIFICATION	7.113674882672164E-7	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.999999849028088	WITHOUT_CLASSIFICATION	1.509719120064576E-7	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999996980512439	WITHOUT_CLASSIFICATION	3.01948756209245E-7	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.999999952425518	WITHOUT_CLASSIFICATION	4.757448193278549E-8	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999999351178686	WITHOUT_CLASSIFICATION	6.488213142590336E-8	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9999518389228752	WITHOUT_CLASSIFICATION	4.816107712483412E-5	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999998161636385	WITHOUT_CLASSIFICATION	1.8383636154187672E-7	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9999994465489138	WITHOUT_CLASSIFICATION	5.534510863031094E-7	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999997609511792	WITHOUT_CLASSIFICATION	2.390488208925904E-7	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999995644813997	WITHOUT_CLASSIFICATION	4.355186002923632E-7	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999888226613854	WITHOUT_CLASSIFICATION	1.117733861451647E-5	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.999999913330869	WITHOUT_CLASSIFICATION	8.666913093305904E-8	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999910031737	WITHOUT_CLASSIFICATION	8.99682633195736E-9	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9999999978387734	WITHOUT_CLASSIFICATION	2.1612267202155127E-9	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999998709601648	WITHOUT_CLASSIFICATION	1.2903983508501858E-7	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999994284961746	WITHOUT_CLASSIFICATION	5.715038253372331E-7	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.999981059802069	WITHOUT_CLASSIFICATION	1.894019793099555E-5	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9998349107990603	WITHOUT_CLASSIFICATION	1.6508920093966507E-4	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999999960846904	WITHOUT_CLASSIFICATION	3.915309702387512E-9	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999999992670152	WITHOUT_CLASSIFICATION	7.329846897154706E-10	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999999964180842	WITHOUT_CLASSIFICATION	3.5819157128108384E-9	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999986403836972	WITHOUT_CLASSIFICATION	1.3596163026981842E-6	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999990608239545	WITHOUT_CLASSIFICATION	9.391760455202026E-7	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9999982828566468	WITHOUT_CLASSIFICATION	1.7171433532393248E-6	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9999993809743356	WITHOUT_CLASSIFICATION	6.190256644348128E-7	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999997383681587	WITHOUT_CLASSIFICATION	2.616318413573726E-7	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999982027765927	WITHOUT_CLASSIFICATION	1.7972234072735923E-6	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999999945344404	WITHOUT_CLASSIFICATION	5.465559460693538E-9	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999930839749419	WITHOUT_CLASSIFICATION	6.916025058180348E-6	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999972800457262	WITHOUT_CLASSIFICATION	2.719954273771234E-6	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999932418776	WITHOUT_CLASSIFICATION	6.758122327080492E-9	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999931327773376	WITHOUT_CLASSIFICATION	6.867222662494388E-6	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999986641250841	WITHOUT_CLASSIFICATION	1.3358749159385347E-6	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9999994025595315	WITHOUT_CLASSIFICATION	5.974404684087628E-7	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999744569729091	WITHOUT_CLASSIFICATION	2.5543027090914763E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999996705305065	WITHOUT_CLASSIFICATION	3.29469493406381E-7	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999996250158968	WITHOUT_CLASSIFICATION	3.749841032238801E-7	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999998685513031	WITHOUT_CLASSIFICATION	1.3144869686715364E-7	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999999722438515	WITHOUT_CLASSIFICATION	2.775614847175842E-8	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999940826199	WITHOUT_CLASSIFICATION	5.91738005894119E-9	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999982193671186	WITHOUT_CLASSIFICATION	1.780632881417585E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999878905531	WITHOUT_CLASSIFICATION	1.2109447009059747E-8	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999598052688843	WITHOUT_CLASSIFICATION	4.0194731115787955E-5	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999999932979947	WITHOUT_CLASSIFICATION	6.70200524638073E-9	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999954061829668	WITHOUT_CLASSIFICATION	4.593817033218216E-6	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.999999709343462	WITHOUT_CLASSIFICATION	2.906565379093293E-7	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999996157562299	WITHOUT_CLASSIFICATION	3.8424377017299565E-7	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999998334157898	WITHOUT_CLASSIFICATION	1.6658421016154787E-7	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999973929966878	WITHOUT_CLASSIFICATION	2.607003312247219E-6	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999983370392467	WITHOUT_CLASSIFICATION	1.662960753258915E-6	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999926987334709	WITHOUT_CLASSIFICATION	7.3012665291276105E-6	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9999997368937251	WITHOUT_CLASSIFICATION	2.631062749681015E-7	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999999690503484	WITHOUT_CLASSIFICATION	3.094965156581998E-8	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999939421346806	WITHOUT_CLASSIFICATION	6.0578653193988095E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9999909984234046	WITHOUT_CLASSIFICATION	9.00157659541994E-6	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9999244138892303	WITHOUT_CLASSIFICATION	7.558611076976722E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999598052688843	WITHOUT_CLASSIFICATION	4.0194731115787955E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999598052688843	WITHOUT_CLASSIFICATION	4.0194731115787955E-5	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999996606748671	WITHOUT_CLASSIFICATION	3.3932513295919015E-7	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999968466217658	WITHOUT_CLASSIFICATION	3.153378234173542E-6	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999688239845	WITHOUT_CLASSIFICATION	3.117601553880696E-8	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999998035218487	WITHOUT_CLASSIFICATION	1.9647815133960022E-7	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999998035218487	WITHOUT_CLASSIFICATION	1.9647815133960022E-7	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999999920698545	WITHOUT_CLASSIFICATION	7.930145580526366E-9	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999801590734	WITHOUT_CLASSIFICATION	1.984092656978769E-8	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9999998927646392	WITHOUT_CLASSIFICATION	1.0723536079172826E-7	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9993823849906694	WITHOUT_CLASSIFICATION	6.176150093306194E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999280667176779	WITHOUT_CLASSIFICATION	7.193328232213516E-5	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9999999997518847	WITHOUT_CLASSIFICATION	2.481152639138485E-10	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999998752310301	WITHOUT_CLASSIFICATION	1.2476897005208418E-7	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999983232381492	WITHOUT_CLASSIFICATION	1.6767618507453006E-6	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9999671368801252	WITHOUT_CLASSIFICATION	3.2863119874928675E-5	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.999959816977049	WITHOUT_CLASSIFICATION	4.018302295087802E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999999945832396	WITHOUT_CLASSIFICATION	5.416760313930455E-9	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999999967425695	WITHOUT_CLASSIFICATION	3.2574305404486296E-9	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999280667176779	WITHOUT_CLASSIFICATION	7.193328232213516E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999481958187	WITHOUT_CLASSIFICATION	5.180418124566912E-8	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999481958187	WITHOUT_CLASSIFICATION	5.180418124566912E-8	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999989965639708	WITHOUT_CLASSIFICATION	1.0034360291713638E-6	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999987898647079	WITHOUT_CLASSIFICATION	1.2101352920875093E-6	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999999670093637	WITHOUT_CLASSIFICATION	3.2990636307255786E-8	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999940127082995	WITHOUT_CLASSIFICATION	5.987291700595516E-6	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9999981620103298	WITHOUT_CLASSIFICATION	1.8379896702364652E-6	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999994096353491	WITHOUT_CLASSIFICATION	5.903646508399759E-7	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999994096353491	WITHOUT_CLASSIFICATION	5.903646508399759E-7	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999401426519692	WITHOUT_CLASSIFICATION	5.9857348030778506E-5	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9999931268245927	WITHOUT_CLASSIFICATION	6.873175407205697E-6	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9999997364195148	WITHOUT_CLASSIFICATION	2.6358048517935303E-7	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9999938093201656	WITHOUT_CLASSIFICATION	6.190679834440381E-6	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9999923257683726	WITHOUT_CLASSIFICATION	7.674231627416022E-6	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999822189195552	WITHOUT_CLASSIFICATION	1.7781080444842005E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999990941004022	WITHOUT_CLASSIFICATION	9.058995978311193E-7	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9999912425000163	WITHOUT_CLASSIFICATION	8.757499983851682E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999739095696	WITHOUT_CLASSIFICATION	2.6090430259231408E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998988093995	WITHOUT_CLASSIFICATION	1.0119060053122493E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999989102256516	WITHOUT_CLASSIFICATION	1.0897743484242335E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998788595911	WITHOUT_CLASSIFICATION	1.2114040889346325E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999975596331833	WITHOUT_CLASSIFICATION	2.4403668167903646E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998003726078	WITHOUT_CLASSIFICATION	1.9962739207355286E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999998339072692	WITHOUT_CLASSIFICATION	1.660927306759412E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998616658037	WITHOUT_CLASSIFICATION	1.3833419623214547E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999951800179	WITHOUT_CLASSIFICATION	4.819981975027966E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999989620647842	WITHOUT_CLASSIFICATION	1.0379352158282991E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999922204944054	WITHOUT_CLASSIFICATION	7.77950559455138E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997983010415	WITHOUT_CLASSIFICATION	2.0169895843121647E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999994667063631	WITHOUT_CLASSIFICATION	5.332936369937288E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999213077831	WITHOUT_CLASSIFICATION	7.869221691195799E-8	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999999764783774	WITHOUT_CLASSIFICATION	2.352162262996408E-8	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999999106969699	WITHOUT_CLASSIFICATION	8.930303010876907E-8	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999999582568619	WITHOUT_CLASSIFICATION	4.174313811744323E-8	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999998671045774	WITHOUT_CLASSIFICATION	1.3289542244065637E-7	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999990890346081	WITHOUT_CLASSIFICATION	9.109653917470457E-7	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999993203390698	WITHOUT_CLASSIFICATION	6.79660930248056E-7	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999999428699363	WITHOUT_CLASSIFICATION	5.713006365436998E-8	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9999986437213904	WITHOUT_CLASSIFICATION	1.3562786097124166E-6	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999999263857466	WITHOUT_CLASSIFICATION	7.361425331195059E-8	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.999999343567709	WITHOUT_CLASSIFICATION	6.564322909471464E-7	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999989621962343	WITHOUT_CLASSIFICATION	1.0378037656556298E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999989621962343	WITHOUT_CLASSIFICATION	1.0378037656556298E-6	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999998082974296	WITHOUT_CLASSIFICATION	1.917025703379186E-7	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999996851503712	WITHOUT_CLASSIFICATION	3.148496288119007E-7	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999984082730754	WITHOUT_CLASSIFICATION	1.591726924636502E-6	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999994916866651	WITHOUT_CLASSIFICATION	5.08313334835219E-7	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999994916866651	WITHOUT_CLASSIFICATION	5.08313334835219E-7	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999995347218641	WITHOUT_CLASSIFICATION	4.6527813583947493E-7	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9999905074006312	WITHOUT_CLASSIFICATION	9.492599368773185E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999998184209545	WITHOUT_CLASSIFICATION	1.815790455699133E-7	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.999999077190906	WITHOUT_CLASSIFICATION	9.228090940853472E-7	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999989727489956	WITHOUT_CLASSIFICATION	1.0272510044154746E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998788595911	WITHOUT_CLASSIFICATION	1.2114040889346325E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998483195776	WITHOUT_CLASSIFICATION	1.516804224335961E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998003726078	WITHOUT_CLASSIFICATION	1.9962739207355286E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998616658037	WITHOUT_CLASSIFICATION	1.3833419623214547E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999922204944054	WITHOUT_CLASSIFICATION	7.77950559455138E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997983010415	WITHOUT_CLASSIFICATION	2.0169895843121647E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999984525663328	WITHOUT_CLASSIFICATION	1.5474336672938354E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999213077831	WITHOUT_CLASSIFICATION	7.869221691195799E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998426622067	WITHOUT_CLASSIFICATION	1.5733779342724963E-7	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999775017101	WITHOUT_CLASSIFICATION	2.2498289892982337E-8	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999989639998847	WITHOUT_CLASSIFICATION	1.0360001151832386E-6	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999985346901887	WITHOUT_CLASSIFICATION	1.4653098113191943E-6	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999980473548099	WITHOUT_CLASSIFICATION	1.952645190100228E-6	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9999992472273525	WITHOUT_CLASSIFICATION	7.527726475653509E-7	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.999999093781258	WITHOUT_CLASSIFICATION	9.062187419742148E-7	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999997991012288	WITHOUT_CLASSIFICATION	2.0089877117589462E-7	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.999989338780155	WITHOUT_CLASSIFICATION	1.066121984506279E-5	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9999979949238473	WITHOUT_CLASSIFICATION	2.0050761526687685E-6	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999997972047636	WITHOUT_CLASSIFICATION	2.0279523641709876E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999997831401818	WITHOUT_CLASSIFICATION	2.16859818275157E-7	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999997711501915	WITHOUT_CLASSIFICATION	2.2884980854785004E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999963104135408	WITHOUT_CLASSIFICATION	3.6895864592701873E-6	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999977897405355	WITHOUT_CLASSIFICATION	2.2102594643818854E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999866399760637	WITHOUT_CLASSIFICATION	1.3360023936378611E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999997810516392	WITHOUT_CLASSIFICATION	2.1894836079924284E-7	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9999996840081176	WITHOUT_CLASSIFICATION	3.1599188239790417E-7	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9999877157583502	WITHOUT_CLASSIFICATION	1.2284241649791502E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.999996985118561	WITHOUT_CLASSIFICATION	3.0148814390193562E-6	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999593918562735	WITHOUT_CLASSIFICATION	4.060814372654615E-5	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999593918562735	WITHOUT_CLASSIFICATION	4.060814372654615E-5	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999997428542873	WITHOUT_CLASSIFICATION	2.571457127085716E-7	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999913461527598	WITHOUT_CLASSIFICATION	8.653847240298775E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999988945760186	WITHOUT_CLASSIFICATION	1.105423981308563E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999988945760186	WITHOUT_CLASSIFICATION	1.105423981308563E-6	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.999999859266871	WITHOUT_CLASSIFICATION	1.4073312911174716E-7	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999990943306977	WITHOUT_CLASSIFICATION	9.056693022539899E-7	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9999996357871341	WITHOUT_CLASSIFICATION	3.6421286583487444E-7	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999999703243685	WITHOUT_CLASSIFICATION	2.9675631470170862E-8	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999999582137571	WITHOUT_CLASSIFICATION	4.178624293191548E-8	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999999568297584	WITHOUT_CLASSIFICATION	4.3170241642483625E-8	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999999613055114	WITHOUT_CLASSIFICATION	3.869448852504251E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999693052732	WITHOUT_CLASSIFICATION	3.0694726846297144E-8	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999995124336137	WITHOUT_CLASSIFICATION	4.875663862798359E-7	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9999994125936845	WITHOUT_CLASSIFICATION	5.874063154964189E-7	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999355122854824	WITHOUT_CLASSIFICATION	6.448771451762597E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999866399760637	WITHOUT_CLASSIFICATION	1.3360023936378611E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9999999899436497	WITHOUT_CLASSIFICATION	1.0056350216635988E-8	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999433023458295	WITHOUT_CLASSIFICATION	5.6697654170420845E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999950036620151	WITHOUT_CLASSIFICATION	4.996337984948771E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999681174142	WITHOUT_CLASSIFICATION	3.188258587546924E-8	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9998779027809572	WITHOUT_CLASSIFICATION	1.2209721904274346E-4	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999993836191509	WITHOUT_CLASSIFICATION	6.163808491021773E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999999774420947	WITHOUT_CLASSIFICATION	2.2557905288208313E-8	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997981547643796	WITHOUT_CLASSIFICATION	2.0184523562033542E-4	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997981547643796	WITHOUT_CLASSIFICATION	2.0184523562033542E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9999363203686265	WITHOUT_CLASSIFICATION	6.367963137350853E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999336208533	WITHOUT_CLASSIFICATION	6.637914669012743E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999693052732	WITHOUT_CLASSIFICATION	3.0694726846297144E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999693052732	WITHOUT_CLASSIFICATION	3.0694726846297144E-8	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.999999389876283	WITHOUT_CLASSIFICATION	6.101237170927101E-7	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9998477010174628	WITHOUT_CLASSIFICATION	1.5229898253710494E-4	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9999938878233743	WITHOUT_CLASSIFICATION	6.112176625783116E-6	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.999994870662006	WITHOUT_CLASSIFICATION	5.129337993959661E-6	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999979862951642	WITHOUT_CLASSIFICATION	2.0137048357207985E-6	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.999998125882012	WITHOUT_CLASSIFICATION	1.8741179879842446E-6	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999938200262908	WITHOUT_CLASSIFICATION	6.179973709214854E-6	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999999373238159	WITHOUT_CLASSIFICATION	6.26761842126211E-8	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999998911861528	WITHOUT_CLASSIFICATION	1.0881384714241984E-7	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9999998640042991	WITHOUT_CLASSIFICATION	1.3599570081777825E-7	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999999488944717	WITHOUT_CLASSIFICATION	5.1105528293656836E-8	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999994776053534	WITHOUT_CLASSIFICATION	5.223946465940351E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999994776053534	WITHOUT_CLASSIFICATION	5.223946465940351E-6	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999998958849504	WITHOUT_CLASSIFICATION	1.0411504955945366E-7	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.999998420031531	WITHOUT_CLASSIFICATION	1.5799684689874976E-6	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.999998420031531	WITHOUT_CLASSIFICATION	1.5799684689874976E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999989279099621	WITHOUT_CLASSIFICATION	1.0720900378578318E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999989279099621	WITHOUT_CLASSIFICATION	1.0720900378578318E-6	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999930429072652	WITHOUT_CLASSIFICATION	6.95709273473771E-6	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999926136778	WITHOUT_CLASSIFICATION	7.386322169723117E-9	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999926136778	WITHOUT_CLASSIFICATION	7.386322169723117E-9	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999997978518327	WITHOUT_CLASSIFICATION	2.0214816743804628E-7	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999995036581727	WITHOUT_CLASSIFICATION	4.96341827275786E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999861465780973	WITHOUT_CLASSIFICATION	1.385342190269609E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999984138079826	WITHOUT_CLASSIFICATION	1.5861920174737511E-6	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999015536537	WITHOUT_CLASSIFICATION	9.844634619833776E-8	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9999976842064536	WITHOUT_CLASSIFICATION	2.315793546339229E-6	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9997135748660654	WITHOUT_CLASSIFICATION	2.864251339345759E-4	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999876254599874	WITHOUT_CLASSIFICATION	1.2374540012485599E-5	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999998979504813	WITHOUT_CLASSIFICATION	1.020495186951455E-7	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.999999779093963	WITHOUT_CLASSIFICATION	2.2090603705603944E-7	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999997525070033	WITHOUT_CLASSIFICATION	2.474929965959024E-7	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.999999992496694	WITHOUT_CLASSIFICATION	7.503305959038755E-9	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999375678036737	WITHOUT_CLASSIFICATION	6.243219632623718E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999995036581727	WITHOUT_CLASSIFICATION	4.96341827275786E-7	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999996973708047	WITHOUT_CLASSIFICATION	3.026291953036264E-7	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999999901489789	WITHOUT_CLASSIFICATION	9.851021162354322E-9	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999998933437123	WITHOUT_CLASSIFICATION	1.0665628768364243E-7	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999755607962524	WITHOUT_CLASSIFICATION	2.4439203747601738E-5	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999999936238242	WITHOUT_CLASSIFICATION	6.3761758775105425E-9	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999964204547976	WITHOUT_CLASSIFICATION	3.579545202206113E-6	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9999923034007808	WITHOUT_CLASSIFICATION	7.696599219211289E-6	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999999650494271	WITHOUT_CLASSIFICATION	3.495057280568983E-8	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999998476801638	WITHOUT_CLASSIFICATION	1.5231983610856582E-7	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9999978192217276	WITHOUT_CLASSIFICATION	2.180778272465488E-6	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.999998965867903	WITHOUT_CLASSIFICATION	1.034132096930093E-6	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.99998146770491	WITHOUT_CLASSIFICATION	1.8532295089943893E-5	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999997476108538	WITHOUT_CLASSIFICATION	2.523891462290514E-7	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999541803111641	WITHOUT_CLASSIFICATION	4.5819688835942784E-5	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9999994089872709	WITHOUT_CLASSIFICATION	5.910127290473463E-7	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999985869358577	WITHOUT_CLASSIFICATION	1.4130641423003835E-6	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999982228674029	WITHOUT_CLASSIFICATION	1.7771325971451542E-6	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999995661747759	WITHOUT_CLASSIFICATION	4.338252240504761E-7	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999999285786324	WITHOUT_CLASSIFICATION	7.142136760945285E-8	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999997073513035	WITHOUT_CLASSIFICATION	2.9264869644125313E-7	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999998718183306	WITHOUT_CLASSIFICATION	1.2818166926646907E-7	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9999816158485879	WITHOUT_CLASSIFICATION	1.838415141218577E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999999259061437	WITHOUT_CLASSIFICATION	7.40938562848399E-8	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999889571573127	WITHOUT_CLASSIFICATION	1.104284268733953E-5	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9886114192396733	WITHOUT_CLASSIFICATION	0.011388580760326655	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.999999952407569	WITHOUT_CLASSIFICATION	4.759243104133593E-8	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999981203682488	WITHOUT_CLASSIFICATION	1.8796317512012638E-6	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999983067879551	WITHOUT_CLASSIFICATION	1.6932120448931456E-6	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999896324412165	WITHOUT_CLASSIFICATION	1.0367558783499197E-5	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9989415163012468	WITHOUT_CLASSIFICATION	0.0010584836987531105	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999888476235977	WITHOUT_CLASSIFICATION	1.115237640227599E-5	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999999547670974	WITHOUT_CLASSIFICATION	4.523290261246122E-8	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999996201896368	WITHOUT_CLASSIFICATION	3.7981036316371257E-7	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9999997830358134	WITHOUT_CLASSIFICATION	2.169641866905542E-7	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999709254017531	WITHOUT_CLASSIFICATION	2.907459824682515E-5	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9999442082622114	WITHOUT_CLASSIFICATION	5.5791737788668966E-5	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.999999766027031	WITHOUT_CLASSIFICATION	2.339729690581422E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999889571573127	WITHOUT_CLASSIFICATION	1.104284268733953E-5	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999534154206	WITHOUT_CLASSIFICATION	4.65845793701064E-8	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999999879262642	WITHOUT_CLASSIFICATION	1.2073735691021035E-8	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999999879262642	WITHOUT_CLASSIFICATION	1.2073735691021035E-8	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999998221099868	WITHOUT_CLASSIFICATION	1.7789001312476073E-7	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999998221099868	WITHOUT_CLASSIFICATION	1.7789001312476073E-7	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9988369996187848	WITHOUT_CLASSIFICATION	0.001163000381215184	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999999221265244	WITHOUT_CLASSIFICATION	7.787347552737449E-8	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999998439039338	WITHOUT_CLASSIFICATION	1.5609606628121946E-7	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999987178821316	WITHOUT_CLASSIFICATION	1.2821178685255905E-6	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9999940683001621	WITHOUT_CLASSIFICATION	5.931699837779088E-6	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9999257796069062	WITHOUT_CLASSIFICATION	7.422039309373794E-5	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.999995486313917	WITHOUT_CLASSIFICATION	4.513686083077138E-6	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999995061673498	WITHOUT_CLASSIFICATION	4.938326502170366E-7	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999999862290379	WITHOUT_CLASSIFICATION	1.377096212888019E-8	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999933446273	WITHOUT_CLASSIFICATION	6.6553727237318916E-9	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9999943708431234	WITHOUT_CLASSIFICATION	5.629156876556377E-6	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999977168935931	WITHOUT_CLASSIFICATION	2.2831064070159867E-6	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999998824410268	WITHOUT_CLASSIFICATION	1.1755897331039702E-7	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9999998415858568	WITHOUT_CLASSIFICATION	1.5841414327880187E-7	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9999997295871744	WITHOUT_CLASSIFICATION	2.704128256465854E-7	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999899798519171	WITHOUT_CLASSIFICATION	1.0020148082912498E-5	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999993830459003	WITHOUT_CLASSIFICATION	6.169540995973317E-7	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999681174142	WITHOUT_CLASSIFICATION	3.188258587546924E-8	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9999991116430479	WITHOUT_CLASSIFICATION	8.883569520749349E-7	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999999072417783	WITHOUT_CLASSIFICATION	9.275822160618533E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998426622067	WITHOUT_CLASSIFICATION	1.5733779342724963E-7	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999999072417783	WITHOUT_CLASSIFICATION	9.275822160618533E-8	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9999927127805724	WITHOUT_CLASSIFICATION	7.287219427507764E-6	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999875921670084	WITHOUT_CLASSIFICATION	1.240783299162087E-5	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9998285112917648	WITHOUT_CLASSIFICATION	1.7148870823531558E-4	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999999490916928	WITHOUT_CLASSIFICATION	5.090830736102217E-8	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999992614102144	WITHOUT_CLASSIFICATION	7.38589785587262E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999302492218007	WITHOUT_CLASSIFICATION	6.975077819928834E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999302492218007	WITHOUT_CLASSIFICATION	6.975077819928834E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999970844915644	WITHOUT_CLASSIFICATION	2.915508435664045E-6	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.999988885940756	WITHOUT_CLASSIFICATION	1.111405924393423E-5	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999999936171756	WITHOUT_CLASSIFICATION	6.382824355578363E-9	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999999604638052	WITHOUT_CLASSIFICATION	3.9536194830119E-8	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999999620533617	WITHOUT_CLASSIFICATION	3.794663825383555E-8	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.999997757157254	WITHOUT_CLASSIFICATION	2.2428427460086467E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999992614102144	WITHOUT_CLASSIFICATION	7.38589785587262E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999302492218007	WITHOUT_CLASSIFICATION	6.975077819928834E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999302492218007	WITHOUT_CLASSIFICATION	6.975077819928834E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999970844915644	WITHOUT_CLASSIFICATION	2.915508435664045E-6	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999999970016846	WITHOUT_CLASSIFICATION	2.9983154102534284E-9	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999999343031489	WITHOUT_CLASSIFICATION	6.569685097976919E-8	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9999993924351067	WITHOUT_CLASSIFICATION	6.075648933183764E-7	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999959207919943	WITHOUT_CLASSIFICATION	4.0792080056811305E-6	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999843227927534	WITHOUT_CLASSIFICATION	1.567720724667821E-5	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9999226011729451	WITHOUT_CLASSIFICATION	7.739882705489485E-5	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999998684159338	WITHOUT_CLASSIFICATION	1.3158406625619903E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999884511701473	WITHOUT_CLASSIFICATION	1.1548829852705157E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999884511701473	WITHOUT_CLASSIFICATION	1.1548829852705157E-5	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999897383270984	WITHOUT_CLASSIFICATION	1.0261672901631777E-5	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9999997393743153	WITHOUT_CLASSIFICATION	2.6062568465464793E-7	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999986358302919	WITHOUT_CLASSIFICATION	1.3641697080902232E-6	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9960653054707256	WITHOUT_CLASSIFICATION	0.003934694529274396	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999989117397471	WITHOUT_CLASSIFICATION	1.0882602528922296E-6	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9999978534413256	WITHOUT_CLASSIFICATION	2.1465586742495115E-6	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.99992389645598	WITHOUT_CLASSIFICATION	7.610354401998004E-5	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999997565475318	WITHOUT_CLASSIFICATION	2.434524681499678E-7	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9996647203411378	WITHOUT_CLASSIFICATION	3.3527965886210687E-4	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9999841141498889	WITHOUT_CLASSIFICATION	1.5885850111185878E-5	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999999425680308	WITHOUT_CLASSIFICATION	5.74319691180875E-8	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999907633207614	WITHOUT_CLASSIFICATION	9.23667923854526E-6	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999998110136155	WITHOUT_CLASSIFICATION	1.8898638459471934E-7	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9961990541860836	WITHOUT_CLASSIFICATION	0.0038009458139165236	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9999993685304919	WITHOUT_CLASSIFICATION	6.314695081830021E-7	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999992307636575	WITHOUT_CLASSIFICATION	7.69236342636436E-7	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9997000779010088	WITHOUT_CLASSIFICATION	2.9992209899115397E-4	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999973047639404	WITHOUT_CLASSIFICATION	2.695236059562103E-6	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999975002615776	WITHOUT_CLASSIFICATION	2.499738422382799E-6	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999989187566617	WITHOUT_CLASSIFICATION	1.0812433382917558E-6	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999869258804089	WITHOUT_CLASSIFICATION	1.3074119591074233E-5	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999998785569889	WITHOUT_CLASSIFICATION	1.214430111250371E-7	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9999967632067454	WITHOUT_CLASSIFICATION	3.2367932546184043E-6	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9999926137261631	WITHOUT_CLASSIFICATION	7.386273836944832E-6	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999997595977107	WITHOUT_CLASSIFICATION	2.4040228928842605E-7	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999996391812281	WITHOUT_CLASSIFICATION	3.608187719336405E-7	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999997253977794	WITHOUT_CLASSIFICATION	2.746022205685385E-7	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9999931058440799	WITHOUT_CLASSIFICATION	6.8941559200975115E-6	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999999895265586	WITHOUT_CLASSIFICATION	1.0473441400591185E-8	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999999544996473	WITHOUT_CLASSIFICATION	4.550035269228477E-8	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999991494501673	WITHOUT_CLASSIFICATION	8.505498326295396E-7	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999982404452517	WITHOUT_CLASSIFICATION	1.7595547483939288E-6	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9999989990062118	WITHOUT_CLASSIFICATION	1.0009937881659045E-6	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999998109721635	WITHOUT_CLASSIFICATION	1.8902783651861813E-7	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999988548562692	WITHOUT_CLASSIFICATION	1.1451437308453491E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999988548562692	WITHOUT_CLASSIFICATION	1.1451437308453491E-6	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9999969523824582	WITHOUT_CLASSIFICATION	3.0476175416918686E-6	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.999997074170163	WITHOUT_CLASSIFICATION	2.92582983691791E-6	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999987007584534	WITHOUT_CLASSIFICATION	1.2992415466453994E-6	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999988800892479	WITHOUT_CLASSIFICATION	1.1199107520287412E-6	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999997137612475	WITHOUT_CLASSIFICATION	2.862387525264388E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999518478844	WITHOUT_CLASSIFICATION	4.815211556350565E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999999900526121	WITHOUT_CLASSIFICATION	9.947387821534847E-9	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999740445472286	WITHOUT_CLASSIFICATION	2.5955452771438117E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999728804736034	WITHOUT_CLASSIFICATION	2.711952639655578E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9992640780347078	WITHOUT_CLASSIFICATION	7.359219652921938E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999985808748351	WITHOUT_CLASSIFICATION	1.4191251649957047E-6	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999999652600825	WITHOUT_CLASSIFICATION	3.473991757438824E-8	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9999187417265575	WITHOUT_CLASSIFICATION	8.125827344254991E-5	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9998979813334263	WITHOUT_CLASSIFICATION	1.0201866657357665E-4	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9997240557931419	WITHOUT_CLASSIFICATION	2.7594420685805166E-4	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9670025378790464	WITHOUT_CLASSIFICATION	0.032997462120953495	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999904605414915	WITHOUT_CLASSIFICATION	9.53945850833666E-6	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999984552527698	WITHOUT_CLASSIFICATION	1.5447472301705683E-6	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9999990736453307	WITHOUT_CLASSIFICATION	9.263546694482001E-7	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9999990580557806	WITHOUT_CLASSIFICATION	9.419442194348688E-7	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999999485558229	WITHOUT_CLASSIFICATION	5.144417718981953E-8	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999999737331784	WITHOUT_CLASSIFICATION	2.6266821508344605E-8	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9999992831384196	WITHOUT_CLASSIFICATION	7.168615804834251E-7	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999631501604812	WITHOUT_CLASSIFICATION	3.684983951881744E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999993610973	WITHOUT_CLASSIFICATION	6.389026108368562E-10	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999999987587564	WITHOUT_CLASSIFICATION	1.241243582073747E-9	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999994765640272	WITHOUT_CLASSIFICATION	5.234359728068841E-7	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999999210154641	WITHOUT_CLASSIFICATION	7.898453594359778E-8	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999982873866502	WITHOUT_CLASSIFICATION	1.7126133498387407E-6	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999743307023828	WITHOUT_CLASSIFICATION	2.566929761715756E-5	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999563460332442	WITHOUT_CLASSIFICATION	4.365396675578149E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9999923370930919	WITHOUT_CLASSIFICATION	7.662906908139306E-6	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999981846058211	WITHOUT_CLASSIFICATION	1.815394178858352E-6	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999999202182092	WITHOUT_CLASSIFICATION	7.978179086738958E-8	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999961563667276	WITHOUT_CLASSIFICATION	3.843633272500959E-6	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9997487668744629	WITHOUT_CLASSIFICATION	2.5123312553707017E-4	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999909456148798	WITHOUT_CLASSIFICATION	9.054385120216542E-6	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9999942896290237	WITHOUT_CLASSIFICATION	5.710370976290279E-6	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999971399920766	WITHOUT_CLASSIFICATION	2.8600079232942256E-6	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9999999752752569	WITHOUT_CLASSIFICATION	2.4724743131220123E-8	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9998910792702916	WITHOUT_CLASSIFICATION	1.0892072970835787E-4	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999999906561923	WITHOUT_CLASSIFICATION	9.343807689135453E-9	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9999999822965479	WITHOUT_CLASSIFICATION	1.770345210230466E-8	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999998445356232	WITHOUT_CLASSIFICATION	1.5546437680373658E-7	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999991131496263	WITHOUT_CLASSIFICATION	8.868503737362608E-7	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9999825671976444	WITHOUT_CLASSIFICATION	1.7432802355518606E-5	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.999999879798519	WITHOUT_CLASSIFICATION	1.2020148102157404E-7	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9999999993607883	WITHOUT_CLASSIFICATION	6.392117611013067E-10	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.999999879798519	WITHOUT_CLASSIFICATION	1.2020148102157404E-7	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999758001834131	WITHOUT_CLASSIFICATION	2.4199816586912333E-5	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9985744193681716	WITHOUT_CLASSIFICATION	0.0014255806318283185	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999999766522383	WITHOUT_CLASSIFICATION	2.3347761683465556E-8	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999999675473861	WITHOUT_CLASSIFICATION	3.2452613886790714E-8	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999988670150709	WITHOUT_CLASSIFICATION	1.1329849290665917E-6	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999999998363237	WITHOUT_CLASSIFICATION	1.6367625215858911E-10	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999995310673366	WITHOUT_CLASSIFICATION	4.689326633478317E-7	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.999739369766014	WITHOUT_CLASSIFICATION	2.6063023398611394E-4	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9997187442774129	WITHOUT_CLASSIFICATION	2.812557225870172E-4	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9999978221125009	WITHOUT_CLASSIFICATION	2.177887499051363E-6	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9999995485137845	WITHOUT_CLASSIFICATION	4.514862155178216E-7	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999999262923103	WITHOUT_CLASSIFICATION	7.370768981714028E-8	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999960058066355	WITHOUT_CLASSIFICATION	3.994193364593786E-6	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9986415825390419	WITHOUT_CLASSIFICATION	0.0013584174609580794	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9999917177855381	WITHOUT_CLASSIFICATION	8.282214461869614E-6	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999679765426761	WITHOUT_CLASSIFICATION	3.2023457323863696E-5	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999870140746235	WITHOUT_CLASSIFICATION	1.2985925376470702E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9995563074682148	WITHOUT_CLASSIFICATION	4.4369253178515674E-4	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999995076942039	WITHOUT_CLASSIFICATION	4.923057960837852E-7	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999984818720623	WITHOUT_CLASSIFICATION	1.5181279377232333E-6	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999999071218881	WITHOUT_CLASSIFICATION	9.287811190348049E-8	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999993418462336	WITHOUT_CLASSIFICATION	6.581537663958751E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997719017251	WITHOUT_CLASSIFICATION	2.280982748844978E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999995310673366	WITHOUT_CLASSIFICATION	4.689326633478317E-7	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999995568209717	WITHOUT_CLASSIFICATION	4.431790282815343E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999997774552779	WITHOUT_CLASSIFICATION	2.2254472201382552E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999997774552779	WITHOUT_CLASSIFICATION	2.2254472201382552E-7	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.999999908892334	WITHOUT_CLASSIFICATION	9.110766599354029E-8	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999998851587584	WITHOUT_CLASSIFICATION	1.1484124167230605E-7	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999998851587584	WITHOUT_CLASSIFICATION	1.1484124167230605E-7	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999949381163474	WITHOUT_CLASSIFICATION	5.061883652528354E-6	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999949381163474	WITHOUT_CLASSIFICATION	5.061883652528354E-6	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9652329675617812	WITHOUT_CLASSIFICATION	0.03476703243821877	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.999999948172652	WITHOUT_CLASSIFICATION	5.1827347959274533E-8	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999978483984	WITHOUT_CLASSIFICATION	2.151601521589345E-9	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999980775445846	WITHOUT_CLASSIFICATION	1.922455415354315E-6	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999999170989998	WITHOUT_CLASSIFICATION	8.290100013144087E-8	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999967677248455	WITHOUT_CLASSIFICATION	3.2322751545665975E-6	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9997448425170432	WITHOUT_CLASSIFICATION	2.551574829568012E-4	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999988057999067	WITHOUT_CLASSIFICATION	1.1942000932792443E-6	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999999971635312	WITHOUT_CLASSIFICATION	2.836468818317094E-9	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9999995972752976	WITHOUT_CLASSIFICATION	4.027247023072811E-7	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999999460644994	WITHOUT_CLASSIFICATION	5.3935500545939866E-8	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999978548472812	WITHOUT_CLASSIFICATION	2.1451527187265565E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.99999999486665	WITHOUT_CLASSIFICATION	5.133349995967968E-9	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999999336005239	WITHOUT_CLASSIFICATION	6.639947622249702E-8	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9999995342500979	WITHOUT_CLASSIFICATION	4.6574990203228796E-7	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999985366024449	WITHOUT_CLASSIFICATION	1.4633975551338936E-6	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999994634659651	WITHOUT_CLASSIFICATION	5.365340348575393E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999994373157836	WITHOUT_CLASSIFICATION	5.626842164423273E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999994373157836	WITHOUT_CLASSIFICATION	5.626842164423273E-7	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999998852334214	WITHOUT_CLASSIFICATION	1.1476657854307737E-7	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9995975090934885	WITHOUT_CLASSIFICATION	4.024909065114213E-4	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999999652257027	WITHOUT_CLASSIFICATION	3.477429737798971E-8	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.999997854303381	WITHOUT_CLASSIFICATION	2.145696619092778E-6	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999995168699446	WITHOUT_CLASSIFICATION	4.831300552931208E-7	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999802409079237	WITHOUT_CLASSIFICATION	1.9759092076340467E-5	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999949316976711	WITHOUT_CLASSIFICATION	5.068302329011318E-6	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999976654509547	WITHOUT_CLASSIFICATION	2.3345490452482736E-6	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9999991471110474	WITHOUT_CLASSIFICATION	8.528889526600202E-7	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999980880956695	WITHOUT_CLASSIFICATION	1.911904330598073E-6	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999999998938028	WITHOUT_CLASSIFICATION	1.0619709003161336E-10	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999999200117751	WITHOUT_CLASSIFICATION	7.998822499704322E-8	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999998226986746	WITHOUT_CLASSIFICATION	1.773013253558506E-7	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999999627639132	WITHOUT_CLASSIFICATION	3.723608678107278E-8	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.999999045547876	WITHOUT_CLASSIFICATION	9.544521239358765E-7	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.99999979238929	WITHOUT_CLASSIFICATION	2.0761070990002356E-7	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999970488005414	WITHOUT_CLASSIFICATION	2.9511994585522805E-6	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999885840749628	WITHOUT_CLASSIFICATION	1.1415925037127733E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9999883389491707	WITHOUT_CLASSIFICATION	1.166105082928654E-5	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999943290076553	WITHOUT_CLASSIFICATION	5.670992344661523E-6	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9999937179706814	WITHOUT_CLASSIFICATION	6.282029318604312E-6	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999969502182072	WITHOUT_CLASSIFICATION	3.0497817928059637E-6	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.999993746383725	WITHOUT_CLASSIFICATION	6.2536162750566026E-6	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999998576005569	WITHOUT_CLASSIFICATION	1.4239944317427345E-7	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.999999993921249	WITHOUT_CLASSIFICATION	6.07875091666372E-9	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999999973874627	WITHOUT_CLASSIFICATION	2.612537410867005E-9	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999997503920638	WITHOUT_CLASSIFICATION	2.4960793625381946E-7	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999999964012886	WITHOUT_CLASSIFICATION	3.5987115007975327E-9	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999958943567259	WITHOUT_CLASSIFICATION	4.105643274051415E-6	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.999993718393792	WITHOUT_CLASSIFICATION	6.281606207977878E-6	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.9999999838671296	WITHOUT_CLASSIFICATION	1.6132870359740972E-8	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.999999955476056	WITHOUT_CLASSIFICATION	4.452394390211817E-8	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999993868967536	WITHOUT_CLASSIFICATION	6.131032464398884E-7	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999972341087595	WITHOUT_CLASSIFICATION	2.765891240436377E-6	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9999953587021617	WITHOUT_CLASSIFICATION	4.641297838346611E-6	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9999962373722218	WITHOUT_CLASSIFICATION	3.762627778148819E-6	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9998648109048608	WITHOUT_CLASSIFICATION	1.3518909513915051E-4	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9999829867997282	WITHOUT_CLASSIFICATION	1.7013200271880566E-5	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999996778918391	WITHOUT_CLASSIFICATION	3.221081609125942E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999997589283897	WITHOUT_CLASSIFICATION	2.410716103761517E-7	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999992624547872	WITHOUT_CLASSIFICATION	7.375452127587654E-7	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999998787967134	WITHOUT_CLASSIFICATION	1.2120328668913286E-7	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.999999976683728	WITHOUT_CLASSIFICATION	2.331627208613147E-8	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999994574367536	WITHOUT_CLASSIFICATION	5.425632464393201E-7	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9993682794605752	WITHOUT_CLASSIFICATION	6.31720539424749E-4	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999998743606067	WITHOUT_CLASSIFICATION	1.2563939329430755E-7	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999977075284617	WITHOUT_CLASSIFICATION	2.292471538219466E-6	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999994574367536	WITHOUT_CLASSIFICATION	5.425632464393201E-7	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999596683262393	WITHOUT_CLASSIFICATION	4.033167376068479E-5	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999982344446747	WITHOUT_CLASSIFICATION	1.7655553252952392E-6	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999999427050659	WITHOUT_CLASSIFICATION	5.729493412549239E-8	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9999776715618609	WITHOUT_CLASSIFICATION	2.2328438139173526E-5	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.999997295365761	WITHOUT_CLASSIFICATION	2.7046342390443055E-6	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9993682794605752	WITHOUT_CLASSIFICATION	6.31720539424749E-4	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999977075284617	WITHOUT_CLASSIFICATION	2.292471538219466E-6	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999990086831931	WITHOUT_CLASSIFICATION	9.913168068227222E-7	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999999374052947	WITHOUT_CLASSIFICATION	6.259470532248428E-8	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999993470844475	WITHOUT_CLASSIFICATION	6.529155526261083E-7	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999999705527742	WITHOUT_CLASSIFICATION	2.9447225718299217E-8	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998108930085997	WITHOUT_CLASSIFICATION	1.8910699140025941E-4	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999990009021292	WITHOUT_CLASSIFICATION	9.990978707900867E-7	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9992950512139692	WITHOUT_CLASSIFICATION	7.049487860307113E-4	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999997419897111	WITHOUT_CLASSIFICATION	2.5801028885273094E-7	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999981081412049	WITHOUT_CLASSIFICATION	1.8918587950928822E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999981081412049	WITHOUT_CLASSIFICATION	1.8918587950928822E-6	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9999996938020559	WITHOUT_CLASSIFICATION	3.061979440932553E-7	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.999986305431927	WITHOUT_CLASSIFICATION	1.3694568072877903E-5	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999990083865066	WITHOUT_CLASSIFICATION	9.91613493524486E-7	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999971274738156	WITHOUT_CLASSIFICATION	2.872526184336436E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999739095696	WITHOUT_CLASSIFICATION	2.6090430259231408E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998988093995	WITHOUT_CLASSIFICATION	1.0119060053122493E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999989102256516	WITHOUT_CLASSIFICATION	1.0897743484242335E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999989102256516	WITHOUT_CLASSIFICATION	1.0897743484242335E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998788595911	WITHOUT_CLASSIFICATION	1.2114040889346325E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998483195776	WITHOUT_CLASSIFICATION	1.516804224335961E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998483195776	WITHOUT_CLASSIFICATION	1.516804224335961E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999975596331833	WITHOUT_CLASSIFICATION	2.4403668167903646E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998003726078	WITHOUT_CLASSIFICATION	1.9962739207355286E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998003726078	WITHOUT_CLASSIFICATION	1.9962739207355286E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999998339072692	WITHOUT_CLASSIFICATION	1.660927306759412E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998616658037	WITHOUT_CLASSIFICATION	1.3833419623214547E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999951800179	WITHOUT_CLASSIFICATION	4.819981975027966E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999989620647842	WITHOUT_CLASSIFICATION	1.0379352158282991E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999922204944054	WITHOUT_CLASSIFICATION	7.77950559455138E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997983010415	WITHOUT_CLASSIFICATION	2.0169895843121647E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999994667063631	WITHOUT_CLASSIFICATION	5.332936369937288E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999213077831	WITHOUT_CLASSIFICATION	7.869221691195799E-8	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999997972047636	WITHOUT_CLASSIFICATION	2.0279523641709876E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999997831401818	WITHOUT_CLASSIFICATION	2.16859818275157E-7	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9999928628354028	WITHOUT_CLASSIFICATION	7.1371645971016866E-6	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9999068833702375	WITHOUT_CLASSIFICATION	9.311662976251397E-5	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999923822050837	WITHOUT_CLASSIFICATION	7.617794916334687E-6	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999971680935686	WITHOUT_CLASSIFICATION	2.8319064314909836E-6	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9999926920643247	WITHOUT_CLASSIFICATION	7.307935675270875E-6	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999999995766682	WITHOUT_CLASSIFICATION	4.2333185590475756E-10	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999999992073987	WITHOUT_CLASSIFICATION	7.926012318049684E-10	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999999998444776	WITHOUT_CLASSIFICATION	1.5552238971923065E-10	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999899275224453	WITHOUT_CLASSIFICATION	1.0072477554684973E-5	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9999968603232765	WITHOUT_CLASSIFICATION	3.1396767235065834E-6	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999996197368182	WITHOUT_CLASSIFICATION	3.802631817587798E-7	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9999968289966601	WITHOUT_CLASSIFICATION	3.171003339796933E-6	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9999972391321437	WITHOUT_CLASSIFICATION	2.7608678562591184E-6	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999990874625962	WITHOUT_CLASSIFICATION	9.125374038480169E-7	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9999899462591249	WITHOUT_CLASSIFICATION	1.0053740875208895E-5	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999945335954942	WITHOUT_CLASSIFICATION	5.466404505795161E-6	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999943748296704	WITHOUT_CLASSIFICATION	5.62517032961093E-6	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9999974797286856	WITHOUT_CLASSIFICATION	2.520271314383813E-6	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999957698062083	WITHOUT_CLASSIFICATION	4.230193791633033E-6	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999970853968235	WITHOUT_CLASSIFICATION	2.9146031764183094E-6	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999999754195684	WITHOUT_CLASSIFICATION	2.458043156471675E-8	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9999873734650442	WITHOUT_CLASSIFICATION	1.2626534955893123E-5	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9999673830804858	WITHOUT_CLASSIFICATION	3.261691951410205E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998616658037	WITHOUT_CLASSIFICATION	1.3833419623214547E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999951800179	WITHOUT_CLASSIFICATION	4.819981975027966E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999989620647842	WITHOUT_CLASSIFICATION	1.0379352158282991E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997983010415	WITHOUT_CLASSIFICATION	2.0169895843121647E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999984525663328	WITHOUT_CLASSIFICATION	1.5474336672938354E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999213077831	WITHOUT_CLASSIFICATION	7.869221691195799E-8	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999997972047636	WITHOUT_CLASSIFICATION	2.0279523641709876E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999997831401818	WITHOUT_CLASSIFICATION	2.16859818275157E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999884511701473	WITHOUT_CLASSIFICATION	1.1548829852705157E-5	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9998555781042239	WITHOUT_CLASSIFICATION	1.444218957761519E-4	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999917250380286	WITHOUT_CLASSIFICATION	8.274961971334146E-6	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9999191727540879	WITHOUT_CLASSIFICATION	8.08272459119837E-5	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999582785457817	WITHOUT_CLASSIFICATION	4.1721454218294435E-5	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9999989347563659	WITHOUT_CLASSIFICATION	1.065243634110455E-6	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999998795788596	WITHOUT_CLASSIFICATION	1.2042114045973938E-7	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999998795788596	WITHOUT_CLASSIFICATION	1.2042114045973938E-7	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999823178278803	WITHOUT_CLASSIFICATION	1.7682172119786676E-5	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999848651289808	WITHOUT_CLASSIFICATION	1.513487101927925E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999681901533146	WITHOUT_CLASSIFICATION	3.1809846685402514E-5	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999995795118047	WITHOUT_CLASSIFICATION	4.2048819522333643E-7	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999995795118047	WITHOUT_CLASSIFICATION	4.2048819522333643E-7	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999948328406144	WITHOUT_CLASSIFICATION	5.1671593856294046E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999948328406144	WITHOUT_CLASSIFICATION	5.1671593856294046E-6	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999999120875894	WITHOUT_CLASSIFICATION	8.791241059539316E-8	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999999559042123	WITHOUT_CLASSIFICATION	4.409578774715346E-8	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999999626252727	WITHOUT_CLASSIFICATION	3.737472728906689E-8	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999999993171295	WITHOUT_CLASSIFICATION	6.828704811370869E-10	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999813977943662	WITHOUT_CLASSIFICATION	1.8602205633806897E-5	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999838386614562	WITHOUT_CLASSIFICATION	1.6161338543820226E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9999850614283186	WITHOUT_CLASSIFICATION	1.4938571681391087E-5	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9998582385652237	WITHOUT_CLASSIFICATION	1.4176143477631875E-4	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999969953995003	WITHOUT_CLASSIFICATION	3.0046004997441513E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999856624932932	WITHOUT_CLASSIFICATION	1.4337506706804923E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999856624932932	WITHOUT_CLASSIFICATION	1.4337506706804923E-5	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9873262065581236	WITHOUT_CLASSIFICATION	0.012673793441876255	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999398974373774	WITHOUT_CLASSIFICATION	6.0102562622635846E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999398974373774	WITHOUT_CLASSIFICATION	6.0102562622635846E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999398974373774	WITHOUT_CLASSIFICATION	6.0102562622635846E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9998491244717275	WITHOUT_CLASSIFICATION	1.5087552827247356E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9998491244717275	WITHOUT_CLASSIFICATION	1.5087552827247356E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999993903406892	WITHOUT_CLASSIFICATION	6.096593107420599E-7	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999993903406892	WITHOUT_CLASSIFICATION	6.096593107420599E-7	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999993903406892	WITHOUT_CLASSIFICATION	6.096593107420599E-7	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999995068564616	WITHOUT_CLASSIFICATION	4.931435385037497E-7	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999995068564616	WITHOUT_CLASSIFICATION	4.931435385037497E-7	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999995068564616	WITHOUT_CLASSIFICATION	4.931435385037497E-7	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999986669328	WITHOUT_CLASSIFICATION	1.3330673021585915E-9	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999986669328	WITHOUT_CLASSIFICATION	1.3330673021585915E-9	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999991859195007	WITHOUT_CLASSIFICATION	8.140804993378508E-7	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999991859195007	WITHOUT_CLASSIFICATION	8.140804993378508E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999994910184291	WITHOUT_CLASSIFICATION	5.089815709462427E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999994910184291	WITHOUT_CLASSIFICATION	5.089815709462427E-7	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999730874081	WITHOUT_CLASSIFICATION	2.691259187593303E-8	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999730874081	WITHOUT_CLASSIFICATION	2.691259187593303E-8	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999325895798	WITHOUT_CLASSIFICATION	6.741042035241084E-8	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999325895798	WITHOUT_CLASSIFICATION	6.741042035241084E-8	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999738636673653	WITHOUT_CLASSIFICATION	2.61363326346443E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999738636673653	WITHOUT_CLASSIFICATION	2.61363326346443E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999995109762158	WITHOUT_CLASSIFICATION	4.890237843525468E-7	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999995109762158	WITHOUT_CLASSIFICATION	4.890237843525468E-7	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999986669328	WITHOUT_CLASSIFICATION	1.3330673021585915E-9	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999991859195007	WITHOUT_CLASSIFICATION	8.140804993378508E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999994910184291	WITHOUT_CLASSIFICATION	5.089815709462427E-7	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999325895798	WITHOUT_CLASSIFICATION	6.741042035241084E-8	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999738636673653	WITHOUT_CLASSIFICATION	2.61363326346443E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999995109762158	WITHOUT_CLASSIFICATION	4.890237843525468E-7	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.999994988759595	WITHOUT_CLASSIFICATION	5.01124040498807E-6	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9999981353937787	WITHOUT_CLASSIFICATION	1.864606221328223E-6	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9999979116796911	WITHOUT_CLASSIFICATION	2.088320308897207E-6	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9996167324323434	WITHOUT_CLASSIFICATION	3.832675676565557E-4	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999976165505202	WITHOUT_CLASSIFICATION	2.3834494798088164E-6	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9999968319617242	WITHOUT_CLASSIFICATION	3.168038275774649E-6	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999995971801583	WITHOUT_CLASSIFICATION	4.028198418210291E-7	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9999991454419477	WITHOUT_CLASSIFICATION	8.545580523185456E-7	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999841812205266	WITHOUT_CLASSIFICATION	1.5818779473385546E-5	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999999076900513	WITHOUT_CLASSIFICATION	9.230994871111878E-8	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999994026006082	WITHOUT_CLASSIFICATION	5.973993918651685E-7	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9999999207355049	WITHOUT_CLASSIFICATION	7.926449502143815E-8	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999993624239106	WITHOUT_CLASSIFICATION	6.375760893640567E-7	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999999476430923	WITHOUT_CLASSIFICATION	5.235690761819933E-8	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999990782291035	WITHOUT_CLASSIFICATION	9.217708964749939E-7	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999974770942841	WITHOUT_CLASSIFICATION	2.5229057158442645E-6	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999914810467319	WITHOUT_CLASSIFICATION	8.518953268217983E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999882913186926	WITHOUT_CLASSIFICATION	1.1708681307288173E-5	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.999998522904521	WITHOUT_CLASSIFICATION	1.4770954789394664E-6	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9999686124155943	WITHOUT_CLASSIFICATION	3.138758440565377E-5	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9999999341220551	WITHOUT_CLASSIFICATION	6.587794490657752E-8	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.999998526852986	WITHOUT_CLASSIFICATION	1.4731470140912218E-6	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999998427618304	WITHOUT_CLASSIFICATION	1.5723816956838145E-7	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999993595238617	WITHOUT_CLASSIFICATION	6.404761383642081E-7	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999852675071371	WITHOUT_CLASSIFICATION	1.4732492862924734E-5	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9999830491883795	WITHOUT_CLASSIFICATION	1.6950811620425237E-5	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999840584974362	WITHOUT_CLASSIFICATION	1.5941502563797607E-5	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9999999160719287	WITHOUT_CLASSIFICATION	8.392807133064793E-8	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999895088552413	WITHOUT_CLASSIFICATION	1.0491144758789276E-5	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999986473539622	WITHOUT_CLASSIFICATION	1.3526460377824816E-6	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9999996647456385	WITHOUT_CLASSIFICATION	3.3525436145020387E-7	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.999962538024254	WITHOUT_CLASSIFICATION	3.746197574607528E-5	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999969701819846	WITHOUT_CLASSIFICATION	3.029818015427494E-6	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999969701819846	WITHOUT_CLASSIFICATION	3.029818015427494E-6	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9999997741762858	WITHOUT_CLASSIFICATION	2.2582371428032848E-7	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9999978475484084	WITHOUT_CLASSIFICATION	2.15245159160576E-6	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.999983043941059	WITHOUT_CLASSIFICATION	1.69560589410269E-5	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9999992102828557	WITHOUT_CLASSIFICATION	7.897171443953794E-7	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999999789363502	WITHOUT_CLASSIFICATION	2.1063649815615784E-8	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999997685993348	WITHOUT_CLASSIFICATION	2.3140066529163672E-7	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9999991717711034	WITHOUT_CLASSIFICATION	8.282288964678644E-7	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999334747312388	WITHOUT_CLASSIFICATION	6.652526876122239E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9999991312725142	WITHOUT_CLASSIFICATION	8.687274859555808E-7	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9999815103947274	WITHOUT_CLASSIFICATION	1.8489605272699507E-5	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.999993570855923	WITHOUT_CLASSIFICATION	6.429144076969528E-6	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9999997232844029	WITHOUT_CLASSIFICATION	2.767155971647772E-7	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948806147584	WITHOUT_CLASSIFICATION	5.1193852416052895E-6	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948806147584	WITHOUT_CLASSIFICATION	5.1193852416052895E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.999992558472633	WITHOUT_CLASSIFICATION	7.441527366935948E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.999992558472633	WITHOUT_CLASSIFICATION	7.441527366935948E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.999992558472633	WITHOUT_CLASSIFICATION	7.441527366935948E-6	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9998668420383783	WITHOUT_CLASSIFICATION	1.3315796162168586E-4	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999792983103738	WITHOUT_CLASSIFICATION	2.070168962614388E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999976109922166	WITHOUT_CLASSIFICATION	2.389007783411939E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999976109922166	WITHOUT_CLASSIFICATION	2.389007783411939E-6	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9999982400790368	WITHOUT_CLASSIFICATION	1.7599209631513527E-6	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999669534856869	WITHOUT_CLASSIFICATION	3.304651431312411E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999995176960094	WITHOUT_CLASSIFICATION	4.823039907098227E-7	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999951021758663	WITHOUT_CLASSIFICATION	4.897824133772442E-6	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9999994250191128	WITHOUT_CLASSIFICATION	5.749808872835377E-7	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999918042500167	WITHOUT_CLASSIFICATION	8.19574998339544E-6	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999833349777965	WITHOUT_CLASSIFICATION	1.6665022203560853E-5	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999999349369565	WITHOUT_CLASSIFICATION	6.506304361085491E-8	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999997977471875	WITHOUT_CLASSIFICATION	2.0225281252886404E-7	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9998183932393301	WITHOUT_CLASSIFICATION	1.8160676066987999E-4	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999994093596215	WITHOUT_CLASSIFICATION	5.906403784884857E-7	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999973289004888	WITHOUT_CLASSIFICATION	2.671099511257329E-6	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999999215525351	WITHOUT_CLASSIFICATION	7.844746478696513E-8	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.99999884017923	WITHOUT_CLASSIFICATION	1.1598207700584688E-6	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999909605329774	WITHOUT_CLASSIFICATION	9.039467022587597E-6	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.999998099766939	WITHOUT_CLASSIFICATION	1.9002330609478456E-6	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999999417012478	WITHOUT_CLASSIFICATION	5.8298752239377717E-8	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999948235605987	WITHOUT_CLASSIFICATION	5.176439401362572E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999936141678576	WITHOUT_CLASSIFICATION	6.3858321424832135E-6	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9999629989065657	WITHOUT_CLASSIFICATION	3.7001093434253905E-5	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999829382023703	WITHOUT_CLASSIFICATION	1.706179762976231E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999980774130154	WITHOUT_CLASSIFICATION	1.9225869847170073E-6	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9918353409001955	WITHOUT_CLASSIFICATION	0.008164659099804466	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999997485383535	WITHOUT_CLASSIFICATION	2.5146164657466055E-7	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999997485383535	WITHOUT_CLASSIFICATION	2.5146164657466055E-7	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999997485383535	WITHOUT_CLASSIFICATION	2.5146164657466055E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999994471513348	WITHOUT_CLASSIFICATION	5.5284866524263E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999994471513348	WITHOUT_CLASSIFICATION	5.5284866524263E-7	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9999506040767412	WITHOUT_CLASSIFICATION	4.939592325875652E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9997748672128338	WITHOUT_CLASSIFICATION	2.251327871661074E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9997748672128338	WITHOUT_CLASSIFICATION	2.251327871661074E-4	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.999995919244705	WITHOUT_CLASSIFICATION	4.0807552950857495E-6	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9999974730544418	WITHOUT_CLASSIFICATION	2.5269455582911157E-6	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9999506040767412	WITHOUT_CLASSIFICATION	4.939592325875652E-5	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999999624404933	WITHOUT_CLASSIFICATION	3.75595067290532E-8	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999506040767412	WITHOUT_CLASSIFICATION	4.939592325875652E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999975622272094	WITHOUT_CLASSIFICATION	2.437772790608681E-6	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999975622272094	WITHOUT_CLASSIFICATION	2.437772790608681E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948806147584	WITHOUT_CLASSIFICATION	5.1193852416052895E-6	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9998820571111163	WITHOUT_CLASSIFICATION	1.1794288888356756E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9994018294978366	WITHOUT_CLASSIFICATION	5.981705021633779E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9988633483605571	WITHOUT_CLASSIFICATION	0.0011366516394428602	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9989831171318727	WITHOUT_CLASSIFICATION	0.0010168828681272131	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9994410568656005	WITHOUT_CLASSIFICATION	5.589431343996099E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9983528915219826	WITHOUT_CLASSIFICATION	0.0016471084780173403	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9983922130133939	WITHOUT_CLASSIFICATION	0.0016077869866060574	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9991276395781098	WITHOUT_CLASSIFICATION	8.723604218901473E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9991136489912062	WITHOUT_CLASSIFICATION	8.863510087937657E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9991094108422756	WITHOUT_CLASSIFICATION	8.905891577244035E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9993949749984264	WITHOUT_CLASSIFICATION	6.050250015735056E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9992835630211366	WITHOUT_CLASSIFICATION	7.164369788633071E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9992206309201861	WITHOUT_CLASSIFICATION	7.793690798139783E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9988025740652718	WITHOUT_CLASSIFICATION	0.0011974259347282308	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.998953560279912	WITHOUT_CLASSIFICATION	0.0010464397200880186	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9992357118704179	WITHOUT_CLASSIFICATION	7.642881295821349E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9990296796866798	WITHOUT_CLASSIFICATION	9.703203133203398E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9981143758177936	WITHOUT_CLASSIFICATION	0.001885624182206374	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9985805141545904	WITHOUT_CLASSIFICATION	0.0014194858454095935	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9995139652606422	WITHOUT_CLASSIFICATION	4.860347393577572E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9996379765550166	WITHOUT_CLASSIFICATION	3.6202344498337166E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9991573916763995	WITHOUT_CLASSIFICATION	8.426083236003888E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9992319685469706	WITHOUT_CLASSIFICATION	7.680314530294419E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9994169826023237	WITHOUT_CLASSIFICATION	5.830173976763626E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9991300532776783	WITHOUT_CLASSIFICATION	8.699467223217235E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9988505653205858	WITHOUT_CLASSIFICATION	0.0011494346794142043	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9994141821089945	WITHOUT_CLASSIFICATION	5.858178910055329E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9982674091747203	WITHOUT_CLASSIFICATION	0.0017325908252796686	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9993197338805457	WITHOUT_CLASSIFICATION	6.802661194542954E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9991913397433868	WITHOUT_CLASSIFICATION	8.086602566131241E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9994737958597263	WITHOUT_CLASSIFICATION	5.262041402736839E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9991169707109909	WITHOUT_CLASSIFICATION	8.830292890091394E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9989441508848707	WITHOUT_CLASSIFICATION	0.0010558491151293715	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9993039740343989	WITHOUT_CLASSIFICATION	6.96025965601223E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9992023231703031	WITHOUT_CLASSIFICATION	7.976768296968792E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9990599821913697	WITHOUT_CLASSIFICATION	9.400178086303381E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9993513506781814	WITHOUT_CLASSIFICATION	6.486493218187112E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9987774774075324	WITHOUT_CLASSIFICATION	0.0012225225924676706	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9989986553883727	WITHOUT_CLASSIFICATION	0.0010013446116271714	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9991313936374173	WITHOUT_CLASSIFICATION	8.686063625827173E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9983249790875097	WITHOUT_CLASSIFICATION	0.0016750209124902571	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9990018828772769	WITHOUT_CLASSIFICATION	9.98117122723201E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9989232894105706	WITHOUT_CLASSIFICATION	0.0010767105894293383	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.998969917284498	WITHOUT_CLASSIFICATION	0.0010300827155019694	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9994134945843127	WITHOUT_CLASSIFICATION	5.865054156872504E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9986809336447351	WITHOUT_CLASSIFICATION	0.0013190663552649414	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9986279329854236	WITHOUT_CLASSIFICATION	0.0013720670145763046	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9991091627448734	WITHOUT_CLASSIFICATION	8.908372551265231E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9973021950515566	WITHOUT_CLASSIFICATION	0.0026978049484433827	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9988074508747439	WITHOUT_CLASSIFICATION	0.0011925491252561934	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9992757164826523	WITHOUT_CLASSIFICATION	7.242835173477427E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9988061379362292	WITHOUT_CLASSIFICATION	0.0011938620637708276	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.998928898812403	WITHOUT_CLASSIFICATION	0.0010711011875970406	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9993543687771501	WITHOUT_CLASSIFICATION	6.456312228498327E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9993155667737502	WITHOUT_CLASSIFICATION	6.844332262497297E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9990052913111785	WITHOUT_CLASSIFICATION	9.947086888214402E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9995595549804485	WITHOUT_CLASSIFICATION	4.40445019551567E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.998564238595524	WITHOUT_CLASSIFICATION	0.0014357614044760638	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9982968286219611	WITHOUT_CLASSIFICATION	0.001703171378038864	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9992600946024423	WITHOUT_CLASSIFICATION	7.399053975577888E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9968371606080967	WITHOUT_CLASSIFICATION	0.003162839391903349	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9992563268887436	WITHOUT_CLASSIFICATION	7.436731112563911E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9995936300496353	WITHOUT_CLASSIFICATION	4.0636995036467423E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9992612901941187	WITHOUT_CLASSIFICATION	7.387098058812535E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9991303093138173	WITHOUT_CLASSIFICATION	8.696906861826284E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9985899022839753	WITHOUT_CLASSIFICATION	0.0014100977160247123	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9982805796858962	WITHOUT_CLASSIFICATION	0.0017194203141037562	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.999234894990462	WITHOUT_CLASSIFICATION	7.651050095379531E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9995469924136332	WITHOUT_CLASSIFICATION	4.5300758636671333E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9993329237316689	WITHOUT_CLASSIFICATION	6.670762683311014E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9994524244956858	WITHOUT_CLASSIFICATION	5.47575504314201E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9995146402593241	WITHOUT_CLASSIFICATION	4.8535974067585077E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9988305687059511	WITHOUT_CLASSIFICATION	0.0011694312940489842	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9992953337499991	WITHOUT_CLASSIFICATION	7.046662500009655E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9992097987203266	WITHOUT_CLASSIFICATION	7.902012796734661E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9988415518402898	WITHOUT_CLASSIFICATION	0.0011584481597102043	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9989974789666919	WITHOUT_CLASSIFICATION	0.0010025210333081038	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9973173087474575	WITHOUT_CLASSIFICATION	0.0026826912525423977	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9985741425650274	WITHOUT_CLASSIFICATION	0.0014258574349726044	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9995096527707081	WITHOUT_CLASSIFICATION	4.90347229291899E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9999779766032976	WITHOUT_CLASSIFICATION	2.2023396702478886E-5	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999928932000087	WITHOUT_CLASSIFICATION	7.1067999913155544E-6	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999998767921785	WITHOUT_CLASSIFICATION	1.2320782153648114E-7	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999998733432949	WITHOUT_CLASSIFICATION	1.2665670516071535E-7	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999999863742802	WITHOUT_CLASSIFICATION	1.3625719792218693E-8	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999998534814795	WITHOUT_CLASSIFICATION	1.4651852048690325E-7	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999956061584963	WITHOUT_CLASSIFICATION	4.393841503737953E-6	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999927140292433	WITHOUT_CLASSIFICATION	7.285970756798969E-6	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999984271692814	WITHOUT_CLASSIFICATION	1.5728307186322951E-6	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999972327554262	WITHOUT_CLASSIFICATION	2.767244573801161E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999997685993348	WITHOUT_CLASSIFICATION	2.3140066529163672E-7	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9998668420383783	WITHOUT_CLASSIFICATION	1.3315796162168586E-4	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999792983103738	WITHOUT_CLASSIFICATION	2.070168962614388E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999976109922166	WITHOUT_CLASSIFICATION	2.389007783411939E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999948235605987	WITHOUT_CLASSIFICATION	5.176439401362572E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999936141678576	WITHOUT_CLASSIFICATION	6.3858321424832135E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.99999842476802	WITHOUT_CLASSIFICATION	1.5752319799960254E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999994471513348	WITHOUT_CLASSIFICATION	5.5284866524263E-7	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999948806147584	WITHOUT_CLASSIFICATION	5.1193852416052895E-6	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999891176036554	WITHOUT_CLASSIFICATION	1.0882396344690752E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.999996201644673	WITHOUT_CLASSIFICATION	3.7983553271114384E-6	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999990007806433	WITHOUT_CLASSIFICATION	9.992193566024886E-7	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999997731507355	WITHOUT_CLASSIFICATION	2.2684926451082019E-7	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9999300109346279	WITHOUT_CLASSIFICATION	6.998906537222063E-5	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999990279150733	WITHOUT_CLASSIFICATION	9.720849267690718E-7	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999999483175017	WITHOUT_CLASSIFICATION	5.168249823716149E-8	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999999869548849	WITHOUT_CLASSIFICATION	1.3045115203034986E-8	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999882913186926	WITHOUT_CLASSIFICATION	1.1708681307288173E-5	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9999989101491499	WITHOUT_CLASSIFICATION	1.0898508501418716E-6	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999982737345936	WITHOUT_CLASSIFICATION	1.726265406486685E-6	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999999320944051	WITHOUT_CLASSIFICATION	6.790559482716156E-8	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999785031429436	WITHOUT_CLASSIFICATION	2.1496857056392533E-5	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999984444802404	WITHOUT_CLASSIFICATION	1.5555197595815192E-6	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999940141026639	WITHOUT_CLASSIFICATION	5.985897336088881E-6	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9999947185086144	WITHOUT_CLASSIFICATION	5.281491385528E-6	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999993641909799	WITHOUT_CLASSIFICATION	6.358090202269097E-7	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999997732368663	WITHOUT_CLASSIFICATION	2.2676313384807833E-7	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999758545552455	WITHOUT_CLASSIFICATION	2.4145444754598042E-5	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999949862677	WITHOUT_CLASSIFICATION	5.013732299993161E-6	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999991756643792	WITHOUT_CLASSIFICATION	8.243356208395296E-7	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9999933650899696	WITHOUT_CLASSIFICATION	6.634910030317811E-6	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.999999923099286	WITHOUT_CLASSIFICATION	7.690071402077337E-8	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999998717994699	WITHOUT_CLASSIFICATION	1.2820053007727716E-7	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9999901610537227	WITHOUT_CLASSIFICATION	9.838946277314037E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999945585099754	WITHOUT_CLASSIFICATION	5.441490024633374E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9998748395775027	WITHOUT_CLASSIFICATION	1.2516042249739897E-4	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.999999926294306	WITHOUT_CLASSIFICATION	7.370569404147621E-8	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999747249073716	WITHOUT_CLASSIFICATION	2.527509262839822E-5	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.999999770361054	WITHOUT_CLASSIFICATION	2.2963894591529737E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999990505475747	WITHOUT_CLASSIFICATION	9.494524253178422E-7	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999956170434	WITHOUT_CLASSIFICATION	4.382956543823726E-9	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999956170434	WITHOUT_CLASSIFICATION	4.382956543823726E-9	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999999979257642	WITHOUT_CLASSIFICATION	2.074235871408187E-9	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.999998816220007	WITHOUT_CLASSIFICATION	1.1837799930072467E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999989245132708	WITHOUT_CLASSIFICATION	1.0754867292556474E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9969451574953532	WITHOUT_CLASSIFICATION	0.0030548425046468307	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999935831776081	WITHOUT_CLASSIFICATION	6.41682239179593E-6	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999999090827645	WITHOUT_CLASSIFICATION	9.091723554853757E-8	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9993626496104094	WITHOUT_CLASSIFICATION	6.373503895905916E-4	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999963444598603	WITHOUT_CLASSIFICATION	3.6555401397035854E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.999933978209957	WITHOUT_CLASSIFICATION	6.60217900430675E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999981373810735	WITHOUT_CLASSIFICATION	1.8626189264683641E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999989414176449	WITHOUT_CLASSIFICATION	1.0585823551164865E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999993262411997	WITHOUT_CLASSIFICATION	6.737588003737658E-7	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999829521936986	WITHOUT_CLASSIFICATION	1.7047806301406496E-5	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999988375216641	WITHOUT_CLASSIFICATION	1.162478335936985E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999989734362538	WITHOUT_CLASSIFICATION	1.0265637462390497E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999964174471353	WITHOUT_CLASSIFICATION	3.5825528646744253E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999994530294175	WITHOUT_CLASSIFICATION	5.469705825006233E-7	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999532926686581	WITHOUT_CLASSIFICATION	4.670733134196732E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999936930738236	WITHOUT_CLASSIFICATION	6.306926176441935E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999769052368	WITHOUT_CLASSIFICATION	2.3094763253516716E-8	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999969476264914	WITHOUT_CLASSIFICATION	3.052373508529952E-6	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999887251912523	WITHOUT_CLASSIFICATION	1.1274808747754192E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999999857296791	WITHOUT_CLASSIFICATION	1.4270320910192881E-8	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999999192214897	WITHOUT_CLASSIFICATION	8.07785103055737E-8	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999998113796491	WITHOUT_CLASSIFICATION	1.8862035085648502E-7	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999997764608579	WITHOUT_CLASSIFICATION	2.2353914202434483E-7	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999983399653	WITHOUT_CLASSIFICATION	1.660034666276663E-9	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999999978097847	WITHOUT_CLASSIFICATION	2.190215317960369E-9	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999989408229	WITHOUT_CLASSIFICATION	1.059177068711529E-9	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999945705188	WITHOUT_CLASSIFICATION	5.429481174655676E-9	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999992840044719	WITHOUT_CLASSIFICATION	7.15995528135529E-7	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.99999998710688	WITHOUT_CLASSIFICATION	1.2893120048206619E-8	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999999225569253	WITHOUT_CLASSIFICATION	7.74430747391735E-8	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999938064572	WITHOUT_CLASSIFICATION	6.19354287410206E-9	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999836706757358	WITHOUT_CLASSIFICATION	1.6329324264152515E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999993792981808	WITHOUT_CLASSIFICATION	6.207018190602086E-7	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999957905035839	WITHOUT_CLASSIFICATION	4.209496416187643E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999998059236358	WITHOUT_CLASSIFICATION	1.9407636409898021E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999949213506489	WITHOUT_CLASSIFICATION	5.078649351064856E-6	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999989329361	WITHOUT_CLASSIFICATION	1.0670639563377026E-9	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.999998341868089	WITHOUT_CLASSIFICATION	1.6581319110179684E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999965993256137	WITHOUT_CLASSIFICATION	3.4006743863147574E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999951091858427	WITHOUT_CLASSIFICATION	4.890814157435685E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9998219652000091	WITHOUT_CLASSIFICATION	1.7803479999090675E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.999960185952513	WITHOUT_CLASSIFICATION	3.981404748686096E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9982367444584472	WITHOUT_CLASSIFICATION	0.0017632555415528128	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999990673607001	WITHOUT_CLASSIFICATION	9.326392998584644E-7	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999999646711446	WITHOUT_CLASSIFICATION	3.532885545154225E-8	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999917296731533	WITHOUT_CLASSIFICATION	8.270326846603873E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.999999991218165	WITHOUT_CLASSIFICATION	8.781835003825777E-9	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999997800024937	WITHOUT_CLASSIFICATION	2.1999750633161834E-7	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999932963992	WITHOUT_CLASSIFICATION	6.7036007264245156E-9	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999975526916	WITHOUT_CLASSIFICATION	2.4473083029042814E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999764708196	WITHOUT_CLASSIFICATION	2.3529180425879526E-8	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.999999999687696	WITHOUT_CLASSIFICATION	3.1230391526694014E-10	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999998035899113	WITHOUT_CLASSIFICATION	1.9641008883242025E-7	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9997880136852784	WITHOUT_CLASSIFICATION	2.119863147216684E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999999515883722	WITHOUT_CLASSIFICATION	4.841162790941871E-8	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999985362380759	WITHOUT_CLASSIFICATION	1.4637619241788769E-6	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999999264480055	WITHOUT_CLASSIFICATION	7.35519945678989E-8	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999952582772472	WITHOUT_CLASSIFICATION	4.741722752678151E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999997370497752	WITHOUT_CLASSIFICATION	2.629502247953925E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999999395570478	WITHOUT_CLASSIFICATION	6.044295221041879E-8	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999971704621314	WITHOUT_CLASSIFICATION	2.8295378686287775E-6	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999997128592764	WITHOUT_CLASSIFICATION	2.871407236283523E-7	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999994986701077	WITHOUT_CLASSIFICATION	5.013298922651827E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999763852497	WITHOUT_CLASSIFICATION	2.3614750197754734E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999999503958023	WITHOUT_CLASSIFICATION	4.960419769301199E-8	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999983671138183	WITHOUT_CLASSIFICATION	1.6328861817918587E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999991509231796	WITHOUT_CLASSIFICATION	8.490768204317029E-7	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999864593585	WITHOUT_CLASSIFICATION	1.3540641561025885E-8	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999991600994065	WITHOUT_CLASSIFICATION	8.399005936634146E-7	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999949414393345	WITHOUT_CLASSIFICATION	5.058560665449458E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999997944441589	WITHOUT_CLASSIFICATION	2.0555584111272878E-7	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999985253743656	WITHOUT_CLASSIFICATION	1.474625634303185E-6	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9998158866832305	WITHOUT_CLASSIFICATION	1.8411331676955792E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999998577911717	WITHOUT_CLASSIFICATION	1.4220882818595106E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999997399600318	WITHOUT_CLASSIFICATION	2.6003996818052494E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.999790289004189	WITHOUT_CLASSIFICATION	2.0971099581102877E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.999999822153005	WITHOUT_CLASSIFICATION	1.778469949972779E-7	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999999715116044	WITHOUT_CLASSIFICATION	2.8488395642170287E-8	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999994460918707	WITHOUT_CLASSIFICATION	5.539081292139292E-7	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999936177657259	WITHOUT_CLASSIFICATION	6.382234274033756E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999938879284946	WITHOUT_CLASSIFICATION	6.1120715053522655E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999999893516077	WITHOUT_CLASSIFICATION	1.064839226294993E-8	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999682524634701	WITHOUT_CLASSIFICATION	3.174753652988907E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.999980339397197	WITHOUT_CLASSIFICATION	1.966060280303266E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9998273044184252	WITHOUT_CLASSIFICATION	1.7269558157477532E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999999823473986	WITHOUT_CLASSIFICATION	1.765260146729821E-8	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999993817001559	WITHOUT_CLASSIFICATION	6.182998440699895E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999933924542	WITHOUT_CLASSIFICATION	6.6075458762423E-9	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999998080383383	WITHOUT_CLASSIFICATION	1.9196166161218769E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999971060957236	WITHOUT_CLASSIFICATION	2.893904276445137E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999997778657883	WITHOUT_CLASSIFICATION	2.221342116915273E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998976550484	WITHOUT_CLASSIFICATION	1.0234495158193259E-7	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999988624050323	WITHOUT_CLASSIFICATION	1.137594967668494E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999998294082604	WITHOUT_CLASSIFICATION	1.705917396878005E-7	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999997300654347	WITHOUT_CLASSIFICATION	2.6993456520543257E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999998283275366	WITHOUT_CLASSIFICATION	1.7167246334952488E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999994919088984	WITHOUT_CLASSIFICATION	5.080911015924834E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999575974203937	WITHOUT_CLASSIFICATION	4.2402579606347494E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.999993625214449	WITHOUT_CLASSIFICATION	6.374785550925053E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9998940070198722	WITHOUT_CLASSIFICATION	1.0599298012789882E-4	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999915755951049	WITHOUT_CLASSIFICATION	8.424404895234956E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999647107872391	WITHOUT_CLASSIFICATION	3.528921276091784E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999611437236477	WITHOUT_CLASSIFICATION	3.8856276352243906E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999904530384109	WITHOUT_CLASSIFICATION	9.546961589048807E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999132867466013	WITHOUT_CLASSIFICATION	8.671325339868937E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999849108268775	WITHOUT_CLASSIFICATION	1.5089173122449726E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907827015039	WITHOUT_CLASSIFICATION	9.217298496036233E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999805238968059	WITHOUT_CLASSIFICATION	1.9476103194059957E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999876493998895	WITHOUT_CLASSIFICATION	1.2350600110615018E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999625276933115	WITHOUT_CLASSIFICATION	3.747230668849588E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998958563113706	WITHOUT_CLASSIFICATION	1.0414368862947873E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999805182578326	WITHOUT_CLASSIFICATION	1.9481742167373976E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999740898241354	WITHOUT_CLASSIFICATION	2.591017586458011E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999888124008156	WITHOUT_CLASSIFICATION	1.1187599184418438E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999301909073559	WITHOUT_CLASSIFICATION	6.980909264406848E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999887669281673	WITHOUT_CLASSIFICATION	1.1233071832740989E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999899287919646	WITHOUT_CLASSIFICATION	1.0071208035385551E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999829430883659	WITHOUT_CLASSIFICATION	1.7056911634047254E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999332597452676	WITHOUT_CLASSIFICATION	6.67402547324174E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999052729155855	WITHOUT_CLASSIFICATION	9.472708441448936E-5	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999339986736479	WITHOUT_CLASSIFICATION	6.60013263522169E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999842435217133	WITHOUT_CLASSIFICATION	1.5756478286720877E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878957537057	WITHOUT_CLASSIFICATION	1.2104246294310836E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999061692366964	WITHOUT_CLASSIFICATION	9.383076330356783E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999192508740986	WITHOUT_CLASSIFICATION	8.074912590134654E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999421152674507	WITHOUT_CLASSIFICATION	5.7884732549303515E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988743724412	WITHOUT_CLASSIFICATION	1.1256275588042253E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999899287919646	WITHOUT_CLASSIFICATION	1.0071208035385551E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999421152674507	WITHOUT_CLASSIFICATION	5.7884732549303515E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999250448367717	WITHOUT_CLASSIFICATION	7.495516322833734E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988743724412	WITHOUT_CLASSIFICATION	1.1256275588042253E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988743724412	WITHOUT_CLASSIFICATION	1.1256275588042253E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999942519588946	WITHOUT_CLASSIFICATION	5.74804110539541E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999310502442161	WITHOUT_CLASSIFICATION	6.894975578386882E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999529291904806	WITHOUT_CLASSIFICATION	4.707080951929851E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999585924572097	WITHOUT_CLASSIFICATION	4.140754279030311E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998929348560109	WITHOUT_CLASSIFICATION	1.0706514398906714E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999843892869138	WITHOUT_CLASSIFICATION	1.5610713086300577E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999843892869138	WITHOUT_CLASSIFICATION	1.5610713086300577E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999418538188964	WITHOUT_CLASSIFICATION	5.814618110348126E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999383636643259	WITHOUT_CLASSIFICATION	6.1636335674149E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999169351341239	WITHOUT_CLASSIFICATION	8.306486587603528E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999840258252503	WITHOUT_CLASSIFICATION	1.597417474974398E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999049604854836	WITHOUT_CLASSIFICATION	9.503951451646343E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999855592704702	WITHOUT_CLASSIFICATION	1.444072952981277E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999563532003614	WITHOUT_CLASSIFICATION	4.364679963877144E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999899287919646	WITHOUT_CLASSIFICATION	1.0071208035385551E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988743724412	WITHOUT_CLASSIFICATION	1.1256275588042253E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999400936829703	WITHOUT_CLASSIFICATION	5.9906317029627186E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999255603946685	WITHOUT_CLASSIFICATION	7.44396053314709E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999347598353172	WITHOUT_CLASSIFICATION	6.52401646827358E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999506774927237	WITHOUT_CLASSIFICATION	4.932250727632713E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999412596054577	WITHOUT_CLASSIFICATION	5.8740394542440693E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999340749253179	WITHOUT_CLASSIFICATION	6.592507468207186E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999361244893048	WITHOUT_CLASSIFICATION	6.38755106952656E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998900862049911	WITHOUT_CLASSIFICATION	1.0991379500902696E-4	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999985584405672	WITHOUT_CLASSIFICATION	1.4415594327939436E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999985584405672	WITHOUT_CLASSIFICATION	1.4415594327939436E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897193478732	WITHOUT_CLASSIFICATION	1.028065212691611E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897193478732	WITHOUT_CLASSIFICATION	1.028065212691611E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900972172757	WITHOUT_CLASSIFICATION	9.902782724251248E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999308695340661	WITHOUT_CLASSIFICATION	6.913046593391638E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999899287919646	WITHOUT_CLASSIFICATION	1.0071208035385551E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999829430883659	WITHOUT_CLASSIFICATION	1.7056911634047254E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988743724412	WITHOUT_CLASSIFICATION	1.1256275588042253E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999843892869138	WITHOUT_CLASSIFICATION	1.5610713086300577E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999361244893048	WITHOUT_CLASSIFICATION	6.38755106952656E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999985584405672	WITHOUT_CLASSIFICATION	1.4415594327939436E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897193478732	WITHOUT_CLASSIFICATION	1.028065212691611E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999308695340661	WITHOUT_CLASSIFICATION	6.913046593391638E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999488417976917	WITHOUT_CLASSIFICATION	5.115820230830013E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999224187975905	WITHOUT_CLASSIFICATION	7.758120240960001E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999131869840385	WITHOUT_CLASSIFICATION	8.681301596150658E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998710273767244	WITHOUT_CLASSIFICATION	1.289726232756833E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997556334772135	WITHOUT_CLASSIFICATION	2.443665227865092E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999529088101702	WITHOUT_CLASSIFICATION	4.709118982972364E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999988887592082	WITHOUT_CLASSIFICATION	1.1112407918009334E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999843892869138	WITHOUT_CLASSIFICATION	1.5610713086300577E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999585776088331	WITHOUT_CLASSIFICATION	4.1422391166878346E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999988887592082	WITHOUT_CLASSIFICATION	1.1112407918009334E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999292482553297	WITHOUT_CLASSIFICATION	7.07517446702518E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999854919698212	WITHOUT_CLASSIFICATION	1.450803017879306E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999932294681297	WITHOUT_CLASSIFICATION	6.770531870303123E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999355301454459	WITHOUT_CLASSIFICATION	6.446985455411032E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999319597391871	WITHOUT_CLASSIFICATION	6.804026081291482E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999255460634265	WITHOUT_CLASSIFICATION	7.44539365734385E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999734733561124	WITHOUT_CLASSIFICATION	2.6526643887592834E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999401426519692	WITHOUT_CLASSIFICATION	5.9857348030778506E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999377464206496	WITHOUT_CLASSIFICATION	6.225357935050958E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999945292159008	WITHOUT_CLASSIFICATION	5.470784099162177E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999494170788704	WITHOUT_CLASSIFICATION	5.058292112943927E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999556724566018	WITHOUT_CLASSIFICATION	4.4327543398170974E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999565960993095	WITHOUT_CLASSIFICATION	4.3403900690372326E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999909550273821	WITHOUT_CLASSIFICATION	9.044972617931474E-6	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999878967995581	WITHOUT_CLASSIFICATION	1.2103200441785024E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999521968834636	WITHOUT_CLASSIFICATION	4.780311653633599E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999499852083914	WITHOUT_CLASSIFICATION	5.0014791608542056E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999913836616104	WITHOUT_CLASSIFICATION	8.616338389531206E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999897383349178	WITHOUT_CLASSIFICATION	1.0261665082136403E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999874752968322	WITHOUT_CLASSIFICATION	1.252470316787074E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999769052368	WITHOUT_CLASSIFICATION	2.3094763253516716E-8	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999375678036737	WITHOUT_CLASSIFICATION	6.243219632623718E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998108930085997	WITHOUT_CLASSIFICATION	1.8910699140025941E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999640479828845	WITHOUT_CLASSIFICATION	3.5952017115525655E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999494170788704	WITHOUT_CLASSIFICATION	5.058292112943927E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999527926691678	WITHOUT_CLASSIFICATION	4.720733083213797E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998145741159253	WITHOUT_CLASSIFICATION	1.8542588407473626E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999153931637926	WITHOUT_CLASSIFICATION	8.460683620736786E-5	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999997312577199	WITHOUT_CLASSIFICATION	2.6874228007029566E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999997790766356	WITHOUT_CLASSIFICATION	2.209233643771529E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999994999887033	WITHOUT_CLASSIFICATION	5.000112966291036E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999998634437437	WITHOUT_CLASSIFICATION	1.3655625631663132E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999998671717559	WITHOUT_CLASSIFICATION	1.3282824408647533E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999612314852	WITHOUT_CLASSIFICATION	3.876851495634667E-8	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999997662424638	WITHOUT_CLASSIFICATION	2.3375753633291085E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999767415239	WITHOUT_CLASSIFICATION	2.3258476098065982E-8	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999998597613423	WITHOUT_CLASSIFICATION	1.4023865762683171E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999996587133584	WITHOUT_CLASSIFICATION	3.4128664159834947E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998903641668	WITHOUT_CLASSIFICATION	1.0963583324176481E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998976550484	WITHOUT_CLASSIFICATION	1.0234495158193259E-7	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998594255506	WITHOUT_CLASSIFICATION	1.4057444937529858E-7	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998093010266	WITHOUT_CLASSIFICATION	1.9069897348815092E-7	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999960439783337	WITHOUT_CLASSIFICATION	3.956021666156211E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999975985387559	WITHOUT_CLASSIFICATION	2.401461243976918E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999996352074352	WITHOUT_CLASSIFICATION	3.64792564797425E-7	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999973799334465	WITHOUT_CLASSIFICATION	2.6200665535538217E-6	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999996017011363	WITHOUT_CLASSIFICATION	3.98298863775667E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999999251281038	WITHOUT_CLASSIFICATION	7.487189625630433E-8	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.999999858021574	WITHOUT_CLASSIFICATION	1.419784260936401E-7	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9998748395775027	WITHOUT_CLASSIFICATION	1.2516042249739897E-4	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.999999926294306	WITHOUT_CLASSIFICATION	7.370569404147621E-8	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999747249073716	WITHOUT_CLASSIFICATION	2.527509262839822E-5	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.999999770361054	WITHOUT_CLASSIFICATION	2.2963894591529737E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999990505475747	WITHOUT_CLASSIFICATION	9.494524253178422E-7	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999956170434	WITHOUT_CLASSIFICATION	4.382956543823726E-9	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.999998816220007	WITHOUT_CLASSIFICATION	1.1837799930072467E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999989245132708	WITHOUT_CLASSIFICATION	1.0754867292556474E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9969451574953532	WITHOUT_CLASSIFICATION	0.0030548425046468307	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999935831776081	WITHOUT_CLASSIFICATION	6.41682239179593E-6	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999999090827645	WITHOUT_CLASSIFICATION	9.091723554853757E-8	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.999999379389459	WITHOUT_CLASSIFICATION	6.206105408640273E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999993817001559	WITHOUT_CLASSIFICATION	6.182998440699895E-7	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999981373810735	WITHOUT_CLASSIFICATION	1.8626189264683641E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999993262411997	WITHOUT_CLASSIFICATION	6.737588003737658E-7	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999994530294175	WITHOUT_CLASSIFICATION	5.469705825006233E-7	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999532926686581	WITHOUT_CLASSIFICATION	4.670733134196732E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999936930738236	WITHOUT_CLASSIFICATION	6.306926176441935E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.999933978209957	WITHOUT_CLASSIFICATION	6.60217900430675E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999989414176449	WITHOUT_CLASSIFICATION	1.0585823551164865E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999769052368	WITHOUT_CLASSIFICATION	2.3094763253516716E-8	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999988375216641	WITHOUT_CLASSIFICATION	1.162478335936985E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999945585099754	WITHOUT_CLASSIFICATION	5.441490024633374E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999829521936986	WITHOUT_CLASSIFICATION	1.7047806301406496E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999999857296791	WITHOUT_CLASSIFICATION	1.4270320910192881E-8	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999999192214897	WITHOUT_CLASSIFICATION	8.07785103055737E-8	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999998113796491	WITHOUT_CLASSIFICATION	1.8862035085648502E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998976550484	WITHOUT_CLASSIFICATION	1.0234495158193259E-7	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994568589622926	WITHOUT_CLASSIFICATION	5.43141037707409E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999993553581	WITHOUT_CLASSIFICATION	6.446419100893572E-10	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999983399653	WITHOUT_CLASSIFICATION	1.660034666276663E-9	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999989408229	WITHOUT_CLASSIFICATION	1.059177068711529E-9	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.999999998793883	WITHOUT_CLASSIFICATION	1.2061170166954086E-9	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999945705188	WITHOUT_CLASSIFICATION	5.429481174655676E-9	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999992840044719	WITHOUT_CLASSIFICATION	7.15995528135529E-7	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999999225569253	WITHOUT_CLASSIFICATION	7.74430747391735E-8	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999977118252493	WITHOUT_CLASSIFICATION	2.288174750769656E-6	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999938064572	WITHOUT_CLASSIFICATION	6.19354287410206E-9	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999836706757358	WITHOUT_CLASSIFICATION	1.6329324264152515E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999993792981808	WITHOUT_CLASSIFICATION	6.207018190602086E-7	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999905480908877	WITHOUT_CLASSIFICATION	9.451909112254315E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999957905035839	WITHOUT_CLASSIFICATION	4.209496416187643E-6	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.999999793090946	WITHOUT_CLASSIFICATION	2.0690905404881845E-7	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.999998341868089	WITHOUT_CLASSIFICATION	1.6581319110179684E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999998059236358	WITHOUT_CLASSIFICATION	1.9407636409898021E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999949213506489	WITHOUT_CLASSIFICATION	5.078649351064856E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999951091858427	WITHOUT_CLASSIFICATION	4.890814157435685E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9998219652000091	WITHOUT_CLASSIFICATION	1.7803479999090675E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.999960185952513	WITHOUT_CLASSIFICATION	3.981404748686096E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9996647964011662	WITHOUT_CLASSIFICATION	3.352035988337744E-4	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9982367444584472	WITHOUT_CLASSIFICATION	0.0017632555415528128	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999990673607001	WITHOUT_CLASSIFICATION	9.326392998584644E-7	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999999646711446	WITHOUT_CLASSIFICATION	3.532885545154225E-8	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999917296731533	WITHOUT_CLASSIFICATION	8.270326846603873E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.999999991218165	WITHOUT_CLASSIFICATION	8.781835003825777E-9	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999997800024937	WITHOUT_CLASSIFICATION	2.1999750633161834E-7	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999932963992	WITHOUT_CLASSIFICATION	6.7036007264245156E-9	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999975526916	WITHOUT_CLASSIFICATION	2.4473083029042814E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999764708196	WITHOUT_CLASSIFICATION	2.3529180425879526E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999764708196	WITHOUT_CLASSIFICATION	2.3529180425879526E-8	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.999999999687696	WITHOUT_CLASSIFICATION	3.1230391526694014E-10	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999998035899113	WITHOUT_CLASSIFICATION	1.9641008883242025E-7	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9997880136852784	WITHOUT_CLASSIFICATION	2.119863147216684E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999999515883722	WITHOUT_CLASSIFICATION	4.841162790941871E-8	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999999264480055	WITHOUT_CLASSIFICATION	7.35519945678989E-8	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999952582772472	WITHOUT_CLASSIFICATION	4.741722752678151E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999997370497752	WITHOUT_CLASSIFICATION	2.629502247953925E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999999395570478	WITHOUT_CLASSIFICATION	6.044295221041879E-8	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999997128592764	WITHOUT_CLASSIFICATION	2.871407236283523E-7	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999971135135	WITHOUT_CLASSIFICATION	2.8864864945605188E-9	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999994986701077	WITHOUT_CLASSIFICATION	5.013298922651827E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999763852497	WITHOUT_CLASSIFICATION	2.3614750197754734E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999999503958023	WITHOUT_CLASSIFICATION	4.960419769301199E-8	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999983671138183	WITHOUT_CLASSIFICATION	1.6328861817918587E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999991509231796	WITHOUT_CLASSIFICATION	8.490768204317029E-7	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999991600994065	WITHOUT_CLASSIFICATION	8.399005936634146E-7	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999949414393345	WITHOUT_CLASSIFICATION	5.058560665449458E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999997944441589	WITHOUT_CLASSIFICATION	2.0555584111272878E-7	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999985253743656	WITHOUT_CLASSIFICATION	1.474625634303185E-6	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9998158866832305	WITHOUT_CLASSIFICATION	1.8411331676955792E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999998577911717	WITHOUT_CLASSIFICATION	1.4220882818595106E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999997399600318	WITHOUT_CLASSIFICATION	2.6003996818052494E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.999790289004189	WITHOUT_CLASSIFICATION	2.0971099581102877E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.999999822153005	WITHOUT_CLASSIFICATION	1.778469949972779E-7	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999999715116044	WITHOUT_CLASSIFICATION	2.8488395642170287E-8	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999994460918707	WITHOUT_CLASSIFICATION	5.539081292139292E-7	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999938879284946	WITHOUT_CLASSIFICATION	6.1120715053522655E-6	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999682524634701	WITHOUT_CLASSIFICATION	3.174753652988907E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.999980339397197	WITHOUT_CLASSIFICATION	1.966060280303266E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9998273044184252	WITHOUT_CLASSIFICATION	1.7269558157477532E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999999823473986	WITHOUT_CLASSIFICATION	1.765260146729821E-8	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999509891976354	WITHOUT_CLASSIFICATION	4.901080236463321E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999997547694147	WITHOUT_CLASSIFICATION	2.452305852776259E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999998159972034	WITHOUT_CLASSIFICATION	1.8400279655964368E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999933924542	WITHOUT_CLASSIFICATION	6.6075458762423E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999733712218	WITHOUT_CLASSIFICATION	2.6628778229095034E-8	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999998080383383	WITHOUT_CLASSIFICATION	1.9196166161218769E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999971060957236	WITHOUT_CLASSIFICATION	2.893904276445137E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999997778657883	WITHOUT_CLASSIFICATION	2.221342116915273E-7	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999999737157945	WITHOUT_CLASSIFICATION	2.6284205393289327E-8	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999988624050323	WITHOUT_CLASSIFICATION	1.137594967668494E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999998294082604	WITHOUT_CLASSIFICATION	1.705917396878005E-7	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999997300654347	WITHOUT_CLASSIFICATION	2.6993456520543257E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999998283275366	WITHOUT_CLASSIFICATION	1.7167246334952488E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999994919088984	WITHOUT_CLASSIFICATION	5.080911015924834E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999575974203937	WITHOUT_CLASSIFICATION	4.2402579606347494E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.999993625214449	WITHOUT_CLASSIFICATION	6.374785550925053E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9998940070198722	WITHOUT_CLASSIFICATION	1.0599298012789882E-4	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999915755951049	WITHOUT_CLASSIFICATION	8.424404895234956E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999611437236477	WITHOUT_CLASSIFICATION	3.8856276352243906E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999904530384109	WITHOUT_CLASSIFICATION	9.546961589048807E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999132867466013	WITHOUT_CLASSIFICATION	8.671325339868937E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999849108268775	WITHOUT_CLASSIFICATION	1.5089173122449726E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999907827015039	WITHOUT_CLASSIFICATION	9.217298496036233E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999805238968059	WITHOUT_CLASSIFICATION	1.9476103194059957E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999876493998895	WITHOUT_CLASSIFICATION	1.2350600110615018E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999625276933115	WITHOUT_CLASSIFICATION	3.747230668849588E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998958563113706	WITHOUT_CLASSIFICATION	1.0414368862947873E-4	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999805182578326	WITHOUT_CLASSIFICATION	1.9481742167373976E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999740898241354	WITHOUT_CLASSIFICATION	2.591017586458011E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999888124008156	WITHOUT_CLASSIFICATION	1.1187599184418438E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998436776544292	WITHOUT_CLASSIFICATION	1.5632234557093008E-4	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999887669281673	WITHOUT_CLASSIFICATION	1.1233071832740989E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999899287919646	WITHOUT_CLASSIFICATION	1.0071208035385551E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999829430883659	WITHOUT_CLASSIFICATION	1.7056911634047254E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999052729155855	WITHOUT_CLASSIFICATION	9.472708441448936E-5	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999339986736479	WITHOUT_CLASSIFICATION	6.60013263522169E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999842435217133	WITHOUT_CLASSIFICATION	1.5756478286720877E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878957537057	WITHOUT_CLASSIFICATION	1.2104246294310836E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999061692366964	WITHOUT_CLASSIFICATION	9.383076330356783E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999212489767152	WITHOUT_CLASSIFICATION	7.87510232847745E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999192508740986	WITHOUT_CLASSIFICATION	8.074912590134654E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999421152674507	WITHOUT_CLASSIFICATION	5.7884732549303515E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988743724412	WITHOUT_CLASSIFICATION	1.1256275588042253E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988743724412	WITHOUT_CLASSIFICATION	1.1256275588042253E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999942519588946	WITHOUT_CLASSIFICATION	5.74804110539541E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999843892869138	WITHOUT_CLASSIFICATION	1.5610713086300577E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999843892869138	WITHOUT_CLASSIFICATION	1.5610713086300577E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999383636643259	WITHOUT_CLASSIFICATION	6.1636335674149E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999421152674507	WITHOUT_CLASSIFICATION	5.7884732549303515E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988743724412	WITHOUT_CLASSIFICATION	1.1256275588042253E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999310502442161	WITHOUT_CLASSIFICATION	6.894975578386882E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999529291904806	WITHOUT_CLASSIFICATION	4.707080951929851E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999585924572097	WITHOUT_CLASSIFICATION	4.140754279030311E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998929348560109	WITHOUT_CLASSIFICATION	1.0706514398906714E-4	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999843892869138	WITHOUT_CLASSIFICATION	1.5610713086300577E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999418538188964	WITHOUT_CLASSIFICATION	5.814618110348126E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999169351341239	WITHOUT_CLASSIFICATION	8.306486587603528E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999840258252503	WITHOUT_CLASSIFICATION	1.597417474974398E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999049604854836	WITHOUT_CLASSIFICATION	9.503951451646343E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999855592704702	WITHOUT_CLASSIFICATION	1.444072952981277E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999563532003614	WITHOUT_CLASSIFICATION	4.364679963877144E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999292598692338	WITHOUT_CLASSIFICATION	7.074013076632263E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998637385711526	WITHOUT_CLASSIFICATION	1.362614288473777E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999255603946685	WITHOUT_CLASSIFICATION	7.44396053314709E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999347598353172	WITHOUT_CLASSIFICATION	6.52401646827358E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999412596054577	WITHOUT_CLASSIFICATION	5.8740394542440693E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999899287919646	WITHOUT_CLASSIFICATION	1.0071208035385551E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999899287919646	WITHOUT_CLASSIFICATION	1.0071208035385551E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999506774927237	WITHOUT_CLASSIFICATION	4.932250727632713E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999340749253179	WITHOUT_CLASSIFICATION	6.592507468207186E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999361244893048	WITHOUT_CLASSIFICATION	6.38755106952656E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999985584405672	WITHOUT_CLASSIFICATION	1.4415594327939436E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999985584405672	WITHOUT_CLASSIFICATION	1.4415594327939436E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897193478732	WITHOUT_CLASSIFICATION	1.028065212691611E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897193478732	WITHOUT_CLASSIFICATION	1.028065212691611E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900972172757	WITHOUT_CLASSIFICATION	9.902782724251248E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999900972172757	WITHOUT_CLASSIFICATION	9.902782724251248E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999308695340661	WITHOUT_CLASSIFICATION	6.913046593391638E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999488417976917	WITHOUT_CLASSIFICATION	5.115820230830013E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999829430883659	WITHOUT_CLASSIFICATION	1.7056911634047254E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988743724412	WITHOUT_CLASSIFICATION	1.1256275588042253E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999843892869138	WITHOUT_CLASSIFICATION	1.5610713086300577E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999361244893048	WITHOUT_CLASSIFICATION	6.38755106952656E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999985584405672	WITHOUT_CLASSIFICATION	1.4415594327939436E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897193478732	WITHOUT_CLASSIFICATION	1.028065212691611E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999224187975905	WITHOUT_CLASSIFICATION	7.758120240960001E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999131869840385	WITHOUT_CLASSIFICATION	8.681301596150658E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998710273767244	WITHOUT_CLASSIFICATION	1.289726232756833E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997556334772135	WITHOUT_CLASSIFICATION	2.443665227865092E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999529088101702	WITHOUT_CLASSIFICATION	4.709118982972364E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999585776088331	WITHOUT_CLASSIFICATION	4.1422391166878346E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999585776088331	WITHOUT_CLASSIFICATION	4.1422391166878346E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999988887592082	WITHOUT_CLASSIFICATION	1.1112407918009334E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999292482553297	WITHOUT_CLASSIFICATION	7.07517446702518E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999854919698212	WITHOUT_CLASSIFICATION	1.450803017879306E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999932294681297	WITHOUT_CLASSIFICATION	6.770531870303123E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999355301454459	WITHOUT_CLASSIFICATION	6.446985455411032E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988743724412	WITHOUT_CLASSIFICATION	1.1256275588042253E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999843892869138	WITHOUT_CLASSIFICATION	1.5610713086300577E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999988887592082	WITHOUT_CLASSIFICATION	1.1112407918009334E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999319597391871	WITHOUT_CLASSIFICATION	6.804026081291482E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999255460634265	WITHOUT_CLASSIFICATION	7.44539365734385E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999734733561124	WITHOUT_CLASSIFICATION	2.6526643887592834E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999377464206496	WITHOUT_CLASSIFICATION	6.225357935050958E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999945292159008	WITHOUT_CLASSIFICATION	5.470784099162177E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999494170788704	WITHOUT_CLASSIFICATION	5.058292112943927E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999556724566018	WITHOUT_CLASSIFICATION	4.4327543398170974E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999565960993095	WITHOUT_CLASSIFICATION	4.3403900690372326E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999909550273821	WITHOUT_CLASSIFICATION	9.044972617931474E-6	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999878967995581	WITHOUT_CLASSIFICATION	1.2103200441785024E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999521968834636	WITHOUT_CLASSIFICATION	4.780311653633599E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999499852083914	WITHOUT_CLASSIFICATION	5.0014791608542056E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999913836616104	WITHOUT_CLASSIFICATION	8.616338389531206E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999897383349178	WITHOUT_CLASSIFICATION	1.0261665082136403E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999874752968322	WITHOUT_CLASSIFICATION	1.252470316787074E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999728804736034	WITHOUT_CLASSIFICATION	2.711952639655578E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999640479828845	WITHOUT_CLASSIFICATION	3.5952017115525655E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999494170788704	WITHOUT_CLASSIFICATION	5.058292112943927E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999527926691678	WITHOUT_CLASSIFICATION	4.720733083213797E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9998145741159253	WITHOUT_CLASSIFICATION	1.8542588407473626E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999153931637926	WITHOUT_CLASSIFICATION	8.460683620736786E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9994568589622926	WITHOUT_CLASSIFICATION	5.43141037707409E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999997312577199	WITHOUT_CLASSIFICATION	2.6874228007029566E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.9999997790766356	WITHOUT_CLASSIFICATION	2.209233643771529E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999994999887033	WITHOUT_CLASSIFICATION	5.000112966291036E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999998634437437	WITHOUT_CLASSIFICATION	1.3655625631663132E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999998671717559	WITHOUT_CLASSIFICATION	1.3282824408647533E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999612314852	WITHOUT_CLASSIFICATION	3.876851495634667E-8	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999997662424638	WITHOUT_CLASSIFICATION	2.3375753633291085E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999767415239	WITHOUT_CLASSIFICATION	2.3258476098065982E-8	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999998597613423	WITHOUT_CLASSIFICATION	1.4023865762683171E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999996587133584	WITHOUT_CLASSIFICATION	3.4128664159834947E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998903641668	WITHOUT_CLASSIFICATION	1.0963583324176481E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998976550484	WITHOUT_CLASSIFICATION	1.0234495158193259E-7	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998594255506	WITHOUT_CLASSIFICATION	1.4057444937529858E-7	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998093010266	WITHOUT_CLASSIFICATION	1.9069897348815092E-7	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999960439783337	WITHOUT_CLASSIFICATION	3.956021666156211E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999975985387559	WITHOUT_CLASSIFICATION	2.401461243976918E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999769052368	WITHOUT_CLASSIFICATION	2.3094763253516716E-8	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999996352074352	WITHOUT_CLASSIFICATION	3.64792564797425E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999996352074352	WITHOUT_CLASSIFICATION	3.64792564797425E-7	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999996017011363	WITHOUT_CLASSIFICATION	3.98298863775667E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999999251281038	WITHOUT_CLASSIFICATION	7.487189625630433E-8	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999993553581	WITHOUT_CLASSIFICATION	6.446419100893572E-10	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999984406232645	WITHOUT_CLASSIFICATION	1.559376735563856E-6	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999984406232645	WITHOUT_CLASSIFICATION	1.559376735563856E-6	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9999898893851817	WITHOUT_CLASSIFICATION	1.0110614818211336E-5	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9999768650116897	WITHOUT_CLASSIFICATION	2.3134988310291162E-5	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999998867199273	WITHOUT_CLASSIFICATION	1.1328007266768974E-7	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999762279018745	WITHOUT_CLASSIFICATION	2.3772098125557524E-5	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9825057417986687	WITHOUT_CLASSIFICATION	0.017494258201331315	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999862035907021	WITHOUT_CLASSIFICATION	1.379640929786745E-5	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999985427654772	WITHOUT_CLASSIFICATION	1.4572345228646532E-6	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.999999943440816	WITHOUT_CLASSIFICATION	5.6559183905610675E-8	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9988968426036	WITHOUT_CLASSIFICATION	0.0011031573963999918	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999858233473844	WITHOUT_CLASSIFICATION	1.4176652615574472E-5	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999068520756282	WITHOUT_CLASSIFICATION	9.314792437181909E-5	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999931824617968	WITHOUT_CLASSIFICATION	6.817538203195474E-6	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999889685718931	WITHOUT_CLASSIFICATION	1.1031428106887458E-5	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.999849575601501	WITHOUT_CLASSIFICATION	1.504243984990419E-4	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999977325014504	WITHOUT_CLASSIFICATION	2.2674985496763436E-6	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999999653152293	WITHOUT_CLASSIFICATION	3.4684770735527375E-8	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9998584427286905	WITHOUT_CLASSIFICATION	1.4155727130955897E-4	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9998112626742764	WITHOUT_CLASSIFICATION	1.8873732572347856E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999927696916017	WITHOUT_CLASSIFICATION	7.230308398341883E-6	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9999972530894424	WITHOUT_CLASSIFICATION	2.7469105575208194E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999998000934398	WITHOUT_CLASSIFICATION	1.9990656005913485E-7	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.99993515876986	WITHOUT_CLASSIFICATION	6.484123013992156E-5	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999954998449739	WITHOUT_CLASSIFICATION	4.500155026098045E-6	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.999768936188785	WITHOUT_CLASSIFICATION	2.3106381121489264E-4	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999802865230218	WITHOUT_CLASSIFICATION	1.9713476978139354E-5	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9999898264926937	WITHOUT_CLASSIFICATION	1.0173507306302961E-5	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999969218472627	WITHOUT_CLASSIFICATION	3.078152737374087E-6	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9994332872553465	WITHOUT_CLASSIFICATION	5.667127446534383E-4	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999507349163689	WITHOUT_CLASSIFICATION	4.9265083631177074E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.999998695444475	WITHOUT_CLASSIFICATION	1.3045555250112025E-6	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.999998695444475	WITHOUT_CLASSIFICATION	1.3045555250112025E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998704164242	WITHOUT_CLASSIFICATION	1.2958357571559654E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998704164242	WITHOUT_CLASSIFICATION	1.2958357571559654E-7	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999958939243205	WITHOUT_CLASSIFICATION	4.106075679505261E-6	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999975574394154	WITHOUT_CLASSIFICATION	2.442560584589019E-6	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999999569426552	WITHOUT_CLASSIFICATION	4.305734491844928E-8	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9998147615986449	WITHOUT_CLASSIFICATION	1.852384013550533E-4	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.999997627573978	WITHOUT_CLASSIFICATION	2.3724260219671035E-6	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999990928655608	WITHOUT_CLASSIFICATION	9.071344392447139E-7	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999941545942055	WITHOUT_CLASSIFICATION	5.845405794527979E-6	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9998684715847284	WITHOUT_CLASSIFICATION	1.3152841527154987E-4	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999999631497034	WITHOUT_CLASSIFICATION	3.685029661510248E-8	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999990182607826	WITHOUT_CLASSIFICATION	9.817392173576744E-7	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999990182607826	WITHOUT_CLASSIFICATION	9.817392173576744E-7	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999337316506614	WITHOUT_CLASSIFICATION	6.626834933866207E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999337316506614	WITHOUT_CLASSIFICATION	6.626834933866207E-5	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999008368808495	WITHOUT_CLASSIFICATION	9.916311915046457E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999990612457716	WITHOUT_CLASSIFICATION	9.387542283870477E-7	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999997105788021	WITHOUT_CLASSIFICATION	2.8942119797084297E-7	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999995239542643	WITHOUT_CLASSIFICATION	4.7604573568054E-7	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9999998189234806	WITHOUT_CLASSIFICATION	1.810765194282731E-7	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999999218331115	WITHOUT_CLASSIFICATION	7.816688854213589E-8	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999954521343034	WITHOUT_CLASSIFICATION	4.547865696667919E-6	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999999467290386	WITHOUT_CLASSIFICATION	5.327096134267596E-8	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9993343981222542	WITHOUT_CLASSIFICATION	6.656018777458679E-4	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999997527057344	WITHOUT_CLASSIFICATION	2.4729426566271847E-7	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9999860222310645	WITHOUT_CLASSIFICATION	1.3977768935487488E-5	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999999039525681	WITHOUT_CLASSIFICATION	9.604743186052696E-8	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999575660418898	WITHOUT_CLASSIFICATION	4.2433958110304336E-5	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.999999661947465	WITHOUT_CLASSIFICATION	3.3805253497774905E-7	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999999636658169	WITHOUT_CLASSIFICATION	3.633418304949076E-8	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999785167617903	WITHOUT_CLASSIFICATION	2.1483238209739265E-5	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.999982606702016	WITHOUT_CLASSIFICATION	1.7393297983929718E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999230232462389	WITHOUT_CLASSIFICATION	7.697675376104394E-5	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9999890434970717	WITHOUT_CLASSIFICATION	1.0956502928184118E-5	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999992843552652	WITHOUT_CLASSIFICATION	7.156447348476555E-7	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9993961897022063	WITHOUT_CLASSIFICATION	6.038102977937312E-4	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999880780578562	WITHOUT_CLASSIFICATION	1.1921942143781112E-5	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999998294606111	WITHOUT_CLASSIFICATION	1.7053938902777161E-7	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999989238288127	WITHOUT_CLASSIFICATION	1.0761711871854572E-6	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999999870955604	WITHOUT_CLASSIFICATION	1.2904439589364888E-8	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9994710561164013	WITHOUT_CLASSIFICATION	5.289438835987152E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999967787829708	WITHOUT_CLASSIFICATION	3.2212170293794445E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999995803692359	WITHOUT_CLASSIFICATION	4.196307641121266E-7	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999995803692359	WITHOUT_CLASSIFICATION	4.196307641121266E-7	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999596561395688	WITHOUT_CLASSIFICATION	4.0343860431179786E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9999365140286832	WITHOUT_CLASSIFICATION	6.348597131678824E-5	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999982501294238	WITHOUT_CLASSIFICATION	1.749870576188789E-6	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9997700637374363	WITHOUT_CLASSIFICATION	2.2993626256372781E-4	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999966650057742	WITHOUT_CLASSIFICATION	3.3349942257098966E-6	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999518342545163	WITHOUT_CLASSIFICATION	4.8165745483651464E-5	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.999999733568687	WITHOUT_CLASSIFICATION	2.6643131306381274E-7	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9998681583343692	WITHOUT_CLASSIFICATION	1.3184166563093972E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998704164242	WITHOUT_CLASSIFICATION	1.2958357571559654E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998704164242	WITHOUT_CLASSIFICATION	1.2958357571559654E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998704164242	WITHOUT_CLASSIFICATION	1.2958357571559654E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9994710561164013	WITHOUT_CLASSIFICATION	5.289438835987152E-4	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9997711054682578	WITHOUT_CLASSIFICATION	2.2889453174226894E-4	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999972714595654	WITHOUT_CLASSIFICATION	2.728540434609634E-6	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999981398368645	WITHOUT_CLASSIFICATION	1.8601631355310625E-6	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.999978411949693	WITHOUT_CLASSIFICATION	2.1588050306996196E-5	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999896674049927	WITHOUT_CLASSIFICATION	1.0332595007300041E-5	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999895551898413	WITHOUT_CLASSIFICATION	1.044481015857896E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999485755414	WITHOUT_CLASSIFICATION	5.142445865510827E-8	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999999242802081	WITHOUT_CLASSIFICATION	7.571979186459693E-8	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9996834827343813	WITHOUT_CLASSIFICATION	3.165172656186177E-4	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999997342261401	WITHOUT_CLASSIFICATION	2.657738599252823E-7	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999999691641429	WITHOUT_CLASSIFICATION	3.0835857084726485E-8	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999999870608159	WITHOUT_CLASSIFICATION	1.2939184037287247E-8	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999996137178009	WITHOUT_CLASSIFICATION	3.8628219916358056E-7	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999993845786596	WITHOUT_CLASSIFICATION	6.154213404908044E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999995414448156	WITHOUT_CLASSIFICATION	4.585551844428846E-7	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9999973145421777	WITHOUT_CLASSIFICATION	2.6854578223453837E-6	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9997949089595363	WITHOUT_CLASSIFICATION	2.0509104046376728E-4	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999992762765783	WITHOUT_CLASSIFICATION	7.237234217384299E-7	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.999994608076503	WITHOUT_CLASSIFICATION	5.391923496975013E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999961544494679	WITHOUT_CLASSIFICATION	3.845550532120924E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999690946670277	WITHOUT_CLASSIFICATION	3.0905332972266875E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999974476951246	WITHOUT_CLASSIFICATION	2.552304875409088E-6	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999982392502431	WITHOUT_CLASSIFICATION	1.760749756878678E-6	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999691008122155	WITHOUT_CLASSIFICATION	3.089918778460663E-5	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999983513089354	WITHOUT_CLASSIFICATION	1.6486910645758689E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998704164242	WITHOUT_CLASSIFICATION	1.2958357571559654E-7	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999485755414	WITHOUT_CLASSIFICATION	5.142445865510827E-8	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999995414448156	WITHOUT_CLASSIFICATION	4.585551844428846E-7	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999996892267884	WITHOUT_CLASSIFICATION	3.1077321168001856E-7	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999997529829081	WITHOUT_CLASSIFICATION	2.4701709183443914E-7	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999339408574086	WITHOUT_CLASSIFICATION	6.60591425913623E-5	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9993761856158521	WITHOUT_CLASSIFICATION	6.238143841479437E-4	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999733576622676	WITHOUT_CLASSIFICATION	2.6642337732436598E-5	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9999699575135241	WITHOUT_CLASSIFICATION	3.0042486475819736E-5	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9999998416461007	WITHOUT_CLASSIFICATION	1.5835389930383463E-7	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999850234647876	WITHOUT_CLASSIFICATION	1.4976535212333234E-5	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9982482922698702	WITHOUT_CLASSIFICATION	0.0017517077301297604	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999850281912865	WITHOUT_CLASSIFICATION	1.4971808713497683E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999662775852765	WITHOUT_CLASSIFICATION	3.372241472354304E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999662775852765	WITHOUT_CLASSIFICATION	3.372241472354304E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9998560660879604	WITHOUT_CLASSIFICATION	1.4393391203948767E-4	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9999564163963494	WITHOUT_CLASSIFICATION	4.3583603650697434E-5	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999981242279627	WITHOUT_CLASSIFICATION	1.875772037230675E-6	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999999635911363	WITHOUT_CLASSIFICATION	3.640886374214369E-8	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9998537139283926	WITHOUT_CLASSIFICATION	1.4628607160737802E-4	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999742211157902	WITHOUT_CLASSIFICATION	2.577888420985062E-5	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999961559376271	WITHOUT_CLASSIFICATION	3.844062372895592E-6	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999982175733081	WITHOUT_CLASSIFICATION	1.7824266918420602E-6	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999949435185241	WITHOUT_CLASSIFICATION	5.056481475825049E-6	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999999738703296	WITHOUT_CLASSIFICATION	2.6129670493472945E-8	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999689372999941	WITHOUT_CLASSIFICATION	3.106270000582099E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999337316506614	WITHOUT_CLASSIFICATION	6.626834933866207E-5	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999954521343034	WITHOUT_CLASSIFICATION	4.547865696667919E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999995414448156	WITHOUT_CLASSIFICATION	4.585551844428846E-7	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9998537139283926	WITHOUT_CLASSIFICATION	1.4628607160737802E-4	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999742211157902	WITHOUT_CLASSIFICATION	2.577888420985062E-5	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999547664584867	WITHOUT_CLASSIFICATION	4.523354151329201E-5	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999998714162666	WITHOUT_CLASSIFICATION	1.2858373350085277E-7	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.999745483914795	WITHOUT_CLASSIFICATION	2.5451608520500753E-4	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9999400136121016	WITHOUT_CLASSIFICATION	5.9986387898491917E-5	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9999741974981519	WITHOUT_CLASSIFICATION	2.58025018481469E-5	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999994572424236	WITHOUT_CLASSIFICATION	5.42757576465891E-7	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9987673602997355	WITHOUT_CLASSIFICATION	0.001232639700264492	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9999999539884715	WITHOUT_CLASSIFICATION	4.601152848155528E-8	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999974596270418	WITHOUT_CLASSIFICATION	2.5403729582472877E-6	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9999998930330296	WITHOUT_CLASSIFICATION	1.069669703716439E-7	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999999692213413	WITHOUT_CLASSIFICATION	3.07786586629219E-8	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9999995836314037	WITHOUT_CLASSIFICATION	4.1636859632427826E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9910462948528889	WITHOUT_CLASSIFICATION	0.008953705147111156	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999999489219497	WITHOUT_CLASSIFICATION	5.107805028090082E-8	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9999632106585787	WITHOUT_CLASSIFICATION	3.678934142116865E-5	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999845882557	WITHOUT_CLASSIFICATION	1.5411744331325815E-8	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9910462948528889	WITHOUT_CLASSIFICATION	0.008953705147111156	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9910462948528889	WITHOUT_CLASSIFICATION	0.008953705147111156	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9910462948528889	WITHOUT_CLASSIFICATION	0.008953705147111156	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999959679931455	WITHOUT_CLASSIFICATION	4.03200685449766E-6	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999993032671599	WITHOUT_CLASSIFICATION	6.967328400320103E-7	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999998692337573	WITHOUT_CLASSIFICATION	1.3076624278786306E-7	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999980111983329	WITHOUT_CLASSIFICATION	1.988801667067164E-6	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.999996990545104	WITHOUT_CLASSIFICATION	3.009454895967472E-6	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.999602990228374	WITHOUT_CLASSIFICATION	3.970097716260241E-4	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9999918156495718	WITHOUT_CLASSIFICATION	8.184350428133937E-6	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999986050138469	WITHOUT_CLASSIFICATION	1.3949861531743095E-6	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999969746730758	WITHOUT_CLASSIFICATION	3.025326924305848E-6	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999984489945472	WITHOUT_CLASSIFICATION	1.5510054529071811E-6	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9999995581179582	WITHOUT_CLASSIFICATION	4.418820418817946E-7	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9999697282555438	WITHOUT_CLASSIFICATION	3.0271744456216825E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.999999302989594	WITHOUT_CLASSIFICATION	6.970104059328298E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999996352074352	WITHOUT_CLASSIFICATION	3.64792564797425E-7	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999714306956149	WITHOUT_CLASSIFICATION	2.8569304385193364E-5	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9982249911008008	WITHOUT_CLASSIFICATION	0.0017750088991993047	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.999986549834061	WITHOUT_CLASSIFICATION	1.3450165939015724E-5	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999972703438672	WITHOUT_CLASSIFICATION	2.7296561327832996E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999655772221	WITHOUT_CLASSIFICATION	3.442277788394142E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999655772221	WITHOUT_CLASSIFICATION	3.442277788394142E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999807785756	WITHOUT_CLASSIFICATION	1.9221424393699418E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999970721058266	WITHOUT_CLASSIFICATION	2.927894173481223E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999807785756	WITHOUT_CLASSIFICATION	1.9221424393699418E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999993796327044	WITHOUT_CLASSIFICATION	6.203672956013523E-7	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999996654622714	WITHOUT_CLASSIFICATION	3.345377286715518E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999994988368052	WITHOUT_CLASSIFICATION	5.011631948628194E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.999999922859035	WITHOUT_CLASSIFICATION	7.714096495254515E-8	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.999999922859035	WITHOUT_CLASSIFICATION	7.714096495254515E-8	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999995174424063	WITHOUT_CLASSIFICATION	4.825575937776353E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999995174424063	WITHOUT_CLASSIFICATION	4.825575937776353E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999996101662665	WITHOUT_CLASSIFICATION	3.8983373352152034E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999996101662665	WITHOUT_CLASSIFICATION	3.8983373352152034E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996259267624	WITHOUT_CLASSIFICATION	3.7407323765288363E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996259267624	WITHOUT_CLASSIFICATION	3.7407323765288363E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996259267624	WITHOUT_CLASSIFICATION	3.7407323765288363E-7	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9999995807261965	WITHOUT_CLASSIFICATION	4.192738033714906E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996259267624	WITHOUT_CLASSIFICATION	3.7407323765288363E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996259267624	WITHOUT_CLASSIFICATION	3.7407323765288363E-7	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999997129273139	WITHOUT_CLASSIFICATION	2.870726860286049E-7	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999971473476036	WITHOUT_CLASSIFICATION	2.85265239647817E-6	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9999990312408457	WITHOUT_CLASSIFICATION	9.687591543178667E-7	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9998851067026598	WITHOUT_CLASSIFICATION	1.1489329734014828E-4	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.999983915131259	WITHOUT_CLASSIFICATION	1.608486874098124E-5	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999998216375215	WITHOUT_CLASSIFICATION	1.783624784052605E-7	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.999982892117642	WITHOUT_CLASSIFICATION	1.710788235800291E-5	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999979104094546	WITHOUT_CLASSIFICATION	2.089590545378468E-6	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9995770930979275	WITHOUT_CLASSIFICATION	4.229069020724807E-4	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999999647206935	WITHOUT_CLASSIFICATION	3.5279306498376557E-8	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999697630528498	WITHOUT_CLASSIFICATION	3.0236947150166196E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999991849720371	WITHOUT_CLASSIFICATION	8.150279630431366E-7	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999960006897282	WITHOUT_CLASSIFICATION	3.999310271816415E-6	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999995160724425	WITHOUT_CLASSIFICATION	4.839275574669387E-7	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999902519945147	WITHOUT_CLASSIFICATION	9.748005485203302E-6	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999957658584953	WITHOUT_CLASSIFICATION	4.234141504747597E-6	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999995320613648	WITHOUT_CLASSIFICATION	4.679386351620424E-7	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999878921252425	WITHOUT_CLASSIFICATION	1.2107874757432652E-5	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999993828058653	WITHOUT_CLASSIFICATION	6.171941346186225E-7	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999977796169978	WITHOUT_CLASSIFICATION	2.2203830022523687E-6	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999987553126268	WITHOUT_CLASSIFICATION	1.2446873731682379E-6	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9962337978834885	WITHOUT_CLASSIFICATION	0.0037662021165113502	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9962337978834885	WITHOUT_CLASSIFICATION	0.0037662021165113502	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9944754159898601	WITHOUT_CLASSIFICATION	0.00552458401013992	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9944754159898601	WITHOUT_CLASSIFICATION	0.00552458401013992	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999995519090883	WITHOUT_CLASSIFICATION	4.4809091167440785E-7	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999938348389983	WITHOUT_CLASSIFICATION	6.165161001638297E-6	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999999763777635	WITHOUT_CLASSIFICATION	2.362223653121781E-8	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999999403862316	WITHOUT_CLASSIFICATION	5.96137683509936E-8	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.999997575071742	WITHOUT_CLASSIFICATION	2.424928257917323E-6	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999940738060487	WITHOUT_CLASSIFICATION	5.926193951276573E-6	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999994689228118	WITHOUT_CLASSIFICATION	5.310771882196499E-7	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9963446861622964	WITHOUT_CLASSIFICATION	0.0036553138377035683	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9999992107104098	WITHOUT_CLASSIFICATION	7.892895902830624E-7	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999985254417751	WITHOUT_CLASSIFICATION	1.47455822486375E-6	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999995512844068	WITHOUT_CLASSIFICATION	4.487155932082111E-7	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999993416044034	WITHOUT_CLASSIFICATION	6.583955965693923E-7	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999989133832836	WITHOUT_CLASSIFICATION	1.0866167164500758E-6	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999999994126	WITHOUT_CLASSIFICATION	5.873999758988025E-10	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999994749845034	WITHOUT_CLASSIFICATION	5.250154966863721E-7	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999821565613002	WITHOUT_CLASSIFICATION	1.784343869988415E-5	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999999577482058	WITHOUT_CLASSIFICATION	4.2251794226162714E-8	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9995587985781397	WITHOUT_CLASSIFICATION	4.412014218602861E-4	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999990907016548	WITHOUT_CLASSIFICATION	9.092983451311742E-7	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9998257880041242	WITHOUT_CLASSIFICATION	1.74211995875755E-4	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999999711227434	WITHOUT_CLASSIFICATION	2.887725662672299E-8	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999976657981339	WITHOUT_CLASSIFICATION	2.3342018660440036E-6	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999996068076227	WITHOUT_CLASSIFICATION	3.9319237734599304E-7	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9950856669060687	WITHOUT_CLASSIFICATION	0.0049143330939313565	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999977172142728	WITHOUT_CLASSIFICATION	2.282785727264783E-6	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999842612987199	WITHOUT_CLASSIFICATION	1.5738701280155986E-5	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.999970220209901	WITHOUT_CLASSIFICATION	2.9779790099077042E-5	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9999588514232417	WITHOUT_CLASSIFICATION	4.1148576758407384E-5	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999999262288577	WITHOUT_CLASSIFICATION	7.37711423211443E-8	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9999504955219185	WITHOUT_CLASSIFICATION	4.9504478081442374E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999518478844	WITHOUT_CLASSIFICATION	4.815211556350565E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999739095696	WITHOUT_CLASSIFICATION	2.6090430259231408E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998988093995	WITHOUT_CLASSIFICATION	1.0119060053122493E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999989102256516	WITHOUT_CLASSIFICATION	1.0897743484242335E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998788595911	WITHOUT_CLASSIFICATION	1.2114040889346325E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999975596331833	WITHOUT_CLASSIFICATION	2.4403668167903646E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998003726078	WITHOUT_CLASSIFICATION	1.9962739207355286E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998616658037	WITHOUT_CLASSIFICATION	1.3833419623214547E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999951800179	WITHOUT_CLASSIFICATION	4.819981975027966E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999989620647842	WITHOUT_CLASSIFICATION	1.0379352158282991E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999922204944054	WITHOUT_CLASSIFICATION	7.77950559455138E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997983010415	WITHOUT_CLASSIFICATION	2.0169895843121647E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999984525663328	WITHOUT_CLASSIFICATION	1.5474336672938354E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999213077831	WITHOUT_CLASSIFICATION	7.869221691195799E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998426622067	WITHOUT_CLASSIFICATION	1.5733779342724963E-7	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999984406232645	WITHOUT_CLASSIFICATION	1.559376735563856E-6	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9999974752703531	WITHOUT_CLASSIFICATION	2.524729646977564E-6	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999999213842132	WITHOUT_CLASSIFICATION	7.86157868348085E-8	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999974714413981	WITHOUT_CLASSIFICATION	2.5285586019735677E-6	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9999973776759769	WITHOUT_CLASSIFICATION	2.6223240231915233E-6	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999998428935939	WITHOUT_CLASSIFICATION	1.5710640613890472E-7	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.999959227668719	WITHOUT_CLASSIFICATION	4.0772331281024994E-5	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999999709889199	WITHOUT_CLASSIFICATION	2.9011080106391312E-8	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.999999998499683	WITHOUT_CLASSIFICATION	1.5003170812284034E-9	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999991000103841	WITHOUT_CLASSIFICATION	8.999896159306068E-7	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999973086474495	WITHOUT_CLASSIFICATION	2.6913525505533973E-6	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9999968670155464	WITHOUT_CLASSIFICATION	3.1329844535705573E-6	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9999983044283631	WITHOUT_CLASSIFICATION	1.695571636830585E-6	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999964670880552	WITHOUT_CLASSIFICATION	3.532911944887815E-6	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9999829770941235	WITHOUT_CLASSIFICATION	1.7022905876413125E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9999966164522424	WITHOUT_CLASSIFICATION	3.3835477576058456E-6	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9999995267219985	WITHOUT_CLASSIFICATION	4.7327800148067337E-7	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999941092297187	WITHOUT_CLASSIFICATION	5.890770281384429E-6	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.999997237355434	WITHOUT_CLASSIFICATION	2.7626445658996305E-6	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999993999475	WITHOUT_CLASSIFICATION	6.0005248274754E-10	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9999545216828019	WITHOUT_CLASSIFICATION	4.547831719815673E-5	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9986917057443075	WITHOUT_CLASSIFICATION	0.001308294255692457	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9999991957165983	WITHOUT_CLASSIFICATION	8.04283401745115E-7	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9999999700298069	WITHOUT_CLASSIFICATION	2.99701931614442E-8	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.5305007107837908	WITHOUT_CLASSIFICATION	0.4694992892162092	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9992816872197605	WITHOUT_CLASSIFICATION	7.183127802395795E-4	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9999969051515836	WITHOUT_CLASSIFICATION	3.0948484164045343E-6	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999999804530426	WITHOUT_CLASSIFICATION	1.9546957385501667E-8	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999999921755354	WITHOUT_CLASSIFICATION	7.824464673690757E-9	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999998829517837	WITHOUT_CLASSIFICATION	1.1704821633545934E-7	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999993519464485	WITHOUT_CLASSIFICATION	6.480535514868518E-7	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999970659400259	WITHOUT_CLASSIFICATION	2.9340599739995518E-6	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9998429757303305	WITHOUT_CLASSIFICATION	1.5702426966938675E-4	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9999999746809732	WITHOUT_CLASSIFICATION	2.531902681124672E-8	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999999609469422	WITHOUT_CLASSIFICATION	3.905305783984657E-8	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999732819422074	WITHOUT_CLASSIFICATION	2.671805779267261E-5	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999990115372881	WITHOUT_CLASSIFICATION	9.884627119419793E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999987907565017	WITHOUT_CLASSIFICATION	1.2092434983927927E-6	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999995816252651	WITHOUT_CLASSIFICATION	4.183747349229274E-7	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999876076077918	WITHOUT_CLASSIFICATION	1.2392392208173958E-5	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999996355496624	WITHOUT_CLASSIFICATION	3.644503375529019E-7	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999993867340283	WITHOUT_CLASSIFICATION	6.132659716288514E-7	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.999999060499251	WITHOUT_CLASSIFICATION	9.395007490202058E-7	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999994317034622	WITHOUT_CLASSIFICATION	5.682965377876737E-7	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999983287023464	WITHOUT_CLASSIFICATION	1.6712976536724565E-6	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9999999392555404	WITHOUT_CLASSIFICATION	6.074445959153435E-8	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999998521979429	WITHOUT_CLASSIFICATION	1.478020571250525E-7	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999680092040701	WITHOUT_CLASSIFICATION	3.1990795929773983E-5	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9999996250418965	WITHOUT_CLASSIFICATION	3.7495810350921807E-7	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9995344587662098	WITHOUT_CLASSIFICATION	4.655412337901088E-4	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999987318106317	WITHOUT_CLASSIFICATION	1.268189368229141E-6	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999817358051699	WITHOUT_CLASSIFICATION	1.8264194830166062E-5	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999995808795874	WITHOUT_CLASSIFICATION	4.191204125910725E-7	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999995329215507	WITHOUT_CLASSIFICATION	4.6707844921517666E-7	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999997680081819	WITHOUT_CLASSIFICATION	2.3199181797950483E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999984841849398	WITHOUT_CLASSIFICATION	1.5158150602838113E-6	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999984841849398	WITHOUT_CLASSIFICATION	1.5158150602838113E-6	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999999999740943	WITHOUT_CLASSIFICATION	2.5905789829012126E-11	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999945953258105	WITHOUT_CLASSIFICATION	5.404674189585801E-6	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999997665508413	WITHOUT_CLASSIFICATION	2.3344915877753782E-7	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999999349229486	WITHOUT_CLASSIFICATION	6.507705143368195E-8	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999996379541516	WITHOUT_CLASSIFICATION	3.620458483083575E-7	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9999593372187925	WITHOUT_CLASSIFICATION	4.06627812074521E-5	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999999797019165	WITHOUT_CLASSIFICATION	2.0298083605524886E-8	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.999999851515348	WITHOUT_CLASSIFICATION	1.4848465211218174E-7	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999999486432696	WITHOUT_CLASSIFICATION	5.1356730404206334E-8	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999862695740387	WITHOUT_CLASSIFICATION	1.3730425961250702E-5	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999999626606544	WITHOUT_CLASSIFICATION	3.733934563197483E-8	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9972988028513823	WITHOUT_CLASSIFICATION	0.0027011971486176635	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999953461214087	WITHOUT_CLASSIFICATION	4.653878591338926E-6	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9999977246235355	WITHOUT_CLASSIFICATION	2.27537646451656E-6	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999999708933769	WITHOUT_CLASSIFICATION	2.9106623155551026E-8	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9999199580220489	WITHOUT_CLASSIFICATION	8.004197795109039E-5	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9999950513780442	WITHOUT_CLASSIFICATION	4.948621955759926E-6	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999999968596406	WITHOUT_CLASSIFICATION	3.1403593854854865E-9	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999929093650383	WITHOUT_CLASSIFICATION	7.09063496181732E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9991026666625316	WITHOUT_CLASSIFICATION	8.973333374685034E-4	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999993360891174	WITHOUT_CLASSIFICATION	6.639108825952418E-7	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999983654525352	WITHOUT_CLASSIFICATION	1.634547464894265E-6	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999999812098782	WITHOUT_CLASSIFICATION	1.879012187376859E-8	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999999767691968	WITHOUT_CLASSIFICATION	2.3230803248171553E-8	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999998484454129	WITHOUT_CLASSIFICATION	1.515545871009114E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999969307724949	WITHOUT_CLASSIFICATION	3.0692275050559837E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999949112608466	WITHOUT_CLASSIFICATION	5.088739153356376E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996259267624	WITHOUT_CLASSIFICATION	3.7407323765288363E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996259267624	WITHOUT_CLASSIFICATION	3.7407323765288363E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996259267624	WITHOUT_CLASSIFICATION	3.7407323765288363E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996259267624	WITHOUT_CLASSIFICATION	3.7407323765288363E-7	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999947495295862	WITHOUT_CLASSIFICATION	5.250470413692534E-6	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9999772911150897	WITHOUT_CLASSIFICATION	2.270888491025707E-5	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999960392262781	WITHOUT_CLASSIFICATION	3.9607737218040334E-6	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9988883054970596	WITHOUT_CLASSIFICATION	0.0011116945029403641	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.999999180366816	WITHOUT_CLASSIFICATION	8.196331839022271E-7	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999971362098375	WITHOUT_CLASSIFICATION	2.863790162433475E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999980981007394	WITHOUT_CLASSIFICATION	1.9018992605706173E-6	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999999921157452	WITHOUT_CLASSIFICATION	7.884254857274528E-9	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999991108008015	WITHOUT_CLASSIFICATION	8.891991985714285E-7	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999993678137656	WITHOUT_CLASSIFICATION	6.321862344044049E-7	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999999995363469	WITHOUT_CLASSIFICATION	4.6365311997964204E-10	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999994178705224	WITHOUT_CLASSIFICATION	5.821294777190106E-7	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999992008164311	WITHOUT_CLASSIFICATION	7.991835689369128E-7	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999943111502985	WITHOUT_CLASSIFICATION	5.688849701421441E-6	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999980168332161	WITHOUT_CLASSIFICATION	1.983166783971534E-6	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999990547692356	WITHOUT_CLASSIFICATION	9.452307644760074E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999655772221	WITHOUT_CLASSIFICATION	3.442277788394142E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999655772221	WITHOUT_CLASSIFICATION	3.442277788394142E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999807785756	WITHOUT_CLASSIFICATION	1.9221424393699418E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999807785756	WITHOUT_CLASSIFICATION	1.9221424393699418E-7	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.999999902280081	WITHOUT_CLASSIFICATION	9.771991902461413E-8	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9999485186881566	WITHOUT_CLASSIFICATION	5.1481311843436514E-5	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999998987254068	WITHOUT_CLASSIFICATION	1.0127459313171136E-7	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.99999158999095	WITHOUT_CLASSIFICATION	8.41000905004173E-6	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9999925387627722	WITHOUT_CLASSIFICATION	7.461237227842643E-6	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999996924106156	WITHOUT_CLASSIFICATION	3.0758938448671737E-7	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9999997587733627	WITHOUT_CLASSIFICATION	2.412266374059607E-7	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999999231957993	WITHOUT_CLASSIFICATION	7.680420058557251E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.999997451627817	WITHOUT_CLASSIFICATION	2.5483721830375685E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.999997451627817	WITHOUT_CLASSIFICATION	2.5483721830375685E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999994776053534	WITHOUT_CLASSIFICATION	5.223946465940351E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.999994776053534	WITHOUT_CLASSIFICATION	5.223946465940351E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999845882557	WITHOUT_CLASSIFICATION	1.5411744331325815E-8	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999996654622714	WITHOUT_CLASSIFICATION	3.345377286715518E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999993796327044	WITHOUT_CLASSIFICATION	6.203672956013523E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999994988368052	WITHOUT_CLASSIFICATION	5.011631948628194E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.999999922859035	WITHOUT_CLASSIFICATION	7.714096495254515E-8	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.999999922859035	WITHOUT_CLASSIFICATION	7.714096495254515E-8	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999995174424063	WITHOUT_CLASSIFICATION	4.825575937776353E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999995174424063	WITHOUT_CLASSIFICATION	4.825575937776353E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999996101662665	WITHOUT_CLASSIFICATION	3.8983373352152034E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999996101662665	WITHOUT_CLASSIFICATION	3.8983373352152034E-7	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9999599683192025	WITHOUT_CLASSIFICATION	4.0031680797459955E-5	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999999570744559	WITHOUT_CLASSIFICATION	4.2925544087109295E-8	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9999898259647056	WITHOUT_CLASSIFICATION	1.0174035294294467E-5	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9999148128117729	WITHOUT_CLASSIFICATION	8.518718822704782E-5	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999952973884705	WITHOUT_CLASSIFICATION	4.70261152959455E-6	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999998968179348	WITHOUT_CLASSIFICATION	1.0318206517930888E-7	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999998320520778	WITHOUT_CLASSIFICATION	1.679479222843671E-7	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9999808932915468	WITHOUT_CLASSIFICATION	1.9106708453178788E-5	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9999998192844236	WITHOUT_CLASSIFICATION	1.8071557633161336E-7	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999764334476466	WITHOUT_CLASSIFICATION	2.3566552353447636E-5	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999999570405107	WITHOUT_CLASSIFICATION	4.295948935320812E-8	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9999881321831892	WITHOUT_CLASSIFICATION	1.1867816810865695E-5	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999965535537668	WITHOUT_CLASSIFICATION	3.446446233196725E-6	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999999143710189	WITHOUT_CLASSIFICATION	8.562898115262968E-8	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999984381398376	WITHOUT_CLASSIFICATION	1.561860162503152E-6	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.999967134482169	WITHOUT_CLASSIFICATION	3.2865517830989485E-5	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999581317384854	WITHOUT_CLASSIFICATION	4.186826151463047E-5	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999991157275174	WITHOUT_CLASSIFICATION	8.842724825670357E-7	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999999995565702	WITHOUT_CLASSIFICATION	4.434298587465836E-10	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.999997697560251	WITHOUT_CLASSIFICATION	2.3024397489379267E-6	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999992506722237	WITHOUT_CLASSIFICATION	7.493277762120006E-7	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9999974632255408	WITHOUT_CLASSIFICATION	2.536774459115802E-6	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999945024107777	WITHOUT_CLASSIFICATION	5.497589222315174E-6	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999988581209277	WITHOUT_CLASSIFICATION	1.1418790723082121E-6	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999426217422644	WITHOUT_CLASSIFICATION	5.737825773541758E-5	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999999431178882	WITHOUT_CLASSIFICATION	5.6882111880991165E-8	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9988926271287074	WITHOUT_CLASSIFICATION	0.001107372871292662	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999239725051862	WITHOUT_CLASSIFICATION	7.602749481380245E-5	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9956756958309491	WITHOUT_CLASSIFICATION	0.004324304169050835	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9998168449855466	WITHOUT_CLASSIFICATION	1.8315501445345778E-4	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.999999970631751	WITHOUT_CLASSIFICATION	2.9368249067834894E-8	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999997657930252	WITHOUT_CLASSIFICATION	2.3420697472513833E-7	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999981761104981	WITHOUT_CLASSIFICATION	1.823889502002826E-6	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9999977227397773	WITHOUT_CLASSIFICATION	2.2772602227860086E-6	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999998078516036	WITHOUT_CLASSIFICATION	1.9214839648738042E-7	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999999933974781	WITHOUT_CLASSIFICATION	6.6025218237689474E-9	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999996862385298	WITHOUT_CLASSIFICATION	3.1376147029875536E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999996601104446	WITHOUT_CLASSIFICATION	3.3988955546945285E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999999574880698	WITHOUT_CLASSIFICATION	4.251193013423096E-8	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999983781988723	WITHOUT_CLASSIFICATION	1.6218011277594835E-6	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999905977620511	WITHOUT_CLASSIFICATION	9.402237948822825E-6	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999986935422251	WITHOUT_CLASSIFICATION	1.3064577748592315E-6	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999999932334842	WITHOUT_CLASSIFICATION	6.766515817174463E-9	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999998425094672	WITHOUT_CLASSIFICATION	1.5749053287017176E-7	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999999951016294	WITHOUT_CLASSIFICATION	4.89837051063583E-9	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999979335974682	WITHOUT_CLASSIFICATION	2.0664025318116496E-6	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9671437456015067	WITHOUT_CLASSIFICATION	0.03285625439849326	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9999999263702798	WITHOUT_CLASSIFICATION	7.362972015577931E-8	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999978706849811	WITHOUT_CLASSIFICATION	2.1293150188703773E-6	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999995464614193	WITHOUT_CLASSIFICATION	4.53538580725838E-7	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.999999672615138	WITHOUT_CLASSIFICATION	3.2738486199679453E-7	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999990754492265	WITHOUT_CLASSIFICATION	9.245507734732901E-7	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.99855614108527	WITHOUT_CLASSIFICATION	0.0014438589147299152	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9920614284498199	WITHOUT_CLASSIFICATION	0.007938571550180124	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9997878866065952	WITHOUT_CLASSIFICATION	2.1211339340482144E-4	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999999686730225	WITHOUT_CLASSIFICATION	3.1326977424719455E-8	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9997871751268317	WITHOUT_CLASSIFICATION	2.128248731682616E-4	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999986535462759	WITHOUT_CLASSIFICATION	1.346453724082362E-6	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999999868161057	WITHOUT_CLASSIFICATION	1.3183894256522856E-8	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999997528104444	WITHOUT_CLASSIFICATION	2.471895556075701E-7	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9999991950812088	WITHOUT_CLASSIFICATION	8.049187912843006E-7	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999999998595375	WITHOUT_CLASSIFICATION	1.404624462690029E-10	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999998923059318	WITHOUT_CLASSIFICATION	1.0769406825872379E-7	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999998147915944	WITHOUT_CLASSIFICATION	1.8520840567794086E-7	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999991052632352	WITHOUT_CLASSIFICATION	8.947367646559078E-7	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9998571896842885	WITHOUT_CLASSIFICATION	1.4281031571146768E-4	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999999837025487	WITHOUT_CLASSIFICATION	1.6297451218357697E-8	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999982017234583	WITHOUT_CLASSIFICATION	1.7982765416928367E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998003726078	WITHOUT_CLASSIFICATION	1.9962739207355286E-7	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9999899421461724	WITHOUT_CLASSIFICATION	1.0057853827534337E-5	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999986695965021	WITHOUT_CLASSIFICATION	1.3304034980098006E-6	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999984312288	WITHOUT_CLASSIFICATION	1.5687711611306657E-9	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.999998382797946	WITHOUT_CLASSIFICATION	1.6172020540101957E-6	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999999372415975	WITHOUT_CLASSIFICATION	6.275840241319212E-8	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999999993697184	WITHOUT_CLASSIFICATION	6.302816702036111E-10	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999892606464044	WITHOUT_CLASSIFICATION	1.0739353595672035E-5	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999997938377362	WITHOUT_CLASSIFICATION	2.0616226391669195E-7	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999992296534503	WITHOUT_CLASSIFICATION	7.703465495486437E-7	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9996462341732053	WITHOUT_CLASSIFICATION	3.5376582679463414E-4	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999997949578375	WITHOUT_CLASSIFICATION	2.0504216255313686E-7	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9999714494928693	WITHOUT_CLASSIFICATION	2.8550507130775974E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998616658037	WITHOUT_CLASSIFICATION	1.3833419623214547E-7	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999991124268156	WITHOUT_CLASSIFICATION	8.8757318441459E-7	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9999999999999425	WITHOUT_CLASSIFICATION	5.747853033005607E-14	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9995858665038949	WITHOUT_CLASSIFICATION	4.1413349610507387E-4	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999999591389923	WITHOUT_CLASSIFICATION	4.0861007768425335E-8	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999999755958306	WITHOUT_CLASSIFICATION	2.4404169323364035E-8	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9998545386500278	WITHOUT_CLASSIFICATION	1.4546134997218003E-4	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.999994574704669	WITHOUT_CLASSIFICATION	5.425295330977045E-6	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999997452755434	WITHOUT_CLASSIFICATION	2.5472445665281614E-7	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999890603147225	WITHOUT_CLASSIFICATION	1.0939685277445867E-5	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.999999999910691	WITHOUT_CLASSIFICATION	8.930900155949124E-11	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999978377501876	WITHOUT_CLASSIFICATION	2.1622498123924745E-6	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9998479144973971	WITHOUT_CLASSIFICATION	1.5208550260289723E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9999896191281646	WITHOUT_CLASSIFICATION	1.038087183538024E-5	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999994806196127	WITHOUT_CLASSIFICATION	5.193803872188554E-7	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999991258281923	WITHOUT_CLASSIFICATION	8.74171807684911E-7	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999989911991478	WITHOUT_CLASSIFICATION	1.0088008521571419E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999997963675846	WITHOUT_CLASSIFICATION	2.0363241535493659E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999976168011173	WITHOUT_CLASSIFICATION	2.3831988826752893E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999981964502185	WITHOUT_CLASSIFICATION	1.8035497814830985E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999981964502185	WITHOUT_CLASSIFICATION	1.8035497814830985E-6	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999997716464595	WITHOUT_CLASSIFICATION	2.2835354038777405E-7	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.999999874731474	WITHOUT_CLASSIFICATION	1.252685259722182E-7	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999997647699009	WITHOUT_CLASSIFICATION	2.3523009896466598E-7	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.999999627295537	WITHOUT_CLASSIFICATION	3.7270446289673386E-7	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.999999983507016	WITHOUT_CLASSIFICATION	1.6492984029298812E-8	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999998922912416	WITHOUT_CLASSIFICATION	1.0770875837698146E-7	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9999996129370438	WITHOUT_CLASSIFICATION	3.8706295633454043E-7	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999984348484225	WITHOUT_CLASSIFICATION	1.565151577492519E-6	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999961384535522	WITHOUT_CLASSIFICATION	3.861546447792729E-6	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9999996495597069	WITHOUT_CLASSIFICATION	3.5044029310959877E-7	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999999706035811	WITHOUT_CLASSIFICATION	2.93964189044337E-8	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999999989058599	WITHOUT_CLASSIFICATION	1.0941402032486224E-9	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.999998791516347	WITHOUT_CLASSIFICATION	1.208483653022103E-6	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999981962282419	WITHOUT_CLASSIFICATION	1.8037717580551025E-6	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9999977857510476	WITHOUT_CLASSIFICATION	2.214248952481267E-6	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999994472269832	WITHOUT_CLASSIFICATION	5.52773016873391E-7	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999997715338633	WITHOUT_CLASSIFICATION	2.2846613661588607E-7	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9999873175728266	WITHOUT_CLASSIFICATION	1.2682427173354928E-5	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999998877871716	WITHOUT_CLASSIFICATION	1.1221282829565834E-7	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999992786188617	WITHOUT_CLASSIFICATION	7.21381138226798E-7	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999996697117535	WITHOUT_CLASSIFICATION	3.3028824662896084E-7	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999975866308162	WITHOUT_CLASSIFICATION	2.4133691838125915E-6	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999971889710739	WITHOUT_CLASSIFICATION	2.8110289260134555E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999999849995829	WITHOUT_CLASSIFICATION	1.5000417066878882E-8	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999990159170035	WITHOUT_CLASSIFICATION	9.84082996542953E-7	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999999754516935	WITHOUT_CLASSIFICATION	2.4548306505572474E-8	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999995224599998	WITHOUT_CLASSIFICATION	4.775400002139705E-7	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9999994339778556	WITHOUT_CLASSIFICATION	5.660221443977128E-7	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999997190349941	WITHOUT_CLASSIFICATION	2.8096500586579366E-7	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999997794285416	WITHOUT_CLASSIFICATION	2.2057145837624247E-7	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9999960577831288	WITHOUT_CLASSIFICATION	3.942216871133574E-6	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9999962617820425	WITHOUT_CLASSIFICATION	3.7382179575663604E-6	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999844015704935	WITHOUT_CLASSIFICATION	1.5598429506468984E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999970795327646	WITHOUT_CLASSIFICATION	2.920467235410815E-6	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999948771810497	WITHOUT_CLASSIFICATION	5.122818950205863E-6	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999898408897876	WITHOUT_CLASSIFICATION	1.0159110212413826E-5	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9999856088226712	WITHOUT_CLASSIFICATION	1.4391177328733327E-5	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999997190349941	WITHOUT_CLASSIFICATION	2.8096500586579366E-7	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999999276411871	WITHOUT_CLASSIFICATION	7.23588129215289E-8	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999992852007518	WITHOUT_CLASSIFICATION	7.147992482033909E-7	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999988007139325	WITHOUT_CLASSIFICATION	1.1992860674050696E-6	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9998614915140523	WITHOUT_CLASSIFICATION	1.3850848594766096E-4	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999868237861539	WITHOUT_CLASSIFICATION	1.317621384614147E-5	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999959839104794	WITHOUT_CLASSIFICATION	4.01608952055756E-6	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999974280480918	WITHOUT_CLASSIFICATION	2.5719519081682522E-6	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9999945960738831	WITHOUT_CLASSIFICATION	5.403926116911653E-6	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999993768402119	WITHOUT_CLASSIFICATION	6.231597881428371E-7	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.999999736779383	WITHOUT_CLASSIFICATION	2.6322061698477634E-7	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999973188140401	WITHOUT_CLASSIFICATION	2.6811859599602455E-6	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999997438854121	WITHOUT_CLASSIFICATION	2.5611458780962824E-7	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999995179228103	WITHOUT_CLASSIFICATION	4.820771897645502E-7	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9999812280481871	WITHOUT_CLASSIFICATION	1.8771951812949363E-5	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999994004018122	WITHOUT_CLASSIFICATION	5.995981878049432E-7	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9999210475689956	WITHOUT_CLASSIFICATION	7.895243100445421E-5	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9999210475689956	WITHOUT_CLASSIFICATION	7.895243100445421E-5	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9957744424443875	WITHOUT_CLASSIFICATION	0.004225557555612519	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9993030252354038	WITHOUT_CLASSIFICATION	6.969747645961127E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999723731774303	WITHOUT_CLASSIFICATION	2.7626822569704685E-5	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9999856528462301	WITHOUT_CLASSIFICATION	1.4347153769979494E-5	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999999953295017	WITHOUT_CLASSIFICATION	4.670498296837511E-9	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999985982359285	WITHOUT_CLASSIFICATION	1.4017640714502197E-6	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9999953836096396	WITHOUT_CLASSIFICATION	4.616390360441044E-6	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999945654323581	WITHOUT_CLASSIFICATION	5.434567641918012E-6	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9995646868198204	WITHOUT_CLASSIFICATION	4.353131801796434E-4	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999987990551009	WITHOUT_CLASSIFICATION	1.20094489904028E-6	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999997260753336	WITHOUT_CLASSIFICATION	2.739246663866941E-7	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.998734330945278	WITHOUT_CLASSIFICATION	0.0012656690547221054	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.999999999976753	WITHOUT_CLASSIFICATION	2.324691771081116E-11	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999970721058266	WITHOUT_CLASSIFICATION	2.927894173481223E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999970721058266	WITHOUT_CLASSIFICATION	2.927894173481223E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999723731774303	WITHOUT_CLASSIFICATION	2.7626822569704685E-5	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999997260753336	WITHOUT_CLASSIFICATION	2.739246663866941E-7	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999985028477882	WITHOUT_CLASSIFICATION	1.4971522117724896E-6	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9996996355865477	WITHOUT_CLASSIFICATION	3.0036441345231363E-4	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.999829651248577	WITHOUT_CLASSIFICATION	1.7034875142301126E-4	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.999954031261246	WITHOUT_CLASSIFICATION	4.596873875405568E-5	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9998598937929796	WITHOUT_CLASSIFICATION	1.4010620702045292E-4	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999989761308632	WITHOUT_CLASSIFICATION	1.0238691368597966E-6	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999310515810637	WITHOUT_CLASSIFICATION	6.894841893631847E-5	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999999626451376	WITHOUT_CLASSIFICATION	3.7354862544621686E-8	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999999987411734	WITHOUT_CLASSIFICATION	1.2588265682590025E-9	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999985363033941	WITHOUT_CLASSIFICATION	1.4636966059160682E-6	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9998971138295167	WITHOUT_CLASSIFICATION	1.0288617048327666E-4	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9992357416930595	WITHOUT_CLASSIFICATION	7.642583069404376E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9999785301154271	WITHOUT_CLASSIFICATION	2.1469884572901127E-5	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999900426458525	WITHOUT_CLASSIFICATION	9.95735414742801E-6	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9999988062205956	WITHOUT_CLASSIFICATION	1.1937794044904545E-6	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9999955908057396	WITHOUT_CLASSIFICATION	4.409194260449545E-6	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999929381147943	WITHOUT_CLASSIFICATION	7.061885205720903E-6	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.999999343299132	WITHOUT_CLASSIFICATION	6.567008679834025E-7	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999969260751982	WITHOUT_CLASSIFICATION	3.073924801858841E-6	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999999446542502	WITHOUT_CLASSIFICATION	5.534574966523909E-8	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9892131104303205	WITHOUT_CLASSIFICATION	0.010786889569679528	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9999997409266661	WITHOUT_CLASSIFICATION	2.59073333906149E-7	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9961973146929721	WITHOUT_CLASSIFICATION	0.003802685307027913	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9999939447436065	WITHOUT_CLASSIFICATION	6.055256393594255E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999998781502	WITHOUT_CLASSIFICATION	1.2184976712600463E-10	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997719017251	WITHOUT_CLASSIFICATION	2.280982748844978E-7	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.999999805263276	WITHOUT_CLASSIFICATION	1.947367239118736E-7	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999900318612104	WITHOUT_CLASSIFICATION	9.96813878966083E-6	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.999999973329419	WITHOUT_CLASSIFICATION	2.667058094769761E-8	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9999994584432014	WITHOUT_CLASSIFICATION	5.415567985950046E-7	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9996707266346052	WITHOUT_CLASSIFICATION	3.2927336539474467E-4	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999991351232913	WITHOUT_CLASSIFICATION	8.648767088152354E-7	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999999742242999	WITHOUT_CLASSIFICATION	2.5775700122116534E-8	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999999919057699	WITHOUT_CLASSIFICATION	8.094230154186238E-9	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999999855099582	WITHOUT_CLASSIFICATION	1.4490041895088161E-8	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999816464409315	WITHOUT_CLASSIFICATION	1.835355906850982E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999999792139956	WITHOUT_CLASSIFICATION	2.0786004309108696E-8	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.999999996745836	WITHOUT_CLASSIFICATION	3.254163912008955E-9	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999999432884272	WITHOUT_CLASSIFICATION	5.6711572865980844E-8	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999999889739746	WITHOUT_CLASSIFICATION	1.1026025516515245E-8	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999999531058141	WITHOUT_CLASSIFICATION	4.6894185879744704E-8	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999999900306968	WITHOUT_CLASSIFICATION	9.969303122844133E-9	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999984165600814	WITHOUT_CLASSIFICATION	1.5834399186880916E-6	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999999970879097	WITHOUT_CLASSIFICATION	2.912090288884726E-9	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9999886388316338	WITHOUT_CLASSIFICATION	1.136116836628222E-5	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999957112192795	WITHOUT_CLASSIFICATION	4.288780720500838E-6	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9999900441603378	WITHOUT_CLASSIFICATION	9.955839662243806E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999951800179	WITHOUT_CLASSIFICATION	4.819981975027966E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999989620647842	WITHOUT_CLASSIFICATION	1.0379352158282991E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999922204944054	WITHOUT_CLASSIFICATION	7.77950559455138E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997983010415	WITHOUT_CLASSIFICATION	2.0169895843121647E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.999999995121611	WITHOUT_CLASSIFICATION	4.878389025089881E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.99999999657491	WITHOUT_CLASSIFICATION	3.4250900537386043E-9	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999984525663328	WITHOUT_CLASSIFICATION	1.5474336672938354E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999213077831	WITHOUT_CLASSIFICATION	7.869221691195799E-8	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999924328401206	WITHOUT_CLASSIFICATION	7.567159879354989E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998426622067	WITHOUT_CLASSIFICATION	1.5733779342724963E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999979950381056	WITHOUT_CLASSIFICATION	2.004961894405656E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999997351134668	WITHOUT_CLASSIFICATION	2.6488653318502587E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999787976821926	WITHOUT_CLASSIFICATION	2.12023178074696E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.99999998687237	WITHOUT_CLASSIFICATION	1.3127629909914165E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.999999302989594	WITHOUT_CLASSIFICATION	6.970104059328298E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999994807149759	WITHOUT_CLASSIFICATION	5.192850241373427E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999931926831	WITHOUT_CLASSIFICATION	6.807316989481077E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999996540910712	WITHOUT_CLASSIFICATION	3.4590892887149344E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999989024251656	WITHOUT_CLASSIFICATION	1.0975748344001753E-6	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9998989225141559	WITHOUT_CLASSIFICATION	1.0107748584412682E-4	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.999980623438122	WITHOUT_CLASSIFICATION	1.9376561878051097E-5	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999904048205492	WITHOUT_CLASSIFICATION	9.595179450871349E-6	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9999662252535765	WITHOUT_CLASSIFICATION	3.3774746423551445E-5	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999976124963238	WITHOUT_CLASSIFICATION	2.3875036761595956E-6	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999976124963238	WITHOUT_CLASSIFICATION	2.3875036761595956E-6	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999839032455667	WITHOUT_CLASSIFICATION	1.6096754433277355E-5	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999839464365846	WITHOUT_CLASSIFICATION	1.6053563415296314E-5	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9999917721742055	WITHOUT_CLASSIFICATION	8.227825794381694E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999906750272335	WITHOUT_CLASSIFICATION	9.324972766567035E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999906750272335	WITHOUT_CLASSIFICATION	9.324972766567035E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999906750272335	WITHOUT_CLASSIFICATION	9.324972766567035E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999796445920263	WITHOUT_CLASSIFICATION	2.035540797373429E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999739095696	WITHOUT_CLASSIFICATION	2.6090430259231408E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998988093995	WITHOUT_CLASSIFICATION	1.0119060053122493E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999989102256516	WITHOUT_CLASSIFICATION	1.0897743484242335E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998788595911	WITHOUT_CLASSIFICATION	1.2114040889346325E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999975596331833	WITHOUT_CLASSIFICATION	2.4403668167903646E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999999874416	WITHOUT_CLASSIFICATION	1.2558329082103634E-11	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999997719017251	WITHOUT_CLASSIFICATION	2.280982748844978E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999998003726078	WITHOUT_CLASSIFICATION	1.9962739207355286E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998616658037	WITHOUT_CLASSIFICATION	1.3833419623214547E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999951800179	WITHOUT_CLASSIFICATION	4.819981975027966E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999989620647842	WITHOUT_CLASSIFICATION	1.0379352158282991E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999922204944054	WITHOUT_CLASSIFICATION	7.77950559455138E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997983010415	WITHOUT_CLASSIFICATION	2.0169895843121647E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999213077831	WITHOUT_CLASSIFICATION	7.869221691195799E-8	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999997351134668	WITHOUT_CLASSIFICATION	2.6488653318502587E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999787976821926	WITHOUT_CLASSIFICATION	2.12023178074696E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.99999998687237	WITHOUT_CLASSIFICATION	1.3127629909914165E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999848041464	WITHOUT_CLASSIFICATION	1.5195853557007277E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999874409917	WITHOUT_CLASSIFICATION	1.2559008235163543E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999960180609501	WITHOUT_CLASSIFICATION	3.981939049899411E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999998775495083	WITHOUT_CLASSIFICATION	1.2245049171612387E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.999910018442864	WITHOUT_CLASSIFICATION	8.998155713605569E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999957813794224	WITHOUT_CLASSIFICATION	4.218620577662818E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999689797733946	WITHOUT_CLASSIFICATION	3.102022660541112E-5	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999973570243085	WITHOUT_CLASSIFICATION	2.6429756915696046E-6	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9999414397925922	WITHOUT_CLASSIFICATION	5.8560207407800456E-5	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9999235934089579	WITHOUT_CLASSIFICATION	7.640659104216072E-5	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.999490067545881	WITHOUT_CLASSIFICATION	5.099324541190272E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9998768638741891	WITHOUT_CLASSIFICATION	1.2313612581102087E-4	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999995836887857	WITHOUT_CLASSIFICATION	4.163112142573109E-7	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999999562432014	WITHOUT_CLASSIFICATION	4.375679852206757E-8	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9999280276446265	WITHOUT_CLASSIFICATION	7.197235537342414E-5	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.999992428694035	WITHOUT_CLASSIFICATION	7.5713059650256416E-6	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9999263611365783	WITHOUT_CLASSIFICATION	7.36388634216587E-5	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.999900128432031	WITHOUT_CLASSIFICATION	9.987156796901822E-5	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9997209279784648	WITHOUT_CLASSIFICATION	2.7907202153520054E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999952506417099	WITHOUT_CLASSIFICATION	4.749358290191087E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.999997932913885	WITHOUT_CLASSIFICATION	2.0670861150411254E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999979950381056	WITHOUT_CLASSIFICATION	2.004961894405656E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999931926831	WITHOUT_CLASSIFICATION	6.807316989481077E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999996540910712	WITHOUT_CLASSIFICATION	3.4590892887149344E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999989024251656	WITHOUT_CLASSIFICATION	1.0975748344001753E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999874409917	WITHOUT_CLASSIFICATION	1.2559008235163543E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999960180609501	WITHOUT_CLASSIFICATION	3.981939049899411E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999998775495083	WITHOUT_CLASSIFICATION	1.2245049171612387E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.999910018442864	WITHOUT_CLASSIFICATION	8.998155713605569E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999957813794224	WITHOUT_CLASSIFICATION	4.218620577662818E-6	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999999858803911	WITHOUT_CLASSIFICATION	1.4119608920280637E-8	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9932469929747428	WITHOUT_CLASSIFICATION	0.006753007025257183	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999917425229669	WITHOUT_CLASSIFICATION	8.257477033181305E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999927696916017	WITHOUT_CLASSIFICATION	7.230308398341883E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999927696916017	WITHOUT_CLASSIFICATION	7.230308398341883E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999927696916017	WITHOUT_CLASSIFICATION	7.230308398341883E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999927696916017	WITHOUT_CLASSIFICATION	7.230308398341883E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999927696916017	WITHOUT_CLASSIFICATION	7.230308398341883E-6	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999802865230218	WITHOUT_CLASSIFICATION	1.9713476978139354E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998704164242	WITHOUT_CLASSIFICATION	1.2958357571559654E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998704164242	WITHOUT_CLASSIFICATION	1.2958357571559654E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998704164242	WITHOUT_CLASSIFICATION	1.2958357571559654E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998704164242	WITHOUT_CLASSIFICATION	1.2958357571559654E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998704164242	WITHOUT_CLASSIFICATION	1.2958357571559654E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998704164242	WITHOUT_CLASSIFICATION	1.2958357571559654E-7	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.999999366371933	WITHOUT_CLASSIFICATION	6.336280670259094E-7	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9999849446260874	WITHOUT_CLASSIFICATION	1.5055373912677815E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999518478844	WITHOUT_CLASSIFICATION	4.815211556350565E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999518478844	WITHOUT_CLASSIFICATION	4.815211556350565E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999518478844	WITHOUT_CLASSIFICATION	4.815211556350565E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999518478844	WITHOUT_CLASSIFICATION	4.815211556350565E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999518478844	WITHOUT_CLASSIFICATION	4.815211556350565E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999518478844	WITHOUT_CLASSIFICATION	4.815211556350565E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999518478844	WITHOUT_CLASSIFICATION	4.815211556350565E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999518478844	WITHOUT_CLASSIFICATION	4.815211556350565E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988659936707	WITHOUT_CLASSIFICATION	1.1340063292465353E-6	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999990973697179	WITHOUT_CLASSIFICATION	9.026302820505103E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.999999642146573	WITHOUT_CLASSIFICATION	3.5785342698694996E-7	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999839561600349	WITHOUT_CLASSIFICATION	1.6043839965125576E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.999997451627817	WITHOUT_CLASSIFICATION	2.5483721830375685E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.999997451627817	WITHOUT_CLASSIFICATION	2.5483721830375685E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.999997451627817	WITHOUT_CLASSIFICATION	2.5483721830375685E-6	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999967787829708	WITHOUT_CLASSIFICATION	3.2212170293794445E-6	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999620707198847	WITHOUT_CLASSIFICATION	3.792928011531115E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9998699279897275	WITHOUT_CLASSIFICATION	1.300720102724243E-4	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999565703566307	WITHOUT_CLASSIFICATION	4.342964336929194E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999565703566307	WITHOUT_CLASSIFICATION	4.342964336929194E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999995414448156	WITHOUT_CLASSIFICATION	4.585551844428846E-7	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999565703566307	WITHOUT_CLASSIFICATION	4.342964336929194E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999961544494679	WITHOUT_CLASSIFICATION	3.845550532120924E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999690946670277	WITHOUT_CLASSIFICATION	3.0905332972266875E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999974476951246	WITHOUT_CLASSIFICATION	2.552304875409088E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999970110200561	WITHOUT_CLASSIFICATION	2.988979943933259E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999970110200561	WITHOUT_CLASSIFICATION	2.988979943933259E-6	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9999993834390359	WITHOUT_CLASSIFICATION	6.165609640306321E-7	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999820348085304	WITHOUT_CLASSIFICATION	1.7965191469597767E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878724393029	WITHOUT_CLASSIFICATION	1.2127560697241402E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878724393029	WITHOUT_CLASSIFICATION	1.2127560697241402E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999878724393029	WITHOUT_CLASSIFICATION	1.2127560697241402E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.998643655173185	WITHOUT_CLASSIFICATION	0.0013563448268149349	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9999942971769799	WITHOUT_CLASSIFICATION	5.702823020165629E-6	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999968445514568	WITHOUT_CLASSIFICATION	3.155448543257244E-6	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999997880888009	WITHOUT_CLASSIFICATION	2.1191119910168125E-7	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9999988268278818	WITHOUT_CLASSIFICATION	1.1731721182544103E-6	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.999996364776214	WITHOUT_CLASSIFICATION	3.6352237859791025E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999786697630595	WITHOUT_CLASSIFICATION	2.133023694050427E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999992830283269	WITHOUT_CLASSIFICATION	7.169716732253139E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999786697630595	WITHOUT_CLASSIFICATION	2.133023694050427E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999796445920263	WITHOUT_CLASSIFICATION	2.035540797373429E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999906750272335	WITHOUT_CLASSIFICATION	9.324972766567035E-6	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999999822648552	WITHOUT_CLASSIFICATION	1.7735144810990864E-8	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999867301097993	WITHOUT_CLASSIFICATION	1.3269890200743962E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999766774172124	WITHOUT_CLASSIFICATION	2.3322582787530767E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999815143978483	WITHOUT_CLASSIFICATION	1.848560215165592E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999796445920263	WITHOUT_CLASSIFICATION	2.035540797373429E-5	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999512986568674	WITHOUT_CLASSIFICATION	4.8701343132664684E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999987459370347	WITHOUT_CLASSIFICATION	1.2540629652844534E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999996259267624	WITHOUT_CLASSIFICATION	3.7407323765288363E-7	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.999983915131259	WITHOUT_CLASSIFICATION	1.608486874098124E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999736895800587	WITHOUT_CLASSIFICATION	2.6310419941300074E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999736895800587	WITHOUT_CLASSIFICATION	2.6310419941300074E-5	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999974351451514	WITHOUT_CLASSIFICATION	2.564854848754715E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999999999975252	WITHOUT_CLASSIFICATION	2.4748599499522947E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999999919521	WITHOUT_CLASSIFICATION	8.047869309111167E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999999999265753	WITHOUT_CLASSIFICATION	7.342480789726156E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999761762	WITHOUT_CLASSIFICATION	2.382383697308981E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999999912067	WITHOUT_CLASSIFICATION	8.79330596865763E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.999999999981554	WITHOUT_CLASSIFICATION	1.844599562200645E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.999998749229943	WITHOUT_CLASSIFICATION	1.2507700569553358E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995238957016	WITHOUT_CLASSIFICATION	4.761042983381179E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999822872568	WITHOUT_CLASSIFICATION	1.771274322153511E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997846913876	WITHOUT_CLASSIFICATION	2.1530861246231358E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999980508586	WITHOUT_CLASSIFICATION	1.9491414694233177E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999997573955	WITHOUT_CLASSIFICATION	2.4260458785870494E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.999999999186309	WITHOUT_CLASSIFICATION	8.136910150985512E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999226583368	WITHOUT_CLASSIFICATION	7.734166317620305E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999919502	WITHOUT_CLASSIFICATION	8.04972576585021E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999933578	WITHOUT_CLASSIFICATION	6.64223339172298E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.999999999981594	WITHOUT_CLASSIFICATION	1.840612525553136E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999998772742	WITHOUT_CLASSIFICATION	1.2272587435537903E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999999607587	WITHOUT_CLASSIFICATION	3.92413751197045E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999999994724	WITHOUT_CLASSIFICATION	5.27542014977744E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999706797	WITHOUT_CLASSIFICATION	2.932022555103586E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999919502	WITHOUT_CLASSIFICATION	8.04972576585021E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999998022472	WITHOUT_CLASSIFICATION	1.977527055610991E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999918574	WITHOUT_CLASSIFICATION	8.142587809666208E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999999703415	WITHOUT_CLASSIFICATION	2.965846515682565E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999999821424	WITHOUT_CLASSIFICATION	1.785756203696116E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999920147	WITHOUT_CLASSIFICATION	7.985298440037155E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999998447262	WITHOUT_CLASSIFICATION	1.55273715114951E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999999999750268	WITHOUT_CLASSIFICATION	2.4973245196619098E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999545875	WITHOUT_CLASSIFICATION	4.541247163007007E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999812923	WITHOUT_CLASSIFICATION	1.8707708101735523E-11	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999950198471336	WITHOUT_CLASSIFICATION	4.9801528664288554E-6	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999950198471336	WITHOUT_CLASSIFICATION	4.9801528664288554E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999999994724	WITHOUT_CLASSIFICATION	5.27542014977744E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999999999533428	WITHOUT_CLASSIFICATION	4.6657156036236304E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999987678	WITHOUT_CLASSIFICATION	1.232236441772028E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999999998613723	WITHOUT_CLASSIFICATION	1.3862759194169077E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999999999355157	WITHOUT_CLASSIFICATION	6.44843940122815E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999997738133	WITHOUT_CLASSIFICATION	2.2618671816328853E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999836038064	WITHOUT_CLASSIFICATION	1.6396193647801996E-8	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999999020403212	WITHOUT_CLASSIFICATION	9.795967880263084E-8	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999999837753657	WITHOUT_CLASSIFICATION	1.6224634236791823E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999985843047	WITHOUT_CLASSIFICATION	1.4156953316493165E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998887209972	WITHOUT_CLASSIFICATION	1.1127900286495731E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999998228584	WITHOUT_CLASSIFICATION	1.7714153268747136E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998209561766	WITHOUT_CLASSIFICATION	1.7904382348725008E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999988012482	WITHOUT_CLASSIFICATION	1.1987517200081935E-9	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999999999931247	WITHOUT_CLASSIFICATION	6.8752902010486905E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999999874416	WITHOUT_CLASSIFICATION	1.2558329082103634E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999995948	WITHOUT_CLASSIFICATION	4.0525939351695467E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.999999999953225	WITHOUT_CLASSIFICATION	4.67750048607172E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999993064855249	WITHOUT_CLASSIFICATION	6.935144750570454E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999895881025	WITHOUT_CLASSIFICATION	1.0411897444374256E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999995948	WITHOUT_CLASSIFICATION	4.0525939351695467E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.999999999085471	WITHOUT_CLASSIFICATION	9.145289739726709E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999263264	WITHOUT_CLASSIFICATION	7.367359500295193E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999998591035	WITHOUT_CLASSIFICATION	1.4089644477973337E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999999993704282	WITHOUT_CLASSIFICATION	6.295718262656992E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999999987441935	WITHOUT_CLASSIFICATION	1.2558064105160509E-9	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999745880411222	WITHOUT_CLASSIFICATION	2.54119588778262E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999745880411222	WITHOUT_CLASSIFICATION	2.54119588778262E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999745880411222	WITHOUT_CLASSIFICATION	2.54119588778262E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999745880411222	WITHOUT_CLASSIFICATION	2.54119588778262E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999745880411222	WITHOUT_CLASSIFICATION	2.54119588778262E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999745880411222	WITHOUT_CLASSIFICATION	2.54119588778262E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996320665976	WITHOUT_CLASSIFICATION	3.679334023551049E-7	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999993250887516	WITHOUT_CLASSIFICATION	6.749112484343174E-7	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9998952032308803	WITHOUT_CLASSIFICATION	1.0479676911956665E-4	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9999969837837449	WITHOUT_CLASSIFICATION	3.016216255065893E-6	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999999930969495	WITHOUT_CLASSIFICATION	6.903050415189297E-9	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9999994393090763	WITHOUT_CLASSIFICATION	5.60690923642557E-7	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999993999475	WITHOUT_CLASSIFICATION	6.0005248274754E-10	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9999950580251203	WITHOUT_CLASSIFICATION	4.941974879567557E-6	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9981022430627663	WITHOUT_CLASSIFICATION	0.0018977569372336967	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999890512016381	WITHOUT_CLASSIFICATION	1.0948798361964899E-5	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999999388023953	WITHOUT_CLASSIFICATION	6.119760468650494E-8	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999318095120527	WITHOUT_CLASSIFICATION	6.819048794717722E-5	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999999867911168	WITHOUT_CLASSIFICATION	1.3208883228391944E-8	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999996366096795	WITHOUT_CLASSIFICATION	3.6339032048621266E-7	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999999539014698	WITHOUT_CLASSIFICATION	4.609853017072131E-8	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999998283893281	WITHOUT_CLASSIFICATION	1.7161067189319853E-7	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999996933350117	WITHOUT_CLASSIFICATION	3.0666498828680055E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998861694088	WITHOUT_CLASSIFICATION	1.13830591155532E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998861694088	WITHOUT_CLASSIFICATION	1.13830591155532E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998861694088	WITHOUT_CLASSIFICATION	1.13830591155532E-7	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999999812098782	WITHOUT_CLASSIFICATION	1.879012187376859E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999994945290369	WITHOUT_CLASSIFICATION	5.054709631095567E-7	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9999997737839478	WITHOUT_CLASSIFICATION	2.2621605214211868E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999739095696	WITHOUT_CLASSIFICATION	2.6090430259231408E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999739095696	WITHOUT_CLASSIFICATION	2.6090430259231408E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999739095696	WITHOUT_CLASSIFICATION	2.6090430259231408E-8	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.995388020430601	WITHOUT_CLASSIFICATION	0.004611979569399067	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998988093995	WITHOUT_CLASSIFICATION	1.0119060053122493E-7	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999999993064098	WITHOUT_CLASSIFICATION	6.935902093936984E-10	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999989102256516	WITHOUT_CLASSIFICATION	1.0897743484242335E-6	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999989102256516	WITHOUT_CLASSIFICATION	1.0897743484242335E-6	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999426217422644	WITHOUT_CLASSIFICATION	5.737825773541758E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998788595911	WITHOUT_CLASSIFICATION	1.2114040889346325E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998788595911	WITHOUT_CLASSIFICATION	1.2114040889346325E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998788595911	WITHOUT_CLASSIFICATION	1.2114040889346325E-7	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9992991678739701	WITHOUT_CLASSIFICATION	7.008321260297822E-4	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998483195776	WITHOUT_CLASSIFICATION	1.516804224335961E-7	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999999426807694	WITHOUT_CLASSIFICATION	5.731923054523371E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999786697630595	WITHOUT_CLASSIFICATION	2.133023694050427E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999786697630595	WITHOUT_CLASSIFICATION	2.133023694050427E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999749162084373	WITHOUT_CLASSIFICATION	2.5083791562771107E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999975596331833	WITHOUT_CLASSIFICATION	2.4403668167903646E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999975596331833	WITHOUT_CLASSIFICATION	2.4403668167903646E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.9999981761104981	WITHOUT_CLASSIFICATION	1.823889502002826E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999951800179	WITHOUT_CLASSIFICATION	4.819981975027966E-9	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999951800179	WITHOUT_CLASSIFICATION	4.819981975027966E-9	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9997487484598324	WITHOUT_CLASSIFICATION	2.5125154016759015E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999989620647842	WITHOUT_CLASSIFICATION	1.0379352158282991E-6	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9999920449487609	WITHOUT_CLASSIFICATION	7.955051239094E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999922204944054	WITHOUT_CLASSIFICATION	7.77950559455138E-6	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999999866058075	WITHOUT_CLASSIFICATION	1.3394192602031004E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999786697630595	WITHOUT_CLASSIFICATION	2.133023694050427E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999906750272335	WITHOUT_CLASSIFICATION	9.324972766567035E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999984525663328	WITHOUT_CLASSIFICATION	1.5474336672938354E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999984525663328	WITHOUT_CLASSIFICATION	1.5474336672938354E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999984525663328	WITHOUT_CLASSIFICATION	1.5474336672938354E-6	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999999582482737	WITHOUT_CLASSIFICATION	4.1751726313552176E-8	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.999998505546846	WITHOUT_CLASSIFICATION	1.4944531540146231E-6	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.999997768631473	WITHOUT_CLASSIFICATION	2.2313685268791943E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999994451850834	WITHOUT_CLASSIFICATION	5.548149164861289E-7	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999994451850834	WITHOUT_CLASSIFICATION	5.548149164861289E-7	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999997203954152	WITHOUT_CLASSIFICATION	2.7960458485201323E-7	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999802336520186	WITHOUT_CLASSIFICATION	1.97663479813639E-5	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999999868569498	WITHOUT_CLASSIFICATION	1.3143050102607765E-8	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.999997497430723	WITHOUT_CLASSIFICATION	2.502569277118426E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999997963675846	WITHOUT_CLASSIFICATION	2.0363241535493659E-7	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999997963675846	WITHOUT_CLASSIFICATION	2.0363241535493659E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997172070335081	WITHOUT_CLASSIFICATION	2.827929664918455E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997172070335081	WITHOUT_CLASSIFICATION	2.827929664918455E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999997716464595	WITHOUT_CLASSIFICATION	2.2835354038777405E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999969307724949	WITHOUT_CLASSIFICATION	3.0692275050559837E-6	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999990065691747	WITHOUT_CLASSIFICATION	9.93430825360628E-7	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999948871876435	WITHOUT_CLASSIFICATION	5.112812356476491E-6	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999997314600029	WITHOUT_CLASSIFICATION	2.685399971398534E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999993934087906	WITHOUT_CLASSIFICATION	6.065912093695747E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999993934087906	WITHOUT_CLASSIFICATION	6.065912093695747E-7	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9995378657106027	WITHOUT_CLASSIFICATION	4.621342893973435E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999999990897513	WITHOUT_CLASSIFICATION	9.102486614117153E-10	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999999876059912	WITHOUT_CLASSIFICATION	1.2394008886822698E-8	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9999999957124116	WITHOUT_CLASSIFICATION	4.2875883575916895E-9	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999997190349941	WITHOUT_CLASSIFICATION	2.8096500586579366E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999978148257037	WITHOUT_CLASSIFICATION	2.1851742963690046E-6	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.998218687430456	WITHOUT_CLASSIFICATION	0.0017813125695439922	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999999706183664	WITHOUT_CLASSIFICATION	2.938163358178688E-8	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9957744424443875	WITHOUT_CLASSIFICATION	0.004225557555612519	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999887140561787	WITHOUT_CLASSIFICATION	1.1285943821325117E-5	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999960854982443	WITHOUT_CLASSIFICATION	3.914501755811491E-6	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999999898795479	WITHOUT_CLASSIFICATION	1.0120452130578863E-8	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9857284311309534	WITHOUT_CLASSIFICATION	0.014271568869046599	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999912601660415	WITHOUT_CLASSIFICATION	8.739833958475198E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999912601660415	WITHOUT_CLASSIFICATION	8.739833958475198E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999912601660415	WITHOUT_CLASSIFICATION	8.739833958475198E-6	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9999904089922298	WITHOUT_CLASSIFICATION	9.591007770244961E-6	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999995596375002	WITHOUT_CLASSIFICATION	4.403624997380745E-7	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999999918720802	WITHOUT_CLASSIFICATION	8.127919824711241E-9	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999985028477882	WITHOUT_CLASSIFICATION	1.4971522117724896E-6	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999997500889324	WITHOUT_CLASSIFICATION	2.4991106758503777E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999993670805846	WITHOUT_CLASSIFICATION	6.329194154589601E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999993670805846	WITHOUT_CLASSIFICATION	6.329194154589601E-7	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999999144305896	WITHOUT_CLASSIFICATION	8.55694104575442E-8	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9819713572023869	WITHOUT_CLASSIFICATION	0.01802864279761306	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999980270567018	WITHOUT_CLASSIFICATION	1.9729432981778197E-6	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.999993955617217	WITHOUT_CLASSIFICATION	6.04438278299309E-6	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999999536725503	WITHOUT_CLASSIFICATION	4.632744959081318E-8	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9999866081150008	WITHOUT_CLASSIFICATION	1.339188499923555E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9999180790505888	WITHOUT_CLASSIFICATION	8.192094941124178E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999995359125015	WITHOUT_CLASSIFICATION	4.640874985120374E-7	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999987690100894	WITHOUT_CLASSIFICATION	1.2309899105637656E-6	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.999999988808888	WITHOUT_CLASSIFICATION	1.1191112081700537E-8	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9999840293152553	WITHOUT_CLASSIFICATION	1.5970684744570715E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999970563736579	WITHOUT_CLASSIFICATION	2.9436263420259367E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999918764945983	WITHOUT_CLASSIFICATION	8.123505401715863E-6	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.7439383054645867	WITHOUT_CLASSIFICATION	0.25606169453541333	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999844373990838	WITHOUT_CLASSIFICATION	1.5562600916095442E-5	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999996441845572	WITHOUT_CLASSIFICATION	3.558154428279247E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999983790578653	WITHOUT_CLASSIFICATION	1.6209421348045044E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999987760051794	WITHOUT_CLASSIFICATION	1.2239948205929886E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999855342760223	WITHOUT_CLASSIFICATION	1.4465723977648839E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999855342760223	WITHOUT_CLASSIFICATION	1.4465723977648839E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999855342760223	WITHOUT_CLASSIFICATION	1.4465723977648839E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999855342760223	WITHOUT_CLASSIFICATION	1.4465723977648839E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999995193829752	WITHOUT_CLASSIFICATION	4.806170248667121E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999996733181492	WITHOUT_CLASSIFICATION	3.2668185079824157E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999996733181492	WITHOUT_CLASSIFICATION	3.2668185079824157E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999971704621314	WITHOUT_CLASSIFICATION	2.8295378686287775E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999997547694147	WITHOUT_CLASSIFICATION	2.452305852776259E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999998159972034	WITHOUT_CLASSIFICATION	1.8400279655964368E-7	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999733712218	WITHOUT_CLASSIFICATION	2.6628778229095034E-8	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999956180989155	WITHOUT_CLASSIFICATION	4.381901084547567E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999999025359398	WITHOUT_CLASSIFICATION	9.746406016122523E-8	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.999980282145683	WITHOUT_CLASSIFICATION	1.971785431696611E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999970721058266	WITHOUT_CLASSIFICATION	2.927894173481223E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999970721058266	WITHOUT_CLASSIFICATION	2.927894173481223E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999970721058266	WITHOUT_CLASSIFICATION	2.927894173481223E-6	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9999988830793761	WITHOUT_CLASSIFICATION	1.116920623943928E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999996853599663	WITHOUT_CLASSIFICATION	3.146400337305418E-7	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9998012139434291	WITHOUT_CLASSIFICATION	1.9878605657080116E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999998076034956	WITHOUT_CLASSIFICATION	1.9239650443378487E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999998076034956	WITHOUT_CLASSIFICATION	1.9239650443378487E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999928088775	WITHOUT_CLASSIFICATION	7.191122489854205E-9	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998210683582	WITHOUT_CLASSIFICATION	1.7893164186063913E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999985365432298	WITHOUT_CLASSIFICATION	1.463456770196494E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999054526585672	WITHOUT_CLASSIFICATION	9.45473414327454E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9989677663856228	WITHOUT_CLASSIFICATION	0.0010322336143771555	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999881715259	WITHOUT_CLASSIFICATION	1.1828474029185571E-8	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999945137767271	WITHOUT_CLASSIFICATION	5.48622327292462E-6	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999999767028105	WITHOUT_CLASSIFICATION	2.3297189438472767E-8	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9999999820649973	WITHOUT_CLASSIFICATION	1.7935002621328054E-8	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999997360341739	WITHOUT_CLASSIFICATION	2.639658261395182E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.999999996065567	WITHOUT_CLASSIFICATION	3.934433029456434E-9	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999433023458295	WITHOUT_CLASSIFICATION	5.6697654170420845E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999433023458295	WITHOUT_CLASSIFICATION	5.6697654170420845E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998525961104807	WITHOUT_CLASSIFICATION	1.474038895192269E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999861465780973	WITHOUT_CLASSIFICATION	1.385342190269609E-5	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999861465780973	WITHOUT_CLASSIFICATION	1.385342190269609E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999997571957265	WITHOUT_CLASSIFICATION	2.428042734886206E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999997571957265	WITHOUT_CLASSIFICATION	2.428042734886206E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999997571957265	WITHOUT_CLASSIFICATION	2.428042734886206E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999997571957265	WITHOUT_CLASSIFICATION	2.428042734886206E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999997571957265	WITHOUT_CLASSIFICATION	2.428042734886206E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999997571957265	WITHOUT_CLASSIFICATION	2.428042734886206E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999997571957265	WITHOUT_CLASSIFICATION	2.428042734886206E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999997571957265	WITHOUT_CLASSIFICATION	2.428042734886206E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.999997571957265	WITHOUT_CLASSIFICATION	2.428042734886206E-6	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999821959887	WITHOUT_CLASSIFICATION	1.780401124894029E-8	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999821959887	WITHOUT_CLASSIFICATION	1.780401124894029E-8	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999938085327	WITHOUT_CLASSIFICATION	6.191467351696213E-9	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.999999001297847	WITHOUT_CLASSIFICATION	9.987021529215081E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9987801752375448	WITHOUT_CLASSIFICATION	0.0012198247624552409	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999924328401206	WITHOUT_CLASSIFICATION	7.567159879354989E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999924328401206	WITHOUT_CLASSIFICATION	7.567159879354989E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999898227661586	WITHOUT_CLASSIFICATION	1.017723384150907E-5	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999999737189504	WITHOUT_CLASSIFICATION	2.6281049634252465E-8	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9997380721313535	WITHOUT_CLASSIFICATION	2.619278686465872E-4	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9629839117468512	DEFECT	0.03701608825314891	WITHOUT_CLASSIFICATION
// EATM must fix isSet bits.	DEFECT	0.9999998361934688	WITHOUT_CLASSIFICATION	1.638065312001935E-7	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999998361934688	WITHOUT_CLASSIFICATION	1.638065312001935E-7	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9995638358526322	DEFECT	4.361641473677773E-4	WITHOUT_CLASSIFICATION
// is this an error???	DEFECT	0.9999933860791328	WITHOUT_CLASSIFICATION	6.6139208672580874E-6	DEFECT
// is this an error???	DEFECT	0.9999933860791328	WITHOUT_CLASSIFICATION	6.6139208672580874E-6	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9999158645276419	WITHOUT_CLASSIFICATION	8.413547235800806E-5	DEFECT
