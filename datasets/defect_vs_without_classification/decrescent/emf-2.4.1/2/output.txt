// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999996945053153	WITHOUT_CLASSIFICATION	3.054946846359604E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.99989798102672	WITHOUT_CLASSIFICATION	1.020189732800258E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.999998911706383	WITHOUT_CLASSIFICATION	1.0882936170074141E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999964894580274	WITHOUT_CLASSIFICATION	3.510541972586262E-6	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.999924513824298	WITHOUT_CLASSIFICATION	7.548617570197283E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999996980522359	WITHOUT_CLASSIFICATION	3.0194776406158603E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999738659638121	WITHOUT_CLASSIFICATION	2.6134036187866574E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.999999889896582	WITHOUT_CLASSIFICATION	1.1010341813547123E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.999999739058437	WITHOUT_CLASSIFICATION	2.6094156301206097E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999991677890269	WITHOUT_CLASSIFICATION	8.322109730169413E-7	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999999204088337	WITHOUT_CLASSIFICATION	7.959116635375272E-8	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999992641485071	WITHOUT_CLASSIFICATION	7.358514929250852E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999907763194872	WITHOUT_CLASSIFICATION	9.223680512859008E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999998943458548	WITHOUT_CLASSIFICATION	1.0565414522298024E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999993907694134	WITHOUT_CLASSIFICATION	6.092305865106544E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999993237647149	WITHOUT_CLASSIFICATION	6.762352850919413E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999954044474639	WITHOUT_CLASSIFICATION	4.595552536121142E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999738659638121	WITHOUT_CLASSIFICATION	2.6134036187866574E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999987753788638	WITHOUT_CLASSIFICATION	1.2246211361770181E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999998501648608	WITHOUT_CLASSIFICATION	1.4983513921653057E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999994912957245	WITHOUT_CLASSIFICATION	5.087042755744384E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999728963409356	WITHOUT_CLASSIFICATION	2.710365906447784E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999728963409356	WITHOUT_CLASSIFICATION	2.710365906447784E-5	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999972249319258	WITHOUT_CLASSIFICATION	2.7750680742090104E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998357537214	WITHOUT_CLASSIFICATION	1.6424627857641897E-7	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9999949377777212	WITHOUT_CLASSIFICATION	5.062222278847074E-6	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9999716136265618	WITHOUT_CLASSIFICATION	2.8386373438211126E-5	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999994772685653	WITHOUT_CLASSIFICATION	5.227314347718124E-7	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999988204001602	WITHOUT_CLASSIFICATION	1.1795998398688147E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998789142378022	WITHOUT_CLASSIFICATION	1.2108576219792515E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999847005564427	WITHOUT_CLASSIFICATION	1.529944355726103E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999999384944567	WITHOUT_CLASSIFICATION	6.150554338026118E-8	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9999706677565792	WITHOUT_CLASSIFICATION	2.933224342088469E-5	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999845304994536	WITHOUT_CLASSIFICATION	1.5469500546339312E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999951859940803	WITHOUT_CLASSIFICATION	4.81400591971757E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999876065523194	WITHOUT_CLASSIFICATION	1.2393447680684351E-5	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999817211605306	WITHOUT_CLASSIFICATION	1.8278839469390174E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999921653538472	WITHOUT_CLASSIFICATION	7.834646152752751E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999812876975157	WITHOUT_CLASSIFICATION	1.8712302484310894E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999981501031566	WITHOUT_CLASSIFICATION	1.8498968433323143E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.999999885840723	WITHOUT_CLASSIFICATION	1.1415927700333334E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.999981633793605	WITHOUT_CLASSIFICATION	1.8366206394990007E-5	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999916128849	WITHOUT_CLASSIFICATION	8.387115177155726E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999952732684	WITHOUT_CLASSIFICATION	4.7267315491753625E-9	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999063037734907	WITHOUT_CLASSIFICATION	9.3696226509377E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999253864279667	WITHOUT_CLASSIFICATION	7.461357203325442E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999330329187991	WITHOUT_CLASSIFICATION	6.696708120092417E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989571759014	WITHOUT_CLASSIFICATION	1.042824098646734E-6	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9994148015919636	WITHOUT_CLASSIFICATION	5.851984080363305E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9995915580109377	WITHOUT_CLASSIFICATION	4.0844198906232233E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999865710501	WITHOUT_CLASSIFICATION	1.3428949898688004E-7	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999330329187991	WITHOUT_CLASSIFICATION	6.696708120092417E-5	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9999859053163705	WITHOUT_CLASSIFICATION	1.4094683629502538E-5	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9998393848629236	WITHOUT_CLASSIFICATION	1.6061513707643388E-4	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999683801860003	WITHOUT_CLASSIFICATION	3.161981399972594E-5	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9998533869782782	WITHOUT_CLASSIFICATION	1.466130217217051E-4	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9999866592615047	WITHOUT_CLASSIFICATION	1.3340738495446088E-5	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9999446564332678	WITHOUT_CLASSIFICATION	5.53435667322828E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999999120090812	WITHOUT_CLASSIFICATION	8.799091873198865E-8	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995336475015	WITHOUT_CLASSIFICATION	4.663524984602628E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999987629828716	WITHOUT_CLASSIFICATION	1.2370171284720354E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999437849887	WITHOUT_CLASSIFICATION	5.621501127605708E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999999287472118	WITHOUT_CLASSIFICATION	7.125278827782111E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999998531247801	WITHOUT_CLASSIFICATION	1.4687521991176484E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999896598637183	WITHOUT_CLASSIFICATION	1.0340136281776428E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999982770333233	WITHOUT_CLASSIFICATION	1.7229666766552356E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999996023711366	WITHOUT_CLASSIFICATION	3.976288634123669E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998576997695	WITHOUT_CLASSIFICATION	1.4230023051106613E-7	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9998893498990682	WITHOUT_CLASSIFICATION	1.1065010093182909E-4	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999893065197816	WITHOUT_CLASSIFICATION	1.069348021854745E-5	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999708220768868	WITHOUT_CLASSIFICATION	2.91779231132875E-5	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9999940083313865	WITHOUT_CLASSIFICATION	5.991668613549405E-6	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999988004692667	WITHOUT_CLASSIFICATION	1.1995307332993718E-6	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9999716386859389	WITHOUT_CLASSIFICATION	2.8361314061124934E-5	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9999946757721275	WITHOUT_CLASSIFICATION	5.324227872489525E-6	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9975376632955025	WITHOUT_CLASSIFICATION	0.002462336704497432	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999994166163435	WITHOUT_CLASSIFICATION	5.833836565174367E-7	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9998092864698531	WITHOUT_CLASSIFICATION	1.9071353014688005E-4	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9991593171310555	WITHOUT_CLASSIFICATION	8.406828689444297E-4	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999992641485071	WITHOUT_CLASSIFICATION	7.358514929250852E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999907763194872	WITHOUT_CLASSIFICATION	9.223680512859008E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999998943458548	WITHOUT_CLASSIFICATION	1.0565414522298024E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999964529210599	WITHOUT_CLASSIFICATION	3.547078940042517E-6	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.999991711449116	WITHOUT_CLASSIFICATION	8.288550883887761E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999993907694134	WITHOUT_CLASSIFICATION	6.092305865106544E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999993237647149	WITHOUT_CLASSIFICATION	6.762352850919413E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999954044474639	WITHOUT_CLASSIFICATION	4.595552536121142E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999828839375421	WITHOUT_CLASSIFICATION	1.7116062457964517E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999828839375421	WITHOUT_CLASSIFICATION	1.7116062457964517E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999828839375421	WITHOUT_CLASSIFICATION	1.7116062457964517E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999996980522359	WITHOUT_CLASSIFICATION	3.0194776406158603E-7	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.999999866523154	WITHOUT_CLASSIFICATION	1.334768459516159E-7	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9999994603284329	WITHOUT_CLASSIFICATION	5.396715670278801E-7	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999841627578797	WITHOUT_CLASSIFICATION	1.5837242120193816E-5	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999994912957245	WITHOUT_CLASSIFICATION	5.087042755744384E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.999999602468008	WITHOUT_CLASSIFICATION	3.975319920629997E-7	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998789142378022	WITHOUT_CLASSIFICATION	1.2108576219792515E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999847005564427	WITHOUT_CLASSIFICATION	1.529944355726103E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9999706677565792	WITHOUT_CLASSIFICATION	2.933224342088469E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999876065523194	WITHOUT_CLASSIFICATION	1.2393447680684351E-5	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9999986629647405	WITHOUT_CLASSIFICATION	1.337035259481595E-6	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9999426820205767	WITHOUT_CLASSIFICATION	5.731797942337668E-5	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999985383175828	WITHOUT_CLASSIFICATION	1.4616824171969392E-6	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999993372482602	WITHOUT_CLASSIFICATION	6.627517397504776E-7	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999807424764459	WITHOUT_CLASSIFICATION	1.9257523554097847E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999981501031566	WITHOUT_CLASSIFICATION	1.8498968433323143E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.999981633793605	WITHOUT_CLASSIFICATION	1.8366206394990007E-5	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999995621218789	WITHOUT_CLASSIFICATION	4.378781211280056E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9999986427506218	WITHOUT_CLASSIFICATION	1.357249378169341E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999998880655767	WITHOUT_CLASSIFICATION	1.1193442325203062E-7	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999974839334169	WITHOUT_CLASSIFICATION	2.516066583091927E-6	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999982932739222	WITHOUT_CLASSIFICATION	1.7067260778867333E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9999773500346255	WITHOUT_CLASSIFICATION	2.264996537442282E-5	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9999995661058387	WITHOUT_CLASSIFICATION	4.338941613172842E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999869351194937	WITHOUT_CLASSIFICATION	1.3064880506420304E-5	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999700141655604	WITHOUT_CLASSIFICATION	2.9985834439667437E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999696528890747	WITHOUT_CLASSIFICATION	3.0347110925376617E-5	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999980050277909	WITHOUT_CLASSIFICATION	1.9949722090625227E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999700141655604	WITHOUT_CLASSIFICATION	2.9985834439667437E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999186674262962	WITHOUT_CLASSIFICATION	8.133257370380538E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999949960377349	WITHOUT_CLASSIFICATION	5.003962265129304E-6	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999991343623432	WITHOUT_CLASSIFICATION	8.656376566968158E-7	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999786963973287	WITHOUT_CLASSIFICATION	2.1303602671320044E-5	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999700141655604	WITHOUT_CLASSIFICATION	2.9985834439667437E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999696528890747	WITHOUT_CLASSIFICATION	3.0347110925376617E-5	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999862510112353	WITHOUT_CLASSIFICATION	1.3748988764648883E-5	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999997832759858	WITHOUT_CLASSIFICATION	2.1672401423243863E-7	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.99995937389942	WITHOUT_CLASSIFICATION	4.062610058004181E-5	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999832266579279	WITHOUT_CLASSIFICATION	1.6773342072005863E-5	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999989363546262	WITHOUT_CLASSIFICATION	1.0636453736945577E-6	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9999324042350687	WITHOUT_CLASSIFICATION	6.759576493130233E-5	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9999993008756841	WITHOUT_CLASSIFICATION	6.99124315845431E-7	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9999897509316709	WITHOUT_CLASSIFICATION	1.0249068329129999E-5	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9999423198111586	WITHOUT_CLASSIFICATION	5.768018884142927E-5	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9999800431426186	WITHOUT_CLASSIFICATION	1.9956857381442E-5	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9984263699026703	WITHOUT_CLASSIFICATION	0.0015736300973297832	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999992031737325	WITHOUT_CLASSIFICATION	7.968262675129998E-6	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999964621559532	WITHOUT_CLASSIFICATION	3.5378440468030865E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989571759014	WITHOUT_CLASSIFICATION	1.042824098646734E-6	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999908680642	WITHOUT_CLASSIFICATION	9.131935736794466E-9	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999893073100827	WITHOUT_CLASSIFICATION	1.069268991723821E-5	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9999994966904385	WITHOUT_CLASSIFICATION	5.03309561543262E-7	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.999837583405623	WITHOUT_CLASSIFICATION	1.624165943770844E-4	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9999903345738594	WITHOUT_CLASSIFICATION	9.665426140479735E-6	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999591277267093	WITHOUT_CLASSIFICATION	4.087227329081602E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999764957456727	WITHOUT_CLASSIFICATION	2.3504254327290392E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999908680642	WITHOUT_CLASSIFICATION	9.131935736794466E-9	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999893073100827	WITHOUT_CLASSIFICATION	1.069268991723821E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999764734819927	WITHOUT_CLASSIFICATION	2.3526518007307728E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999764734819927	WITHOUT_CLASSIFICATION	2.3526518007307728E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999542441388682	WITHOUT_CLASSIFICATION	4.5755861131792574E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9999620496525213	WITHOUT_CLASSIFICATION	3.795034747871035E-5	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999977278244845	WITHOUT_CLASSIFICATION	2.2721755154520503E-6	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999542441388682	WITHOUT_CLASSIFICATION	4.5755861131792574E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9999620496525213	WITHOUT_CLASSIFICATION	3.795034747871035E-5	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999994173534487	WITHOUT_CLASSIFICATION	5.82646551448376E-7	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998850734982747	WITHOUT_CLASSIFICATION	1.1492650172530567E-4	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999777674438	WITHOUT_CLASSIFICATION	2.223255625575921E-8	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999999127788309	WITHOUT_CLASSIFICATION	8.722116903912729E-8	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999777674438	WITHOUT_CLASSIFICATION	2.223255625575921E-8	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999998500483647	WITHOUT_CLASSIFICATION	1.499516353907656E-7	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999974670593	WITHOUT_CLASSIFICATION	2.532940772353946E-9	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999974670593	WITHOUT_CLASSIFICATION	2.532940772353946E-9	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9999995927703923	WITHOUT_CLASSIFICATION	4.0722960772125483E-7	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999999903942086	WITHOUT_CLASSIFICATION	9.605791397560073E-9	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9999999206207965	WITHOUT_CLASSIFICATION	7.937920351490215E-8	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999999994047282	WITHOUT_CLASSIFICATION	5.952719147225834E-10	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999997713307731	WITHOUT_CLASSIFICATION	2.2866922678801735E-7	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.999999984038988	WITHOUT_CLASSIFICATION	1.5961012024116077E-8	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999997978953262	WITHOUT_CLASSIFICATION	2.0210467375019538E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999975291565897	WITHOUT_CLASSIFICATION	2.4708434104087974E-6	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999998504890256	WITHOUT_CLASSIFICATION	1.4951097441318059E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999977286438174	WITHOUT_CLASSIFICATION	2.271356182567418E-6	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999999907827156	WITHOUT_CLASSIFICATION	9.217284318096742E-9	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999975291565897	WITHOUT_CLASSIFICATION	2.4708434104087974E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999977286438174	WITHOUT_CLASSIFICATION	2.271356182567418E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999975291565897	WITHOUT_CLASSIFICATION	2.4708434104087974E-6	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9999993701153723	WITHOUT_CLASSIFICATION	6.298846275974932E-7	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999987470560162	WITHOUT_CLASSIFICATION	1.252943983885371E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999975291565897	WITHOUT_CLASSIFICATION	2.4708434104087974E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999975291565897	WITHOUT_CLASSIFICATION	2.4708434104087974E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999975291565897	WITHOUT_CLASSIFICATION	2.4708434104087974E-6	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999969729707834	WITHOUT_CLASSIFICATION	3.0270292166004385E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999995214049848	WITHOUT_CLASSIFICATION	4.785950151354759E-7	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999998984896491	WITHOUT_CLASSIFICATION	1.0151035089350795E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999596368867534	WITHOUT_CLASSIFICATION	4.036311324654869E-5	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9999950067263308	WITHOUT_CLASSIFICATION	4.9932736692148925E-6	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999989973274793	WITHOUT_CLASSIFICATION	1.0026725206360205E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999955055600193	WITHOUT_CLASSIFICATION	4.49443998067761E-6	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999826858984	WITHOUT_CLASSIFICATION	1.7314101642227992E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999826858984	WITHOUT_CLASSIFICATION	1.7314101642227992E-8	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999860487604295	WITHOUT_CLASSIFICATION	1.3951239570396262E-5	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999398520493719	WITHOUT_CLASSIFICATION	6.014795062810371E-5	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999950151129491	WITHOUT_CLASSIFICATION	4.984887050937743E-6	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999996704125004	WITHOUT_CLASSIFICATION	3.295874996110871E-7	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999989864216257	WITHOUT_CLASSIFICATION	1.013578374285815E-6	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999999664326165	WITHOUT_CLASSIFICATION	3.3567383579459857E-8	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999596368867534	WITHOUT_CLASSIFICATION	4.036311324654869E-5	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9999971524830803	WITHOUT_CLASSIFICATION	2.847516919742215E-6	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999970705419213	WITHOUT_CLASSIFICATION	2.929458078755813E-6	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999932823038645	WITHOUT_CLASSIFICATION	6.717696135459411E-6	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999996394223252	WITHOUT_CLASSIFICATION	3.6057767483341366E-7	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9999460857634782	WITHOUT_CLASSIFICATION	5.391423652179421E-5	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9999786713694906	WITHOUT_CLASSIFICATION	2.1328630509466943E-5	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999709687212486	WITHOUT_CLASSIFICATION	2.9031278751496874E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999997561210193	WITHOUT_CLASSIFICATION	2.438789806566736E-7	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999984456723209	WITHOUT_CLASSIFICATION	1.5543276791929584E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999977286438174	WITHOUT_CLASSIFICATION	2.271356182567418E-6	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999772548831958	WITHOUT_CLASSIFICATION	2.2745116804142374E-5	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999998742540896	WITHOUT_CLASSIFICATION	1.2574591038429007E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999998109222132	WITHOUT_CLASSIFICATION	1.890777867263784E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999998109222132	WITHOUT_CLASSIFICATION	1.890777867263784E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999956301381938	WITHOUT_CLASSIFICATION	4.369861806152405E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999977286438174	WITHOUT_CLASSIFICATION	2.271356182567418E-6	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999997498378997	WITHOUT_CLASSIFICATION	2.50162100315631E-7	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999974502416122	WITHOUT_CLASSIFICATION	2.5497583877325455E-6	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.999961171098546	WITHOUT_CLASSIFICATION	3.882890145405379E-5	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999999486986609	WITHOUT_CLASSIFICATION	5.130133905017722E-8	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.999999027017575	WITHOUT_CLASSIFICATION	9.72982424974508E-7	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.9999936767317722	WITHOUT_CLASSIFICATION	6.323268227758922E-6	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999999463143955	WITHOUT_CLASSIFICATION	5.3685604628149715E-8	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999999075597471	WITHOUT_CLASSIFICATION	9.244025293953726E-8	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9999550446788157	WITHOUT_CLASSIFICATION	4.4955321184289355E-5	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999999397913215	WITHOUT_CLASSIFICATION	6.020867848308441E-8	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999988368079559	WITHOUT_CLASSIFICATION	1.1631920440706731E-6	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999924285662407	WITHOUT_CLASSIFICATION	7.571433759273674E-6	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9999804479974462	WITHOUT_CLASSIFICATION	1.9552002553734176E-5	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9999962289742859	WITHOUT_CLASSIFICATION	3.7710257141371256E-6	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999936884285462	WITHOUT_CLASSIFICATION	6.3115714538481124E-6	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.999999971815062	WITHOUT_CLASSIFICATION	2.8184937999932268E-8	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.999999922583834	WITHOUT_CLASSIFICATION	7.741616603824636E-8	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9999991249463134	WITHOUT_CLASSIFICATION	8.750536866253632E-7	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.999999973450974	WITHOUT_CLASSIFICATION	2.6549025948091204E-8	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999993327619394	WITHOUT_CLASSIFICATION	6.672380605382224E-7	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9999688777304312	WITHOUT_CLASSIFICATION	3.112226956872191E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999977286438174	WITHOUT_CLASSIFICATION	2.271356182567418E-6	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999999687442246	WITHOUT_CLASSIFICATION	3.12557753281713E-8	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999991076711966	WITHOUT_CLASSIFICATION	8.923288032759243E-7	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9999919142971616	WITHOUT_CLASSIFICATION	8.085702838375656E-6	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999988615689918	WITHOUT_CLASSIFICATION	1.1384310082593842E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9999914110610849	WITHOUT_CLASSIFICATION	8.588938915159223E-6	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999992429724618	WITHOUT_CLASSIFICATION	7.570275381695739E-7	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999988911374829	WITHOUT_CLASSIFICATION	1.1088625171075187E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999977286438174	WITHOUT_CLASSIFICATION	2.271356182567418E-6	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999996931566159	WITHOUT_CLASSIFICATION	3.068433840476774E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999978671256031	WITHOUT_CLASSIFICATION	2.1328743968966575E-6	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999978671256031	WITHOUT_CLASSIFICATION	2.1328743968966575E-6	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9995940943562129	WITHOUT_CLASSIFICATION	4.0590564378712026E-4	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9995940943562129	WITHOUT_CLASSIFICATION	4.0590564378712026E-4	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999094194073	WITHOUT_CLASSIFICATION	9.05805927352183E-8	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999998000739863	WITHOUT_CLASSIFICATION	1.999260137708138E-7	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999885243335694	WITHOUT_CLASSIFICATION	1.1475666430695586E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999885243335694	WITHOUT_CLASSIFICATION	1.1475666430695586E-5	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999759042160485	WITHOUT_CLASSIFICATION	2.409578395139406E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999998805323415	WITHOUT_CLASSIFICATION	1.1946765854908154E-7	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999995214049848	WITHOUT_CLASSIFICATION	4.785950151354759E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.999999585475208	WITHOUT_CLASSIFICATION	4.1452479204590866E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.999999585475208	WITHOUT_CLASSIFICATION	4.1452479204590866E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.999999585475208	WITHOUT_CLASSIFICATION	4.1452479204590866E-7	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999998805323415	WITHOUT_CLASSIFICATION	1.1946765854908154E-7	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999999611399539	WITHOUT_CLASSIFICATION	3.8860046133490176E-8	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.999983555805583	WITHOUT_CLASSIFICATION	1.644419441708779E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9999998653631738	WITHOUT_CLASSIFICATION	1.3463682626739435E-7	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9998692332760396	WITHOUT_CLASSIFICATION	1.3076672396033885E-4	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999936348409634	WITHOUT_CLASSIFICATION	6.365159036718915E-6	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999999224006937	WITHOUT_CLASSIFICATION	7.75993062372344E-8	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.999998911706383	WITHOUT_CLASSIFICATION	1.0882936170074141E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999964894580274	WITHOUT_CLASSIFICATION	3.510541972586262E-6	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.999924513824298	WITHOUT_CLASSIFICATION	7.548617570197283E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999996980522359	WITHOUT_CLASSIFICATION	3.0194776406158603E-7	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.999999889896582	WITHOUT_CLASSIFICATION	1.1010341813547123E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.999999739058437	WITHOUT_CLASSIFICATION	2.6094156301206097E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999991677890269	WITHOUT_CLASSIFICATION	8.322109730169413E-7	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999992641485071	WITHOUT_CLASSIFICATION	7.358514929250852E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999907763194872	WITHOUT_CLASSIFICATION	9.223680512859008E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999998943458548	WITHOUT_CLASSIFICATION	1.0565414522298024E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999815329219356	WITHOUT_CLASSIFICATION	1.846707806430806E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999993907694134	WITHOUT_CLASSIFICATION	6.092305865106544E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999993237647149	WITHOUT_CLASSIFICATION	6.762352850919413E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999954044474639	WITHOUT_CLASSIFICATION	4.595552536121142E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999987753788638	WITHOUT_CLASSIFICATION	1.2246211361770181E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999998501648608	WITHOUT_CLASSIFICATION	1.4983513921653057E-7	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.999999372149701	WITHOUT_CLASSIFICATION	6.27850298965574E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999995011257776	WITHOUT_CLASSIFICATION	4.988742222767066E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999994912957245	WITHOUT_CLASSIFICATION	5.087042755744384E-7	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999972249319258	WITHOUT_CLASSIFICATION	2.7750680742090104E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998357537214	WITHOUT_CLASSIFICATION	1.6424627857641897E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.999999602468008	WITHOUT_CLASSIFICATION	3.975319920629997E-7	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998789142378022	WITHOUT_CLASSIFICATION	1.2108576219792515E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999847005564427	WITHOUT_CLASSIFICATION	1.529944355726103E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999999384944567	WITHOUT_CLASSIFICATION	6.150554338026118E-8	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9999706677565792	WITHOUT_CLASSIFICATION	2.933224342088469E-5	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.999999985362582	WITHOUT_CLASSIFICATION	1.4637418077409105E-8	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999998185723542	WITHOUT_CLASSIFICATION	1.814276457463988E-7	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999921653538472	WITHOUT_CLASSIFICATION	7.834646152752751E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999845304994536	WITHOUT_CLASSIFICATION	1.5469500546339312E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999876065523194	WITHOUT_CLASSIFICATION	1.2393447680684351E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999951859940803	WITHOUT_CLASSIFICATION	4.81400591971757E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999970809699414	WITHOUT_CLASSIFICATION	2.919030058564735E-6	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999983795168559	WITHOUT_CLASSIFICATION	1.6204831441683745E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999876065523194	WITHOUT_CLASSIFICATION	1.2393447680684351E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999981501031566	WITHOUT_CLASSIFICATION	1.8498968433323143E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999812876975157	WITHOUT_CLASSIFICATION	1.8712302484310894E-5	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999720160724395	WITHOUT_CLASSIFICATION	2.7983927560433392E-5	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.999981633793605	WITHOUT_CLASSIFICATION	1.8366206394990007E-5	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999843749310205	WITHOUT_CLASSIFICATION	1.5625068979435333E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999970809699414	WITHOUT_CLASSIFICATION	2.919030058564735E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.999981633793605	WITHOUT_CLASSIFICATION	1.8366206394990007E-5	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999956012116595	WITHOUT_CLASSIFICATION	4.398788340479321E-6	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.999999884210874	WITHOUT_CLASSIFICATION	1.1578912592342805E-7	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999983878255334	WITHOUT_CLASSIFICATION	1.612174466628912E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999998758993718	WITHOUT_CLASSIFICATION	1.241006281593033E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.999999396827094	WITHOUT_CLASSIFICATION	6.031729059684857E-7	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9999307830283773	WITHOUT_CLASSIFICATION	6.921697162264693E-5	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.999999912716318	WITHOUT_CLASSIFICATION	8.72836819131879E-8	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999959611578574	WITHOUT_CLASSIFICATION	4.038842142682675E-6	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.99997656127602	WITHOUT_CLASSIFICATION	2.343872397994386E-5	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999983108850736	WITHOUT_CLASSIFICATION	1.6891149263416522E-6	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.999998608419819	WITHOUT_CLASSIFICATION	1.3915801809178767E-6	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9999956082370658	WITHOUT_CLASSIFICATION	4.391762934295155E-6	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9999999233390158	WITHOUT_CLASSIFICATION	7.666098412247962E-8	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9999999924464985	WITHOUT_CLASSIFICATION	7.553501515192452E-9	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9999999509015668	WITHOUT_CLASSIFICATION	4.9098433227957725E-8	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999999479332493	WITHOUT_CLASSIFICATION	5.2066750728802406E-8	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9999999690172009	WITHOUT_CLASSIFICATION	3.098279900916357E-8	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999999491441459	WITHOUT_CLASSIFICATION	5.085585419761748E-8	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999999885420472	WITHOUT_CLASSIFICATION	1.1457952784899612E-8	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999999932211113	WITHOUT_CLASSIFICATION	6.778888768709265E-9	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999974345121561	WITHOUT_CLASSIFICATION	2.5654878438894874E-6	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999983684969075	WITHOUT_CLASSIFICATION	1.6315030925039939E-6	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.999999995628438	WITHOUT_CLASSIFICATION	4.371561916565813E-9	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999994424671977	WITHOUT_CLASSIFICATION	5.575328021424762E-7	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9999998312786846	WITHOUT_CLASSIFICATION	1.687213153510733E-7	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.9999623367258176	WITHOUT_CLASSIFICATION	3.766327418232232E-5	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999870100886249	WITHOUT_CLASSIFICATION	1.2989911375227108E-5	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999989952012049	WITHOUT_CLASSIFICATION	1.0047987950648966E-6	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999999670892831	WITHOUT_CLASSIFICATION	3.291071696648508E-8	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999995062469133	WITHOUT_CLASSIFICATION	4.937530868018152E-7	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999916128849	WITHOUT_CLASSIFICATION	8.387115177155726E-9	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999832278588817	WITHOUT_CLASSIFICATION	1.677214111832817E-5	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.999999762547622	WITHOUT_CLASSIFICATION	2.3745237798720075E-7	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999988506363864	WITHOUT_CLASSIFICATION	1.1493636136230768E-6	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999994569284698	WITHOUT_CLASSIFICATION	5.430715301071521E-7	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999765853511302	WITHOUT_CLASSIFICATION	2.3414648869910737E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9996443592053339	WITHOUT_CLASSIFICATION	3.5564079466605334E-4	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999993278594433	WITHOUT_CLASSIFICATION	6.721405566939017E-7	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999961550757148	WITHOUT_CLASSIFICATION	3.844924285183225E-6	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999997492733687	WITHOUT_CLASSIFICATION	2.507266313289315E-7	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.999992658375337	WITHOUT_CLASSIFICATION	7.341624663047669E-6	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.99999989056455	WITHOUT_CLASSIFICATION	1.0943545015871921E-7	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999969165563037	WITHOUT_CLASSIFICATION	3.083443696332767E-6	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.999986923480193	WITHOUT_CLASSIFICATION	1.3076519806992507E-5	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999890091446207	WITHOUT_CLASSIFICATION	1.0990855379293187E-5	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.999999096036612	WITHOUT_CLASSIFICATION	9.039633879263563E-7	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999697075815521	WITHOUT_CLASSIFICATION	3.0292418447849336E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.999991491919306	WITHOUT_CLASSIFICATION	8.508080694022628E-6	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999991118262327	WITHOUT_CLASSIFICATION	8.881737673988501E-7	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999999891221477	WITHOUT_CLASSIFICATION	1.0877852262279599E-8	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999997321867995	WITHOUT_CLASSIFICATION	2.6781320046736025E-7	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9990591459023157	WITHOUT_CLASSIFICATION	9.40854097684345E-4	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9997364461321366	WITHOUT_CLASSIFICATION	2.6355386786339343E-4	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999999497839384	WITHOUT_CLASSIFICATION	5.0216061738807356E-8	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999998312439436	WITHOUT_CLASSIFICATION	1.687560562719887E-7	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999999903942086	WITHOUT_CLASSIFICATION	9.605791397560073E-9	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.999972155517047	WITHOUT_CLASSIFICATION	2.7844482953117134E-5	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999994087066953	WITHOUT_CLASSIFICATION	5.912933045864594E-7	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999999960113765	WITHOUT_CLASSIFICATION	3.988623604541313E-9	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999996526556473	WITHOUT_CLASSIFICATION	3.4734435264031244E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999999953605355	WITHOUT_CLASSIFICATION	4.639464493989452E-9	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999963093868027	WITHOUT_CLASSIFICATION	3.6906131971492504E-6	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.999371017005602	WITHOUT_CLASSIFICATION	6.289829943978641E-4	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9999959951984546	WITHOUT_CLASSIFICATION	4.00480154544578E-6	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999999809186281	WITHOUT_CLASSIFICATION	1.908137185609464E-8	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999983532532105	WITHOUT_CLASSIFICATION	1.6467467895648825E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999999509462544	WITHOUT_CLASSIFICATION	4.905374559715536E-8	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999989973274793	WITHOUT_CLASSIFICATION	1.0026725206360205E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999955055600193	WITHOUT_CLASSIFICATION	4.49443998067761E-6	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999999664326165	WITHOUT_CLASSIFICATION	3.3567383579459857E-8	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999963093868027	WITHOUT_CLASSIFICATION	3.6906131971492504E-6	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999983532532105	WITHOUT_CLASSIFICATION	1.6467467895648825E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999999509462544	WITHOUT_CLASSIFICATION	4.905374559715536E-8	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999961548605151	WITHOUT_CLASSIFICATION	3.845139484957096E-6	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999998399177725	WITHOUT_CLASSIFICATION	1.600822273692609E-7	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999988103373637	WITHOUT_CLASSIFICATION	1.1896626363132588E-6	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.999998789865472	WITHOUT_CLASSIFICATION	1.2101345280268636E-6	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999994987469739	WITHOUT_CLASSIFICATION	5.012530261488064E-7	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999999989929245	WITHOUT_CLASSIFICATION	1.0070755359519193E-9	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999999536046641	WITHOUT_CLASSIFICATION	4.6395335918357956E-8	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999989341977621	WITHOUT_CLASSIFICATION	1.065802237860096E-6	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999978843024896	WITHOUT_CLASSIFICATION	2.115697510375208E-6	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.999996819527748	WITHOUT_CLASSIFICATION	3.180472252090045E-6	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999998821321131	WITHOUT_CLASSIFICATION	1.1786788689675282E-7	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9999975121678042	WITHOUT_CLASSIFICATION	2.4878321957457445E-6	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999559168464268	WITHOUT_CLASSIFICATION	4.408315357311648E-5	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.999997352431145	WITHOUT_CLASSIFICATION	2.6475688549506507E-6	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999997371272005	WITHOUT_CLASSIFICATION	2.628727995537306E-7	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999987507113048	WITHOUT_CLASSIFICATION	1.2492886951757327E-6	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9999793132042313	WITHOUT_CLASSIFICATION	2.06867957686732E-5	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999994509791387	WITHOUT_CLASSIFICATION	5.49020861379826E-7	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999973416037883	WITHOUT_CLASSIFICATION	2.6583962117096516E-6	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999929440647007	WITHOUT_CLASSIFICATION	7.0559352991911795E-6	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999999992466045	WITHOUT_CLASSIFICATION	7.533954877253922E-10	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999999863525468	WITHOUT_CLASSIFICATION	1.3647453124965831E-8	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999996526556473	WITHOUT_CLASSIFICATION	3.4734435264031244E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999999953605355	WITHOUT_CLASSIFICATION	4.639464493989452E-9	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999999696621735	WITHOUT_CLASSIFICATION	3.033782656840966E-8	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999998595510463	WITHOUT_CLASSIFICATION	1.4044895361039437E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999999916863036	WITHOUT_CLASSIFICATION	8.31369643561182E-9	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999999433907842	WITHOUT_CLASSIFICATION	5.66092157388758E-8	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999996830539041	WITHOUT_CLASSIFICATION	3.169460959134395E-7	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999617772640238	WITHOUT_CLASSIFICATION	3.8222735976173676E-5	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9996555204070493	WITHOUT_CLASSIFICATION	3.444795929506195E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9998803034511068	WITHOUT_CLASSIFICATION	1.1969654889316944E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999986448020318	WITHOUT_CLASSIFICATION	1.3551979681365508E-6	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999986448020318	WITHOUT_CLASSIFICATION	1.3551979681365508E-6	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999600304155616	WITHOUT_CLASSIFICATION	3.996958443847637E-5	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.999991307947209	WITHOUT_CLASSIFICATION	8.692052790956615E-6	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999769636149076	WITHOUT_CLASSIFICATION	2.303638509247752E-5	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9999999110333357	WITHOUT_CLASSIFICATION	8.896666429068705E-8	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.999999962103226	WITHOUT_CLASSIFICATION	3.7896774011764116E-8	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999917640058	WITHOUT_CLASSIFICATION	8.235994191837253E-9	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999700132606267	WITHOUT_CLASSIFICATION	2.9986739373311644E-5	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999700132606267	WITHOUT_CLASSIFICATION	2.9986739373311644E-5	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999999854504872	WITHOUT_CLASSIFICATION	1.4549512830697638E-8	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.999999687985155	WITHOUT_CLASSIFICATION	3.1201484497090405E-7	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999947684692189	WITHOUT_CLASSIFICATION	5.231530781165621E-6	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999989777746351	WITHOUT_CLASSIFICATION	1.0222253649366258E-6	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999999480274572	WITHOUT_CLASSIFICATION	5.197254290678028E-8	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999863294736845	WITHOUT_CLASSIFICATION	1.3670526315575015E-5	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.999999795207025	WITHOUT_CLASSIFICATION	2.0479297499899324E-7	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999721213896401	WITHOUT_CLASSIFICATION	2.787861035997346E-5	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999999949937896	WITHOUT_CLASSIFICATION	5.006210469867346E-9	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999999811257034	WITHOUT_CLASSIFICATION	1.8874296545235554E-8	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999096821906954	WITHOUT_CLASSIFICATION	9.03178093046568E-5	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999991070542	WITHOUT_CLASSIFICATION	8.929458896200965E-10	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9999986556322034	WITHOUT_CLASSIFICATION	1.3443677966133315E-6	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999995750468549	WITHOUT_CLASSIFICATION	4.2495314511981263E-7	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999885438823135	WITHOUT_CLASSIFICATION	1.1456117686446519E-5	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999990106969383	WITHOUT_CLASSIFICATION	9.89303061762653E-7	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999994416924366	WITHOUT_CLASSIFICATION	5.58307563488962E-7	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999966912733501	WITHOUT_CLASSIFICATION	3.308726650014019E-6	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.999999633898383	WITHOUT_CLASSIFICATION	3.661016169583798E-7	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999995899966605	WITHOUT_CLASSIFICATION	4.100033395183915E-7	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9999338525723384	WITHOUT_CLASSIFICATION	6.614742766154366E-5	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999999857077918	WITHOUT_CLASSIFICATION	1.429220825190562E-8	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999998503073154	WITHOUT_CLASSIFICATION	1.4969268456177047E-7	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9999222948344085	WITHOUT_CLASSIFICATION	7.770516559140603E-5	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999999438056526	WITHOUT_CLASSIFICATION	5.6194347535549096E-8	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999964232613555	WITHOUT_CLASSIFICATION	3.5767386445900846E-6	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999999594449226	WITHOUT_CLASSIFICATION	4.0555077358761026E-8	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999999674020228	WITHOUT_CLASSIFICATION	3.25979771807047E-8	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999981622695228	WITHOUT_CLASSIFICATION	1.8377304773067925E-6	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999999926354265	WITHOUT_CLASSIFICATION	7.3645735638205476E-9	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999960988006038	WITHOUT_CLASSIFICATION	3.90119939614027E-6	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.999999716136542	WITHOUT_CLASSIFICATION	2.838634579521471E-7	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9998830958259882	WITHOUT_CLASSIFICATION	1.1690417401179658E-4	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999993138878777	WITHOUT_CLASSIFICATION	6.861121224093422E-7	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9997621014668787	WITHOUT_CLASSIFICATION	2.378985331212876E-4	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.999999945286293	WITHOUT_CLASSIFICATION	5.471370709378663E-8	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999594376763593	WITHOUT_CLASSIFICATION	4.0562323640707044E-5	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9998211080379815	WITHOUT_CLASSIFICATION	1.788919620185326E-4	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999714633233515	WITHOUT_CLASSIFICATION	2.853667664846649E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.999998975148377	WITHOUT_CLASSIFICATION	1.024851622963378E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999978715218832	WITHOUT_CLASSIFICATION	2.1284781167171708E-6	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9999989162875407	WITHOUT_CLASSIFICATION	1.0837124592851364E-6	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999999720528174	WITHOUT_CLASSIFICATION	2.7947182554837504E-8	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9999763297951746	WITHOUT_CLASSIFICATION	2.367020482548623E-5	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9999998848752757	WITHOUT_CLASSIFICATION	1.1512472428970393E-7	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999978715218832	WITHOUT_CLASSIFICATION	2.1284781167171708E-6	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999999720528174	WITHOUT_CLASSIFICATION	2.7947182554837504E-8	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9999909930390654	WITHOUT_CLASSIFICATION	9.006960934650365E-6	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999999930970039	WITHOUT_CLASSIFICATION	6.902996022092468E-9	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9999942611123622	WITHOUT_CLASSIFICATION	5.738887637745901E-6	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999969052189084	WITHOUT_CLASSIFICATION	3.094781091674998E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.999998975148377	WITHOUT_CLASSIFICATION	1.024851622963378E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.999998975148377	WITHOUT_CLASSIFICATION	1.024851622963378E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999978715218832	WITHOUT_CLASSIFICATION	2.1284781167171708E-6	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999995493316735	WITHOUT_CLASSIFICATION	4.5066832662826357E-7	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999980898929289	WITHOUT_CLASSIFICATION	1.9101070711759834E-6	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999995750189723	WITHOUT_CLASSIFICATION	4.2498102772533327E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999995750189723	WITHOUT_CLASSIFICATION	4.2498102772533327E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999994135135744	WITHOUT_CLASSIFICATION	5.864864256133631E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999970766791934	WITHOUT_CLASSIFICATION	2.9233208065710373E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.999765303690363	WITHOUT_CLASSIFICATION	2.3469630963710985E-4	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.999765303690363	WITHOUT_CLASSIFICATION	2.3469630963710985E-4	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999989492113222	WITHOUT_CLASSIFICATION	1.050788677765584E-6	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999970766791934	WITHOUT_CLASSIFICATION	2.9233208065710373E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.999765303690363	WITHOUT_CLASSIFICATION	2.3469630963710985E-4	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999989492113222	WITHOUT_CLASSIFICATION	1.050788677765584E-6	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999995068178488	WITHOUT_CLASSIFICATION	4.931821512382449E-7	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9999999833407656	WITHOUT_CLASSIFICATION	1.6659234343344672E-8	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.999999901544843	WITHOUT_CLASSIFICATION	9.845515701988913E-8	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9998949049818202	WITHOUT_CLASSIFICATION	1.0509501817969459E-4	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999995436467486	WITHOUT_CLASSIFICATION	4.563532513413369E-7	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999999653237621	WITHOUT_CLASSIFICATION	3.467623783066365E-8	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999716863044396	WITHOUT_CLASSIFICATION	2.8313695560397485E-5	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999998709195124	WITHOUT_CLASSIFICATION	1.2908048756478617E-7	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9999885133745031	WITHOUT_CLASSIFICATION	1.1486625496920289E-5	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9999978966024734	WITHOUT_CLASSIFICATION	2.1033975266888175E-6	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999998391423568	WITHOUT_CLASSIFICATION	1.6085764322985936E-7	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999992029840388	WITHOUT_CLASSIFICATION	7.970159612876713E-7	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999999547711689	WITHOUT_CLASSIFICATION	4.522883115498588E-8	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.999999945293783	WITHOUT_CLASSIFICATION	5.470621696085202E-8	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999999995804864	WITHOUT_CLASSIFICATION	4.19513585533812E-10	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999942866771157	WITHOUT_CLASSIFICATION	5.7133228844005615E-6	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999996506323451	WITHOUT_CLASSIFICATION	3.493676549438265E-7	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999917077764903	WITHOUT_CLASSIFICATION	8.292223509759162E-6	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.999999916282528	WITHOUT_CLASSIFICATION	8.371747184644535E-8	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999985156299208	WITHOUT_CLASSIFICATION	1.4843700792433593E-6	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999809121158	WITHOUT_CLASSIFICATION	1.9087884179744674E-8	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999930033336045	WITHOUT_CLASSIFICATION	6.996666395487903E-6	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999642294738	WITHOUT_CLASSIFICATION	3.577052616249861E-8	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999195478787	WITHOUT_CLASSIFICATION	8.0452121281852E-8	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999983048256831	WITHOUT_CLASSIFICATION	1.6951743168282785E-6	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999998744692126	WITHOUT_CLASSIFICATION	1.2553078750217138E-7	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999998373740914	WITHOUT_CLASSIFICATION	1.6262590865436098E-7	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999997797119233	WITHOUT_CLASSIFICATION	2.202880766077276E-7	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999998469962218	WITHOUT_CLASSIFICATION	1.5300377819515186E-7	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.999980410017527	WITHOUT_CLASSIFICATION	1.9589982472946892E-5	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9999993718955422	WITHOUT_CLASSIFICATION	6.281044576939037E-7	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.9999998610955497	WITHOUT_CLASSIFICATION	1.3890445026004065E-7	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999997736800437	WITHOUT_CLASSIFICATION	2.2631995620392242E-7	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999997528431483	WITHOUT_CLASSIFICATION	2.4715685161545256E-7	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999999266517832	WITHOUT_CLASSIFICATION	7.334821686378275E-8	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999966013159631	WITHOUT_CLASSIFICATION	3.3986840368328594E-6	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999999681699097	WITHOUT_CLASSIFICATION	3.1830090385742804E-8	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999997833966665	WITHOUT_CLASSIFICATION	2.1660333348823235E-7	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999999762760166	WITHOUT_CLASSIFICATION	2.3723983397931967E-7	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999999762760166	WITHOUT_CLASSIFICATION	2.3723983397931967E-7	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999999762760166	WITHOUT_CLASSIFICATION	2.3723983397931967E-7	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999996788633357	WITHOUT_CLASSIFICATION	3.211366642660256E-7	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9999699998116968	WITHOUT_CLASSIFICATION	3.0000188303208113E-5	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9999979797605572	WITHOUT_CLASSIFICATION	2.0202394428273757E-6	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.999999574398789	WITHOUT_CLASSIFICATION	4.256012110160578E-7	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999679695692634	WITHOUT_CLASSIFICATION	3.2030430736614335E-5	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.999998600627402	WITHOUT_CLASSIFICATION	1.3993725980139324E-6	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999366175838	WITHOUT_CLASSIFICATION	6.338241615631414E-8	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999907197248852	WITHOUT_CLASSIFICATION	9.280275114941305E-6	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999901178449888	WITHOUT_CLASSIFICATION	9.882155011229512E-6	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.999997365638796	WITHOUT_CLASSIFICATION	2.634361204025205E-6	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9999930904624986	WITHOUT_CLASSIFICATION	6.909537501370326E-6	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999871321996504	WITHOUT_CLASSIFICATION	1.2867800349532512E-5	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999772692356357	WITHOUT_CLASSIFICATION	2.27307643642521E-5	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9999859747219949	WITHOUT_CLASSIFICATION	1.4025278005034463E-5	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9999975725392243	WITHOUT_CLASSIFICATION	2.427460775755539E-6	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999932321877892	WITHOUT_CLASSIFICATION	6.767812210777075E-6	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.999999985034116	WITHOUT_CLASSIFICATION	1.4965883979124323E-8	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999977408636115	WITHOUT_CLASSIFICATION	2.2591363886143945E-6	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.999978926641643	WITHOUT_CLASSIFICATION	2.107335835701604E-5	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9999967348929839	WITHOUT_CLASSIFICATION	3.2651070161839945E-6	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.999999654229003	WITHOUT_CLASSIFICATION	3.457709969024578E-7	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999999102344086	WITHOUT_CLASSIFICATION	8.976559135238867E-8	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.999993079349406	WITHOUT_CLASSIFICATION	6.9206505940444775E-6	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9999965107061488	WITHOUT_CLASSIFICATION	3.48929385109492E-6	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999995887351758	WITHOUT_CLASSIFICATION	4.112648241204372E-7	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999661210988348	WITHOUT_CLASSIFICATION	3.3878901165204094E-5	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999991129416684	WITHOUT_CLASSIFICATION	8.870583315351538E-7	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999997612531251	WITHOUT_CLASSIFICATION	2.387468749025473E-7	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999403138758962	WITHOUT_CLASSIFICATION	5.968612410367842E-5	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9986779392049105	WITHOUT_CLASSIFICATION	0.0013220607950894094	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999785575721932	WITHOUT_CLASSIFICATION	2.144242780672495E-5	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999115902187287	WITHOUT_CLASSIFICATION	8.840978127135165E-5	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9978145873553527	WITHOUT_CLASSIFICATION	0.00218541264464725	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9999914783949785	WITHOUT_CLASSIFICATION	8.521605021462787E-6	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9999943088234217	WITHOUT_CLASSIFICATION	5.691176578337958E-6	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999958939118022	WITHOUT_CLASSIFICATION	4.106088197826703E-6	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999999999455721	WITHOUT_CLASSIFICATION	5.442780328269397E-11	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999676216538017	WITHOUT_CLASSIFICATION	3.237834619829034E-5	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999998605184984	WITHOUT_CLASSIFICATION	1.3948150160018364E-7	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999214053202209	WITHOUT_CLASSIFICATION	7.859467977905402E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999995201416194	WITHOUT_CLASSIFICATION	4.798583805255009E-7	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999989518647552	WITHOUT_CLASSIFICATION	1.0481352448231971E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999617772640238	WITHOUT_CLASSIFICATION	3.8222735976173676E-5	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999991648674517	WITHOUT_CLASSIFICATION	8.351325483116043E-7	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999954204866747	WITHOUT_CLASSIFICATION	4.579513325312985E-6	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9999955883370281	WITHOUT_CLASSIFICATION	4.411662972010723E-6	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.999981187504286	WITHOUT_CLASSIFICATION	1.8812495713964464E-5	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9999980526861433	WITHOUT_CLASSIFICATION	1.947313856790243E-6	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.999893621172344	WITHOUT_CLASSIFICATION	1.063788276558946E-4	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999991121881151	WITHOUT_CLASSIFICATION	8.87811884849094E-7	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999999994553683	WITHOUT_CLASSIFICATION	5.446317424643325E-10	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9999981680206141	WITHOUT_CLASSIFICATION	1.8319793858849483E-6	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999972272628854	WITHOUT_CLASSIFICATION	2.7727371145541576E-6	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999976146967463	WITHOUT_CLASSIFICATION	2.3853032536451093E-6	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999993665718838	WITHOUT_CLASSIFICATION	6.334281161685606E-7	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999995385005067	WITHOUT_CLASSIFICATION	4.6149949333139477E-7	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999960010876617	WITHOUT_CLASSIFICATION	3.998912338286516E-6	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999909889938069	WITHOUT_CLASSIFICATION	9.01100619317506E-6	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999994316389708	WITHOUT_CLASSIFICATION	5.683610293150929E-7	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999943496231295	WITHOUT_CLASSIFICATION	5.650376870458245E-6	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999992040478646	WITHOUT_CLASSIFICATION	7.959521354400772E-7	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9999993036797546	WITHOUT_CLASSIFICATION	6.963202453396682E-7	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9999943268061097	WITHOUT_CLASSIFICATION	5.673193890266615E-6	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.999903066856879	WITHOUT_CLASSIFICATION	9.693314312103002E-5	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9999658694552421	WITHOUT_CLASSIFICATION	3.4130544757850103E-5	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999979377459992	WITHOUT_CLASSIFICATION	2.06225400072937E-6	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999715226402384	WITHOUT_CLASSIFICATION	2.8477359761627493E-5	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999954106492027	WITHOUT_CLASSIFICATION	4.589350797178768E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999954106492027	WITHOUT_CLASSIFICATION	4.589350797178768E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999838297003107	WITHOUT_CLASSIFICATION	1.617029968933605E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999838297003107	WITHOUT_CLASSIFICATION	1.617029968933605E-5	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999979377459992	WITHOUT_CLASSIFICATION	2.06225400072937E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999838297003107	WITHOUT_CLASSIFICATION	1.617029968933605E-5	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999998794691162	WITHOUT_CLASSIFICATION	1.205308837787499E-7	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999994677028812	WITHOUT_CLASSIFICATION	5.322971187570845E-7	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999994677028812	WITHOUT_CLASSIFICATION	5.322971187570845E-7	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999999012893217	WITHOUT_CLASSIFICATION	9.871067826889527E-8	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999986954748159	WITHOUT_CLASSIFICATION	1.3045251840413609E-6	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9997859713670996	WITHOUT_CLASSIFICATION	2.140286329003524E-4	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9999854468941471	WITHOUT_CLASSIFICATION	1.4553105852865096E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9999910615255975	WITHOUT_CLASSIFICATION	8.938474402546358E-6	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999996149841486	WITHOUT_CLASSIFICATION	3.850158513834593E-7	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999846671018467	WITHOUT_CLASSIFICATION	1.533289815328377E-5	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9999556610253963	WITHOUT_CLASSIFICATION	4.433897460370013E-5	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9999651989465757	WITHOUT_CLASSIFICATION	3.480105342426271E-5	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999997991984102	WITHOUT_CLASSIFICATION	2.0080158978491363E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999999651513423	WITHOUT_CLASSIFICATION	3.4848657713058146E-8	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999999995794552	WITHOUT_CLASSIFICATION	4.2054480223725483E-10	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999996111944902	WITHOUT_CLASSIFICATION	3.888055098556777E-7	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999992546899865	WITHOUT_CLASSIFICATION	7.453100135610743E-7	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999977662810441	WITHOUT_CLASSIFICATION	2.233718955855229E-6	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.9999999227109082	WITHOUT_CLASSIFICATION	7.728909179679137E-8	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999874578263206	WITHOUT_CLASSIFICATION	1.2542173679295783E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9658308494615654	WITHOUT_CLASSIFICATION	0.03416915053843465	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9937704593859286	WITHOUT_CLASSIFICATION	0.006229540614071403	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999974248444301	WITHOUT_CLASSIFICATION	2.575155569860185E-6	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999999618499149	WITHOUT_CLASSIFICATION	3.815008508103707E-8	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9999954106615222	WITHOUT_CLASSIFICATION	4.589338477859027E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999998921160914	WITHOUT_CLASSIFICATION	1.0788390858984402E-7	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999980653151801	WITHOUT_CLASSIFICATION	1.9346848199519193E-6	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999980653151801	WITHOUT_CLASSIFICATION	1.9346848199519193E-6	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999773761267908	WITHOUT_CLASSIFICATION	2.262387320911214E-5	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9999842411204642	WITHOUT_CLASSIFICATION	1.575887953576434E-5	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.999905433443332	WITHOUT_CLASSIFICATION	9.456655666790237E-5	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.999982056159984	WITHOUT_CLASSIFICATION	1.7943840016045662E-5	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999996949026296	WITHOUT_CLASSIFICATION	3.0509737028946667E-7	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999999648370077	WITHOUT_CLASSIFICATION	3.5162992348472543E-8	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999994692327496	WITHOUT_CLASSIFICATION	5.307672503677546E-7	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9996823630605343	WITHOUT_CLASSIFICATION	3.176369394656976E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999350470825842	WITHOUT_CLASSIFICATION	6.495291741586768E-5	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999983460555555	WITHOUT_CLASSIFICATION	1.6539444445577157E-6	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999999921778955	WITHOUT_CLASSIFICATION	7.822104514077323E-9	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9995731455068496	WITHOUT_CLASSIFICATION	4.2685449315038517E-4	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999996558406005	WITHOUT_CLASSIFICATION	3.44159399478796E-7	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9999139799577954	WITHOUT_CLASSIFICATION	8.602004220456861E-5	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999999441637011	WITHOUT_CLASSIFICATION	5.583629894236365E-8	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999938857821636	WITHOUT_CLASSIFICATION	6.114217836379379E-6	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.999998408940501	WITHOUT_CLASSIFICATION	1.5910594990815217E-6	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999995768516382	WITHOUT_CLASSIFICATION	4.231483618997764E-7	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999866041767502	WITHOUT_CLASSIFICATION	1.339582324982552E-5	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999998406912424	WITHOUT_CLASSIFICATION	1.5930875753988205E-7	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999998465184328	WITHOUT_CLASSIFICATION	1.5348156720313254E-7	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9998469404023163	WITHOUT_CLASSIFICATION	1.5305959768377304E-4	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9999968551444283	WITHOUT_CLASSIFICATION	3.1448555717799564E-6	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9999988404023685	WITHOUT_CLASSIFICATION	1.1595976315135905E-6	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.999997296850966	WITHOUT_CLASSIFICATION	2.7031490338593788E-6	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.999994698140367	WITHOUT_CLASSIFICATION	5.301859632945146E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999999954136154	WITHOUT_CLASSIFICATION	4.586384627722444E-9	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999992604642235	WITHOUT_CLASSIFICATION	7.395357765007225E-7	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999159317599	WITHOUT_CLASSIFICATION	8.406824024414731E-8	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999996271795413	WITHOUT_CLASSIFICATION	3.728204587939322E-7	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999996727362593	WITHOUT_CLASSIFICATION	3.272637406203905E-7	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999999990952144	WITHOUT_CLASSIFICATION	9.047855518561763E-10	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999997867382101	WITHOUT_CLASSIFICATION	2.1326178983882684E-7	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.999999547270148	WITHOUT_CLASSIFICATION	4.5272985207995244E-7	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9999957672756836	WITHOUT_CLASSIFICATION	4.2327243163961605E-6	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999993969198208	WITHOUT_CLASSIFICATION	6.030801793272973E-7	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999999917989707	WITHOUT_CLASSIFICATION	8.201029311161263E-9	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999977948337381	WITHOUT_CLASSIFICATION	2.205166262050159E-6	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9999431103260792	WITHOUT_CLASSIFICATION	5.688967392079554E-5	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9998997941673359	WITHOUT_CLASSIFICATION	1.0020583266415469E-4	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999999691008031	WITHOUT_CLASSIFICATION	3.089919689807346E-8	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999999990699419	WITHOUT_CLASSIFICATION	9.300581057527983E-10	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999996790747034	WITHOUT_CLASSIFICATION	3.2092529658135305E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.999998911706383	WITHOUT_CLASSIFICATION	1.0882936170074141E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9999964894580274	WITHOUT_CLASSIFICATION	3.510541972586262E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9999350470825842	WITHOUT_CLASSIFICATION	6.495291741586768E-5	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999983460555555	WITHOUT_CLASSIFICATION	1.6539444445577157E-6	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999999921778955	WITHOUT_CLASSIFICATION	7.822104514077323E-9	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999998572377765	WITHOUT_CLASSIFICATION	1.427622234889924E-7	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9999999028868779	WITHOUT_CLASSIFICATION	9.71131220492688E-8	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.999992940914486	WITHOUT_CLASSIFICATION	7.059085514059599E-6	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999993961843967	WITHOUT_CLASSIFICATION	6.038156033223123E-7	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999984866599191	WITHOUT_CLASSIFICATION	1.5133400808545816E-6	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9999995725982428	WITHOUT_CLASSIFICATION	4.274017572225025E-7	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999997503537331	WITHOUT_CLASSIFICATION	2.496462669306538E-7	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999998496601169	WITHOUT_CLASSIFICATION	1.503398831257283E-7	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999999838821402	WITHOUT_CLASSIFICATION	1.6117859770665966E-8	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999959881084144	WITHOUT_CLASSIFICATION	4.0118915855955674E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999985119631793	WITHOUT_CLASSIFICATION	1.4880368207262038E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999985119631793	WITHOUT_CLASSIFICATION	1.4880368207262038E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999995575687382	WITHOUT_CLASSIFICATION	4.424312617827711E-7	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999959204886377	WITHOUT_CLASSIFICATION	4.0795113622369964E-6	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999806337107	WITHOUT_CLASSIFICATION	1.9366289320584145E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999996489711339	WITHOUT_CLASSIFICATION	3.510288660896731E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999999931213832	WITHOUT_CLASSIFICATION	6.878616770079142E-9	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999637340883	WITHOUT_CLASSIFICATION	3.626591169618493E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999985158120575	WITHOUT_CLASSIFICATION	1.4841879425519328E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999999421350974	WITHOUT_CLASSIFICATION	5.786490267941438E-8	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999958332255166	WITHOUT_CLASSIFICATION	4.166774483402142E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.999999999815444	WITHOUT_CLASSIFICATION	1.8455598742156978E-10	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998685333444	WITHOUT_CLASSIFICATION	1.3146665549683976E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999997131804738	WITHOUT_CLASSIFICATION	2.868195262510188E-7	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999786229905	WITHOUT_CLASSIFICATION	2.137700953987042E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999595597635258	WITHOUT_CLASSIFICATION	4.0440236474272177E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.999999905774487	WITHOUT_CLASSIFICATION	9.422551294537074E-8	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999966418569908	WITHOUT_CLASSIFICATION	3.3581430091994544E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999999204088337	WITHOUT_CLASSIFICATION	7.959116635375272E-8	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.999924513824298	WITHOUT_CLASSIFICATION	7.548617570197283E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999996980522359	WITHOUT_CLASSIFICATION	3.0194776406158603E-7	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.999999889896582	WITHOUT_CLASSIFICATION	1.1010341813547123E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.999999739058437	WITHOUT_CLASSIFICATION	2.6094156301206097E-7	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999991677890269	WITHOUT_CLASSIFICATION	8.322109730169413E-7	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999992641485071	WITHOUT_CLASSIFICATION	7.358514929250852E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9999907763194872	WITHOUT_CLASSIFICATION	9.223680512859008E-6	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999998943458548	WITHOUT_CLASSIFICATION	1.0565414522298024E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999815329219356	WITHOUT_CLASSIFICATION	1.846707806430806E-5	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999993907694134	WITHOUT_CLASSIFICATION	6.092305865106544E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999993237647149	WITHOUT_CLASSIFICATION	6.762352850919413E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999954044474639	WITHOUT_CLASSIFICATION	4.595552536121142E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999987753788638	WITHOUT_CLASSIFICATION	1.2246211361770181E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999998501648608	WITHOUT_CLASSIFICATION	1.4983513921653057E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999994912957245	WITHOUT_CLASSIFICATION	5.087042755744384E-7	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999972249319258	WITHOUT_CLASSIFICATION	2.7750680742090104E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998357537214	WITHOUT_CLASSIFICATION	1.6424627857641897E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.999999602468008	WITHOUT_CLASSIFICATION	3.975319920629997E-7	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9998789142378022	WITHOUT_CLASSIFICATION	1.2108576219792515E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999847005564427	WITHOUT_CLASSIFICATION	1.529944355726103E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999999384944567	WITHOUT_CLASSIFICATION	6.150554338026118E-8	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.999999985362582	WITHOUT_CLASSIFICATION	1.4637418077409105E-8	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999845304994536	WITHOUT_CLASSIFICATION	1.5469500546339312E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999951859940803	WITHOUT_CLASSIFICATION	4.81400591971757E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999970809699414	WITHOUT_CLASSIFICATION	2.919030058564735E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999921653538472	WITHOUT_CLASSIFICATION	7.834646152752751E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999812876975157	WITHOUT_CLASSIFICATION	1.8712302484310894E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999981501031566	WITHOUT_CLASSIFICATION	1.8498968433323143E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.999981633793605	WITHOUT_CLASSIFICATION	1.8366206394990007E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999995575687382	WITHOUT_CLASSIFICATION	4.424312617827711E-7	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999959204886377	WITHOUT_CLASSIFICATION	4.0795113622369964E-6	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999806337107	WITHOUT_CLASSIFICATION	1.9366289320584145E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999996489711339	WITHOUT_CLASSIFICATION	3.510288660896731E-7	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999985158120575	WITHOUT_CLASSIFICATION	1.4841879425519328E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999999421350974	WITHOUT_CLASSIFICATION	5.786490267941438E-8	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9999780753951247	WITHOUT_CLASSIFICATION	2.1924604875261284E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999983878255334	WITHOUT_CLASSIFICATION	1.612174466628912E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999998758993718	WITHOUT_CLASSIFICATION	1.241006281593033E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998685333444	WITHOUT_CLASSIFICATION	1.3146665549683976E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999997131804738	WITHOUT_CLASSIFICATION	2.868195262510188E-7	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999786229905	WITHOUT_CLASSIFICATION	2.137700953987042E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999595597635258	WITHOUT_CLASSIFICATION	4.0440236474272177E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999966418569908	WITHOUT_CLASSIFICATION	3.3581430091994544E-6	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999984988461237	WITHOUT_CLASSIFICATION	1.5011538763119954E-6	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999976166869874	WITHOUT_CLASSIFICATION	2.3833130126169257E-6	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999999714988262	WITHOUT_CLASSIFICATION	2.8501173795733635E-8	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9999742493588114	WITHOUT_CLASSIFICATION	2.575064118860042E-5	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999926947498082	WITHOUT_CLASSIFICATION	7.305250191800038E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999999745871542	WITHOUT_CLASSIFICATION	2.541284592867232E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.99999891980983	WITHOUT_CLASSIFICATION	1.0801901698825197E-6	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999996945053153	WITHOUT_CLASSIFICATION	3.054946846359604E-7	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999993975422564	WITHOUT_CLASSIFICATION	6.024577436423666E-7	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999941643248895	WITHOUT_CLASSIFICATION	5.8356751103950795E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999993975422564	WITHOUT_CLASSIFICATION	6.024577436423666E-7	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9999997719007195	WITHOUT_CLASSIFICATION	2.2809928048145296E-7	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999981745451995	WITHOUT_CLASSIFICATION	1.8254548005431305E-6	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999995705842968	WITHOUT_CLASSIFICATION	4.294157032435966E-7	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999995705842968	WITHOUT_CLASSIFICATION	4.294157032435966E-7	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999968086474958	WITHOUT_CLASSIFICATION	3.1913525041771355E-6	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999994844296031	WITHOUT_CLASSIFICATION	5.155703969757112E-7	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999922341788879	WITHOUT_CLASSIFICATION	7.76582111206593E-6	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999497053835082	WITHOUT_CLASSIFICATION	5.029461649184751E-5	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9999711947147889	WITHOUT_CLASSIFICATION	2.8805285211128037E-5	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.999999863704901	WITHOUT_CLASSIFICATION	1.3629509907141507E-7	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9999972792487126	WITHOUT_CLASSIFICATION	2.720751287511152E-6	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999999955231533	WITHOUT_CLASSIFICATION	4.476846691383608E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9999987669032759	WITHOUT_CLASSIFICATION	1.233096724028211E-6	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999999267317387	WITHOUT_CLASSIFICATION	7.326826127869779E-8	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999964012889941	WITHOUT_CLASSIFICATION	3.598711005795877E-6	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999998923979503	WITHOUT_CLASSIFICATION	1.0760204963800126E-7	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999981476877797	WITHOUT_CLASSIFICATION	1.852312220289649E-6	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999981476877797	WITHOUT_CLASSIFICATION	1.852312220289649E-6	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999999270626131	WITHOUT_CLASSIFICATION	7.293738690260197E-8	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999999679386895	WITHOUT_CLASSIFICATION	3.206131053177184E-8	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9999887986928663	WITHOUT_CLASSIFICATION	1.1201307133770095E-5	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9999697483446042	WITHOUT_CLASSIFICATION	3.025165539581988E-5	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9999793805082445	WITHOUT_CLASSIFICATION	2.0619491755479446E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999977478463454	WITHOUT_CLASSIFICATION	2.2521536545306823E-6	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999996465490917	WITHOUT_CLASSIFICATION	3.534509083790077E-7	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.999999981429393	WITHOUT_CLASSIFICATION	1.8570607069221946E-8	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999998411359556	WITHOUT_CLASSIFICATION	1.5886404432619862E-7	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999995706179822	WITHOUT_CLASSIFICATION	4.293820178280237E-7	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999999685627647	WITHOUT_CLASSIFICATION	3.143723531666473E-8	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999958591756407	WITHOUT_CLASSIFICATION	4.140824359312694E-6	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999839054647088	WITHOUT_CLASSIFICATION	1.609453529121307E-5	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9999259935740271	WITHOUT_CLASSIFICATION	7.40064259728578E-5	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.999982056159984	WITHOUT_CLASSIFICATION	1.7943840016045662E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999973641257239	WITHOUT_CLASSIFICATION	2.6358742759721884E-6	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999999917415276	WITHOUT_CLASSIFICATION	8.258472268500809E-9	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999990683622478	WITHOUT_CLASSIFICATION	9.316377521781585E-7	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999995686198603	WITHOUT_CLASSIFICATION	4.313801396325063E-7	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9996942345929689	WITHOUT_CLASSIFICATION	3.0576540703099425E-4	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999997795258776	WITHOUT_CLASSIFICATION	2.204741225335994E-7	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.999987668274253	WITHOUT_CLASSIFICATION	1.2331725747087114E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999992551539881	WITHOUT_CLASSIFICATION	7.448460119345556E-7	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999989432832326	WITHOUT_CLASSIFICATION	1.0567167674905502E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999989452009774	WITHOUT_CLASSIFICATION	1.0547990225682324E-6	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999996447860044	WITHOUT_CLASSIFICATION	3.5521399548181145E-7	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999996447860044	WITHOUT_CLASSIFICATION	3.5521399548181145E-7	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9967664183312351	WITHOUT_CLASSIFICATION	0.003233581668764841	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999937491629821	WITHOUT_CLASSIFICATION	6.250837017894751E-6	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999998941600479	WITHOUT_CLASSIFICATION	1.0583995218542747E-7	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999934962682439	WITHOUT_CLASSIFICATION	6.50373175620945E-6	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9998535311593568	WITHOUT_CLASSIFICATION	1.4646884064327566E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999893484089704	WITHOUT_CLASSIFICATION	1.0651591029566791E-5	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999989359410584	WITHOUT_CLASSIFICATION	1.0640589416263213E-6	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.999989364487819	WITHOUT_CLASSIFICATION	1.0635512180959961E-5	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999959816436754	WITHOUT_CLASSIFICATION	4.01835632458091E-6	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999142348246544	WITHOUT_CLASSIFICATION	8.57651753455813E-5	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999915894262648	WITHOUT_CLASSIFICATION	8.410573735199692E-6	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999998100895295	WITHOUT_CLASSIFICATION	1.8991047049735948E-7	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999981996151209	WITHOUT_CLASSIFICATION	1.8003848790747856E-6	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999337192117457	WITHOUT_CLASSIFICATION	6.628078825423983E-5	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999999732083534	WITHOUT_CLASSIFICATION	2.679164651501717E-8	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999995895602086	WITHOUT_CLASSIFICATION	4.1043979135220953E-7	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999999833669785	WITHOUT_CLASSIFICATION	1.6633021560486682E-8	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9999995698458142	WITHOUT_CLASSIFICATION	4.3015418590486763E-7	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9995933744722624	WITHOUT_CLASSIFICATION	4.066255277375737E-4	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999953286691309	WITHOUT_CLASSIFICATION	4.6713308691503176E-6	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999994190413346	WITHOUT_CLASSIFICATION	5.809586654628874E-7	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999996220983166	WITHOUT_CLASSIFICATION	3.7790168336599323E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999815329219356	WITHOUT_CLASSIFICATION	1.846707806430806E-5	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.999999372149701	WITHOUT_CLASSIFICATION	6.27850298965574E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999970809699414	WITHOUT_CLASSIFICATION	2.919030058564735E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999999745871542	WITHOUT_CLASSIFICATION	2.541284592867232E-8	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9999995242630545	WITHOUT_CLASSIFICATION	4.757369454999287E-7	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999986596614278	WITHOUT_CLASSIFICATION	1.3403385722392127E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999991677890269	WITHOUT_CLASSIFICATION	8.322109730169413E-7	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999984382440467	WITHOUT_CLASSIFICATION	1.5617559533604407E-6	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9999978694590819	WITHOUT_CLASSIFICATION	2.1305409180935376E-6	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.999998971586767	WITHOUT_CLASSIFICATION	1.0284132330927488E-6	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999716194879575	WITHOUT_CLASSIFICATION	2.838051204256192E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999970809699414	WITHOUT_CLASSIFICATION	2.919030058564735E-6	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999696528890747	WITHOUT_CLASSIFICATION	3.0347110925376617E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999186674262962	WITHOUT_CLASSIFICATION	8.133257370380538E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9998803034511068	WITHOUT_CLASSIFICATION	1.1969654889316944E-4	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999996847218653	WITHOUT_CLASSIFICATION	3.152781346716582E-7	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999854656379255	WITHOUT_CLASSIFICATION	1.4534362074634049E-5	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9999984639146252	WITHOUT_CLASSIFICATION	1.5360853748499642E-6	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.999999930193011	WITHOUT_CLASSIFICATION	6.980698898115758E-8	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999991574906474	WITHOUT_CLASSIFICATION	8.425093525601404E-7	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.999998975148377	WITHOUT_CLASSIFICATION	1.024851622963378E-6	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9966035451308036	WITHOUT_CLASSIFICATION	0.0033964548691963192	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999994135135744	WITHOUT_CLASSIFICATION	5.864864256133631E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999994135135744	WITHOUT_CLASSIFICATION	5.864864256133631E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999994135135744	WITHOUT_CLASSIFICATION	5.864864256133631E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.999765303690363	WITHOUT_CLASSIFICATION	2.3469630963710985E-4	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9997834384162093	WITHOUT_CLASSIFICATION	2.1656158379059862E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999463075112904	WITHOUT_CLASSIFICATION	5.3692488709567233E-5	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999947182084074	WITHOUT_CLASSIFICATION	5.2817915927103E-6	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999998709195124	WITHOUT_CLASSIFICATION	1.2908048756478617E-7	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999969835864936	WITHOUT_CLASSIFICATION	3.016413506367712E-6	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.999999110219709	WITHOUT_CLASSIFICATION	8.89780290870037E-7	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9994182344810278	WITHOUT_CLASSIFICATION	5.817655189721709E-4	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999359076598866	WITHOUT_CLASSIFICATION	6.409234011338255E-5	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.999999469112999	WITHOUT_CLASSIFICATION	5.308870010016259E-7	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.999999999750094	WITHOUT_CLASSIFICATION	2.499060846778912E-10	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999387434421	WITHOUT_CLASSIFICATION	6.125655791186429E-8	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999170997725184	WITHOUT_CLASSIFICATION	8.29002274816658E-5	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999973120739369	WITHOUT_CLASSIFICATION	2.6879260630704536E-6	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9998900317411271	WITHOUT_CLASSIFICATION	1.0996825887295447E-4	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999999335711843	WITHOUT_CLASSIFICATION	6.642881559325287E-8	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999954488761317	WITHOUT_CLASSIFICATION	4.551123868366033E-6	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999976308558791	WITHOUT_CLASSIFICATION	2.3691441209190907E-6	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999099670748	WITHOUT_CLASSIFICATION	9.003292518694557E-8	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999990182461975	WITHOUT_CLASSIFICATION	9.817538025570533E-7	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999999993168682	WITHOUT_CLASSIFICATION	6.831317883825802E-10	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.999999762760166	WITHOUT_CLASSIFICATION	2.3723983397931967E-7	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.999996182293296	WITHOUT_CLASSIFICATION	3.817706703934226E-6	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999444415594	WITHOUT_CLASSIFICATION	5.555844064139196E-8	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999061517332	WITHOUT_CLASSIFICATION	9.38482668113248E-8	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999984752414479	WITHOUT_CLASSIFICATION	1.5247585520015092E-6	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999996493346277	WITHOUT_CLASSIFICATION	3.5066537222874146E-7	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999998977791567	WITHOUT_CLASSIFICATION	1.022208434005081E-7	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999945644686431	WITHOUT_CLASSIFICATION	5.435531356886646E-6	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999998872211836	WITHOUT_CLASSIFICATION	1.1277881640461315E-7	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999999533330272	WITHOUT_CLASSIFICATION	4.666697290290303E-8	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999990010863372	WITHOUT_CLASSIFICATION	9.989136627686778E-7	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999998954327206	WITHOUT_CLASSIFICATION	1.045672794893097E-7	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9999998821932365	WITHOUT_CLASSIFICATION	1.1780676340886874E-7	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9999999793130883	WITHOUT_CLASSIFICATION	2.0686911718199676E-8	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.9999992513250936	WITHOUT_CLASSIFICATION	7.486749063567275E-7	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9999832843252623	WITHOUT_CLASSIFICATION	1.6715674737754363E-5	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9999280789531192	WITHOUT_CLASSIFICATION	7.192104688079768E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999838297003107	WITHOUT_CLASSIFICATION	1.617029968933605E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999838297003107	WITHOUT_CLASSIFICATION	1.617029968933605E-5	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999996111944902	WITHOUT_CLASSIFICATION	3.888055098556777E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999996111944902	WITHOUT_CLASSIFICATION	3.888055098556777E-7	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999886771477714	WITHOUT_CLASSIFICATION	1.1322852228566105E-5	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999646314149095	WITHOUT_CLASSIFICATION	3.5368585090565696E-5	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999989919425517	WITHOUT_CLASSIFICATION	1.0080574483111003E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999999366832224	WITHOUT_CLASSIFICATION	6.331677753720776E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999999366832224	WITHOUT_CLASSIFICATION	6.331677753720776E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999999366832224	WITHOUT_CLASSIFICATION	6.331677753720776E-8	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999998531060679	WITHOUT_CLASSIFICATION	1.468939321833228E-7	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.999991861629754	WITHOUT_CLASSIFICATION	8.138370246096149E-6	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9995731455068496	WITHOUT_CLASSIFICATION	4.2685449315038517E-4	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999992635544009	WITHOUT_CLASSIFICATION	7.364455990636198E-7	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999983132769098	WITHOUT_CLASSIFICATION	1.6867230901769104E-6	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.999994475081317	WITHOUT_CLASSIFICATION	5.524918682966792E-6	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999998129645529	WITHOUT_CLASSIFICATION	1.870354470510948E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999998059046331	WITHOUT_CLASSIFICATION	1.9409536686101616E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999998059046331	WITHOUT_CLASSIFICATION	1.9409536686101616E-7	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.999999993493567	WITHOUT_CLASSIFICATION	6.506432984898778E-9	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999999180595879	WITHOUT_CLASSIFICATION	8.194041217569524E-8	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9999982812098817	WITHOUT_CLASSIFICATION	1.718790118277164E-6	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9999999439092873	WITHOUT_CLASSIFICATION	5.6090712681563986E-8	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999995062712373	WITHOUT_CLASSIFICATION	4.937287626100981E-7	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999983964050405	WITHOUT_CLASSIFICATION	1.6035949594779231E-6	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9999991444462453	WITHOUT_CLASSIFICATION	8.555537547448138E-7	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999985119631793	WITHOUT_CLASSIFICATION	1.4880368207262038E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999999931213832	WITHOUT_CLASSIFICATION	6.878616770079142E-9	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999637340883	WITHOUT_CLASSIFICATION	3.626591169618493E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.999999999815444	WITHOUT_CLASSIFICATION	1.8455598742156978E-10	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.999999905774487	WITHOUT_CLASSIFICATION	9.422551294537074E-8	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999996791143213	WITHOUT_CLASSIFICATION	3.208856787568171E-7	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999999995331713	WITHOUT_CLASSIFICATION	4.668286857650895E-10	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999998001376592	WITHOUT_CLASSIFICATION	1.9986234089804192E-7	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.99999891980983	WITHOUT_CLASSIFICATION	1.0801901698825197E-6	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9999552273860605	WITHOUT_CLASSIFICATION	4.4772613939490925E-5	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9999958240928203	WITHOUT_CLASSIFICATION	4.175907179716583E-6	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999999270626131	WITHOUT_CLASSIFICATION	7.293738690260197E-8	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999996044371786	WITHOUT_CLASSIFICATION	3.955628213971309E-7	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9998372165023439	WITHOUT_CLASSIFICATION	1.6278349765618439E-4	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999999948295828	WITHOUT_CLASSIFICATION	5.170417261944957E-9	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999999799286382	WITHOUT_CLASSIFICATION	2.007136178336035E-8	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9986740529749949	WITHOUT_CLASSIFICATION	0.0013259470250050866	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.999999853551881	WITHOUT_CLASSIFICATION	1.4644811897613558E-7	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999998655407026	WITHOUT_CLASSIFICATION	1.3445929743207753E-7	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9999941466964253	WITHOUT_CLASSIFICATION	5.853303574673004E-6	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999999859859033	WITHOUT_CLASSIFICATION	1.401409658765346E-8	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999030182318	WITHOUT_CLASSIFICATION	9.69817681068052E-8	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999030182318	WITHOUT_CLASSIFICATION	9.69817681068052E-8	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9999999300908704	WITHOUT_CLASSIFICATION	6.990912962274988E-8	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.99999987452851	WITHOUT_CLASSIFICATION	1.2547148999754713E-7	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999998970881925	WITHOUT_CLASSIFICATION	1.0291180753332281E-7	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999979192519798	WITHOUT_CLASSIFICATION	2.080748020127381E-6	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999979192519798	WITHOUT_CLASSIFICATION	2.080748020127381E-6	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999997555836099	WITHOUT_CLASSIFICATION	2.4441639013020653E-7	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.9999502761229535	WITHOUT_CLASSIFICATION	4.972387704636958E-5	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999986192371623	WITHOUT_CLASSIFICATION	1.3807628377797228E-6	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999999574927093	WITHOUT_CLASSIFICATION	4.250729067263073E-8	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999778407283257	WITHOUT_CLASSIFICATION	2.2159271674265586E-5	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999998650125465	WITHOUT_CLASSIFICATION	1.3498745367045378E-7	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.999999561125531	WITHOUT_CLASSIFICATION	4.3887446902835535E-7	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999857930791409	WITHOUT_CLASSIFICATION	1.4206920858988215E-5	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9999999583920458	WITHOUT_CLASSIFICATION	4.1607954108462234E-8	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9999986544549279	WITHOUT_CLASSIFICATION	1.3455450722493389E-6	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999990302546	WITHOUT_CLASSIFICATION	9.69745428119247E-10	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999969868030426	WITHOUT_CLASSIFICATION	3.0131969573481997E-6	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999941596352074	WITHOUT_CLASSIFICATION	5.840364792540216E-6	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999867911128	WITHOUT_CLASSIFICATION	1.3208887151275928E-8	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999916082610384	WITHOUT_CLASSIFICATION	8.391738961588462E-6	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999996044713284	WITHOUT_CLASSIFICATION	3.955286716578756E-7	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999925982946675	WITHOUT_CLASSIFICATION	7.4017053324502675E-6	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999880327907	WITHOUT_CLASSIFICATION	1.1967209298076578E-8	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999959130322602	WITHOUT_CLASSIFICATION	4.086967739844376E-6	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999998461022241	WITHOUT_CLASSIFICATION	1.5389777578105329E-7	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999969642850748	WITHOUT_CLASSIFICATION	3.035714925247874E-6	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.999994475512181	WITHOUT_CLASSIFICATION	5.524487818948577E-6	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9999973854513852	WITHOUT_CLASSIFICATION	2.614548614818302E-6	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9999884309486552	WITHOUT_CLASSIFICATION	1.1569051344791104E-5	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999981777703237	WITHOUT_CLASSIFICATION	1.8222296763493759E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999981777703237	WITHOUT_CLASSIFICATION	1.8222296763493759E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999981777703237	WITHOUT_CLASSIFICATION	1.8222296763493759E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999981777703237	WITHOUT_CLASSIFICATION	1.8222296763493759E-6	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999999950980175	WITHOUT_CLASSIFICATION	4.901982531635892E-9	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999982670639133	WITHOUT_CLASSIFICATION	1.7329360867029412E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999916224287166	WITHOUT_CLASSIFICATION	8.377571283404839E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999916224287166	WITHOUT_CLASSIFICATION	8.377571283404839E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999916224287166	WITHOUT_CLASSIFICATION	8.377571283404839E-6	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999999759987062	WITHOUT_CLASSIFICATION	2.400129378135412E-8	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999919552366362	WITHOUT_CLASSIFICATION	8.044763363894763E-6	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999975515388914	WITHOUT_CLASSIFICATION	2.448461108554965E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999966347135224	WITHOUT_CLASSIFICATION	3.365286477670015E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999966347135224	WITHOUT_CLASSIFICATION	3.365286477670015E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999842718407913	WITHOUT_CLASSIFICATION	1.572815920863522E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999842718407913	WITHOUT_CLASSIFICATION	1.572815920863522E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999842718407913	WITHOUT_CLASSIFICATION	1.572815920863522E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999842718407913	WITHOUT_CLASSIFICATION	1.572815920863522E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999842718407913	WITHOUT_CLASSIFICATION	1.572815920863522E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999842718407913	WITHOUT_CLASSIFICATION	1.572815920863522E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999842718407913	WITHOUT_CLASSIFICATION	1.572815920863522E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999842718407913	WITHOUT_CLASSIFICATION	1.572815920863522E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999842718407913	WITHOUT_CLASSIFICATION	1.572815920863522E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999842718407913	WITHOUT_CLASSIFICATION	1.572815920863522E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999842718407913	WITHOUT_CLASSIFICATION	1.572815920863522E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999842718407913	WITHOUT_CLASSIFICATION	1.572815920863522E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999842718407913	WITHOUT_CLASSIFICATION	1.572815920863522E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999995686198603	WITHOUT_CLASSIFICATION	4.313801396325063E-7	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999995686198603	WITHOUT_CLASSIFICATION	4.313801396325063E-7	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9975522774569062	WITHOUT_CLASSIFICATION	0.00244772254309382	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9975522774569062	WITHOUT_CLASSIFICATION	0.00244772254309382	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999261403831089	WITHOUT_CLASSIFICATION	7.385961689110982E-5	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999994757878135	WITHOUT_CLASSIFICATION	5.242121866225342E-7	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999953394393964	WITHOUT_CLASSIFICATION	4.660560603573617E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.999993505752956	WITHOUT_CLASSIFICATION	6.494247044052889E-6	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9999966044197035	WITHOUT_CLASSIFICATION	3.395580296519674E-6	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.99999968839817	WITHOUT_CLASSIFICATION	3.116018300307485E-7	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999528187752376	WITHOUT_CLASSIFICATION	4.7181224762354766E-5	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999997791045757	WITHOUT_CLASSIFICATION	2.208954243827075E-7	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999997326956629	WITHOUT_CLASSIFICATION	2.673043370896931E-7	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999966508666556	WITHOUT_CLASSIFICATION	3.3491333444959938E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999985705547539	WITHOUT_CLASSIFICATION	1.429445246107465E-6	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999615496460285	WITHOUT_CLASSIFICATION	3.845035397151642E-5	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999997799397979	WITHOUT_CLASSIFICATION	2.2006020197703002E-7	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999887544435379	WITHOUT_CLASSIFICATION	1.1245556462120828E-5	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999983427039527	WITHOUT_CLASSIFICATION	1.6572960472178232E-6	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9999817779346024	WITHOUT_CLASSIFICATION	1.82220653975134E-5	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999980074259747	WITHOUT_CLASSIFICATION	1.992574025314745E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999928288360064	WITHOUT_CLASSIFICATION	7.1711639935339266E-6	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999977473508123	WITHOUT_CLASSIFICATION	2.2526491876766934E-6	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999996498142104	WITHOUT_CLASSIFICATION	3.501857895414794E-7	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999847876685305	WITHOUT_CLASSIFICATION	1.5212331469381248E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999847876685305	WITHOUT_CLASSIFICATION	1.5212331469381248E-5	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999984041934122	WITHOUT_CLASSIFICATION	1.5958065877532966E-6	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9999715366766866	WITHOUT_CLASSIFICATION	2.8463323313349338E-5	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9997690850886427	WITHOUT_CLASSIFICATION	2.3091491135735133E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9996734666362656	WITHOUT_CLASSIFICATION	3.26533363734487E-4	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9997365294375997	WITHOUT_CLASSIFICATION	2.6347056240030056E-4	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9997181672129684	WITHOUT_CLASSIFICATION	2.8183278703170167E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9997609730317694	WITHOUT_CLASSIFICATION	2.3902696823073624E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9997247478392541	WITHOUT_CLASSIFICATION	2.752521607458903E-4	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9997496111075195	WITHOUT_CLASSIFICATION	2.5038889248054773E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.99969618079015	WITHOUT_CLASSIFICATION	3.0381920985004537E-4	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9997649846135107	WITHOUT_CLASSIFICATION	2.3501538648919616E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9998017104979562	WITHOUT_CLASSIFICATION	1.9828950204386274E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9996594465340539	WITHOUT_CLASSIFICATION	3.4055346594602146E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9996436618411816	WITHOUT_CLASSIFICATION	3.5633815881834177E-4	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.999614855612926	WITHOUT_CLASSIFICATION	3.851443870740318E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9997838701430081	WITHOUT_CLASSIFICATION	2.1612985699194254E-4	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999995596939317	WITHOUT_CLASSIFICATION	4.403060683644208E-7	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999927438981516	WITHOUT_CLASSIFICATION	7.256101848292985E-6	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999988013200254	WITHOUT_CLASSIFICATION	1.198679974680859E-6	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.999999977606708	WITHOUT_CLASSIFICATION	2.239329202141732E-8	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999940578096732	WITHOUT_CLASSIFICATION	5.942190326751668E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999940578096732	WITHOUT_CLASSIFICATION	5.942190326751668E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999940578096732	WITHOUT_CLASSIFICATION	5.942190326751668E-6	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999940578096732	WITHOUT_CLASSIFICATION	5.942190326751668E-6	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9983640568772391	WITHOUT_CLASSIFICATION	0.001635943122760938	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999965932369934	WITHOUT_CLASSIFICATION	3.406763006648462E-6	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999999837061718	WITHOUT_CLASSIFICATION	1.629382809881066E-8	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.999999543165684	WITHOUT_CLASSIFICATION	4.5683431594251985E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.999999543165684	WITHOUT_CLASSIFICATION	4.5683431594251985E-7	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999957484202461	WITHOUT_CLASSIFICATION	4.251579753900134E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999752941099966	WITHOUT_CLASSIFICATION	2.4705890003416585E-5	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999752941099966	WITHOUT_CLASSIFICATION	2.4705890003416585E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999989741428075	WITHOUT_CLASSIFICATION	1.0258571925202404E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999989741428075	WITHOUT_CLASSIFICATION	1.0258571925202404E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999965050718803	WITHOUT_CLASSIFICATION	3.494928119657657E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999873335060327	WITHOUT_CLASSIFICATION	1.2666493967235134E-5	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999946088230535	WITHOUT_CLASSIFICATION	5.391176946489114E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999976751083887	WITHOUT_CLASSIFICATION	2.3248916114115667E-6	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999998774926243	WITHOUT_CLASSIFICATION	1.2250737567444348E-7	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999998957209831	WITHOUT_CLASSIFICATION	1.0427901680623062E-7	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999995288157865	WITHOUT_CLASSIFICATION	4.711842135406757E-7	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9998432393434915	WITHOUT_CLASSIFICATION	1.5676065650851485E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9999947334515527	WITHOUT_CLASSIFICATION	5.26654844728376E-6	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9999947334515527	WITHOUT_CLASSIFICATION	5.26654844728376E-6	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999953739541199	WITHOUT_CLASSIFICATION	4.626045880180563E-6	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999999074593094	WITHOUT_CLASSIFICATION	9.2540690574697E-8	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.999999668567715	WITHOUT_CLASSIFICATION	3.3143228487377364E-7	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999975803158	WITHOUT_CLASSIFICATION	2.4196842833293413E-9	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999931504439246	WITHOUT_CLASSIFICATION	6.849556075495112E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999994668654102	WITHOUT_CLASSIFICATION	5.331345898073637E-7	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999994668654102	WITHOUT_CLASSIFICATION	5.331345898073637E-7	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999994668654102	WITHOUT_CLASSIFICATION	5.331345898073637E-7	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999747612246	WITHOUT_CLASSIFICATION	2.523877539064911E-8	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999747612246	WITHOUT_CLASSIFICATION	2.523877539064911E-8	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999998539648363	WITHOUT_CLASSIFICATION	1.4603516370944203E-7	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999989933275569	WITHOUT_CLASSIFICATION	1.0066724430904599E-6	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999989933275569	WITHOUT_CLASSIFICATION	1.0066724430904599E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9997635287555907	WITHOUT_CLASSIFICATION	2.3647124440936897E-4	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999986398141602	WITHOUT_CLASSIFICATION	1.3601858399254302E-6	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999934962682439	WITHOUT_CLASSIFICATION	6.50373175620945E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999957243784258	WITHOUT_CLASSIFICATION	4.275621574263369E-6	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999936732200093	WITHOUT_CLASSIFICATION	6.3267799907067835E-6	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999936732200093	WITHOUT_CLASSIFICATION	6.3267799907067835E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970880034009	WITHOUT_CLASSIFICATION	2.911996599101407E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970880034009	WITHOUT_CLASSIFICATION	2.911996599101407E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970880034009	WITHOUT_CLASSIFICATION	2.911996599101407E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970880034009	WITHOUT_CLASSIFICATION	2.911996599101407E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970880034009	WITHOUT_CLASSIFICATION	2.911996599101407E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970880034009	WITHOUT_CLASSIFICATION	2.911996599101407E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970880034009	WITHOUT_CLASSIFICATION	2.911996599101407E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970880034009	WITHOUT_CLASSIFICATION	2.911996599101407E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970880034009	WITHOUT_CLASSIFICATION	2.911996599101407E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970880034009	WITHOUT_CLASSIFICATION	2.911996599101407E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970880034009	WITHOUT_CLASSIFICATION	2.911996599101407E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970880034009	WITHOUT_CLASSIFICATION	2.911996599101407E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999878356986187	WITHOUT_CLASSIFICATION	1.2164301381293808E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999881944761261	WITHOUT_CLASSIFICATION	1.1805523873866555E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999963682496124	WITHOUT_CLASSIFICATION	3.631750387716851E-6	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999993863262477	WITHOUT_CLASSIFICATION	6.136737523005152E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924788879034	WITHOUT_CLASSIFICATION	7.5211120965525515E-6	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999942251235951	WITHOUT_CLASSIFICATION	5.7748764048268676E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999966444485308	WITHOUT_CLASSIFICATION	3.355551469204538E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999966444485308	WITHOUT_CLASSIFICATION	3.355551469204538E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999966444485308	WITHOUT_CLASSIFICATION	3.355551469204538E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999966444485308	WITHOUT_CLASSIFICATION	3.355551469204538E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999587378276	WITHOUT_CLASSIFICATION	4.126217240016421E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999587378276	WITHOUT_CLASSIFICATION	4.126217240016421E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999587378276	WITHOUT_CLASSIFICATION	4.126217240016421E-6	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999898828020715	WITHOUT_CLASSIFICATION	1.0117197928484607E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999916006666766	WITHOUT_CLASSIFICATION	8.399333323456386E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999942961371115	WITHOUT_CLASSIFICATION	5.703862888370793E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999942961371115	WITHOUT_CLASSIFICATION	5.703862888370793E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999942839193737	WITHOUT_CLASSIFICATION	5.716080626325565E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999991340601611	WITHOUT_CLASSIFICATION	8.659398389025272E-6	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999894731132145	WITHOUT_CLASSIFICATION	1.052688678557552E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977212502051	WITHOUT_CLASSIFICATION	2.2787497949889837E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999904085307051	WITHOUT_CLASSIFICATION	9.591469294823198E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999772058367	WITHOUT_CLASSIFICATION	2.279416328547781E-8	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.999993717324336	WITHOUT_CLASSIFICATION	6.28267566410423E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9999977278244845	WITHOUT_CLASSIFICATION	2.2721755154520503E-6	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999881106157671	WITHOUT_CLASSIFICATION	1.1889384232894427E-5	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999876910988644	WITHOUT_CLASSIFICATION	1.2308901135623513E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9999999148783961	WITHOUT_CLASSIFICATION	8.512160386374386E-8	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9998846378835714	WITHOUT_CLASSIFICATION	1.1536211642859731E-4	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999992082905406	WITHOUT_CLASSIFICATION	7.917094595610464E-7	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999992936995311	WITHOUT_CLASSIFICATION	7.063004689619447E-7	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9995811762364094	WITHOUT_CLASSIFICATION	4.1882376359056613E-4	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9999781225146398	WITHOUT_CLASSIFICATION	2.187748536014936E-5	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999986803432203	WITHOUT_CLASSIFICATION	1.3196567797752476E-6	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999995182136695	WITHOUT_CLASSIFICATION	4.817863304666483E-7	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999999710065678	WITHOUT_CLASSIFICATION	2.899343222547807E-8	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999998453371457	WITHOUT_CLASSIFICATION	1.5466285433045218E-7	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9999863558936798	WITHOUT_CLASSIFICATION	1.3644106320259329E-5	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9999388329127786	WITHOUT_CLASSIFICATION	6.116708722136066E-5	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.999972840937817	WITHOUT_CLASSIFICATION	2.7159062182910414E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999772058367	WITHOUT_CLASSIFICATION	2.279416328547781E-8	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.999983591412217	WITHOUT_CLASSIFICATION	1.64085877829342E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999936176892062	WITHOUT_CLASSIFICATION	6.382310793675511E-6	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.999999486952123	WITHOUT_CLASSIFICATION	5.130478768954685E-7	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9999970692979274	WITHOUT_CLASSIFICATION	2.9307020726361836E-6	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9999931191692449	WITHOUT_CLASSIFICATION	6.880830755101002E-6	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9998547395687857	WITHOUT_CLASSIFICATION	1.4526043121442224E-4	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.999871717180628	WITHOUT_CLASSIFICATION	1.282828193719538E-4	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999970236662895	WITHOUT_CLASSIFICATION	2.9763337105093182E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999342700858113	WITHOUT_CLASSIFICATION	6.572991418875171E-5	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9997005423022494	WITHOUT_CLASSIFICATION	2.994576977506393E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999865710501	WITHOUT_CLASSIFICATION	1.3428949898688004E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999999120090812	WITHOUT_CLASSIFICATION	8.799091873198865E-8	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995336475015	WITHOUT_CLASSIFICATION	4.663524984602628E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998664073468	WITHOUT_CLASSIFICATION	1.3359265315886893E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999987629828716	WITHOUT_CLASSIFICATION	1.2370171284720354E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999437849887	WITHOUT_CLASSIFICATION	5.621501127605708E-8	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.999999469010636	WITHOUT_CLASSIFICATION	5.309893641183336E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999999287472118	WITHOUT_CLASSIFICATION	7.125278827782111E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999998531247801	WITHOUT_CLASSIFICATION	1.4687521991176484E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999896598637183	WITHOUT_CLASSIFICATION	1.0340136281776428E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999982770333233	WITHOUT_CLASSIFICATION	1.7229666766552356E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999998188407317	WITHOUT_CLASSIFICATION	1.811592681557248E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998576997695	WITHOUT_CLASSIFICATION	1.4230023051106613E-7	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.999986632224027	WITHOUT_CLASSIFICATION	1.3367775972989785E-5	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999907852045383	WITHOUT_CLASSIFICATION	9.214795461689909E-6	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9999993046530326	WITHOUT_CLASSIFICATION	6.953469674429278E-7	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999991543638149	WITHOUT_CLASSIFICATION	8.456361850362743E-7	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999950076446146	WITHOUT_CLASSIFICATION	4.992355385434377E-6	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999997871765312	WITHOUT_CLASSIFICATION	2.1282346885190286E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997562131215311	WITHOUT_CLASSIFICATION	2.4378687846887247E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999979140523315	WITHOUT_CLASSIFICATION	2.0859476684484937E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997562131215311	WITHOUT_CLASSIFICATION	2.4378687846887247E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.999996452494242	WITHOUT_CLASSIFICATION	3.5475057580258153E-6	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999992267740657	WITHOUT_CLASSIFICATION	7.732259342013284E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999996725419826	WITHOUT_CLASSIFICATION	3.2745801730872604E-7	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9999990114258898	WITHOUT_CLASSIFICATION	9.885741102416166E-7	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999993202105617	WITHOUT_CLASSIFICATION	6.797894383045543E-7	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999999931008277	WITHOUT_CLASSIFICATION	6.8991723840245275E-9	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9999991364764228	WITHOUT_CLASSIFICATION	8.635235772064771E-7	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9999832228819537	WITHOUT_CLASSIFICATION	1.6777118046222312E-5	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9998846378835714	WITHOUT_CLASSIFICATION	1.1536211642859731E-4	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9999137755983066	WITHOUT_CLASSIFICATION	8.622440169335831E-5	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9999706496081006	WITHOUT_CLASSIFICATION	2.935039189949874E-5	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999962970358692	WITHOUT_CLASSIFICATION	3.7029641306409046E-6	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999999591785167	WITHOUT_CLASSIFICATION	4.082148322251662E-8	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.999986148678855	WITHOUT_CLASSIFICATION	1.3851321145060082E-5	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999804205026642	WITHOUT_CLASSIFICATION	1.957949733572265E-5	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9999847863434923	WITHOUT_CLASSIFICATION	1.5213656507587771E-5	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999996668408089	WITHOUT_CLASSIFICATION	3.331591911068678E-7	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.99999722179753	WITHOUT_CLASSIFICATION	2.7782024699514246E-6	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999933743688362	WITHOUT_CLASSIFICATION	6.625631163764895E-6	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999994238598836	WITHOUT_CLASSIFICATION	5.761401164562915E-7	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9992008673527121	WITHOUT_CLASSIFICATION	7.991326472878838E-4	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999880678410262	WITHOUT_CLASSIFICATION	1.1932158973730498E-5	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999914346923232	WITHOUT_CLASSIFICATION	8.565307676836354E-6	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999998220271049	WITHOUT_CLASSIFICATION	1.7797289504223575E-7	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999854643678604	WITHOUT_CLASSIFICATION	1.4535632139579828E-5	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.999999457895385	WITHOUT_CLASSIFICATION	5.421046149984942E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999811677477187	WITHOUT_CLASSIFICATION	1.8832252281211555E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999822452626628	WITHOUT_CLASSIFICATION	1.7754737337170747E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999822452626628	WITHOUT_CLASSIFICATION	1.7754737337170747E-5	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999918946977798	WITHOUT_CLASSIFICATION	8.105302220274862E-6	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9999999742998057	WITHOUT_CLASSIFICATION	2.5700194313083035E-8	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9999938932460682	WITHOUT_CLASSIFICATION	6.106753931791991E-6	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9999647128864265	WITHOUT_CLASSIFICATION	3.528711357342362E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999986774187944	WITHOUT_CLASSIFICATION	1.3225812055310701E-6	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9999082266998544	WITHOUT_CLASSIFICATION	9.177330014564273E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9991593171310555	WITHOUT_CLASSIFICATION	8.406828689444297E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999994936552884	WITHOUT_CLASSIFICATION	5.063447117202631E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999961523035539	WITHOUT_CLASSIFICATION	3.847696446144111E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999290158768	WITHOUT_CLASSIFICATION	7.098412330555384E-8	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999347262120111	WITHOUT_CLASSIFICATION	6.52737879888789E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999957055766118	WITHOUT_CLASSIFICATION	4.294423388253713E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999534859275965	WITHOUT_CLASSIFICATION	4.651407240352594E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.999946973199444	WITHOUT_CLASSIFICATION	5.3026800555907695E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989571759014	WITHOUT_CLASSIFICATION	1.042824098646734E-6	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9999044223233873	WITHOUT_CLASSIFICATION	9.557767661264689E-5	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999990281708933	WITHOUT_CLASSIFICATION	9.71829106745994E-7	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999826881801949	WITHOUT_CLASSIFICATION	1.73118198051687E-5	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999772511773667	WITHOUT_CLASSIFICATION	2.274882263329879E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999986774187944	WITHOUT_CLASSIFICATION	1.3225812055310701E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999990281708933	WITHOUT_CLASSIFICATION	9.71829106745994E-7	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999994936552884	WITHOUT_CLASSIFICATION	5.063447117202631E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999961523035539	WITHOUT_CLASSIFICATION	3.847696446144111E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999811677477187	WITHOUT_CLASSIFICATION	1.8832252281211555E-5	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999952205260393	WITHOUT_CLASSIFICATION	4.77947396071755E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999811677477187	WITHOUT_CLASSIFICATION	1.8832252281211555E-5	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999920487719436	WITHOUT_CLASSIFICATION	7.951228056328857E-6	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9999969425260844	WITHOUT_CLASSIFICATION	3.057473915553295E-6	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.999997220237925	WITHOUT_CLASSIFICATION	2.7797620750182834E-6	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999996620645633	WITHOUT_CLASSIFICATION	3.3793543676374095E-7	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999664850070498	WITHOUT_CLASSIFICATION	3.351499295020547E-5	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999664850070498	WITHOUT_CLASSIFICATION	3.351499295020547E-5	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9999764312881518	WITHOUT_CLASSIFICATION	2.356871184819962E-5	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999904519066998	WITHOUT_CLASSIFICATION	9.548093300173992E-6	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999985971389596	WITHOUT_CLASSIFICATION	1.4028610404164915E-6	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999977696207066	WITHOUT_CLASSIFICATION	2.2303792934307535E-6	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999977548092618	WITHOUT_CLASSIFICATION	2.2451907382099483E-6	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999897560338464	WITHOUT_CLASSIFICATION	1.0243966153593884E-5	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999975911766413	WITHOUT_CLASSIFICATION	2.408823358655519E-6	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999976070675622	WITHOUT_CLASSIFICATION	2.3929324377850723E-6	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999919342319917	WITHOUT_CLASSIFICATION	8.065768008300548E-6	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999981033734665	WITHOUT_CLASSIFICATION	1.8966265334621922E-6	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999981158854497	WITHOUT_CLASSIFICATION	1.8841145502189577E-6	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999989281718826	WITHOUT_CLASSIFICATION	1.071828117443755E-6	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999928026451217	WITHOUT_CLASSIFICATION	7.1973548782902756E-6	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999982846062644	WITHOUT_CLASSIFICATION	1.7153937355351857E-6	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999982959226629	WITHOUT_CLASSIFICATION	1.7040773370982577E-6	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999942740213023	WITHOUT_CLASSIFICATION	5.725978697817668E-6	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999989546293901	WITHOUT_CLASSIFICATION	1.045370609814683E-6	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999991005638132	WITHOUT_CLASSIFICATION	8.99436186785413E-7	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999991618568305	WITHOUT_CLASSIFICATION	8.38143169531498E-7	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999926525640069	WITHOUT_CLASSIFICATION	7.347435993092933E-6	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999986586041915	WITHOUT_CLASSIFICATION	1.3413958085553377E-6	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999986674533405	WITHOUT_CLASSIFICATION	1.3325466593737003E-6	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999145315294	WITHOUT_CLASSIFICATION	8.546847061140478E-7	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999941828626965	WITHOUT_CLASSIFICATION	5.81713730354751E-6	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999986321305085	WITHOUT_CLASSIFICATION	1.3678694914040157E-6	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999986411543037	WITHOUT_CLASSIFICATION	1.3588456963430005E-6	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999998731596086	WITHOUT_CLASSIFICATION	1.2684039140820493E-6	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999963007525967	WITHOUT_CLASSIFICATION	3.699247403206291E-6	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999995772704066	WITHOUT_CLASSIFICATION	4.2272959341043594E-7	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999990082387017	WITHOUT_CLASSIFICATION	9.917612982699468E-7	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9999586173190109	WITHOUT_CLASSIFICATION	4.1382680989081583E-5	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999975689489664	WITHOUT_CLASSIFICATION	2.4310510335415777E-6	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999944969634297	WITHOUT_CLASSIFICATION	5.503036570295822E-6	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999986884261737	WITHOUT_CLASSIFICATION	1.3115738262885452E-6	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999986970785885	WITHOUT_CLASSIFICATION	1.302921411601266E-6	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999959253284141	WITHOUT_CLASSIFICATION	4.074671585985304E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999811677477187	WITHOUT_CLASSIFICATION	1.8832252281211555E-5	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999990288585728	WITHOUT_CLASSIFICATION	9.711414271805505E-7	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999035265167	WITHOUT_CLASSIFICATION	9.647348330405709E-7	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999957653146027	WITHOUT_CLASSIFICATION	4.234685397402678E-6	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999992268901976	WITHOUT_CLASSIFICATION	7.731098024312823E-7	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999992319903834	WITHOUT_CLASSIFICATION	7.680096166441528E-7	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999966473024812	WITHOUT_CLASSIFICATION	3.3526975187931826E-6	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999992009315122	WITHOUT_CLASSIFICATION	7.990684878873377E-7	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997661761968	WITHOUT_CLASSIFICATION	2.3382380325727357E-7	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999978679467554	WITHOUT_CLASSIFICATION	2.132053244546778E-6	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997764201847	WITHOUT_CLASSIFICATION	2.2357981538970214E-7	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997780747906	WITHOUT_CLASSIFICATION	2.2192520929468394E-7	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999985637484132	WITHOUT_CLASSIFICATION	1.4362515867824616E-6	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999999164367778	WITHOUT_CLASSIFICATION	8.356322215307253E-8	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.9999907741814353	WITHOUT_CLASSIFICATION	9.225818564656759E-6	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999485837348777	WITHOUT_CLASSIFICATION	5.141626512235783E-5	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999998631281248	WITHOUT_CLASSIFICATION	1.3687187525405335E-7	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9999878742141725	WITHOUT_CLASSIFICATION	1.2125785827460949E-5	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9998609617310512	WITHOUT_CLASSIFICATION	1.3903826894869642E-4	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999942961371115	WITHOUT_CLASSIFICATION	5.703862888370793E-6	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999957055766118	WITHOUT_CLASSIFICATION	4.294423388253713E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999997842294387	WITHOUT_CLASSIFICATION	2.157705612387281E-7	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999999847188741	WITHOUT_CLASSIFICATION	1.5281125880161537E-8	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.999992655003037	WITHOUT_CLASSIFICATION	7.344996962996911E-6	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999868349207109	WITHOUT_CLASSIFICATION	1.316507928913545E-5	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.999999162188787	WITHOUT_CLASSIFICATION	8.378112129272406E-7	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999917228754672	WITHOUT_CLASSIFICATION	8.277124532773264E-6	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.999999474242868	WITHOUT_CLASSIFICATION	5.257571320156007E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999975291565897	WITHOUT_CLASSIFICATION	2.4708434104087974E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999975291565897	WITHOUT_CLASSIFICATION	2.4708434104087974E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999347262120111	WITHOUT_CLASSIFICATION	6.52737879888789E-5	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999915369682237	WITHOUT_CLASSIFICATION	8.463031776262599E-6	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9999999988401073	WITHOUT_CLASSIFICATION	1.1598927284730026E-9	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999907378408791	WITHOUT_CLASSIFICATION	9.262159120947103E-6	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999766781562645	WITHOUT_CLASSIFICATION	2.332184373552471E-5	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999876057761519	WITHOUT_CLASSIFICATION	1.2394223848214462E-5	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999692404091074	WITHOUT_CLASSIFICATION	3.075959089250687E-5	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999999501875182	WITHOUT_CLASSIFICATION	4.98124817535487E-8	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999995133379681	WITHOUT_CLASSIFICATION	4.866620319045114E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999975291565897	WITHOUT_CLASSIFICATION	2.4708434104087974E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999772548831958	WITHOUT_CLASSIFICATION	2.2745116804142374E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999997498378997	WITHOUT_CLASSIFICATION	2.50162100315631E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999785073315918	WITHOUT_CLASSIFICATION	2.1492668408319097E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999998584944827	WITHOUT_CLASSIFICATION	1.4150551727650712E-7	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999950411076508	WITHOUT_CLASSIFICATION	4.958892349187477E-6	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999998744818777	WITHOUT_CLASSIFICATION	1.2551812231135533E-7	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999999635381617	WITHOUT_CLASSIFICATION	3.6461838427916685E-8	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9998054398024201	WITHOUT_CLASSIFICATION	1.9456019757994273E-4	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999960192662525	WITHOUT_CLASSIFICATION	3.9807337474995686E-6	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999973288934239	WITHOUT_CLASSIFICATION	2.6711065762228186E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999347262120111	WITHOUT_CLASSIFICATION	6.52737879888789E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999975291565897	WITHOUT_CLASSIFICATION	2.4708434104087974E-6	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999785073315918	WITHOUT_CLASSIFICATION	2.1492668408319097E-5	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999998584944827	WITHOUT_CLASSIFICATION	1.4150551727650712E-7	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999950411076508	WITHOUT_CLASSIFICATION	4.958892349187477E-6	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999967387192141	WITHOUT_CLASSIFICATION	3.2612807858751698E-6	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9999943580348547	WITHOUT_CLASSIFICATION	5.64196514535947E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999998805323415	WITHOUT_CLASSIFICATION	1.1946765854908154E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999996933011	WITHOUT_CLASSIFICATION	3.066989083099299E-10	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999946703852443	WITHOUT_CLASSIFICATION	5.329614755733674E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999946703852443	WITHOUT_CLASSIFICATION	5.329614755733674E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999946703852443	WITHOUT_CLASSIFICATION	5.329614755733674E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999932562866567	WITHOUT_CLASSIFICATION	6.743713343182144E-6	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999997954440277	WITHOUT_CLASSIFICATION	2.045559723707812E-7	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999948132757288	WITHOUT_CLASSIFICATION	5.186724271160677E-6	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999992602836439	WITHOUT_CLASSIFICATION	7.397163559984294E-7	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999988789593056	WITHOUT_CLASSIFICATION	1.1210406944323792E-6	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999995373124888	WITHOUT_CLASSIFICATION	4.626875112076782E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999876100671693	WITHOUT_CLASSIFICATION	1.238993283079315E-5	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999995725266749	WITHOUT_CLASSIFICATION	4.274733250212626E-7	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999998185723542	WITHOUT_CLASSIFICATION	1.814276457463988E-7	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999985213205055	WITHOUT_CLASSIFICATION	1.478679494473958E-6	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.999991718903453	WITHOUT_CLASSIFICATION	8.281096546953792E-6	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999998787851031	WITHOUT_CLASSIFICATION	1.2121489686331134E-7	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.999999725471957	WITHOUT_CLASSIFICATION	2.7452804288401494E-7	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999938886536657	WITHOUT_CLASSIFICATION	6.111346334404318E-6	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999999504069828	WITHOUT_CLASSIFICATION	4.9593017251969156E-8	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999999454679827	WITHOUT_CLASSIFICATION	5.4532017419153655E-8	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9976050116017247	WITHOUT_CLASSIFICATION	0.002394988398275233	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9980430868505383	WITHOUT_CLASSIFICATION	0.0019569131494616633	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.999997713633481	WITHOUT_CLASSIFICATION	2.286366519071127E-6	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999944334391436	WITHOUT_CLASSIFICATION	5.5665608564253745E-6	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999998520074957	WITHOUT_CLASSIFICATION	1.4799250428870106E-7	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999988772870598	WITHOUT_CLASSIFICATION	1.1227129402377952E-6	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.999999378774874	WITHOUT_CLASSIFICATION	6.212251260102011E-7	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999969983508856	WITHOUT_CLASSIFICATION	3.001649114418086E-6	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999974645207421	WITHOUT_CLASSIFICATION	2.5354792578512056E-6	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999983108850736	WITHOUT_CLASSIFICATION	1.6891149263416522E-6	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999897391671468	WITHOUT_CLASSIFICATION	1.026083285306277E-5	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999915975744458	WITHOUT_CLASSIFICATION	8.402425554284733E-6	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999980589673065	WITHOUT_CLASSIFICATION	1.941032693454851E-6	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.999996415733983	WITHOUT_CLASSIFICATION	3.5842660169441598E-6	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999958962776185	WITHOUT_CLASSIFICATION	4.1037223815073075E-6	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9999590616218683	WITHOUT_CLASSIFICATION	4.093837813173236E-5	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999997659505383	WITHOUT_CLASSIFICATION	2.340494617247394E-7	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9998501000987638	WITHOUT_CLASSIFICATION	1.4989990123620914E-4	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9999476322148518	WITHOUT_CLASSIFICATION	5.236778514815688E-5	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.999997878501691	WITHOUT_CLASSIFICATION	2.1214983090256363E-6	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.999983591412217	WITHOUT_CLASSIFICATION	1.64085877829342E-5	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9999976716612224	WITHOUT_CLASSIFICATION	2.3283387775258768E-6	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999999879711698	WITHOUT_CLASSIFICATION	1.202883002912965E-8	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999994897666462	WITHOUT_CLASSIFICATION	5.102333537259374E-7	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999976573148501	WITHOUT_CLASSIFICATION	2.342685149756939E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999922416901449	WITHOUT_CLASSIFICATION	7.75830985512035E-6	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999932609935841	WITHOUT_CLASSIFICATION	6.739006415956055E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999922416901449	WITHOUT_CLASSIFICATION	7.75830985512035E-6	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999995453000825	WITHOUT_CLASSIFICATION	4.546999174475136E-7	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999984052668432	WITHOUT_CLASSIFICATION	1.5947331567001332E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999470194205099	WITHOUT_CLASSIFICATION	5.298057949011665E-5	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999976029854324	WITHOUT_CLASSIFICATION	2.3970145676548523E-6	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999997473998364	WITHOUT_CLASSIFICATION	2.526001635340085E-7	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999993695013171	WITHOUT_CLASSIFICATION	6.304986829196968E-7	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999946916678645	WITHOUT_CLASSIFICATION	5.30833213561011E-6	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999922872766749	WITHOUT_CLASSIFICATION	7.71272332512081E-6	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999983519936321	WITHOUT_CLASSIFICATION	1.6480063679357178E-6	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999971553568601	WITHOUT_CLASSIFICATION	2.844643139959949E-6	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999991049975366	WITHOUT_CLASSIFICATION	8.950024634909453E-7	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999998993425795	WITHOUT_CLASSIFICATION	1.006574205306116E-7	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999933248401391	WITHOUT_CLASSIFICATION	6.675159860785032E-6	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999999443125588	WITHOUT_CLASSIFICATION	5.56874410864613E-8	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999989512566062	WITHOUT_CLASSIFICATION	1.0487433938409491E-6	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999892276720412	WITHOUT_CLASSIFICATION	1.077232795867313E-5	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999998720071677	WITHOUT_CLASSIFICATION	1.279928322982204E-7	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.99998951306423	WITHOUT_CLASSIFICATION	1.0486935769988538E-5	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999999529821797	WITHOUT_CLASSIFICATION	4.701782038426913E-8	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.999999753320537	WITHOUT_CLASSIFICATION	2.466794630049743E-7	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999999073128378	WITHOUT_CLASSIFICATION	9.268716210828924E-8	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999938081583826	WITHOUT_CLASSIFICATION	6.191841617438224E-6	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999981898740953	WITHOUT_CLASSIFICATION	1.8101259047546591E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999997612531251	WITHOUT_CLASSIFICATION	2.387468749025473E-7	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999844600724528	WITHOUT_CLASSIFICATION	1.553992754725182E-5	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9999997537018551	WITHOUT_CLASSIFICATION	2.4629814489747844E-7	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999909959874442	WITHOUT_CLASSIFICATION	9.00401255581359E-6	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999969103160529	WITHOUT_CLASSIFICATION	3.089683947120056E-6	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9999917197876851	WITHOUT_CLASSIFICATION	8.28021231493124E-6	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9999912037430334	WITHOUT_CLASSIFICATION	8.796256966583637E-6	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999995023596538	WITHOUT_CLASSIFICATION	4.976403461251981E-7	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999785575721932	WITHOUT_CLASSIFICATION	2.144242780672495E-5	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999999262171573	WITHOUT_CLASSIFICATION	7.37828427062329E-8	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999995481629012	WITHOUT_CLASSIFICATION	4.518370989512752E-7	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999951490805479	WITHOUT_CLASSIFICATION	4.85091945220495E-6	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999969975178448	WITHOUT_CLASSIFICATION	3.002482155338623E-6	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999893746845	WITHOUT_CLASSIFICATION	1.0625315384273596E-8	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9999979297795849	WITHOUT_CLASSIFICATION	2.070220415092596E-6	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999994897666462	WITHOUT_CLASSIFICATION	5.102333537259374E-7	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999972139084109	WITHOUT_CLASSIFICATION	2.786091589014935E-6	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999999669221495	WITHOUT_CLASSIFICATION	3.3077850433478056E-8	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999996091672857	WITHOUT_CLASSIFICATION	3.908327143527263E-7	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999995362816723	WITHOUT_CLASSIFICATION	4.637183276313028E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999932609935841	WITHOUT_CLASSIFICATION	6.739006415956055E-6	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999676216538017	WITHOUT_CLASSIFICATION	3.237834619829034E-5	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.999999944072669	WITHOUT_CLASSIFICATION	5.5927331086640636E-8	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999998683964576	WITHOUT_CLASSIFICATION	1.3160354241386376E-7	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999943642428974	WITHOUT_CLASSIFICATION	5.6357571025420316E-6	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999870694450683	WITHOUT_CLASSIFICATION	1.2930554931686098E-5	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.999938687176708	WITHOUT_CLASSIFICATION	6.131282329203693E-5	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9999968946178992	WITHOUT_CLASSIFICATION	3.1053821008487662E-6	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999961695497736	WITHOUT_CLASSIFICATION	3.830450226462436E-6	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999995810220788	WITHOUT_CLASSIFICATION	4.1897792127014484E-7	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9999255109184182	WITHOUT_CLASSIFICATION	7.448908158189014E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999936176892062	WITHOUT_CLASSIFICATION	6.382310793675511E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999989518647552	WITHOUT_CLASSIFICATION	1.0481352448231971E-6	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999928621744961	WITHOUT_CLASSIFICATION	7.1378255039086795E-6	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9999980298602429	WITHOUT_CLASSIFICATION	1.9701397571773637E-6	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999988820627014	WITHOUT_CLASSIFICATION	1.1179372986272708E-6	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999976844341886	WITHOUT_CLASSIFICATION	2.3155658114368336E-6	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.999997860166639	WITHOUT_CLASSIFICATION	2.139833360992907E-6	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999992736470621	WITHOUT_CLASSIFICATION	7.263529378823859E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999991659675308	WITHOUT_CLASSIFICATION	8.340324692019168E-7	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.999999819705307	WITHOUT_CLASSIFICATION	1.8029469298164568E-7	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999992861109208	WITHOUT_CLASSIFICATION	7.138890791787741E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999991659675308	WITHOUT_CLASSIFICATION	8.340324692019168E-7	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999962883618113	WITHOUT_CLASSIFICATION	3.711638188750482E-6	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999981466958688	WITHOUT_CLASSIFICATION	1.8533041310645157E-6	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999989188522777	WITHOUT_CLASSIFICATION	1.0811477224090708E-6	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999999313936575	WITHOUT_CLASSIFICATION	6.860634248318604E-8	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999999488032133	WITHOUT_CLASSIFICATION	5.119678671138932E-8	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.999999969758335	WITHOUT_CLASSIFICATION	3.0241665019437814E-8	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999998633534628	WITHOUT_CLASSIFICATION	1.3664653719291915E-7	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999995532547565	WITHOUT_CLASSIFICATION	4.4674524337218654E-7	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999995517316426	WITHOUT_CLASSIFICATION	4.482683574873955E-7	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999999275659122	WITHOUT_CLASSIFICATION	7.243408784376709E-8	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.999998164752259	WITHOUT_CLASSIFICATION	1.835247740994099E-6	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999999875569917	WITHOUT_CLASSIFICATION	1.24430083021108E-8	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999999961084319	WITHOUT_CLASSIFICATION	3.891568073024945E-9	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999996926316012	WITHOUT_CLASSIFICATION	3.0736839889527035E-7	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999882648820592	WITHOUT_CLASSIFICATION	1.1735117940774042E-5	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999851694105454	WITHOUT_CLASSIFICATION	1.4830589454729607E-5	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999779028812535	WITHOUT_CLASSIFICATION	2.2097118746529694E-5	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999975036081135	WITHOUT_CLASSIFICATION	2.4963918865703343E-6	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999998718129952	WITHOUT_CLASSIFICATION	1.2818700478321925E-7	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999996508517137	WITHOUT_CLASSIFICATION	3.4914828621296367E-7	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999995957572442	WITHOUT_CLASSIFICATION	4.0424275583121367E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999942961371115	WITHOUT_CLASSIFICATION	5.703862888370793E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999942961371115	WITHOUT_CLASSIFICATION	5.703862888370793E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999996725419826	WITHOUT_CLASSIFICATION	3.2745801730872604E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999975291565897	WITHOUT_CLASSIFICATION	2.4708434104087974E-6	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999921126904708	WITHOUT_CLASSIFICATION	7.887309529205292E-6	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999577176097	WITHOUT_CLASSIFICATION	4.228239032153479E-8	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999577176097	WITHOUT_CLASSIFICATION	4.228239032153479E-8	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999998921160914	WITHOUT_CLASSIFICATION	1.0788390858984402E-7	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.999999775600723	WITHOUT_CLASSIFICATION	2.243992770845456E-7	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9999999544392079	WITHOUT_CLASSIFICATION	4.556079208539213E-8	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999998774181879	WITHOUT_CLASSIFICATION	1.2258181215303102E-7	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999999690083677	WITHOUT_CLASSIFICATION	3.099163227530971E-8	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.9999972419410245	WITHOUT_CLASSIFICATION	2.758058975477775E-6	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999983814497304	WITHOUT_CLASSIFICATION	1.6185502695230149E-6	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9999933929351746	WITHOUT_CLASSIFICATION	6.607064825336709E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999998319652816	WITHOUT_CLASSIFICATION	1.6803471835748477E-7	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999998319652816	WITHOUT_CLASSIFICATION	1.6803471835748477E-7	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997671624973	WITHOUT_CLASSIFICATION	2.3283750276383563E-7	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997671624973	WITHOUT_CLASSIFICATION	2.3283750276383563E-7	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999214053202209	WITHOUT_CLASSIFICATION	7.859467977905402E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999997712881818	WITHOUT_CLASSIFICATION	2.2871181810477386E-7	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999979876791472	WITHOUT_CLASSIFICATION	2.0123208527635926E-6	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9999920290798473	WITHOUT_CLASSIFICATION	7.970920152783866E-6	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.999999976988	WITHOUT_CLASSIFICATION	2.3011999954198286E-8	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.999999646225792	WITHOUT_CLASSIFICATION	3.537742080501447E-7	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999829486081058	WITHOUT_CLASSIFICATION	1.705139189422032E-5	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999948101755055	WITHOUT_CLASSIFICATION	5.189824494509302E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9999921233696994	WITHOUT_CLASSIFICATION	7.876630300519879E-6	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.999999199531431	WITHOUT_CLASSIFICATION	8.004685688619385E-7	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999999650304335	WITHOUT_CLASSIFICATION	3.4969566446379834E-8	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999943760167226	WITHOUT_CLASSIFICATION	5.623983277388997E-6	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999943760167226	WITHOUT_CLASSIFICATION	5.623983277388997E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999772058367	WITHOUT_CLASSIFICATION	2.279416328547781E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999799022949	WITHOUT_CLASSIFICATION	2.009770506694096E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999799022949	WITHOUT_CLASSIFICATION	2.009770506694096E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999772058367	WITHOUT_CLASSIFICATION	2.279416328547781E-8	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999999427074999	WITHOUT_CLASSIFICATION	5.7292499965208606E-8	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9998886462920621	WITHOUT_CLASSIFICATION	1.1135370793798937E-4	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9999995426961165	WITHOUT_CLASSIFICATION	4.573038836276631E-7	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999962663787046	WITHOUT_CLASSIFICATION	3.733621295416109E-6	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999568950205014	WITHOUT_CLASSIFICATION	4.3104979498511535E-5	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.999999067190814	WITHOUT_CLASSIFICATION	9.328091860898645E-7	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999947182084074	WITHOUT_CLASSIFICATION	5.2817915927103E-6	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999989288028326	WITHOUT_CLASSIFICATION	1.0711971673652963E-6	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999989288028326	WITHOUT_CLASSIFICATION	1.0711971673652963E-6	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999986161753485	WITHOUT_CLASSIFICATION	1.3838246515209898E-6	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999986161753485	WITHOUT_CLASSIFICATION	1.3838246515209898E-6	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999980912267417	WITHOUT_CLASSIFICATION	1.908773258243525E-6	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999996232925381	WITHOUT_CLASSIFICATION	3.7670746184130287E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999962010261572	WITHOUT_CLASSIFICATION	3.7989738428632788E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999962010261572	WITHOUT_CLASSIFICATION	3.7989738428632788E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999962010261572	WITHOUT_CLASSIFICATION	3.7989738428632788E-6	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999962267308802	WITHOUT_CLASSIFICATION	3.773269119901595E-6	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999983427947514	WITHOUT_CLASSIFICATION	1.6572052485854874E-6	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999922786187643	WITHOUT_CLASSIFICATION	7.721381235742119E-6	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999991785415132	WITHOUT_CLASSIFICATION	8.214584867107855E-7	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999992974046314	WITHOUT_CLASSIFICATION	7.025953684305762E-7	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9993747977485273	WITHOUT_CLASSIFICATION	6.252022514726409E-4	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999997405170983	WITHOUT_CLASSIFICATION	2.5948290171135064E-7	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9999708698328797	WITHOUT_CLASSIFICATION	2.9130167120202985E-5	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999995050611696	WITHOUT_CLASSIFICATION	4.949388302955106E-7	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999999127467201	WITHOUT_CLASSIFICATION	8.725327995650746E-8	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999830322910317	WITHOUT_CLASSIFICATION	1.6967708968272915E-5	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999975210245565	WITHOUT_CLASSIFICATION	2.4789754434268668E-6	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999387434421	WITHOUT_CLASSIFICATION	6.125655791186429E-8	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9999999515204543	WITHOUT_CLASSIFICATION	4.847954567393256E-8	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.99999864843248	WITHOUT_CLASSIFICATION	1.3515675200380377E-6	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999978931836373	WITHOUT_CLASSIFICATION	2.1068163626409762E-6	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9997326322109675	WITHOUT_CLASSIFICATION	2.673677890324884E-4	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9999675535090737	WITHOUT_CLASSIFICATION	3.244649092625179E-5	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999998317017442	WITHOUT_CLASSIFICATION	1.6829825576728407E-7	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.999999998970365	WITHOUT_CLASSIFICATION	1.0296349965777433E-9	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999999878902083	WITHOUT_CLASSIFICATION	1.210979175969606E-8	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.999990554380042	WITHOUT_CLASSIFICATION	9.445619957911618E-6	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999969799764017	WITHOUT_CLASSIFICATION	3.0200235983734557E-6	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9999815897503174	WITHOUT_CLASSIFICATION	1.8410249682625153E-5	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9999959034499903	WITHOUT_CLASSIFICATION	4.096550009626317E-6	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999949654614544	WITHOUT_CLASSIFICATION	5.034538545632283E-6	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999967339675898	WITHOUT_CLASSIFICATION	3.266032410211362E-6	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.999999891220825	WITHOUT_CLASSIFICATION	1.0877917500148989E-7	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999917197351008	WITHOUT_CLASSIFICATION	8.280264899196774E-6	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999990182461975	WITHOUT_CLASSIFICATION	9.817538025570533E-7	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999442037947	WITHOUT_CLASSIFICATION	5.5796205385713176E-8	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999742930704695	WITHOUT_CLASSIFICATION	2.57069295305653E-5	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999953940125363	WITHOUT_CLASSIFICATION	4.605987463658427E-6	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9999989793037533	WITHOUT_CLASSIFICATION	1.020696246774887E-6	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999345460742277	WITHOUT_CLASSIFICATION	6.545392577222194E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999992988844326	WITHOUT_CLASSIFICATION	7.01115567435586E-7	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999987046295233	WITHOUT_CLASSIFICATION	1.2953704766537493E-6	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999990600280855	WITHOUT_CLASSIFICATION	9.399719145053615E-7	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999998069007423	WITHOUT_CLASSIFICATION	1.9309925763935233E-7	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999444415594	WITHOUT_CLASSIFICATION	5.555844064139196E-8	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999965288876076	WITHOUT_CLASSIFICATION	3.471112392331459E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999061517332	WITHOUT_CLASSIFICATION	9.38482668113248E-8	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999963480114304	WITHOUT_CLASSIFICATION	3.6519885696917408E-6	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999999608627241	WITHOUT_CLASSIFICATION	3.913727586283498E-8	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999998514597709	WITHOUT_CLASSIFICATION	1.4854022922409441E-7	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999994963026118	WITHOUT_CLASSIFICATION	5.036973883161992E-7	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999994237638	WITHOUT_CLASSIFICATION	5.762361999977351E-7	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999992206311222	WITHOUT_CLASSIFICATION	7.793688778474974E-7	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999948793527148	WITHOUT_CLASSIFICATION	5.120647285226631E-6	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999875153197668	WITHOUT_CLASSIFICATION	1.2484680233089089E-5	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999974343371172	WITHOUT_CLASSIFICATION	2.565662882855984E-6	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9999900130688704	WITHOUT_CLASSIFICATION	9.986931129730164E-6	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999998935546986	WITHOUT_CLASSIFICATION	1.0644530137965853E-7	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999988979684495	WITHOUT_CLASSIFICATION	1.1020315504484289E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9999940274388814	WITHOUT_CLASSIFICATION	5.97256111853141E-6	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.99997727720801	WITHOUT_CLASSIFICATION	2.2722791989974796E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999963480114304	WITHOUT_CLASSIFICATION	3.6519885696917408E-6	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999963480114304	WITHOUT_CLASSIFICATION	3.6519885696917408E-6	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999996376807542	WITHOUT_CLASSIFICATION	3.62319245858686E-7	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999947444157148	WITHOUT_CLASSIFICATION	5.255584285271997E-6	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999998954327206	WITHOUT_CLASSIFICATION	1.045672794893097E-7	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999989473050284	WITHOUT_CLASSIFICATION	1.0526949715899355E-6	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999989473050284	WITHOUT_CLASSIFICATION	1.0526949715899355E-6	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999984808442517	WITHOUT_CLASSIFICATION	1.5191557483089584E-6	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999995822848915	WITHOUT_CLASSIFICATION	4.1771510841235544E-7	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.99999664769262	WITHOUT_CLASSIFICATION	3.352307380152695E-6	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9999506848682871	WITHOUT_CLASSIFICATION	4.931513171293102E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999925866196275	WITHOUT_CLASSIFICATION	7.4133803725943075E-6	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.999998306586714	WITHOUT_CLASSIFICATION	1.6934132859981735E-6	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999990063056357	WITHOUT_CLASSIFICATION	9.936943644054732E-7	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999959173230365	WITHOUT_CLASSIFICATION	4.082676963476719E-6	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9999039606692289	WITHOUT_CLASSIFICATION	9.603933077111138E-5	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9999788839499785	WITHOUT_CLASSIFICATION	2.1116050021607457E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999999845074956	WITHOUT_CLASSIFICATION	1.549250438752387E-8	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999998467740441	WITHOUT_CLASSIFICATION	1.5322595581343633E-7	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999925866196275	WITHOUT_CLASSIFICATION	7.4133803725943075E-6	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998319652816	WITHOUT_CLASSIFICATION	1.6803471835748477E-7	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998319652816	WITHOUT_CLASSIFICATION	1.6803471835748477E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999722757434621	WITHOUT_CLASSIFICATION	2.7724256537926404E-5	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999996715408804	WITHOUT_CLASSIFICATION	3.284591195332584E-7	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999999249988545	WITHOUT_CLASSIFICATION	7.500114547819297E-8	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999877945957145	WITHOUT_CLASSIFICATION	1.2205404285551552E-5	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9999217746793313	WITHOUT_CLASSIFICATION	7.822532066871264E-5	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999871048465507	WITHOUT_CLASSIFICATION	1.2895153449298786E-5	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999871048465507	WITHOUT_CLASSIFICATION	1.2895153449298786E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999915402132417	WITHOUT_CLASSIFICATION	8.459786758285065E-6	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9999739266663219	WITHOUT_CLASSIFICATION	2.6073333678087923E-5	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9999971556946464	WITHOUT_CLASSIFICATION	2.8443053535498407E-6	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9999491391907337	WITHOUT_CLASSIFICATION	5.086080926639893E-5	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9999030003866727	WITHOUT_CLASSIFICATION	9.699961332741252E-5	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9997747342781733	WITHOUT_CLASSIFICATION	2.2526572182660803E-4	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999961738425674	WITHOUT_CLASSIFICATION	3.826157432543631E-6	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9999659242896521	WITHOUT_CLASSIFICATION	3.407571034777481E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999865710501	WITHOUT_CLASSIFICATION	1.3428949898688004E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999999120090812	WITHOUT_CLASSIFICATION	8.799091873198865E-8	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995336475015	WITHOUT_CLASSIFICATION	4.663524984602628E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998664073468	WITHOUT_CLASSIFICATION	1.3359265315886893E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999987629828716	WITHOUT_CLASSIFICATION	1.2370171284720354E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999437849887	WITHOUT_CLASSIFICATION	5.621501127605708E-8	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.999999469010636	WITHOUT_CLASSIFICATION	5.309893641183336E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999999287472118	WITHOUT_CLASSIFICATION	7.125278827782111E-8	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999995921962157	WITHOUT_CLASSIFICATION	4.078037842057799E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999998531247801	WITHOUT_CLASSIFICATION	1.4687521991176484E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999896598637183	WITHOUT_CLASSIFICATION	1.0340136281776428E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999982770333233	WITHOUT_CLASSIFICATION	1.7229666766552356E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999998188407317	WITHOUT_CLASSIFICATION	1.811592681557248E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998576997695	WITHOUT_CLASSIFICATION	1.4230023051106613E-7	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999999155264849	WITHOUT_CLASSIFICATION	8.447351507611126E-8	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.999996071876768	WITHOUT_CLASSIFICATION	3.928123231933153E-6	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999994300001946	WITHOUT_CLASSIFICATION	5.699998054055946E-7	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999991748885391	WITHOUT_CLASSIFICATION	8.251114609138246E-7	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999913723757936	WITHOUT_CLASSIFICATION	8.627624206337047E-6	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.999997803378388	WITHOUT_CLASSIFICATION	2.1966216121021445E-6	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999998805877534	WITHOUT_CLASSIFICATION	1.1941224669808173E-7	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9999981871444659	WITHOUT_CLASSIFICATION	1.8128555341371858E-6	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.999997441645643	WITHOUT_CLASSIFICATION	2.5583543569800133E-6	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999981873251047	WITHOUT_CLASSIFICATION	1.8126748952910605E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999994184635203	WITHOUT_CLASSIFICATION	5.815364797209724E-7	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999994184635203	WITHOUT_CLASSIFICATION	5.815364797209724E-7	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.999998973198168	WITHOUT_CLASSIFICATION	1.026801832064446E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999886771477714	WITHOUT_CLASSIFICATION	1.1322852228566105E-5	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999996487220956	WITHOUT_CLASSIFICATION	3.5127790444132134E-7	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999955223721665	WITHOUT_CLASSIFICATION	4.477627833579304E-6	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999955223721665	WITHOUT_CLASSIFICATION	4.477627833579304E-6	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999987440461497	WITHOUT_CLASSIFICATION	1.25595385028047E-6	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.999868017819003	WITHOUT_CLASSIFICATION	1.3198218099690117E-4	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999999366832224	WITHOUT_CLASSIFICATION	6.331677753720776E-8	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9999930249003443	WITHOUT_CLASSIFICATION	6.975099655629894E-6	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999944085487623	WITHOUT_CLASSIFICATION	5.591451237772281E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998664073468	WITHOUT_CLASSIFICATION	1.3359265315886893E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998353598679	WITHOUT_CLASSIFICATION	1.6464013201164824E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999437849887	WITHOUT_CLASSIFICATION	5.621501127605708E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999999287472118	WITHOUT_CLASSIFICATION	7.125278827782111E-8	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999896598637183	WITHOUT_CLASSIFICATION	1.0340136281776428E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999982770333233	WITHOUT_CLASSIFICATION	1.7229666766552356E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999996023711366	WITHOUT_CLASSIFICATION	3.976288634123669E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998576997695	WITHOUT_CLASSIFICATION	1.4230023051106613E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989571759014	WITHOUT_CLASSIFICATION	1.042824098646734E-6	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999799022949	WITHOUT_CLASSIFICATION	2.009770506694096E-8	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999964407086286	WITHOUT_CLASSIFICATION	3.55929137138005E-6	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999906310429875	WITHOUT_CLASSIFICATION	9.368957012467397E-6	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999999564184981	WITHOUT_CLASSIFICATION	4.358150187968063E-8	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9999510414923118	WITHOUT_CLASSIFICATION	4.8958507688225845E-5	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.999914722901287	WITHOUT_CLASSIFICATION	8.527709871294236E-5	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999989991445902	WITHOUT_CLASSIFICATION	1.000855409856358E-6	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9999601419507134	WITHOUT_CLASSIFICATION	3.9858049286611146E-5	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9999704267852638	WITHOUT_CLASSIFICATION	2.9573214736212474E-5	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999996446731555	WITHOUT_CLASSIFICATION	3.553268444428894E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.999999851139799	WITHOUT_CLASSIFICATION	1.4886020097055418E-7	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999894142269349	WITHOUT_CLASSIFICATION	1.0585773065110419E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999580355360842	WITHOUT_CLASSIFICATION	4.1964463915680394E-5	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999295506009584	WITHOUT_CLASSIFICATION	7.044939904147188E-5	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999891032963395	WITHOUT_CLASSIFICATION	1.0896703660437035E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999997919754483	WITHOUT_CLASSIFICATION	2.0802455170031654E-7	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9999952792880753	WITHOUT_CLASSIFICATION	4.7207119246152975E-6	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9999736752904179	WITHOUT_CLASSIFICATION	2.63247095821389E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999992635544009	WITHOUT_CLASSIFICATION	7.364455990636198E-7	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999875516556974	WITHOUT_CLASSIFICATION	1.2448344302560524E-5	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999875516556974	WITHOUT_CLASSIFICATION	1.2448344302560524E-5	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999993388552404	WITHOUT_CLASSIFICATION	6.611447595598073E-7	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999371338548181	WITHOUT_CLASSIFICATION	6.286614518186904E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999998059046331	WITHOUT_CLASSIFICATION	1.9409536686101616E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999998059046331	WITHOUT_CLASSIFICATION	1.9409536686101616E-7	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9999998573756671	WITHOUT_CLASSIFICATION	1.4262433284390248E-7	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999604262738807	WITHOUT_CLASSIFICATION	3.95737261192641E-5	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9998722987498188	WITHOUT_CLASSIFICATION	1.2770125018116715E-4	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999987051797973	WITHOUT_CLASSIFICATION	1.294820202686392E-6	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.999999411544833	WITHOUT_CLASSIFICATION	5.884551669796887E-7	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999978855174236	WITHOUT_CLASSIFICATION	2.114482576275942E-6	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999999193391146	WITHOUT_CLASSIFICATION	8.066088537826079E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.999999808724028	WITHOUT_CLASSIFICATION	1.9127597196396177E-7	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999976509511931	WITHOUT_CLASSIFICATION	2.3490488068906912E-6	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9999992165804559	WITHOUT_CLASSIFICATION	7.834195440269518E-7	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9991142108952539	WITHOUT_CLASSIFICATION	8.857891047460939E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999891032963395	WITHOUT_CLASSIFICATION	1.0896703660437035E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9999999968351023	WITHOUT_CLASSIFICATION	3.164897677255394E-9	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999347262120111	WITHOUT_CLASSIFICATION	6.52737879888789E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999957055766118	WITHOUT_CLASSIFICATION	4.294423388253713E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999997522396313	WITHOUT_CLASSIFICATION	2.4776036862094757E-7	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.999968590739657	WITHOUT_CLASSIFICATION	3.1409260342894334E-5	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999999693634204	WITHOUT_CLASSIFICATION	3.063657954809223E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999996612119527	WITHOUT_CLASSIFICATION	3.387880472849224E-7	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999942988763391	WITHOUT_CLASSIFICATION	5.701123660927635E-6	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999942988763391	WITHOUT_CLASSIFICATION	5.701123660927635E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9999903880027979	WITHOUT_CLASSIFICATION	9.611997202018099E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998209388863	WITHOUT_CLASSIFICATION	1.7906111377089882E-7	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.999999808724028	WITHOUT_CLASSIFICATION	1.9127597196396177E-7	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.999999808724028	WITHOUT_CLASSIFICATION	1.9127597196396177E-7	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999968586108036	WITHOUT_CLASSIFICATION	3.1413891964950877E-6	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.999987220719625	WITHOUT_CLASSIFICATION	1.2779280374990722E-5	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9999985087315564	WITHOUT_CLASSIFICATION	1.4912684436743176E-6	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9999986271194784	WITHOUT_CLASSIFICATION	1.3728805216178167E-6	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999941178408387	WITHOUT_CLASSIFICATION	5.8821591612659935E-6	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999961191282195	WITHOUT_CLASSIFICATION	3.880871780449958E-6	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999958239413066	WITHOUT_CLASSIFICATION	4.17605869331197E-6	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999999807051883	WITHOUT_CLASSIFICATION	1.9294811826106136E-8	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.99999995139423	WITHOUT_CLASSIFICATION	4.8605770010660814E-8	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9999998942532875	WITHOUT_CLASSIFICATION	1.0574671252055144E-7	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999996650078882	WITHOUT_CLASSIFICATION	3.3499211183831517E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.99999984956487	WITHOUT_CLASSIFICATION	1.504351299703527E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.99999984956487	WITHOUT_CLASSIFICATION	1.504351299703527E-7	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999999549852875	WITHOUT_CLASSIFICATION	4.50147124967734E-8	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.999994880195024	WITHOUT_CLASSIFICATION	5.119804975994459E-6	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.999994880195024	WITHOUT_CLASSIFICATION	5.119804975994459E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999955164403683	WITHOUT_CLASSIFICATION	4.483559631670514E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999955164403683	WITHOUT_CLASSIFICATION	4.483559631670514E-6	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999923617219125	WITHOUT_CLASSIFICATION	7.638278087544198E-6	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999995285755975	WITHOUT_CLASSIFICATION	4.714244024423358E-7	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999995285755975	WITHOUT_CLASSIFICATION	4.714244024423358E-7	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999994199222557	WITHOUT_CLASSIFICATION	5.800777442834906E-7	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999997192726954	WITHOUT_CLASSIFICATION	2.8072730462606647E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999290158768	WITHOUT_CLASSIFICATION	7.098412330555384E-8	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999977478463454	WITHOUT_CLASSIFICATION	2.2521536545306823E-6	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999996044371786	WITHOUT_CLASSIFICATION	3.955628213971309E-7	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9999997780003277	WITHOUT_CLASSIFICATION	2.2199967231469982E-7	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9998372165023439	WITHOUT_CLASSIFICATION	1.6278349765618439E-4	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999312897516377	WITHOUT_CLASSIFICATION	6.87102483623229E-5	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999989145624562	WITHOUT_CLASSIFICATION	1.0854375437832551E-6	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999997784916989	WITHOUT_CLASSIFICATION	2.2150830108337918E-7	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999999987930157	WITHOUT_CLASSIFICATION	1.2069842883823224E-9	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.999999988732471	WITHOUT_CLASSIFICATION	1.126752908737329E-8	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878358005752	WITHOUT_CLASSIFICATION	1.2164199424874366E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999997192726954	WITHOUT_CLASSIFICATION	2.8072730462606647E-7	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999995639485475	WITHOUT_CLASSIFICATION	4.360514525249809E-7	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999999948295828	WITHOUT_CLASSIFICATION	5.170417261944957E-9	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999999555280313	WITHOUT_CLASSIFICATION	4.447196878290132E-8	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9998539327897877	WITHOUT_CLASSIFICATION	1.460672102122024E-4	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999999702272507	WITHOUT_CLASSIFICATION	2.9772749206437067E-8	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999993978022566	WITHOUT_CLASSIFICATION	6.021977434353807E-7	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9999999507484673	WITHOUT_CLASSIFICATION	4.925153266699527E-8	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999999701537223	WITHOUT_CLASSIFICATION	2.984627771917889E-8	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999999916428212	WITHOUT_CLASSIFICATION	8.35717876665912E-9	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9999998918757961	WITHOUT_CLASSIFICATION	1.081242038824214E-7	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.999999456536884	WITHOUT_CLASSIFICATION	5.434631159400251E-7	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9999918762869074	WITHOUT_CLASSIFICATION	8.123713092569844E-6	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.999999965367768	WITHOUT_CLASSIFICATION	3.4632231941206414E-8	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999800393353596	WITHOUT_CLASSIFICATION	1.996066464027196E-5	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9999970965449038	WITHOUT_CLASSIFICATION	2.9034550961681377E-6	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.99999995926826	WITHOUT_CLASSIFICATION	4.073173993466228E-8	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999833385095207	WITHOUT_CLASSIFICATION	1.6661490479308046E-5	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999999483296603	WITHOUT_CLASSIFICATION	5.167033978476827E-8	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.999998781328447	WITHOUT_CLASSIFICATION	1.2186715530098691E-6	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999998651154149	WITHOUT_CLASSIFICATION	1.3488458494566772E-7	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999981567550424	WITHOUT_CLASSIFICATION	1.8432449576290335E-6	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9999956281061729	WITHOUT_CLASSIFICATION	4.371893827084215E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999998655407026	WITHOUT_CLASSIFICATION	1.3445929743207753E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999999589604149	WITHOUT_CLASSIFICATION	4.103958515394629E-8	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9994889294364624	WITHOUT_CLASSIFICATION	5.110705635376199E-4	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999998528534052	WITHOUT_CLASSIFICATION	1.471465947680117E-7	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999996248237917	WITHOUT_CLASSIFICATION	3.751762082339589E-7	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999994697845496	WITHOUT_CLASSIFICATION	5.302154504160404E-7	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999963895600736	WITHOUT_CLASSIFICATION	3.610439926331668E-6	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9986690728613712	WITHOUT_CLASSIFICATION	0.0013309271386287515	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999952928611604	WITHOUT_CLASSIFICATION	4.70713883967711E-6	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999999916209954	WITHOUT_CLASSIFICATION	8.379004619877365E-9	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999973573455682	WITHOUT_CLASSIFICATION	2.642654431769946E-6	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9999979284514741	WITHOUT_CLASSIFICATION	2.0715485260133404E-6	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999982608681078	WITHOUT_CLASSIFICATION	1.739131892176391E-6	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9999887772571971	WITHOUT_CLASSIFICATION	1.1222742802898182E-5	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999994845343518	WITHOUT_CLASSIFICATION	5.154656481728842E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999999589604149	WITHOUT_CLASSIFICATION	4.103958515394629E-8	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999998411359556	WITHOUT_CLASSIFICATION	1.5886404432619862E-7	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999997475566469	WITHOUT_CLASSIFICATION	2.524433531290595E-7	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999997475566469	WITHOUT_CLASSIFICATION	2.524433531290595E-7	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999999836781521	WITHOUT_CLASSIFICATION	1.6321847901028703E-8	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999999836781521	WITHOUT_CLASSIFICATION	1.6321847901028703E-8	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9999993080661809	WITHOUT_CLASSIFICATION	6.919338191784962E-7	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999999083071135	WITHOUT_CLASSIFICATION	9.169288653631164E-8	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999994247276536	WITHOUT_CLASSIFICATION	5.752723464410914E-7	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999941062616386	WITHOUT_CLASSIFICATION	5.893738361314913E-6	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9999998827130154	WITHOUT_CLASSIFICATION	1.1728698460556728E-7	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9999950252177718	WITHOUT_CLASSIFICATION	4.974782228188386E-6	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999939478893036	WITHOUT_CLASSIFICATION	6.0521106963016825E-6	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.999979633474283	WITHOUT_CLASSIFICATION	2.036652571702521E-5	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999999800510742	WITHOUT_CLASSIFICATION	1.9948925845426643E-8	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999892894762	WITHOUT_CLASSIFICATION	1.0710523825405706E-8	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9999097021009355	WITHOUT_CLASSIFICATION	9.029789906443265E-5	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999978525629656	WITHOUT_CLASSIFICATION	2.1474370343313405E-6	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999977777931576	WITHOUT_CLASSIFICATION	2.2222068424716293E-6	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9999981247324241	WITHOUT_CLASSIFICATION	1.8752675759466727E-6	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9999997304403	WITHOUT_CLASSIFICATION	2.6955969992635865E-7	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999995685176514	WITHOUT_CLASSIFICATION	4.314823486261345E-7	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999972254546513	WITHOUT_CLASSIFICATION	2.7745453487342196E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999997522396313	WITHOUT_CLASSIFICATION	2.4776036862094757E-7	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.9999900165689967	WITHOUT_CLASSIFICATION	9.98343100329893E-6	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999996347309317	WITHOUT_CLASSIFICATION	3.652690683559522E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989571759014	WITHOUT_CLASSIFICATION	1.042824098646734E-6	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999996347309317	WITHOUT_CLASSIFICATION	3.652690683559522E-7	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9999962093665363	WITHOUT_CLASSIFICATION	3.7906334637065467E-6	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9998947009431144	WITHOUT_CLASSIFICATION	1.0529905688565802E-4	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9999372024473128	WITHOUT_CLASSIFICATION	6.279755268730464E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999998970881925	WITHOUT_CLASSIFICATION	1.0291180753332281E-7	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.999999981865318	WITHOUT_CLASSIFICATION	1.813468204592915E-8	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999847506370698	WITHOUT_CLASSIFICATION	1.524936293007531E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999847506370698	WITHOUT_CLASSIFICATION	1.524936293007531E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999995589809013	WITHOUT_CLASSIFICATION	4.4101909875162773E-7	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9999889170735254	WITHOUT_CLASSIFICATION	1.108292647446816E-5	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999997675656054	WITHOUT_CLASSIFICATION	2.3243439467253064E-7	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999998932825053	WITHOUT_CLASSIFICATION	1.0671749470582764E-7	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999997910096375	WITHOUT_CLASSIFICATION	2.089903624141153E-7	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9999806166401328	WITHOUT_CLASSIFICATION	1.938335986717142E-5	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.999999981865318	WITHOUT_CLASSIFICATION	1.813468204592915E-8	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999847506370698	WITHOUT_CLASSIFICATION	1.524936293007531E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999847506370698	WITHOUT_CLASSIFICATION	1.524936293007531E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.9999995589809013	WITHOUT_CLASSIFICATION	4.4101909875162773E-7	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999999459672446	WITHOUT_CLASSIFICATION	5.4032755335785926E-8	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999998519131342	WITHOUT_CLASSIFICATION	1.480868658945161E-7	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9999924313695298	WITHOUT_CLASSIFICATION	7.568630470338535E-6	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999899365015438	WITHOUT_CLASSIFICATION	1.0063498456169915E-5	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999987952172746	WITHOUT_CLASSIFICATION	1.2047827253973258E-6	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9999940024320598	WITHOUT_CLASSIFICATION	5.997567940188015E-6	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999999389185966	WITHOUT_CLASSIFICATION	6.108140339667879E-8	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999934666485933	WITHOUT_CLASSIFICATION	6.53335140663464E-6	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999934666485933	WITHOUT_CLASSIFICATION	6.53335140663464E-6	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.999995061457315	WITHOUT_CLASSIFICATION	4.938542685096187E-6	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9999992040823089	WITHOUT_CLASSIFICATION	7.95917691116561E-7	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999996916058643	WITHOUT_CLASSIFICATION	3.08394135693676E-7	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9999943779692633	WITHOUT_CLASSIFICATION	5.622030736804536E-6	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999995915310234	WITHOUT_CLASSIFICATION	4.084689765323796E-7	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9999657141537086	WITHOUT_CLASSIFICATION	3.428584629141191E-5	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999957480852771	WITHOUT_CLASSIFICATION	4.2519147228588115E-6	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.999999851386886	WITHOUT_CLASSIFICATION	1.4861311411279157E-7	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999737900485753	WITHOUT_CLASSIFICATION	2.6209951424681256E-5	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9999593535860679	WITHOUT_CLASSIFICATION	4.064641393211454E-5	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999999955890205	WITHOUT_CLASSIFICATION	4.410979494576741E-9	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999996309765381	WITHOUT_CLASSIFICATION	3.690234619398751E-7	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999999866160607	WITHOUT_CLASSIFICATION	1.3383939208952756E-8	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9999831274408593	WITHOUT_CLASSIFICATION	1.6872559140643305E-5	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9999950378102946	WITHOUT_CLASSIFICATION	4.962189705410058E-6	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999996609445178	WITHOUT_CLASSIFICATION	3.3905548225960616E-7	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999742166960301	WITHOUT_CLASSIFICATION	2.5783303969883413E-5	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999961857497758	WITHOUT_CLASSIFICATION	3.8142502242205165E-6	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999894433532902	WITHOUT_CLASSIFICATION	1.0556646709919261E-5	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999997013538143	WITHOUT_CLASSIFICATION	2.986461857440196E-7	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.999999870648728	WITHOUT_CLASSIFICATION	1.2935127203463646E-7	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999957027771063	WITHOUT_CLASSIFICATION	4.297222893730288E-6	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9999997265199166	WITHOUT_CLASSIFICATION	2.7348008331981086E-7	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.999999836636099	WITHOUT_CLASSIFICATION	1.6336390092891648E-7	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.999999450347188	WITHOUT_CLASSIFICATION	5.496528120771818E-7	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999982254040529	WITHOUT_CLASSIFICATION	1.7745959471606548E-6	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999999305991946	WITHOUT_CLASSIFICATION	6.940080539386983E-8	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9999956502203885	WITHOUT_CLASSIFICATION	4.3497796114405445E-6	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999944363287303	WITHOUT_CLASSIFICATION	5.563671269736574E-6	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.999978064459075	WITHOUT_CLASSIFICATION	2.1935540925031153E-5	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999992399777815	WITHOUT_CLASSIFICATION	7.600222185628129E-7	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999968859870271	WITHOUT_CLASSIFICATION	3.1140129728648014E-6	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9999956868154769	WITHOUT_CLASSIFICATION	4.313184523068084E-6	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999999649327993	WITHOUT_CLASSIFICATION	3.5067200665086336E-8	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.999993932500606	WITHOUT_CLASSIFICATION	6.067499393988058E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.999993932500606	WITHOUT_CLASSIFICATION	6.067499393988058E-6	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9999996875330437	WITHOUT_CLASSIFICATION	3.1246695636877757E-7	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999983532044999	WITHOUT_CLASSIFICATION	1.6467955000389794E-6	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999997125339112	WITHOUT_CLASSIFICATION	2.8746608890260235E-7	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999997049381412	WITHOUT_CLASSIFICATION	2.9506185882987694E-7	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999987693202612	WITHOUT_CLASSIFICATION	1.2306797386955635E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999772058367	WITHOUT_CLASSIFICATION	2.279416328547781E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.999999698559028	WITHOUT_CLASSIFICATION	3.0144097192083594E-7	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999767921544644	WITHOUT_CLASSIFICATION	2.3207845535531548E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999919196415018	WITHOUT_CLASSIFICATION	8.080358498132077E-6	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9997932468623233	WITHOUT_CLASSIFICATION	2.0675313767671113E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.999999931657142	WITHOUT_CLASSIFICATION	6.834285806350217E-8	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999998126422922	WITHOUT_CLASSIFICATION	1.8735770767706589E-7	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9999982156127386	WITHOUT_CLASSIFICATION	1.7843872613175398E-6	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9999932839077459	WITHOUT_CLASSIFICATION	6.716092254173895E-6	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9998226667349102	WITHOUT_CLASSIFICATION	1.7733326508980263E-4	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.883551221806218	WITHOUT_CLASSIFICATION	0.11644877819378205	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999974825565878	WITHOUT_CLASSIFICATION	2.517443412087954E-6	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999904371836927	WITHOUT_CLASSIFICATION	9.562816307264534E-6	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9999925288820501	WITHOUT_CLASSIFICATION	7.471117949852981E-6	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9999972220600386	WITHOUT_CLASSIFICATION	2.777939961381628E-6	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999983705291584	WITHOUT_CLASSIFICATION	1.6294708415859166E-6	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999999185216438	WITHOUT_CLASSIFICATION	8.147835614167159E-8	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9996082082572916	WITHOUT_CLASSIFICATION	3.9179174270842244E-4	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999736955333004	WITHOUT_CLASSIFICATION	2.6304466699684907E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999990302546	WITHOUT_CLASSIFICATION	9.69745428119247E-10	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999999755159228	WITHOUT_CLASSIFICATION	2.44840772204987E-8	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999998441148931	WITHOUT_CLASSIFICATION	1.5588510685292532E-7	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999998949067629	WITHOUT_CLASSIFICATION	1.0509323712544858E-7	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999994791538435	WITHOUT_CLASSIFICATION	5.208461564752935E-7	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999959111616509	WITHOUT_CLASSIFICATION	4.088838349087936E-6	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999802646981109	WITHOUT_CLASSIFICATION	1.973530188908091E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9999972396821047	WITHOUT_CLASSIFICATION	2.7603178952303966E-6	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999981664547217	WITHOUT_CLASSIFICATION	1.8335452781620876E-6	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999999729674582	WITHOUT_CLASSIFICATION	2.703254177550607E-8	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999930849379352	WITHOUT_CLASSIFICATION	6.915062064876999E-6	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9999963865228647	WITHOUT_CLASSIFICATION	3.6134771353448106E-6	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999476901407088	WITHOUT_CLASSIFICATION	5.230985929116247E-5	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9999955611605857	WITHOUT_CLASSIFICATION	4.438839414248188E-6	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999998998129982	WITHOUT_CLASSIFICATION	1.0018700184520073E-7	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.999999932131277	WITHOUT_CLASSIFICATION	6.786872297826628E-8	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999294707720168	WITHOUT_CLASSIFICATION	7.052922798319626E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999999126227567	WITHOUT_CLASSIFICATION	8.73772434405177E-8	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9999997316369359	WITHOUT_CLASSIFICATION	2.6836306414148436E-7	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999279216169603	WITHOUT_CLASSIFICATION	7.207838303966804E-5	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999971645033428	WITHOUT_CLASSIFICATION	2.835496657281257E-6	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.99990002390381	WITHOUT_CLASSIFICATION	9.99760961899429E-5	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999970831445895	WITHOUT_CLASSIFICATION	2.9168554105747464E-6	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9999999957464314	WITHOUT_CLASSIFICATION	4.253568576685097E-9	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999970831445895	WITHOUT_CLASSIFICATION	2.9168554105747464E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998965771666499	WITHOUT_CLASSIFICATION	1.0342283335011857E-4	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9324065149238212	WITHOUT_CLASSIFICATION	0.0675934850761788	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999999568123779	WITHOUT_CLASSIFICATION	4.3187622244445365E-8	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999999517123724	WITHOUT_CLASSIFICATION	4.828762764107053E-8	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999994992001338	WITHOUT_CLASSIFICATION	5.007998662768211E-7	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999999897515486	WITHOUT_CLASSIFICATION	1.0248451396381341E-8	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999992545441908	WITHOUT_CLASSIFICATION	7.454558093160223E-7	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9999972030269885	WITHOUT_CLASSIFICATION	2.7969730114906003E-6	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9999627867050397	WITHOUT_CLASSIFICATION	3.7213294960320374E-5	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.999999656705597	WITHOUT_CLASSIFICATION	3.4329440309307784E-7	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9999892489168732	WITHOUT_CLASSIFICATION	1.0751083126807276E-5	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999990336249575	WITHOUT_CLASSIFICATION	9.663750425591454E-7	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999983253152225	WITHOUT_CLASSIFICATION	1.6746847775147694E-6	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.999431462055019	WITHOUT_CLASSIFICATION	5.685379449810626E-4	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9999987965777543	WITHOUT_CLASSIFICATION	1.203422245764673E-6	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999916082610384	WITHOUT_CLASSIFICATION	8.391738961588462E-6	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999307941003437	WITHOUT_CLASSIFICATION	6.920589965624921E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9999931639900956	WITHOUT_CLASSIFICATION	6.836009904349077E-6	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999992768531193	WITHOUT_CLASSIFICATION	7.231468807233192E-7	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999887380967712	WITHOUT_CLASSIFICATION	1.126190322870898E-5	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999998857505062	WITHOUT_CLASSIFICATION	1.1424949369850564E-7	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.999998786045679	WITHOUT_CLASSIFICATION	1.2139543209800383E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999992545441908	WITHOUT_CLASSIFICATION	7.454558093160223E-7	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999998707900187	WITHOUT_CLASSIFICATION	1.2920998124185222E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999872491166446	WITHOUT_CLASSIFICATION	1.2750883355274108E-5	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999872491166446	WITHOUT_CLASSIFICATION	1.2750883355274108E-5	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999925982946675	WITHOUT_CLASSIFICATION	7.4017053324502675E-6	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999994462417064	WITHOUT_CLASSIFICATION	5.537582935052032E-7	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999994462417064	WITHOUT_CLASSIFICATION	5.537582935052032E-7	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999447905404145	WITHOUT_CLASSIFICATION	5.5209459585606537E-5	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999447905404145	WITHOUT_CLASSIFICATION	5.5209459585606537E-5	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9824805075372771	WITHOUT_CLASSIFICATION	0.017519492462722865	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999997211341061	WITHOUT_CLASSIFICATION	2.7886589387887375E-7	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999880327907	WITHOUT_CLASSIFICATION	1.1967209298076578E-8	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999986636742622	WITHOUT_CLASSIFICATION	1.3363257377922974E-6	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999991920345714	WITHOUT_CLASSIFICATION	8.079654285726304E-7	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999994637726487	WITHOUT_CLASSIFICATION	5.362273513263181E-7	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9999341631533912	WITHOUT_CLASSIFICATION	6.583684660875426E-5	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999709932397941	WITHOUT_CLASSIFICATION	2.9006760205963046E-5	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999998792058428	WITHOUT_CLASSIFICATION	1.2079415729095828E-7	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9999981934093046	WITHOUT_CLASSIFICATION	1.806590695394014E-6	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999989536378877	WITHOUT_CLASSIFICATION	1.0463621123009862E-6	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.999998558658711	WITHOUT_CLASSIFICATION	1.44134128900847E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999959130322602	WITHOUT_CLASSIFICATION	4.086967739844376E-6	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999976035010101	WITHOUT_CLASSIFICATION	2.396498989874424E-6	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.99998522424762	WITHOUT_CLASSIFICATION	1.4775752379956195E-5	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999928666695584	WITHOUT_CLASSIFICATION	7.133330441500061E-6	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999982462169269	WITHOUT_CLASSIFICATION	1.7537830731084443E-6	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999980230611359	WITHOUT_CLASSIFICATION	1.9769388641204905E-6	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999980230611359	WITHOUT_CLASSIFICATION	1.9769388641204905E-6	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999998461022241	WITHOUT_CLASSIFICATION	1.5389777578105329E-7	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9999023787642374	WITHOUT_CLASSIFICATION	9.762123576265283E-5	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999984269260526	WITHOUT_CLASSIFICATION	1.5730739475060508E-6	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9998964391755067	WITHOUT_CLASSIFICATION	1.0356082449327964E-4	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999961954295359	WITHOUT_CLASSIFICATION	3.804570464002553E-6	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999973218026582	WITHOUT_CLASSIFICATION	2.6781973416891456E-6	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999999837305326	WITHOUT_CLASSIFICATION	1.6269467391352877E-8	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999975792090712	WITHOUT_CLASSIFICATION	2.4207909288056286E-6	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9999980681738904	WITHOUT_CLASSIFICATION	1.9318261096283075E-6	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999993397979937	WITHOUT_CLASSIFICATION	6.602020063741784E-7	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999999936051882	WITHOUT_CLASSIFICATION	6.394811695012565E-9	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999989222531468	WITHOUT_CLASSIFICATION	1.0777468531704428E-6	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.999994827944926	WITHOUT_CLASSIFICATION	5.1720550739974024E-6	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999998697394152	WITHOUT_CLASSIFICATION	1.3026058471092442E-7	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.999996162437782	WITHOUT_CLASSIFICATION	3.837562217960983E-6	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999997207199673	WITHOUT_CLASSIFICATION	2.7928003270849844E-7	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999777831794948	WITHOUT_CLASSIFICATION	2.221682050518319E-5	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999604559250259	WITHOUT_CLASSIFICATION	3.95440749740778E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9998310590468514	WITHOUT_CLASSIFICATION	1.689409531485792E-4	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.999979947774398	WITHOUT_CLASSIFICATION	2.0052225601926274E-5	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9998165741489351	WITHOUT_CLASSIFICATION	1.834258510649307E-4	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999855875787522	WITHOUT_CLASSIFICATION	1.4412421247911802E-5	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.999994464212919	WITHOUT_CLASSIFICATION	5.535787080948713E-6	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999995082361735	WITHOUT_CLASSIFICATION	4.917638266206008E-7	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999999448477473	WITHOUT_CLASSIFICATION	5.515225279743014E-8	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.999999959059572	WITHOUT_CLASSIFICATION	4.094042804235845E-8	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999997631477408	WITHOUT_CLASSIFICATION	2.3685225929546033E-7	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999999467148674	WITHOUT_CLASSIFICATION	5.328513268075776E-8	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999792917586293	WITHOUT_CLASSIFICATION	2.070824137069872E-5	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.99999752979301	WITHOUT_CLASSIFICATION	2.470206989934381E-6	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.999999908502582	WITHOUT_CLASSIFICATION	9.149741795168837E-8	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999996724593663	WITHOUT_CLASSIFICATION	3.275406336419176E-7	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999949123357984	WITHOUT_CLASSIFICATION	5.087664201529141E-6	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999933293527952	WITHOUT_CLASSIFICATION	6.670647204831505E-6	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9999947686511572	WITHOUT_CLASSIFICATION	5.231348842839094E-6	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9999993706626117	WITHOUT_CLASSIFICATION	6.293373883653801E-7	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9999297092614877	WITHOUT_CLASSIFICATION	7.02907385122995E-5	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9999989365808721	WITHOUT_CLASSIFICATION	1.06341912778523E-6	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999998433082424	WITHOUT_CLASSIFICATION	1.5669175750974597E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999981777703237	WITHOUT_CLASSIFICATION	1.8222296763493759E-6	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999985696616819	WITHOUT_CLASSIFICATION	1.4303383181413465E-6	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999999031428028	WITHOUT_CLASSIFICATION	9.685719718472835E-8	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999891056580131	WITHOUT_CLASSIFICATION	1.0894341986847406E-5	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.999999252017795	WITHOUT_CLASSIFICATION	7.479822049823813E-7	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9949005587532839	WITHOUT_CLASSIFICATION	0.005099441246716161	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999999950980175	WITHOUT_CLASSIFICATION	4.901982531635892E-9	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999961528154654	WITHOUT_CLASSIFICATION	3.847184534636046E-6	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.999999252017795	WITHOUT_CLASSIFICATION	7.479822049823813E-7	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999977495808072	WITHOUT_CLASSIFICATION	2.2504191928736864E-6	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999998402376425	WITHOUT_CLASSIFICATION	1.5976235737698884E-7	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999998144745907	WITHOUT_CLASSIFICATION	1.855254092723683E-7	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9999320692357434	WITHOUT_CLASSIFICATION	6.79307642566102E-5	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999960904013776	WITHOUT_CLASSIFICATION	3.909598622445154E-6	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9949005587532839	WITHOUT_CLASSIFICATION	0.005099441246716161	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999961528154654	WITHOUT_CLASSIFICATION	3.847184534636046E-6	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.999991326734484	WITHOUT_CLASSIFICATION	8.67326551606665E-6	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999982670639133	WITHOUT_CLASSIFICATION	1.7329360867029412E-6	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999812366683042	WITHOUT_CLASSIFICATION	1.8763331695835264E-5	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999994283010482	WITHOUT_CLASSIFICATION	5.716989518048183E-7	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999993785680816	WITHOUT_CLASSIFICATION	6.21431918395872E-6	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999985538953328	WITHOUT_CLASSIFICATION	1.4461046672409693E-6	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9999597841425603	WITHOUT_CLASSIFICATION	4.021585743980067E-5	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999982796621348	WITHOUT_CLASSIFICATION	1.72033786515285E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999916224287166	WITHOUT_CLASSIFICATION	8.377571283404839E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999916224287166	WITHOUT_CLASSIFICATION	8.377571283404839E-6	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9999959926077336	WITHOUT_CLASSIFICATION	4.0073922663159455E-6	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999939106685645	WITHOUT_CLASSIFICATION	6.089331435537611E-6	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999946575202054	WITHOUT_CLASSIFICATION	5.342479794528706E-6	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9995877018321971	WITHOUT_CLASSIFICATION	4.1229816780287475E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999865710501	WITHOUT_CLASSIFICATION	1.3428949898688004E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999999120090812	WITHOUT_CLASSIFICATION	8.799091873198865E-8	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995336475015	WITHOUT_CLASSIFICATION	4.663524984602628E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995336475015	WITHOUT_CLASSIFICATION	4.663524984602628E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998664073468	WITHOUT_CLASSIFICATION	1.3359265315886893E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998353598679	WITHOUT_CLASSIFICATION	1.6464013201164824E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998353598679	WITHOUT_CLASSIFICATION	1.6464013201164824E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999987629828716	WITHOUT_CLASSIFICATION	1.2370171284720354E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999437849887	WITHOUT_CLASSIFICATION	5.621501127605708E-8	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999437849887	WITHOUT_CLASSIFICATION	5.621501127605708E-8	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.999999469010636	WITHOUT_CLASSIFICATION	5.309893641183336E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999999287472118	WITHOUT_CLASSIFICATION	7.125278827782111E-8	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999995921962157	WITHOUT_CLASSIFICATION	4.078037842057799E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999998531247801	WITHOUT_CLASSIFICATION	1.4687521991176484E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999896598637183	WITHOUT_CLASSIFICATION	1.0340136281776428E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999982770333233	WITHOUT_CLASSIFICATION	1.7229666766552356E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999998188407317	WITHOUT_CLASSIFICATION	1.811592681557248E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998576997695	WITHOUT_CLASSIFICATION	1.4230023051106613E-7	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999996446731555	WITHOUT_CLASSIFICATION	3.553268444428894E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.999999851139799	WITHOUT_CLASSIFICATION	1.4886020097055418E-7	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9999900706794442	WITHOUT_CLASSIFICATION	9.929320555764727E-6	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9998601822533355	WITHOUT_CLASSIFICATION	1.3981774666436964E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.999984584830903	WITHOUT_CLASSIFICATION	1.541516909696477E-5	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999955410771925	WITHOUT_CLASSIFICATION	4.458922807565042E-6	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9999696167170202	WITHOUT_CLASSIFICATION	3.0383282979803683E-5	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.999999884620568	WITHOUT_CLASSIFICATION	1.153794319422649E-7	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999999797838511	WITHOUT_CLASSIFICATION	2.02161488506815E-8	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999998064647282	WITHOUT_CLASSIFICATION	1.9353527193413657E-7	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999997072004639	WITHOUT_CLASSIFICATION	2.927995360607578E-7	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9999864344266312	WITHOUT_CLASSIFICATION	1.3565573368823287E-5	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999975515388914	WITHOUT_CLASSIFICATION	2.448461108554965E-6	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.999996079178151	WITHOUT_CLASSIFICATION	3.920821848976537E-6	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9999953536971173	WITHOUT_CLASSIFICATION	4.646302882659459E-6	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999847890853785	WITHOUT_CLASSIFICATION	1.5210914621582594E-5	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9999938027379262	WITHOUT_CLASSIFICATION	6.197262073792128E-6	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999746392776815	WITHOUT_CLASSIFICATION	2.5360722318591263E-5	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.999983162225075	WITHOUT_CLASSIFICATION	1.6837774924940116E-5	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9999882888311485	WITHOUT_CLASSIFICATION	1.1711168851434095E-5	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999851290136113	WITHOUT_CLASSIFICATION	1.4870986388645756E-5	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999972389580842	WITHOUT_CLASSIFICATION	2.7610419157272163E-6	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999998179836129	WITHOUT_CLASSIFICATION	1.8201638705602676E-7	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9999093184856315	WITHOUT_CLASSIFICATION	9.068151436850847E-5	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9999516245906168	WITHOUT_CLASSIFICATION	4.837540938325233E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999999287472118	WITHOUT_CLASSIFICATION	7.125278827782111E-8	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999995921962157	WITHOUT_CLASSIFICATION	4.078037842057799E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999998531247801	WITHOUT_CLASSIFICATION	1.4687521991176484E-7	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999982770333233	WITHOUT_CLASSIFICATION	1.7229666766552356E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999996023711366	WITHOUT_CLASSIFICATION	3.976288634123669E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998576997695	WITHOUT_CLASSIFICATION	1.4230023051106613E-7	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999996446731555	WITHOUT_CLASSIFICATION	3.553268444428894E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.999999851139799	WITHOUT_CLASSIFICATION	1.4886020097055418E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999934666485933	WITHOUT_CLASSIFICATION	6.53335140663464E-6	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9999638255899659	WITHOUT_CLASSIFICATION	3.617441003419953E-5	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999998154604358	WITHOUT_CLASSIFICATION	1.845395640888042E-7	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9999454865493269	WITHOUT_CLASSIFICATION	5.451345067311372E-5	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9998739447681185	WITHOUT_CLASSIFICATION	1.2605523188152255E-4	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.999989997199345	WITHOUT_CLASSIFICATION	1.0002800654942052E-5	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999990597701879	WITHOUT_CLASSIFICATION	9.402298121750631E-7	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999990597701879	WITHOUT_CLASSIFICATION	9.402298121750631E-7	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.999919752925734	WITHOUT_CLASSIFICATION	8.024707426599927E-5	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999427963243664	WITHOUT_CLASSIFICATION	5.720367563354412E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999145082314655	WITHOUT_CLASSIFICATION	8.549176853439689E-5	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999974414922602	WITHOUT_CLASSIFICATION	2.558507739732707E-6	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999974414922602	WITHOUT_CLASSIFICATION	2.558507739732707E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999842718407913	WITHOUT_CLASSIFICATION	1.572815920863522E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999842718407913	WITHOUT_CLASSIFICATION	1.572815920863522E-5	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999999657985917	WITHOUT_CLASSIFICATION	3.420140827780691E-8	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999999548543794	WITHOUT_CLASSIFICATION	4.5145620613232594E-8	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999998781180138	WITHOUT_CLASSIFICATION	1.2188198617490831E-7	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999999898240645	WITHOUT_CLASSIFICATION	1.0175935581231349E-8	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.999979713541148	WITHOUT_CLASSIFICATION	2.028645885193647E-5	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999311662983635	WITHOUT_CLASSIFICATION	6.88337016365148E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9999898594014078	WITHOUT_CLASSIFICATION	1.0140598592257024E-5	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.999983710544156	WITHOUT_CLASSIFICATION	1.6289455843931828E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999975992889816	WITHOUT_CLASSIFICATION	2.4007110184103706E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999779105303693	WITHOUT_CLASSIFICATION	2.208946963067004E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999779105303693	WITHOUT_CLASSIFICATION	2.208946963067004E-5	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9975522774569062	WITHOUT_CLASSIFICATION	0.00244772254309382	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9996009071594757	WITHOUT_CLASSIFICATION	3.9909284052422675E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9996009071594757	WITHOUT_CLASSIFICATION	3.9909284052422675E-4	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9996009071594757	WITHOUT_CLASSIFICATION	3.9909284052422675E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999261403831089	WITHOUT_CLASSIFICATION	7.385961689110982E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999261403831089	WITHOUT_CLASSIFICATION	7.385961689110982E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999819526660143	WITHOUT_CLASSIFICATION	1.804733398569852E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999819526660143	WITHOUT_CLASSIFICATION	1.804733398569852E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999819526660143	WITHOUT_CLASSIFICATION	1.804733398569852E-5	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999982871376314	WITHOUT_CLASSIFICATION	1.7128623686614055E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999982871376314	WITHOUT_CLASSIFICATION	1.7128623686614055E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999982871376314	WITHOUT_CLASSIFICATION	1.7128623686614055E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999982138631	WITHOUT_CLASSIFICATION	1.7861370205783713E-9	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999982138631	WITHOUT_CLASSIFICATION	1.7861370205783713E-9	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999992599978719	WITHOUT_CLASSIFICATION	7.400021281963494E-7	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999992599978719	WITHOUT_CLASSIFICATION	7.400021281963494E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999987263194511	WITHOUT_CLASSIFICATION	1.2736805488047636E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999987263194511	WITHOUT_CLASSIFICATION	1.2736805488047636E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999973641257239	WITHOUT_CLASSIFICATION	2.6358742759721884E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999973641257239	WITHOUT_CLASSIFICATION	2.6358742759721884E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999221951991	WITHOUT_CLASSIFICATION	7.780480089059314E-8	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999221951991	WITHOUT_CLASSIFICATION	7.780480089059314E-8	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999969544574241	WITHOUT_CLASSIFICATION	3.0455425758621566E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999969544574241	WITHOUT_CLASSIFICATION	3.0455425758621566E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999839547679286	WITHOUT_CLASSIFICATION	1.6045232071399285E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999839547679286	WITHOUT_CLASSIFICATION	1.6045232071399285E-5	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999982138631	WITHOUT_CLASSIFICATION	1.7861370205783713E-9	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999992599978719	WITHOUT_CLASSIFICATION	7.400021281963494E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999987263194511	WITHOUT_CLASSIFICATION	1.2736805488047636E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999221951991	WITHOUT_CLASSIFICATION	7.780480089059314E-8	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999969544574241	WITHOUT_CLASSIFICATION	3.0455425758621566E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999839547679286	WITHOUT_CLASSIFICATION	1.6045232071399285E-5	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.99999185097808	WITHOUT_CLASSIFICATION	8.149021919983806E-6	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.999997988668502	WITHOUT_CLASSIFICATION	2.011331498063485E-6	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9999573559241568	WITHOUT_CLASSIFICATION	4.2644075843193176E-5	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9995846015049483	WITHOUT_CLASSIFICATION	4.153984950515836E-4	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999949006464085	WITHOUT_CLASSIFICATION	5.099353591543225E-6	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9999928796207378	WITHOUT_CLASSIFICATION	7.120379262314611E-6	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999999353324257	WITHOUT_CLASSIFICATION	6.46675742926522E-8	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9999985729376728	WITHOUT_CLASSIFICATION	1.4270623272743553E-6	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999991910082225	WITHOUT_CLASSIFICATION	8.089917773612998E-7	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999994614150297	WITHOUT_CLASSIFICATION	5.385849702659073E-7	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999922955445222	WITHOUT_CLASSIFICATION	7.704455477746629E-6	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9999987724837978	WITHOUT_CLASSIFICATION	1.2275162021727896E-6	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.999995295401891	WITHOUT_CLASSIFICATION	4.704598109068162E-6	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999992174976988	WITHOUT_CLASSIFICATION	7.825023011474274E-7	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999927593363476	WITHOUT_CLASSIFICATION	7.240663652333396E-6	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999953394393964	WITHOUT_CLASSIFICATION	4.660560603573617E-6	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999921996440935	WITHOUT_CLASSIFICATION	7.800355906610196E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9998038218977358	WITHOUT_CLASSIFICATION	1.9617810226431966E-4	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.999993505752956	WITHOUT_CLASSIFICATION	6.494247044052889E-6	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9999876642935981	WITHOUT_CLASSIFICATION	1.2335706401925352E-5	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.999999732128617	WITHOUT_CLASSIFICATION	2.6787138297664584E-7	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999684089972909	WITHOUT_CLASSIFICATION	3.159100270912715E-5	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999989034925588	WITHOUT_CLASSIFICATION	1.0965074411377E-6	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999853902517548	WITHOUT_CLASSIFICATION	1.4609748245093692E-5	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999789517139083	WITHOUT_CLASSIFICATION	2.1048286091825186E-5	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9999650243774111	WITHOUT_CLASSIFICATION	3.497562258896173E-5	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999523112282652	WITHOUT_CLASSIFICATION	4.76887717347321E-5	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9999937054983024	WITHOUT_CLASSIFICATION	6.294501697692481E-6	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.99999968839817	WITHOUT_CLASSIFICATION	3.116018300307485E-7	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999934945077306	WITHOUT_CLASSIFICATION	6.50549226938825E-6	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9999975278085889	WITHOUT_CLASSIFICATION	2.4721914111822837E-6	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999528187752376	WITHOUT_CLASSIFICATION	4.7181224762354766E-5	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999736590355288	WITHOUT_CLASSIFICATION	2.6340964471229567E-5	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999736590355288	WITHOUT_CLASSIFICATION	2.6340964471229567E-5	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9999954172118038	WITHOUT_CLASSIFICATION	4.582788196189063E-6	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9999715063234643	WITHOUT_CLASSIFICATION	2.8493676535787834E-5	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9999468990642814	WITHOUT_CLASSIFICATION	5.310093571865452E-5	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9999999651545685	WITHOUT_CLASSIFICATION	3.484543147968497E-8	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999997791045757	WITHOUT_CLASSIFICATION	2.208954243827075E-7	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999996493664771	WITHOUT_CLASSIFICATION	3.5063352284618213E-7	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9999967609695514	WITHOUT_CLASSIFICATION	3.2390304487455797E-6	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9991790226185424	WITHOUT_CLASSIFICATION	8.209773814574931E-4	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9999993315377947	WITHOUT_CLASSIFICATION	6.684622053070291E-7	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9999980258410137	WITHOUT_CLASSIFICATION	1.974158986284987E-6	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9999961248996285	WITHOUT_CLASSIFICATION	3.875100371547096E-6	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.999998363204982	WITHOUT_CLASSIFICATION	1.6367950179873947E-6	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999847876685305	WITHOUT_CLASSIFICATION	1.5212331469381248E-5	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999847876685305	WITHOUT_CLASSIFICATION	1.5212331469381248E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999966508666556	WITHOUT_CLASSIFICATION	3.3491333444959938E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999966508666556	WITHOUT_CLASSIFICATION	3.3491333444959938E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999966508666556	WITHOUT_CLASSIFICATION	3.3491333444959938E-6	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.999965477235198	WITHOUT_CLASSIFICATION	3.452276480204617E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999893741310419	WITHOUT_CLASSIFICATION	1.0625868958015383E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999985705547539	WITHOUT_CLASSIFICATION	1.429445246107465E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999985705547539	WITHOUT_CLASSIFICATION	1.429445246107465E-6	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.999990778440127	WITHOUT_CLASSIFICATION	9.221559872992077E-6	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999979818119985	WITHOUT_CLASSIFICATION	2.018188001531614E-6	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999987874147884	WITHOUT_CLASSIFICATION	1.2125852115056358E-6	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999971933047337	WITHOUT_CLASSIFICATION	2.806695266407536E-6	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9999969504152294	WITHOUT_CLASSIFICATION	3.049584770469795E-6	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999966817847751	WITHOUT_CLASSIFICATION	3.3182152248508315E-6	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999966307277263	WITHOUT_CLASSIFICATION	3.369272273817133E-6	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999999440765072	WITHOUT_CLASSIFICATION	5.592349272271703E-8	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999990328761156	WITHOUT_CLASSIFICATION	9.671238844514568E-7	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9996326191119028	WITHOUT_CLASSIFICATION	3.673808880971195E-4	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999973575749883	WITHOUT_CLASSIFICATION	2.6424250117025813E-6	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.999992085699227	WITHOUT_CLASSIFICATION	7.91430077291956E-6	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999997340884246	WITHOUT_CLASSIFICATION	2.659115753353203E-7	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9999766995843189	WITHOUT_CLASSIFICATION	2.3300415681042793E-5	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999897693982749	WITHOUT_CLASSIFICATION	1.0230601725187452E-5	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.999998127666895	WITHOUT_CLASSIFICATION	1.8723331050763164E-6	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999999445755536	WITHOUT_CLASSIFICATION	5.542444646582878E-8	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999961195588529	WITHOUT_CLASSIFICATION	3.880441147052697E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999959528925562	WITHOUT_CLASSIFICATION	4.0471074438247346E-6	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9999988802251939	WITHOUT_CLASSIFICATION	1.1197748060532493E-6	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9998900021511817	WITHOUT_CLASSIFICATION	1.0999784881824934E-4	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999887544435379	WITHOUT_CLASSIFICATION	1.1245556462120828E-5	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9993674288190706	WITHOUT_CLASSIFICATION	6.325711809293034E-4	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999980074259747	WITHOUT_CLASSIFICATION	1.992574025314745E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999980074259747	WITHOUT_CLASSIFICATION	1.992574025314745E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999980074259747	WITHOUT_CLASSIFICATION	1.992574025314745E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999928288360064	WITHOUT_CLASSIFICATION	7.1711639935339266E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999928288360064	WITHOUT_CLASSIFICATION	7.1711639935339266E-6	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9999977473508123	WITHOUT_CLASSIFICATION	2.2526491876766934E-6	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999975802413236	WITHOUT_CLASSIFICATION	2.419758676429375E-6	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999975802413236	WITHOUT_CLASSIFICATION	2.419758676429375E-6	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.999985129236767	WITHOUT_CLASSIFICATION	1.4870763232910195E-5	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9999998211047162	WITHOUT_CLASSIFICATION	1.7889528382758587E-7	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9999977473508123	WITHOUT_CLASSIFICATION	2.2526491876766934E-6	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999998609387843	WITHOUT_CLASSIFICATION	1.3906121561916935E-7	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999977473508123	WITHOUT_CLASSIFICATION	2.2526491876766934E-6	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.99999805104716	WITHOUT_CLASSIFICATION	1.948952839942922E-6	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.99999805104716	WITHOUT_CLASSIFICATION	1.948952839942922E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999847876685305	WITHOUT_CLASSIFICATION	1.5212331469381248E-5	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9998380350940088	WITHOUT_CLASSIFICATION	1.619649059910957E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9998164072002452	WITHOUT_CLASSIFICATION	1.8359279975485877E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.999640200464871	WITHOUT_CLASSIFICATION	3.5979953512893336E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9997117274828782	WITHOUT_CLASSIFICATION	2.882725171218525E-4	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9997898697522601	WITHOUT_CLASSIFICATION	2.101302477399951E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9996189031561941	WITHOUT_CLASSIFICATION	3.810968438059728E-4	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.999662986129642	WITHOUT_CLASSIFICATION	3.370138703579853E-4	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9998343859146165	WITHOUT_CLASSIFICATION	1.6561408538355924E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9997866514759736	WITHOUT_CLASSIFICATION	2.1334852402633814E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9998423517678562	WITHOUT_CLASSIFICATION	1.576482321437427E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9997932282185327	WITHOUT_CLASSIFICATION	2.0677178146724512E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9998033982747702	WITHOUT_CLASSIFICATION	1.9660172522974038E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9998552823711748	WITHOUT_CLASSIFICATION	1.447176288251804E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9996660999353748	WITHOUT_CLASSIFICATION	3.339000646251897E-4	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9997675347852665	WITHOUT_CLASSIFICATION	2.3246521473350374E-4	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9997390589048176	WITHOUT_CLASSIFICATION	2.609410951823561E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9996325331865908	WITHOUT_CLASSIFICATION	3.674668134090591E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9996752965768303	WITHOUT_CLASSIFICATION	3.247034231697763E-4	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9996295500390185	WITHOUT_CLASSIFICATION	3.7044996098150256E-4	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9998531024583873	WITHOUT_CLASSIFICATION	1.46897541612645E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.999836439548791	WITHOUT_CLASSIFICATION	1.6356045120899095E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9996995686531198	WITHOUT_CLASSIFICATION	3.0043134688026327E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9996661588271976	WITHOUT_CLASSIFICATION	3.3384117280251874E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9995841001910295	WITHOUT_CLASSIFICATION	4.1589980897056194E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9997710401475957	WITHOUT_CLASSIFICATION	2.289598524044577E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9997216096296148	WITHOUT_CLASSIFICATION	2.7839037038521235E-4	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9997688540417485	WITHOUT_CLASSIFICATION	2.311459582514963E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9997641881259169	WITHOUT_CLASSIFICATION	2.358118740829248E-4	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9997493035156964	WITHOUT_CLASSIFICATION	2.506964843036835E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9998354784626649	WITHOUT_CLASSIFICATION	1.6452153733517496E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.9997920261480311	WITHOUT_CLASSIFICATION	2.0797385196901625E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9996776980086546	WITHOUT_CLASSIFICATION	3.223019913454313E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9996381821526841	WITHOUT_CLASSIFICATION	3.618178473159498E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9996539375769112	WITHOUT_CLASSIFICATION	3.460624230887966E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9997781606346644	WITHOUT_CLASSIFICATION	2.2183936533555748E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9998138087176458	WITHOUT_CLASSIFICATION	1.8619128235417413E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9997973040247182	WITHOUT_CLASSIFICATION	2.0269597528171335E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9997227223345208	WITHOUT_CLASSIFICATION	2.772776654792069E-4	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9997481037361635	WITHOUT_CLASSIFICATION	2.518962638364921E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9996917025265946	WITHOUT_CLASSIFICATION	3.0829747340551945E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.999733041705753	WITHOUT_CLASSIFICATION	2.669582942470323E-4	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9997615658252891	WITHOUT_CLASSIFICATION	2.384341747108921E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9998207473669442	WITHOUT_CLASSIFICATION	1.7925263305579404E-4	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9997949659297524	WITHOUT_CLASSIFICATION	2.0503407024759855E-4	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.999844788344337	WITHOUT_CLASSIFICATION	1.552116556629716E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9996507236263483	WITHOUT_CLASSIFICATION	3.4927637365174657E-4	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9996273884368422	WITHOUT_CLASSIFICATION	3.726115631578067E-4	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9997868009481314	WITHOUT_CLASSIFICATION	2.1319905186863335E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9996564846963825	WITHOUT_CLASSIFICATION	3.435153036175452E-4	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9996609218882163	WITHOUT_CLASSIFICATION	3.3907811178367605E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9995337421204636	WITHOUT_CLASSIFICATION	4.662578795363375E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9997363330122975	WITHOUT_CLASSIFICATION	2.636669877025813E-4	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9997782716016448	WITHOUT_CLASSIFICATION	2.2172839835515344E-4	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9998847166783918	WITHOUT_CLASSIFICATION	1.1528332160817466E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9997508940043618	WITHOUT_CLASSIFICATION	2.491059956382138E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9997163878908204	WITHOUT_CLASSIFICATION	2.8361210917958446E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9997863208468812	WITHOUT_CLASSIFICATION	2.1367915311880576E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.999628732794878	WITHOUT_CLASSIFICATION	3.712672051220114E-4	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9997554990998028	WITHOUT_CLASSIFICATION	2.4450090019714765E-4	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9998055121359787	WITHOUT_CLASSIFICATION	1.9448786402124102E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.999738919804439	WITHOUT_CLASSIFICATION	2.6108019556106643E-4	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9997625136311709	WITHOUT_CLASSIFICATION	2.374863688292495E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9998609805029882	WITHOUT_CLASSIFICATION	1.3901949701174937E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.9997847870069392	WITHOUT_CLASSIFICATION	2.152129930608959E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9995824919348592	WITHOUT_CLASSIFICATION	4.1750806514086186E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9996882205856393	WITHOUT_CLASSIFICATION	3.117794143606974E-4	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9997514795396223	WITHOUT_CLASSIFICATION	2.4852046037776256E-4	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9996566370229565	WITHOUT_CLASSIFICATION	3.433629770435147E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9997989715287802	WITHOUT_CLASSIFICATION	2.010284712197901E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9996869937177336	WITHOUT_CLASSIFICATION	3.1300628226633775E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9996842684449658	WITHOUT_CLASSIFICATION	3.1573155503415024E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9996317946569244	WITHOUT_CLASSIFICATION	3.682053430756395E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9997638346768837	WITHOUT_CLASSIFICATION	2.361653231164619E-4	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9998239132752114	WITHOUT_CLASSIFICATION	1.7608672478852352E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9998484565438962	WITHOUT_CLASSIFICATION	1.515434561037709E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9997319650818274	WITHOUT_CLASSIFICATION	2.680349181726545E-4	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9997129619659221	WITHOUT_CLASSIFICATION	2.870380340779755E-4	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9995896835937937	WITHOUT_CLASSIFICATION	4.103164062062523E-4	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.999563780129821	WITHOUT_CLASSIFICATION	4.362198701790964E-4	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9997509655055279	WITHOUT_CLASSIFICATION	2.490344944722193E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.999979773391474	WITHOUT_CLASSIFICATION	2.0226608525961638E-5	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999957523923925	WITHOUT_CLASSIFICATION	4.247607607571975E-6	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999998045957303	WITHOUT_CLASSIFICATION	1.954042696440855E-7	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999998040795729	WITHOUT_CLASSIFICATION	1.9592042705618919E-7	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999999764512079	WITHOUT_CLASSIFICATION	2.3548792043500738E-8	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999996604362931	WITHOUT_CLASSIFICATION	3.395637070066043E-7	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.999986972601829	WITHOUT_CLASSIFICATION	1.3027398170929275E-5	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999946844775787	WITHOUT_CLASSIFICATION	5.315522421332114E-6	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999962328553781	WITHOUT_CLASSIFICATION	3.767144621898444E-6	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999975645501361	WITHOUT_CLASSIFICATION	2.435449863846107E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999996493664771	WITHOUT_CLASSIFICATION	3.5063352284618213E-7	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.999965477235198	WITHOUT_CLASSIFICATION	3.452276480204617E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999893741310419	WITHOUT_CLASSIFICATION	1.0625868958015383E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999985705547539	WITHOUT_CLASSIFICATION	1.429445246107465E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999961195588529	WITHOUT_CLASSIFICATION	3.880441147052697E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999959528925562	WITHOUT_CLASSIFICATION	4.0471074438247346E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999983427039527	WITHOUT_CLASSIFICATION	1.6572960472178232E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999928288360064	WITHOUT_CLASSIFICATION	7.1711639935339266E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999847876685305	WITHOUT_CLASSIFICATION	1.5212331469381248E-5	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999983048257488	WITHOUT_CLASSIFICATION	1.695174251168557E-6	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999949309734848	WITHOUT_CLASSIFICATION	5.069026515141798E-6	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999971320492441	WITHOUT_CLASSIFICATION	2.867950755940317E-6	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999914683248738	WITHOUT_CLASSIFICATION	8.531675126158713E-6	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9998128826258921	WITHOUT_CLASSIFICATION	1.871173741080204E-4	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999917964974253	WITHOUT_CLASSIFICATION	8.203502574733797E-6	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999998088024503	WITHOUT_CLASSIFICATION	1.911975496187581E-7	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999999803103854	WITHOUT_CLASSIFICATION	1.9689614675478394E-8	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9998038218977358	WITHOUT_CLASSIFICATION	1.9617810226431966E-4	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9999976374225297	WITHOUT_CLASSIFICATION	2.3625774703201465E-6	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999904280812456	WITHOUT_CLASSIFICATION	9.571918754306563E-6	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999997072746027	WITHOUT_CLASSIFICATION	2.9272539726013476E-7	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999977393900941	WITHOUT_CLASSIFICATION	2.260609905862303E-6	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999929416430398	WITHOUT_CLASSIFICATION	7.0583569603050765E-6	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999941100739237	WITHOUT_CLASSIFICATION	5.8899260763533824E-6	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9999297146054377	WITHOUT_CLASSIFICATION	7.028539456232848E-5	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999974441649572	WITHOUT_CLASSIFICATION	2.555835042869325E-6	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999995464422845	WITHOUT_CLASSIFICATION	4.535577155869163E-7	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999475301493993	WITHOUT_CLASSIFICATION	5.246985060072187E-5	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999908533295787	WITHOUT_CLASSIFICATION	9.146670421404493E-6	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999967772754587	WITHOUT_CLASSIFICATION	3.2227245412405354E-6	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9999832384942453	WITHOUT_CLASSIFICATION	1.6761505754630088E-5	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999999435648466	WITHOUT_CLASSIFICATION	5.643515339516931E-8	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.999999684690574	WITHOUT_CLASSIFICATION	3.153094259998377E-7	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9999977692164744	WITHOUT_CLASSIFICATION	2.2307835255986373E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999860821313705	WITHOUT_CLASSIFICATION	1.391786862948296E-5	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999794147577896	WITHOUT_CLASSIFICATION	2.0585242210322694E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999900245506469	WITHOUT_CLASSIFICATION	9.975449353082836E-6	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9994696098805115	WITHOUT_CLASSIFICATION	5.303901194885854E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999998979334868	WITHOUT_CLASSIFICATION	1.020665132060687E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.999998015626357	WITHOUT_CLASSIFICATION	1.984373642852607E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999965932369934	WITHOUT_CLASSIFICATION	3.406763006648462E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999965932369934	WITHOUT_CLASSIFICATION	3.406763006648462E-6	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999992551539881	WITHOUT_CLASSIFICATION	7.448460119345556E-7	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999937107434225	WITHOUT_CLASSIFICATION	6.289256577507477E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999892525730193	WITHOUT_CLASSIFICATION	1.0747426980797331E-5	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.990902050356022	WITHOUT_CLASSIFICATION	0.009097949643978117	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.999973801013904	WITHOUT_CLASSIFICATION	2.6198986096120536E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999959226648978	WITHOUT_CLASSIFICATION	4.077335102240991E-6	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9967182266020492	WITHOUT_CLASSIFICATION	0.0032817733979508172	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999957484202461	WITHOUT_CLASSIFICATION	4.251579753900134E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999939498091612	WITHOUT_CLASSIFICATION	6.050190838820823E-6	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999479327749132	WITHOUT_CLASSIFICATION	5.206722508683744E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999989741428075	WITHOUT_CLASSIFICATION	1.0258571925202404E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999932039526565	WITHOUT_CLASSIFICATION	6.796047343573528E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999781236857199	WITHOUT_CLASSIFICATION	2.1876314280161088E-5	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999965446665459	WITHOUT_CLASSIFICATION	3.455333454058816E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999965050718803	WITHOUT_CLASSIFICATION	3.494928119657657E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999873335060327	WITHOUT_CLASSIFICATION	1.2666493967235134E-5	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999596138705203	WITHOUT_CLASSIFICATION	4.038612947953443E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999766082616713	WITHOUT_CLASSIFICATION	2.3391738328711998E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999988562177987	WITHOUT_CLASSIFICATION	1.1437822012280502E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999855207464	WITHOUT_CLASSIFICATION	1.447925365266056E-8	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999946088230535	WITHOUT_CLASSIFICATION	5.391176946489114E-6	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999913217127936	WITHOUT_CLASSIFICATION	8.678287206398479E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999997281180992	WITHOUT_CLASSIFICATION	2.718819007716614E-7	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999926466046588	WITHOUT_CLASSIFICATION	7.3533953411910564E-6	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999949967412244	WITHOUT_CLASSIFICATION	5.003258775652186E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999976751083887	WITHOUT_CLASSIFICATION	2.3248916114115667E-6	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999998104678431	WITHOUT_CLASSIFICATION	1.895321568971817E-7	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999998774926243	WITHOUT_CLASSIFICATION	1.2250737567444348E-7	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999842030396	WITHOUT_CLASSIFICATION	1.5796960417494383E-8	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.999999956954501	WITHOUT_CLASSIFICATION	4.3045499059571426E-8	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999995014310757	WITHOUT_CLASSIFICATION	4.985689243473238E-7	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999995288157865	WITHOUT_CLASSIFICATION	4.711842135406757E-7	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999846069241154	WITHOUT_CLASSIFICATION	1.539307588459549E-5	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999413768829	WITHOUT_CLASSIFICATION	5.862311706116878E-8	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9995777421821677	WITHOUT_CLASSIFICATION	4.222578178323776E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999782138356266	WITHOUT_CLASSIFICATION	2.1786164373350364E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999943339785603	WITHOUT_CLASSIFICATION	5.666021439728865E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999999136753382	WITHOUT_CLASSIFICATION	8.632466173596638E-8	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.999998250798323	WITHOUT_CLASSIFICATION	1.7492016769442148E-6	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999975803158	WITHOUT_CLASSIFICATION	2.4196842833293413E-9	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999878849357786	WITHOUT_CLASSIFICATION	1.2115064221368617E-5	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999931504439246	WITHOUT_CLASSIFICATION	6.849556075495112E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999986480818636	WITHOUT_CLASSIFICATION	1.3519181363973858E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999461806295552	WITHOUT_CLASSIFICATION	5.3819370444854805E-5	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999750925701554	WITHOUT_CLASSIFICATION	2.4907429844607137E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9995417116434137	WITHOUT_CLASSIFICATION	4.582883565862798E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999650878589794	WITHOUT_CLASSIFICATION	3.491214102044864E-5	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999945348104977	WITHOUT_CLASSIFICATION	5.465189502341452E-6	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999905337562682	WITHOUT_CLASSIFICATION	9.466243731875449E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999999013972669	WITHOUT_CLASSIFICATION	9.860273319829521E-8	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999998765068148	WITHOUT_CLASSIFICATION	1.2349318527236595E-7	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999285836915	WITHOUT_CLASSIFICATION	7.141630859616185E-8	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999276461353	WITHOUT_CLASSIFICATION	7.23538647215457E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999994668654102	WITHOUT_CLASSIFICATION	5.331345898073637E-7	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999742132175	WITHOUT_CLASSIFICATION	2.578678241762074E-8	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999961553109676	WITHOUT_CLASSIFICATION	3.844689032408286E-6	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9982154057413549	WITHOUT_CLASSIFICATION	0.0017845942586449859	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999998231165212	WITHOUT_CLASSIFICATION	1.7688347875122163E-7	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999989432832326	WITHOUT_CLASSIFICATION	1.0567167674905502E-6	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999998286937719	WITHOUT_CLASSIFICATION	1.713062281427843E-7	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999833141269069	WITHOUT_CLASSIFICATION	1.668587309315061E-5	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999991949153445	WITHOUT_CLASSIFICATION	8.050846554288921E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999994632005552	WITHOUT_CLASSIFICATION	5.367994448048681E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999719375157333	WITHOUT_CLASSIFICATION	2.806248426673967E-5	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999996961622235	WITHOUT_CLASSIFICATION	3.038377764732444E-7	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999971688500436	WITHOUT_CLASSIFICATION	2.8311499563370156E-6	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999916797743	WITHOUT_CLASSIFICATION	8.32022565642023E-9	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999998511184862	WITHOUT_CLASSIFICATION	1.4888151374597668E-7	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999980874054349	WITHOUT_CLASSIFICATION	1.91259456498636E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.999993773152007	WITHOUT_CLASSIFICATION	6.226847993034742E-6	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999998539648363	WITHOUT_CLASSIFICATION	1.4603516370944203E-7	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999995216119443	WITHOUT_CLASSIFICATION	4.783880557361757E-7	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999992957100166	WITHOUT_CLASSIFICATION	7.042899834413476E-7	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999999264787314	WITHOUT_CLASSIFICATION	7.352126860358937E-8	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999998944103125	WITHOUT_CLASSIFICATION	1.0558968754226628E-7	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9999270712817959	WITHOUT_CLASSIFICATION	7.292871820409936E-5	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999995873002525	WITHOUT_CLASSIFICATION	4.126997475380024E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999980748804594	WITHOUT_CLASSIFICATION	1.9251195406063394E-6	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999693238905196	WITHOUT_CLASSIFICATION	3.067610948035941E-5	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999809995701754	WITHOUT_CLASSIFICATION	1.9000429824544247E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999969812339784	WITHOUT_CLASSIFICATION	3.0187660217327505E-6	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.99995565462898	WITHOUT_CLASSIFICATION	4.434537102012838E-5	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999937491629821	WITHOUT_CLASSIFICATION	6.250837017894751E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999956516282186	WITHOUT_CLASSIFICATION	4.348371781455351E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9997635287555907	WITHOUT_CLASSIFICATION	2.3647124440936897E-4	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999988828927564	WITHOUT_CLASSIFICATION	1.117107243607262E-6	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.999980697338994	WITHOUT_CLASSIFICATION	1.930266100595261E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999651500845396	WITHOUT_CLASSIFICATION	3.4849915460381124E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999967003682861	WITHOUT_CLASSIFICATION	3.2996317138687592E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.999999543165684	WITHOUT_CLASSIFICATION	4.5683431594251985E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999835896294	WITHOUT_CLASSIFICATION	1.641037065736951E-8	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.999998347877386	WITHOUT_CLASSIFICATION	1.6521226141005325E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.999994712317553	WITHOUT_CLASSIFICATION	5.287682447027338E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999922971734573	WITHOUT_CLASSIFICATION	7.702826542774072E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999994081317628	WITHOUT_CLASSIFICATION	5.918682371530197E-7	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999881631896329	WITHOUT_CLASSIFICATION	1.183681036706332E-5	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999561878840847	WITHOUT_CLASSIFICATION	4.38121159152085E-5	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999987355309247	WITHOUT_CLASSIFICATION	1.264469075326677E-6	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999990565250066	WITHOUT_CLASSIFICATION	9.434749933417071E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999984267958315	WITHOUT_CLASSIFICATION	1.5732041685031781E-6	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999929356173328	WITHOUT_CLASSIFICATION	7.064382667239032E-6	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999980506980459	WITHOUT_CLASSIFICATION	1.949301954155122E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.999992534411242	WITHOUT_CLASSIFICATION	7.46558875792579E-6	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999979148039614	WITHOUT_CLASSIFICATION	2.08519603855088E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999957243784258	WITHOUT_CLASSIFICATION	4.275621574263369E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999895279603284	WITHOUT_CLASSIFICATION	1.0472039671559666E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970732162359	WITHOUT_CLASSIFICATION	2.926783764251934E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999862704178106	WITHOUT_CLASSIFICATION	1.3729582189404916E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999996654973158	WITHOUT_CLASSIFICATION	3.3450268419466233E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970880034009	WITHOUT_CLASSIFICATION	2.911996599101407E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999974698319308	WITHOUT_CLASSIFICATION	2.530168069103666E-6	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999976452309245	WITHOUT_CLASSIFICATION	2.354769075550549E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999904258232073	WITHOUT_CLASSIFICATION	9.574176792790397E-6	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999862089709055	WITHOUT_CLASSIFICATION	1.379102909450752E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999968038725288	WITHOUT_CLASSIFICATION	3.1961274712435897E-6	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999956093771898	WITHOUT_CLASSIFICATION	4.390622810153654E-6	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999978722447737	WITHOUT_CLASSIFICATION	2.127755226426535E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999881944761261	WITHOUT_CLASSIFICATION	1.1805523873866555E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999962882962856	WITHOUT_CLASSIFICATION	3.7117037142938333E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999963682496124	WITHOUT_CLASSIFICATION	3.631750387716851E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999948539134391	WITHOUT_CLASSIFICATION	5.146086560840886E-6	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999993863262477	WITHOUT_CLASSIFICATION	6.136737523005152E-6	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999925517480248	WITHOUT_CLASSIFICATION	7.448251975195157E-6	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999885859178029	WITHOUT_CLASSIFICATION	1.1414082197059383E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999972291155472	WITHOUT_CLASSIFICATION	2.7708844527767376E-6	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999997765091394	WITHOUT_CLASSIFICATION	2.234908605959503E-6	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999852237043564	WITHOUT_CLASSIFICATION	1.477629564363855E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999866240139214	WITHOUT_CLASSIFICATION	1.33759860786747E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999862711618672	WITHOUT_CLASSIFICATION	1.3728838132798756E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999966444485308	WITHOUT_CLASSIFICATION	3.355551469204538E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999963682496124	WITHOUT_CLASSIFICATION	3.631750387716851E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999862711618672	WITHOUT_CLASSIFICATION	1.3728838132798756E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999942251235951	WITHOUT_CLASSIFICATION	5.7748764048268676E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999966444485308	WITHOUT_CLASSIFICATION	3.355551469204538E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999966444485308	WITHOUT_CLASSIFICATION	3.355551469204538E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999917835879383	WITHOUT_CLASSIFICATION	8.216412061802967E-6	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876704240864	WITHOUT_CLASSIFICATION	1.232957591360453E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925604781844	WITHOUT_CLASSIFICATION	7.4395218155573804E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999934619214815	WITHOUT_CLASSIFICATION	6.53807851839417E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934006015149	WITHOUT_CLASSIFICATION	6.599398485148516E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999587378276	WITHOUT_CLASSIFICATION	4.126217240016421E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999587378276	WITHOUT_CLASSIFICATION	4.126217240016421E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999884014293086	WITHOUT_CLASSIFICATION	1.159857069145564E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999919318661433	WITHOUT_CLASSIFICATION	8.068133856632941E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999835976521135	WITHOUT_CLASSIFICATION	1.6402347886408137E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999957642137117	WITHOUT_CLASSIFICATION	4.235786288216806E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999869657925867	WITHOUT_CLASSIFICATION	1.3034207413313115E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999959087540697	WITHOUT_CLASSIFICATION	4.091245930285849E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999911299487688	WITHOUT_CLASSIFICATION	8.870051231251429E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999963682496124	WITHOUT_CLASSIFICATION	3.631750387716851E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999966444485308	WITHOUT_CLASSIFICATION	3.355551469204538E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999916006666766	WITHOUT_CLASSIFICATION	8.399333323456386E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999921022660637	WITHOUT_CLASSIFICATION	7.897733936370079E-6	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999928188230288	WITHOUT_CLASSIFICATION	7.181176971154093E-6	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926701871164	WITHOUT_CLASSIFICATION	7.329812883594173E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999865452118939	WITHOUT_CLASSIFICATION	1.3454788106173146E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999905702657892	WITHOUT_CLASSIFICATION	9.429734210853951E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999933826016851	WITHOUT_CLASSIFICATION	6.617398314884221E-6	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999894731132145	WITHOUT_CLASSIFICATION	1.052688678557552E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999995897528323	WITHOUT_CLASSIFICATION	4.102471677072191E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999995897528323	WITHOUT_CLASSIFICATION	4.102471677072191E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970238954745	WITHOUT_CLASSIFICATION	2.9761045254424074E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970238954745	WITHOUT_CLASSIFICATION	2.9761045254424074E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977212502051	WITHOUT_CLASSIFICATION	2.2787497949889837E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999904085307051	WITHOUT_CLASSIFICATION	9.591469294823198E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999963682496124	WITHOUT_CLASSIFICATION	3.631750387716851E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999948539134391	WITHOUT_CLASSIFICATION	5.146086560840886E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999966444485308	WITHOUT_CLASSIFICATION	3.355551469204538E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999587378276	WITHOUT_CLASSIFICATION	4.126217240016421E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999933826016851	WITHOUT_CLASSIFICATION	6.617398314884221E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999995897528323	WITHOUT_CLASSIFICATION	4.102471677072191E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970238954745	WITHOUT_CLASSIFICATION	2.9761045254424074E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999904085307051	WITHOUT_CLASSIFICATION	9.591469294823198E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999908453304717	WITHOUT_CLASSIFICATION	9.154669528389284E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999919264394479	WITHOUT_CLASSIFICATION	8.073560552125619E-6	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999944648106458	WITHOUT_CLASSIFICATION	5.5351893541709136E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926376909024	WITHOUT_CLASSIFICATION	7.362309097663047E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999984909320214	WITHOUT_CLASSIFICATION	1.5090679786124284E-5	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999899751520679	WITHOUT_CLASSIFICATION	1.0024847932188025E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999965339924376	WITHOUT_CLASSIFICATION	3.466007562332201E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999587378276	WITHOUT_CLASSIFICATION	4.126217240016421E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999893484089704	WITHOUT_CLASSIFICATION	1.0651591029566791E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999965339924376	WITHOUT_CLASSIFICATION	3.466007562332201E-6	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999949092958081	WITHOUT_CLASSIFICATION	5.0907041918396425E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999848339037122	WITHOUT_CLASSIFICATION	1.5166096287796697E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880299851828	WITHOUT_CLASSIFICATION	1.1970014817177747E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999989967811075	WITHOUT_CLASSIFICATION	1.0032188924996954E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.99999033739862	WITHOUT_CLASSIFICATION	9.662601380041265E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999936968092218	WITHOUT_CLASSIFICATION	6.303190778244251E-6	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999905755931824	WITHOUT_CLASSIFICATION	9.42440681751799E-6	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999915402132417	WITHOUT_CLASSIFICATION	8.459786758285065E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999916062840548	WITHOUT_CLASSIFICATION	8.39371594525476E-6	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999979834364932	WITHOUT_CLASSIFICATION	2.016563506805083E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999882360944929	WITHOUT_CLASSIFICATION	1.1763905507144839E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909194747089	WITHOUT_CLASSIFICATION	9.080525291042527E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999895054850576	WITHOUT_CLASSIFICATION	1.0494514942377804E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999982759932984	WITHOUT_CLASSIFICATION	1.7240067016601048E-6	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99999741532301	WITHOUT_CLASSIFICATION	2.5846769900212904E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999887498453299	WITHOUT_CLASSIFICATION	1.1250154669987868E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999939500840989	WITHOUT_CLASSIFICATION	6.049915901186251E-6	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99999812268542	WITHOUT_CLASSIFICATION	1.8773145800748813E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999965539386378	WITHOUT_CLASSIFICATION	3.4460613622236245E-6	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999965102340403	WITHOUT_CLASSIFICATION	3.489765959701267E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999855207464	WITHOUT_CLASSIFICATION	1.447925365266056E-8	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878358005752	WITHOUT_CLASSIFICATION	1.2164199424874366E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999993785680816	WITHOUT_CLASSIFICATION	6.21431918395872E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999993882750597	WITHOUT_CLASSIFICATION	6.11724940294215E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999882360944929	WITHOUT_CLASSIFICATION	1.1763905507144839E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999912583675878	WITHOUT_CLASSIFICATION	8.741632412228494E-6	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999884476892271	WITHOUT_CLASSIFICATION	1.1552310772924273E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999932621094809	WITHOUT_CLASSIFICATION	6.737890519109593E-6	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999987437143856	WITHOUT_CLASSIFICATION	1.2562856144008565E-6	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.999998622647756	WITHOUT_CLASSIFICATION	1.3773522440676728E-6	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999986645959859	WITHOUT_CLASSIFICATION	1.335404014096387E-6	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999975371489269	WITHOUT_CLASSIFICATION	2.462851073063037E-6	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999998151458062	WITHOUT_CLASSIFICATION	1.8485419384325013E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999996878844755	WITHOUT_CLASSIFICATION	3.121155245769848E-7	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999990567277204	WITHOUT_CLASSIFICATION	9.432722795134223E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999998044892039	WITHOUT_CLASSIFICATION	1.955107961446253E-7	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.999999409129174	WITHOUT_CLASSIFICATION	5.908708260649112E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999974305197906	WITHOUT_CLASSIFICATION	2.569480209319181E-6	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999999079956562	WITHOUT_CLASSIFICATION	9.200434376135028E-8	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999994081317628	WITHOUT_CLASSIFICATION	5.918682371530197E-7	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999999823687291	WITHOUT_CLASSIFICATION	1.7631270951615812E-8	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999987036196396	WITHOUT_CLASSIFICATION	1.2963803603068835E-6	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999990741057296	WITHOUT_CLASSIFICATION	9.25894270389113E-7	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999859777976544	WITHOUT_CLASSIFICATION	1.402220234553063E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999868485387762	WITHOUT_CLASSIFICATION	1.3151461223777942E-5	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999995072815906	WITHOUT_CLASSIFICATION	4.927184094019783E-7	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999912739573805	WITHOUT_CLASSIFICATION	8.726042619493583E-6	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999995072959603	WITHOUT_CLASSIFICATION	4.927040397129496E-7	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999989107887581	WITHOUT_CLASSIFICATION	1.089211241932342E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999794147577896	WITHOUT_CLASSIFICATION	2.0585242210322694E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999900245506469	WITHOUT_CLASSIFICATION	9.975449353082836E-6	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9994696098805115	WITHOUT_CLASSIFICATION	5.303901194885854E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999998979334868	WITHOUT_CLASSIFICATION	1.020665132060687E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.999998015626357	WITHOUT_CLASSIFICATION	1.984373642852607E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999965932369934	WITHOUT_CLASSIFICATION	3.406763006648462E-6	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999937107434225	WITHOUT_CLASSIFICATION	6.289256577507477E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999892525730193	WITHOUT_CLASSIFICATION	1.0747426980797331E-5	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.990902050356022	WITHOUT_CLASSIFICATION	0.009097949643978117	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.999973801013904	WITHOUT_CLASSIFICATION	2.6198986096120536E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999959226648978	WITHOUT_CLASSIFICATION	4.077335102240991E-6	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999989452009774	WITHOUT_CLASSIFICATION	1.0547990225682324E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.999999543165684	WITHOUT_CLASSIFICATION	4.5683431594251985E-7	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999479327749132	WITHOUT_CLASSIFICATION	5.206722508683744E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999932039526565	WITHOUT_CLASSIFICATION	6.796047343573528E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999596138705203	WITHOUT_CLASSIFICATION	4.038612947953443E-5	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999766082616713	WITHOUT_CLASSIFICATION	2.3391738328711998E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999988562177987	WITHOUT_CLASSIFICATION	1.1437822012280502E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999939498091612	WITHOUT_CLASSIFICATION	6.050190838820823E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999989741428075	WITHOUT_CLASSIFICATION	1.0258571925202404E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999855207464	WITHOUT_CLASSIFICATION	1.447925365266056E-8	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999965446665459	WITHOUT_CLASSIFICATION	3.455333454058816E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999860821313705	WITHOUT_CLASSIFICATION	1.391786862948296E-5	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999781236857199	WITHOUT_CLASSIFICATION	2.1876314280161088E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999997281180992	WITHOUT_CLASSIFICATION	2.718819007716614E-7	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999926466046588	WITHOUT_CLASSIFICATION	7.3533953411910564E-6	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999949967412244	WITHOUT_CLASSIFICATION	5.003258775652186E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999994081317628	WITHOUT_CLASSIFICATION	5.918682371530197E-7	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999883409851802	WITHOUT_CLASSIFICATION	1.1659014819824402E-5	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.999999949940054	WITHOUT_CLASSIFICATION	5.0059946028662664E-8	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999998104678431	WITHOUT_CLASSIFICATION	1.895321568971817E-7	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999842030396	WITHOUT_CLASSIFICATION	1.5796960417494383E-8	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999998957209831	WITHOUT_CLASSIFICATION	1.0427901680623062E-7	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.999999956954501	WITHOUT_CLASSIFICATION	4.3045499059571426E-8	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999995014310757	WITHOUT_CLASSIFICATION	4.985689243473238E-7	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999846069241154	WITHOUT_CLASSIFICATION	1.539307588459549E-5	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9998432393434915	WITHOUT_CLASSIFICATION	1.5676065650851485E-4	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999413768829	WITHOUT_CLASSIFICATION	5.862311706116878E-8	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9995777421821677	WITHOUT_CLASSIFICATION	4.222578178323776E-4	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999782138356266	WITHOUT_CLASSIFICATION	2.1786164373350364E-5	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999953739541199	WITHOUT_CLASSIFICATION	4.626045880180563E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999943339785603	WITHOUT_CLASSIFICATION	5.666021439728865E-6	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.999999668567715	WITHOUT_CLASSIFICATION	3.3143228487377364E-7	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999878849357786	WITHOUT_CLASSIFICATION	1.2115064221368617E-5	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999999136753382	WITHOUT_CLASSIFICATION	8.632466173596638E-8	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.999998250798323	WITHOUT_CLASSIFICATION	1.7492016769442148E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999986480818636	WITHOUT_CLASSIFICATION	1.3519181363973858E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999461806295552	WITHOUT_CLASSIFICATION	5.3819370444854805E-5	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9999750925701554	WITHOUT_CLASSIFICATION	2.4907429844607137E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9967664183312351	WITHOUT_CLASSIFICATION	0.003233581668764841	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9995417116434137	WITHOUT_CLASSIFICATION	4.582883565862798E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999650878589794	WITHOUT_CLASSIFICATION	3.491214102044864E-5	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999945348104977	WITHOUT_CLASSIFICATION	5.465189502341452E-6	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999905337562682	WITHOUT_CLASSIFICATION	9.466243731875449E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999999013972669	WITHOUT_CLASSIFICATION	9.860273319829521E-8	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999998765068148	WITHOUT_CLASSIFICATION	1.2349318527236595E-7	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999285836915	WITHOUT_CLASSIFICATION	7.141630859616185E-8	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999276461353	WITHOUT_CLASSIFICATION	7.23538647215457E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999994668654102	WITHOUT_CLASSIFICATION	5.331345898073637E-7	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999994668654102	WITHOUT_CLASSIFICATION	5.331345898073637E-7	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999742132175	WITHOUT_CLASSIFICATION	2.578678241762074E-8	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999961553109676	WITHOUT_CLASSIFICATION	3.844689032408286E-6	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9982154057413549	WITHOUT_CLASSIFICATION	0.0017845942586449859	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999998231165212	WITHOUT_CLASSIFICATION	1.7688347875122163E-7	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999998286937719	WITHOUT_CLASSIFICATION	1.713062281427843E-7	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999833141269069	WITHOUT_CLASSIFICATION	1.668587309315061E-5	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999991949153445	WITHOUT_CLASSIFICATION	8.050846554288921E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999994632005552	WITHOUT_CLASSIFICATION	5.367994448048681E-7	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999996961622235	WITHOUT_CLASSIFICATION	3.038377764732444E-7	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999998941600479	WITHOUT_CLASSIFICATION	1.0583995218542747E-7	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999971688500436	WITHOUT_CLASSIFICATION	2.8311499563370156E-6	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999916797743	WITHOUT_CLASSIFICATION	8.32022565642023E-9	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999998511184862	WITHOUT_CLASSIFICATION	1.4888151374597668E-7	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999980874054349	WITHOUT_CLASSIFICATION	1.91259456498636E-6	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.999993773152007	WITHOUT_CLASSIFICATION	6.226847993034742E-6	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999995216119443	WITHOUT_CLASSIFICATION	4.783880557361757E-7	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999992957100166	WITHOUT_CLASSIFICATION	7.042899834413476E-7	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999999264787314	WITHOUT_CLASSIFICATION	7.352126860358937E-8	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999998944103125	WITHOUT_CLASSIFICATION	1.0558968754226628E-7	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9999270712817959	WITHOUT_CLASSIFICATION	7.292871820409936E-5	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999995873002525	WITHOUT_CLASSIFICATION	4.126997475380024E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999980748804594	WITHOUT_CLASSIFICATION	1.9251195406063394E-6	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999693238905196	WITHOUT_CLASSIFICATION	3.067610948035941E-5	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999809995701754	WITHOUT_CLASSIFICATION	1.9000429824544247E-5	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999969812339784	WITHOUT_CLASSIFICATION	3.0187660217327505E-6	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.99995565462898	WITHOUT_CLASSIFICATION	4.434537102012838E-5	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999956516282186	WITHOUT_CLASSIFICATION	4.348371781455351E-6	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999988828927564	WITHOUT_CLASSIFICATION	1.117107243607262E-6	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.999980697338994	WITHOUT_CLASSIFICATION	1.930266100595261E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9999651500845396	WITHOUT_CLASSIFICATION	3.4849915460381124E-5	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999967003682861	WITHOUT_CLASSIFICATION	3.2996317138687592E-6	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9998535311593568	WITHOUT_CLASSIFICATION	1.4646884064327566E-4	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999999723423295	WITHOUT_CLASSIFICATION	2.7657670413528224E-8	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999811196242864	WITHOUT_CLASSIFICATION	1.8880375713619594E-5	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999835896294	WITHOUT_CLASSIFICATION	1.641037065736951E-8	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.999998755471704	WITHOUT_CLASSIFICATION	1.2445282959279423E-6	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.999998347877386	WITHOUT_CLASSIFICATION	1.6521226141005325E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.999994712317553	WITHOUT_CLASSIFICATION	5.287682447027338E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999922971734573	WITHOUT_CLASSIFICATION	7.702826542774072E-6	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999986398141602	WITHOUT_CLASSIFICATION	1.3601858399254302E-6	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999881631896329	WITHOUT_CLASSIFICATION	1.183681036706332E-5	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999561878840847	WITHOUT_CLASSIFICATION	4.38121159152085E-5	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999987355309247	WITHOUT_CLASSIFICATION	1.264469075326677E-6	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999990565250066	WITHOUT_CLASSIFICATION	9.434749933417071E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999984267958315	WITHOUT_CLASSIFICATION	1.5732041685031781E-6	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999929356173328	WITHOUT_CLASSIFICATION	7.064382667239032E-6	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999980506980459	WITHOUT_CLASSIFICATION	1.949301954155122E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.999992534411242	WITHOUT_CLASSIFICATION	7.46558875792579E-6	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999979148039614	WITHOUT_CLASSIFICATION	2.08519603855088E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999895279603284	WITHOUT_CLASSIFICATION	1.0472039671559666E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970732162359	WITHOUT_CLASSIFICATION	2.926783764251934E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999862704178106	WITHOUT_CLASSIFICATION	1.3729582189404916E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999996654973158	WITHOUT_CLASSIFICATION	3.3450268419466233E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970880034009	WITHOUT_CLASSIFICATION	2.911996599101407E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999974698319308	WITHOUT_CLASSIFICATION	2.530168069103666E-6	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999976452309245	WITHOUT_CLASSIFICATION	2.354769075550549E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999904258232073	WITHOUT_CLASSIFICATION	9.574176792790397E-6	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999862089709055	WITHOUT_CLASSIFICATION	1.379102909450752E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999968038725288	WITHOUT_CLASSIFICATION	3.1961274712435897E-6	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999956093771898	WITHOUT_CLASSIFICATION	4.390622810153654E-6	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999978722447737	WITHOUT_CLASSIFICATION	2.127755226426535E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999878356986187	WITHOUT_CLASSIFICATION	1.2164301381293808E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999962882962856	WITHOUT_CLASSIFICATION	3.7117037142938333E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999963682496124	WITHOUT_CLASSIFICATION	3.631750387716851E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999948539134391	WITHOUT_CLASSIFICATION	5.146086560840886E-6	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999925517480248	WITHOUT_CLASSIFICATION	7.448251975195157E-6	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999885859178029	WITHOUT_CLASSIFICATION	1.1414082197059383E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999972291155472	WITHOUT_CLASSIFICATION	2.7708844527767376E-6	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999997765091394	WITHOUT_CLASSIFICATION	2.234908605959503E-6	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999852237043564	WITHOUT_CLASSIFICATION	1.477629564363855E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999924788879034	WITHOUT_CLASSIFICATION	7.5211120965525515E-6	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999866240139214	WITHOUT_CLASSIFICATION	1.33759860786747E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999862711618672	WITHOUT_CLASSIFICATION	1.3728838132798756E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999966444485308	WITHOUT_CLASSIFICATION	3.355551469204538E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999966444485308	WITHOUT_CLASSIFICATION	3.355551469204538E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999917835879383	WITHOUT_CLASSIFICATION	8.216412061802967E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999587378276	WITHOUT_CLASSIFICATION	4.126217240016421E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999587378276	WITHOUT_CLASSIFICATION	4.126217240016421E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999919318661433	WITHOUT_CLASSIFICATION	8.068133856632941E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999862711618672	WITHOUT_CLASSIFICATION	1.3728838132798756E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999966444485308	WITHOUT_CLASSIFICATION	3.355551469204538E-6	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876704240864	WITHOUT_CLASSIFICATION	1.232957591360453E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999925604781844	WITHOUT_CLASSIFICATION	7.4395218155573804E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999934619214815	WITHOUT_CLASSIFICATION	6.53807851839417E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999934006015149	WITHOUT_CLASSIFICATION	6.599398485148516E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999587378276	WITHOUT_CLASSIFICATION	4.126217240016421E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999884014293086	WITHOUT_CLASSIFICATION	1.159857069145564E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999835976521135	WITHOUT_CLASSIFICATION	1.6402347886408137E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999957642137117	WITHOUT_CLASSIFICATION	4.235786288216806E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999869657925867	WITHOUT_CLASSIFICATION	1.3034207413313115E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999959087540697	WITHOUT_CLASSIFICATION	4.091245930285849E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999911299487688	WITHOUT_CLASSIFICATION	8.870051231251429E-6	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999898828020715	WITHOUT_CLASSIFICATION	1.0117197928484607E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999991340601611	WITHOUT_CLASSIFICATION	8.659398389025272E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999921022660637	WITHOUT_CLASSIFICATION	7.897733936370079E-6	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999928188230288	WITHOUT_CLASSIFICATION	7.181176971154093E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999865452118939	WITHOUT_CLASSIFICATION	1.3454788106173146E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999963682496124	WITHOUT_CLASSIFICATION	3.631750387716851E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999963682496124	WITHOUT_CLASSIFICATION	3.631750387716851E-6	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926701871164	WITHOUT_CLASSIFICATION	7.329812883594173E-6	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999905702657892	WITHOUT_CLASSIFICATION	9.429734210853951E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999933826016851	WITHOUT_CLASSIFICATION	6.617398314884221E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999995897528323	WITHOUT_CLASSIFICATION	4.102471677072191E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999995897528323	WITHOUT_CLASSIFICATION	4.102471677072191E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970238954745	WITHOUT_CLASSIFICATION	2.9761045254424074E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970238954745	WITHOUT_CLASSIFICATION	2.9761045254424074E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977212502051	WITHOUT_CLASSIFICATION	2.2787497949889837E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977212502051	WITHOUT_CLASSIFICATION	2.2787497949889837E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999904085307051	WITHOUT_CLASSIFICATION	9.591469294823198E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999908453304717	WITHOUT_CLASSIFICATION	9.154669528389284E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999948539134391	WITHOUT_CLASSIFICATION	5.146086560840886E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999966444485308	WITHOUT_CLASSIFICATION	3.355551469204538E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999587378276	WITHOUT_CLASSIFICATION	4.126217240016421E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999933826016851	WITHOUT_CLASSIFICATION	6.617398314884221E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999995897528323	WITHOUT_CLASSIFICATION	4.102471677072191E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999970238954745	WITHOUT_CLASSIFICATION	2.9761045254424074E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999919264394479	WITHOUT_CLASSIFICATION	8.073560552125619E-6	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999944648106458	WITHOUT_CLASSIFICATION	5.5351893541709136E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999926376909024	WITHOUT_CLASSIFICATION	7.362309097663047E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999984909320214	WITHOUT_CLASSIFICATION	1.5090679786124284E-5	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999899751520679	WITHOUT_CLASSIFICATION	1.0024847932188025E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999893484089704	WITHOUT_CLASSIFICATION	1.0651591029566791E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999893484089704	WITHOUT_CLASSIFICATION	1.0651591029566791E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999965339924376	WITHOUT_CLASSIFICATION	3.466007562332201E-6	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999949092958081	WITHOUT_CLASSIFICATION	5.0907041918396425E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999848339037122	WITHOUT_CLASSIFICATION	1.5166096287796697E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880299851828	WITHOUT_CLASSIFICATION	1.1970014817177747E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999989967811075	WITHOUT_CLASSIFICATION	1.0032188924996954E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999966444485308	WITHOUT_CLASSIFICATION	3.355551469204538E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999587378276	WITHOUT_CLASSIFICATION	4.126217240016421E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999965339924376	WITHOUT_CLASSIFICATION	3.466007562332201E-6	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.99999033739862	WITHOUT_CLASSIFICATION	9.662601380041265E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999936968092218	WITHOUT_CLASSIFICATION	6.303190778244251E-6	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999905755931824	WITHOUT_CLASSIFICATION	9.42440681751799E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999916062840548	WITHOUT_CLASSIFICATION	8.39371594525476E-6	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999979834364932	WITHOUT_CLASSIFICATION	2.016563506805083E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999882360944929	WITHOUT_CLASSIFICATION	1.1763905507144839E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909194747089	WITHOUT_CLASSIFICATION	9.080525291042527E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999895054850576	WITHOUT_CLASSIFICATION	1.0494514942377804E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999982759932984	WITHOUT_CLASSIFICATION	1.7240067016601048E-6	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99999741532301	WITHOUT_CLASSIFICATION	2.5846769900212904E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999887498453299	WITHOUT_CLASSIFICATION	1.1250154669987868E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999939500840989	WITHOUT_CLASSIFICATION	6.049915901186251E-6	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99999812268542	WITHOUT_CLASSIFICATION	1.8773145800748813E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999965539386378	WITHOUT_CLASSIFICATION	3.4460613622236245E-6	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999965102340403	WITHOUT_CLASSIFICATION	3.489765959701267E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999919196415018	WITHOUT_CLASSIFICATION	8.080358498132077E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999993882750597	WITHOUT_CLASSIFICATION	6.11724940294215E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999882360944929	WITHOUT_CLASSIFICATION	1.1763905507144839E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999912583675878	WITHOUT_CLASSIFICATION	8.741632412228494E-6	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999884476892271	WITHOUT_CLASSIFICATION	1.1552310772924273E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999932621094809	WITHOUT_CLASSIFICATION	6.737890519109593E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999883409851802	WITHOUT_CLASSIFICATION	1.1659014819824402E-5	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999987437143856	WITHOUT_CLASSIFICATION	1.2562856144008565E-6	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.999998622647756	WITHOUT_CLASSIFICATION	1.3773522440676728E-6	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999986645959859	WITHOUT_CLASSIFICATION	1.335404014096387E-6	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999975371489269	WITHOUT_CLASSIFICATION	2.462851073063037E-6	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999998151458062	WITHOUT_CLASSIFICATION	1.8485419384325013E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999996878844755	WITHOUT_CLASSIFICATION	3.121155245769848E-7	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999990567277204	WITHOUT_CLASSIFICATION	9.432722795134223E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999998044892039	WITHOUT_CLASSIFICATION	1.955107961446253E-7	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.999999409129174	WITHOUT_CLASSIFICATION	5.908708260649112E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999974305197906	WITHOUT_CLASSIFICATION	2.569480209319181E-6	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999999079956562	WITHOUT_CLASSIFICATION	9.200434376135028E-8	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999994081317628	WITHOUT_CLASSIFICATION	5.918682371530197E-7	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999999823687291	WITHOUT_CLASSIFICATION	1.7631270951615812E-8	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999987036196396	WITHOUT_CLASSIFICATION	1.2963803603068835E-6	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999990741057296	WITHOUT_CLASSIFICATION	9.25894270389113E-7	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999859777976544	WITHOUT_CLASSIFICATION	1.402220234553063E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999855207464	WITHOUT_CLASSIFICATION	1.447925365266056E-8	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999868485387762	WITHOUT_CLASSIFICATION	1.3151461223777942E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999868485387762	WITHOUT_CLASSIFICATION	1.3151461223777942E-5	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999912739573805	WITHOUT_CLASSIFICATION	8.726042619493583E-6	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999995072959603	WITHOUT_CLASSIFICATION	4.927040397129496E-7	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.999999949940054	WITHOUT_CLASSIFICATION	5.0059946028662664E-8	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999724914402883	WITHOUT_CLASSIFICATION	2.7508559711684473E-5	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999724914402883	WITHOUT_CLASSIFICATION	2.7508559711684473E-5	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9999635057582199	WITHOUT_CLASSIFICATION	3.6494241780096574E-5	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.999743851048125	WITHOUT_CLASSIFICATION	2.5614895187496686E-4	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999998126781493	WITHOUT_CLASSIFICATION	1.873218506541234E-7	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999998774254217	WITHOUT_CLASSIFICATION	1.2257457823125072E-7	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9999888558458879	WITHOUT_CLASSIFICATION	1.1144154112074888E-5	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999899012776915	WITHOUT_CLASSIFICATION	1.0098722308447292E-5	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999983714303341	WITHOUT_CLASSIFICATION	1.6285696659142028E-6	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999994696034947	WITHOUT_CLASSIFICATION	5.303965053599932E-7	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9999986637516357	WITHOUT_CLASSIFICATION	1.3362483642788777E-6	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999986277652759	WITHOUT_CLASSIFICATION	1.3722347240606625E-6	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999960058818325	WITHOUT_CLASSIFICATION	3.994118167575328E-6	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999987395675595	WITHOUT_CLASSIFICATION	1.260432440561869E-6	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999944606440333	WITHOUT_CLASSIFICATION	5.539355966697722E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9999927981434421	WITHOUT_CLASSIFICATION	7.201856557848296E-6	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999986257610199	WITHOUT_CLASSIFICATION	1.3742389800427396E-6	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999999438217848	WITHOUT_CLASSIFICATION	5.617821505573879E-8	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9999886671915995	WITHOUT_CLASSIFICATION	1.1332808400600395E-5	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9999977453991779	WITHOUT_CLASSIFICATION	2.2546008221092814E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999999103485104	WITHOUT_CLASSIFICATION	8.965148959885327E-8	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9999986233970557	WITHOUT_CLASSIFICATION	1.376602944308973E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999998349539105	WITHOUT_CLASSIFICATION	1.6504608938918116E-7	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.999985181758952	WITHOUT_CLASSIFICATION	1.4818241047889949E-5	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999992390761416	WITHOUT_CLASSIFICATION	7.609238584575043E-7	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999994811032699	WITHOUT_CLASSIFICATION	5.188967302579964E-7	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.999999850927419	WITHOUT_CLASSIFICATION	1.4907258096934407E-7	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.9999775835015697	WITHOUT_CLASSIFICATION	2.2416498430270093E-5	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9997602506803874	WITHOUT_CLASSIFICATION	2.3974931961259855E-4	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999343698940603	WITHOUT_CLASSIFICATION	6.563010593975498E-5	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.999995930090509	WITHOUT_CLASSIFICATION	4.0699094909584696E-6	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999980621249293	WITHOUT_CLASSIFICATION	1.9378750707338144E-6	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999980621249293	WITHOUT_CLASSIFICATION	1.9378750707338144E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999450711479	WITHOUT_CLASSIFICATION	5.492885213127055E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999450711479	WITHOUT_CLASSIFICATION	5.492885213127055E-8	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999997386642916	WITHOUT_CLASSIFICATION	2.6133570849925115E-7	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999704116560726	WITHOUT_CLASSIFICATION	2.9588343927426725E-5	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999999974870647	WITHOUT_CLASSIFICATION	2.5129352424003045E-9	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9999977959833362	WITHOUT_CLASSIFICATION	2.2040166637726207E-6	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999970791154489	WITHOUT_CLASSIFICATION	2.9208845511011512E-6	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999992998065307	WITHOUT_CLASSIFICATION	7.001934692780931E-7	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999998690620113	WITHOUT_CLASSIFICATION	1.3093798863985588E-7	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999997108889942	WITHOUT_CLASSIFICATION	2.891110058623683E-7	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999949476323367	WITHOUT_CLASSIFICATION	5.0523676633351856E-6	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999999097234865	WITHOUT_CLASSIFICATION	9.027651350139994E-8	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999999097234865	WITHOUT_CLASSIFICATION	9.027651350139994E-8	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999884574118525	WITHOUT_CLASSIFICATION	1.1542588147545165E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999884574118525	WITHOUT_CLASSIFICATION	1.1542588147545165E-5	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.999977926854702	WITHOUT_CLASSIFICATION	2.2073145297894237E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999999930487787	WITHOUT_CLASSIFICATION	6.951221270354435E-9	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999999112327864	WITHOUT_CLASSIFICATION	8.876721364377477E-8	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999998341754783	WITHOUT_CLASSIFICATION	1.6582452167404524E-7	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9999997953246533	WITHOUT_CLASSIFICATION	2.0467534671177434E-7	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999999211438555	WITHOUT_CLASSIFICATION	7.885614458600787E-8	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999835166599818	WITHOUT_CLASSIFICATION	1.6483340018250712E-5	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999999552022427	WITHOUT_CLASSIFICATION	4.479775729259753E-8	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.999950647057119	WITHOUT_CLASSIFICATION	4.935294288097872E-5	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999515046904769	WITHOUT_CLASSIFICATION	4.8495309523041043E-5	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9999988223995782	WITHOUT_CLASSIFICATION	1.1776004218863904E-6	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999999203387849	WITHOUT_CLASSIFICATION	7.966121502496088E-8	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.9999973775756749	WITHOUT_CLASSIFICATION	2.622424325169769E-6	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999987197699867	WITHOUT_CLASSIFICATION	1.2802300133888817E-6	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999998830618033	WITHOUT_CLASSIFICATION	1.1693819661018261E-7	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999968909147847	WITHOUT_CLASSIFICATION	3.109085215386801E-6	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999998844765303	WITHOUT_CLASSIFICATION	1.1552346964110274E-7	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999962720830972	WITHOUT_CLASSIFICATION	3.727916902830217E-6	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.999979323872777	WITHOUT_CLASSIFICATION	2.0676127223005205E-5	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.9999996415347101	WITHOUT_CLASSIFICATION	3.5846528985185803E-7	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.999682953020224	WITHOUT_CLASSIFICATION	3.170469797759577E-4	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999981825412427	WITHOUT_CLASSIFICATION	1.8174587572895645E-6	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999998948194218	WITHOUT_CLASSIFICATION	1.0518057832143414E-7	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999996610443616	WITHOUT_CLASSIFICATION	3.3895563835909053E-7	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999975792641638	WITHOUT_CLASSIFICATION	2.4207358362549484E-6	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9996195350146605	WITHOUT_CLASSIFICATION	3.8046498533949224E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999952981152618	WITHOUT_CLASSIFICATION	4.701884738239764E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999990979522332	WITHOUT_CLASSIFICATION	9.02047766674254E-7	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999990979522332	WITHOUT_CLASSIFICATION	9.02047766674254E-7	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999775573027091	WITHOUT_CLASSIFICATION	2.2442697290899296E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9999972166108247	WITHOUT_CLASSIFICATION	2.7833891752476814E-6	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999999431848298	WITHOUT_CLASSIFICATION	5.681517035148536E-8	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9997649212936148	WITHOUT_CLASSIFICATION	2.3507870638524525E-4	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999988321802781	WITHOUT_CLASSIFICATION	1.1678197219344943E-6	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999990701520598	WITHOUT_CLASSIFICATION	9.29847940123831E-7	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999983217382044	WITHOUT_CLASSIFICATION	1.6782617956886171E-6	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999278448592468	WITHOUT_CLASSIFICATION	7.215514075321951E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999450711479	WITHOUT_CLASSIFICATION	5.492885213127055E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999450711479	WITHOUT_CLASSIFICATION	5.492885213127055E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999450711479	WITHOUT_CLASSIFICATION	5.492885213127055E-8	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9996195350146605	WITHOUT_CLASSIFICATION	3.8046498533949224E-4	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999142348246544	WITHOUT_CLASSIFICATION	8.57651753455813E-5	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999980694602096	WITHOUT_CLASSIFICATION	1.9305397903510207E-6	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999986615122205	WITHOUT_CLASSIFICATION	1.3384877795465626E-6	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9998306026244249	WITHOUT_CLASSIFICATION	1.693973755752088E-4	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999766889313885	WITHOUT_CLASSIFICATION	2.3311068611620455E-5	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999992054207094	WITHOUT_CLASSIFICATION	7.945792905839734E-7	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999984905599716	WITHOUT_CLASSIFICATION	1.5094400284948236E-6	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999999351543103	WITHOUT_CLASSIFICATION	6.484568977558279E-8	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9999979221627159	WITHOUT_CLASSIFICATION	2.0778372841484904E-6	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999992519752786	WITHOUT_CLASSIFICATION	7.48024721524728E-7	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.999999976070049	WITHOUT_CLASSIFICATION	2.392995100431583E-8	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999999274104826	WITHOUT_CLASSIFICATION	7.258951740396194E-8	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.999999896298229	WITHOUT_CLASSIFICATION	1.0370177092255023E-7	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999986298932362	WITHOUT_CLASSIFICATION	1.3701067638771952E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.999998771238045	WITHOUT_CLASSIFICATION	1.228761954938019E-6	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9999947127933462	WITHOUT_CLASSIFICATION	5.287206653789016E-6	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9996270738465214	WITHOUT_CLASSIFICATION	3.729261534785733E-4	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999893405817737	WITHOUT_CLASSIFICATION	1.0659418226392516E-5	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9999972815799092	WITHOUT_CLASSIFICATION	2.7184200908321352E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999991994607128	WITHOUT_CLASSIFICATION	8.005392872787673E-7	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999994634434927	WITHOUT_CLASSIFICATION	5.365565073738535E-7	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999999884907764	WITHOUT_CLASSIFICATION	1.1509223500376346E-8	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.999999775167941	WITHOUT_CLASSIFICATION	2.2483205890278657E-7	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.999983647634396	WITHOUT_CLASSIFICATION	1.635236560408675E-5	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999999981421425	WITHOUT_CLASSIFICATION	1.8578576461884664E-9	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999450711479	WITHOUT_CLASSIFICATION	5.492885213127055E-8	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999984905599716	WITHOUT_CLASSIFICATION	1.5094400284948236E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.999998771238045	WITHOUT_CLASSIFICATION	1.228761954938019E-6	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999998682839649	WITHOUT_CLASSIFICATION	1.3171603495417028E-7	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999989838567088	WITHOUT_CLASSIFICATION	1.016143291157758E-6	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999976610451982	WITHOUT_CLASSIFICATION	2.3389548017994198E-6	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9958037660411478	WITHOUT_CLASSIFICATION	0.00419623395885214	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999935998660167	WITHOUT_CLASSIFICATION	6.400133983436715E-6	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9994468842936168	WITHOUT_CLASSIFICATION	5.531157063831456E-4	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9999956619584592	WITHOUT_CLASSIFICATION	4.338041540724222E-6	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999843827477864	WITHOUT_CLASSIFICATION	1.561725221352919E-5	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9999727587760223	WITHOUT_CLASSIFICATION	2.72412239776829E-5	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999998373073744	WITHOUT_CLASSIFICATION	1.626926255387415E-7	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999956705330834	WITHOUT_CLASSIFICATION	4.329466916684222E-6	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.9999956705330834	WITHOUT_CLASSIFICATION	4.329466916684222E-6	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999970798238899	WITHOUT_CLASSIFICATION	2.920176110018379E-6	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9999629961622539	WITHOUT_CLASSIFICATION	3.700383774610767E-5	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999987900147829	WITHOUT_CLASSIFICATION	1.2099852170939452E-6	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999999837669571	WITHOUT_CLASSIFICATION	1.6233042941778212E-8	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.999923042663265	WITHOUT_CLASSIFICATION	7.695733673499784E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999999356272272	WITHOUT_CLASSIFICATION	6.437277270497239E-8	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999982680647368	WITHOUT_CLASSIFICATION	1.7319352631931985E-6	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999993390227627	WITHOUT_CLASSIFICATION	6.609772372898445E-7	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999887020393838	WITHOUT_CLASSIFICATION	1.1297960616148967E-5	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999998764692893	WITHOUT_CLASSIFICATION	1.235307106799063E-7	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999961732959212	WITHOUT_CLASSIFICATION	3.8267040788136885E-6	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999884574118525	WITHOUT_CLASSIFICATION	1.1542588147545165E-5	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999835166599818	WITHOUT_CLASSIFICATION	1.6483340018250712E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.999998771238045	WITHOUT_CLASSIFICATION	1.228761954938019E-6	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.999923042663265	WITHOUT_CLASSIFICATION	7.695733673499784E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999999356272272	WITHOUT_CLASSIFICATION	6.437277270497239E-8	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999772507032034	WITHOUT_CLASSIFICATION	2.274929679651423E-5	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999997340525312	WITHOUT_CLASSIFICATION	2.65947468745179E-7	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9999091663996603	WITHOUT_CLASSIFICATION	9.083360033967564E-5	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9999809703145254	WITHOUT_CLASSIFICATION	1.9029685474601428E-5	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.999998667638774	WITHOUT_CLASSIFICATION	1.3323612259272804E-6	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.9999999097745816	WITHOUT_CLASSIFICATION	9.022541842829288E-8	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9999566482388325	WITHOUT_CLASSIFICATION	4.335176116747806E-5	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9999999315568848	WITHOUT_CLASSIFICATION	6.84431151590469E-8	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.999959424613941	WITHOUT_CLASSIFICATION	4.0575386058857554E-5	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9999989185640564	WITHOUT_CLASSIFICATION	1.0814359435262296E-6	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999998453872885	WITHOUT_CLASSIFICATION	1.5461271157442216E-7	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9999993425652154	WITHOUT_CLASSIFICATION	6.574347845560913E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999918299430575	WITHOUT_CLASSIFICATION	8.170056942487322E-6	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999995125473439	WITHOUT_CLASSIFICATION	4.874526561049371E-7	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9999932228985098	WITHOUT_CLASSIFICATION	6.777101490170715E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999977811699572	WITHOUT_CLASSIFICATION	2.2188300427295242E-6	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999918299430575	WITHOUT_CLASSIFICATION	8.170056942487322E-6	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999918299430575	WITHOUT_CLASSIFICATION	8.170056942487322E-6	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9999918299430575	WITHOUT_CLASSIFICATION	8.170056942487322E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.999999990766	WITHOUT_CLASSIFICATION	9.234000029375406E-9	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999995614658445	WITHOUT_CLASSIFICATION	4.3853415558202644E-7	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999999280051051	WITHOUT_CLASSIFICATION	7.199489491638311E-8	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.999999759326627	WITHOUT_CLASSIFICATION	2.4067337305230106E-7	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.999999065573249	WITHOUT_CLASSIFICATION	9.344267509284489E-7	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9999995081257972	WITHOUT_CLASSIFICATION	4.918742027754915E-7	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9999989516516287	WITHOUT_CLASSIFICATION	1.0483483713079573E-6	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999266774779474	WITHOUT_CLASSIFICATION	7.332252205259192E-5	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999985301115547	WITHOUT_CLASSIFICATION	1.4698884452902896E-6	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999965710945913	WITHOUT_CLASSIFICATION	3.4289054086578494E-6	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9999938409049959	WITHOUT_CLASSIFICATION	6.159095004131488E-6	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9999952343572036	WITHOUT_CLASSIFICATION	4.765642796401958E-6	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999996489711339	WITHOUT_CLASSIFICATION	3.510288660896731E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999868485387762	WITHOUT_CLASSIFICATION	1.3151461223777942E-5	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999733616741304	WITHOUT_CLASSIFICATION	2.663832586953651E-5	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9999269250273035	WITHOUT_CLASSIFICATION	7.307497269645403E-5	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999555370599512	WITHOUT_CLASSIFICATION	4.446294004883173E-5	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999925866486534	WITHOUT_CLASSIFICATION	7.413351346528176E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999999973684449	WITHOUT_CLASSIFICATION	2.6315551932740816E-9	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999999973684449	WITHOUT_CLASSIFICATION	2.6315551932740816E-9	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999998286719	WITHOUT_CLASSIFICATION	1.71328100338166E-9	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956845907362	WITHOUT_CLASSIFICATION	4.315409263804671E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999998286719	WITHOUT_CLASSIFICATION	1.71328100338166E-9	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999999961466615	WITHOUT_CLASSIFICATION	3.8533384933790456E-9	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.999997469409316	WITHOUT_CLASSIFICATION	2.5305906839200567E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.999999996476448	WITHOUT_CLASSIFICATION	3.5235520531946105E-9	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999996225084118	WITHOUT_CLASSIFICATION	3.7749158818451233E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999996225084118	WITHOUT_CLASSIFICATION	3.7749158818451233E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999999963265263	WITHOUT_CLASSIFICATION	3.673473760185449E-9	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999999963265263	WITHOUT_CLASSIFICATION	3.673473760185449E-9	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.999999996640919	WITHOUT_CLASSIFICATION	3.3590809715001838E-9	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.999999996640919	WITHOUT_CLASSIFICATION	3.3590809715001838E-9	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997495167242	WITHOUT_CLASSIFICATION	2.50483275750083E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997495167242	WITHOUT_CLASSIFICATION	2.50483275750083E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997495167242	WITHOUT_CLASSIFICATION	2.50483275750083E-7	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.99999673039973	WITHOUT_CLASSIFICATION	3.269600269966222E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997495167242	WITHOUT_CLASSIFICATION	2.50483275750083E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997495167242	WITHOUT_CLASSIFICATION	2.50483275750083E-7	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999993167623021	WITHOUT_CLASSIFICATION	6.8323769777668E-7	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999999779249629	WITHOUT_CLASSIFICATION	2.207503706454429E-8	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.999999750699153	WITHOUT_CLASSIFICATION	2.493008469781966E-7	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999902502224287	WITHOUT_CLASSIFICATION	9.74977757121102E-6	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999994889080663	WITHOUT_CLASSIFICATION	5.110919336696427E-7	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999999691660909	WITHOUT_CLASSIFICATION	3.0833909183959295E-8	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999967289077603	WITHOUT_CLASSIFICATION	3.2710922396270884E-6	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999991511417721	WITHOUT_CLASSIFICATION	8.488582279725538E-7	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9999981628961917	WITHOUT_CLASSIFICATION	1.8371038083142113E-6	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999998237194285	WITHOUT_CLASSIFICATION	1.7628057146612201E-7	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.999986459087626	WITHOUT_CLASSIFICATION	1.3540912374086242E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999608362274909	WITHOUT_CLASSIFICATION	3.91637725091167E-5	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999975012191884	WITHOUT_CLASSIFICATION	2.4987808115918512E-6	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999982363938346	WITHOUT_CLASSIFICATION	1.7636061654264478E-6	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999997499423219	WITHOUT_CLASSIFICATION	2.500576781655603E-7	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999988554291811	WITHOUT_CLASSIFICATION	1.1445708188825717E-6	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999986226324776	WITHOUT_CLASSIFICATION	1.3773675223934814E-6	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999745428795015	WITHOUT_CLASSIFICATION	2.545712049852278E-5	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999982117225297	WITHOUT_CLASSIFICATION	1.7882774704322654E-6	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999997162565053	WITHOUT_CLASSIFICATION	2.8374349478906746E-7	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999982284736173	WITHOUT_CLASSIFICATION	1.771526382757517E-6	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9999963114254932	WITHOUT_CLASSIFICATION	3.6885745067635246E-6	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9999963114254932	WITHOUT_CLASSIFICATION	3.6885745067635246E-6	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9998451331171831	WITHOUT_CLASSIFICATION	1.5486688281691007E-4	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9998451331171831	WITHOUT_CLASSIFICATION	1.5486688281691007E-4	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999981996151209	WITHOUT_CLASSIFICATION	1.8003848790747856E-6	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999937175741226	WITHOUT_CLASSIFICATION	6.2824258774206975E-6	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999999390568133	WITHOUT_CLASSIFICATION	6.094318674638795E-8	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999998569201098	WITHOUT_CLASSIFICATION	1.4307989014525432E-7	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.999999756103547	WITHOUT_CLASSIFICATION	2.438964531000231E-7	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999991500046908	WITHOUT_CLASSIFICATION	8.499953091903062E-7	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999997742001344	WITHOUT_CLASSIFICATION	2.2579986551857852E-7	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9999671157216349	WITHOUT_CLASSIFICATION	3.288427836504415E-5	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9999998710300715	WITHOUT_CLASSIFICATION	1.2896992847265698E-7	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999999181668386	WITHOUT_CLASSIFICATION	8.183316133391948E-8	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999999486198167	WITHOUT_CLASSIFICATION	5.138018329305423E-8	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999998904590509	WITHOUT_CLASSIFICATION	1.095409490036231E-7	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999836601163065	WITHOUT_CLASSIFICATION	1.633988369348844E-5	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999998853159253	WITHOUT_CLASSIFICATION	1.1468407474419454E-7	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999996839518446	WITHOUT_CLASSIFICATION	3.160481554417692E-7	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999964355669116	WITHOUT_CLASSIFICATION	3.564433088249286E-6	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999996494709327	WITHOUT_CLASSIFICATION	3.50529067404715E-7	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9999930329778353	WITHOUT_CLASSIFICATION	6.967022164787618E-6	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999996161946093	WITHOUT_CLASSIFICATION	3.838053907451463E-7	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.999984895926955	WITHOUT_CLASSIFICATION	1.5104073044839782E-5	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.9999998527231877	WITHOUT_CLASSIFICATION	1.472768123185942E-7	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999978255155053	WITHOUT_CLASSIFICATION	2.174484494699995E-6	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999998701856487	WITHOUT_CLASSIFICATION	1.29814351171671E-7	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.999833685405238	WITHOUT_CLASSIFICATION	1.663145947620005E-4	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999979096945744	WITHOUT_CLASSIFICATION	2.0903054255784327E-6	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999991550283296	WITHOUT_CLASSIFICATION	8.449716704569459E-7	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9998893090987842	WITHOUT_CLASSIFICATION	1.1069090121578654E-4	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.999972985592863	WITHOUT_CLASSIFICATION	2.701440713715468E-5	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999995875537205	WITHOUT_CLASSIFICATION	4.124462794828266E-7	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.999999765322618	WITHOUT_CLASSIFICATION	2.3467738193372006E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999772058367	WITHOUT_CLASSIFICATION	2.279416328547781E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999865710501	WITHOUT_CLASSIFICATION	1.3428949898688004E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999999120090812	WITHOUT_CLASSIFICATION	8.799091873198865E-8	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995336475015	WITHOUT_CLASSIFICATION	4.663524984602628E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998664073468	WITHOUT_CLASSIFICATION	1.3359265315886893E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999987629828716	WITHOUT_CLASSIFICATION	1.2370171284720354E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999437849887	WITHOUT_CLASSIFICATION	5.621501127605708E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999999287472118	WITHOUT_CLASSIFICATION	7.125278827782111E-8	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999995921962157	WITHOUT_CLASSIFICATION	4.078037842057799E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999998531247801	WITHOUT_CLASSIFICATION	1.4687521991176484E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999896598637183	WITHOUT_CLASSIFICATION	1.0340136281776428E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999982770333233	WITHOUT_CLASSIFICATION	1.7229666766552356E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999996023711366	WITHOUT_CLASSIFICATION	3.976288634123669E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998576997695	WITHOUT_CLASSIFICATION	1.4230023051106613E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989571759014	WITHOUT_CLASSIFICATION	1.042824098646734E-6	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999724914402883	WITHOUT_CLASSIFICATION	2.7508559711684473E-5	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.99999987568262	WITHOUT_CLASSIFICATION	1.2431737982839675E-7	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999997332147845	WITHOUT_CLASSIFICATION	2.667852153850844E-7	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999999588181275	WITHOUT_CLASSIFICATION	4.11818724488796E-8	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9999991456693397	WITHOUT_CLASSIFICATION	8.543306602980317E-7	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999999592165482	WITHOUT_CLASSIFICATION	4.0783451874815995E-8	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9999999721327288	WITHOUT_CLASSIFICATION	2.78672710883284E-8	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999999193192016	WITHOUT_CLASSIFICATION	8.068079837875902E-8	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999999224183928	WITHOUT_CLASSIFICATION	7.758160735442254E-8	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999949749974423	WITHOUT_CLASSIFICATION	5.025002557724437E-6	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999892545348212	WITHOUT_CLASSIFICATION	1.0745465178753735E-5	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9999711514085007	WITHOUT_CLASSIFICATION	2.8848591499202153E-5	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9999933458956063	WITHOUT_CLASSIFICATION	6.654104393714926E-6	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999813034693376	WITHOUT_CLASSIFICATION	1.869653066241014E-5	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9999596121908124	WITHOUT_CLASSIFICATION	4.038780918747455E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9999945084126903	WITHOUT_CLASSIFICATION	5.4915873095808025E-6	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9999894909399423	WITHOUT_CLASSIFICATION	1.050906005763856E-5	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999532828950569	WITHOUT_CLASSIFICATION	4.671710494320493E-5	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.9999865792243386	WITHOUT_CLASSIFICATION	1.342077566128161E-5	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.99999879218543	WITHOUT_CLASSIFICATION	1.2078145700384862E-6	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9999929873654694	WITHOUT_CLASSIFICATION	7.012634530679323E-6	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9995562312464127	WITHOUT_CLASSIFICATION	4.4376875358734236E-4	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.999994345821431	WITHOUT_CLASSIFICATION	5.65417856903482E-6	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9999995911398453	WITHOUT_CLASSIFICATION	4.088601548035358E-7	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.998508579992025	WITHOUT_CLASSIFICATION	0.0014914200079749935	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9999854845548309	WITHOUT_CLASSIFICATION	1.4515445169088737E-5	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9999999549059643	WITHOUT_CLASSIFICATION	4.50940357424109E-8	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999999825722293	WITHOUT_CLASSIFICATION	1.7427770675054165E-8	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.999999296540551	WITHOUT_CLASSIFICATION	7.034594490724119E-7	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999999125834285	WITHOUT_CLASSIFICATION	8.741657154832282E-8	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999986351646806	WITHOUT_CLASSIFICATION	1.364835319454949E-6	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999993685553745	WITHOUT_CLASSIFICATION	6.314446255300712E-7	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.9998821410798946	WITHOUT_CLASSIFICATION	1.1785892010540508E-4	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9999998434565293	WITHOUT_CLASSIFICATION	1.5654347065142642E-7	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999959770643041	WITHOUT_CLASSIFICATION	4.022935695892267E-6	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999619089180841	WITHOUT_CLASSIFICATION	3.8091081915903536E-5	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999992419272062	WITHOUT_CLASSIFICATION	7.5807279371427E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.999999419941024	WITHOUT_CLASSIFICATION	5.800589759406513E-7	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.999983743445096	WITHOUT_CLASSIFICATION	1.6256554903995256E-5	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999998602369884	WITHOUT_CLASSIFICATION	1.3976301154824996E-7	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999487373480358	WITHOUT_CLASSIFICATION	5.1262651964302E-5	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999998604527162	WITHOUT_CLASSIFICATION	1.3954728381078345E-7	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999985775703244	WITHOUT_CLASSIFICATION	1.4224296755607228E-6	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999951586017781	WITHOUT_CLASSIFICATION	4.841398221917193E-6	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.999990217698048	WITHOUT_CLASSIFICATION	9.782301951989556E-6	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9999994172432608	WITHOUT_CLASSIFICATION	5.827567392082409E-7	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999968670335571	WITHOUT_CLASSIFICATION	3.132966443051988E-6	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999893459704983	WITHOUT_CLASSIFICATION	1.0654029501635759E-5	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9999997378936324	WITHOUT_CLASSIFICATION	2.621063676920843E-7	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9999774351015802	WITHOUT_CLASSIFICATION	2.256489841975482E-5	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999990273700221	WITHOUT_CLASSIFICATION	9.72629977904901E-7	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999925641526526	WITHOUT_CLASSIFICATION	7.435847347440965E-6	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999998980449419	WITHOUT_CLASSIFICATION	1.0195505811014175E-7	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.999999844887298	WITHOUT_CLASSIFICATION	1.5511270194895605E-7	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999924826456441	WITHOUT_CLASSIFICATION	7.517354355893664E-6	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.999995750573104	WITHOUT_CLASSIFICATION	4.2494268959916E-6	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.999995750573104	WITHOUT_CLASSIFICATION	4.2494268959916E-6	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999999939741054	WITHOUT_CLASSIFICATION	6.0258945825816426E-9	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999607384543777	WITHOUT_CLASSIFICATION	3.926154562226291E-5	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999907772733556	WITHOUT_CLASSIFICATION	9.222726644425709E-6	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.9999981684962707	WITHOUT_CLASSIFICATION	1.8315037293713562E-6	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999995193337072	WITHOUT_CLASSIFICATION	4.806662927382517E-7	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9999532121739063	WITHOUT_CLASSIFICATION	4.678782609362492E-5	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999994672142746	WITHOUT_CLASSIFICATION	5.327857254453915E-7	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9999997474328288	WITHOUT_CLASSIFICATION	2.52567171155267E-7	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999944690956702	WITHOUT_CLASSIFICATION	5.530904329783502E-6	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999994620841457	WITHOUT_CLASSIFICATION	5.379158543867108E-7	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999999846773098	WITHOUT_CLASSIFICATION	1.532269016080293E-8	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9998669006430306	WITHOUT_CLASSIFICATION	1.3309935696929383E-4	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999958251688491	WITHOUT_CLASSIFICATION	4.174831150853035E-6	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9999999527316099	WITHOUT_CLASSIFICATION	4.726839013175967E-8	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999999509257855	WITHOUT_CLASSIFICATION	4.9074214422120373E-8	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9999998646152678	WITHOUT_CLASSIFICATION	1.3538473228387785E-7	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9999872754839942	WITHOUT_CLASSIFICATION	1.2724516005712489E-5	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999999720496955	WITHOUT_CLASSIFICATION	2.7950304455293947E-8	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999976480918795	WITHOUT_CLASSIFICATION	2.3519081205894563E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9998543236684969	WITHOUT_CLASSIFICATION	1.4567633150318937E-4	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.999999830331408	WITHOUT_CLASSIFICATION	1.6966859200572876E-7	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999853995432865	WITHOUT_CLASSIFICATION	1.4600456713667857E-5	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999999478204624	WITHOUT_CLASSIFICATION	5.217953743942226E-8	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999999366730555	WITHOUT_CLASSIFICATION	6.332694441446339E-8	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999999126807588	WITHOUT_CLASSIFICATION	8.731924114416782E-8	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999996725419826	WITHOUT_CLASSIFICATION	3.2745801730872604E-7	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999942839193737	WITHOUT_CLASSIFICATION	5.716080626325565E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997495167242	WITHOUT_CLASSIFICATION	2.50483275750083E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997495167242	WITHOUT_CLASSIFICATION	2.50483275750083E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997495167242	WITHOUT_CLASSIFICATION	2.50483275750083E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997495167242	WITHOUT_CLASSIFICATION	2.50483275750083E-7	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999772894543859	WITHOUT_CLASSIFICATION	2.271054561403953E-5	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9999996864101713	WITHOUT_CLASSIFICATION	3.1358982864282913E-7	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999990894943699	WITHOUT_CLASSIFICATION	9.105056301624729E-7	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9999893034144671	WITHOUT_CLASSIFICATION	1.0696585532733021E-5	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999999092950865	WITHOUT_CLASSIFICATION	9.070491341382413E-8	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999979115652621	WITHOUT_CLASSIFICATION	2.088434737892576E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999996393565748	WITHOUT_CLASSIFICATION	3.6064342522571063E-7	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999998911702366	WITHOUT_CLASSIFICATION	1.0882976344054713E-7	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999958505031187	WITHOUT_CLASSIFICATION	4.149496881257206E-6	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999976170584549	WITHOUT_CLASSIFICATION	2.3829415450673378E-6	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999987276033027	WITHOUT_CLASSIFICATION	1.2723966973787625E-6	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999628774991351	WITHOUT_CLASSIFICATION	3.7122500864888384E-5	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999972633135341	WITHOUT_CLASSIFICATION	2.7366864659065755E-6	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.999995723998893	WITHOUT_CLASSIFICATION	4.276001106973886E-6	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999998930074477	WITHOUT_CLASSIFICATION	1.06992552324943E-7	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999280081239187	WITHOUT_CLASSIFICATION	7.1991876081297E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999999973684449	WITHOUT_CLASSIFICATION	2.6315551932740816E-9	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999999973684449	WITHOUT_CLASSIFICATION	2.6315551932740816E-9	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999998286719	WITHOUT_CLASSIFICATION	1.71328100338166E-9	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.999999998286719	WITHOUT_CLASSIFICATION	1.71328100338166E-9	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999998100895295	WITHOUT_CLASSIFICATION	1.8991047049735948E-7	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9998823013754676	WITHOUT_CLASSIFICATION	1.1769862453239749E-4	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999998931572286	WITHOUT_CLASSIFICATION	1.0684277147890252E-7	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999999223223285	WITHOUT_CLASSIFICATION	7.767767149576809E-8	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9999983350927678	WITHOUT_CLASSIFICATION	1.6649072322340673E-6	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.999996104086346	WITHOUT_CLASSIFICATION	3.895913654026118E-6	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9999975226942138	WITHOUT_CLASSIFICATION	2.4773057861970233E-6	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.999999878564157	WITHOUT_CLASSIFICATION	1.2143584299923867E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999342700858113	WITHOUT_CLASSIFICATION	6.572991418875171E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999342700858113	WITHOUT_CLASSIFICATION	6.572991418875171E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.99999984956487	WITHOUT_CLASSIFICATION	1.504351299703527E-7	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.99999984956487	WITHOUT_CLASSIFICATION	1.504351299703527E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999977811699572	WITHOUT_CLASSIFICATION	2.2188300427295242E-6	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.999997469409316	WITHOUT_CLASSIFICATION	2.5305906839200567E-6	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999999961466615	WITHOUT_CLASSIFICATION	3.8533384933790456E-9	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.999999996476448	WITHOUT_CLASSIFICATION	3.5235520531946105E-9	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999996225084118	WITHOUT_CLASSIFICATION	3.7749158818451233E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999996225084118	WITHOUT_CLASSIFICATION	3.7749158818451233E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999999963265263	WITHOUT_CLASSIFICATION	3.673473760185449E-9	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999999963265263	WITHOUT_CLASSIFICATION	3.673473760185449E-9	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.999999996640919	WITHOUT_CLASSIFICATION	3.3590809715001838E-9	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.999999996640919	WITHOUT_CLASSIFICATION	3.3590809715001838E-9	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9999939734382042	WITHOUT_CLASSIFICATION	6.026561795812264E-6	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999997106124829	WITHOUT_CLASSIFICATION	2.8938751703273805E-7	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9999818000859187	WITHOUT_CLASSIFICATION	1.819991408124498E-5	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9997677640871121	WITHOUT_CLASSIFICATION	2.3223591288795313E-4	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999996293752108	WITHOUT_CLASSIFICATION	3.7062478919814803E-7	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999997388042476	WITHOUT_CLASSIFICATION	2.6119575229094997E-7	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999996255463756	WITHOUT_CLASSIFICATION	3.744536244401951E-7	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9999963670829898	WITHOUT_CLASSIFICATION	3.6329170101864117E-6	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9999999267120114	WITHOUT_CLASSIFICATION	7.328798848983874E-8	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.999991879702494	WITHOUT_CLASSIFICATION	8.120297505921413E-6	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999995495611165	WITHOUT_CLASSIFICATION	4.504388836105325E-7	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9999960212417996	WITHOUT_CLASSIFICATION	3.978758200407075E-6	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999998769912	WITHOUT_CLASSIFICATION	1.230088000357458E-7	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999996622252536	WITHOUT_CLASSIFICATION	3.377747464220835E-7	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999970346780399	WITHOUT_CLASSIFICATION	2.965321960074195E-6	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999833610457799	WITHOUT_CLASSIFICATION	1.6638954220090458E-5	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999992468493034	WITHOUT_CLASSIFICATION	7.531506966587615E-7	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999984497283516	WITHOUT_CLASSIFICATION	1.5502716483680543E-6	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999999867140683	WITHOUT_CLASSIFICATION	1.3285931692669116E-8	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.999998344301876	WITHOUT_CLASSIFICATION	1.6556981240119625E-6	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.99999990413319	WITHOUT_CLASSIFICATION	9.586681005810477E-8	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9999988943605181	WITHOUT_CLASSIFICATION	1.1056394818911856E-6	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999963492030891	WITHOUT_CLASSIFICATION	3.6507969109647378E-6	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999999440978756	WITHOUT_CLASSIFICATION	5.590212438798603E-8	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999994684769636	WITHOUT_CLASSIFICATION	5.315230363852285E-7	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999999730781542	WITHOUT_CLASSIFICATION	2.6921845685973826E-8	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9999608573266165	WITHOUT_CLASSIFICATION	3.914267338334495E-5	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999998958836013	WITHOUT_CLASSIFICATION	1.0411639871086305E-7	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9999704402424916	WITHOUT_CLASSIFICATION	2.955975750840974E-5	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9999535490533327	WITHOUT_CLASSIFICATION	4.6450946667306866E-5	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999999934038513	WITHOUT_CLASSIFICATION	6.596148783508801E-9	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.99999518545427	WITHOUT_CLASSIFICATION	4.814545729959329E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.999999758287145	WITHOUT_CLASSIFICATION	2.417128550072257E-7	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9999995092814402	WITHOUT_CLASSIFICATION	4.907185597537501E-7	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999993563800246	WITHOUT_CLASSIFICATION	6.436199754382941E-7	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999999426583319	WITHOUT_CLASSIFICATION	5.734166808966897E-8	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999997969657772	WITHOUT_CLASSIFICATION	2.0303422280726134E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.999999987807848	WITHOUT_CLASSIFICATION	1.2192151911709827E-8	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999999422181567	WITHOUT_CLASSIFICATION	5.778184324364937E-8	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999998989788653	WITHOUT_CLASSIFICATION	1.0102113468596071E-7	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.999999869658492	WITHOUT_CLASSIFICATION	1.3034150811279427E-7	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999967072137048	WITHOUT_CLASSIFICATION	3.2927862953006933E-6	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999998958156414	WITHOUT_CLASSIFICATION	1.0418435850538118E-7	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999995345561511	WITHOUT_CLASSIFICATION	4.6544384891991235E-7	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999999749708454	WITHOUT_CLASSIFICATION	2.502915468636872E-8	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999734786720157	WITHOUT_CLASSIFICATION	2.652132798427669E-5	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9992387153618676	WITHOUT_CLASSIFICATION	7.612846381323308E-4	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9999998918934703	WITHOUT_CLASSIFICATION	1.0810652973644467E-7	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9998993054554473	WITHOUT_CLASSIFICATION	1.0069454455269305E-4	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999910805205957	WITHOUT_CLASSIFICATION	8.919479404358036E-6	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999816969356499	WITHOUT_CLASSIFICATION	1.8303064350136955E-5	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999955661296877	WITHOUT_CLASSIFICATION	4.4338703122644885E-6	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9997679627667331	WITHOUT_CLASSIFICATION	2.3203723326703615E-4	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9998414613410218	WITHOUT_CLASSIFICATION	1.5853865897817352E-4	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.999975927875906	WITHOUT_CLASSIFICATION	2.4072124094103126E-5	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999998565641569	WITHOUT_CLASSIFICATION	1.434358431243744E-7	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.99999632453826	WITHOUT_CLASSIFICATION	3.6754617399010186E-6	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999999417358207	WITHOUT_CLASSIFICATION	5.8264179263932904E-8	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999998900906604	WITHOUT_CLASSIFICATION	1.0990933960008901E-7	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999999419070694	WITHOUT_CLASSIFICATION	5.809293054598242E-8	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9999998595563298	WITHOUT_CLASSIFICATION	1.4044367020898458E-7	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999999997675537	WITHOUT_CLASSIFICATION	2.324462497882176E-10	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999999672105092	WITHOUT_CLASSIFICATION	3.2789490764002126E-8	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999999207592819	WITHOUT_CLASSIFICATION	7.924071803566787E-8	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999998685447874	WITHOUT_CLASSIFICATION	1.3145521253477296E-7	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9999514274400965	WITHOUT_CLASSIFICATION	4.857255990355234E-5	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999983240445988	WITHOUT_CLASSIFICATION	1.675955401198735E-6	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.999998984158406	WITHOUT_CLASSIFICATION	1.0158415940286515E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999437849887	WITHOUT_CLASSIFICATION	5.621501127605708E-8	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9992505122467311	WITHOUT_CLASSIFICATION	7.494877532688772E-4	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999984253581485	WITHOUT_CLASSIFICATION	1.5746418514608264E-6	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999997867474513	WITHOUT_CLASSIFICATION	2.1325254877275375E-7	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999984404203196	WITHOUT_CLASSIFICATION	1.559579680384713E-6	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999999163234493	WITHOUT_CLASSIFICATION	8.367655064019788E-8	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999999777781821	WITHOUT_CLASSIFICATION	2.222181792532E-8	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999999191663419	WITHOUT_CLASSIFICATION	8.083365814290392E-8	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999916774581593	WITHOUT_CLASSIFICATION	8.32254184067078E-6	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999999428280952	WITHOUT_CLASSIFICATION	5.7171904704563825E-8	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9999988844446194	WITHOUT_CLASSIFICATION	1.1155553807006825E-6	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999999827513733	WITHOUT_CLASSIFICATION	1.724862677787569E-8	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9999985796229883	WITHOUT_CLASSIFICATION	1.4203770116622994E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999999287472118	WITHOUT_CLASSIFICATION	7.125278827782111E-8	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999963567630951	WITHOUT_CLASSIFICATION	3.643236904902775E-6	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9999999997760064	WITHOUT_CLASSIFICATION	2.239936504484198E-10	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9999755789904471	WITHOUT_CLASSIFICATION	2.4421009552935217E-5	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999999210827578	WITHOUT_CLASSIFICATION	7.891724223244184E-8	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999999970830735	WITHOUT_CLASSIFICATION	2.9169264993262555E-9	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9999657491327966	WITHOUT_CLASSIFICATION	3.425086720351102E-5	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999995555102558	WITHOUT_CLASSIFICATION	4.444897442885557E-7	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999998986327526	WITHOUT_CLASSIFICATION	1.0136724732397739E-7	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999939015417876	WITHOUT_CLASSIFICATION	6.0984582123768684E-6	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9999994850877396	WITHOUT_CLASSIFICATION	5.149122604019404E-7	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999994164149296	WITHOUT_CLASSIFICATION	5.835850703716921E-7	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999095783937699	WITHOUT_CLASSIFICATION	9.042160623007481E-5	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9998503882477789	WITHOUT_CLASSIFICATION	1.4961175222098305E-4	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999995526554554	WITHOUT_CLASSIFICATION	4.473445445960778E-7	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999994125190746	WITHOUT_CLASSIFICATION	5.874809253033343E-7	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.999998095424435	WITHOUT_CLASSIFICATION	1.9045755649882956E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.999999650096671	WITHOUT_CLASSIFICATION	3.499033289663506E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999717788494624	WITHOUT_CLASSIFICATION	2.8221150537485722E-5	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999975322304097	WITHOUT_CLASSIFICATION	2.4677695903221265E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999975322304097	WITHOUT_CLASSIFICATION	2.4677695903221265E-6	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999997191897845	WITHOUT_CLASSIFICATION	2.8081021555504997E-7	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999966468172172	WITHOUT_CLASSIFICATION	3.353182782782347E-6	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999979655499683	WITHOUT_CLASSIFICATION	2.0344500316971795E-6	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999831671616272	WITHOUT_CLASSIFICATION	1.683283837287451E-5	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999997733437982	WITHOUT_CLASSIFICATION	2.2665620170641264E-7	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999995682601936	WITHOUT_CLASSIFICATION	4.3173980634228994E-7	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9999986056630271	WITHOUT_CLASSIFICATION	1.3943369729054122E-6	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999975150988681	WITHOUT_CLASSIFICATION	2.4849011318605292E-6	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999950702952612	WITHOUT_CLASSIFICATION	4.929704738817213E-6	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9999995729374912	WITHOUT_CLASSIFICATION	4.270625087944932E-7	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999991825437878	WITHOUT_CLASSIFICATION	8.174562121282527E-7	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999998767709583	WITHOUT_CLASSIFICATION	1.2322904173886638E-7	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.999996093877862	WITHOUT_CLASSIFICATION	3.906122137993151E-6	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999994821394782	WITHOUT_CLASSIFICATION	5.178605218223903E-7	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9999896453296476	WITHOUT_CLASSIFICATION	1.035467035234169E-5	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999997709553076	WITHOUT_CLASSIFICATION	2.2904469251645816E-7	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999954677585032	WITHOUT_CLASSIFICATION	4.532241496821443E-6	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9999805289360083	WITHOUT_CLASSIFICATION	1.9471063991736962E-5	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999998255293456	WITHOUT_CLASSIFICATION	1.7447065442182163E-7	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999998782509784	WITHOUT_CLASSIFICATION	1.2174902167020064E-7	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.999999649335817	WITHOUT_CLASSIFICATION	3.5066418302783294E-7	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999998381045896	WITHOUT_CLASSIFICATION	1.6189541047310542E-7	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.999998626841008	WITHOUT_CLASSIFICATION	1.373158991886186E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999999729835901	WITHOUT_CLASSIFICATION	2.7016409852546586E-8	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999996548587595	WITHOUT_CLASSIFICATION	3.4514124047695385E-7	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999999549603495	WITHOUT_CLASSIFICATION	4.503965034168785E-8	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999984232139956	WITHOUT_CLASSIFICATION	1.5767860045509326E-6	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9999998109311999	WITHOUT_CLASSIFICATION	1.8906880005425275E-7	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999975781879847	WITHOUT_CLASSIFICATION	2.421812015238116E-6	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999996980515178	WITHOUT_CLASSIFICATION	3.0194848227800603E-7	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.999381692618003	WITHOUT_CLASSIFICATION	6.183073819969925E-4	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9999796184117751	WITHOUT_CLASSIFICATION	2.0381588224959396E-5	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999879501843578	WITHOUT_CLASSIFICATION	1.2049815642212682E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999987039033623	WITHOUT_CLASSIFICATION	1.2960966377087916E-6	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999990001958126	WITHOUT_CLASSIFICATION	9.99804187488848E-7	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999935644529211	WITHOUT_CLASSIFICATION	6.435547078960048E-6	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9999998091215029	WITHOUT_CLASSIFICATION	1.9087849716246087E-7	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999975781879847	WITHOUT_CLASSIFICATION	2.421812015238116E-6	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999995765105478	WITHOUT_CLASSIFICATION	4.23489452134468E-7	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999999866596383	WITHOUT_CLASSIFICATION	1.334036166120592E-8	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999188252821295	WITHOUT_CLASSIFICATION	8.117471787044957E-5	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.999991498332872	WITHOUT_CLASSIFICATION	8.501667128023704E-6	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999854592258347	WITHOUT_CLASSIFICATION	1.4540774165347818E-5	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999900192918614	WITHOUT_CLASSIFICATION	9.98070813868863E-6	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999990933308521	WITHOUT_CLASSIFICATION	9.066691478715444E-7	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9999806711400087	WITHOUT_CLASSIFICATION	1.9328859991371775E-5	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999991983113378	WITHOUT_CLASSIFICATION	8.016886621310239E-7	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999991014970656	WITHOUT_CLASSIFICATION	8.985029343960417E-7	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999893965700232	WITHOUT_CLASSIFICATION	1.0603429976794106E-5	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999976222957802	WITHOUT_CLASSIFICATION	2.377704219813377E-6	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999952542051318	WITHOUT_CLASSIFICATION	4.745794868196055E-6	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9998185021475453	WITHOUT_CLASSIFICATION	1.8149785245475772E-4	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999912217514051	WITHOUT_CLASSIFICATION	8.778248594886819E-6	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9998544255937434	WITHOUT_CLASSIFICATION	1.455744062565951E-4	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9998544255937434	WITHOUT_CLASSIFICATION	1.455744062565951E-4	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9860139632290585	WITHOUT_CLASSIFICATION	0.013986036770941514	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.999877088453851	WITHOUT_CLASSIFICATION	1.2291154614888349E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999174549027532	WITHOUT_CLASSIFICATION	8.254509724678234E-5	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9998261724366483	WITHOUT_CLASSIFICATION	1.738275633517217E-4	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999915910060991	WITHOUT_CLASSIFICATION	8.408993900966535E-6	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999978346217951	WITHOUT_CLASSIFICATION	2.165378204834465E-6	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.9999280562848503	WITHOUT_CLASSIFICATION	7.194371514973895E-5	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999970009213942	WITHOUT_CLASSIFICATION	2.999078605795027E-6	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9996464414108566	WITHOUT_CLASSIFICATION	3.5355858914340373E-4	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999977935191784	WITHOUT_CLASSIFICATION	2.20648082149055E-6	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999999794488118	WITHOUT_CLASSIFICATION	2.0551188147433844E-8	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9847954098726677	WITHOUT_CLASSIFICATION	0.015204590127332364	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999974787867	WITHOUT_CLASSIFICATION	2.5212133805703828E-9	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956845907362	WITHOUT_CLASSIFICATION	4.315409263804671E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956845907362	WITHOUT_CLASSIFICATION	4.315409263804671E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999174549027532	WITHOUT_CLASSIFICATION	8.254509724678234E-5	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999999794488118	WITHOUT_CLASSIFICATION	2.0551188147433844E-8	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9998811395455308	WITHOUT_CLASSIFICATION	1.1886045446921245E-4	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9999801919697371	WITHOUT_CLASSIFICATION	1.980803026289611E-5	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9999345029823503	WITHOUT_CLASSIFICATION	6.549701764971345E-5	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.99997478985514	WITHOUT_CLASSIFICATION	2.5210144860031086E-5	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999797528489802	WITHOUT_CLASSIFICATION	2.0247151019823828E-5	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999980343323416	WITHOUT_CLASSIFICATION	1.96566765847366E-6	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9999980154634092	WITHOUT_CLASSIFICATION	1.98453659080244E-6	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999987767132615	WITHOUT_CLASSIFICATION	1.2232867384495974E-6	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999999915190424	WITHOUT_CLASSIFICATION	8.480957586983446E-9	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999834822232523	WITHOUT_CLASSIFICATION	1.651777674763033E-5	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9999967077659757	WITHOUT_CLASSIFICATION	3.292234024214798E-6	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9999968478650418	WITHOUT_CLASSIFICATION	3.152134958168734E-6	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9999003127176306	WITHOUT_CLASSIFICATION	9.96872823694285E-5	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999879549582928	WITHOUT_CLASSIFICATION	1.2045041707155512E-5	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.999992255206964	WITHOUT_CLASSIFICATION	7.744793036047776E-6	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.999999111586601	WITHOUT_CLASSIFICATION	8.884133989461794E-7	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999999553878965	WITHOUT_CLASSIFICATION	4.4612103475593395E-8	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999996031861617	WITHOUT_CLASSIFICATION	3.968138383013667E-7	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.999999792692367	WITHOUT_CLASSIFICATION	2.0730763292124913E-7	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999938585046022	WITHOUT_CLASSIFICATION	6.1414953978779485E-6	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9999786257103594	WITHOUT_CLASSIFICATION	2.1374289640571525E-5	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9999971604559217	WITHOUT_CLASSIFICATION	2.8395440782921147E-6	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9908333765125128	WITHOUT_CLASSIFICATION	0.009166623487487124	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9998480046642475	WITHOUT_CLASSIFICATION	1.5199533575243346E-4	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999908060505	WITHOUT_CLASSIFICATION	9.19394938258543E-9	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999992174515792	WITHOUT_CLASSIFICATION	7.825484208942195E-7	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999997643662308	WITHOUT_CLASSIFICATION	2.3563376927532836E-7	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999999190066873	WITHOUT_CLASSIFICATION	8.099331271895267E-8	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9999617142137917	WITHOUT_CLASSIFICATION	3.828578620842881E-5	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9994511111787168	WITHOUT_CLASSIFICATION	5.48888821283245E-4	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999999760050892	WITHOUT_CLASSIFICATION	2.3994910900790607E-8	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999999580410674	WITHOUT_CLASSIFICATION	4.195893248639789E-8	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999996264409092	WITHOUT_CLASSIFICATION	3.7355909076784643E-7	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999963025943738	WITHOUT_CLASSIFICATION	3.6974056262829135E-6	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.999999146765981	WITHOUT_CLASSIFICATION	8.53234018932576E-7	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999998842771136	WITHOUT_CLASSIFICATION	1.1572288643499461E-7	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999999379779699	WITHOUT_CLASSIFICATION	6.202203010910485E-8	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999998145100253	WITHOUT_CLASSIFICATION	1.8548997478915165E-7	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999998642558668	WITHOUT_CLASSIFICATION	1.3574413319718404E-7	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999997844299949	WITHOUT_CLASSIFICATION	2.155700052039246E-7	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999998516757825	WITHOUT_CLASSIFICATION	1.483242174486714E-7	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999841021794121	WITHOUT_CLASSIFICATION	1.589782058788637E-5	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999996110880067	WITHOUT_CLASSIFICATION	3.889119932761021E-7	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9999606332263483	WITHOUT_CLASSIFICATION	3.936677365167809E-5	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999823958990123	WITHOUT_CLASSIFICATION	1.7604100987726014E-5	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9998879399879478	WITHOUT_CLASSIFICATION	1.1206001205227458E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999995921962157	WITHOUT_CLASSIFICATION	4.078037842057799E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999998531247801	WITHOUT_CLASSIFICATION	1.4687521991176484E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999896598637183	WITHOUT_CLASSIFICATION	1.0340136281776428E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999982770333233	WITHOUT_CLASSIFICATION	1.7229666766552356E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999999183548544	WITHOUT_CLASSIFICATION	8.164514568872789E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999999269058085	WITHOUT_CLASSIFICATION	7.309419146592275E-8	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999996023711366	WITHOUT_CLASSIFICATION	3.976288634123669E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998576997695	WITHOUT_CLASSIFICATION	1.4230023051106613E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999738659638121	WITHOUT_CLASSIFICATION	2.6134036187866574E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999989571759014	WITHOUT_CLASSIFICATION	1.042824098646734E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999996111944902	WITHOUT_CLASSIFICATION	3.888055098556777E-7	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999995575687382	WITHOUT_CLASSIFICATION	4.424312617827711E-7	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999959204886377	WITHOUT_CLASSIFICATION	4.0795113622369964E-6	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999806337107	WITHOUT_CLASSIFICATION	1.9366289320584145E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999996489711339	WITHOUT_CLASSIFICATION	3.510288660896731E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999999931213832	WITHOUT_CLASSIFICATION	6.878616770079142E-9	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999637340883	WITHOUT_CLASSIFICATION	3.626591169618493E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999985158120575	WITHOUT_CLASSIFICATION	1.4841879425519328E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999999421350974	WITHOUT_CLASSIFICATION	5.786490267941438E-8	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.999995642854467	WITHOUT_CLASSIFICATION	4.357145532970154E-6	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.999978221584265	WITHOUT_CLASSIFICATION	2.1778415734945473E-5	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999513154412851	WITHOUT_CLASSIFICATION	4.8684558714902384E-5	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9998768670583366	WITHOUT_CLASSIFICATION	1.231329416635451E-4	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999493862648476	WITHOUT_CLASSIFICATION	5.061373515230977E-5	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999493862648476	WITHOUT_CLASSIFICATION	5.061373515230977E-5	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9998783521091237	WITHOUT_CLASSIFICATION	1.2164789087632443E-4	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999206212806631	WITHOUT_CLASSIFICATION	7.937871933696343E-5	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9999822769298506	WITHOUT_CLASSIFICATION	1.7723070149416975E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999728963409356	WITHOUT_CLASSIFICATION	2.710365906447784E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999728963409356	WITHOUT_CLASSIFICATION	2.710365906447784E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999728963409356	WITHOUT_CLASSIFICATION	2.710365906447784E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999909655504369	WITHOUT_CLASSIFICATION	9.034449563102843E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999865710501	WITHOUT_CLASSIFICATION	1.3428949898688004E-7	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999999120090812	WITHOUT_CLASSIFICATION	8.799091873198865E-8	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995336475015	WITHOUT_CLASSIFICATION	4.663524984602628E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998664073468	WITHOUT_CLASSIFICATION	1.3359265315886893E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999987629828716	WITHOUT_CLASSIFICATION	1.2370171284720354E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999993182033	WITHOUT_CLASSIFICATION	6.817967172542726E-10	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999981731396919	WITHOUT_CLASSIFICATION	1.82686030805923E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999437849887	WITHOUT_CLASSIFICATION	5.621501127605708E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999999287472118	WITHOUT_CLASSIFICATION	7.125278827782111E-8	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999995921962157	WITHOUT_CLASSIFICATION	4.078037842057799E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999998531247801	WITHOUT_CLASSIFICATION	1.4687521991176484E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999896598637183	WITHOUT_CLASSIFICATION	1.0340136281776428E-5	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999982770333233	WITHOUT_CLASSIFICATION	1.7229666766552356E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998576997695	WITHOUT_CLASSIFICATION	1.4230023051106613E-7	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999995575687382	WITHOUT_CLASSIFICATION	4.424312617827711E-7	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999959204886377	WITHOUT_CLASSIFICATION	4.0795113622369964E-6	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999806337107	WITHOUT_CLASSIFICATION	1.9366289320584145E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.999999999815444	WITHOUT_CLASSIFICATION	1.8455598742156978E-10	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998685333444	WITHOUT_CLASSIFICATION	1.3146665549683976E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999997131804738	WITHOUT_CLASSIFICATION	2.868195262510188E-7	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999786229905	WITHOUT_CLASSIFICATION	2.137700953987042E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999595597635258	WITHOUT_CLASSIFICATION	4.0440236474272177E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.999999905774487	WITHOUT_CLASSIFICATION	9.422551294537074E-8	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999966418569908	WITHOUT_CLASSIFICATION	3.3581430091994544E-6	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999999810243562	WITHOUT_CLASSIFICATION	1.8975643814970182E-8	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9998124184501783	WITHOUT_CLASSIFICATION	1.875815498216468E-4	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9994249196713273	WITHOUT_CLASSIFICATION	5.750803286727054E-4	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9996384439240869	WITHOUT_CLASSIFICATION	3.615560759131353E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9999597784925451	WITHOUT_CLASSIFICATION	4.022150745499445E-5	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999983415911311	WITHOUT_CLASSIFICATION	1.6584088689071757E-6	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999996043293692	WITHOUT_CLASSIFICATION	3.956706308705538E-7	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9998583803543769	WITHOUT_CLASSIFICATION	1.4161964562302767E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9998290060784998	WITHOUT_CLASSIFICATION	1.7099392150025298E-4	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9997500904585656	WITHOUT_CLASSIFICATION	2.4990954143435523E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9998962195997206	WITHOUT_CLASSIFICATION	1.0378040027937536E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9990946208795903	WITHOUT_CLASSIFICATION	9.053791204096006E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999983878255334	WITHOUT_CLASSIFICATION	1.612174466628912E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999998758993718	WITHOUT_CLASSIFICATION	1.241006281593033E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999996111944902	WITHOUT_CLASSIFICATION	3.888055098556777E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999637340883	WITHOUT_CLASSIFICATION	3.626591169618493E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999985158120575	WITHOUT_CLASSIFICATION	1.4841879425519328E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999999421350974	WITHOUT_CLASSIFICATION	5.786490267941438E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998685333444	WITHOUT_CLASSIFICATION	1.3146665549683976E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999997131804738	WITHOUT_CLASSIFICATION	2.868195262510188E-7	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999999786229905	WITHOUT_CLASSIFICATION	2.137700953987042E-8	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999595597635258	WITHOUT_CLASSIFICATION	4.0440236474272177E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.999999905774487	WITHOUT_CLASSIFICATION	9.422551294537074E-8	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999999714988262	WITHOUT_CLASSIFICATION	2.8501173795733635E-8	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9999742493588114	WITHOUT_CLASSIFICATION	2.575064118860042E-5	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999926947498082	WITHOUT_CLASSIFICATION	7.305250191800038E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999999103485104	WITHOUT_CLASSIFICATION	8.965148959885327E-8	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999999103485104	WITHOUT_CLASSIFICATION	8.965148959885327E-8	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999999103485104	WITHOUT_CLASSIFICATION	8.965148959885327E-8	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999999103485104	WITHOUT_CLASSIFICATION	8.965148959885327E-8	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999999103485104	WITHOUT_CLASSIFICATION	8.965148959885327E-8	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.999999850927419	WITHOUT_CLASSIFICATION	1.4907258096934407E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999450711479	WITHOUT_CLASSIFICATION	5.492885213127055E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999450711479	WITHOUT_CLASSIFICATION	5.492885213127055E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999450711479	WITHOUT_CLASSIFICATION	5.492885213127055E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999450711479	WITHOUT_CLASSIFICATION	5.492885213127055E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999450711479	WITHOUT_CLASSIFICATION	5.492885213127055E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999450711479	WITHOUT_CLASSIFICATION	5.492885213127055E-8	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999999222341212	WITHOUT_CLASSIFICATION	7.776587891765562E-8	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9999976706460016	WITHOUT_CLASSIFICATION	2.329353998379454E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999772058367	WITHOUT_CLASSIFICATION	2.279416328547781E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999772058367	WITHOUT_CLASSIFICATION	2.279416328547781E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999772058367	WITHOUT_CLASSIFICATION	2.279416328547781E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999772058367	WITHOUT_CLASSIFICATION	2.279416328547781E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999772058367	WITHOUT_CLASSIFICATION	2.279416328547781E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999772058367	WITHOUT_CLASSIFICATION	2.279416328547781E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999772058367	WITHOUT_CLASSIFICATION	2.279416328547781E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999772058367	WITHOUT_CLASSIFICATION	2.279416328547781E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999988666866493	WITHOUT_CLASSIFICATION	1.133313350738353E-6	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999952407111945	WITHOUT_CLASSIFICATION	4.759288805577686E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996624467078	WITHOUT_CLASSIFICATION	3.375532921331875E-7	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999991411358334	WITHOUT_CLASSIFICATION	8.588641665692259E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999342700858113	WITHOUT_CLASSIFICATION	6.572991418875171E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999342700858113	WITHOUT_CLASSIFICATION	6.572991418875171E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999342700858113	WITHOUT_CLASSIFICATION	6.572991418875171E-5	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999952981152618	WITHOUT_CLASSIFICATION	4.701884738239764E-6	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999764957456727	WITHOUT_CLASSIFICATION	2.3504254327290392E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999976982169804	WITHOUT_CLASSIFICATION	2.301783019629887E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998850734982747	WITHOUT_CLASSIFICATION	1.1492650172530567E-4	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998850734982747	WITHOUT_CLASSIFICATION	1.1492650172530567E-4	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.999998771238045	WITHOUT_CLASSIFICATION	1.228761954938019E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9998850734982747	WITHOUT_CLASSIFICATION	1.1492650172530567E-4	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999991994607128	WITHOUT_CLASSIFICATION	8.005392872787673E-7	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999994634434927	WITHOUT_CLASSIFICATION	5.365565073738535E-7	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999999884907764	WITHOUT_CLASSIFICATION	1.1509223500376346E-8	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9998574402723183	WITHOUT_CLASSIFICATION	1.4255972768171087E-4	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9998574402723183	WITHOUT_CLASSIFICATION	1.4255972768171087E-4	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.999999810232621	WITHOUT_CLASSIFICATION	1.897673790371282E-7	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999987581423959	WITHOUT_CLASSIFICATION	1.2418576040680774E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999977286438174	WITHOUT_CLASSIFICATION	2.271356182567418E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999977286438174	WITHOUT_CLASSIFICATION	2.271356182567418E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999977286438174	WITHOUT_CLASSIFICATION	2.271356182567418E-6	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9999983546813112	WITHOUT_CLASSIFICATION	1.6453186888101468E-6	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9999307533541285	WITHOUT_CLASSIFICATION	6.924664587148454E-5	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9998326595159355	WITHOUT_CLASSIFICATION	1.6734048406458676E-4	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.999999886623404	WITHOUT_CLASSIFICATION	1.1337659603782219E-7	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9999923939669068	WITHOUT_CLASSIFICATION	7.606033093289702E-6	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.999999343736849	WITHOUT_CLASSIFICATION	6.562631511251083E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999253864279667	WITHOUT_CLASSIFICATION	7.461357203325442E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999997214719496	WITHOUT_CLASSIFICATION	2.7852805035364707E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999253864279667	WITHOUT_CLASSIFICATION	7.461357203325442E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999909655504369	WITHOUT_CLASSIFICATION	9.034449563102843E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999728963409356	WITHOUT_CLASSIFICATION	2.710365906447784E-5	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999999994743747	WITHOUT_CLASSIFICATION	5.256252773927435E-10	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999958775982088	WITHOUT_CLASSIFICATION	4.1224017911630834E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.99989798102672	WITHOUT_CLASSIFICATION	1.020189732800258E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999941338695811	WITHOUT_CLASSIFICATION	5.8661304188103205E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999909655504369	WITHOUT_CLASSIFICATION	9.034449563102843E-5	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999910334358105	WITHOUT_CLASSIFICATION	8.966564189402916E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999999355851613	WITHOUT_CLASSIFICATION	6.441483877705599E-8	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997495167242	WITHOUT_CLASSIFICATION	2.50483275750083E-7	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999994889080663	WITHOUT_CLASSIFICATION	5.110919336696427E-7	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999070153746741	WITHOUT_CLASSIFICATION	9.29846253259704E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999070153746741	WITHOUT_CLASSIFICATION	9.29846253259704E-5	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999938132272861	WITHOUT_CLASSIFICATION	6.186772713858976E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.999999998984125	WITHOUT_CLASSIFICATION	1.0158750346104043E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999984083578	WITHOUT_CLASSIFICATION	1.5916421787247105E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999999947320134	WITHOUT_CLASSIFICATION	5.267986592038328E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999980741658	WITHOUT_CLASSIFICATION	1.9258341469673746E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999977076126	WITHOUT_CLASSIFICATION	2.2923874629650107E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999999895694878	WITHOUT_CLASSIFICATION	1.043051213972116E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999979849421322	WITHOUT_CLASSIFICATION	2.015057867854247E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.999998099842242	WITHOUT_CLASSIFICATION	1.9001577579513144E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999540527594	WITHOUT_CLASSIFICATION	4.594724054905601E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999996902397621	WITHOUT_CLASSIFICATION	3.0976023790845115E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999929463735	WITHOUT_CLASSIFICATION	7.05362646822294E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999849777919	WITHOUT_CLASSIFICATION	1.5022208079145922E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999855047704	WITHOUT_CLASSIFICATION	1.4495229527829258E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.999999697381956	WITHOUT_CLASSIFICATION	3.0261804402301954E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999999953074	WITHOUT_CLASSIFICATION	4.6925947673897996E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999648597	WITHOUT_CLASSIFICATION	3.5140413143123734E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999997939114	WITHOUT_CLASSIFICATION	2.060886643680943E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999980811447	WITHOUT_CLASSIFICATION	1.9188553198031525E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999995798319	WITHOUT_CLASSIFICATION	4.20168161578219E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999997092697	WITHOUT_CLASSIFICATION	2.9073035255052146E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999996933011	WITHOUT_CLASSIFICATION	3.066989083099299E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.999999999953074	WITHOUT_CLASSIFICATION	4.6925947673897996E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999971439266	WITHOUT_CLASSIFICATION	2.8560734748691792E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999530665	WITHOUT_CLASSIFICATION	4.693340596963248E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999996932524	WITHOUT_CLASSIFICATION	3.0674765428678104E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999992444055	WITHOUT_CLASSIFICATION	7.555944697876813E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999988419622	WITHOUT_CLASSIFICATION	1.1580377689874545E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999868296845	WITHOUT_CLASSIFICATION	1.3170315595335502E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999999966898575	WITHOUT_CLASSIFICATION	3.3101425159428114E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999993205071	WITHOUT_CLASSIFICATION	6.794928837042912E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999997008872	WITHOUT_CLASSIFICATION	2.991128178453258E-10	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999999637118723	WITHOUT_CLASSIFICATION	3.628812766450604E-8	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999999637118723	WITHOUT_CLASSIFICATION	3.628812766450604E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999997092697	WITHOUT_CLASSIFICATION	2.9073035255052146E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999999883475132	WITHOUT_CLASSIFICATION	1.1652486667546385E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999404089	WITHOUT_CLASSIFICATION	5.959114076317247E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999999810816549	WITHOUT_CLASSIFICATION	1.8918345151415353E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999999924119363	WITHOUT_CLASSIFICATION	7.588063701178637E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999986343259	WITHOUT_CLASSIFICATION	1.3656740611485498E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999693008707	WITHOUT_CLASSIFICATION	3.069912937650455E-8	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999994264776709	WITHOUT_CLASSIFICATION	5.735223289533978E-7	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999989368702281	WITHOUT_CLASSIFICATION	1.0631297718821763E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.99999999307485	WITHOUT_CLASSIFICATION	6.925150055516174E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999997800784508	WITHOUT_CLASSIFICATION	2.1992154915199263E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999856337431	WITHOUT_CLASSIFICATION	1.4366256897618817E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.999999921603726	WITHOUT_CLASSIFICATION	7.839627409363544E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999950953626	WITHOUT_CLASSIFICATION	4.904637355413301E-9	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999999997257175	WITHOUT_CLASSIFICATION	2.742824240955248E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999993182033	WITHOUT_CLASSIFICATION	6.817967172542726E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999786309	WITHOUT_CLASSIFICATION	2.136912280568555E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999999974212055	WITHOUT_CLASSIFICATION	2.5787945050961486E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999994575805426	WITHOUT_CLASSIFICATION	5.424194573226344E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999881482264	WITHOUT_CLASSIFICATION	1.1851773566761107E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999786309	WITHOUT_CLASSIFICATION	2.136912280568555E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.999999975521604	WITHOUT_CLASSIFICATION	2.447839593820077E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999961806485	WITHOUT_CLASSIFICATION	3.8193514895389674E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999942299758	WITHOUT_CLASSIFICATION	5.770024312111024E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999999574213845	WITHOUT_CLASSIFICATION	4.257861556849148E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999999422812851	WITHOUT_CLASSIFICATION	5.7718714998545764E-8	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999470194205099	WITHOUT_CLASSIFICATION	5.298057949011665E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999470194205099	WITHOUT_CLASSIFICATION	5.298057949011665E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999470194205099	WITHOUT_CLASSIFICATION	5.298057949011665E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999470194205099	WITHOUT_CLASSIFICATION	5.298057949011665E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999470194205099	WITHOUT_CLASSIFICATION	5.298057949011665E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999470194205099	WITHOUT_CLASSIFICATION	5.298057949011665E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974856927603	WITHOUT_CLASSIFICATION	2.5143072398361387E-6	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999924208405675	WITHOUT_CLASSIFICATION	7.579159432536115E-6	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9999847795583843	WITHOUT_CLASSIFICATION	1.5220441615722942E-5	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9999999574109333	WITHOUT_CLASSIFICATION	4.258906675754185E-8	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999988716710921	WITHOUT_CLASSIFICATION	1.1283289078232087E-6	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.999998545473654	WITHOUT_CLASSIFICATION	1.4545263460623824E-6	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.99999879218543	WITHOUT_CLASSIFICATION	1.2078145700384862E-6	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9999991842844178	WITHOUT_CLASSIFICATION	8.157155821908888E-7	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9999420191899474	WITHOUT_CLASSIFICATION	5.798081005265493E-5	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999975941638849	WITHOUT_CLASSIFICATION	2.405836115001111E-6	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999996449126461	WITHOUT_CLASSIFICATION	3.5508735385056446E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999596368867534	WITHOUT_CLASSIFICATION	4.036311324654869E-5	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999997139985252	WITHOUT_CLASSIFICATION	2.8600147482959544E-7	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999981174864915	WITHOUT_CLASSIFICATION	1.8825135084273212E-6	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999993939762588	WITHOUT_CLASSIFICATION	6.060237412290144E-7	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999916493657025	WITHOUT_CLASSIFICATION	8.35063429741794E-6	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999958605738193	WITHOUT_CLASSIFICATION	4.139426180730421E-6	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999989378253	WITHOUT_CLASSIFICATION	1.062174649672956E-9	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999989378253	WITHOUT_CLASSIFICATION	1.062174649672956E-9	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999989378253	WITHOUT_CLASSIFICATION	1.062174649672956E-9	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999999478204624	WITHOUT_CLASSIFICATION	5.217953743942226E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999999826858984	WITHOUT_CLASSIFICATION	1.7314101642227992E-8	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.999996214778921	WITHOUT_CLASSIFICATION	3.785221079027615E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999865710501	WITHOUT_CLASSIFICATION	1.3428949898688004E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999865710501	WITHOUT_CLASSIFICATION	1.3428949898688004E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.999999865710501	WITHOUT_CLASSIFICATION	1.3428949898688004E-7	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9987837190162738	WITHOUT_CLASSIFICATION	0.0012162809837261855	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999999120090812	WITHOUT_CLASSIFICATION	8.799091873198865E-8	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999855660771075	WITHOUT_CLASSIFICATION	1.4433922892520262E-5	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995336475015	WITHOUT_CLASSIFICATION	4.663524984602628E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995336475015	WITHOUT_CLASSIFICATION	4.663524984602628E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999994684769636	WITHOUT_CLASSIFICATION	5.315230363852285E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998664073468	WITHOUT_CLASSIFICATION	1.3359265315886893E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998664073468	WITHOUT_CLASSIFICATION	1.3359265315886893E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999998664073468	WITHOUT_CLASSIFICATION	1.3359265315886893E-7	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9998014992376759	WITHOUT_CLASSIFICATION	1.9850076232412483E-4	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998353598679	WITHOUT_CLASSIFICATION	1.6464013201164824E-7	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999989938501453	WITHOUT_CLASSIFICATION	1.006149854724175E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999253864279667	WITHOUT_CLASSIFICATION	7.461357203325442E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999253864279667	WITHOUT_CLASSIFICATION	7.461357203325442E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999063037734907	WITHOUT_CLASSIFICATION	9.3696226509377E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999987629828716	WITHOUT_CLASSIFICATION	1.2370171284720354E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999987629828716	WITHOUT_CLASSIFICATION	1.2370171284720354E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.999999758287145	WITHOUT_CLASSIFICATION	2.417128550072257E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999995921962157	WITHOUT_CLASSIFICATION	4.078037842057799E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999995921962157	WITHOUT_CLASSIFICATION	4.078037842057799E-7	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9980310594330538	WITHOUT_CLASSIFICATION	0.001968940566946183	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999998531247801	WITHOUT_CLASSIFICATION	1.4687521991176484E-7	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.999998664085635	WITHOUT_CLASSIFICATION	1.3359143649058554E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999896598637183	WITHOUT_CLASSIFICATION	1.0340136281776428E-5	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999993469710032	WITHOUT_CLASSIFICATION	6.530289967603101E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999253864279667	WITHOUT_CLASSIFICATION	7.461357203325442E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999728963409356	WITHOUT_CLASSIFICATION	2.710365906447784E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999996023711366	WITHOUT_CLASSIFICATION	3.976288634123669E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999996023711366	WITHOUT_CLASSIFICATION	3.976288634123669E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999996023711366	WITHOUT_CLASSIFICATION	3.976288634123669E-7	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999998203474312	WITHOUT_CLASSIFICATION	1.7965256878610083E-7	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999992905530738	WITHOUT_CLASSIFICATION	7.094469262086495E-7	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999936758612716	WITHOUT_CLASSIFICATION	6.324138728343289E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999966528604346	WITHOUT_CLASSIFICATION	3.3471395653816387E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999966528604346	WITHOUT_CLASSIFICATION	3.3471395653816387E-6	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999971921833113	WITHOUT_CLASSIFICATION	2.8078166887228787E-6	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999996704125004	WITHOUT_CLASSIFICATION	3.295874996110871E-7	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999999994846602	WITHOUT_CLASSIFICATION	5.15339657164058E-10	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999762738919735	WITHOUT_CLASSIFICATION	2.3726108026442256E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.999999650096671	WITHOUT_CLASSIFICATION	3.499033289663506E-7	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.999999650096671	WITHOUT_CLASSIFICATION	3.499033289663506E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997562131215311	WITHOUT_CLASSIFICATION	2.4378687846887247E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9997562131215311	WITHOUT_CLASSIFICATION	2.4378687846887247E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999997191897845	WITHOUT_CLASSIFICATION	2.8081021555504997E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999996725419826	WITHOUT_CLASSIFICATION	3.2745801730872604E-7	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999986970772197	WITHOUT_CLASSIFICATION	1.3029227803150673E-6	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.999999570104381	WITHOUT_CLASSIFICATION	4.2989561897111644E-7	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999999662183475	WITHOUT_CLASSIFICATION	3.378165250265753E-8	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999999820031504	WITHOUT_CLASSIFICATION	1.799684954924151E-8	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999999820031504	WITHOUT_CLASSIFICATION	1.799684954924151E-8	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9999813141257496	WITHOUT_CLASSIFICATION	1.868587425043108E-5	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999999910865343	WITHOUT_CLASSIFICATION	8.913465791545878E-9	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999990571349595	WITHOUT_CLASSIFICATION	9.428650405796969E-7	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9999998805643304	WITHOUT_CLASSIFICATION	1.1943566962249616E-7	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999975781879847	WITHOUT_CLASSIFICATION	2.421812015238116E-6	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999956301381938	WITHOUT_CLASSIFICATION	4.369861806152405E-6	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.999999533264902	WITHOUT_CLASSIFICATION	4.6673509812086447E-7	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999999999444186	WITHOUT_CLASSIFICATION	5.55815077996455E-11	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9860139632290585	WITHOUT_CLASSIFICATION	0.013986036770941514	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999997012821936	WITHOUT_CLASSIFICATION	2.9871780637743433E-7	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999878824398368	WITHOUT_CLASSIFICATION	1.2117560163288895E-5	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999999982624777	WITHOUT_CLASSIFICATION	1.7375223820816048E-9	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.999981942273621	WITHOUT_CLASSIFICATION	1.8057726378980507E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999942961371115	WITHOUT_CLASSIFICATION	5.703862888370793E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999942961371115	WITHOUT_CLASSIFICATION	5.703862888370793E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999942961371115	WITHOUT_CLASSIFICATION	5.703862888370793E-6	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9999999879359388	WITHOUT_CLASSIFICATION	1.2064061190225549E-8	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999993768597963	WITHOUT_CLASSIFICATION	6.231402036083517E-7	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999997536430544	WITHOUT_CLASSIFICATION	2.463569455918371E-7	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9998811395455308	WITHOUT_CLASSIFICATION	1.1886045446921245E-4	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999978591343013	WITHOUT_CLASSIFICATION	2.1408656987979732E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999999616441047	WITHOUT_CLASSIFICATION	3.835589531307039E-8	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999999616441047	WITHOUT_CLASSIFICATION	3.835589531307039E-8	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999991296774385	WITHOUT_CLASSIFICATION	8.7032256142718E-7	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.993140217549077	WITHOUT_CLASSIFICATION	0.006859782450923014	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999880678410262	WITHOUT_CLASSIFICATION	1.1932158973730498E-5	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999993842783558	WITHOUT_CLASSIFICATION	6.157216440978688E-7	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999936614987183	WITHOUT_CLASSIFICATION	6.33850128177932E-6	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9999782185463085	WITHOUT_CLASSIFICATION	2.1781453691463108E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9999997346098889	WITHOUT_CLASSIFICATION	2.653901111652738E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999996798591373	WITHOUT_CLASSIFICATION	3.2014086269429555E-7	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999990369304648	WITHOUT_CLASSIFICATION	9.63069535225432E-7	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999998995527113	WITHOUT_CLASSIFICATION	1.0044728869661993E-7	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9999976372506109	WITHOUT_CLASSIFICATION	2.3627493891238067E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999885243335694	WITHOUT_CLASSIFICATION	1.1475666430695586E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999828839375421	WITHOUT_CLASSIFICATION	1.7116062457964517E-5	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9970859948095286	WITHOUT_CLASSIFICATION	0.0029140051904712676	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999995270454115	WITHOUT_CLASSIFICATION	4.729545884151565E-7	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999956729507674	WITHOUT_CLASSIFICATION	4.327049232594651E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999976741810355	WITHOUT_CLASSIFICATION	2.3258189644462983E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999989554141633	WITHOUT_CLASSIFICATION	1.0445858366314222E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999946703852443	WITHOUT_CLASSIFICATION	5.329614755733674E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999946703852443	WITHOUT_CLASSIFICATION	5.329614755733674E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999946703852443	WITHOUT_CLASSIFICATION	5.329614755733674E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999946703852443	WITHOUT_CLASSIFICATION	5.329614755733674E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999991944890897	WITHOUT_CLASSIFICATION	8.055109103529937E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999952522371953	WITHOUT_CLASSIFICATION	4.747762804603529E-6	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999952522371953	WITHOUT_CLASSIFICATION	4.747762804603529E-6	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999719375157333	WITHOUT_CLASSIFICATION	2.806248426673967E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999999723423295	WITHOUT_CLASSIFICATION	2.7657670413528224E-8	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999811196242864	WITHOUT_CLASSIFICATION	1.8880375713619594E-5	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.999998755471704	WITHOUT_CLASSIFICATION	1.2445282959279423E-6	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999671159132254	WITHOUT_CLASSIFICATION	3.288408677460235E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.999999889896582	WITHOUT_CLASSIFICATION	1.1010341813547123E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999876100671693	WITHOUT_CLASSIFICATION	1.238993283079315E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956845907362	WITHOUT_CLASSIFICATION	4.315409263804671E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956845907362	WITHOUT_CLASSIFICATION	4.315409263804671E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999956845907362	WITHOUT_CLASSIFICATION	4.315409263804671E-6	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9999897082921978	WITHOUT_CLASSIFICATION	1.0291707802254096E-5	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.999999372149701	WITHOUT_CLASSIFICATION	6.27850298965574E-7	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9999963593127377	WITHOUT_CLASSIFICATION	3.640687262463349E-6	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999995011257776	WITHOUT_CLASSIFICATION	4.988742222767066E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999995011257776	WITHOUT_CLASSIFICATION	4.988742222767066E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999976118979115	WITHOUT_CLASSIFICATION	2.388102088602924E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998357537214	WITHOUT_CLASSIFICATION	1.6424627857641897E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.999999602468008	WITHOUT_CLASSIFICATION	3.975319920629997E-7	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999847005564427	WITHOUT_CLASSIFICATION	1.529944355726103E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9999706677565792	WITHOUT_CLASSIFICATION	2.933224342088469E-5	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.999999985362582	WITHOUT_CLASSIFICATION	1.4637418077409105E-8	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999876065523194	WITHOUT_CLASSIFICATION	1.2393447680684351E-5	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999999816693175	WITHOUT_CLASSIFICATION	1.8330682505419654E-8	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9999999788322578	WITHOUT_CLASSIFICATION	2.1167742205315028E-8	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999999823314389	WITHOUT_CLASSIFICATION	1.766856106859937E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999953005715527	WITHOUT_CLASSIFICATION	4.699428447222532E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999347262120111	WITHOUT_CLASSIFICATION	6.52737879888789E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999347262120111	WITHOUT_CLASSIFICATION	6.52737879888789E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9999998628775782	WITHOUT_CLASSIFICATION	1.371224217834277E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999290158768	WITHOUT_CLASSIFICATION	7.098412330555384E-8	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999290158768	WITHOUT_CLASSIFICATION	7.098412330555384E-8	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999811677477187	WITHOUT_CLASSIFICATION	1.8832252281211555E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999811677477187	WITHOUT_CLASSIFICATION	1.8832252281211555E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999811677477187	WITHOUT_CLASSIFICATION	1.8832252281211555E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999811677477187	WITHOUT_CLASSIFICATION	1.8832252281211555E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999811677477187	WITHOUT_CLASSIFICATION	1.8832252281211555E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999811677477187	WITHOUT_CLASSIFICATION	1.8832252281211555E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999811677477187	WITHOUT_CLASSIFICATION	1.8832252281211555E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999811677477187	WITHOUT_CLASSIFICATION	1.8832252281211555E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999811677477187	WITHOUT_CLASSIFICATION	1.8832252281211555E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999998838339071	WITHOUT_CLASSIFICATION	1.1616609289369524E-7	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999998838339071	WITHOUT_CLASSIFICATION	1.1616609289369524E-7	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999992062029466	WITHOUT_CLASSIFICATION	7.937970534456121E-7	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999972863790241	WITHOUT_CLASSIFICATION	2.713620975958197E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9999993972490298	WITHOUT_CLASSIFICATION	6.027509702783051E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999738659638121	WITHOUT_CLASSIFICATION	2.6134036187866574E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999738659638121	WITHOUT_CLASSIFICATION	2.6134036187866574E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999219071116258	WITHOUT_CLASSIFICATION	7.809288837423782E-5	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999999651562669	WITHOUT_CLASSIFICATION	3.484373311828649E-8	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9999604841559644	WITHOUT_CLASSIFICATION	3.9515844035623474E-5	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9628517886839705	WITHOUT_CLASSIFICATION	0.03714821131602952	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999917284604712	WITHOUT_CLASSIFICATION	8.27153952873987E-6	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999917284604712	WITHOUT_CLASSIFICATION	8.27153952873987E-6	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9901714892745817	WITHOUT_CLASSIFICATION	0.009828510725418259	DEFECT
// is this an error???	DEFECT	0.999999601915187	WITHOUT_CLASSIFICATION	3.980848129664063E-7	DEFECT
// is this an error???	DEFECT	0.999999601915187	WITHOUT_CLASSIFICATION	3.980848129664063E-7	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9998972025067514	WITHOUT_CLASSIFICATION	1.0279749324851049E-4	DEFECT
