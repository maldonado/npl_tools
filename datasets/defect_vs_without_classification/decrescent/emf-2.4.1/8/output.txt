// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999990814443099	WITHOUT_CLASSIFICATION	9.185556901534772E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999838095814109	WITHOUT_CLASSIFICATION	1.6190418589072576E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999989823908606	WITHOUT_CLASSIFICATION	1.0176091394023879E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9991397753802265	WITHOUT_CLASSIFICATION	8.602246197734767E-4	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999498102393428	WITHOUT_CLASSIFICATION	5.018976065715658E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999723609128	WITHOUT_CLASSIFICATION	2.7639087244379452E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999935388272457	WITHOUT_CLASSIFICATION	6.461172754255084E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999999060007834	WITHOUT_CLASSIFICATION	9.399921655500747E-8	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999925636142897	WITHOUT_CLASSIFICATION	7.4363857102357645E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999980770784671	WITHOUT_CLASSIFICATION	1.922921532965795E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.999997473814741	WITHOUT_CLASSIFICATION	2.5261852588987546E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.999999081753563	WITHOUT_CLASSIFICATION	9.182464369980953E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.999635503424626	WITHOUT_CLASSIFICATION	3.6449657537396946E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999996013748472	WITHOUT_CLASSIFICATION	3.9862515271456923E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999996097440726	WITHOUT_CLASSIFICATION	3.9025592732797253E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999999212883296	WITHOUT_CLASSIFICATION	7.87116702971313E-8	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999934241946231	WITHOUT_CLASSIFICATION	6.575805376920263E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999935388272457	WITHOUT_CLASSIFICATION	6.461172754255084E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999927893290401	WITHOUT_CLASSIFICATION	7.210670959841985E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999970442080253	WITHOUT_CLASSIFICATION	2.9557919747953136E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999989451555844	WITHOUT_CLASSIFICATION	1.0548444156103935E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999925621962125	WITHOUT_CLASSIFICATION	7.437803787617346E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999925621962125	WITHOUT_CLASSIFICATION	7.437803787617346E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.99999961673365	WITHOUT_CLASSIFICATION	3.832663499894763E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999999055890795	WITHOUT_CLASSIFICATION	9.441092045863529E-8	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9999979011817555	WITHOUT_CLASSIFICATION	2.0988182445665874E-6	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9999592429698368	WITHOUT_CLASSIFICATION	4.0757030163146E-5	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999974167346802	WITHOUT_CLASSIFICATION	2.5832653197531834E-6	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999942777458408	WITHOUT_CLASSIFICATION	5.7222541591836466E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999542372815063	WITHOUT_CLASSIFICATION	4.576271849367556E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999626112949536	WITHOUT_CLASSIFICATION	3.7388705046517224E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999995332382736	WITHOUT_CLASSIFICATION	4.667617264190021E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.999248939622554	WITHOUT_CLASSIFICATION	7.510603774459445E-4	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999822912001014	WITHOUT_CLASSIFICATION	1.7708799898644687E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999927820494304	WITHOUT_CLASSIFICATION	7.217950569544066E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999951534202327	WITHOUT_CLASSIFICATION	4.8465797672984795E-6	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999924043039721	WITHOUT_CLASSIFICATION	7.595696027830243E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.999996643810945	WITHOUT_CLASSIFICATION	3.356189054893263E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999917822615656	WITHOUT_CLASSIFICATION	8.217738434281246E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999992564616677	WITHOUT_CLASSIFICATION	7.435383323726348E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999999763885727	WITHOUT_CLASSIFICATION	2.3611427231858004E-8	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9987426634708103	WITHOUT_CLASSIFICATION	0.0012573365291896495	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999492106414	WITHOUT_CLASSIFICATION	5.078935849165305E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999920016	WITHOUT_CLASSIFICATION	7.998457185409498E-12	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999832666184366	WITHOUT_CLASSIFICATION	1.673338156346358E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999861280025764	WITHOUT_CLASSIFICATION	1.3871997423666782E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999950938929522	WITHOUT_CLASSIFICATION	4.906107047795913E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999387789601	WITHOUT_CLASSIFICATION	6.122103983601584E-8	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9998921181627842	WITHOUT_CLASSIFICATION	1.0788183721573083E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.999901880568757	WITHOUT_CLASSIFICATION	9.811943124303846E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999784719963	WITHOUT_CLASSIFICATION	2.1528003662910828E-8	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999950938929522	WITHOUT_CLASSIFICATION	4.906107047795913E-6	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9999945287498794	WITHOUT_CLASSIFICATION	5.471250120720315E-6	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.999975537406964	WITHOUT_CLASSIFICATION	2.4462593036077603E-5	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.999985856596922	WITHOUT_CLASSIFICATION	1.4143403078075537E-5	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9999911519877903	WITHOUT_CLASSIFICATION	8.848012209695085E-6	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9999882030142108	WITHOUT_CLASSIFICATION	1.179698578933535E-5	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.9999927386435052	WITHOUT_CLASSIFICATION	7.261356494734501E-6	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998979850951	WITHOUT_CLASSIFICATION	1.0201490487803748E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995301441714	WITHOUT_CLASSIFICATION	4.6985582861924954E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999985794225194	WITHOUT_CLASSIFICATION	1.4205774806933122E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999116645855	WITHOUT_CLASSIFICATION	8.833541455648967E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998255590047	WITHOUT_CLASSIFICATION	1.744409952148426E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995357486573	WITHOUT_CLASSIFICATION	4.642513426138678E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963192686054	WITHOUT_CLASSIFICATION	3.680731394590711E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997429564909	WITHOUT_CLASSIFICATION	2.570435091173942E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999992449812223	WITHOUT_CLASSIFICATION	7.550187776545914E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999512158778	WITHOUT_CLASSIFICATION	4.8784122192126066E-8	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9999704211956026	WITHOUT_CLASSIFICATION	2.957880439735636E-5	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999999100150643	WITHOUT_CLASSIFICATION	8.998493571115787E-8	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999924865658225	WITHOUT_CLASSIFICATION	7.513434177358137E-6	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.9872922819772542	WITHOUT_CLASSIFICATION	0.01270771802274591	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999960118727647	WITHOUT_CLASSIFICATION	3.9881272353054305E-6	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9927816281163117	WITHOUT_CLASSIFICATION	0.007218371883688381	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9995354142046157	WITHOUT_CLASSIFICATION	4.645857953843078E-4	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9999853574737665	WITHOUT_CLASSIFICATION	1.464252623356387E-5	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999999816812218	WITHOUT_CLASSIFICATION	1.8318778057388142E-8	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.9999563702013865	WITHOUT_CLASSIFICATION	4.362979861356257E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9993658039518072	WITHOUT_CLASSIFICATION	6.341960481927383E-4	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.999999081753563	WITHOUT_CLASSIFICATION	9.182464369980953E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.999635503424626	WITHOUT_CLASSIFICATION	3.6449657537396946E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999996013748472	WITHOUT_CLASSIFICATION	3.9862515271456923E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999925912286471	WITHOUT_CLASSIFICATION	7.408771352889561E-6	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9999979764263514	WITHOUT_CLASSIFICATION	2.023573648673734E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999996097440726	WITHOUT_CLASSIFICATION	3.9025592732797253E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999999212883296	WITHOUT_CLASSIFICATION	7.87116702971313E-8	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999934241946231	WITHOUT_CLASSIFICATION	6.575805376920263E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999933418026918	WITHOUT_CLASSIFICATION	6.658197308108098E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999933418026918	WITHOUT_CLASSIFICATION	6.658197308108098E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999933418026918	WITHOUT_CLASSIFICATION	6.658197308108098E-6	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999723609128	WITHOUT_CLASSIFICATION	2.7639087244379452E-8	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999963906899051	WITHOUT_CLASSIFICATION	3.6093100947831E-6	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9999999719541082	WITHOUT_CLASSIFICATION	2.804589181327892E-8	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999985971091069	WITHOUT_CLASSIFICATION	1.402890893105577E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999989451555844	WITHOUT_CLASSIFICATION	1.0548444156103935E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999989134582127	WITHOUT_CLASSIFICATION	1.0865417872728157E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999542372815063	WITHOUT_CLASSIFICATION	4.576271849367556E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999626112949536	WITHOUT_CLASSIFICATION	3.7388705046517224E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.999248939622554	WITHOUT_CLASSIFICATION	7.510603774459445E-4	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999951534202327	WITHOUT_CLASSIFICATION	4.8465797672984795E-6	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9999336712048654	WITHOUT_CLASSIFICATION	6.632879513453672E-5	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9999841554860537	WITHOUT_CLASSIFICATION	1.5844513946292977E-5	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999992180974192	WITHOUT_CLASSIFICATION	7.819025807481626E-7	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999992035709605	WITHOUT_CLASSIFICATION	7.96429039530245E-7	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9999962567179389	WITHOUT_CLASSIFICATION	3.7432820610445694E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999992564616677	WITHOUT_CLASSIFICATION	7.435383323726348E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9987426634708103	WITHOUT_CLASSIFICATION	0.0012573365291896495	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.999999552793804	WITHOUT_CLASSIFICATION	4.4720619604412413E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.999891696886058	WITHOUT_CLASSIFICATION	1.0830311394207498E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999998261069101	WITHOUT_CLASSIFICATION	1.7389308992264645E-7	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999997749160131	WITHOUT_CLASSIFICATION	2.2508398686876676E-7	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999982322906684	WITHOUT_CLASSIFICATION	1.767709331510249E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9999908274714632	WITHOUT_CLASSIFICATION	9.172528536926244E-6	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9999993374505585	WITHOUT_CLASSIFICATION	6.625494414995251E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999977563509623	WITHOUT_CLASSIFICATION	2.243649037551912E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999815284064748	WITHOUT_CLASSIFICATION	1.8471593525166487E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999717104269946	WITHOUT_CLASSIFICATION	2.828957300541762E-5	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999827890454	WITHOUT_CLASSIFICATION	1.72109544399359E-8	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999815284064748	WITHOUT_CLASSIFICATION	1.8471593525166487E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999488612289813	WITHOUT_CLASSIFICATION	5.113877101875427E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999998213963568	WITHOUT_CLASSIFICATION	1.7860364326236343E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999921243287	WITHOUT_CLASSIFICATION	7.875671354794876E-9	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999994181863706	WITHOUT_CLASSIFICATION	5.818136293023862E-7	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999815284064748	WITHOUT_CLASSIFICATION	1.8471593525166487E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999717104269946	WITHOUT_CLASSIFICATION	2.828957300541762E-5	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999997333082636	WITHOUT_CLASSIFICATION	2.666917363778463E-7	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.999999996956925	WITHOUT_CLASSIFICATION	3.0430750638408607E-9	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999992252352506	WITHOUT_CLASSIFICATION	7.747647492667394E-7	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999998187164764	WITHOUT_CLASSIFICATION	1.8128352369476434E-7	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999919232506	WITHOUT_CLASSIFICATION	8.076749461517412E-9	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9999907528926534	WITHOUT_CLASSIFICATION	9.247107346718935E-6	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9999995676376474	WITHOUT_CLASSIFICATION	4.3236235254610305E-7	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9999724157217735	WITHOUT_CLASSIFICATION	2.7584278226515417E-5	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9999075861472414	WITHOUT_CLASSIFICATION	9.241385275869482E-5	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.999661769332762	WITHOUT_CLASSIFICATION	3.3823066723797973E-4	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9956196796104458	WITHOUT_CLASSIFICATION	0.004380320389554198	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999554569589	WITHOUT_CLASSIFICATION	4.4543041159964925E-8	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999813441295	WITHOUT_CLASSIFICATION	1.865587048380283E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999387789601	WITHOUT_CLASSIFICATION	6.122103983601584E-8	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999911128211	WITHOUT_CLASSIFICATION	8.887178906686172E-9	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999987248748344	WITHOUT_CLASSIFICATION	1.2751251656177562E-6	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9999153207326092	WITHOUT_CLASSIFICATION	8.46792673908021E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.999984044396426	WITHOUT_CLASSIFICATION	1.5955603574058926E-5	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9999992441981812	WITHOUT_CLASSIFICATION	7.558018186950391E-7	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999870105908644	WITHOUT_CLASSIFICATION	1.2989409135541713E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999500663904433	WITHOUT_CLASSIFICATION	4.993360955678066E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.9999999911128211	WITHOUT_CLASSIFICATION	8.887178906686172E-9	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999987248748344	WITHOUT_CLASSIFICATION	1.2751251656177562E-6	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999893254888148	WITHOUT_CLASSIFICATION	1.0674511185278819E-5	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999893254888148	WITHOUT_CLASSIFICATION	1.0674511185278819E-5	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999676504161393	WITHOUT_CLASSIFICATION	3.234958386065623E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9652038711656916	WITHOUT_CLASSIFICATION	0.03479612883430846	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9998324458695619	WITHOUT_CLASSIFICATION	1.675541304381918E-4	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999676504161393	WITHOUT_CLASSIFICATION	3.234958386065623E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.9652038711656916	WITHOUT_CLASSIFICATION	0.03479612883430846	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999987720482993	WITHOUT_CLASSIFICATION	1.227951700700904E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999193665435212	WITHOUT_CLASSIFICATION	8.063345647876234E-5	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999966366264	WITHOUT_CLASSIFICATION	3.3633735589685817E-9	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.999999976836286	WITHOUT_CLASSIFICATION	2.3163713970827847E-8	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999966366264	WITHOUT_CLASSIFICATION	3.3633735589685817E-9	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999999400246222	WITHOUT_CLASSIFICATION	5.997537786475432E-8	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999997816422	WITHOUT_CLASSIFICATION	2.1835789081832191E-10	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999997816422	WITHOUT_CLASSIFICATION	2.1835789081832191E-10	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.999998604210921	WITHOUT_CLASSIFICATION	1.3957890790616048E-6	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999996859509231	WITHOUT_CLASSIFICATION	3.140490768862829E-7	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9998822115322865	WITHOUT_CLASSIFICATION	1.1778846771355996E-4	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999999706694902	WITHOUT_CLASSIFICATION	2.9330509828261243E-8	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999997188698475	WITHOUT_CLASSIFICATION	2.811301524454062E-7	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999996217207057	WITHOUT_CLASSIFICATION	3.782792943494765E-7	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999981348590818	WITHOUT_CLASSIFICATION	1.8651409182062497E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999796661038	WITHOUT_CLASSIFICATION	2.0333896198580448E-7	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999989813970735	WITHOUT_CLASSIFICATION	1.0186029265185535E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999859892914634	WITHOUT_CLASSIFICATION	1.4010708536715195E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999999999033815	WITHOUT_CLASSIFICATION	9.66184471731693E-11	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999796661038	WITHOUT_CLASSIFICATION	2.0333896198580448E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999859892914634	WITHOUT_CLASSIFICATION	1.4010708536715195E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999796661038	WITHOUT_CLASSIFICATION	2.0333896198580448E-7	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9999997223005498	WITHOUT_CLASSIFICATION	2.7769945017534267E-7	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.9999999546069263	WITHOUT_CLASSIFICATION	4.539307366803373E-8	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999796661038	WITHOUT_CLASSIFICATION	2.0333896198580448E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999796661038	WITHOUT_CLASSIFICATION	2.0333896198580448E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999796661038	WITHOUT_CLASSIFICATION	2.0333896198580448E-7	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.9999937935462099	WITHOUT_CLASSIFICATION	6.206453790095997E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999996893221644	WITHOUT_CLASSIFICATION	3.1067783555344885E-7	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.999999507386386	WITHOUT_CLASSIFICATION	4.926136140150178E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999207544161369	WITHOUT_CLASSIFICATION	7.92455838629779E-5	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9999311083282215	WITHOUT_CLASSIFICATION	6.889167177856023E-5	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999978385016367	WITHOUT_CLASSIFICATION	2.1614983632888095E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999999804695592	WITHOUT_CLASSIFICATION	1.9530440769387933E-8	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999991638508227	WITHOUT_CLASSIFICATION	8.361491772532082E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999991638508227	WITHOUT_CLASSIFICATION	8.361491772532082E-7	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.999999861261408	WITHOUT_CLASSIFICATION	1.3873859195219718E-7	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.99999977077127	WITHOUT_CLASSIFICATION	2.292287300631215E-7	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9999863678755476	WITHOUT_CLASSIFICATION	1.3632124452469407E-5	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999739651924644	WITHOUT_CLASSIFICATION	2.6034807535579633E-5	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999915985586219	WITHOUT_CLASSIFICATION	8.401441378158846E-6	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999998611777057	WITHOUT_CLASSIFICATION	1.38822294276517E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999207544161369	WITHOUT_CLASSIFICATION	7.92455838629779E-5	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9998151337862635	WITHOUT_CLASSIFICATION	1.84866213736511E-4	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999998949255211	WITHOUT_CLASSIFICATION	1.0507447881695757E-7	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999934392433111	WITHOUT_CLASSIFICATION	6.560756688934495E-6	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999998700744639	WITHOUT_CLASSIFICATION	1.299255360575021E-7	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9999934700309828	WITHOUT_CLASSIFICATION	6.529969017207988E-6	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9999999777910172	WITHOUT_CLASSIFICATION	2.2208982770827244E-8	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9999399441201096	WITHOUT_CLASSIFICATION	6.005587989037882E-5	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999615530141741	WITHOUT_CLASSIFICATION	3.844698582592864E-5	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999998325793236	WITHOUT_CLASSIFICATION	1.6742067635189798E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999859892914634	WITHOUT_CLASSIFICATION	1.4010708536715195E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989338882875	WITHOUT_CLASSIFICATION	1.0661117124204798E-6	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999999997901897	WITHOUT_CLASSIFICATION	2.098102505921157E-10	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999994818164695	WITHOUT_CLASSIFICATION	5.181835305747015E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999994818164695	WITHOUT_CLASSIFICATION	5.181835305747015E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999981366728566	WITHOUT_CLASSIFICATION	1.8633271433816192E-6	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999859892914634	WITHOUT_CLASSIFICATION	1.4010708536715195E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999998236879573	WITHOUT_CLASSIFICATION	1.763120427515668E-7	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999855040364918	WITHOUT_CLASSIFICATION	1.4495963508369942E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.99023010733989	WITHOUT_CLASSIFICATION	0.009769892660110049	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999999717087864	WITHOUT_CLASSIFICATION	2.8291213589767124E-8	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999731339097034	WITHOUT_CLASSIFICATION	2.686609029655108E-5	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.999656272177835	WITHOUT_CLASSIFICATION	3.43727822164974E-4	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999997331165968	WITHOUT_CLASSIFICATION	2.6688340308586937E-7	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999999803368612	WITHOUT_CLASSIFICATION	1.9663138848952052E-8	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9999420704109379	WITHOUT_CLASSIFICATION	5.792958906205763E-5	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999999976616873	WITHOUT_CLASSIFICATION	2.3383126522631008E-9	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999896857165383	WITHOUT_CLASSIFICATION	1.0314283461618186E-5	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999986674270273	WITHOUT_CLASSIFICATION	1.332572972661075E-6	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9999993131741388	WITHOUT_CLASSIFICATION	6.868258612506549E-7	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9851717653226606	WITHOUT_CLASSIFICATION	0.01482823467733929	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999664229167624	WITHOUT_CLASSIFICATION	3.35770832376755E-5	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.9999998603105891	WITHOUT_CLASSIFICATION	1.396894109748875E-7	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999999414000001	WITHOUT_CLASSIFICATION	5.859999972347173E-8	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9999986909470856	WITHOUT_CLASSIFICATION	1.3090529143183668E-6	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999999762670546	WITHOUT_CLASSIFICATION	2.373294531914111E-8	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999988994192385	WITHOUT_CLASSIFICATION	1.1005807615312333E-6	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9997051853483702	WITHOUT_CLASSIFICATION	2.9481465162975267E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999859892914634	WITHOUT_CLASSIFICATION	1.4010708536715195E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999999222312058	WITHOUT_CLASSIFICATION	7.7768794149667E-8	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999964463963253	WITHOUT_CLASSIFICATION	3.5536036746072605E-6	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9999722429959154	WITHOUT_CLASSIFICATION	2.7757004084611134E-5	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999979018576134	WITHOUT_CLASSIFICATION	2.09814238659836E-6	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.9999958002476468	WITHOUT_CLASSIFICATION	4.199752353164147E-6	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999996208772189	WITHOUT_CLASSIFICATION	3.791227809743998E-7	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9998905746411403	WITHOUT_CLASSIFICATION	1.0942535885967123E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999859892914634	WITHOUT_CLASSIFICATION	1.4010708536715195E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999993872720062	WITHOUT_CLASSIFICATION	6.127279937750803E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.999999946559073	WITHOUT_CLASSIFICATION	5.3440927072714736E-8	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.999999946559073	WITHOUT_CLASSIFICATION	5.3440927072714736E-8	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999933168560508	WITHOUT_CLASSIFICATION	6.683143949251509E-6	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999933168560508	WITHOUT_CLASSIFICATION	6.683143949251509E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999054757391	WITHOUT_CLASSIFICATION	9.452426084129865E-8	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999708048001984	WITHOUT_CLASSIFICATION	2.9195199801615896E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999974844425726	WITHOUT_CLASSIFICATION	2.515557427447238E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999974844425726	WITHOUT_CLASSIFICATION	2.515557427447238E-6	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999996371352947	WITHOUT_CLASSIFICATION	3.628647052703919E-7	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.99999852450286	WITHOUT_CLASSIFICATION	1.4754971401017008E-6	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.9999996893221644	WITHOUT_CLASSIFICATION	3.1067783555344885E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999977641839068	WITHOUT_CLASSIFICATION	2.2358160930767536E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999977641839068	WITHOUT_CLASSIFICATION	2.2358160930767536E-6	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999977641839068	WITHOUT_CLASSIFICATION	2.2358160930767536E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.99999852450286	WITHOUT_CLASSIFICATION	1.4754971401017008E-6	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999999768423049	WITHOUT_CLASSIFICATION	2.315769508000791E-8	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999845437587007	WITHOUT_CLASSIFICATION	1.545624129925043E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9996349801808699	WITHOUT_CLASSIFICATION	3.650198191300421E-4	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9999941967778792	WITHOUT_CLASSIFICATION	5.803222120837751E-6	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999992365165656	WITHOUT_CLASSIFICATION	7.634834344371134E-7	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999998728839158	WITHOUT_CLASSIFICATION	1.2711608415592587E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999989823908606	WITHOUT_CLASSIFICATION	1.0176091394023879E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9991397753802265	WITHOUT_CLASSIFICATION	8.602246197734767E-4	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999498102393428	WITHOUT_CLASSIFICATION	5.018976065715658E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999723609128	WITHOUT_CLASSIFICATION	2.7639087244379452E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999999060007834	WITHOUT_CLASSIFICATION	9.399921655500747E-8	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999925636142897	WITHOUT_CLASSIFICATION	7.4363857102357645E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999980770784671	WITHOUT_CLASSIFICATION	1.922921532965795E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.999999081753563	WITHOUT_CLASSIFICATION	9.182464369980953E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.999635503424626	WITHOUT_CLASSIFICATION	3.6449657537396946E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999996013748472	WITHOUT_CLASSIFICATION	3.9862515271456923E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999958929690755	WITHOUT_CLASSIFICATION	4.1070309244071685E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999996097440726	WITHOUT_CLASSIFICATION	3.9025592732797253E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999999212883296	WITHOUT_CLASSIFICATION	7.87116702971313E-8	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999934241946231	WITHOUT_CLASSIFICATION	6.575805376920263E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999927893290401	WITHOUT_CLASSIFICATION	7.210670959841985E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999970442080253	WITHOUT_CLASSIFICATION	2.9557919747953136E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998960431221	WITHOUT_CLASSIFICATION	1.039568778761189E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999998002718304	WITHOUT_CLASSIFICATION	1.9972816961069572E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999989451555844	WITHOUT_CLASSIFICATION	1.0548444156103935E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.99999961673365	WITHOUT_CLASSIFICATION	3.832663499894763E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999999055890795	WITHOUT_CLASSIFICATION	9.441092045863529E-8	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999989134582127	WITHOUT_CLASSIFICATION	1.0865417872728157E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999542372815063	WITHOUT_CLASSIFICATION	4.576271849367556E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999626112949536	WITHOUT_CLASSIFICATION	3.7388705046517224E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999995332382736	WITHOUT_CLASSIFICATION	4.667617264190021E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.999248939622554	WITHOUT_CLASSIFICATION	7.510603774459445E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.99999998993287	WITHOUT_CLASSIFICATION	1.0067130029756276E-8	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999922918745	WITHOUT_CLASSIFICATION	7.708125531265616E-9	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.999996643810945	WITHOUT_CLASSIFICATION	3.356189054893263E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999822912001014	WITHOUT_CLASSIFICATION	1.7708799898644687E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999951534202327	WITHOUT_CLASSIFICATION	4.8465797672984795E-6	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999927820494304	WITHOUT_CLASSIFICATION	7.217950569544066E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999992335972726	WITHOUT_CLASSIFICATION	7.664027273619E-7	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999991309060018	WITHOUT_CLASSIFICATION	8.690939982421132E-7	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999951534202327	WITHOUT_CLASSIFICATION	4.8465797672984795E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999992564616677	WITHOUT_CLASSIFICATION	7.435383323726348E-7	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999917822615656	WITHOUT_CLASSIFICATION	8.217738434281246E-6	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999981971355538	WITHOUT_CLASSIFICATION	1.8028644460582379E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9987426634708103	WITHOUT_CLASSIFICATION	0.0012573365291896495	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999988996639416	WITHOUT_CLASSIFICATION	1.1003360584209737E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999992335972726	WITHOUT_CLASSIFICATION	7.664027273619E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9987426634708103	WITHOUT_CLASSIFICATION	0.0012573365291896495	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999933761974641	WITHOUT_CLASSIFICATION	6.6238025359229275E-6	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999999982925777	WITHOUT_CLASSIFICATION	1.7074222578585758E-9	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999965256162708	WITHOUT_CLASSIFICATION	3.474383729217936E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999990786834324	WITHOUT_CLASSIFICATION	9.213165675257882E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999999786987236	WITHOUT_CLASSIFICATION	2.130127638844904E-8	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9998795157635085	WITHOUT_CLASSIFICATION	1.2048423649134083E-4	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999999849641612	WITHOUT_CLASSIFICATION	1.5035838801821526E-8	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999993824170569	WITHOUT_CLASSIFICATION	6.175829430680968E-7	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9999746813595672	WITHOUT_CLASSIFICATION	2.5318640432780152E-5	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999943845317726	WITHOUT_CLASSIFICATION	5.615468227456657E-6	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999997722093728	WITHOUT_CLASSIFICATION	2.2779062731539224E-7	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9999997767863869	WITHOUT_CLASSIFICATION	2.2321361301927845E-7	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.999999694895299	WITHOUT_CLASSIFICATION	3.051047009433734E-7	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.999998624672535	WITHOUT_CLASSIFICATION	1.375327465057803E-6	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.9999986200231267	WITHOUT_CLASSIFICATION	1.379976873397659E-6	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999991153000756	WITHOUT_CLASSIFICATION	8.846999245469561E-7	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9999928804957336	WITHOUT_CLASSIFICATION	7.119504266360257E-6	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999914436232021	WITHOUT_CLASSIFICATION	8.556376797884002E-6	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999999559788861	WITHOUT_CLASSIFICATION	4.4021113879854164E-8	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999976605298128	WITHOUT_CLASSIFICATION	2.339470187237206E-6	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.9999947110396978	WITHOUT_CLASSIFICATION	5.288960302204347E-6	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999999598766323	WITHOUT_CLASSIFICATION	4.0123367693664155E-8	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999999941828879	WITHOUT_CLASSIFICATION	5.817112149173077E-9	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999981928361901	WITHOUT_CLASSIFICATION	1.8071638098645885E-6	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.9999939073162022	WITHOUT_CLASSIFICATION	6.09268379781796E-6	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.970869843172265	WITHOUT_CLASSIFICATION	0.02913015682773503	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999995701724775	WITHOUT_CLASSIFICATION	4.2982752251575724E-7	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999997258212798	WITHOUT_CLASSIFICATION	2.7417872013396684E-7	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999999914986928	WITHOUT_CLASSIFICATION	8.501307189285313E-9	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999991404402235	WITHOUT_CLASSIFICATION	8.595597764360689E-7	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999492106414	WITHOUT_CLASSIFICATION	5.078935849165305E-8	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999984821329563	WITHOUT_CLASSIFICATION	1.517867043627608E-6	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999998372502529	WITHOUT_CLASSIFICATION	1.6274974713996267E-7	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999999804524619	WITHOUT_CLASSIFICATION	1.9547538155377552E-8	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.9999795237064113	WITHOUT_CLASSIFICATION	2.0476293588765734E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999764230165764	WITHOUT_CLASSIFICATION	2.35769834235937E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9994648693015822	WITHOUT_CLASSIFICATION	5.351306984177671E-4	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999990098437513	WITHOUT_CLASSIFICATION	9.90156248680598E-7	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999999299530344	WITHOUT_CLASSIFICATION	7.004696552288926E-8	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999992815484084	WITHOUT_CLASSIFICATION	7.184515915007377E-7	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.9999992735678558	WITHOUT_CLASSIFICATION	7.264321442103721E-7	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999991748214343	WITHOUT_CLASSIFICATION	8.2517856575528E-7	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999998496444421	WITHOUT_CLASSIFICATION	1.5035555802191834E-7	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999976086526388	WITHOUT_CLASSIFICATION	2.3913473612110574E-6	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999795353219527	WITHOUT_CLASSIFICATION	2.0464678047317968E-5	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999970053286954	WITHOUT_CLASSIFICATION	2.9946713044956654E-6	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9999663455440229	WITHOUT_CLASSIFICATION	3.365445597724157E-5	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.999967236683824	WITHOUT_CLASSIFICATION	3.276331617585695E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999999981158258	WITHOUT_CLASSIFICATION	1.884174185081312E-9	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999999686873792	WITHOUT_CLASSIFICATION	3.131262086928685E-8	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999999354744737	WITHOUT_CLASSIFICATION	6.452552619821912E-8	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9997223017072928	WITHOUT_CLASSIFICATION	2.776982927071768E-4	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9997519549586166	WITHOUT_CLASSIFICATION	2.4804504138348585E-4	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999993162782341	WITHOUT_CLASSIFICATION	6.837217658710048E-7	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.999999740557885	WITHOUT_CLASSIFICATION	2.5944211503652E-7	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999996859509231	WITHOUT_CLASSIFICATION	3.140490768862829E-7	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9999953593194539	WITHOUT_CLASSIFICATION	4.640680546042052E-6	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999993812666883	WITHOUT_CLASSIFICATION	6.187333116862094E-7	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999999822159762	WITHOUT_CLASSIFICATION	1.7784023829704115E-8	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999999480068553	WITHOUT_CLASSIFICATION	5.199314464011866E-8	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999999916457505	WITHOUT_CLASSIFICATION	8.354249498594887E-9	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9998600434679042	WITHOUT_CLASSIFICATION	1.399565320957923E-4	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9999235715387185	WITHOUT_CLASSIFICATION	7.642846128149256E-5	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9999978708043705	WITHOUT_CLASSIFICATION	2.1291956294363677E-6	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999999988110042	WITHOUT_CLASSIFICATION	1.188995804256386E-9	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.999999870096102	WITHOUT_CLASSIFICATION	1.2990389787976944E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999999970478837	WITHOUT_CLASSIFICATION	2.952116304624792E-9	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999978385016367	WITHOUT_CLASSIFICATION	2.1614983632888095E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999999804695592	WITHOUT_CLASSIFICATION	1.9530440769387933E-8	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999998611777057	WITHOUT_CLASSIFICATION	1.38822294276517E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9998600434679042	WITHOUT_CLASSIFICATION	1.399565320957923E-4	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.999999870096102	WITHOUT_CLASSIFICATION	1.2990389787976944E-7	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999999970478837	WITHOUT_CLASSIFICATION	2.952116304624792E-9	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999999175436555	WITHOUT_CLASSIFICATION	8.245634460608133E-8	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999990259407991	WITHOUT_CLASSIFICATION	9.74059200885687E-7	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999874578894588	WITHOUT_CLASSIFICATION	1.2542110541364503E-5	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9999980290387871	WITHOUT_CLASSIFICATION	1.9709612128632347E-6	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999998208201208	WITHOUT_CLASSIFICATION	1.7917987917507526E-7	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.999999999499855	WITHOUT_CLASSIFICATION	5.001450738867389E-10	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.9999999979567725	WITHOUT_CLASSIFICATION	2.0432275031950718E-9	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999890790928841	WITHOUT_CLASSIFICATION	1.0920907115827522E-5	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.999999994301752	WITHOUT_CLASSIFICATION	5.698248029449301E-9	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9999634556027173	WITHOUT_CLASSIFICATION	3.6544397282701184E-5	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999980909253025	WITHOUT_CLASSIFICATION	1.9090746975495788E-6	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9998676568728365	WITHOUT_CLASSIFICATION	1.3234312716337365E-4	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999991771020081	WITHOUT_CLASSIFICATION	8.228979918244314E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9999999118212426	WITHOUT_CLASSIFICATION	8.817875737138681E-8	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999998536923757	WITHOUT_CLASSIFICATION	1.4630762442191622E-7	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.999999959755422	WITHOUT_CLASSIFICATION	4.0244578084866526E-8	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9999248517743529	WITHOUT_CLASSIFICATION	7.514822564717692E-5	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999998326781225	WITHOUT_CLASSIFICATION	1.6732187752332154E-7	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.9999999816384506	WITHOUT_CLASSIFICATION	1.83615494430699E-8	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.9999992566196483	WITHOUT_CLASSIFICATION	7.433803516532795E-7	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999999980282503	WITHOUT_CLASSIFICATION	1.9717497041071158E-9	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999999999337287	WITHOUT_CLASSIFICATION	6.627125364729752E-11	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999999480068553	WITHOUT_CLASSIFICATION	5.199314464011866E-8	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999999916457505	WITHOUT_CLASSIFICATION	8.354249498594887E-9	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999999961909909	WITHOUT_CLASSIFICATION	3.809009200803162E-9	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999999998410339	WITHOUT_CLASSIFICATION	1.5896605968674913E-10	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999999650037972	WITHOUT_CLASSIFICATION	3.499620277526038E-8	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999997607543243	WITHOUT_CLASSIFICATION	2.3924567576570694E-7	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999639172783519	WITHOUT_CLASSIFICATION	3.6082721648040436E-5	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999981617194559	WITHOUT_CLASSIFICATION	1.838280544189215E-6	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9996885840797107	WITHOUT_CLASSIFICATION	3.114159202893045E-4	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999757010540427	WITHOUT_CLASSIFICATION	2.4298945957353122E-5	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999987902176274	WITHOUT_CLASSIFICATION	1.2097823726735842E-6	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999987902176274	WITHOUT_CLASSIFICATION	1.2097823726735842E-6	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.99999581504965	WITHOUT_CLASSIFICATION	4.1849503500098496E-6	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9999972486543126	WITHOUT_CLASSIFICATION	2.7513456873689926E-6	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999970529984832	WITHOUT_CLASSIFICATION	2.9470015168193704E-6	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.99999904737584	WITHOUT_CLASSIFICATION	9.526241599282148E-7	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999999971810112	WITHOUT_CLASSIFICATION	2.8189888537662605E-9	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999626806579	WITHOUT_CLASSIFICATION	3.7319342085776096E-8	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999997624871031	WITHOUT_CLASSIFICATION	2.3751289696422748E-7	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.9999997624871031	WITHOUT_CLASSIFICATION	2.3751289696422748E-7	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999999798394035	WITHOUT_CLASSIFICATION	2.0160596507165508E-8	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999966210764406	WITHOUT_CLASSIFICATION	3.378923559488766E-6	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999997444501718	WITHOUT_CLASSIFICATION	2.5554982826327604E-7	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999999802984267	WITHOUT_CLASSIFICATION	1.9701573244047533E-8	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999999875597331	WITHOUT_CLASSIFICATION	1.2440266895066091E-8	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999920655679764	WITHOUT_CLASSIFICATION	7.934432023651177E-6	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999999646544316	WITHOUT_CLASSIFICATION	3.5345568320345616E-8	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999992878753494	WITHOUT_CLASSIFICATION	7.121246506350855E-7	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999999838640876	WITHOUT_CLASSIFICATION	1.613591241690978E-8	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.9999999903477826	WITHOUT_CLASSIFICATION	9.652217379619134E-9	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9998442289247471	WITHOUT_CLASSIFICATION	1.5577107525282526E-4	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.999999999312961	WITHOUT_CLASSIFICATION	6.870390613614349E-10	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9999759419452795	WITHOUT_CLASSIFICATION	2.4058054720410063E-5	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999997804937032	WITHOUT_CLASSIFICATION	2.1950629671390832E-7	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999963974889099	WITHOUT_CLASSIFICATION	3.6025110901283594E-6	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999992163610566	WITHOUT_CLASSIFICATION	7.83638943337711E-7	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.999997719970463	WITHOUT_CLASSIFICATION	2.280029536903352E-6	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999994715902965	WITHOUT_CLASSIFICATION	5.284097035252917E-7	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999999562271585	WITHOUT_CLASSIFICATION	4.3772841388110936E-8	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999995135347085	WITHOUT_CLASSIFICATION	4.864652914823072E-7	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9999997939608205	WITHOUT_CLASSIFICATION	2.0603917952992387E-7	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999999936115856	WITHOUT_CLASSIFICATION	6.38841441314515E-9	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999999963249556	WITHOUT_CLASSIFICATION	3.6750443380592888E-9	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9999937659263285	WITHOUT_CLASSIFICATION	6.234073671400932E-6	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999998284266113	WITHOUT_CLASSIFICATION	1.7157338863332505E-7	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999996466314865	WITHOUT_CLASSIFICATION	3.5336851353112513E-7	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999998819328445	WITHOUT_CLASSIFICATION	1.1806715552658827E-7	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999992887788207	WITHOUT_CLASSIFICATION	7.112211792474815E-7	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999987915582056	WITHOUT_CLASSIFICATION	1.2084417943948911E-6	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999999960082412	WITHOUT_CLASSIFICATION	3.991758791040931E-9	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999982979281369	WITHOUT_CLASSIFICATION	1.7020718630845666E-6	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999853885238008	WITHOUT_CLASSIFICATION	1.4611476199326322E-5	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.999992634593721	WITHOUT_CLASSIFICATION	7.365406279036263E-6	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999920484409529	WITHOUT_CLASSIFICATION	7.951559047100788E-6	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.9997454406083933	WITHOUT_CLASSIFICATION	2.545593916067402E-4	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999934544576458	WITHOUT_CLASSIFICATION	6.545542354208492E-6	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9999148703536742	WITHOUT_CLASSIFICATION	8.512964632575917E-5	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.999996242515379	WITHOUT_CLASSIFICATION	3.757484620963696E-6	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999897036148335	WITHOUT_CLASSIFICATION	1.029638516654971E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999722890480598	WITHOUT_CLASSIFICATION	2.771095194024433E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999992742910193	WITHOUT_CLASSIFICATION	7.25708980741263E-7	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9999595754239421	WITHOUT_CLASSIFICATION	4.0424576057954096E-5	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999998617393364	WITHOUT_CLASSIFICATION	1.382606635826992E-7	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9999966968255907	WITHOUT_CLASSIFICATION	3.303174409208034E-6	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9999972769776296	WITHOUT_CLASSIFICATION	2.72302237050133E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999992742910193	WITHOUT_CLASSIFICATION	7.25708980741263E-7	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999998617393364	WITHOUT_CLASSIFICATION	1.382606635826992E-7	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.9999936649327255	WITHOUT_CLASSIFICATION	6.335067274470472E-6	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999999769954859	WITHOUT_CLASSIFICATION	2.3004514048773226E-8	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.999998683380133	WITHOUT_CLASSIFICATION	1.3166198669830896E-6	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999999908990977	WITHOUT_CLASSIFICATION	9.10090219922358E-9	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999722890480598	WITHOUT_CLASSIFICATION	2.771095194024433E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999722890480598	WITHOUT_CLASSIFICATION	2.771095194024433E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999992742910193	WITHOUT_CLASSIFICATION	7.25708980741263E-7	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.99999974378408	WITHOUT_CLASSIFICATION	2.562159200894959E-7	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999974951345829	WITHOUT_CLASSIFICATION	2.5048654170727294E-6	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999991419758847	WITHOUT_CLASSIFICATION	8.580241152645359E-7	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.9999991419758847	WITHOUT_CLASSIFICATION	8.580241152645359E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999973383735	WITHOUT_CLASSIFICATION	2.661626547373517E-9	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999929634064098	WITHOUT_CLASSIFICATION	7.036593590324379E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999072897432238	WITHOUT_CLASSIFICATION	9.271025677615055E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999072897432238	WITHOUT_CLASSIFICATION	9.271025677615055E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999990894339479	WITHOUT_CLASSIFICATION	9.105660521504829E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999929634064098	WITHOUT_CLASSIFICATION	7.036593590324379E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999072897432238	WITHOUT_CLASSIFICATION	9.271025677615055E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.9999990894339479	WITHOUT_CLASSIFICATION	9.105660521504829E-7	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999949375834695	WITHOUT_CLASSIFICATION	5.062416530566844E-6	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9999999382193054	WITHOUT_CLASSIFICATION	6.178069457950678E-8	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999999965459525	WITHOUT_CLASSIFICATION	3.4540475101821166E-9	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9999993872887678	WITHOUT_CLASSIFICATION	6.127112323042893E-7	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999873518344511	WITHOUT_CLASSIFICATION	1.2648165548833229E-5	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999999714788342	WITHOUT_CLASSIFICATION	2.8521165748963483E-8	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999831181899353	WITHOUT_CLASSIFICATION	1.68818100645865E-5	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999986596095686	WITHOUT_CLASSIFICATION	1.3403904313861626E-6	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.9998557991380597	WITHOUT_CLASSIFICATION	1.4420086194026684E-4	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.999969294842615	WITHOUT_CLASSIFICATION	3.0705157385046136E-5	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999996381260629	WITHOUT_CLASSIFICATION	3.618739370826213E-7	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999965118084342	WITHOUT_CLASSIFICATION	3.488191565776575E-6	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999999941545313	WITHOUT_CLASSIFICATION	5.845468701720168E-9	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999999844254727	WITHOUT_CLASSIFICATION	1.557452727761157E-8	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999999999980003	WITHOUT_CLASSIFICATION	1.9997767052862474E-12	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999971040171881	WITHOUT_CLASSIFICATION	2.895982811901196E-6	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.999999901807992	WITHOUT_CLASSIFICATION	9.819200808534745E-8	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.9999999600594202	WITHOUT_CLASSIFICATION	3.9940579737181616E-8	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9999998731398061	WITHOUT_CLASSIFICATION	1.2686019400116258E-7	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999978131401664	WITHOUT_CLASSIFICATION	2.1868598336622833E-6	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999999156471	WITHOUT_CLASSIFICATION	8.435292019816627E-11	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999996975659244	WITHOUT_CLASSIFICATION	3.024340755826419E-7	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999812248777	WITHOUT_CLASSIFICATION	1.877512234299048E-8	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999998930337366	WITHOUT_CLASSIFICATION	1.0696626337904381E-7	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999998225350428	WITHOUT_CLASSIFICATION	1.7746495711819231E-7	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999999930108052	WITHOUT_CLASSIFICATION	6.9891947295955154E-9	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999999923137322	WITHOUT_CLASSIFICATION	7.686267899555638E-9	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.999999841079244	WITHOUT_CLASSIFICATION	1.5892075606380052E-7	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999999981063097	WITHOUT_CLASSIFICATION	1.893690330372562E-9	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9998738857528854	WITHOUT_CLASSIFICATION	1.2611424711462887E-4	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.9999991695254311	WITHOUT_CLASSIFICATION	8.304745690060407E-7	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.999999983483443	WITHOUT_CLASSIFICATION	1.6516556974482298E-8	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999971659077056	WITHOUT_CLASSIFICATION	2.834092294464307E-6	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999999371530375	WITHOUT_CLASSIFICATION	6.284696261267079E-8	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.999999896024916	WITHOUT_CLASSIFICATION	1.0397508393065011E-7	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999993520126387	WITHOUT_CLASSIFICATION	6.479873613016105E-7	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999999999369731	WITHOUT_CLASSIFICATION	6.302691145893562E-11	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999988941297676	WITHOUT_CLASSIFICATION	1.1058702324757901E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999988025819831	WITHOUT_CLASSIFICATION	1.1974180169002763E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999988025819831	WITHOUT_CLASSIFICATION	1.1974180169002763E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999988025819831	WITHOUT_CLASSIFICATION	1.1974180169002763E-6	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999997242410591	WITHOUT_CLASSIFICATION	2.7575894095111386E-7	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9999997938519725	WITHOUT_CLASSIFICATION	2.061480275982654E-7	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9999939627965635	WITHOUT_CLASSIFICATION	6.037203436381517E-6	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9999999826297375	WITHOUT_CLASSIFICATION	1.7370262427706537E-8	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9999900607939424	WITHOUT_CLASSIFICATION	9.939206057682294E-6	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999978169591237	WITHOUT_CLASSIFICATION	2.1830408763108612E-6	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999990035403	WITHOUT_CLASSIFICATION	9.964597322229713E-10	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999982379085641	WITHOUT_CLASSIFICATION	1.762091435939668E-6	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999997838660253	WITHOUT_CLASSIFICATION	2.1613397466656332E-7	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999995089867896	WITHOUT_CLASSIFICATION	4.910132103494962E-7	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9999980394487111	WITHOUT_CLASSIFICATION	1.960551288898699E-6	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999750136604478	WITHOUT_CLASSIFICATION	2.4986339552261326E-5	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.9999992555327458	WITHOUT_CLASSIFICATION	7.444672541887318E-7	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9999074635144581	WITHOUT_CLASSIFICATION	9.253648554182594E-5	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9999800916170264	WITHOUT_CLASSIFICATION	1.990838297365431E-5	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999999921919875	WITHOUT_CLASSIFICATION	7.808012510845675E-9	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999998699225763	WITHOUT_CLASSIFICATION	1.3007742371581527E-7	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999974895556849	WITHOUT_CLASSIFICATION	2.510444315190401E-6	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999938317281728	WITHOUT_CLASSIFICATION	6.16827182725508E-6	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9999832185499372	WITHOUT_CLASSIFICATION	1.6781450062830324E-5	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.9999563670019973	WITHOUT_CLASSIFICATION	4.3632998002652346E-5	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999997867334911	WITHOUT_CLASSIFICATION	2.1326650881152314E-7	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9999432677598938	WITHOUT_CLASSIFICATION	5.673224010615204E-5	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9999997557949611	WITHOUT_CLASSIFICATION	2.4420503883330544E-7	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999990456987458	WITHOUT_CLASSIFICATION	9.543012543148676E-7	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999986135546439	WITHOUT_CLASSIFICATION	1.3864453561970918E-6	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999999975993494	WITHOUT_CLASSIFICATION	2.4006506412625575E-9	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999996741659023	WITHOUT_CLASSIFICATION	3.25834097670336E-7	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999999391455431	WITHOUT_CLASSIFICATION	6.085445686151299E-8	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999926448091873	WITHOUT_CLASSIFICATION	7.355190812662861E-6	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999992887791211	WITHOUT_CLASSIFICATION	7.112208789675422E-7	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.999998841475854	WITHOUT_CLASSIFICATION	1.1585241458665526E-6	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9983172707381751	WITHOUT_CLASSIFICATION	0.0016827292618248858	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.9999701691395088	WITHOUT_CLASSIFICATION	2.9830860491218194E-5	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9999919660147997	WITHOUT_CLASSIFICATION	8.033985200307473E-6	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999999926440264	WITHOUT_CLASSIFICATION	7.355973648509878E-9	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999999883214145	WITHOUT_CLASSIFICATION	1.1678585573288226E-8	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999922141441909	WITHOUT_CLASSIFICATION	7.7858558090454E-6	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999994475893169	WITHOUT_CLASSIFICATION	5.524106830330271E-7	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999898574044607	WITHOUT_CLASSIFICATION	1.0142595539365227E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999960977598211	WITHOUT_CLASSIFICATION	3.902240178935327E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999975434376953	WITHOUT_CLASSIFICATION	2.4565623047360686E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999981617194559	WITHOUT_CLASSIFICATION	1.838280544189215E-6	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.999641020915666	WITHOUT_CLASSIFICATION	3.5897908433396076E-4	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9998962039720599	WITHOUT_CLASSIFICATION	1.0379602793999015E-4	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9995428628118413	WITHOUT_CLASSIFICATION	4.571371881587003E-4	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9995711874194115	WITHOUT_CLASSIFICATION	4.288125805885121E-4	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9999839096788736	WITHOUT_CLASSIFICATION	1.609032112642583E-5	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9982446161252397	WITHOUT_CLASSIFICATION	0.001755383874760264	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999861391743199	WITHOUT_CLASSIFICATION	1.3860825680196748E-5	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.999999999911779	WITHOUT_CLASSIFICATION	8.82210050464751E-11	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9999493068581393	WITHOUT_CLASSIFICATION	5.069314186067902E-5	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.9999980398921383	WITHOUT_CLASSIFICATION	1.960107861636512E-6	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999998714591504	WITHOUT_CLASSIFICATION	1.2854084964419057E-7	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999959340201727	WITHOUT_CLASSIFICATION	4.065979827282039E-6	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999991941980287	WITHOUT_CLASSIFICATION	8.058019712886814E-7	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999977179482132	WITHOUT_CLASSIFICATION	2.2820517867480914E-6	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9999846702116484	WITHOUT_CLASSIFICATION	1.5329788351555452E-5	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999998003440521	WITHOUT_CLASSIFICATION	1.9965594789958265E-7	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999997728648091	WITHOUT_CLASSIFICATION	2.2713519091946186E-7	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999999816176917	WITHOUT_CLASSIFICATION	1.8382308297825643E-8	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9999974899972022	WITHOUT_CLASSIFICATION	2.5100027978469715E-6	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.9999684994906939	WITHOUT_CLASSIFICATION	3.15005093061258E-5	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.99999872969443	WITHOUT_CLASSIFICATION	1.2703055699533958E-6	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9999406416015563	WITHOUT_CLASSIFICATION	5.9358398443782596E-5	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999815267602733	WITHOUT_CLASSIFICATION	1.8473239726804845E-5	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999961677333153	WITHOUT_CLASSIFICATION	3.832266684671464E-6	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999998385637594	WITHOUT_CLASSIFICATION	1.6143624064100898E-7	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999998385637594	WITHOUT_CLASSIFICATION	1.6143624064100898E-7	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999980372156096	WITHOUT_CLASSIFICATION	1.962784390278475E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999980372156096	WITHOUT_CLASSIFICATION	1.962784390278475E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999815267602733	WITHOUT_CLASSIFICATION	1.8473239726804845E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999980372156096	WITHOUT_CLASSIFICATION	1.962784390278475E-6	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999989675422386	WITHOUT_CLASSIFICATION	1.0324577614696982E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999988359025589	WITHOUT_CLASSIFICATION	1.1640974410655868E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999988359025589	WITHOUT_CLASSIFICATION	1.1640974410655868E-6	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999980341767807	WITHOUT_CLASSIFICATION	1.9658232192705164E-6	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.9999999877960349	WITHOUT_CLASSIFICATION	1.2203965135203124E-8	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9999999802843335	WITHOUT_CLASSIFICATION	1.9715666574995696E-8	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9998863825785371	WITHOUT_CLASSIFICATION	1.1361742146285404E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9999928917364109	WITHOUT_CLASSIFICATION	7.108263588989453E-6	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999980494081651	WITHOUT_CLASSIFICATION	1.950591835019509E-6	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999892146570135	WITHOUT_CLASSIFICATION	1.0785342986519953E-5	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.9999876712293688	WITHOUT_CLASSIFICATION	1.23287706312492E-5	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9999875708158448	WITHOUT_CLASSIFICATION	1.242918415525861E-5	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999992303042972	WITHOUT_CLASSIFICATION	7.696957028607112E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999999927991466	WITHOUT_CLASSIFICATION	7.200853268923582E-9	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999999996261296	WITHOUT_CLASSIFICATION	3.738703882427184E-10	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999984966459036	WITHOUT_CLASSIFICATION	1.5033540964145904E-6	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999999970904663	WITHOUT_CLASSIFICATION	2.9095336334578803E-9	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.999998084687154	WITHOUT_CLASSIFICATION	1.915312845930203E-6	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.999999999730194	WITHOUT_CLASSIFICATION	2.6980592152765287E-10	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.999999869976943	WITHOUT_CLASSIFICATION	1.300230570909056E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9922433002265113	WITHOUT_CLASSIFICATION	0.007756699773488715	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9994661987687297	WITHOUT_CLASSIFICATION	5.338012312702559E-4	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999998006660646	WITHOUT_CLASSIFICATION	1.9933393524661455E-7	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.9999999993921056	WITHOUT_CLASSIFICATION	6.078944523332543E-10	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9999993196470389	WITHOUT_CLASSIFICATION	6.803529610315728E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999945368747	WITHOUT_CLASSIFICATION	5.46312522876856E-9	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999984871592826	WITHOUT_CLASSIFICATION	1.5128407173087697E-6	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999984871592826	WITHOUT_CLASSIFICATION	1.5128407173087697E-6	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999999312153653	WITHOUT_CLASSIFICATION	6.878463464007896E-8	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.999999741733267	WITHOUT_CLASSIFICATION	2.582667330518002E-7	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.9999947491902558	WITHOUT_CLASSIFICATION	5.250809744215204E-6	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999982267638505	WITHOUT_CLASSIFICATION	1.773236149506625E-6	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999998260463219	WITHOUT_CLASSIFICATION	1.7395367810459692E-7	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999967250791851	WITHOUT_CLASSIFICATION	3.27492081494027E-6	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999999222466758	WITHOUT_CLASSIFICATION	7.775332424759069E-8	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9997600271320725	WITHOUT_CLASSIFICATION	2.399728679275625E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997983742473432	WITHOUT_CLASSIFICATION	2.0162575265672425E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999747406871418	WITHOUT_CLASSIFICATION	2.5259312858182845E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999994702061631	WITHOUT_CLASSIFICATION	5.297938369408216E-7	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999875773160238	WITHOUT_CLASSIFICATION	1.242268397608292E-5	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999998992035147	WITHOUT_CLASSIFICATION	1.0079648527834093E-7	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9999989397822887	WITHOUT_CLASSIFICATION	1.0602177112558743E-6	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999999999646969	WITHOUT_CLASSIFICATION	3.530318148918917E-11	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999999435574539	WITHOUT_CLASSIFICATION	5.644254598704029E-8	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9999993110929372	WITHOUT_CLASSIFICATION	6.889070629341001E-7	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.999999998966473	WITHOUT_CLASSIFICATION	1.0335270494030473E-9	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999998979703849	WITHOUT_CLASSIFICATION	1.0202961514873212E-7	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999996213765339	WITHOUT_CLASSIFICATION	3.7862346620729417E-7	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999994627237933	WITHOUT_CLASSIFICATION	5.372762067255542E-7	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999952143204492	WITHOUT_CLASSIFICATION	4.7856795507125685E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.999983050547865	WITHOUT_CLASSIFICATION	1.6949452135074978E-5	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9999869196196085	WITHOUT_CLASSIFICATION	1.3080380391381158E-5	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999995542486734	WITHOUT_CLASSIFICATION	4.4575132657943335E-7	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.999998822062456	WITHOUT_CLASSIFICATION	1.1779375439251812E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999999998602234	WITHOUT_CLASSIFICATION	1.3977670277072523E-10	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999996560149874	WITHOUT_CLASSIFICATION	3.439850125988667E-7	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999534516976	WITHOUT_CLASSIFICATION	4.654830246763991E-8	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999999531385932	WITHOUT_CLASSIFICATION	4.6861406834348313E-8	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999994140580963	WITHOUT_CLASSIFICATION	5.859419036764199E-7	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999999596011176	WITHOUT_CLASSIFICATION	4.039888233272456E-8	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.9999891766347024	WITHOUT_CLASSIFICATION	1.0823365297566286E-5	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.9999993030567658	WITHOUT_CLASSIFICATION	6.96943234146305E-7	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9996300141416841	WITHOUT_CLASSIFICATION	3.6998585831598873E-4	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.999999059982994	WITHOUT_CLASSIFICATION	9.400170061163207E-7	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999999795479697	WITHOUT_CLASSIFICATION	2.0452030255676425E-8	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999986059436958	WITHOUT_CLASSIFICATION	1.3940563041322352E-6	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9999782400742756	WITHOUT_CLASSIFICATION	2.175992572442689E-5	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9996950908835112	WITHOUT_CLASSIFICATION	3.0490911648880836E-4	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.999999985804923	WITHOUT_CLASSIFICATION	1.4195076906962833E-8	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.9999999967721059	WITHOUT_CLASSIFICATION	3.2278940977457308E-9	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999997194744634	WITHOUT_CLASSIFICATION	2.8052553660373305E-7	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999989823908606	WITHOUT_CLASSIFICATION	1.0176091394023879E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9991397753802265	WITHOUT_CLASSIFICATION	8.602246197734767E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.9997983742473432	WITHOUT_CLASSIFICATION	2.0162575265672425E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.9999747406871418	WITHOUT_CLASSIFICATION	2.5259312858182845E-5	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999994702061631	WITHOUT_CLASSIFICATION	5.297938369408216E-7	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999998040527391	WITHOUT_CLASSIFICATION	1.9594726077861322E-7	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9999999873723834	WITHOUT_CLASSIFICATION	1.2627616532930149E-8	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.9999998532655938	WITHOUT_CLASSIFICATION	1.4673440608443093E-7	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.9999995164034157	WITHOUT_CLASSIFICATION	4.835965842444428E-7	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999994172421866	WITHOUT_CLASSIFICATION	5.827578134548107E-7	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9999985766540697	WITHOUT_CLASSIFICATION	1.4233459303612671E-6	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.999999718081432	WITHOUT_CLASSIFICATION	2.819185680450825E-7	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999773775495611	WITHOUT_CLASSIFICATION	2.2622450439025483E-5	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999999596588622	WITHOUT_CLASSIFICATION	4.0341137745590215E-8	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.999999866406186	WITHOUT_CLASSIFICATION	1.3359381405370317E-7	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999988858053676	WITHOUT_CLASSIFICATION	1.1141946323722749E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999988858053676	WITHOUT_CLASSIFICATION	1.1141946323722749E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999955347052939	WITHOUT_CLASSIFICATION	4.465294706058334E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999809883724026	WITHOUT_CLASSIFICATION	1.901162759741038E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999892688639	WITHOUT_CLASSIFICATION	1.0731136037542756E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999991998288007	WITHOUT_CLASSIFICATION	8.001711992210335E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999996708973486	WITHOUT_CLASSIFICATION	3.291026513558617E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999955584168	WITHOUT_CLASSIFICATION	4.4415832408557074E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999995889983115	WITHOUT_CLASSIFICATION	4.1100168848735856E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999988633778055	WITHOUT_CLASSIFICATION	1.1366221944627103E-6	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.9999968587403245	WITHOUT_CLASSIFICATION	3.1412596754723694E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999677158812	WITHOUT_CLASSIFICATION	3.228411885434022E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999883127266	WITHOUT_CLASSIFICATION	1.1687273353408111E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999965843025186	WITHOUT_CLASSIFICATION	3.4156974813507646E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999999887361261	WITHOUT_CLASSIFICATION	1.1263873909420461E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999181829729781	WITHOUT_CLASSIFICATION	8.181702702189941E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999955908377584	WITHOUT_CLASSIFICATION	4.409162241683959E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999765896932244	WITHOUT_CLASSIFICATION	2.341030677548888E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.999997473814741	WITHOUT_CLASSIFICATION	2.5261852588987546E-6	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9999498102393428	WITHOUT_CLASSIFICATION	5.018976065715658E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999999723609128	WITHOUT_CLASSIFICATION	2.7639087244379452E-8	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999999060007834	WITHOUT_CLASSIFICATION	9.399921655500747E-8	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999925636142897	WITHOUT_CLASSIFICATION	7.4363857102357645E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999980770784671	WITHOUT_CLASSIFICATION	1.922921532965795E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.999999081753563	WITHOUT_CLASSIFICATION	9.182464369980953E-7	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.999635503424626	WITHOUT_CLASSIFICATION	3.6449657537396946E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999996013748472	WITHOUT_CLASSIFICATION	3.9862515271456923E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999958929690755	WITHOUT_CLASSIFICATION	4.1070309244071685E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999996097440726	WITHOUT_CLASSIFICATION	3.9025592732797253E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999999212883296	WITHOUT_CLASSIFICATION	7.87116702971313E-8	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999934241946231	WITHOUT_CLASSIFICATION	6.575805376920263E-6	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999927893290401	WITHOUT_CLASSIFICATION	7.210670959841985E-6	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.9999970442080253	WITHOUT_CLASSIFICATION	2.9557919747953136E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999989451555844	WITHOUT_CLASSIFICATION	1.0548444156103935E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.99999961673365	WITHOUT_CLASSIFICATION	3.832663499894763E-7	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999999055890795	WITHOUT_CLASSIFICATION	9.441092045863529E-8	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999989134582127	WITHOUT_CLASSIFICATION	1.0865417872728157E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9999542372815063	WITHOUT_CLASSIFICATION	4.576271849367556E-5	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999626112949536	WITHOUT_CLASSIFICATION	3.7388705046517224E-5	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999995332382736	WITHOUT_CLASSIFICATION	4.667617264190021E-7	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.99999998993287	WITHOUT_CLASSIFICATION	1.0067130029756276E-8	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.9999822912001014	WITHOUT_CLASSIFICATION	1.7708799898644687E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999927820494304	WITHOUT_CLASSIFICATION	7.217950569544066E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999992335972726	WITHOUT_CLASSIFICATION	7.664027273619E-7	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.999996643810945	WITHOUT_CLASSIFICATION	3.356189054893263E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999917822615656	WITHOUT_CLASSIFICATION	8.217738434281246E-6	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999992564616677	WITHOUT_CLASSIFICATION	7.435383323726348E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9987426634708103	WITHOUT_CLASSIFICATION	0.0012573365291896495	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999955347052939	WITHOUT_CLASSIFICATION	4.465294706058334E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999809883724026	WITHOUT_CLASSIFICATION	1.901162759741038E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999892688639	WITHOUT_CLASSIFICATION	1.0731136037542756E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999991998288007	WITHOUT_CLASSIFICATION	8.001711992210335E-7	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999995889983115	WITHOUT_CLASSIFICATION	4.1100168848735856E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999988633778055	WITHOUT_CLASSIFICATION	1.1366221944627103E-6	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9998957183080286	WITHOUT_CLASSIFICATION	1.0428169197144663E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999965256162708	WITHOUT_CLASSIFICATION	3.474383729217936E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999990786834324	WITHOUT_CLASSIFICATION	9.213165675257882E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999883127266	WITHOUT_CLASSIFICATION	1.1687273353408111E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999965843025186	WITHOUT_CLASSIFICATION	3.4156974813507646E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999999887361261	WITHOUT_CLASSIFICATION	1.1263873909420461E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999181829729781	WITHOUT_CLASSIFICATION	8.181702702189941E-5	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999765896932244	WITHOUT_CLASSIFICATION	2.341030677548888E-5	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.999988727794801	WITHOUT_CLASSIFICATION	1.1272205199076392E-5	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999654358588035	WITHOUT_CLASSIFICATION	3.456414119649149E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.999999989585115	WITHOUT_CLASSIFICATION	1.0414884949133459E-8	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9918334019365788	WITHOUT_CLASSIFICATION	0.008166598063421232	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999945557263215	WITHOUT_CLASSIFICATION	5.444273678515934E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999985724682067	WITHOUT_CLASSIFICATION	1.4275317932848958E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999999043803651	WITHOUT_CLASSIFICATION	9.561963483280441E-8	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999990814443099	WITHOUT_CLASSIFICATION	9.185556901534772E-7	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999992836902147	WITHOUT_CLASSIFICATION	7.163097853815625E-7	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999995069788616	WITHOUT_CLASSIFICATION	4.930211383128052E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999992836902147	WITHOUT_CLASSIFICATION	7.163097853815625E-7	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9405644580373533	WITHOUT_CLASSIFICATION	0.05943554196264668	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999996795819764	WITHOUT_CLASSIFICATION	3.2041802349014613E-7	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999479157036856	WITHOUT_CLASSIFICATION	5.208429631442488E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999479157036856	WITHOUT_CLASSIFICATION	5.208429631442488E-5	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.999998498752705	WITHOUT_CLASSIFICATION	1.5012472951048625E-6	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999992291085285	WITHOUT_CLASSIFICATION	7.708914715588437E-7	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999998425323329	WITHOUT_CLASSIFICATION	1.5746766707688298E-7	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999992965341299	WITHOUT_CLASSIFICATION	7.034658701507855E-7	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9978599491382243	WITHOUT_CLASSIFICATION	0.002140050861775728	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999999993497223	WITHOUT_CLASSIFICATION	6.502778298413491E-10	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9999735320367152	WITHOUT_CLASSIFICATION	2.6467963284854778E-5	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999999410026923	WITHOUT_CLASSIFICATION	5.8997307766698547E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9999992306367823	WITHOUT_CLASSIFICATION	7.693632176774189E-7	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999996424271743	WITHOUT_CLASSIFICATION	3.5757282566628016E-7	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999995991909469	WITHOUT_CLASSIFICATION	4.008090531444524E-7	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999776260432508	WITHOUT_CLASSIFICATION	2.237395674923534E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999230486780638	WITHOUT_CLASSIFICATION	7.695132193611778E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999230486780638	WITHOUT_CLASSIFICATION	7.695132193611778E-5	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999997468442737	WITHOUT_CLASSIFICATION	2.5315572628230494E-7	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999980205467079	WITHOUT_CLASSIFICATION	1.9794532920560666E-6	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.999999046940682	WITHOUT_CLASSIFICATION	9.530593180015979E-7	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.9999434239341476	WITHOUT_CLASSIFICATION	5.6576065852452596E-5	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9999995740011071	WITHOUT_CLASSIFICATION	4.25998892943812E-7	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999991435285385	WITHOUT_CLASSIFICATION	8.564714614908123E-7	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999958481978692	WITHOUT_CLASSIFICATION	4.151802130817303E-6	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999986170499275	WITHOUT_CLASSIFICATION	1.3829500723966974E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999703257835	WITHOUT_CLASSIFICATION	2.9674216504401705E-8	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999999685101438	WITHOUT_CLASSIFICATION	3.148985623980577E-8	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999914538802821	WITHOUT_CLASSIFICATION	8.546119717993754E-6	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9998060890402577	WITHOUT_CLASSIFICATION	1.9391095974231494E-4	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.9999968024060024	WITHOUT_CLASSIFICATION	3.197593997646577E-6	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.9990653278508584	WITHOUT_CLASSIFICATION	9.346721491414528E-4	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999982267638505	WITHOUT_CLASSIFICATION	1.773236149506625E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999890699043	WITHOUT_CLASSIFICATION	1.0930095802878638E-8	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999982160085095	WITHOUT_CLASSIFICATION	1.783991490473085E-6	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999999294154508	WITHOUT_CLASSIFICATION	7.058454916747137E-8	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999908276173	WITHOUT_CLASSIFICATION	9.1723828140776E-9	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9999494149618149	WITHOUT_CLASSIFICATION	5.058503818511766E-5	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999832021363575	WITHOUT_CLASSIFICATION	1.6797863642496567E-5	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.9999848825082259	WITHOUT_CLASSIFICATION	1.5117491774092949E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999999961633801	WITHOUT_CLASSIFICATION	3.836619930221896E-9	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999994079475308	WITHOUT_CLASSIFICATION	5.920524690733573E-7	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999995266993639	WITHOUT_CLASSIFICATION	4.733006361406883E-7	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999903565537	WITHOUT_CLASSIFICATION	9.643446294547492E-9	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999903565537	WITHOUT_CLASSIFICATION	9.643446294547492E-9	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999243139923096	WITHOUT_CLASSIFICATION	7.568600769033969E-5	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.999997569011178	WITHOUT_CLASSIFICATION	2.430988822055835E-6	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999968162324	WITHOUT_CLASSIFICATION	3.183767616302386E-9	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999473257022673	WITHOUT_CLASSIFICATION	5.267429773268452E-5	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999673405609878	WITHOUT_CLASSIFICATION	3.2659439012240244E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999646646920881	WITHOUT_CLASSIFICATION	3.533530791177846E-5	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999984950888317	WITHOUT_CLASSIFICATION	1.5049111683368303E-6	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9997933769831853	WITHOUT_CLASSIFICATION	2.0662301681477398E-4	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999996718450949	WITHOUT_CLASSIFICATION	3.281549050480141E-7	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999251622616026	WITHOUT_CLASSIFICATION	7.483773839743672E-5	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999911247288833	WITHOUT_CLASSIFICATION	8.875271116707527E-6	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.999999891038713	WITHOUT_CLASSIFICATION	1.0896128698761809E-7	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999996448494746	WITHOUT_CLASSIFICATION	3.55150525471042E-7	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999812896964964	WITHOUT_CLASSIFICATION	1.8710303503726673E-5	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999999917546977	WITHOUT_CLASSIFICATION	8.245302242215575E-9	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999954038050992	WITHOUT_CLASSIFICATION	4.596194900822315E-6	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999999999710075	WITHOUT_CLASSIFICATION	2.899246035487723E-11	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9997812029067129	WITHOUT_CLASSIFICATION	2.187970932871688E-4	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9999138537832486	WITHOUT_CLASSIFICATION	8.614621675140845E-5	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999997042859409	WITHOUT_CLASSIFICATION	2.957140591031042E-7	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.999999608070137	WITHOUT_CLASSIFICATION	3.919298630418228E-7	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999999940824049	WITHOUT_CLASSIFICATION	5.917595164791724E-9	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.9999958929690755	WITHOUT_CLASSIFICATION	4.1070309244071685E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998960431221	WITHOUT_CLASSIFICATION	1.039568778761189E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999992335972726	WITHOUT_CLASSIFICATION	7.664027273619E-7	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999985724682067	WITHOUT_CLASSIFICATION	1.4275317932848958E-6	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.999999819532233	WITHOUT_CLASSIFICATION	1.8046776692053812E-7	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999917135925369	WITHOUT_CLASSIFICATION	8.286407463150573E-6	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999980770784671	WITHOUT_CLASSIFICATION	1.922921532965795E-6	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999998186029042	WITHOUT_CLASSIFICATION	1.8139709582891112E-7	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9999956479001824	WITHOUT_CLASSIFICATION	4.352099817643673E-6	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999910570740256	WITHOUT_CLASSIFICATION	8.942925974454977E-6	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9999779051163964	WITHOUT_CLASSIFICATION	2.2094883603678282E-5	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999992335972726	WITHOUT_CLASSIFICATION	7.664027273619E-7	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.9999717104269946	WITHOUT_CLASSIFICATION	2.828957300541762E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999488612289813	WITHOUT_CLASSIFICATION	5.113877101875427E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9999757010540427	WITHOUT_CLASSIFICATION	2.4298945957353122E-5	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999999470709942	WITHOUT_CLASSIFICATION	5.292900584291618E-8	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.9999995067309705	WITHOUT_CLASSIFICATION	4.932690295506866E-7	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9988019278764781	WITHOUT_CLASSIFICATION	0.0011980721235217565	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.9999999979679957	WITHOUT_CLASSIFICATION	2.0320042836028154E-9	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999930356991332	WITHOUT_CLASSIFICATION	6.964300866782467E-6	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.9999722890480598	WITHOUT_CLASSIFICATION	2.771095194024433E-5	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.999999397266286	WITHOUT_CLASSIFICATION	6.027337141817946E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999973383735	WITHOUT_CLASSIFICATION	2.661626547373517E-9	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999973383735	WITHOUT_CLASSIFICATION	2.661626547373517E-9	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.9999999973383735	WITHOUT_CLASSIFICATION	2.661626547373517E-9	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999072897432238	WITHOUT_CLASSIFICATION	9.271025677615055E-5	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9996898481960295	WITHOUT_CLASSIFICATION	3.1015180397063344E-4	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999997728222787	WITHOUT_CLASSIFICATION	2.271777213116665E-7	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.999999926455675	WITHOUT_CLASSIFICATION	7.354432497860799E-8	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999986596095686	WITHOUT_CLASSIFICATION	1.3403904313861626E-6	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999999938444731	WITHOUT_CLASSIFICATION	6.155526918414651E-9	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.999998990922507	WITHOUT_CLASSIFICATION	1.0090774929847149E-6	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.999995557592787	WITHOUT_CLASSIFICATION	4.4424072130206835E-6	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999992401273268	WITHOUT_CLASSIFICATION	7.598726732872021E-7	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999987113528953	WITHOUT_CLASSIFICATION	1.2886471047632527E-6	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999999999886573	WITHOUT_CLASSIFICATION	1.1342612752816596E-11	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999940083358	WITHOUT_CLASSIFICATION	5.991664191750316E-9	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999988837501885	WITHOUT_CLASSIFICATION	1.1162498114768444E-6	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999988300882867	WITHOUT_CLASSIFICATION	1.1699117133037886E-6	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.9997688394517729	WITHOUT_CLASSIFICATION	2.311605482270839E-4	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999999999986311	WITHOUT_CLASSIFICATION	1.3688977027351553E-12	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999997119214231	WITHOUT_CLASSIFICATION	2.880785769231387E-7	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999996701732676	WITHOUT_CLASSIFICATION	3.298267323060435E-7	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.999999955579914	WITHOUT_CLASSIFICATION	4.442008600658381E-8	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999978312913671	WITHOUT_CLASSIFICATION	2.1687086329519702E-6	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999999999995656	WITHOUT_CLASSIFICATION	4.3450069543716255E-13	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999988025819831	WITHOUT_CLASSIFICATION	1.1974180169002763E-6	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999984156512541	WITHOUT_CLASSIFICATION	1.5843487458475775E-6	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999937114468	WITHOUT_CLASSIFICATION	6.288553183412363E-9	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999929935369	WITHOUT_CLASSIFICATION	7.0064630811336335E-9	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999999844089286	WITHOUT_CLASSIFICATION	1.559107137243774E-8	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999997737267768	WITHOUT_CLASSIFICATION	2.262732231451204E-7	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999999930524184	WITHOUT_CLASSIFICATION	6.947581652639735E-9	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999741684746648	WITHOUT_CLASSIFICATION	2.583152533511396E-5	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999990923398	WITHOUT_CLASSIFICATION	9.076602563654008E-10	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999997506253507	WITHOUT_CLASSIFICATION	2.49374649242614E-7	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999950979782669	WITHOUT_CLASSIFICATION	4.902021733167428E-6	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999920004431	WITHOUT_CLASSIFICATION	7.99955692680552E-9	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.999999987363597	WITHOUT_CLASSIFICATION	1.263640293901092E-8	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9999999995507237	WITHOUT_CLASSIFICATION	4.492761923260122E-10	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.999999338709673	WITHOUT_CLASSIFICATION	6.612903270134837E-7	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9994923702271296	WITHOUT_CLASSIFICATION	5.076297728704432E-4	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9995963867845794	WITHOUT_CLASSIFICATION	4.036132154206041E-4	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999980372156096	WITHOUT_CLASSIFICATION	1.962784390278475E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999980372156096	WITHOUT_CLASSIFICATION	1.962784390278475E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999984966459036	WITHOUT_CLASSIFICATION	1.5033540964145904E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999984966459036	WITHOUT_CLASSIFICATION	1.5033540964145904E-6	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999998492709101	WITHOUT_CLASSIFICATION	1.5072908998017282E-7	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999836201731019	WITHOUT_CLASSIFICATION	1.6379826898106713E-5	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999999094302133	WITHOUT_CLASSIFICATION	9.056978662534304E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999998421598485	WITHOUT_CLASSIFICATION	1.5784015153160763E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999998421598485	WITHOUT_CLASSIFICATION	1.5784015153160763E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999998421598485	WITHOUT_CLASSIFICATION	1.5784015153160763E-7	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999883043414798	WITHOUT_CLASSIFICATION	1.1695658520178843E-5	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999999823470979	WITHOUT_CLASSIFICATION	1.7652902165211686E-8	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999875773160238	WITHOUT_CLASSIFICATION	1.242268397608292E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999982873847596	WITHOUT_CLASSIFICATION	1.712615240356207E-6	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999999477778624	WITHOUT_CLASSIFICATION	5.2222137602299205E-8	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.9999998290888997	WITHOUT_CLASSIFICATION	1.7091110032003947E-7	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999991965938959	WITHOUT_CLASSIFICATION	8.034061040018498E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.999999120393344	WITHOUT_CLASSIFICATION	8.796066559144635E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.999999120393344	WITHOUT_CLASSIFICATION	8.796066559144635E-7	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999999995685902	WITHOUT_CLASSIFICATION	4.3140969613063477E-10	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999997250700684	WITHOUT_CLASSIFICATION	2.7492993161472294E-7	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9999998795267966	WITHOUT_CLASSIFICATION	1.204732034077413E-7	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9999999918826097	WITHOUT_CLASSIFICATION	8.117390426852626E-9	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999999769663428	WITHOUT_CLASSIFICATION	2.3033657190533285E-8	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999849998475833	WITHOUT_CLASSIFICATION	1.5000152416720657E-5	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9999999689155175	WITHOUT_CLASSIFICATION	3.108448244275135E-8	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999988858053676	WITHOUT_CLASSIFICATION	1.1141946323722749E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999996708973486	WITHOUT_CLASSIFICATION	3.291026513558617E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999955584168	WITHOUT_CLASSIFICATION	4.4415832408557074E-9	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999677158812	WITHOUT_CLASSIFICATION	3.228411885434022E-8	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999955908377584	WITHOUT_CLASSIFICATION	4.409162241683959E-6	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999999641576107	WITHOUT_CLASSIFICATION	3.5842389148589854E-8	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999997109046214	WITHOUT_CLASSIFICATION	2.890953786268314E-7	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999999114430145	WITHOUT_CLASSIFICATION	8.855698551899163E-8	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999999043803651	WITHOUT_CLASSIFICATION	9.561963483280441E-8	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9999972958725776	WITHOUT_CLASSIFICATION	2.704127422403221E-6	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.999999977328002	WITHOUT_CLASSIFICATION	2.267199805063184E-8	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999997468442737	WITHOUT_CLASSIFICATION	2.5315572628230494E-7	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999647131632	WITHOUT_CLASSIFICATION	3.52868368181534E-8	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9997415154526884	WITHOUT_CLASSIFICATION	2.584845473116026E-4	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999999902731045	WITHOUT_CLASSIFICATION	9.726895486410726E-9	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999996710320039	WITHOUT_CLASSIFICATION	3.2896799612829923E-7	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9999997739594854	WITHOUT_CLASSIFICATION	2.2604051450062245E-7	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999957653198583	WITHOUT_CLASSIFICATION	4.234680141648816E-6	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.999999802743728	WITHOUT_CLASSIFICATION	1.972562720390426E-7	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.999999933840124	WITHOUT_CLASSIFICATION	6.61598760550542E-8	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999999988453097	WITHOUT_CLASSIFICATION	1.1546903517059917E-9	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999937796591	WITHOUT_CLASSIFICATION	6.220340871439852E-9	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999937796591	WITHOUT_CLASSIFICATION	6.220340871439852E-9	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.999999999422764	WITHOUT_CLASSIFICATION	5.772361607328545E-10	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999813514268172	WITHOUT_CLASSIFICATION	1.864857318270447E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999999596151787	WITHOUT_CLASSIFICATION	4.038482127510701E-8	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999966044856315	WITHOUT_CLASSIFICATION	3.3955143683844496E-6	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999966044856315	WITHOUT_CLASSIFICATION	3.3955143683844496E-6	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999297557732563	WITHOUT_CLASSIFICATION	7.024422674370529E-5	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.8897456930856559	WITHOUT_CLASSIFICATION	0.11025430691434408	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999998040500894	WITHOUT_CLASSIFICATION	1.9594991057364435E-7	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999999918549586	WITHOUT_CLASSIFICATION	8.145041398730466E-9	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999614353641726	WITHOUT_CLASSIFICATION	3.8564635827390716E-5	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999999977452557	WITHOUT_CLASSIFICATION	2.2547443750226724E-9	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999999823378609	WITHOUT_CLASSIFICATION	1.7662139007474895E-8	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999981398762361	WITHOUT_CLASSIFICATION	1.8601237638552664E-6	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9999992406224002	WITHOUT_CLASSIFICATION	7.5937759975448E-7	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9999978264263012	WITHOUT_CLASSIFICATION	2.1735736988439954E-6	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999996002357	WITHOUT_CLASSIFICATION	3.997643827617077E-10	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.999999793221534	WITHOUT_CLASSIFICATION	2.0677846606272874E-7	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999002590698226	WITHOUT_CLASSIFICATION	9.974093017744913E-5	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999999024015	WITHOUT_CLASSIFICATION	9.759840830366433E-11	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999694217893981	WITHOUT_CLASSIFICATION	3.057821060194505E-5	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999999309048304	WITHOUT_CLASSIFICATION	6.909516963377185E-8	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999999299459613	WITHOUT_CLASSIFICATION	7.005403865638974E-8	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999976005047	WITHOUT_CLASSIFICATION	2.3994953035565267E-9	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999999976198156	WITHOUT_CLASSIFICATION	2.3801844695061903E-9	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999999547702799	WITHOUT_CLASSIFICATION	4.5229720168482336E-8	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999988009375257	WITHOUT_CLASSIFICATION	1.199062474341613E-6	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9999502407487784	WITHOUT_CLASSIFICATION	4.9759251221596595E-5	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9999938013550566	WITHOUT_CLASSIFICATION	6.1986449434203785E-6	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9999967654760402	WITHOUT_CLASSIFICATION	3.2345239598180567E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999998699146114	WITHOUT_CLASSIFICATION	1.3008538865362856E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999998699146114	WITHOUT_CLASSIFICATION	1.3008538865362856E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999998699146114	WITHOUT_CLASSIFICATION	1.3008538865362856E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999998699146114	WITHOUT_CLASSIFICATION	1.3008538865362856E-7	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999999162951674	WITHOUT_CLASSIFICATION	8.370483267342519E-8	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999998900565679	WITHOUT_CLASSIFICATION	1.0994343213347744E-7	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999979745552801	WITHOUT_CLASSIFICATION	2.0254447200164482E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999979745552801	WITHOUT_CLASSIFICATION	2.0254447200164482E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999979745552801	WITHOUT_CLASSIFICATION	2.0254447200164482E-6	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.9999999109394925	WITHOUT_CLASSIFICATION	8.906050750854599E-8	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9999791030783226	WITHOUT_CLASSIFICATION	2.089692167742481E-5	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999996293703869	WITHOUT_CLASSIFICATION	3.70629613100655E-7	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999973359166616	WITHOUT_CLASSIFICATION	2.664083338421989E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.9999973359166616	WITHOUT_CLASSIFICATION	2.664083338421989E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999967830234586	WITHOUT_CLASSIFICATION	3.2169765413447418E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999967830234586	WITHOUT_CLASSIFICATION	3.2169765413447418E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999967830234586	WITHOUT_CLASSIFICATION	3.2169765413447418E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999967830234586	WITHOUT_CLASSIFICATION	3.2169765413447418E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999967830234586	WITHOUT_CLASSIFICATION	3.2169765413447418E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999967830234586	WITHOUT_CLASSIFICATION	3.2169765413447418E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999967830234586	WITHOUT_CLASSIFICATION	3.2169765413447418E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999967830234586	WITHOUT_CLASSIFICATION	3.2169765413447418E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999967830234586	WITHOUT_CLASSIFICATION	3.2169765413447418E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999967830234586	WITHOUT_CLASSIFICATION	3.2169765413447418E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999967830234586	WITHOUT_CLASSIFICATION	3.2169765413447418E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999967830234586	WITHOUT_CLASSIFICATION	3.2169765413447418E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999967830234586	WITHOUT_CLASSIFICATION	3.2169765413447418E-6	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999908276173	WITHOUT_CLASSIFICATION	9.1723828140776E-9	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999999908276173	WITHOUT_CLASSIFICATION	9.1723828140776E-9	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9872533984965862	WITHOUT_CLASSIFICATION	0.012746601503413689	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9872533984965862	WITHOUT_CLASSIFICATION	0.012746601503413689	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.999830836579226	WITHOUT_CLASSIFICATION	1.6916342077390675E-4	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999998275223735	WITHOUT_CLASSIFICATION	1.724776264511823E-7	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999984583317523	WITHOUT_CLASSIFICATION	1.5416682477059178E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999991260556375	WITHOUT_CLASSIFICATION	8.739443624847949E-7	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9999999148865861	WITHOUT_CLASSIFICATION	8.51134138422426E-8	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999946393258321	WITHOUT_CLASSIFICATION	5.360674167893961E-6	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999838602686988	WITHOUT_CLASSIFICATION	1.6139731301300037E-5	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999999866417623	WITHOUT_CLASSIFICATION	1.3358237849705388E-8	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999998940089455	WITHOUT_CLASSIFICATION	1.0599105450463097E-7	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999951324159415	WITHOUT_CLASSIFICATION	4.867584058518251E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999985553686304	WITHOUT_CLASSIFICATION	1.4446313696518718E-6	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999982366141723	WITHOUT_CLASSIFICATION	1.7633858276563314E-6	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999999872896765	WITHOUT_CLASSIFICATION	1.2710323515738841E-8	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999990758786664	WITHOUT_CLASSIFICATION	9.241213337173917E-7	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999989977108991	WITHOUT_CLASSIFICATION	1.0022891008574387E-6	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9999986740501731	WITHOUT_CLASSIFICATION	1.3259498270030272E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999998443969014	WITHOUT_CLASSIFICATION	1.5560309861008586E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999997252072127	WITHOUT_CLASSIFICATION	2.747927873249943E-7	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999683107758659	WITHOUT_CLASSIFICATION	3.168922413411654E-5	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.999999490563022	WITHOUT_CLASSIFICATION	5.094369779487798E-7	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999978436281441	WITHOUT_CLASSIFICATION	2.156371855797755E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999978436281441	WITHOUT_CLASSIFICATION	2.156371855797755E-6	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999955710689671	WITHOUT_CLASSIFICATION	4.428931033028326E-6	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9999922126261479	WITHOUT_CLASSIFICATION	7.787373852074071E-6	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9991876578118657	WITHOUT_CLASSIFICATION	8.123421881343016E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9989688681383343	WITHOUT_CLASSIFICATION	0.0010311318616656666	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9989118524134815	WITHOUT_CLASSIFICATION	0.0010881475865186056	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9994648798457976	WITHOUT_CLASSIFICATION	5.351201542024037E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.9994785371504182	WITHOUT_CLASSIFICATION	5.214628495816702E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9981266020306417	WITHOUT_CLASSIFICATION	0.0018733979693582863	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9993255114936094	WITHOUT_CLASSIFICATION	6.744885063906497E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9978700094521594	WITHOUT_CLASSIFICATION	0.0021299905478405633	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9993704704795598	WITHOUT_CLASSIFICATION	6.295295204401903E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9995332304888169	WITHOUT_CLASSIFICATION	4.66769511183182E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9990642190740147	WITHOUT_CLASSIFICATION	9.357809259852615E-4	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9979016955950994	WITHOUT_CLASSIFICATION	0.0020983044049005186	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9993262703551764	WITHOUT_CLASSIFICATION	6.73729644823576E-4	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.9988717025294225	WITHOUT_CLASSIFICATION	0.0011282974705774866	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999986728944785	WITHOUT_CLASSIFICATION	1.327105521416029E-6	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999982465599659	WITHOUT_CLASSIFICATION	1.7534400340448843E-6	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999996066258877	WITHOUT_CLASSIFICATION	3.9337411228161735E-7	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999999962132617	WITHOUT_CLASSIFICATION	3.786738355518967E-9	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999880083950393	WITHOUT_CLASSIFICATION	1.1991604960632681E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999880083950393	WITHOUT_CLASSIFICATION	1.1991604960632681E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999880083950393	WITHOUT_CLASSIFICATION	1.1991604960632681E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999880083950393	WITHOUT_CLASSIFICATION	1.1991604960632681E-5	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9995391359046365	WITHOUT_CLASSIFICATION	4.608640953633826E-4	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999924834349	WITHOUT_CLASSIFICATION	7.516565163594462E-9	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999999999999573	WITHOUT_CLASSIFICATION	4.264096220966184E-14	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.99999959537646	WITHOUT_CLASSIFICATION	4.0462354008572964E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.99999959537646	WITHOUT_CLASSIFICATION	4.0462354008572964E-7	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999976319374337	WITHOUT_CLASSIFICATION	2.3680625662365435E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999989680707283	WITHOUT_CLASSIFICATION	1.0319292716811947E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999989680707283	WITHOUT_CLASSIFICATION	1.0319292716811947E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999991831955318	WITHOUT_CLASSIFICATION	8.168044681299959E-7	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999991831955318	WITHOUT_CLASSIFICATION	8.168044681299959E-7	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999994770988654	WITHOUT_CLASSIFICATION	5.229011346223581E-7	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999978143342573	WITHOUT_CLASSIFICATION	2.1856657426482353E-6	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999983071955765	WITHOUT_CLASSIFICATION	1.6928044234927588E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999998642181267	WITHOUT_CLASSIFICATION	1.3578187326490136E-7	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.999999998584753	WITHOUT_CLASSIFICATION	1.4152470428634636E-9	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999990358727	WITHOUT_CLASSIFICATION	9.64127330825357E-10	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999999886236727	WITHOUT_CLASSIFICATION	1.1376327379567452E-8	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999988006834084	WITHOUT_CLASSIFICATION	1.1993165916659814E-6	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9994733391507543	WITHOUT_CLASSIFICATION	5.266608492457228E-4	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9994733391507543	WITHOUT_CLASSIFICATION	5.266608492457228E-4	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999911776457409	WITHOUT_CLASSIFICATION	8.822354259181998E-6	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999999178740963	WITHOUT_CLASSIFICATION	8.212590379402136E-8	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999999453673354	WITHOUT_CLASSIFICATION	5.463266453483583E-8	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999982439453	WITHOUT_CLASSIFICATION	1.7560547632687517E-9	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999950673598543	WITHOUT_CLASSIFICATION	4.932640145697349E-6	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999740910873	WITHOUT_CLASSIFICATION	2.5908912643288673E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999740910873	WITHOUT_CLASSIFICATION	2.5908912643288673E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999740910873	WITHOUT_CLASSIFICATION	2.5908912643288673E-8	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999997248209	WITHOUT_CLASSIFICATION	2.751790728705012E-10	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999997248209	WITHOUT_CLASSIFICATION	2.751790728705012E-10	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999956566242	WITHOUT_CLASSIFICATION	4.343375767670001E-9	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999999975507812	WITHOUT_CLASSIFICATION	2.449218709488975E-9	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999999975507812	WITHOUT_CLASSIFICATION	2.449218709488975E-9	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.999999979101481	WITHOUT_CLASSIFICATION	2.089851895648329E-8	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999999722895245	WITHOUT_CLASSIFICATION	2.771047544192902E-8	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999473257022673	WITHOUT_CLASSIFICATION	5.267429773268452E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999477202909332	WITHOUT_CLASSIFICATION	5.227970906691844E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999532949337744	WITHOUT_CLASSIFICATION	4.6705066225603847E-4	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999532949337744	WITHOUT_CLASSIFICATION	4.6705066225603847E-4	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909677793188	WITHOUT_CLASSIFICATION	9.032220681173972E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909677793188	WITHOUT_CLASSIFICATION	9.032220681173972E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909677793188	WITHOUT_CLASSIFICATION	9.032220681173972E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909677793188	WITHOUT_CLASSIFICATION	9.032220681173972E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909677793188	WITHOUT_CLASSIFICATION	9.032220681173972E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909677793188	WITHOUT_CLASSIFICATION	9.032220681173972E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909677793188	WITHOUT_CLASSIFICATION	9.032220681173972E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909677793188	WITHOUT_CLASSIFICATION	9.032220681173972E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909677793188	WITHOUT_CLASSIFICATION	9.032220681173972E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909677793188	WITHOUT_CLASSIFICATION	9.032220681173972E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909677793188	WITHOUT_CLASSIFICATION	9.032220681173972E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909677793188	WITHOUT_CLASSIFICATION	9.032220681173972E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998655300409562	WITHOUT_CLASSIFICATION	1.344699590437336E-4	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999298308874278	WITHOUT_CLASSIFICATION	7.016911257229366E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999900922224213	WITHOUT_CLASSIFICATION	9.90777757860612E-6	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999289343017764	WITHOUT_CLASSIFICATION	7.10656982235306E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999141072702994	WITHOUT_CLASSIFICATION	8.589272970055497E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999187693996873	WITHOUT_CLASSIFICATION	8.123060031269335E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878348973675	WITHOUT_CLASSIFICATION	1.2165102632413649E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878348973675	WITHOUT_CLASSIFICATION	1.2165102632413649E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878348973675	WITHOUT_CLASSIFICATION	1.2165102632413649E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878348973675	WITHOUT_CLASSIFICATION	1.2165102632413649E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999840759532681	WITHOUT_CLASSIFICATION	1.592404673191007E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999840759532681	WITHOUT_CLASSIFICATION	1.592404673191007E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999840759532681	WITHOUT_CLASSIFICATION	1.592404673191007E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999245473433171	WITHOUT_CLASSIFICATION	7.545265668285121E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999511158277268	WITHOUT_CLASSIFICATION	4.888417227309145E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999994358539212	WITHOUT_CLASSIFICATION	5.641460787961869E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999994358539212	WITHOUT_CLASSIFICATION	5.641460787961869E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999967609979086	WITHOUT_CLASSIFICATION	3.2390020913609227E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998702740237034	WITHOUT_CLASSIFICATION	1.2972597629660375E-4	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999003455648141	WITHOUT_CLASSIFICATION	9.965443518587705E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999876164080481	WITHOUT_CLASSIFICATION	1.238359195197184E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999374236436758	WITHOUT_CLASSIFICATION	6.257635632425942E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999581799718	WITHOUT_CLASSIFICATION	4.1820028202747734E-8	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9999968252449708	WITHOUT_CLASSIFICATION	3.1747550292230317E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9998324458695619	WITHOUT_CLASSIFICATION	1.675541304381918E-4	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999996950536669	WITHOUT_CLASSIFICATION	3.0494633309619777E-7	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999944102108093	WITHOUT_CLASSIFICATION	5.589789190715481E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9999995775786915	WITHOUT_CLASSIFICATION	4.224213085807999E-7	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9950095687941453	WITHOUT_CLASSIFICATION	0.004990431205854754	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.999999734281136	WITHOUT_CLASSIFICATION	2.657188640785915E-7	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999999267275766	WITHOUT_CLASSIFICATION	7.327242332212059E-8	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9999950179960767	WITHOUT_CLASSIFICATION	4.982003923395059E-6	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9999942500948004	WITHOUT_CLASSIFICATION	5.749905199563413E-6	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999993339107521	WITHOUT_CLASSIFICATION	6.660892478756623E-7	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999996028748785	WITHOUT_CLASSIFICATION	3.971251213984248E-7	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999996065270522	WITHOUT_CLASSIFICATION	3.934729477580202E-7	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999999864664942	WITHOUT_CLASSIFICATION	1.3533505825053666E-8	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9999984631663045	WITHOUT_CLASSIFICATION	1.5368336955849635E-6	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9999962376690766	WITHOUT_CLASSIFICATION	3.762330923446466E-6	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999966988179169	WITHOUT_CLASSIFICATION	3.301182083080216E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999581799718	WITHOUT_CLASSIFICATION	4.1820028202747734E-8	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999992506013553	WITHOUT_CLASSIFICATION	7.493986445855504E-7	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999992863402104	WITHOUT_CLASSIFICATION	7.136597897343469E-7	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999999191564474	WITHOUT_CLASSIFICATION	8.084355258633897E-8	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9999997103741193	WITHOUT_CLASSIFICATION	2.896258807998365E-7	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9999932538134941	WITHOUT_CLASSIFICATION	6.746186505766336E-6	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9999701137031868	WITHOUT_CLASSIFICATION	2.9886296813258272E-5	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9999629830645037	WITHOUT_CLASSIFICATION	3.7016935496256584E-5	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999998381443448	WITHOUT_CLASSIFICATION	1.618556551958899E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999975363719484	WITHOUT_CLASSIFICATION	2.4636280516053374E-6	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999709373935082	WITHOUT_CLASSIFICATION	2.9062606491803797E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999784719963	WITHOUT_CLASSIFICATION	2.1528003662910828E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998979850951	WITHOUT_CLASSIFICATION	1.0201490487803748E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995301441714	WITHOUT_CLASSIFICATION	4.6985582861924954E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999434289609	WITHOUT_CLASSIFICATION	5.657103908174705E-8	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999985794225194	WITHOUT_CLASSIFICATION	1.4205774806933122E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999116645855	WITHOUT_CLASSIFICATION	8.833541455648967E-8	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999999109552326	WITHOUT_CLASSIFICATION	8.904476748067377E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998255590047	WITHOUT_CLASSIFICATION	1.744409952148426E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995357486573	WITHOUT_CLASSIFICATION	4.642513426138678E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963192686054	WITHOUT_CLASSIFICATION	3.680731394590711E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997429564909	WITHOUT_CLASSIFICATION	2.570435091173942E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999997148946277	WITHOUT_CLASSIFICATION	2.8510537230859283E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999512158778	WITHOUT_CLASSIFICATION	4.8784122192126066E-8	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9999900015013605	WITHOUT_CLASSIFICATION	9.998498639591252E-6	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999986430909755	WITHOUT_CLASSIFICATION	1.356909024502054E-6	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.999999447529334	WITHOUT_CLASSIFICATION	5.524706660185593E-7	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999990235111467	WITHOUT_CLASSIFICATION	9.764888533808292E-7	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999958732571619	WITHOUT_CLASSIFICATION	4.126742838125917E-6	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999997338332874	WITHOUT_CLASSIFICATION	2.661667125785173E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9996734488828379	WITHOUT_CLASSIFICATION	3.26551117162127E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999976530553323	WITHOUT_CLASSIFICATION	2.3469446676874505E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9996734488828379	WITHOUT_CLASSIFICATION	3.26551117162127E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9999990938032998	WITHOUT_CLASSIFICATION	9.061967002412642E-7	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999998628222891	WITHOUT_CLASSIFICATION	1.371777108493757E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999984817870528	WITHOUT_CLASSIFICATION	1.518212947260679E-6	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9999424547496367	WITHOUT_CLASSIFICATION	5.7545250363287894E-5	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999998765803326	WITHOUT_CLASSIFICATION	1.2341966749229403E-7	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999998618216617	WITHOUT_CLASSIFICATION	1.3817833828462495E-7	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9999999976535642	WITHOUT_CLASSIFICATION	2.346435839899741E-9	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9999994217239779	WITHOUT_CLASSIFICATION	5.782760220840943E-7	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9950095687941453	WITHOUT_CLASSIFICATION	0.004990431205854754	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9999945550604419	WITHOUT_CLASSIFICATION	5.4449395581047685E-6	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.999996174954507	WITHOUT_CLASSIFICATION	3.82504549301428E-6	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.999999906814486	WITHOUT_CLASSIFICATION	9.318551394516243E-8	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999999975717987	WITHOUT_CLASSIFICATION	2.428201265631527E-9	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9999919714537802	WITHOUT_CLASSIFICATION	8.028546219829462E-6	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999956638486982	WITHOUT_CLASSIFICATION	4.336151301730243E-6	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9999885324424768	WITHOUT_CLASSIFICATION	1.146755752331356E-5	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999999672606589	WITHOUT_CLASSIFICATION	3.273934110596616E-8	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.999999974503724	WITHOUT_CLASSIFICATION	2.549627597829952E-8	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999994430122237	WITHOUT_CLASSIFICATION	5.56987776311288E-7	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.999999990686429	WITHOUT_CLASSIFICATION	9.313571027300484E-9	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9999890236685729	WITHOUT_CLASSIFICATION	1.0976331427121166E-5	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999989548221916	WITHOUT_CLASSIFICATION	1.0451778084063797E-6	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.999996497394614	WITHOUT_CLASSIFICATION	3.502605386067409E-6	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999992415251029	WITHOUT_CLASSIFICATION	7.584748969828922E-7	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999965172427521	WITHOUT_CLASSIFICATION	3.4827572480086108E-6	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.999999947034675	WITHOUT_CLASSIFICATION	5.296532493394707E-8	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999990763264079	WITHOUT_CLASSIFICATION	9.236735921230258E-7	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999630652823511	WITHOUT_CLASSIFICATION	3.693471764879162E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9999630652823511	WITHOUT_CLASSIFICATION	3.693471764879162E-5	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999949180098127	WITHOUT_CLASSIFICATION	5.081990187440516E-6	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9995936905118633	WITHOUT_CLASSIFICATION	4.0630948813671496E-4	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.9965391555627031	WITHOUT_CLASSIFICATION	0.00346084443729696	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.9999231865849101	WITHOUT_CLASSIFICATION	7.681341508986601E-5	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999782312894	WITHOUT_CLASSIFICATION	2.176871055052397E-8	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.999985361686462	WITHOUT_CLASSIFICATION	1.4638313538011366E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9993658039518072	WITHOUT_CLASSIFICATION	6.341960481927383E-4	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999999597528224	WITHOUT_CLASSIFICATION	4.02471776720939E-8	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999301614845	WITHOUT_CLASSIFICATION	6.98385156042665E-8	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999909290416364	WITHOUT_CLASSIFICATION	9.070958363620897E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999593375357739	WITHOUT_CLASSIFICATION	4.0662464226121436E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999969219778733	WITHOUT_CLASSIFICATION	3.0780221266711813E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.999990705708876	WITHOUT_CLASSIFICATION	9.294291123969259E-6	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.9999971304056146	WITHOUT_CLASSIFICATION	2.8695943854281835E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999387789601	WITHOUT_CLASSIFICATION	6.122103983601584E-8	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.9999982144679781	WITHOUT_CLASSIFICATION	1.7855320219878707E-6	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999763680243	WITHOUT_CLASSIFICATION	2.363197575285873E-8	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.999997169414949	WITHOUT_CLASSIFICATION	2.8305850510149736E-6	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999987715026278	WITHOUT_CLASSIFICATION	1.2284973722401446E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999782312894	WITHOUT_CLASSIFICATION	2.176871055052397E-8	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999763680243	WITHOUT_CLASSIFICATION	2.363197575285873E-8	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.9999999597528224	WITHOUT_CLASSIFICATION	4.02471776720939E-8	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999301614845	WITHOUT_CLASSIFICATION	6.98385156042665E-8	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999990763264079	WITHOUT_CLASSIFICATION	9.236735921230258E-7	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999999298498288	WITHOUT_CLASSIFICATION	7.015017125684304E-8	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999990763264079	WITHOUT_CLASSIFICATION	9.236735921230258E-7	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998505184227	WITHOUT_CLASSIFICATION	1.4948157729448163E-7	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9999995768409389	WITHOUT_CLASSIFICATION	4.231590611101336E-7	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999916105021	WITHOUT_CLASSIFICATION	8.389497983812555E-9	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999978709804	WITHOUT_CLASSIFICATION	2.1290196370154015E-9	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999924423539921	WITHOUT_CLASSIFICATION	7.557646007856889E-6	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999924423539921	WITHOUT_CLASSIFICATION	7.557646007856889E-6	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9999958854720156	WITHOUT_CLASSIFICATION	4.114527984358184E-6	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999305722596	WITHOUT_CLASSIFICATION	6.942774036936035E-8	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999987395926	WITHOUT_CLASSIFICATION	1.2604074016735383E-8	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999761567474	WITHOUT_CLASSIFICATION	2.3843252569684888E-8	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999850734882	WITHOUT_CLASSIFICATION	1.492651184486023E-8	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999999953356017	WITHOUT_CLASSIFICATION	4.6643982941965784E-8	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999899718478	WITHOUT_CLASSIFICATION	1.002815225900087E-8	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999839812697	WITHOUT_CLASSIFICATION	1.6018730317130548E-8	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999541251171	WITHOUT_CLASSIFICATION	4.587488285845426E-8	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999901371993	WITHOUT_CLASSIFICATION	9.862800748877702E-9	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999842453982	WITHOUT_CLASSIFICATION	1.5754601775383492E-8	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999940686225	WITHOUT_CLASSIFICATION	5.931377613540219E-9	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999577029305	WITHOUT_CLASSIFICATION	4.229706958316807E-8	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999929757015	WITHOUT_CLASSIFICATION	7.024298508255946E-9	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999887795537	WITHOUT_CLASSIFICATION	1.1220446276300834E-8	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999789891704	WITHOUT_CLASSIFICATION	2.1010829678552387E-8	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.99999999525383	WITHOUT_CLASSIFICATION	4.746169985433093E-9	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999955331257	WITHOUT_CLASSIFICATION	4.4668742827111485E-9	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999873492682	WITHOUT_CLASSIFICATION	1.2650731713197032E-8	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999336771883	WITHOUT_CLASSIFICATION	6.632281164909606E-8	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999850182333	WITHOUT_CLASSIFICATION	1.498176672961738E-8	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999760684846	WITHOUT_CLASSIFICATION	2.393151539859466E-8	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999924720463	WITHOUT_CLASSIFICATION	7.527953714326414E-9	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999999958533342	WITHOUT_CLASSIFICATION	4.146665810258272E-8	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999910849389	WITHOUT_CLASSIFICATION	8.915061133436288E-9	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999857592947	WITHOUT_CLASSIFICATION	1.4240705213069229E-8	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999406720596	WITHOUT_CLASSIFICATION	5.932794042798249E-8	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997517508058	WITHOUT_CLASSIFICATION	2.482491941425019E-7	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999724268603	WITHOUT_CLASSIFICATION	2.7573139662915764E-8	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999209165431	WITHOUT_CLASSIFICATION	7.908345692342217E-8	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9999419965424702	WITHOUT_CLASSIFICATION	5.800345752975147E-5	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997966117409	WITHOUT_CLASSIFICATION	2.0338825907581367E-7	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999742997523	WITHOUT_CLASSIFICATION	2.570024771727252E-8	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999957319453	WITHOUT_CLASSIFICATION	4.268054760831437E-9	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999931823115	WITHOUT_CLASSIFICATION	6.817688509505025E-9	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999846116914	WITHOUT_CLASSIFICATION	1.538830855044014E-8	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999990763264079	WITHOUT_CLASSIFICATION	9.236735921230258E-7	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999974444548	WITHOUT_CLASSIFICATION	2.555545134334012E-9	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999959178334	WITHOUT_CLASSIFICATION	4.082166629066451E-9	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999754367939	WITHOUT_CLASSIFICATION	2.4563206048254285E-8	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999994451378	WITHOUT_CLASSIFICATION	5.5486219914403086E-9	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999911367642	WITHOUT_CLASSIFICATION	8.863235943655524E-9	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999999849510846	WITHOUT_CLASSIFICATION	1.5048915421360934E-8	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999975008181	WITHOUT_CLASSIFICATION	2.4991819240639114E-9	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999945248941	WITHOUT_CLASSIFICATION	5.475105810148364E-9	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999999908104938	WITHOUT_CLASSIFICATION	9.189506196944877E-8	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999917205243	WITHOUT_CLASSIFICATION	8.279475680678284E-9	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.99999998703091	WITHOUT_CLASSIFICATION	1.2969089974076594E-8	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999999198687024	WITHOUT_CLASSIFICATION	8.013129762702233E-8	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999999850511918	WITHOUT_CLASSIFICATION	1.494880817137872E-8	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.999998028078854	WITHOUT_CLASSIFICATION	1.971921146061156E-6	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999999708731245	WITHOUT_CLASSIFICATION	2.9126875411149965E-8	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999999775345146	WITHOUT_CLASSIFICATION	2.2465485346433053E-8	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.9999580533179012	WITHOUT_CLASSIFICATION	4.1946682098755815E-5	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9999861343585937	WITHOUT_CLASSIFICATION	1.3865641406376058E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999994358539212	WITHOUT_CLASSIFICATION	5.641460787961869E-6	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999969219778733	WITHOUT_CLASSIFICATION	3.0780221266711813E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999999319878011	WITHOUT_CLASSIFICATION	6.801219885321767E-8	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.9999999917041802	WITHOUT_CLASSIFICATION	8.295819869793939E-9	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.999995552611777	WITHOUT_CLASSIFICATION	4.447388222964042E-6	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999961263579445	WITHOUT_CLASSIFICATION	3.8736420555027406E-6	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999999228082691	WITHOUT_CLASSIFICATION	7.71917309479104E-8	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999993909770922	WITHOUT_CLASSIFICATION	6.090229077075269E-7	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999998411989002	WITHOUT_CLASSIFICATION	1.5880109993693735E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999796661038	WITHOUT_CLASSIFICATION	2.0333896198580448E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999796661038	WITHOUT_CLASSIFICATION	2.0333896198580448E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999593375357739	WITHOUT_CLASSIFICATION	4.0662464226121436E-5	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999953146698374	WITHOUT_CLASSIFICATION	4.68533016261954E-6	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.9999999982264722	WITHOUT_CLASSIFICATION	1.7735277850393528E-9	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999965702785298	WITHOUT_CLASSIFICATION	3.4297214702199636E-6	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999964612909485	WITHOUT_CLASSIFICATION	3.5387090515156804E-6	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999964065075602	WITHOUT_CLASSIFICATION	3.593492439933297E-6	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999998325612268	WITHOUT_CLASSIFICATION	1.6743877319750157E-6	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999999877683217	WITHOUT_CLASSIFICATION	1.2231678216716624E-8	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999998258394366	WITHOUT_CLASSIFICATION	1.74160563461688E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999796661038	WITHOUT_CLASSIFICATION	2.0333896198580448E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989338882875	WITHOUT_CLASSIFICATION	1.0661117124204798E-6	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.9999998236879573	WITHOUT_CLASSIFICATION	1.763120427515668E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999994642630695	WITHOUT_CLASSIFICATION	5.357369305810826E-7	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999999863308875	WITHOUT_CLASSIFICATION	1.3669112464850324E-8	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999964978817254	WITHOUT_CLASSIFICATION	3.502118274533835E-6	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999997421329392	WITHOUT_CLASSIFICATION	2.578670608422351E-7	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.999999993347086	WITHOUT_CLASSIFICATION	6.6529139327088125E-9	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999994572306362	WITHOUT_CLASSIFICATION	5.427693637092276E-7	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999995857040308	WITHOUT_CLASSIFICATION	4.1429596923120917E-7	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.999996289328429	WITHOUT_CLASSIFICATION	3.7106715710004042E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999593375357739	WITHOUT_CLASSIFICATION	4.0662464226121436E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999796661038	WITHOUT_CLASSIFICATION	2.0333896198580448E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999994642630695	WITHOUT_CLASSIFICATION	5.357369305810826E-7	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999999863308875	WITHOUT_CLASSIFICATION	1.3669112464850324E-8	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999964978817254	WITHOUT_CLASSIFICATION	3.502118274533835E-6	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.999998972897234	WITHOUT_CLASSIFICATION	1.0271027660042497E-6	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9999868241078648	WITHOUT_CLASSIFICATION	1.3175892135304288E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.99999852450286	WITHOUT_CLASSIFICATION	1.4754971401017008E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999878035	WITHOUT_CLASSIFICATION	1.2196501001615471E-11	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999887294457847	WITHOUT_CLASSIFICATION	1.1270554215269938E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999887294457847	WITHOUT_CLASSIFICATION	1.1270554215269938E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999887294457847	WITHOUT_CLASSIFICATION	1.1270554215269938E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999995183715593	WITHOUT_CLASSIFICATION	4.816284406989866E-7	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999981533410293	WITHOUT_CLASSIFICATION	1.8466589706617344E-6	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999983343576906	WITHOUT_CLASSIFICATION	1.66564230940447E-6	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999997113068179	WITHOUT_CLASSIFICATION	2.886931822217806E-7	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.9999995617276518	WITHOUT_CLASSIFICATION	4.382723482033772E-7	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999999913211991	WITHOUT_CLASSIFICATION	8.678800886642359E-9	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999896697681834	WITHOUT_CLASSIFICATION	1.0330231816625775E-5	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999991096976535	WITHOUT_CLASSIFICATION	8.903023464694962E-7	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999922918745	WITHOUT_CLASSIFICATION	7.708125531265616E-9	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999999053248068	WITHOUT_CLASSIFICATION	9.467519317289404E-8	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9999949052168683	WITHOUT_CLASSIFICATION	5.094783131727098E-6	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999999993035694	WITHOUT_CLASSIFICATION	6.964305543317893E-10	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9999531367697153	WITHOUT_CLASSIFICATION	4.6863230284728686E-5	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999999955976688	WITHOUT_CLASSIFICATION	4.4023311180984595E-9	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999999181854425	WITHOUT_CLASSIFICATION	8.181455746974297E-8	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.9999989420928491	WITHOUT_CLASSIFICATION	1.0579071509528284E-6	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9992732895491304	WITHOUT_CLASSIFICATION	7.267104508695946E-4	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9984559773759154	WITHOUT_CLASSIFICATION	0.0015440226240845969	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999987640753519	WITHOUT_CLASSIFICATION	1.235924648081561E-6	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999973063426357	WITHOUT_CLASSIFICATION	2.6936573642212646E-6	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.999999895982445	WITHOUT_CLASSIFICATION	1.0401755503160333E-7	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999973033064349	WITHOUT_CLASSIFICATION	2.6966935651435943E-6	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999980711329611	WITHOUT_CLASSIFICATION	1.928867038907418E-6	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999999943240951	WITHOUT_CLASSIFICATION	5.675904826093512E-9	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999999840790429	WITHOUT_CLASSIFICATION	1.592095710339913E-8	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.9999943845317726	WITHOUT_CLASSIFICATION	5.615468227456657E-6	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999923361305182	WITHOUT_CLASSIFICATION	7.663869481719915E-6	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999995995994486	WITHOUT_CLASSIFICATION	4.0040055138648456E-7	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999997866436879	WITHOUT_CLASSIFICATION	2.1335631200770288E-7	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.999998975076721	WITHOUT_CLASSIFICATION	1.0249232790609533E-6	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999995281311271	WITHOUT_CLASSIFICATION	4.718688729077753E-7	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9999979811916786	WITHOUT_CLASSIFICATION	2.0188083212862608E-6	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.999999959527366	WITHOUT_CLASSIFICATION	4.047263395965604E-8	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9999430803176923	WITHOUT_CLASSIFICATION	5.69196823075925E-5	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9999853513536004	WITHOUT_CLASSIFICATION	1.464864639954995E-5	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9999998577561569	WITHOUT_CLASSIFICATION	1.4224384317260602E-7	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999992506013553	WITHOUT_CLASSIFICATION	7.493986445855504E-7	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9999391687608981	WITHOUT_CLASSIFICATION	6.0831239102037466E-5	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999999997698509	WITHOUT_CLASSIFICATION	2.3014915935919107E-10	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999997311286393	WITHOUT_CLASSIFICATION	2.688713607370542E-7	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.999999596724504	WITHOUT_CLASSIFICATION	4.032754960397734E-7	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999036720160905	WITHOUT_CLASSIFICATION	9.632798390943373E-5	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999417555622484	WITHOUT_CLASSIFICATION	5.824443775171249E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999036720160905	WITHOUT_CLASSIFICATION	9.632798390943373E-5	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999999218824238	WITHOUT_CLASSIFICATION	7.811757608829532E-8	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999987832159063	WITHOUT_CLASSIFICATION	1.2167840936624127E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999812267761143	WITHOUT_CLASSIFICATION	1.8773223885657868E-5	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999999047831919	WITHOUT_CLASSIFICATION	9.521680810368554E-8	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999999685894313	WITHOUT_CLASSIFICATION	3.1410568659601884E-8	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999999826379454	WITHOUT_CLASSIFICATION	1.7362054569883523E-8	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.9999969651968349	WITHOUT_CLASSIFICATION	3.0348031650785247E-6	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999998666346303	WITHOUT_CLASSIFICATION	1.3336536972516846E-7	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.9999998768756284	WITHOUT_CLASSIFICATION	1.231243716383245E-7	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999997794113165	WITHOUT_CLASSIFICATION	2.2058868345641392E-7	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999997704610022	WITHOUT_CLASSIFICATION	2.2953899775736378E-7	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.9999988510342994	WITHOUT_CLASSIFICATION	1.1489657006118835E-6	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999991110382282	WITHOUT_CLASSIFICATION	8.889617717253954E-7	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999999819279523	WITHOUT_CLASSIFICATION	1.8072047758025745E-8	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999990566289946	WITHOUT_CLASSIFICATION	9.433710055172068E-7	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999990358951147	WITHOUT_CLASSIFICATION	9.641048852679496E-7	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.999999996991409	WITHOUT_CLASSIFICATION	3.0085909030315166E-9	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9999968762225018	WITHOUT_CLASSIFICATION	3.123777498296171E-6	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999999543338819	WITHOUT_CLASSIFICATION	4.5666117999365934E-8	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999999048524622	WITHOUT_CLASSIFICATION	9.514753787647403E-8	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.999999990595518	WITHOUT_CLASSIFICATION	9.404482076488254E-9	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999996046836234	WITHOUT_CLASSIFICATION	3.953163766027482E-7	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999975241050044	WITHOUT_CLASSIFICATION	2.4758949955418953E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999996741659023	WITHOUT_CLASSIFICATION	3.25834097670336E-7	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999996905905916	WITHOUT_CLASSIFICATION	3.0940940844083055E-7	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.9999999233370745	WITHOUT_CLASSIFICATION	7.666292544204297E-8	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999999805220547	WITHOUT_CLASSIFICATION	1.9477945317016983E-8	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999997442388749	WITHOUT_CLASSIFICATION	2.557611251360734E-7	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9999854797444899	WITHOUT_CLASSIFICATION	1.4520255510155033E-5	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.999999955655	WITHOUT_CLASSIFICATION	4.4344999970174485E-8	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999989426487987	WITHOUT_CLASSIFICATION	1.0573512012181503E-6	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999992887791211	WITHOUT_CLASSIFICATION	7.112208789675422E-7	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999999996095814	WITHOUT_CLASSIFICATION	3.9041857115502245E-10	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.9999826099647514	WITHOUT_CLASSIFICATION	1.7390035248618333E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999994839783587	WITHOUT_CLASSIFICATION	5.16021641398159E-7	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999996327407437	WITHOUT_CLASSIFICATION	3.6725925624050063E-7	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999884907169	WITHOUT_CLASSIFICATION	1.1509283157027865E-8	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.999999132814936	WITHOUT_CLASSIFICATION	8.671850639708806E-7	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.9999997311286393	WITHOUT_CLASSIFICATION	2.688713607370542E-7	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999998746103139	WITHOUT_CLASSIFICATION	1.2538968603859086E-7	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999995938006211	WITHOUT_CLASSIFICATION	4.0619937884016657E-7	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999997226633399	WITHOUT_CLASSIFICATION	2.773366601168376E-7	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999999515257023	WITHOUT_CLASSIFICATION	4.8474297750949156E-8	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999417555622484	WITHOUT_CLASSIFICATION	5.824443775171249E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999922141441909	WITHOUT_CLASSIFICATION	7.7858558090454E-6	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999969531289232	WITHOUT_CLASSIFICATION	3.0468710768344885E-6	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999996881582606	WITHOUT_CLASSIFICATION	3.1184173950676126E-7	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999953463639929	WITHOUT_CLASSIFICATION	4.653636007088456E-6	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999999822889312	WITHOUT_CLASSIFICATION	1.7711068768191528E-8	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999967022908188	WITHOUT_CLASSIFICATION	3.2977091811312685E-6	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9999997427967793	WITHOUT_CLASSIFICATION	2.572032207061631E-7	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999970423251038	WITHOUT_CLASSIFICATION	2.957674896200319E-6	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999999306558973	WITHOUT_CLASSIFICATION	6.934410268982391E-8	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9999020448754896	WITHOUT_CLASSIFICATION	9.795512451042223E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999992863402104	WITHOUT_CLASSIFICATION	7.136597897343469E-7	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999975434376953	WITHOUT_CLASSIFICATION	2.4565623047360686E-6	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.999998942820349	WITHOUT_CLASSIFICATION	1.0571796510356976E-6	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9999994405788151	WITHOUT_CLASSIFICATION	5.594211848639808E-7	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999930098620281	WITHOUT_CLASSIFICATION	6.99013797183965E-6	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999999865217881	WITHOUT_CLASSIFICATION	1.3478211808300621E-8	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9999920249909373	WITHOUT_CLASSIFICATION	7.975009062761898E-6	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.9999999711948756	WITHOUT_CLASSIFICATION	2.8805124319712545E-8	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999988978638779	WITHOUT_CLASSIFICATION	1.1021361221978707E-6	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999999794433753	WITHOUT_CLASSIFICATION	2.0556624689691415E-8	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999995320140588	WITHOUT_CLASSIFICATION	4.679859411273025E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999988978638779	WITHOUT_CLASSIFICATION	1.1021361221978707E-6	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999999926419821	WITHOUT_CLASSIFICATION	7.3580179041114065E-9	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999974283927981	WITHOUT_CLASSIFICATION	2.571607201850893E-6	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999999660223343	WITHOUT_CLASSIFICATION	3.397766555325665E-8	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.999999782826705	WITHOUT_CLASSIFICATION	2.1717329491796742E-7	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.999999998516872	WITHOUT_CLASSIFICATION	1.4831280344594698E-9	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999999519793423	WITHOUT_CLASSIFICATION	4.80206576822726E-8	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999999960993451	WITHOUT_CLASSIFICATION	3.900654903788672E-9	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999999540323384	WITHOUT_CLASSIFICATION	4.5967661650215934E-8	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999994663693238	WITHOUT_CLASSIFICATION	5.336306761364041E-7	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.999999997370243	WITHOUT_CLASSIFICATION	2.629756913327996E-9	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999983679665334	WITHOUT_CLASSIFICATION	1.6320334666650207E-6	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999999942859958	WITHOUT_CLASSIFICATION	5.714004191532834E-9	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.999999999931304	WITHOUT_CLASSIFICATION	6.869598463324503E-11	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999999953187416	WITHOUT_CLASSIFICATION	4.681258437145076E-9	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999989688862004	WITHOUT_CLASSIFICATION	1.0311137995750089E-6	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999976038102855	WITHOUT_CLASSIFICATION	2.3961897146347574E-6	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999990816695206	WITHOUT_CLASSIFICATION	9.183304795253616E-7	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999999525887427	WITHOUT_CLASSIFICATION	4.741125721261754E-8	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999999624409288	WITHOUT_CLASSIFICATION	3.7559071111798236E-8	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.999999990838234	WITHOUT_CLASSIFICATION	9.161765962583214E-9	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999997108474467	WITHOUT_CLASSIFICATION	2.891525533108747E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999994358539212	WITHOUT_CLASSIFICATION	5.641460787961869E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999994358539212	WITHOUT_CLASSIFICATION	5.641460787961869E-6	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999984817870528	WITHOUT_CLASSIFICATION	1.518212947260679E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999796661038	WITHOUT_CLASSIFICATION	2.0333896198580448E-7	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.9999998821731876	WITHOUT_CLASSIFICATION	1.1782681241187817E-7	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999962428778	WITHOUT_CLASSIFICATION	3.75712211002878E-9	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999962428778	WITHOUT_CLASSIFICATION	3.75712211002878E-9	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999945368747	WITHOUT_CLASSIFICATION	5.46312522876856E-9	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9999999986286966	WITHOUT_CLASSIFICATION	1.371303349635939E-9	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9999999987819692	WITHOUT_CLASSIFICATION	1.2180307579004562E-9	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999999403642744	WITHOUT_CLASSIFICATION	5.963572552677135E-8	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999998615934675	WITHOUT_CLASSIFICATION	1.3840653241371527E-7	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.999968674874439	WITHOUT_CLASSIFICATION	3.132512556106466E-5	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.9999987005982218	WITHOUT_CLASSIFICATION	1.2994017781843223E-6	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.9999983308263778	WITHOUT_CLASSIFICATION	1.6691736222517489E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999999495998708	WITHOUT_CLASSIFICATION	5.040012922999291E-8	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999999495998708	WITHOUT_CLASSIFICATION	5.040012922999291E-8	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997520483394	WITHOUT_CLASSIFICATION	2.47951660720676E-7	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997520483394	WITHOUT_CLASSIFICATION	2.47951660720676E-7	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999898574044607	WITHOUT_CLASSIFICATION	1.0142595539365227E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999996802928447	WITHOUT_CLASSIFICATION	3.1970715526941053E-7	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999993850470755	WITHOUT_CLASSIFICATION	6.149529244842917E-7	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9999835188122478	WITHOUT_CLASSIFICATION	1.6481187752250623E-5	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999999935688003	WITHOUT_CLASSIFICATION	6.431199659913237E-9	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999999833429504	WITHOUT_CLASSIFICATION	1.6657049565604236E-8	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.999998591983766	WITHOUT_CLASSIFICATION	1.408016234083957E-6	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999974456595035	WITHOUT_CLASSIFICATION	2.554340496428152E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.999980953793414	WITHOUT_CLASSIFICATION	1.9046206586026792E-5	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999976801891818	WITHOUT_CLASSIFICATION	2.319810818197121E-6	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.9999999506303591	WITHOUT_CLASSIFICATION	4.9369640984498436E-8	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999999245955422	WITHOUT_CLASSIFICATION	7.540445783035911E-8	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999999245955422	WITHOUT_CLASSIFICATION	7.540445783035911E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999581799718	WITHOUT_CLASSIFICATION	4.1820028202747734E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999822046435	WITHOUT_CLASSIFICATION	1.7795356572360438E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999822046435	WITHOUT_CLASSIFICATION	1.7795356572360438E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999581799718	WITHOUT_CLASSIFICATION	4.1820028202747734E-8	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999995444131172	WITHOUT_CLASSIFICATION	4.5558688275610956E-7	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9998188525137617	WITHOUT_CLASSIFICATION	1.8114748623830002E-4	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.99999740266174	WITHOUT_CLASSIFICATION	2.5973382600666115E-6	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999848375779522	WITHOUT_CLASSIFICATION	1.5162422047763535E-5	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.9999952213312332	WITHOUT_CLASSIFICATION	4.778668766784548E-6	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999988989458448	WITHOUT_CLASSIFICATION	1.1010541551968705E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.999999926455675	WITHOUT_CLASSIFICATION	7.354432497860799E-8	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999998769276267	WITHOUT_CLASSIFICATION	1.2307237337726629E-7	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999998769276267	WITHOUT_CLASSIFICATION	1.2307237337726629E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999995791971551	WITHOUT_CLASSIFICATION	4.208028449024972E-7	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999995791971551	WITHOUT_CLASSIFICATION	4.208028449024972E-7	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999987760281391	WITHOUT_CLASSIFICATION	1.2239718608208391E-6	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999995312519059	WITHOUT_CLASSIFICATION	4.6874809406802366E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999966436022356	WITHOUT_CLASSIFICATION	3.356397764317818E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999966436022356	WITHOUT_CLASSIFICATION	3.356397764317818E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999966436022356	WITHOUT_CLASSIFICATION	3.356397764317818E-6	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.9999997061112605	WITHOUT_CLASSIFICATION	2.938887393610446E-7	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999999032174632	WITHOUT_CLASSIFICATION	9.678253678529283E-8	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999998918995611	WITHOUT_CLASSIFICATION	1.0810043897505207E-7	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999999764217884	WITHOUT_CLASSIFICATION	2.3578211555716303E-8	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999999533083794	WITHOUT_CLASSIFICATION	4.6691620548372204E-8	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.9999575204965284	WITHOUT_CLASSIFICATION	4.2479503471587884E-5	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999998834189041	WITHOUT_CLASSIFICATION	1.1658109588190829E-7	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.9999996070131589	WITHOUT_CLASSIFICATION	3.92986841026752E-7	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999999130814675	WITHOUT_CLASSIFICATION	8.691853249790932E-8	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999994061601631	WITHOUT_CLASSIFICATION	5.93839836753474E-7	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999855181408837	WITHOUT_CLASSIFICATION	1.4481859116384945E-5	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999999497300606	WITHOUT_CLASSIFICATION	5.026993952152166E-8	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999940083358	WITHOUT_CLASSIFICATION	5.991664191750316E-9	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9999999989736874	WITHOUT_CLASSIFICATION	1.0263126656066498E-9	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999999336577071	WITHOUT_CLASSIFICATION	6.634229288952904E-8	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999995701783708	WITHOUT_CLASSIFICATION	4.2982162917566563E-7	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999829972180037	WITHOUT_CLASSIFICATION	1.7002781996318642E-5	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9998811180412484	WITHOUT_CLASSIFICATION	1.188819587515258E-4	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999999977026341	WITHOUT_CLASSIFICATION	2.297365853200034E-9	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999999997415024	WITHOUT_CLASSIFICATION	2.584975906698052E-10	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999999988482536	WITHOUT_CLASSIFICATION	1.151746385389892E-9	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999995432420132	WITHOUT_CLASSIFICATION	4.5675798678668277E-7	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999994114485286	WITHOUT_CLASSIFICATION	5.885514714318746E-7	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.9999986217325996	WITHOUT_CLASSIFICATION	1.3782674003894428E-6	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.9999995396647613	WITHOUT_CLASSIFICATION	4.603352386979901E-7	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999998923058656	WITHOUT_CLASSIFICATION	1.0769413442777567E-7	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999988078915669	WITHOUT_CLASSIFICATION	1.192108433101365E-6	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999999922461004	WITHOUT_CLASSIFICATION	7.753899677805191E-9	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999951783284067	WITHOUT_CLASSIFICATION	4.82167159331655E-6	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999978312913671	WITHOUT_CLASSIFICATION	2.1687086329519702E-6	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999860575992	WITHOUT_CLASSIFICATION	1.3942400789047922E-8	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999942881571937	WITHOUT_CLASSIFICATION	5.711842806285097E-6	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999992585085616	WITHOUT_CLASSIFICATION	7.414914383772363E-7	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9999997813409346	WITHOUT_CLASSIFICATION	2.1865906535963486E-7	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.999983457860829	WITHOUT_CLASSIFICATION	1.6542139171086807E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999997992346983	WITHOUT_CLASSIFICATION	2.007653015668776E-7	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.9999998418743724	WITHOUT_CLASSIFICATION	1.581256276225555E-7	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999999462566171	WITHOUT_CLASSIFICATION	5.374338289023103E-8	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999999810638897	WITHOUT_CLASSIFICATION	1.8936110379183107E-8	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999937114468	WITHOUT_CLASSIFICATION	6.288553183412363E-9	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.999997102361801	WITHOUT_CLASSIFICATION	2.8976381989702363E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999929935369	WITHOUT_CLASSIFICATION	7.0064630811336335E-9	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999524243586535	WITHOUT_CLASSIFICATION	4.757564134661322E-5	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999999950636789	WITHOUT_CLASSIFICATION	4.93632114730215E-9	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.9999950325153811	WITHOUT_CLASSIFICATION	4.967484618794776E-6	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.99999989435935	WITHOUT_CLASSIFICATION	1.0564064988305352E-7	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999997310632546	WITHOUT_CLASSIFICATION	2.6893674543950054E-7	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999995733482289	WITHOUT_CLASSIFICATION	4.266517711607458E-7	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.999992135011717	WITHOUT_CLASSIFICATION	7.86498828292449E-6	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999945698391517	WITHOUT_CLASSIFICATION	5.430160848245815E-6	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999922614190622	WITHOUT_CLASSIFICATION	7.73858093776643E-6	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9999998627915133	WITHOUT_CLASSIFICATION	1.3720848657528358E-7	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999999820152634	WITHOUT_CLASSIFICATION	1.7984736566048875E-8	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999977418480438	WITHOUT_CLASSIFICATION	2.258151956135432E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.99999236931616	WITHOUT_CLASSIFICATION	7.630683839946646E-6	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9999328844892136	WITHOUT_CLASSIFICATION	6.711551078639109E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999524243586535	WITHOUT_CLASSIFICATION	4.757564134661322E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.9999524243586535	WITHOUT_CLASSIFICATION	4.757564134661322E-5	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999996691057128	WITHOUT_CLASSIFICATION	3.3089428723492915E-7	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999988196854251	WITHOUT_CLASSIFICATION	1.1803145749229092E-6	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999920004431	WITHOUT_CLASSIFICATION	7.99955692680552E-9	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999999202896247	WITHOUT_CLASSIFICATION	7.97103753047593E-8	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999999202896247	WITHOUT_CLASSIFICATION	7.97103753047593E-8	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999999952040151	WITHOUT_CLASSIFICATION	4.795984884478034E-9	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999999937253637	WITHOUT_CLASSIFICATION	6.2746362795868E-9	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.999999958547377	WITHOUT_CLASSIFICATION	4.1452622992537755E-8	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9995768120737805	WITHOUT_CLASSIFICATION	4.2318792621952984E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999208396418308	WITHOUT_CLASSIFICATION	7.916035816933819E-5	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.9999999998987478	WITHOUT_CLASSIFICATION	1.0125225449847432E-10	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.999999943156046	WITHOUT_CLASSIFICATION	5.684395397399356E-8	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999982514611508	WITHOUT_CLASSIFICATION	1.7485388491773277E-6	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9999464885453516	WITHOUT_CLASSIFICATION	5.3511454648339894E-5	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9999686682210882	WITHOUT_CLASSIFICATION	3.1331778911675165E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999999948450212	WITHOUT_CLASSIFICATION	5.154978738528876E-9	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999999976247199	WITHOUT_CLASSIFICATION	2.3752799831895067E-9	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999208396418308	WITHOUT_CLASSIFICATION	7.916035816933819E-5	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999495998708	WITHOUT_CLASSIFICATION	5.040012922999291E-8	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999495998708	WITHOUT_CLASSIFICATION	5.040012922999291E-8	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999991694246068	WITHOUT_CLASSIFICATION	8.305753933194908E-7	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999987637046759	WITHOUT_CLASSIFICATION	1.2362953241173311E-6	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999999758835385	WITHOUT_CLASSIFICATION	2.4116461426875208E-8	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999980003741086	WITHOUT_CLASSIFICATION	1.999625891385485E-6	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9999965253830424	WITHOUT_CLASSIFICATION	3.4746169576589698E-6	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999992816764909	WITHOUT_CLASSIFICATION	7.183235092392695E-7	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999992816764909	WITHOUT_CLASSIFICATION	7.183235092392695E-7	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999443842579946	WITHOUT_CLASSIFICATION	5.5615742005290695E-5	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9999904635241277	WITHOUT_CLASSIFICATION	9.53647587243677E-6	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.999999729436558	WITHOUT_CLASSIFICATION	2.7056344195154013E-7	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9999872752222043	WITHOUT_CLASSIFICATION	1.2724777795653217E-5	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9999925545974923	WITHOUT_CLASSIFICATION	7.445402507666009E-6	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999771418902633	WITHOUT_CLASSIFICATION	2.285810973668489E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999985431379996	WITHOUT_CLASSIFICATION	1.45686200035528E-6	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.9999920251329292	WITHOUT_CLASSIFICATION	7.974867070769711E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999784719963	WITHOUT_CLASSIFICATION	2.1528003662910828E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998979850951	WITHOUT_CLASSIFICATION	1.0201490487803748E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995301441714	WITHOUT_CLASSIFICATION	4.6985582861924954E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999434289609	WITHOUT_CLASSIFICATION	5.657103908174705E-8	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999985794225194	WITHOUT_CLASSIFICATION	1.4205774806933122E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999116645855	WITHOUT_CLASSIFICATION	8.833541455648967E-8	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999999109552326	WITHOUT_CLASSIFICATION	8.904476748067377E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998255590047	WITHOUT_CLASSIFICATION	1.744409952148426E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999957010054	WITHOUT_CLASSIFICATION	4.298994584694477E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995357486573	WITHOUT_CLASSIFICATION	4.642513426138678E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963192686054	WITHOUT_CLASSIFICATION	3.680731394590711E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997429564909	WITHOUT_CLASSIFICATION	2.570435091173942E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999997148946277	WITHOUT_CLASSIFICATION	2.8510537230859283E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999512158778	WITHOUT_CLASSIFICATION	4.8784122192126066E-8	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999999828090544	WITHOUT_CLASSIFICATION	1.719094553835062E-8	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999999237680984	WITHOUT_CLASSIFICATION	7.623190166314509E-8	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999999764203098	WITHOUT_CLASSIFICATION	2.3579690159100214E-8	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.9999998458811828	WITHOUT_CLASSIFICATION	1.5411881711436626E-7	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999993055633234	WITHOUT_CLASSIFICATION	6.944366765489155E-7	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999993603334871	WITHOUT_CLASSIFICATION	6.396665128622676E-7	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999999694974334	WITHOUT_CLASSIFICATION	3.0502566572839104E-8	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9999987228141733	WITHOUT_CLASSIFICATION	1.2771858267090454E-6	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999999315688156	WITHOUT_CLASSIFICATION	6.843118428762808E-8	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999994597814269	WITHOUT_CLASSIFICATION	5.402185730872721E-7	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999992155746344	WITHOUT_CLASSIFICATION	7.844253655333403E-7	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999992155746344	WITHOUT_CLASSIFICATION	7.844253655333403E-7	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999998897249269	WITHOUT_CLASSIFICATION	1.102750731074258E-7	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999998492709101	WITHOUT_CLASSIFICATION	1.5072908998017282E-7	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999990808839091	WITHOUT_CLASSIFICATION	9.191160908654081E-7	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999997233891293	WITHOUT_CLASSIFICATION	2.766108706304564E-7	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.9999997233891293	WITHOUT_CLASSIFICATION	2.766108706304564E-7	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999995776932145	WITHOUT_CLASSIFICATION	4.223067855544728E-7	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9999971344771041	WITHOUT_CLASSIFICATION	2.8655228959295624E-6	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999998421598485	WITHOUT_CLASSIFICATION	1.5784015153160763E-7	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9999990421220456	WITHOUT_CLASSIFICATION	9.578779543233703E-7	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999991893431843	WITHOUT_CLASSIFICATION	8.106568157058342E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999434289609	WITHOUT_CLASSIFICATION	5.657103908174705E-8	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998746161787	WITHOUT_CLASSIFICATION	1.2538382127536254E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999116645855	WITHOUT_CLASSIFICATION	8.833541455648967E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998255590047	WITHOUT_CLASSIFICATION	1.744409952148426E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963192686054	WITHOUT_CLASSIFICATION	3.680731394590711E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997429564909	WITHOUT_CLASSIFICATION	2.570435091173942E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999992449812223	WITHOUT_CLASSIFICATION	7.550187776545914E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999512158778	WITHOUT_CLASSIFICATION	4.8784122192126066E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999387789601	WITHOUT_CLASSIFICATION	6.122103983601584E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999822046435	WITHOUT_CLASSIFICATION	1.7795356572360438E-8	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999991447864779	WITHOUT_CLASSIFICATION	8.552135222291622E-7	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999990310532435	WITHOUT_CLASSIFICATION	9.689467565229113E-7	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999985146087087	WITHOUT_CLASSIFICATION	1.4853912913485185E-6	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9999989394659924	WITHOUT_CLASSIFICATION	1.060534007545507E-6	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9999989885704819	WITHOUT_CLASSIFICATION	1.0114295181361448E-6	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.9999998552293744	WITHOUT_CLASSIFICATION	1.447706255262638E-7	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9999863870394408	WITHOUT_CLASSIFICATION	1.3612960559221984E-5	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9999982121976317	WITHOUT_CLASSIFICATION	1.7878023683202458E-6	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999998878194752	WITHOUT_CLASSIFICATION	1.1218052475425524E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999998244971471	WITHOUT_CLASSIFICATION	1.7550285293634034E-7	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.9999998398899079	WITHOUT_CLASSIFICATION	1.6011009197453333E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999953880645692	WITHOUT_CLASSIFICATION	4.6119354307792E-6	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999976095778257	WITHOUT_CLASSIFICATION	2.3904221742913384E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999810540455722	WITHOUT_CLASSIFICATION	1.8945954427756035E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999998260243831	WITHOUT_CLASSIFICATION	1.7397561688069216E-7	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9999995915434686	WITHOUT_CLASSIFICATION	4.0845653136390034E-7	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9999806723784666	WITHOUT_CLASSIFICATION	1.93276215333729E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999982873847596	WITHOUT_CLASSIFICATION	1.712615240356207E-6	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999564162244866	WITHOUT_CLASSIFICATION	4.358377551343886E-5	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999564162244866	WITHOUT_CLASSIFICATION	4.358377551343886E-5	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999998846517396	WITHOUT_CLASSIFICATION	1.1534826039895303E-7	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999913085531439	WITHOUT_CLASSIFICATION	8.69144685619066E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.999999120393344	WITHOUT_CLASSIFICATION	8.796066559144635E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.999999120393344	WITHOUT_CLASSIFICATION	8.796066559144635E-7	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9999998123818448	WITHOUT_CLASSIFICATION	1.8761815518485415E-7	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999996246328392	WITHOUT_CLASSIFICATION	3.7536716080307133E-7	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.999999769451791	WITHOUT_CLASSIFICATION	2.3054820900444952E-7	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999999766192064	WITHOUT_CLASSIFICATION	2.338079361525391E-8	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999999739595398	WITHOUT_CLASSIFICATION	2.6040460268822176E-8	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.9999999564136062	WITHOUT_CLASSIFICATION	4.358639382433327E-8	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999999732747197	WITHOUT_CLASSIFICATION	2.672528040493813E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999554868463	WITHOUT_CLASSIFICATION	4.4513153684577886E-8	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999993863488086	WITHOUT_CLASSIFICATION	6.136511913325029E-7	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9999993901131671	WITHOUT_CLASSIFICATION	6.098868329631774E-7	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999436550198669	WITHOUT_CLASSIFICATION	5.634498013303366E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999810540455722	WITHOUT_CLASSIFICATION	1.8945954427756035E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.9999999910749684	WITHOUT_CLASSIFICATION	8.925031576899448E-9	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999593375357739	WITHOUT_CLASSIFICATION	4.0662464226121436E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999969219778733	WITHOUT_CLASSIFICATION	3.0780221266711813E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999868820598	WITHOUT_CLASSIFICATION	1.3117940136778954E-8	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.999921180130324	WITHOUT_CLASSIFICATION	7.881986967589779E-5	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999989692798529	WITHOUT_CLASSIFICATION	1.030720147125439E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999999896745326	WITHOUT_CLASSIFICATION	1.0325467352241589E-8	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997093647791333	WITHOUT_CLASSIFICATION	2.906352208666885E-4	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997093647791333	WITHOUT_CLASSIFICATION	2.906352208666885E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.999949835359545	WITHOUT_CLASSIFICATION	5.016464045495333E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999999346873821	WITHOUT_CLASSIFICATION	6.531261784074305E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999554868463	WITHOUT_CLASSIFICATION	4.4513153684577886E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999554868463	WITHOUT_CLASSIFICATION	4.4513153684577886E-8	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999995187524906	WITHOUT_CLASSIFICATION	4.812475093856716E-7	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9995532987555298	WITHOUT_CLASSIFICATION	4.46701244470164E-4	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9999981798481788	WITHOUT_CLASSIFICATION	1.820151821188536E-6	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9999931959123326	WITHOUT_CLASSIFICATION	6.804087667415155E-6	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999988606607468	WITHOUT_CLASSIFICATION	1.1393392531096857E-6	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.9999986818411913	WITHOUT_CLASSIFICATION	1.3181588087473423E-6	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999898574593418	WITHOUT_CLASSIFICATION	1.0142540658229055E-5	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999998593834466	WITHOUT_CLASSIFICATION	1.40616553352295E-7	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999998139397724	WITHOUT_CLASSIFICATION	1.860602275589879E-7	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9999995832091121	WITHOUT_CLASSIFICATION	4.1679088779521206E-7	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999999726223988	WITHOUT_CLASSIFICATION	2.737760119969035E-8	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999947244603256	WITHOUT_CLASSIFICATION	5.27553967443428E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999947244603256	WITHOUT_CLASSIFICATION	5.27553967443428E-6	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999999097539384	WITHOUT_CLASSIFICATION	9.024606161223166E-8	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.999999061283402	WITHOUT_CLASSIFICATION	9.387165980502256E-7	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.999999061283402	WITHOUT_CLASSIFICATION	9.387165980502256E-7	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999992818303153	WITHOUT_CLASSIFICATION	7.181696846244659E-7	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.9999992818303153	WITHOUT_CLASSIFICATION	7.181696846244659E-7	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999796920643302	WITHOUT_CLASSIFICATION	2.030793566984626E-5	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999954331213	WITHOUT_CLASSIFICATION	4.566878661218624E-9	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999954331213	WITHOUT_CLASSIFICATION	4.566878661218624E-9	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999998897025955	WITHOUT_CLASSIFICATION	1.1029740451089498E-7	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999998616316769	WITHOUT_CLASSIFICATION	1.383683231113685E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999909290416364	WITHOUT_CLASSIFICATION	9.070958363620897E-6	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999991435285385	WITHOUT_CLASSIFICATION	8.564714614908123E-7	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999647131632	WITHOUT_CLASSIFICATION	3.52868368181534E-8	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9999990240530262	WITHOUT_CLASSIFICATION	9.759469737069683E-7	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9997415154526884	WITHOUT_CLASSIFICATION	2.584845473116026E-4	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999903196468316	WITHOUT_CLASSIFICATION	9.680353168397129E-6	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.9999997654936715	WITHOUT_CLASSIFICATION	2.3450632841130736E-7	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.999999815308279	WITHOUT_CLASSIFICATION	1.8469172105723403E-7	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.999999702572673	WITHOUT_CLASSIFICATION	2.9742732709274246E-7	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.999999994037059	WITHOUT_CLASSIFICATION	5.962940971681803E-9	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999459627513934	WITHOUT_CLASSIFICATION	5.40372486066894E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999998616316769	WITHOUT_CLASSIFICATION	1.383683231113685E-7	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999998582688139	WITHOUT_CLASSIFICATION	1.4173118613052195E-7	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.9999999902731045	WITHOUT_CLASSIFICATION	9.726895486410726E-9	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999999517363323	WITHOUT_CLASSIFICATION	4.826366773021189E-8	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999860802167244	WITHOUT_CLASSIFICATION	1.3919783275532176E-5	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999999964924454	WITHOUT_CLASSIFICATION	3.5075546032785483E-9	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999969082830324	WITHOUT_CLASSIFICATION	3.091716967564587E-6	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9999948937381122	WITHOUT_CLASSIFICATION	5.106261887730482E-6	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999999768233906	WITHOUT_CLASSIFICATION	2.3176609369962664E-8	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999998031731439	WITHOUT_CLASSIFICATION	1.9682685620589436E-7	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9999971687608424	WITHOUT_CLASSIFICATION	2.8312391575651507E-6	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9999990768024543	WITHOUT_CLASSIFICATION	9.231975457946818E-7	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9999827435900882	WITHOUT_CLASSIFICATION	1.7256409911796535E-5	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999998466645063	WITHOUT_CLASSIFICATION	1.533354937939324E-7	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999629630736747	WITHOUT_CLASSIFICATION	3.7036926325223507E-5	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9999997962709162	WITHOUT_CLASSIFICATION	2.0372908389233848E-7	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.9999988446941527	WITHOUT_CLASSIFICATION	1.1553058473305725E-6	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.9999987817557092	WITHOUT_CLASSIFICATION	1.2182442908048469E-6	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.999999553805973	WITHOUT_CLASSIFICATION	4.46194026939177E-7	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999999724458879	WITHOUT_CLASSIFICATION	2.755411216230195E-8	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999996805181363	WITHOUT_CLASSIFICATION	3.194818637088204E-7	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.9999999542336993	WITHOUT_CLASSIFICATION	4.576630064046111E-8	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9999776996785713	WITHOUT_CLASSIFICATION	2.2300321428751118E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.999999802743728	WITHOUT_CLASSIFICATION	1.972562720390426E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.99998913134423	WITHOUT_CLASSIFICATION	1.0868655770057082E-5	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.9926623526015854	WITHOUT_CLASSIFICATION	0.007337647398414608	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.999999970999044	WITHOUT_CLASSIFICATION	2.9000955973262725E-8	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999981360259707	WITHOUT_CLASSIFICATION	1.8639740293093426E-6	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.9999990742255251	WITHOUT_CLASSIFICATION	9.257744749072437E-7	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999933785688181	WITHOUT_CLASSIFICATION	6.621431181895883E-6	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9991736850807527	WITHOUT_CLASSIFICATION	8.263149192474325E-4	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999896019059568	WITHOUT_CLASSIFICATION	1.0398094043196574E-5	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.999999845540162	WITHOUT_CLASSIFICATION	1.54459838012574E-7	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999998630803815	WITHOUT_CLASSIFICATION	1.36919618622924E-7	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.9999998529786986	WITHOUT_CLASSIFICATION	1.4702130128551713E-7	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999935067451959	WITHOUT_CLASSIFICATION	6.493254804112274E-6	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9998503508913391	WITHOUT_CLASSIFICATION	1.4964910866093544E-4	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999999167078583	WITHOUT_CLASSIFICATION	8.329214180483306E-8	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.99998913134423	WITHOUT_CLASSIFICATION	1.0868655770057082E-5	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999703257835	WITHOUT_CLASSIFICATION	2.9674216504401705E-8	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999999818641947	WITHOUT_CLASSIFICATION	1.8135805332627603E-8	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999999818641947	WITHOUT_CLASSIFICATION	1.8135805332627603E-8	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999997700061162	WITHOUT_CLASSIFICATION	2.29993883931484E-7	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999997700061162	WITHOUT_CLASSIFICATION	2.29993883931484E-7	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9989573790720966	WITHOUT_CLASSIFICATION	0.0010426209279034138	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999999418012235	WITHOUT_CLASSIFICATION	5.819877647573783E-8	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999998626929002	WITHOUT_CLASSIFICATION	1.3730709981438487E-7	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999989614040945	WITHOUT_CLASSIFICATION	1.0385959055742745E-6	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9999928475435139	WITHOUT_CLASSIFICATION	7.152456486098101E-6	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9998629229573616	WITHOUT_CLASSIFICATION	1.370770426384625E-4	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999623038713663	WITHOUT_CLASSIFICATION	3.769612863374889E-5	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999997558700949	WITHOUT_CLASSIFICATION	2.4412990503551496E-7	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999999882350358	WITHOUT_CLASSIFICATION	1.176496420128234E-8	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999954297051	WITHOUT_CLASSIFICATION	4.570294924113002E-9	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9999952653353578	WITHOUT_CLASSIFICATION	4.734664642310908E-6	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.999998432777861	WITHOUT_CLASSIFICATION	1.5672221388758853E-6	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999999526113759	WITHOUT_CLASSIFICATION	4.738862418728891E-8	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9999999185968639	WITHOUT_CLASSIFICATION	8.140313604340927E-8	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9999998871962511	WITHOUT_CLASSIFICATION	1.1280374888852296E-7	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9999880572065706	WITHOUT_CLASSIFICATION	1.194279342934685E-5	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999996534284921	WITHOUT_CLASSIFICATION	3.465715078637515E-7	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999868820598	WITHOUT_CLASSIFICATION	1.3117940136778954E-8	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.999999444842397	WITHOUT_CLASSIFICATION	5.551576029440751E-7	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999999433059662	WITHOUT_CLASSIFICATION	5.669403377400554E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999387789601	WITHOUT_CLASSIFICATION	6.122103983601584E-8	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999999433059662	WITHOUT_CLASSIFICATION	5.669403377400554E-8	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9999950775721831	WITHOUT_CLASSIFICATION	4.922427816995595E-6	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999896988488244	WITHOUT_CLASSIFICATION	1.0301151175571607E-5	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9999374627910925	WITHOUT_CLASSIFICATION	6.253720890750855E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999999596151787	WITHOUT_CLASSIFICATION	4.038482127510701E-8	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999995327385762	WITHOUT_CLASSIFICATION	4.672614237319076E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999399027210101	WITHOUT_CLASSIFICATION	6.009727898984207E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999399027210101	WITHOUT_CLASSIFICATION	6.009727898984207E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.999996509046355	WITHOUT_CLASSIFICATION	3.490953645081155E-6	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9999916161708965	WITHOUT_CLASSIFICATION	8.383829103397209E-6	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999999969180673	WITHOUT_CLASSIFICATION	3.081932726131265E-9	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999999607891537	WITHOUT_CLASSIFICATION	3.921084629291367E-8	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999999627635316	WITHOUT_CLASSIFICATION	3.7236468324786956E-8	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9999971213804542	WITHOUT_CLASSIFICATION	2.8786195457614385E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999995327385762	WITHOUT_CLASSIFICATION	4.672614237319076E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999399027210101	WITHOUT_CLASSIFICATION	6.009727898984207E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999399027210101	WITHOUT_CLASSIFICATION	6.009727898984207E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.999996509046355	WITHOUT_CLASSIFICATION	3.490953645081155E-6	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999999978706002	WITHOUT_CLASSIFICATION	2.129399769533461E-9	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999999563825986	WITHOUT_CLASSIFICATION	4.3617401386133784E-8	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9999994577852782	WITHOUT_CLASSIFICATION	5.4221472185455E-7	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999977402541994	WITHOUT_CLASSIFICATION	2.2597458004989234E-6	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999908333478398	WITHOUT_CLASSIFICATION	9.166652160297718E-6	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.9999256759930516	WITHOUT_CLASSIFICATION	7.432400694846181E-5	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999998368980169	WITHOUT_CLASSIFICATION	1.6310198310973496E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999924525216756	WITHOUT_CLASSIFICATION	7.547478324487215E-6	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999924525216756	WITHOUT_CLASSIFICATION	7.547478324487215E-6	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999775533428926	WITHOUT_CLASSIFICATION	2.2446657107368953E-5	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9999988710345303	WITHOUT_CLASSIFICATION	1.128965469668486E-6	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999992052546033	WITHOUT_CLASSIFICATION	7.947453966963885E-7	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9951917011951188	WITHOUT_CLASSIFICATION	0.004808298804881174	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999991952400642	WITHOUT_CLASSIFICATION	8.04759935849829E-7	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9999966508306425	WITHOUT_CLASSIFICATION	3.349169357572178E-6	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999306004431088	WITHOUT_CLASSIFICATION	6.939955689118637E-5	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999998277321086	WITHOUT_CLASSIFICATION	1.7226789143784432E-7	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9978880791123305	WITHOUT_CLASSIFICATION	0.002111920887669489	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9999901831120466	WITHOUT_CLASSIFICATION	9.816887953455383E-6	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999999492152591	WITHOUT_CLASSIFICATION	5.0784740952936356E-8	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999839195598363	WITHOUT_CLASSIFICATION	1.608044016368081E-5	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999998144860881	WITHOUT_CLASSIFICATION	1.8551391189943691E-7	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9980743397462829	WITHOUT_CLASSIFICATION	0.0019256602537170043	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.9999996089470454	WITHOUT_CLASSIFICATION	3.910529545621129E-7	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999992598410945	WITHOUT_CLASSIFICATION	7.401589054842044E-7	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9998791729537774	WITHOUT_CLASSIFICATION	1.2082704622266113E-4	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.9999979846595126	WITHOUT_CLASSIFICATION	2.015340487425475E-6	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999981128742231	WITHOUT_CLASSIFICATION	1.8871257769139594E-6	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999994926784369	WITHOUT_CLASSIFICATION	5.073215631733362E-7	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999932137539927	WITHOUT_CLASSIFICATION	6.786246007376087E-6	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999998998291454	WITHOUT_CLASSIFICATION	1.0017085464692821E-7	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.999998628000664	WITHOUT_CLASSIFICATION	1.3719993360526436E-6	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9999917342416841	WITHOUT_CLASSIFICATION	8.265758315962364E-6	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999998724280204	WITHOUT_CLASSIFICATION	1.2757197959471785E-7	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999998350835687	WITHOUT_CLASSIFICATION	1.6491643138226408E-7	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999997806183902	WITHOUT_CLASSIFICATION	2.1938160979102997E-7	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9999938759949168	WITHOUT_CLASSIFICATION	6.124005083126968E-6	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999999903390161	WITHOUT_CLASSIFICATION	9.66098393669099E-9	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.9999999676132721	WITHOUT_CLASSIFICATION	3.2386727863190187E-8	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999995339049393	WITHOUT_CLASSIFICATION	4.660950605643557E-7	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999992384515417	WITHOUT_CLASSIFICATION	7.615484583967428E-7	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9999983663600283	WITHOUT_CLASSIFICATION	1.633639971833377E-6	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999998812375804	WITHOUT_CLASSIFICATION	1.1876241952954863E-7	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999988599523708	WITHOUT_CLASSIFICATION	1.1400476292047372E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999988599523708	WITHOUT_CLASSIFICATION	1.1400476292047372E-6	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.9999976389592358	WITHOUT_CLASSIFICATION	2.3610407641272243E-6	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999980240942554	WITHOUT_CLASSIFICATION	1.9759057446259773E-6	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.9999986465838606	WITHOUT_CLASSIFICATION	1.3534161393869865E-6	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999991744998661	WITHOUT_CLASSIFICATION	8.255001339880725E-7	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999991222883361	WITHOUT_CLASSIFICATION	8.777116638904876E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999581799718	WITHOUT_CLASSIFICATION	4.1820028202747734E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.999999996559674	WITHOUT_CLASSIFICATION	3.440326018254302E-9	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999839517050717	WITHOUT_CLASSIFICATION	1.604829492831227E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999773147105416	WITHOUT_CLASSIFICATION	2.2685289458440724E-5	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9992890435081603	WITHOUT_CLASSIFICATION	7.109564918398081E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999990364407529	WITHOUT_CLASSIFICATION	9.635592470830732E-7	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999999822905595	WITHOUT_CLASSIFICATION	1.7709440473082805E-8	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9999218114952511	WITHOUT_CLASSIFICATION	7.818850474888031E-5	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9998675644027605	WITHOUT_CLASSIFICATION	1.3243559723960277E-4	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9994762707577499	WITHOUT_CLASSIFICATION	5.237292422501947E-4	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.969676449945003	WITHOUT_CLASSIFICATION	0.030323550054997008	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999811947446752	WITHOUT_CLASSIFICATION	1.8805255324798613E-5	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.999998683785608	WITHOUT_CLASSIFICATION	1.3162143919858328E-6	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9999995326993909	WITHOUT_CLASSIFICATION	4.673006090018074E-7	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.999999481083228	WITHOUT_CLASSIFICATION	5.189167720648073E-7	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999999373607927	WITHOUT_CLASSIFICATION	6.263920731870781E-8	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999999817871763	WITHOUT_CLASSIFICATION	1.8212823616498666E-8	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.999999708976731	WITHOUT_CLASSIFICATION	2.91023268946868E-7	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999479476437005	WITHOUT_CLASSIFICATION	5.205235629944328E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.9999999996002357	WITHOUT_CLASSIFICATION	3.997643827617077E-10	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999999988800607	WITHOUT_CLASSIFICATION	1.1199392102496455E-9	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999995704647808	WITHOUT_CLASSIFICATION	4.2953521916102805E-7	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999999268760639	WITHOUT_CLASSIFICATION	7.31239361339207E-8	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999987461919411	WITHOUT_CLASSIFICATION	1.2538080588889754E-6	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999812709469821	WITHOUT_CLASSIFICATION	1.8729053017897435E-5	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999789277059713	WITHOUT_CLASSIFICATION	2.1072294028746484E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.9999953959548792	WITHOUT_CLASSIFICATION	4.604045120722353E-6	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999989378719205	WITHOUT_CLASSIFICATION	1.0621280795638623E-6	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999997854219291	WITHOUT_CLASSIFICATION	2.145780708796787E-7	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999986995015514	WITHOUT_CLASSIFICATION	1.3004984485904971E-6	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9998278529841228	WITHOUT_CLASSIFICATION	1.721470158772022E-4	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999956935636856	WITHOUT_CLASSIFICATION	4.306436314427344E-6	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9999965876437917	WITHOUT_CLASSIFICATION	3.4123562083382953E-6	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999962905368152	WITHOUT_CLASSIFICATION	3.7094631849411308E-6	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9999999622414095	WITHOUT_CLASSIFICATION	3.775859046853471E-8	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999361277359686	WITHOUT_CLASSIFICATION	6.387226403135823E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999999919755004	WITHOUT_CLASSIFICATION	8.024499578979389E-9	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9999999826996788	WITHOUT_CLASSIFICATION	1.7300321199217225E-8	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999998476873923	WITHOUT_CLASSIFICATION	1.5231260773814038E-7	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999993273171158	WITHOUT_CLASSIFICATION	6.726828841089024E-7	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9999825798310219	WITHOUT_CLASSIFICATION	1.742016897805118E-5	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999998875866392	WITHOUT_CLASSIFICATION	1.1241336094187738E-7	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9999999997287404	WITHOUT_CLASSIFICATION	2.7125963277757805E-10	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999998875866392	WITHOUT_CLASSIFICATION	1.1241336094187738E-7	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999826335751434	WITHOUT_CLASSIFICATION	1.7366424856600783E-5	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9983011110192752	WITHOUT_CLASSIFICATION	0.0016988889807248535	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999999922126819	WITHOUT_CLASSIFICATION	7.787318158995075E-9	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999999568451818	WITHOUT_CLASSIFICATION	4.315481823730733E-8	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999993157854472	WITHOUT_CLASSIFICATION	6.842145528652495E-7	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999999998066912	WITHOUT_CLASSIFICATION	1.9330882802857146E-10	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999997837433661	WITHOUT_CLASSIFICATION	2.1625663389406754E-7	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9998635288218264	WITHOUT_CLASSIFICATION	1.3647117817359547E-4	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9999188473305562	WITHOUT_CLASSIFICATION	8.115266944375047E-5	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9999989664699788	WITHOUT_CLASSIFICATION	1.0335300212575525E-6	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9999997009896672	WITHOUT_CLASSIFICATION	2.990103327843589E-7	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999999226743554	WITHOUT_CLASSIFICATION	7.7325644507965E-8	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999989006689585	WITHOUT_CLASSIFICATION	1.0993310415008826E-6	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9986765211640171	WITHOUT_CLASSIFICATION	0.0013234788359828829	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9999774777341129	WITHOUT_CLASSIFICATION	2.2522265887038243E-5	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999694217893981	WITHOUT_CLASSIFICATION	3.057821060194505E-5	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999427015981635	WITHOUT_CLASSIFICATION	5.7298401836568915E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9995558182787188	WITHOUT_CLASSIFICATION	4.4418172128135114E-4	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999993713481892	WITHOUT_CLASSIFICATION	6.286518108532924E-7	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999986654629974	WITHOUT_CLASSIFICATION	1.334537002627963E-6	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999999218964377	WITHOUT_CLASSIFICATION	7.810356230746876E-8	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999990219394909	WITHOUT_CLASSIFICATION	9.780605091202844E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998834329714	WITHOUT_CLASSIFICATION	1.1656702863317452E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999997837433661	WITHOUT_CLASSIFICATION	2.1625663389406754E-7	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999995280361743	WITHOUT_CLASSIFICATION	4.71963825573903E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999997279532719	WITHOUT_CLASSIFICATION	2.7204672809096196E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999997279532719	WITHOUT_CLASSIFICATION	2.7204672809096196E-7	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999999299459613	WITHOUT_CLASSIFICATION	7.005403865638974E-8	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999999002855662	WITHOUT_CLASSIFICATION	9.971443378490799E-8	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999999002855662	WITHOUT_CLASSIFICATION	9.971443378490799E-8	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999913979292364	WITHOUT_CLASSIFICATION	8.602070763520884E-6	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999913979292364	WITHOUT_CLASSIFICATION	8.602070763520884E-6	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.9444933491583081	WITHOUT_CLASSIFICATION	0.05550665084169195	DEFECT
// record node's attributes	WITHOUT_CLASSIFICATION	0.999999970259785	WITHOUT_CLASSIFICATION	2.9740215052321254E-8	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999976005047	WITHOUT_CLASSIFICATION	2.3994953035565267E-9	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.9999986708005012	WITHOUT_CLASSIFICATION	1.3291994988638768E-6	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.9999999373511247	WITHOUT_CLASSIFICATION	6.264887532763818E-8	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999981179169539	WITHOUT_CLASSIFICATION	1.8820830459844615E-6	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.99982138838544	WITHOUT_CLASSIFICATION	1.7861161455993564E-4	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999986235492228	WITHOUT_CLASSIFICATION	1.376450777328152E-6	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999999944850705	WITHOUT_CLASSIFICATION	5.514929580771685E-9	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9999998017385671	WITHOUT_CLASSIFICATION	1.9826143288241678E-7	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999999749064404	WITHOUT_CLASSIFICATION	2.5093559566323007E-8	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.999998824767526	WITHOUT_CLASSIFICATION	1.1752324739991534E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.9999999976198156	WITHOUT_CLASSIFICATION	2.3801844695061903E-9	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999999732079738	WITHOUT_CLASSIFICATION	2.6792026186565195E-8	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9999997018801431	WITHOUT_CLASSIFICATION	2.9811985680428053E-7	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999987123120305	WITHOUT_CLASSIFICATION	1.2876879694359501E-6	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.999999671816716	WITHOUT_CLASSIFICATION	3.28183283998837E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.999999547345194	WITHOUT_CLASSIFICATION	4.5265480589250076E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.999999547345194	WITHOUT_CLASSIFICATION	4.5265480589250076E-7	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999999547702799	WITHOUT_CLASSIFICATION	4.5229720168482336E-8	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.9989830760010466	WITHOUT_CLASSIFICATION	0.0010169239989533342	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999999559163034	WITHOUT_CLASSIFICATION	4.408369661177913E-8	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9999978061083538	WITHOUT_CLASSIFICATION	2.1938916462419688E-6	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.999999704760182	WITHOUT_CLASSIFICATION	2.9523981801850525E-7	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999797723255043	WITHOUT_CLASSIFICATION	2.0227674495697913E-5	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999970763203536	WITHOUT_CLASSIFICATION	2.9236796464119076E-6	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999980744068124	WITHOUT_CLASSIFICATION	1.9255931875274823E-6	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.9999996479044553	WITHOUT_CLASSIFICATION	3.520955447249717E-7	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999990842282533	WITHOUT_CLASSIFICATION	9.15771746660949E-7	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.9999999999421759	WITHOUT_CLASSIFICATION	5.7824020764133037E-11	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999998747017599	WITHOUT_CLASSIFICATION	1.2529824023091964E-7	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999998722813958	WITHOUT_CLASSIFICATION	1.2771860417554673E-7	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.9999999759945308	WITHOUT_CLASSIFICATION	2.4005469137428E-8	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9999993987245461	WITHOUT_CLASSIFICATION	6.012754538527171E-7	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999998628711259	WITHOUT_CLASSIFICATION	1.3712887408945926E-7	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999933588969049	WITHOUT_CLASSIFICATION	6.6411030951651085E-6	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999796166547686	WITHOUT_CLASSIFICATION	2.038334523135189E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9999835141623831	WITHOUT_CLASSIFICATION	1.648583761695091E-5	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999946978329289	WITHOUT_CLASSIFICATION	5.302167070992112E-6	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9999963330755066	WITHOUT_CLASSIFICATION	3.6669244933257924E-6	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999975610364514	WITHOUT_CLASSIFICATION	2.4389635485498622E-6	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.99999797057927	WITHOUT_CLASSIFICATION	2.0294207300168077E-6	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999998338366907	WITHOUT_CLASSIFICATION	1.6616330935485388E-7	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999999951910483	WITHOUT_CLASSIFICATION	4.808951698018472E-9	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999999982156956	WITHOUT_CLASSIFICATION	1.7843042810546368E-9	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999998457498231	WITHOUT_CLASSIFICATION	1.5425017679235858E-7	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999999958195264	WITHOUT_CLASSIFICATION	4.180473561485949E-9	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999961455644937	WITHOUT_CLASSIFICATION	3.8544355063435826E-6	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9999875953903454	WITHOUT_CLASSIFICATION	1.2404609654462024E-5	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.99999998504682	WITHOUT_CLASSIFICATION	1.4953180000157644E-8	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999998440172267	WITHOUT_CLASSIFICATION	1.5598277329890792E-7	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999990125159466	WITHOUT_CLASSIFICATION	9.874840534723769E-7	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999989399015832	WITHOUT_CLASSIFICATION	1.0600984168346095E-6	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9999952021123529	WITHOUT_CLASSIFICATION	4.797887647129533E-6	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.999993628945454	WITHOUT_CLASSIFICATION	6.371054546015057E-6	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9998428820338122	WITHOUT_CLASSIFICATION	1.5711796618771034E-4	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.9999903118513467	WITHOUT_CLASSIFICATION	9.688148653303501E-6	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999997932400203	WITHOUT_CLASSIFICATION	2.0675997976415642E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.9999998699146114	WITHOUT_CLASSIFICATION	1.3008538865362856E-7	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999995401688341	WITHOUT_CLASSIFICATION	4.598311658568847E-7	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999999119852547	WITHOUT_CLASSIFICATION	8.801474523306626E-8	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999999811252002	WITHOUT_CLASSIFICATION	1.887479988829863E-8	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999998105729053	WITHOUT_CLASSIFICATION	1.8942709458463584E-7	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9989044381716402	WITHOUT_CLASSIFICATION	0.0010955618283598047	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999999162951674	WITHOUT_CLASSIFICATION	8.370483267342519E-8	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999989065627932	WITHOUT_CLASSIFICATION	1.0934372067942014E-6	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999998105729053	WITHOUT_CLASSIFICATION	1.8942709458463584E-7	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.9999556415588633	WITHOUT_CLASSIFICATION	4.435844113677091E-5	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999987561834864	WITHOUT_CLASSIFICATION	1.2438165136071663E-6	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999999236535376	WITHOUT_CLASSIFICATION	7.634646240594484E-8	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9999850150373423	WITHOUT_CLASSIFICATION	1.4984962657804127E-5	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999979795547048	WITHOUT_CLASSIFICATION	2.020445295149813E-6	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9989044381716402	WITHOUT_CLASSIFICATION	0.0010955618283598047	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9999989065627932	WITHOUT_CLASSIFICATION	1.0934372067942014E-6	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999995568614279	WITHOUT_CLASSIFICATION	4.431385719813879E-7	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999998900565679	WITHOUT_CLASSIFICATION	1.0994343213347744E-7	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999995599237146	WITHOUT_CLASSIFICATION	4.400762853643766E-7	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999999856670015	WITHOUT_CLASSIFICATION	1.4332998422294851E-8	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997843048460051	WITHOUT_CLASSIFICATION	2.1569515399491585E-4	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999848711955516	WITHOUT_CLASSIFICATION	1.5128804448465427E-5	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9982080190141747	WITHOUT_CLASSIFICATION	0.0017919809858253021	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999997763461098	WITHOUT_CLASSIFICATION	2.2365389019759706E-7	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999979745552801	WITHOUT_CLASSIFICATION	2.0254447200164482E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999979745552801	WITHOUT_CLASSIFICATION	2.0254447200164482E-6	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.9999995874373111	WITHOUT_CLASSIFICATION	4.1256268895834773E-7	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999901474908658	WITHOUT_CLASSIFICATION	9.852509134167553E-6	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999993879835745	WITHOUT_CLASSIFICATION	6.120164255671306E-7	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999956328257618	WITHOUT_CLASSIFICATION	4.367174238180098E-6	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999784719963	WITHOUT_CLASSIFICATION	2.1528003662910828E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998979850951	WITHOUT_CLASSIFICATION	1.0201490487803748E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995301441714	WITHOUT_CLASSIFICATION	4.6985582861924954E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995301441714	WITHOUT_CLASSIFICATION	4.6985582861924954E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999434289609	WITHOUT_CLASSIFICATION	5.657103908174705E-8	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998746161787	WITHOUT_CLASSIFICATION	1.2538382127536254E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998746161787	WITHOUT_CLASSIFICATION	1.2538382127536254E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999985794225194	WITHOUT_CLASSIFICATION	1.4205774806933122E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999116645855	WITHOUT_CLASSIFICATION	8.833541455648967E-8	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999116645855	WITHOUT_CLASSIFICATION	8.833541455648967E-8	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.9999999109552326	WITHOUT_CLASSIFICATION	8.904476748067377E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998255590047	WITHOUT_CLASSIFICATION	1.744409952148426E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999957010054	WITHOUT_CLASSIFICATION	4.298994584694477E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995357486573	WITHOUT_CLASSIFICATION	4.642513426138678E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963192686054	WITHOUT_CLASSIFICATION	3.680731394590711E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997429564909	WITHOUT_CLASSIFICATION	2.570435091173942E-7	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999997148946277	WITHOUT_CLASSIFICATION	2.8510537230859283E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999512158778	WITHOUT_CLASSIFICATION	4.8784122192126066E-8	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999998878194752	WITHOUT_CLASSIFICATION	1.1218052475425524E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999998244971471	WITHOUT_CLASSIFICATION	1.7550285293634034E-7	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9999969999047968	WITHOUT_CLASSIFICATION	3.0000952030975608E-6	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9998788375941388	WITHOUT_CLASSIFICATION	1.2116240586131208E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999932712730486	WITHOUT_CLASSIFICATION	6.7287269514040894E-6	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999970091716089	WITHOUT_CLASSIFICATION	2.9908283909231885E-6	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9999898770737856	WITHOUT_CLASSIFICATION	1.0122926214385617E-5	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999999996383552	WITHOUT_CLASSIFICATION	3.6164483314472326E-10	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999999994871672	WITHOUT_CLASSIFICATION	5.128327405434048E-10	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999999999244751	WITHOUT_CLASSIFICATION	7.552500751399323E-11	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999931430832615	WITHOUT_CLASSIFICATION	6.856916738553472E-6	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9999964070368228	WITHOUT_CLASSIFICATION	3.5929631771496083E-6	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999996293703869	WITHOUT_CLASSIFICATION	3.70629613100655E-7	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9999960058554659	WITHOUT_CLASSIFICATION	3.994144534126554E-6	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9999941232885349	WITHOUT_CLASSIFICATION	5.876711465141426E-6	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999996535519176	WITHOUT_CLASSIFICATION	3.4644808252053066E-7	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.999986007655581	WITHOUT_CLASSIFICATION	1.399234441906955E-5	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999923121974845	WITHOUT_CLASSIFICATION	7.687802515554735E-6	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999926408802422	WITHOUT_CLASSIFICATION	7.359119757787201E-6	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9999975674748806	WITHOUT_CLASSIFICATION	2.4325251195108856E-6	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999922371602443	WITHOUT_CLASSIFICATION	7.762839755629039E-6	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999948630553458	WITHOUT_CLASSIFICATION	5.136944654104934E-6	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.999999969077191	WITHOUT_CLASSIFICATION	3.092280902256581E-8	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9999835980075115	WITHOUT_CLASSIFICATION	1.6401992488539515E-5	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9999478810493775	WITHOUT_CLASSIFICATION	5.211895062254361E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998255590047	WITHOUT_CLASSIFICATION	1.744409952148426E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999957010054	WITHOUT_CLASSIFICATION	4.298994584694477E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995357486573	WITHOUT_CLASSIFICATION	4.642513426138678E-7	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997429564909	WITHOUT_CLASSIFICATION	2.570435091173942E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999992449812223	WITHOUT_CLASSIFICATION	7.550187776545914E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999512158778	WITHOUT_CLASSIFICATION	4.8784122192126066E-8	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999998878194752	WITHOUT_CLASSIFICATION	1.1218052475425524E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999998244971471	WITHOUT_CLASSIFICATION	1.7550285293634034E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999924525216756	WITHOUT_CLASSIFICATION	7.547478324487215E-6	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.9999119063743181	WITHOUT_CLASSIFICATION	8.809362568185749E-5	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999906349417224	WITHOUT_CLASSIFICATION	9.365058277638353E-6	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9998656533299185	WITHOUT_CLASSIFICATION	1.3434667008149577E-4	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999415525654443	WITHOUT_CLASSIFICATION	5.8447434555655645E-5	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9999990824214756	WITHOUT_CLASSIFICATION	9.175785243380572E-7	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.999999934375161	WITHOUT_CLASSIFICATION	6.562483897279402E-8	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.999999934375161	WITHOUT_CLASSIFICATION	6.562483897279402E-8	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999752791362518	WITHOUT_CLASSIFICATION	2.4720863748209042E-5	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.999983062881688	WITHOUT_CLASSIFICATION	1.69371183119782E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.999948613995617	WITHOUT_CLASSIFICATION	5.1386004383082024E-5	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999998336315998	WITHOUT_CLASSIFICATION	1.6636840019104965E-7	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999998336315998	WITHOUT_CLASSIFICATION	1.6636840019104965E-7	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999967830234586	WITHOUT_CLASSIFICATION	3.2169765413447418E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999967830234586	WITHOUT_CLASSIFICATION	3.2169765413447418E-6	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.9999998919428529	WITHOUT_CLASSIFICATION	1.0805714711914133E-7	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999999614155652	WITHOUT_CLASSIFICATION	3.8584434657272595E-8	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.9999999677866173	WITHOUT_CLASSIFICATION	3.22133827363329E-8	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999999991800265	WITHOUT_CLASSIFICATION	8.199736584920832E-10	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.9999885717993343	WITHOUT_CLASSIFICATION	1.142820066577596E-5	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999855381750992	WITHOUT_CLASSIFICATION	1.4461824900751363E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.999989552912244	WITHOUT_CLASSIFICATION	1.0447087755956293E-5	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999481215773863	WITHOUT_CLASSIFICATION	5.187842261379986E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999949889259286	WITHOUT_CLASSIFICATION	5.011074071339421E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999945566835843	WITHOUT_CLASSIFICATION	5.4433164157373904E-6	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9999945566835843	WITHOUT_CLASSIFICATION	5.4433164157373904E-6	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9872533984965862	WITHOUT_CLASSIFICATION	0.012746601503413689	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999589352919083	WITHOUT_CLASSIFICATION	4.1064708091752407E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999589352919083	WITHOUT_CLASSIFICATION	4.1064708091752407E-5	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9999589352919083	WITHOUT_CLASSIFICATION	4.1064708091752407E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.999830836579226	WITHOUT_CLASSIFICATION	1.6916342077390675E-4	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.999830836579226	WITHOUT_CLASSIFICATION	1.6916342077390675E-4	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.99999964280841	WITHOUT_CLASSIFICATION	3.5719159003504454E-7	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.99999964280841	WITHOUT_CLASSIFICATION	3.5719159003504454E-7	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.99999964280841	WITHOUT_CLASSIFICATION	3.5719159003504454E-7	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999997177941969	WITHOUT_CLASSIFICATION	2.822058030205354E-7	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999997177941969	WITHOUT_CLASSIFICATION	2.822058030205354E-7	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999997177941969	WITHOUT_CLASSIFICATION	2.822058030205354E-7	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999985429021	WITHOUT_CLASSIFICATION	1.4570979960357732E-9	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999985429021	WITHOUT_CLASSIFICATION	1.4570979960357732E-9	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999997960134789	WITHOUT_CLASSIFICATION	2.0398652103297583E-7	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999997960134789	WITHOUT_CLASSIFICATION	2.0398652103297583E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999995966800088	WITHOUT_CLASSIFICATION	4.033199911965846E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999995966800088	WITHOUT_CLASSIFICATION	4.033199911965846E-7	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999890699043	WITHOUT_CLASSIFICATION	1.0930095802878638E-8	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999890699043	WITHOUT_CLASSIFICATION	1.0930095802878638E-8	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999120113886	WITHOUT_CLASSIFICATION	8.798861135826665E-8	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999120113886	WITHOUT_CLASSIFICATION	8.798861135826665E-8	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999820563187028	WITHOUT_CLASSIFICATION	1.794368129714477E-5	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999820563187028	WITHOUT_CLASSIFICATION	1.794368129714477E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999995760075296	WITHOUT_CLASSIFICATION	4.239924704220506E-7	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999995760075296	WITHOUT_CLASSIFICATION	4.239924704220506E-7	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.9999999985429021	WITHOUT_CLASSIFICATION	1.4570979960357732E-9	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999997960134789	WITHOUT_CLASSIFICATION	2.0398652103297583E-7	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999995966800088	WITHOUT_CLASSIFICATION	4.033199911965846E-7	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999999120113886	WITHOUT_CLASSIFICATION	8.798861135826665E-8	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999820563187028	WITHOUT_CLASSIFICATION	1.794368129714477E-5	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999995760075296	WITHOUT_CLASSIFICATION	4.239924704220506E-7	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9999974778614227	WITHOUT_CLASSIFICATION	2.5221385774117025E-6	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9999987824982871	WITHOUT_CLASSIFICATION	1.217501712958972E-6	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9999981902052569	WITHOUT_CLASSIFICATION	1.809794743141977E-6	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9994759046768227	WITHOUT_CLASSIFICATION	5.240953231774331E-4	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.999997856189916	WITHOUT_CLASSIFICATION	2.1438100839833087E-6	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9999983926158607	WITHOUT_CLASSIFICATION	1.6073841393122426E-6	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999996934705998	WITHOUT_CLASSIFICATION	3.065294002558995E-7	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9999994186646672	WITHOUT_CLASSIFICATION	5.813353327877871E-7	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999910061294951	WITHOUT_CLASSIFICATION	8.993870504907409E-6	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999999414484684	WITHOUT_CLASSIFICATION	5.8551531641394596E-8	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.999999683603484	WITHOUT_CLASSIFICATION	3.163965160060926E-7	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9999999629159178	WITHOUT_CLASSIFICATION	3.7084082165170084E-8	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999994924531623	WITHOUT_CLASSIFICATION	5.07546837611428E-7	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.9999999608423455	WITHOUT_CLASSIFICATION	3.915765457083245E-8	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.999999510298891	WITHOUT_CLASSIFICATION	4.897011090750751E-7	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999984583317523	WITHOUT_CLASSIFICATION	1.5416682477059178E-6	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999936479214894	WITHOUT_CLASSIFICATION	6.35207851061227E-6	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999940485076672	WITHOUT_CLASSIFICATION	5.951492332805191E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999991260556375	WITHOUT_CLASSIFICATION	8.739443624847949E-7	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.9999853751807839	WITHOUT_CLASSIFICATION	1.4624819216136546E-5	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.999999977090478	WITHOUT_CLASSIFICATION	2.2909521923013107E-8	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999986981961119	WITHOUT_CLASSIFICATION	1.3018038881539649E-6	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999999195587881	WITHOUT_CLASSIFICATION	8.044121197283456E-8	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999996561180985	WITHOUT_CLASSIFICATION	3.438819014725571E-7	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999927238002786	WITHOUT_CLASSIFICATION	7.276199721373559E-6	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.999991737149673	WITHOUT_CLASSIFICATION	8.262850327000208E-6	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999923097283313	WITHOUT_CLASSIFICATION	7.690271668739478E-6	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9999999453076218	WITHOUT_CLASSIFICATION	5.4692378106012684E-8	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999946393258321	WITHOUT_CLASSIFICATION	5.360674167893961E-6	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999993711884558	WITHOUT_CLASSIFICATION	6.28811544080439E-7	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9999997878783228	WITHOUT_CLASSIFICATION	2.121216772183052E-7	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999838602686988	WITHOUT_CLASSIFICATION	1.6139731301300037E-5	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999983916669221	WITHOUT_CLASSIFICATION	1.6083330780234792E-6	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999983916669221	WITHOUT_CLASSIFICATION	1.6083330780234792E-6	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9999998636943463	WITHOUT_CLASSIFICATION	1.363056535724871E-7	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.9999976575410836	WITHOUT_CLASSIFICATION	2.3424589164165565E-6	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9999893597842401	WITHOUT_CLASSIFICATION	1.0640215759870983E-5	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.9999994085507725	WITHOUT_CLASSIFICATION	5.91449227418909E-7	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999999866417623	WITHOUT_CLASSIFICATION	1.3358237849705388E-8	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.999999895119428	WITHOUT_CLASSIFICATION	1.0488057201130177E-7	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.99999947303206	WITHOUT_CLASSIFICATION	5.269679400309146E-7	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999378188599688	WITHOUT_CLASSIFICATION	6.218114003122222E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9999994417034148	WITHOUT_CLASSIFICATION	5.582965852584697E-7	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.9999897960815806	WITHOUT_CLASSIFICATION	1.0203918419468098E-5	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9999956345509665	WITHOUT_CLASSIFICATION	4.3654490334481355E-6	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9999997022488868	WITHOUT_CLASSIFICATION	2.9775111325111397E-7	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999978436281441	WITHOUT_CLASSIFICATION	2.156371855797755E-6	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999978436281441	WITHOUT_CLASSIFICATION	2.156371855797755E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999951324159415	WITHOUT_CLASSIFICATION	4.867584058518251E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999951324159415	WITHOUT_CLASSIFICATION	4.867584058518251E-6	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999951324159415	WITHOUT_CLASSIFICATION	4.867584058518251E-6	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999617462932275	WITHOUT_CLASSIFICATION	3.825370677247276E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999935955058636	WITHOUT_CLASSIFICATION	6.404494136334372E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999985553686304	WITHOUT_CLASSIFICATION	1.4446313696518718E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999985553686304	WITHOUT_CLASSIFICATION	1.4446313696518718E-6	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9999988724968771	WITHOUT_CLASSIFICATION	1.1275031229306615E-6	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999233900373459	WITHOUT_CLASSIFICATION	7.660996265410312E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999996740214131	WITHOUT_CLASSIFICATION	3.2597858690183345E-7	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999921656347285	WITHOUT_CLASSIFICATION	7.834365271454097E-6	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.999999770518488	WITHOUT_CLASSIFICATION	2.2948151193237317E-7	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999962580272989	WITHOUT_CLASSIFICATION	3.7419727011885134E-6	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999897774183852	WITHOUT_CLASSIFICATION	1.0222581614809153E-5	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999999713724146	WITHOUT_CLASSIFICATION	2.8627585384128816E-8	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.9999997160629838	WITHOUT_CLASSIFICATION	2.83937016212875E-7	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9998882694876264	WITHOUT_CLASSIFICATION	1.1173051237347532E-4	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999997926833233	WITHOUT_CLASSIFICATION	2.0731667667457896E-7	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999979729049853	WITHOUT_CLASSIFICATION	2.0270950147895986E-6	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999999450945076	WITHOUT_CLASSIFICATION	5.4905492424010134E-8	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.9999992984343562	WITHOUT_CLASSIFICATION	7.015656437776804E-7	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999945744645314	WITHOUT_CLASSIFICATION	5.4255354684747496E-6	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999987681388952	WITHOUT_CLASSIFICATION	1.2318611047771338E-6	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999999671707989	WITHOUT_CLASSIFICATION	3.2829201041939986E-8	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999965031583846	WITHOUT_CLASSIFICATION	3.496841615401812E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999956260944125	WITHOUT_CLASSIFICATION	4.37390558752922E-6	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9999724990869545	WITHOUT_CLASSIFICATION	2.7500913045431732E-5	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999901537507192	WITHOUT_CLASSIFICATION	9.846249280824742E-6	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999990758786664	WITHOUT_CLASSIFICATION	9.241213337173917E-7	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9924594041965231	WITHOUT_CLASSIFICATION	0.007540595803476988	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999998443969014	WITHOUT_CLASSIFICATION	1.5560309861008586E-7	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999998443969014	WITHOUT_CLASSIFICATION	1.5560309861008586E-7	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999998443969014	WITHOUT_CLASSIFICATION	1.5560309861008586E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999997252072127	WITHOUT_CLASSIFICATION	2.747927873249943E-7	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999997252072127	WITHOUT_CLASSIFICATION	2.747927873249943E-7	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9999683107758659	WITHOUT_CLASSIFICATION	3.168922413411654E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.999748167163215	WITHOUT_CLASSIFICATION	2.518328367848765E-4	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.999748167163215	WITHOUT_CLASSIFICATION	2.518328367848765E-4	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999966056336149	WITHOUT_CLASSIFICATION	3.3943663851328783E-6	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9999982321601443	WITHOUT_CLASSIFICATION	1.7678398557867717E-6	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9999683107758659	WITHOUT_CLASSIFICATION	3.168922413411654E-5	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999999868718209	WITHOUT_CLASSIFICATION	1.3128179070530178E-8	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999683107758659	WITHOUT_CLASSIFICATION	3.168922413411654E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999975546084415	WITHOUT_CLASSIFICATION	2.445391558355262E-6	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999975546084415	WITHOUT_CLASSIFICATION	2.445391558355262E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999978436281441	WITHOUT_CLASSIFICATION	2.156371855797755E-6	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9998687465102949	WITHOUT_CLASSIFICATION	1.3125348970507883E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9994479851114298	WITHOUT_CLASSIFICATION	5.520148885700729E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.9990659041449279	WITHOUT_CLASSIFICATION	9.340958550721076E-4	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9990949969425321	WITHOUT_CLASSIFICATION	9.050030574679407E-4	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9995906266715023	WITHOUT_CLASSIFICATION	4.0937332849766384E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9984760300421605	WITHOUT_CLASSIFICATION	0.0015239699578395664	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9986519925768528	WITHOUT_CLASSIFICATION	0.0013480074231472226	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9992042739968504	WITHOUT_CLASSIFICATION	7.957260031496758E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9991599713724195	WITHOUT_CLASSIFICATION	8.400286275805033E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9993111100910157	WITHOUT_CLASSIFICATION	6.888899089842688E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9994994448819678	WITHOUT_CLASSIFICATION	5.005551180320871E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.999264974555172	WITHOUT_CLASSIFICATION	7.350254448278891E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9992804806771991	WITHOUT_CLASSIFICATION	7.195193228007817E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.99899477479125	WITHOUT_CLASSIFICATION	0.001005225208750012	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9987821866084647	WITHOUT_CLASSIFICATION	0.0012178133915351974	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.9993387439618318	WITHOUT_CLASSIFICATION	6.612560381682968E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.999232027436485	WITHOUT_CLASSIFICATION	7.679725635149204E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9982578385499156	WITHOUT_CLASSIFICATION	0.001742161450084522	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9988877026241582	WITHOUT_CLASSIFICATION	0.001112297375841871	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9995316450478887	WITHOUT_CLASSIFICATION	4.683549521112747E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9997038426042366	WITHOUT_CLASSIFICATION	2.9615739576333363E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9993063263331033	WITHOUT_CLASSIFICATION	6.936736668966208E-4	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.9992639204425264	WITHOUT_CLASSIFICATION	7.360795574736395E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.999525123035118	WITHOUT_CLASSIFICATION	4.748769648819509E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.9992569521756933	WITHOUT_CLASSIFICATION	7.430478243067195E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9989931641741341	WITHOUT_CLASSIFICATION	0.0010068358258659815	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9995189628210462	WITHOUT_CLASSIFICATION	4.8103717895370626E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9984589021418065	WITHOUT_CLASSIFICATION	0.0015410978581934804	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9994628920806365	WITHOUT_CLASSIFICATION	5.371079193634356E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9992334049467484	WITHOUT_CLASSIFICATION	7.66595053251586E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.999518409763554	WITHOUT_CLASSIFICATION	4.8159023644593624E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.9992598703948149	WITHOUT_CLASSIFICATION	7.401296051850317E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9992131391397036	WITHOUT_CLASSIFICATION	7.868608602964402E-4	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9994135396072087	WITHOUT_CLASSIFICATION	5.864603927913459E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9993384097273111	WITHOUT_CLASSIFICATION	6.615902726889299E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9990226392141549	WITHOUT_CLASSIFICATION	9.773607858450778E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9994444844720994	WITHOUT_CLASSIFICATION	5.555155279004824E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9989206273397299	WITHOUT_CLASSIFICATION	0.001079372660270068	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9991967714069221	WITHOUT_CLASSIFICATION	8.032285930780008E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9992985329932024	WITHOUT_CLASSIFICATION	7.0146700679769E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9985479791881615	WITHOUT_CLASSIFICATION	0.001452020811838479	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9991618804095579	WITHOUT_CLASSIFICATION	8.381195904421064E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9991196319827513	WITHOUT_CLASSIFICATION	8.803680172486567E-4	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9990731274119062	WITHOUT_CLASSIFICATION	9.268725880936245E-4	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9993898218942909	WITHOUT_CLASSIFICATION	6.101781057089926E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9987517701832638	WITHOUT_CLASSIFICATION	0.0012482298167362067	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9987425322532621	WITHOUT_CLASSIFICATION	0.0012574677467378243	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9990522833490036	WITHOUT_CLASSIFICATION	9.477166509962269E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9974564851663816	WITHOUT_CLASSIFICATION	0.002543514833618325	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9990272347118991	WITHOUT_CLASSIFICATION	9.727652881007641E-4	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9994071982009108	WITHOUT_CLASSIFICATION	5.928017990890854E-4	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9989337896801288	WITHOUT_CLASSIFICATION	0.0010662103198711686	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9990893724377838	WITHOUT_CLASSIFICATION	9.106275622162406E-4	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.999469759340632	WITHOUT_CLASSIFICATION	5.302406593681268E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9994437990321551	WITHOUT_CLASSIFICATION	5.562009678448119E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9992147705257588	WITHOUT_CLASSIFICATION	7.85229474241232E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9996865773559724	WITHOUT_CLASSIFICATION	3.134226440275274E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.998902878600491	WITHOUT_CLASSIFICATION	0.0010971213995090456	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9985257977813131	WITHOUT_CLASSIFICATION	0.0014742022186868399	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9993802455293043	WITHOUT_CLASSIFICATION	6.19754470695822E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9971463030123826	WITHOUT_CLASSIFICATION	0.002853696987617438	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9993178765980975	WITHOUT_CLASSIFICATION	6.821234019026075E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9996375087835045	WITHOUT_CLASSIFICATION	3.624912164953724E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.999304792774966	WITHOUT_CLASSIFICATION	6.952072250341131E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9992911743411442	WITHOUT_CLASSIFICATION	7.088256588556477E-4	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9987006244736423	WITHOUT_CLASSIFICATION	0.0012993755263577369	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9985757604018255	WITHOUT_CLASSIFICATION	0.001424239598174428	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9993265404469924	WITHOUT_CLASSIFICATION	6.73459553007592E-4	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9996251311415614	WITHOUT_CLASSIFICATION	3.7486885843856046E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9993132947228585	WITHOUT_CLASSIFICATION	6.867052771415726E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9994693123088995	WITHOUT_CLASSIFICATION	5.306876911006219E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9996251124062895	WITHOUT_CLASSIFICATION	3.7488759371049897E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9990484537318135	WITHOUT_CLASSIFICATION	9.515462681864466E-4	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9994451407261953	WITHOUT_CLASSIFICATION	5.548592738047203E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9994100466290039	WITHOUT_CLASSIFICATION	5.899533709960163E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9990137394671489	WITHOUT_CLASSIFICATION	9.862605328510251E-4	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9991525157868698	WITHOUT_CLASSIFICATION	8.474842131301162E-4	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9974897961069852	WITHOUT_CLASSIFICATION	0.002510203893014728	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9989098574518802	WITHOUT_CLASSIFICATION	0.0010901425481197999	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9995353246079267	WITHOUT_CLASSIFICATION	4.6467539207327305E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9999790077664771	WITHOUT_CLASSIFICATION	2.0992233522877605E-5	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999958056381465	WITHOUT_CLASSIFICATION	4.194361853501373E-6	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999998775223606	WITHOUT_CLASSIFICATION	1.2247763936931482E-7	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999998782223276	WITHOUT_CLASSIFICATION	1.217776724482538E-7	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999999939840997	WITHOUT_CLASSIFICATION	6.015900321719956E-9	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.9999999087266285	WITHOUT_CLASSIFICATION	9.127337150569603E-8	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999959556587883	WITHOUT_CLASSIFICATION	4.0443412116373305E-6	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999952591792751	WITHOUT_CLASSIFICATION	4.740820724929486E-6	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999989611866288	WITHOUT_CLASSIFICATION	1.0388133712805807E-6	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.999997066116601	WITHOUT_CLASSIFICATION	2.933883398979819E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.999999895119428	WITHOUT_CLASSIFICATION	1.0488057201130177E-7	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9999617462932275	WITHOUT_CLASSIFICATION	3.825370677247276E-5	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999935955058636	WITHOUT_CLASSIFICATION	6.404494136334372E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999985553686304	WITHOUT_CLASSIFICATION	1.4446313696518718E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999965031583846	WITHOUT_CLASSIFICATION	3.496841615401812E-6	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999956260944125	WITHOUT_CLASSIFICATION	4.37390558752922E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.9999989977108991	WITHOUT_CLASSIFICATION	1.0022891008574387E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999997252072127	WITHOUT_CLASSIFICATION	2.747927873249943E-7	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999978436281441	WITHOUT_CLASSIFICATION	2.156371855797755E-6	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.999992614084659	WITHOUT_CLASSIFICATION	7.385915340942476E-6	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.9999974259390891	WITHOUT_CLASSIFICATION	2.5740609108476944E-6	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999993268355218	WITHOUT_CLASSIFICATION	6.731644781062704E-7	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999995216654216	WITHOUT_CLASSIFICATION	4.783345783036489E-7	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9999753712634448	WITHOUT_CLASSIFICATION	2.4628736555153226E-5	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999993558981671	WITHOUT_CLASSIFICATION	6.44101832950314E-7	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999999759091528	WITHOUT_CLASSIFICATION	2.4090847150779473E-8	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999999898402536	WITHOUT_CLASSIFICATION	1.0159746376605784E-8	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.9999940485076672	WITHOUT_CLASSIFICATION	5.951492332805191E-6	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9999986684143477	WITHOUT_CLASSIFICATION	1.331585652328915E-6	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999984255521802	WITHOUT_CLASSIFICATION	1.5744478197593484E-6	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999999686109746	WITHOUT_CLASSIFICATION	3.13890253281168E-8	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999901474680715	WITHOUT_CLASSIFICATION	9.85253192846761E-6	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.99999783184965	WITHOUT_CLASSIFICATION	2.1681503501246713E-6	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999972513714712	WITHOUT_CLASSIFICATION	2.74862852868695E-6	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9999968157574343	WITHOUT_CLASSIFICATION	3.1842425657207823E-6	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999995933441671	WITHOUT_CLASSIFICATION	4.066558328667919E-7	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999999493308566	WITHOUT_CLASSIFICATION	5.066914341828455E-8	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999850173187351	WITHOUT_CLASSIFICATION	1.4982681264856048E-5	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.99999565701458	WITHOUT_CLASSIFICATION	4.3429854200500595E-6	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999993122721755	WITHOUT_CLASSIFICATION	6.877278244805126E-7	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9999952682882588	WITHOUT_CLASSIFICATION	4.731711741206834E-6	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.9999999536788025	WITHOUT_CLASSIFICATION	4.6321197547749944E-8	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999998764719399	WITHOUT_CLASSIFICATION	1.235280601858838E-7	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9999934086195409	WITHOUT_CLASSIFICATION	6.591380459232337E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999967997095547	WITHOUT_CLASSIFICATION	3.2002904452722915E-6	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999586107700955	WITHOUT_CLASSIFICATION	4.138922990450108E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999999620549581	WITHOUT_CLASSIFICATION	3.794504180672479E-8	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999822445190684	WITHOUT_CLASSIFICATION	1.7755480931649138E-5	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999998587398148	WITHOUT_CLASSIFICATION	1.412601851842274E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999991521261623	WITHOUT_CLASSIFICATION	8.478738377247548E-7	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999924834349	WITHOUT_CLASSIFICATION	7.516565163594462E-9	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999924834349	WITHOUT_CLASSIFICATION	7.516565163594462E-9	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999999961633801	WITHOUT_CLASSIFICATION	3.836619930221896E-9	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999984779022294	WITHOUT_CLASSIFICATION	1.5220977705354207E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999988354720283	WITHOUT_CLASSIFICATION	1.1645279717689945E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9986189547097043	WITHOUT_CLASSIFICATION	0.0013810452902957501	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999921051408729	WITHOUT_CLASSIFICATION	7.89485912698332E-6	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999999551798466	WITHOUT_CLASSIFICATION	4.482015327640332E-8	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9997682037420491	WITHOUT_CLASSIFICATION	2.3179625795085711E-4	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999976319374337	WITHOUT_CLASSIFICATION	2.3680625662365435E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999738724860882	WITHOUT_CLASSIFICATION	2.6127513911765318E-5	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999987063479818	WITHOUT_CLASSIFICATION	1.293652018176154E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999991831955318	WITHOUT_CLASSIFICATION	8.168044681299959E-7	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999996209186973	WITHOUT_CLASSIFICATION	3.7908130265553684E-7	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999906441214761	WITHOUT_CLASSIFICATION	9.35587852390335E-6	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999994121173811	WITHOUT_CLASSIFICATION	5.878826189065287E-7	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999994770988654	WITHOUT_CLASSIFICATION	5.229011346223581E-7	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999978143342573	WITHOUT_CLASSIFICATION	2.1856657426482353E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999996629414676	WITHOUT_CLASSIFICATION	3.370585324599489E-7	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999850194267254	WITHOUT_CLASSIFICATION	1.4980573274672398E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999966633381344	WITHOUT_CLASSIFICATION	3.3366618657166735E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999862930615	WITHOUT_CLASSIFICATION	1.3706938329936997E-8	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999983071955765	WITHOUT_CLASSIFICATION	1.6928044234927588E-6	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999946170973789	WITHOUT_CLASSIFICATION	5.3829026210869384E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999999892256988	WITHOUT_CLASSIFICATION	1.0774301175656643E-8	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999999956505559	WITHOUT_CLASSIFICATION	4.349444115515941E-8	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999998802438129	WITHOUT_CLASSIFICATION	1.1975618709543843E-7	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999998642181267	WITHOUT_CLASSIFICATION	1.3578187326490136E-7	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999988742185	WITHOUT_CLASSIFICATION	1.1257814753698261E-9	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.999999998584753	WITHOUT_CLASSIFICATION	1.4152470428634636E-9	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.999999999299427	WITHOUT_CLASSIFICATION	7.005729407399379E-10	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999969403824	WITHOUT_CLASSIFICATION	3.0596176283637005E-9	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999988147392916	WITHOUT_CLASSIFICATION	1.1852607084270328E-6	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999999886236727	WITHOUT_CLASSIFICATION	1.1376327379567452E-8	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999999692559478	WITHOUT_CLASSIFICATION	3.0744052193038336E-8	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999945290987	WITHOUT_CLASSIFICATION	5.4709013664217154E-9	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999910237508441	WITHOUT_CLASSIFICATION	8.976249155828856E-6	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999994719125762	WITHOUT_CLASSIFICATION	5.280874238087199E-7	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999934012600284	WITHOUT_CLASSIFICATION	6.598739971554767E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999997501638431	WITHOUT_CLASSIFICATION	2.4983615688476345E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999974630048957	WITHOUT_CLASSIFICATION	2.5369951042908826E-6	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999982439453	WITHOUT_CLASSIFICATION	1.7560547632687517E-9	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999986141922138	WITHOUT_CLASSIFICATION	1.385807786140592E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999950673598543	WITHOUT_CLASSIFICATION	4.932640145697349E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999958583165243	WITHOUT_CLASSIFICATION	4.141683475735083E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999466536427788	WITHOUT_CLASSIFICATION	5.334635722121395E-5	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.999978706672604	WITHOUT_CLASSIFICATION	2.129332739594386E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9995392615013433	WITHOUT_CLASSIFICATION	4.6073849865667246E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999995360342462	WITHOUT_CLASSIFICATION	4.6396575390700806E-7	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999999672080137	WITHOUT_CLASSIFICATION	3.279198641001737E-8	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999958683754777	WITHOUT_CLASSIFICATION	4.131624522238236E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999999871972209	WITHOUT_CLASSIFICATION	1.2802778940163552E-8	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.999999898596394	WITHOUT_CLASSIFICATION	1.0140360605964197E-7	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999973569932	WITHOUT_CLASSIFICATION	2.6430068041760707E-9	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999972026289	WITHOUT_CLASSIFICATION	2.797371144243378E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999740910873	WITHOUT_CLASSIFICATION	2.5908912643288673E-8	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999991831819	WITHOUT_CLASSIFICATION	8.168181098204837E-10	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999999234042671	WITHOUT_CLASSIFICATION	7.659573280323192E-8	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9997576675194768	WITHOUT_CLASSIFICATION	2.423324805232162E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999999789122919	WITHOUT_CLASSIFICATION	2.108770815469376E-8	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999994079475308	WITHOUT_CLASSIFICATION	5.920524690733573E-7	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999999492581857	WITHOUT_CLASSIFICATION	5.074181421257844E-8	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.999998150223346	WITHOUT_CLASSIFICATION	1.8497766538881697E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999998271080877	WITHOUT_CLASSIFICATION	1.7289191226068655E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999999754158662	WITHOUT_CLASSIFICATION	2.4584133786183377E-8	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999975382809679	WITHOUT_CLASSIFICATION	2.4617190320529778E-6	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999998888418912	WITHOUT_CLASSIFICATION	1.1115810883070648E-7	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999997834926756	WITHOUT_CLASSIFICATION	2.1650732441376978E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999897202962	WITHOUT_CLASSIFICATION	1.0279703784851395E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.999999896344871	WITHOUT_CLASSIFICATION	1.0365512909990469E-7	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999991455207896	WITHOUT_CLASSIFICATION	8.544792104584326E-7	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999998674786578	WITHOUT_CLASSIFICATION	1.3252134222397994E-7	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999956566242	WITHOUT_CLASSIFICATION	4.343375767670001E-9	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.999998707099041	WITHOUT_CLASSIFICATION	1.2929009589258498E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999976237645203	WITHOUT_CLASSIFICATION	2.376235479670884E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999998292074903	WITHOUT_CLASSIFICATION	1.7079250970791023E-7	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999993863757546	WITHOUT_CLASSIFICATION	6.136242453649213E-7	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9999079156763364	WITHOUT_CLASSIFICATION	9.208432366351863E-5	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999998525781107	WITHOUT_CLASSIFICATION	1.474218892654882E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999998119759987	WITHOUT_CLASSIFICATION	1.8802400118964196E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999018650814894	WITHOUT_CLASSIFICATION	9.81349185105578E-5	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999999170075424	WITHOUT_CLASSIFICATION	8.299245759289205E-8	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999999756823923	WITHOUT_CLASSIFICATION	2.4317607641495833E-8	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999994793750991	WITHOUT_CLASSIFICATION	5.20624900832952E-7	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.999997569011178	WITHOUT_CLASSIFICATION	2.430988822055835E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999955081081169	WITHOUT_CLASSIFICATION	4.491891883036286E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.999999979101481	WITHOUT_CLASSIFICATION	2.089851895648329E-8	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999881142342051	WITHOUT_CLASSIFICATION	1.1885765794893245E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9999796420810512	WITHOUT_CLASSIFICATION	2.035791894894055E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9998530027192666	WITHOUT_CLASSIFICATION	1.469972807334398E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.999999988482717	WITHOUT_CLASSIFICATION	1.1517283034176013E-8	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.99999959537646	WITHOUT_CLASSIFICATION	4.0462354008572964E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999932722669	WITHOUT_CLASSIFICATION	6.727733194654249E-9	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999998329199662	WITHOUT_CLASSIFICATION	1.6708003370209047E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999979969051875	WITHOUT_CLASSIFICATION	2.003094812378909E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999998433229328	WITHOUT_CLASSIFICATION	1.5667706712284363E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998876080635	WITHOUT_CLASSIFICATION	1.123919365000245E-7	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999987771260359	WITHOUT_CLASSIFICATION	1.222873964005289E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999998723142253	WITHOUT_CLASSIFICATION	1.2768577476555695E-7	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999997598014269	WITHOUT_CLASSIFICATION	2.4019857312890047E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999998832659245	WITHOUT_CLASSIFICATION	1.1673407557560914E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999997223349043	WITHOUT_CLASSIFICATION	2.7766509569005304E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999705273323944	WITHOUT_CLASSIFICATION	2.9472667605583044E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999919736271008	WITHOUT_CLASSIFICATION	8.026372899295537E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9998870959970503	WITHOUT_CLASSIFICATION	1.1290400294980697E-4	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999893172162669	WITHOUT_CLASSIFICATION	1.0682783733085278E-5	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999477202909332	WITHOUT_CLASSIFICATION	5.227970906691844E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999699004933769	WITHOUT_CLASSIFICATION	3.0099506623196775E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909495786521	WITHOUT_CLASSIFICATION	9.050421347865521E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999292853549804	WITHOUT_CLASSIFICATION	7.071464501957044E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999837234507837	WITHOUT_CLASSIFICATION	1.627654921632232E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909677793188	WITHOUT_CLASSIFICATION	9.032220681173972E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99997490670017	WITHOUT_CLASSIFICATION	2.509329983003464E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999877949925791	WITHOUT_CLASSIFICATION	1.220500742082437E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999672131173529	WITHOUT_CLASSIFICATION	3.2786882646964667E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999210520940365	WITHOUT_CLASSIFICATION	7.894790596356078E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999781138399139	WITHOUT_CLASSIFICATION	2.1886160086069228E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999738513235796	WITHOUT_CLASSIFICATION	2.6148676420283956E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999879905487644	WITHOUT_CLASSIFICATION	1.2009451235623034E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999298308874278	WITHOUT_CLASSIFICATION	7.016911257229366E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999887944849277	WITHOUT_CLASSIFICATION	1.120551507218989E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999900922224213	WITHOUT_CLASSIFICATION	9.90777757860612E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999825323347008	WITHOUT_CLASSIFICATION	1.7467665299171766E-5	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999289343017764	WITHOUT_CLASSIFICATION	7.10656982235306E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998905450630206	WITHOUT_CLASSIFICATION	1.0945493697947796E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999349959581487	WITHOUT_CLASSIFICATION	6.500404185127978E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999820705800299	WITHOUT_CLASSIFICATION	1.7929419970199636E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880154613605	WITHOUT_CLASSIFICATION	1.1984538639547537E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999106491640186	WITHOUT_CLASSIFICATION	8.935083598141456E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999275665436587	WITHOUT_CLASSIFICATION	7.243345634131001E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999956519465763	WITHOUT_CLASSIFICATION	4.348053423690904E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878348973675	WITHOUT_CLASSIFICATION	1.2165102632413649E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999900922224213	WITHOUT_CLASSIFICATION	9.90777757860612E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999956519465763	WITHOUT_CLASSIFICATION	4.348053423690904E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999187693996873	WITHOUT_CLASSIFICATION	8.123060031269335E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878348973675	WITHOUT_CLASSIFICATION	1.2165102632413649E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878348973675	WITHOUT_CLASSIFICATION	1.2165102632413649E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999532363040456	WITHOUT_CLASSIFICATION	4.676369595428364E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999410784338374	WITHOUT_CLASSIFICATION	5.8921566162603765E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999603737593772	WITHOUT_CLASSIFICATION	3.9626240622861795E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999539149004184	WITHOUT_CLASSIFICATION	4.6085099581647E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999900657654179	WITHOUT_CLASSIFICATION	9.934234582098955E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999840759532681	WITHOUT_CLASSIFICATION	1.592404673191007E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999840759532681	WITHOUT_CLASSIFICATION	1.592404673191007E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999522719644	WITHOUT_CLASSIFICATION	4.772803560006865E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999429143696766	WITHOUT_CLASSIFICATION	5.708563032341551E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999331655139582	WITHOUT_CLASSIFICATION	6.683448604185832E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999839193994445	WITHOUT_CLASSIFICATION	1.608060055547674E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999128792195855	WITHOUT_CLASSIFICATION	8.712078041449311E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999856345506211	WITHOUT_CLASSIFICATION	1.436544937897918E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999661006273631	WITHOUT_CLASSIFICATION	3.3899372636892766E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999900922224213	WITHOUT_CLASSIFICATION	9.90777757860612E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878348973675	WITHOUT_CLASSIFICATION	1.2165102632413649E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999511158277268	WITHOUT_CLASSIFICATION	4.888417227309145E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999260460774924	WITHOUT_CLASSIFICATION	7.395392250760504E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999391397200512	WITHOUT_CLASSIFICATION	6.0860279948782624E-5	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999601503418452	WITHOUT_CLASSIFICATION	3.984965815487038E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999554894673774	WITHOUT_CLASSIFICATION	4.45105326224896E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999417451715278	WITHOUT_CLASSIFICATION	5.8254828472266215E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999471212836929	WITHOUT_CLASSIFICATION	5.2878716307120157E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999003455648141	WITHOUT_CLASSIFICATION	9.965443518587705E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999866136885129	WITHOUT_CLASSIFICATION	1.338631148692531E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999866136885129	WITHOUT_CLASSIFICATION	1.338631148692531E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897847225796	WITHOUT_CLASSIFICATION	1.021527742043154E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897847225796	WITHOUT_CLASSIFICATION	1.021527742043154E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999876164080481	WITHOUT_CLASSIFICATION	1.238359195197184E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999374236436758	WITHOUT_CLASSIFICATION	6.257635632425942E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999900922224213	WITHOUT_CLASSIFICATION	9.90777757860612E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999825323347008	WITHOUT_CLASSIFICATION	1.7467665299171766E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878348973675	WITHOUT_CLASSIFICATION	1.2165102632413649E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999840759532681	WITHOUT_CLASSIFICATION	1.592404673191007E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999471212836929	WITHOUT_CLASSIFICATION	5.2878716307120157E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999866136885129	WITHOUT_CLASSIFICATION	1.338631148692531E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897847225796	WITHOUT_CLASSIFICATION	1.021527742043154E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999374236436758	WITHOUT_CLASSIFICATION	6.257635632425942E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999585196728591	WITHOUT_CLASSIFICATION	4.148032714095352E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999922692769318	WITHOUT_CLASSIFICATION	7.73072306819973E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999199974770225	WITHOUT_CLASSIFICATION	8.000252297742403E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998440700031062	WITHOUT_CLASSIFICATION	1.5592999689388953E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997427328648941	WITHOUT_CLASSIFICATION	2.57267135105935E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999520121390945	WITHOUT_CLASSIFICATION	4.7987860905467046E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999986818576177	WITHOUT_CLASSIFICATION	1.318142382288407E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999840759532681	WITHOUT_CLASSIFICATION	1.592404673191007E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999646646920881	WITHOUT_CLASSIFICATION	3.533530791177846E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999986818576177	WITHOUT_CLASSIFICATION	1.318142382288407E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999321320184468	WITHOUT_CLASSIFICATION	6.786798155320833E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999852886093899	WITHOUT_CLASSIFICATION	1.471139061009297E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999354997319242	WITHOUT_CLASSIFICATION	6.450026807576174E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999468606113393	WITHOUT_CLASSIFICATION	5.3139388660649624E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999282684662634	WITHOUT_CLASSIFICATION	7.173153373658903E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999312223884306	WITHOUT_CLASSIFICATION	6.877761156944303E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999795527794929	WITHOUT_CLASSIFICATION	2.0447220507118755E-5	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999443842579946	WITHOUT_CLASSIFICATION	5.5615742005290695E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999441976435544	WITHOUT_CLASSIFICATION	5.580235644568365E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999993882324738	WITHOUT_CLASSIFICATION	6.11767526204956E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999583000848218	WITHOUT_CLASSIFICATION	4.169991517818823E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999585903557654	WITHOUT_CLASSIFICATION	4.140964423461221E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999644654664936	WITHOUT_CLASSIFICATION	3.553453350647404E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999868922924282	WITHOUT_CLASSIFICATION	1.3107707571776724E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999852691482184	WITHOUT_CLASSIFICATION	1.4730851781536737E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999577157689464	WITHOUT_CLASSIFICATION	4.228423105360375E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999459736529812	WITHOUT_CLASSIFICATION	5.4026347018798036E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999900795835003	WITHOUT_CLASSIFICATION	9.92041649974271E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999889192382452	WITHOUT_CLASSIFICATION	1.108076175491391E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999848193151153	WITHOUT_CLASSIFICATION	1.5180684884646438E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999862930615	WITHOUT_CLASSIFICATION	1.3706938329936997E-8	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999459627513934	WITHOUT_CLASSIFICATION	5.40372486066894E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9997843048460051	WITHOUT_CLASSIFICATION	2.1569515399491585E-4	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999712931280581	WITHOUT_CLASSIFICATION	2.8706871941859863E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999583000848218	WITHOUT_CLASSIFICATION	4.169991517818823E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999630232454731	WITHOUT_CLASSIFICATION	3.6976754526840746E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997995232458995	WITHOUT_CLASSIFICATION	2.004767541004052E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999056807703415	WITHOUT_CLASSIFICATION	9.431922965845073E-5	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999997528075512	WITHOUT_CLASSIFICATION	2.4719244879196195E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.999999805967062	WITHOUT_CLASSIFICATION	1.9403293802683643E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999995648586969	WITHOUT_CLASSIFICATION	4.351413030085345E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.999999875881417	WITHOUT_CLASSIFICATION	1.241185830346661E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999998680338865	WITHOUT_CLASSIFICATION	1.319661134271969E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999664574193	WITHOUT_CLASSIFICATION	3.3542580763240785E-8	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999997036815526	WITHOUT_CLASSIFICATION	2.963184474400904E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999794382443	WITHOUT_CLASSIFICATION	2.0561755753789145E-8	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999998183554151	WITHOUT_CLASSIFICATION	1.816445849593253E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999996570545079	WITHOUT_CLASSIFICATION	3.4294549217667476E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998688138704	WITHOUT_CLASSIFICATION	1.311861297522875E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998876080635	WITHOUT_CLASSIFICATION	1.123919365000245E-7	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998365901404	WITHOUT_CLASSIFICATION	1.6340985961271901E-7	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998190338636	WITHOUT_CLASSIFICATION	1.8096613634319117E-7	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999964858125269	WITHOUT_CLASSIFICATION	3.514187473242822E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999987654609057	WITHOUT_CLASSIFICATION	1.234539094214565E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999997427568525	WITHOUT_CLASSIFICATION	2.572431474622473E-7	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999987988449198	WITHOUT_CLASSIFICATION	1.2011550802068748E-6	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999996850432423	WITHOUT_CLASSIFICATION	3.1495675766392025E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999999371897108	WITHOUT_CLASSIFICATION	6.28102892792579E-8	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999998518093604	WITHOUT_CLASSIFICATION	1.481906397330325E-7	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9999586107700955	WITHOUT_CLASSIFICATION	4.138922990450108E-5	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999999620549581	WITHOUT_CLASSIFICATION	3.794504180672479E-8	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.9999822445190684	WITHOUT_CLASSIFICATION	1.7755480931649138E-5	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999998587398148	WITHOUT_CLASSIFICATION	1.412601851842274E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999991521261623	WITHOUT_CLASSIFICATION	8.478738377247548E-7	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999924834349	WITHOUT_CLASSIFICATION	7.516565163594462E-9	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.9999984779022294	WITHOUT_CLASSIFICATION	1.5220977705354207E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999988354720283	WITHOUT_CLASSIFICATION	1.1645279717689945E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9986189547097043	WITHOUT_CLASSIFICATION	0.0013810452902957501	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999921051408729	WITHOUT_CLASSIFICATION	7.89485912698332E-6	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999999551798466	WITHOUT_CLASSIFICATION	4.482015327640332E-8	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999995266993639	WITHOUT_CLASSIFICATION	4.733006361406883E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.99999959537646	WITHOUT_CLASSIFICATION	4.0462354008572964E-7	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999987063479818	WITHOUT_CLASSIFICATION	1.293652018176154E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999996209186973	WITHOUT_CLASSIFICATION	3.7908130265553684E-7	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.9999996629414676	WITHOUT_CLASSIFICATION	3.370585324599489E-7	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9999850194267254	WITHOUT_CLASSIFICATION	1.4980573274672398E-5	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999966633381344	WITHOUT_CLASSIFICATION	3.3366618657166735E-6	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999738724860882	WITHOUT_CLASSIFICATION	2.6127513911765318E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999991831955318	WITHOUT_CLASSIFICATION	8.168044681299959E-7	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999862930615	WITHOUT_CLASSIFICATION	1.3706938329936997E-8	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999994121173811	WITHOUT_CLASSIFICATION	5.878826189065287E-7	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999967997095547	WITHOUT_CLASSIFICATION	3.2002904452722915E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999906441214761	WITHOUT_CLASSIFICATION	9.35587852390335E-6	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999999892256988	WITHOUT_CLASSIFICATION	1.0774301175656643E-8	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.999999956505559	WITHOUT_CLASSIFICATION	4.349444115515941E-8	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999998802438129	WITHOUT_CLASSIFICATION	1.1975618709543843E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998876080635	WITHOUT_CLASSIFICATION	1.123919365000245E-7	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993758960634264	WITHOUT_CLASSIFICATION	6.24103936573578E-4	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.999999999793008	WITHOUT_CLASSIFICATION	2.069918878617977E-10	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999988742185	WITHOUT_CLASSIFICATION	1.1257814753698261E-9	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.999999999299427	WITHOUT_CLASSIFICATION	7.005729407399379E-10	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999990358727	WITHOUT_CLASSIFICATION	9.64127330825357E-10	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999969403824	WITHOUT_CLASSIFICATION	3.0596176283637005E-9	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999988147392916	WITHOUT_CLASSIFICATION	1.1852607084270328E-6	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999999692559478	WITHOUT_CLASSIFICATION	3.0744052193038336E-8	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999988006834084	WITHOUT_CLASSIFICATION	1.1993165916659814E-6	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999945290987	WITHOUT_CLASSIFICATION	5.4709013664217154E-9	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.9999910237508441	WITHOUT_CLASSIFICATION	8.976249155828856E-6	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999994719125762	WITHOUT_CLASSIFICATION	5.280874238087199E-7	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999911776457409	WITHOUT_CLASSIFICATION	8.822354259181998E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999934012600284	WITHOUT_CLASSIFICATION	6.598739971554767E-6	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999999453673354	WITHOUT_CLASSIFICATION	5.463266453483583E-8	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999986141922138	WITHOUT_CLASSIFICATION	1.385807786140592E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999997501638431	WITHOUT_CLASSIFICATION	2.4983615688476345E-7	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999974630048957	WITHOUT_CLASSIFICATION	2.5369951042908826E-6	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999958583165243	WITHOUT_CLASSIFICATION	4.141683475735083E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9999466536427788	WITHOUT_CLASSIFICATION	5.334635722121395E-5	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.999978706672604	WITHOUT_CLASSIFICATION	2.129332739594386E-5	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9999243139923096	WITHOUT_CLASSIFICATION	7.568600769033969E-5	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9995392615013433	WITHOUT_CLASSIFICATION	4.6073849865667246E-4	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.9999995360342462	WITHOUT_CLASSIFICATION	4.6396575390700806E-7	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999999672080137	WITHOUT_CLASSIFICATION	3.279198641001737E-8	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999958683754777	WITHOUT_CLASSIFICATION	4.131624522238236E-6	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.9999999871972209	WITHOUT_CLASSIFICATION	1.2802778940163552E-8	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.999999898596394	WITHOUT_CLASSIFICATION	1.0140360605964197E-7	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999973569932	WITHOUT_CLASSIFICATION	2.6430068041760707E-9	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999972026289	WITHOUT_CLASSIFICATION	2.797371144243378E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999740910873	WITHOUT_CLASSIFICATION	2.5908912643288673E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999740910873	WITHOUT_CLASSIFICATION	2.5908912643288673E-8	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999991831819	WITHOUT_CLASSIFICATION	8.168181098204837E-10	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999999234042671	WITHOUT_CLASSIFICATION	7.659573280323192E-8	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9997576675194768	WITHOUT_CLASSIFICATION	2.423324805232162E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999999789122919	WITHOUT_CLASSIFICATION	2.108770815469376E-8	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999999492581857	WITHOUT_CLASSIFICATION	5.074181421257844E-8	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.999998150223346	WITHOUT_CLASSIFICATION	1.8497766538881697E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999998271080877	WITHOUT_CLASSIFICATION	1.7289191226068655E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999999754158662	WITHOUT_CLASSIFICATION	2.4584133786183377E-8	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999998888418912	WITHOUT_CLASSIFICATION	1.1115810883070648E-7	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999968162324	WITHOUT_CLASSIFICATION	3.183767616302386E-9	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999997834926756	WITHOUT_CLASSIFICATION	2.1650732441376978E-7	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999897202962	WITHOUT_CLASSIFICATION	1.0279703784851395E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.999999896344871	WITHOUT_CLASSIFICATION	1.0365512909990469E-7	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999991455207896	WITHOUT_CLASSIFICATION	8.544792104584326E-7	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999998674786578	WITHOUT_CLASSIFICATION	1.3252134222397994E-7	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.999998707099041	WITHOUT_CLASSIFICATION	1.2929009589258498E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999976237645203	WITHOUT_CLASSIFICATION	2.376235479670884E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999998292074903	WITHOUT_CLASSIFICATION	1.7079250970791023E-7	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999993863757546	WITHOUT_CLASSIFICATION	6.136242453649213E-7	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9999079156763364	WITHOUT_CLASSIFICATION	9.208432366351863E-5	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999998525781107	WITHOUT_CLASSIFICATION	1.474218892654882E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999998119759987	WITHOUT_CLASSIFICATION	1.8802400118964196E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.9999018650814894	WITHOUT_CLASSIFICATION	9.81349185105578E-5	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999999170075424	WITHOUT_CLASSIFICATION	8.299245759289205E-8	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999999756823923	WITHOUT_CLASSIFICATION	2.4317607641495833E-8	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999994793750991	WITHOUT_CLASSIFICATION	5.20624900832952E-7	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999955081081169	WITHOUT_CLASSIFICATION	4.491891883036286E-6	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999881142342051	WITHOUT_CLASSIFICATION	1.1885765794893245E-5	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9999796420810512	WITHOUT_CLASSIFICATION	2.035791894894055E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9998530027192666	WITHOUT_CLASSIFICATION	1.469972807334398E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.999999988482717	WITHOUT_CLASSIFICATION	1.1517283034176013E-8	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999673405609878	WITHOUT_CLASSIFICATION	3.2659439012240244E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999998842266543	WITHOUT_CLASSIFICATION	1.1577334569903526E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.999999954174129	WITHOUT_CLASSIFICATION	4.582587105197956E-8	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999932722669	WITHOUT_CLASSIFICATION	6.727733194654249E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999903690122	WITHOUT_CLASSIFICATION	9.63098768076427E-9	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999998329199662	WITHOUT_CLASSIFICATION	1.6708003370209047E-7	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999979969051875	WITHOUT_CLASSIFICATION	2.003094812378909E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999998433229328	WITHOUT_CLASSIFICATION	1.5667706712284363E-7	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999999722895245	WITHOUT_CLASSIFICATION	2.771047544192902E-8	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999987771260359	WITHOUT_CLASSIFICATION	1.222873964005289E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999998723142253	WITHOUT_CLASSIFICATION	1.2768577476555695E-7	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999997598014269	WITHOUT_CLASSIFICATION	2.4019857312890047E-7	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999998832659245	WITHOUT_CLASSIFICATION	1.1673407557560914E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999997223349043	WITHOUT_CLASSIFICATION	2.7766509569005304E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999705273323944	WITHOUT_CLASSIFICATION	2.9472667605583044E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999919736271008	WITHOUT_CLASSIFICATION	8.026372899295537E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9998870959970503	WITHOUT_CLASSIFICATION	1.1290400294980697E-4	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999893172162669	WITHOUT_CLASSIFICATION	1.0682783733085278E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999699004933769	WITHOUT_CLASSIFICATION	3.0099506623196775E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909495786521	WITHOUT_CLASSIFICATION	9.050421347865521E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999292853549804	WITHOUT_CLASSIFICATION	7.071464501957044E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999837234507837	WITHOUT_CLASSIFICATION	1.627654921632232E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999909677793188	WITHOUT_CLASSIFICATION	9.032220681173972E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99997490670017	WITHOUT_CLASSIFICATION	2.509329983003464E-5	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999877949925791	WITHOUT_CLASSIFICATION	1.220500742082437E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999672131173529	WITHOUT_CLASSIFICATION	3.2786882646964667E-5	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999210520940365	WITHOUT_CLASSIFICATION	7.894790596356078E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999781138399139	WITHOUT_CLASSIFICATION	2.1886160086069228E-5	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999738513235796	WITHOUT_CLASSIFICATION	2.6148676420283956E-5	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999879905487644	WITHOUT_CLASSIFICATION	1.2009451235623034E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998655300409562	WITHOUT_CLASSIFICATION	1.344699590437336E-4	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999887944849277	WITHOUT_CLASSIFICATION	1.120551507218989E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999900922224213	WITHOUT_CLASSIFICATION	9.90777757860612E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999825323347008	WITHOUT_CLASSIFICATION	1.7467665299171766E-5	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9998905450630206	WITHOUT_CLASSIFICATION	1.0945493697947796E-4	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999349959581487	WITHOUT_CLASSIFICATION	6.500404185127978E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999820705800299	WITHOUT_CLASSIFICATION	1.7929419970199636E-5	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880154613605	WITHOUT_CLASSIFICATION	1.1984538639547537E-5	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999106491640186	WITHOUT_CLASSIFICATION	8.935083598141456E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999141072702994	WITHOUT_CLASSIFICATION	8.589272970055497E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999275665436587	WITHOUT_CLASSIFICATION	7.243345634131001E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999956519465763	WITHOUT_CLASSIFICATION	4.348053423690904E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878348973675	WITHOUT_CLASSIFICATION	1.2165102632413649E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878348973675	WITHOUT_CLASSIFICATION	1.2165102632413649E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999532363040456	WITHOUT_CLASSIFICATION	4.676369595428364E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999840759532681	WITHOUT_CLASSIFICATION	1.592404673191007E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999840759532681	WITHOUT_CLASSIFICATION	1.592404673191007E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999429143696766	WITHOUT_CLASSIFICATION	5.708563032341551E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999956519465763	WITHOUT_CLASSIFICATION	4.348053423690904E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878348973675	WITHOUT_CLASSIFICATION	1.2165102632413649E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999410784338374	WITHOUT_CLASSIFICATION	5.8921566162603765E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999603737593772	WITHOUT_CLASSIFICATION	3.9626240622861795E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999539149004184	WITHOUT_CLASSIFICATION	4.6085099581647E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999900657654179	WITHOUT_CLASSIFICATION	9.934234582098955E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999840759532681	WITHOUT_CLASSIFICATION	1.592404673191007E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999522719644	WITHOUT_CLASSIFICATION	4.772803560006865E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999331655139582	WITHOUT_CLASSIFICATION	6.683448604185832E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999839193994445	WITHOUT_CLASSIFICATION	1.608060055547674E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999128792195855	WITHOUT_CLASSIFICATION	8.712078041449311E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999856345506211	WITHOUT_CLASSIFICATION	1.436544937897918E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999661006273631	WITHOUT_CLASSIFICATION	3.3899372636892766E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999245473433171	WITHOUT_CLASSIFICATION	7.545265668285121E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998702740237034	WITHOUT_CLASSIFICATION	1.2972597629660375E-4	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999260460774924	WITHOUT_CLASSIFICATION	7.395392250760504E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999391397200512	WITHOUT_CLASSIFICATION	6.0860279948782624E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999554894673774	WITHOUT_CLASSIFICATION	4.45105326224896E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999900922224213	WITHOUT_CLASSIFICATION	9.90777757860612E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999900922224213	WITHOUT_CLASSIFICATION	9.90777757860612E-6	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999601503418452	WITHOUT_CLASSIFICATION	3.984965815487038E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999417451715278	WITHOUT_CLASSIFICATION	5.8254828472266215E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999471212836929	WITHOUT_CLASSIFICATION	5.2878716307120157E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999866136885129	WITHOUT_CLASSIFICATION	1.338631148692531E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999866136885129	WITHOUT_CLASSIFICATION	1.338631148692531E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897847225796	WITHOUT_CLASSIFICATION	1.021527742043154E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897847225796	WITHOUT_CLASSIFICATION	1.021527742043154E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999876164080481	WITHOUT_CLASSIFICATION	1.238359195197184E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999876164080481	WITHOUT_CLASSIFICATION	1.238359195197184E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999374236436758	WITHOUT_CLASSIFICATION	6.257635632425942E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999585196728591	WITHOUT_CLASSIFICATION	4.148032714095352E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999825323347008	WITHOUT_CLASSIFICATION	1.7467665299171766E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878348973675	WITHOUT_CLASSIFICATION	1.2165102632413649E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999840759532681	WITHOUT_CLASSIFICATION	1.592404673191007E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999471212836929	WITHOUT_CLASSIFICATION	5.2878716307120157E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999866136885129	WITHOUT_CLASSIFICATION	1.338631148692531E-5	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999897847225796	WITHOUT_CLASSIFICATION	1.021527742043154E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999922692769318	WITHOUT_CLASSIFICATION	7.73072306819973E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999199974770225	WITHOUT_CLASSIFICATION	8.000252297742403E-5	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9998440700031062	WITHOUT_CLASSIFICATION	1.5592999689388953E-4	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997427328648941	WITHOUT_CLASSIFICATION	2.57267135105935E-4	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999520121390945	WITHOUT_CLASSIFICATION	4.7987860905467046E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999646646920881	WITHOUT_CLASSIFICATION	3.533530791177846E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999646646920881	WITHOUT_CLASSIFICATION	3.533530791177846E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999986818576177	WITHOUT_CLASSIFICATION	1.318142382288407E-5	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999321320184468	WITHOUT_CLASSIFICATION	6.786798155320833E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999852886093899	WITHOUT_CLASSIFICATION	1.471139061009297E-4	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999354997319242	WITHOUT_CLASSIFICATION	6.450026807576174E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999468606113393	WITHOUT_CLASSIFICATION	5.3139388660649624E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999878348973675	WITHOUT_CLASSIFICATION	1.2165102632413649E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999840759532681	WITHOUT_CLASSIFICATION	1.592404673191007E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999986818576177	WITHOUT_CLASSIFICATION	1.318142382288407E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999282684662634	WITHOUT_CLASSIFICATION	7.173153373658903E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999312223884306	WITHOUT_CLASSIFICATION	6.877761156944303E-5	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999795527794929	WITHOUT_CLASSIFICATION	2.0447220507118755E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999441976435544	WITHOUT_CLASSIFICATION	5.580235644568365E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999993882324738	WITHOUT_CLASSIFICATION	6.11767526204956E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999583000848218	WITHOUT_CLASSIFICATION	4.169991517818823E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999585903557654	WITHOUT_CLASSIFICATION	4.140964423461221E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999644654664936	WITHOUT_CLASSIFICATION	3.553453350647404E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999868922924282	WITHOUT_CLASSIFICATION	1.3107707571776724E-5	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999852691482184	WITHOUT_CLASSIFICATION	1.4730851781536737E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999577157689464	WITHOUT_CLASSIFICATION	4.228423105360375E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999459736529812	WITHOUT_CLASSIFICATION	5.4026347018798036E-5	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999900795835003	WITHOUT_CLASSIFICATION	9.92041649974271E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999889192382452	WITHOUT_CLASSIFICATION	1.108076175491391E-5	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999848193151153	WITHOUT_CLASSIFICATION	1.5180684884646438E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999773147105416	WITHOUT_CLASSIFICATION	2.2685289458440724E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999712931280581	WITHOUT_CLASSIFICATION	2.8706871941859863E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999583000848218	WITHOUT_CLASSIFICATION	4.169991517818823E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999630232454731	WITHOUT_CLASSIFICATION	3.6976754526840746E-5	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9997995232458995	WITHOUT_CLASSIFICATION	2.004767541004052E-4	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999056807703415	WITHOUT_CLASSIFICATION	9.431922965845073E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9993758960634264	WITHOUT_CLASSIFICATION	6.24103936573578E-4	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999997528075512	WITHOUT_CLASSIFICATION	2.4719244879196195E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.999999805967062	WITHOUT_CLASSIFICATION	1.9403293802683643E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999995648586969	WITHOUT_CLASSIFICATION	4.351413030085345E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.999999875881417	WITHOUT_CLASSIFICATION	1.241185830346661E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999998680338865	WITHOUT_CLASSIFICATION	1.319661134271969E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999664574193	WITHOUT_CLASSIFICATION	3.3542580763240785E-8	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999997036815526	WITHOUT_CLASSIFICATION	2.963184474400904E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999999794382443	WITHOUT_CLASSIFICATION	2.0561755753789145E-8	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999998183554151	WITHOUT_CLASSIFICATION	1.816445849593253E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999996570545079	WITHOUT_CLASSIFICATION	3.4294549217667476E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998688138704	WITHOUT_CLASSIFICATION	1.311861297522875E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998876080635	WITHOUT_CLASSIFICATION	1.123919365000245E-7	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998365901404	WITHOUT_CLASSIFICATION	1.6340985961271901E-7	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999998190338636	WITHOUT_CLASSIFICATION	1.8096613634319117E-7	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999964858125269	WITHOUT_CLASSIFICATION	3.514187473242822E-6	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999987654609057	WITHOUT_CLASSIFICATION	1.234539094214565E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999862930615	WITHOUT_CLASSIFICATION	1.3706938329936997E-8	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999997427568525	WITHOUT_CLASSIFICATION	2.572431474622473E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999997427568525	WITHOUT_CLASSIFICATION	2.572431474622473E-7	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999996850432423	WITHOUT_CLASSIFICATION	3.1495675766392025E-7	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999999371897108	WITHOUT_CLASSIFICATION	6.28102892792579E-8	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.999999999793008	WITHOUT_CLASSIFICATION	2.069918878617977E-10	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999993476237704	WITHOUT_CLASSIFICATION	6.523762295140658E-7	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999993476237704	WITHOUT_CLASSIFICATION	6.523762295140658E-7	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9999884125051367	WITHOUT_CLASSIFICATION	1.1587494863431364E-5	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9999735134308967	WITHOUT_CLASSIFICATION	2.648656910332462E-5	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999999584058419	WITHOUT_CLASSIFICATION	4.1594158131104116E-8	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.9999647548687374	WITHOUT_CLASSIFICATION	3.524513126264872E-5	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9810028973673927	WITHOUT_CLASSIFICATION	0.018997102632607246	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999834627477849	WITHOUT_CLASSIFICATION	1.6537252215076824E-5	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999993698185274	WITHOUT_CLASSIFICATION	6.301814725095657E-7	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999999539515274	WITHOUT_CLASSIFICATION	4.6048472692166924E-8	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9880168516243389	WITHOUT_CLASSIFICATION	0.011983148375661062	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999692292349072	WITHOUT_CLASSIFICATION	3.077076509287779E-5	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999056724205221	WITHOUT_CLASSIFICATION	9.432757947795922E-5	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999884889633243	WITHOUT_CLASSIFICATION	1.1511036675674715E-5	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999866304425905	WITHOUT_CLASSIFICATION	1.3369557409550226E-5	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9998465271393658	WITHOUT_CLASSIFICATION	1.534728606341913E-4	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999970871740679	WITHOUT_CLASSIFICATION	2.9128259321435686E-6	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999999235529684	WITHOUT_CLASSIFICATION	7.644703164070828E-8	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9998438442020324	WITHOUT_CLASSIFICATION	1.561557979675653E-4	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.999864025898173	WITHOUT_CLASSIFICATION	1.3597410182694146E-4	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999937916505726	WITHOUT_CLASSIFICATION	6.208349427496624E-6	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9999985682144367	WITHOUT_CLASSIFICATION	1.431785563379434E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999998837784213	WITHOUT_CLASSIFICATION	1.162215787319771E-7	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999671271893095	WITHOUT_CLASSIFICATION	3.2872810690471974E-5	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999955206711311	WITHOUT_CLASSIFICATION	4.479328868914987E-6	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9998393010625655	WITHOUT_CLASSIFICATION	1.606989374345251E-4	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.999989575233781	WITHOUT_CLASSIFICATION	1.0424766219018003E-5	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.999995655645135	WITHOUT_CLASSIFICATION	4.344354864991662E-6	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999982524065606	WITHOUT_CLASSIFICATION	1.747593439413255E-6	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9992684266425388	WITHOUT_CLASSIFICATION	7.315733574611114E-4	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9999708818244158	WITHOUT_CLASSIFICATION	2.9118175584121408E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.999999071522498	WITHOUT_CLASSIFICATION	9.284775021106507E-7	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.999999071522498	WITHOUT_CLASSIFICATION	9.284775021106507E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999171440493	WITHOUT_CLASSIFICATION	8.28559507064521E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999171440493	WITHOUT_CLASSIFICATION	8.28559507064521E-8	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999957110005573	WITHOUT_CLASSIFICATION	4.288999442743246E-6	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999987711440148	WITHOUT_CLASSIFICATION	1.2288559851995304E-6	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999999814757862	WITHOUT_CLASSIFICATION	1.8524213779889796E-8	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9997739807041506	WITHOUT_CLASSIFICATION	2.2601929584938394E-4	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999948459359729	WITHOUT_CLASSIFICATION	5.1540640270987975E-6	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999985582519052	WITHOUT_CLASSIFICATION	1.4417480948262415E-6	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999945571464007	WITHOUT_CLASSIFICATION	5.442853599276258E-6	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.9999235674453987	WITHOUT_CLASSIFICATION	7.643255460125628E-5	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999999720506431	WITHOUT_CLASSIFICATION	2.7949356890335037E-8	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999992688617876	WITHOUT_CLASSIFICATION	7.311382124623247E-7	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999992688617876	WITHOUT_CLASSIFICATION	7.311382124623247E-7	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999299325767512	WITHOUT_CLASSIFICATION	7.006742324879276E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999299325767512	WITHOUT_CLASSIFICATION	7.006742324879276E-5	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999387254773714	WITHOUT_CLASSIFICATION	6.127452262857166E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999992514214192	WITHOUT_CLASSIFICATION	7.485785808090271E-7	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999997188345087	WITHOUT_CLASSIFICATION	2.8116549134430727E-7	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.9999997648442077	WITHOUT_CLASSIFICATION	2.3515579229420043E-7	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.999999434953712	WITHOUT_CLASSIFICATION	5.650462879337487E-7	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999999609945334	WITHOUT_CLASSIFICATION	3.900546657287151E-8	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999972845279855	WITHOUT_CLASSIFICATION	2.715472014528856E-6	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.999999948728479	WITHOUT_CLASSIFICATION	5.1271521006722186E-8	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9996705882670599	WITHOUT_CLASSIFICATION	3.2941173294011555E-4	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999998525279014	WITHOUT_CLASSIFICATION	1.4747209872931763E-7	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9999799563421237	WITHOUT_CLASSIFICATION	2.0043657876449678E-5	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999999410305599	WITHOUT_CLASSIFICATION	5.896944012553848E-8	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.999968766901146	WITHOUT_CLASSIFICATION	3.1233098853978406E-5	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999996230116083	WITHOUT_CLASSIFICATION	3.7698839164890535E-7	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999999824844455	WITHOUT_CLASSIFICATION	1.7515554412176386E-8	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999641196392383	WITHOUT_CLASSIFICATION	3.58803607618047E-5	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999878772769835	WITHOUT_CLASSIFICATION	1.2122723016625239E-5	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9998983288897981	WITHOUT_CLASSIFICATION	1.016711102017932E-4	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9999900101988108	WITHOUT_CLASSIFICATION	9.989801189253183E-6	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.999999217919998	WITHOUT_CLASSIFICATION	7.820800019858079E-7	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9993674125182602	WITHOUT_CLASSIFICATION	6.325874817397998E-4	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999736548729724	WITHOUT_CLASSIFICATION	2.6345127027575903E-5	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.9999999390487854	WITHOUT_CLASSIFICATION	6.095121461503708E-8	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999993572789095	WITHOUT_CLASSIFICATION	6.427210905143543E-7	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999999912182471	WITHOUT_CLASSIFICATION	8.781752915296179E-9	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9998227683138788	WITHOUT_CLASSIFICATION	1.772316861211926E-4	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999968431354864	WITHOUT_CLASSIFICATION	3.1568645136823347E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.999999580622807	WITHOUT_CLASSIFICATION	4.19377192915259E-7	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.999999580622807	WITHOUT_CLASSIFICATION	4.19377192915259E-7	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999631541565706	WITHOUT_CLASSIFICATION	3.684584342941764E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9999536638880346	WITHOUT_CLASSIFICATION	4.633611196523438E-5	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.99999846046225	WITHOUT_CLASSIFICATION	1.5395377499437458E-6	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9998401684323097	WITHOUT_CLASSIFICATION	1.5983156769031664E-4	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999969468782023	WITHOUT_CLASSIFICATION	3.0531217978107683E-6	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.999949478202457	WITHOUT_CLASSIFICATION	5.052179754295243E-5	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999996707084635	WITHOUT_CLASSIFICATION	3.292915363914327E-7	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.999903129845577	WITHOUT_CLASSIFICATION	9.687015442292536E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999171440493	WITHOUT_CLASSIFICATION	8.28559507064521E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999171440493	WITHOUT_CLASSIFICATION	8.28559507064521E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999171440493	WITHOUT_CLASSIFICATION	8.28559507064521E-8	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9998227683138788	WITHOUT_CLASSIFICATION	1.772316861211926E-4	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9999251622616026	WITHOUT_CLASSIFICATION	7.483773839743672E-5	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999968281179012	WITHOUT_CLASSIFICATION	3.171882098813347E-6	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999981376631217	WITHOUT_CLASSIFICATION	1.8623368783000073E-6	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9999841089982934	WITHOUT_CLASSIFICATION	1.5891001706664308E-5	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999900395710629	WITHOUT_CLASSIFICATION	9.960428937122777E-6	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999694309443823	WITHOUT_CLASSIFICATION	3.0569055617751945E-5	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999745338285	WITHOUT_CLASSIFICATION	2.546617145169678E-8	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.9999999288230274	WITHOUT_CLASSIFICATION	7.117697263386531E-8	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9998786787503434	WITHOUT_CLASSIFICATION	1.2132124965660473E-4	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.9999996892260743	WITHOUT_CLASSIFICATION	3.1077392569014743E-7	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999999768436227	WITHOUT_CLASSIFICATION	2.3156377155570134E-8	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999999960471362	WITHOUT_CLASSIFICATION	3.952863791832056E-9	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999996130509283	WITHOUT_CLASSIFICATION	3.8694907160233474E-7	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.9999997969811505	WITHOUT_CLASSIFICATION	2.0301884949746995E-7	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.999999643757119	WITHOUT_CLASSIFICATION	3.5624288100506254E-7	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9999989614665128	WITHOUT_CLASSIFICATION	1.0385334872827291E-6	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9998432097637391	WITHOUT_CLASSIFICATION	1.5679023626095597E-4	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999995596788326	WITHOUT_CLASSIFICATION	4.403211673109374E-7	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9999960321731667	WITHOUT_CLASSIFICATION	3.967826833353135E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999959180347032	WITHOUT_CLASSIFICATION	4.081965296713563E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.99998234698872	WITHOUT_CLASSIFICATION	1.7653011280023843E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999976196566912	WITHOUT_CLASSIFICATION	2.3803433087157207E-6	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999985129388751	WITHOUT_CLASSIFICATION	1.48706112493095E-6	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999724181864078	WITHOUT_CLASSIFICATION	2.75818135922762E-5	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999987236960503	WITHOUT_CLASSIFICATION	1.276303949706762E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999171440493	WITHOUT_CLASSIFICATION	8.28559507064521E-8	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999999745338285	WITHOUT_CLASSIFICATION	2.546617145169678E-8	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.999999643757119	WITHOUT_CLASSIFICATION	3.5624288100506254E-7	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999997227659077	WITHOUT_CLASSIFICATION	2.7723409230184593E-7	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999998585917889	WITHOUT_CLASSIFICATION	1.4140821119937167E-7	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999707874640779	WITHOUT_CLASSIFICATION	2.9212535922154976E-5	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9997048302430723	WITHOUT_CLASSIFICATION	2.9516975692763826E-4	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999840109618976	WITHOUT_CLASSIFICATION	1.598903810245395E-5	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9999057899836146	WITHOUT_CLASSIFICATION	9.421001638542242E-5	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9999999137120403	WITHOUT_CLASSIFICATION	8.628795964592997E-8	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999936860344673	WITHOUT_CLASSIFICATION	6.313965532729363E-6	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9982692203037377	WITHOUT_CLASSIFICATION	0.0017307796962622328	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999679910607508	WITHOUT_CLASSIFICATION	3.2008939249134776E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.999969636752474	WITHOUT_CLASSIFICATION	3.03632475259991E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.999969636752474	WITHOUT_CLASSIFICATION	3.03632475259991E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9999277030361758	WITHOUT_CLASSIFICATION	7.229696382413639E-5	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9999556733766628	WITHOUT_CLASSIFICATION	4.43266233371744E-5	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999965511615319	WITHOUT_CLASSIFICATION	3.448838468103933E-6	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.999999975080075	WITHOUT_CLASSIFICATION	2.491992501318723E-8	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999319908880233	WITHOUT_CLASSIFICATION	6.800911197665667E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999764196832327	WITHOUT_CLASSIFICATION	2.358031676731812E-5	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.999997714693594	WITHOUT_CLASSIFICATION	2.2853064058964482E-6	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999980439936467	WITHOUT_CLASSIFICATION	1.95600635327699E-6	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999947929902416	WITHOUT_CLASSIFICATION	5.207009758403924E-6	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999999761321072	WITHOUT_CLASSIFICATION	2.386789270596309E-8	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9999635691103256	WITHOUT_CLASSIFICATION	3.643088967430053E-5	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9999299325767512	WITHOUT_CLASSIFICATION	7.006742324879276E-5	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999972845279855	WITHOUT_CLASSIFICATION	2.715472014528856E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.999999643757119	WITHOUT_CLASSIFICATION	3.5624288100506254E-7	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9999319908880233	WITHOUT_CLASSIFICATION	6.800911197665667E-5	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.9999764196832327	WITHOUT_CLASSIFICATION	2.358031676731812E-5	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9999748612307423	WITHOUT_CLASSIFICATION	2.513876925762814E-5	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999999382322903	WITHOUT_CLASSIFICATION	6.176770971146125E-8	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.999670723624733	WITHOUT_CLASSIFICATION	3.2927637526703753E-4	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9999737300318505	WITHOUT_CLASSIFICATION	2.626996814946033E-5	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9999917310883539	WITHOUT_CLASSIFICATION	8.268911646111167E-6	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.999999871448327	WITHOUT_CLASSIFICATION	1.285516729812553E-7	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9990779422934162	WITHOUT_CLASSIFICATION	9.22057706583818E-4	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.9999999595511058	WITHOUT_CLASSIFICATION	4.044889423704673E-8	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999975282976463	WITHOUT_CLASSIFICATION	2.47170235357439E-6	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9999999473770427	WITHOUT_CLASSIFICATION	5.262295739975428E-8	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.999999980568965	WITHOUT_CLASSIFICATION	1.943103504349055E-8	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9999998026645417	WITHOUT_CLASSIFICATION	1.9733545816627538E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9885826001309665	WITHOUT_CLASSIFICATION	0.011417399869033375	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999999504157436	WITHOUT_CLASSIFICATION	4.9584256378680854E-8	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9999220760255961	WITHOUT_CLASSIFICATION	7.792397440396587E-5	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999903495671	WITHOUT_CLASSIFICATION	9.650432998868648E-9	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9885826001309665	WITHOUT_CLASSIFICATION	0.011417399869033375	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9885826001309665	WITHOUT_CLASSIFICATION	0.011417399869033375	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9885826001309665	WITHOUT_CLASSIFICATION	0.011417399869033375	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999973722225697	WITHOUT_CLASSIFICATION	2.6277774303855513E-6	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999987805217142	WITHOUT_CLASSIFICATION	1.2194782858147547E-6	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999999109652579	WITHOUT_CLASSIFICATION	8.90347420913595E-8	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999979312680849	WITHOUT_CLASSIFICATION	2.06873191511427E-6	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9999935510650706	WITHOUT_CLASSIFICATION	6.44893492939696E-6	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9993085851549697	WITHOUT_CLASSIFICATION	6.914148450302317E-4	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9999940041871094	WITHOUT_CLASSIFICATION	5.995812890666162E-6	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999986522433416	WITHOUT_CLASSIFICATION	1.3477566584407065E-6	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.999997486960094	WITHOUT_CLASSIFICATION	2.5130399058669845E-6	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999987252741903	WITHOUT_CLASSIFICATION	1.2747258096708554E-6	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9999996164128415	WITHOUT_CLASSIFICATION	3.8358715839139034E-7	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9999649985373336	WITHOUT_CLASSIFICATION	3.5001462666449436E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999991998288007	WITHOUT_CLASSIFICATION	8.001711992210335E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999997427568525	WITHOUT_CLASSIFICATION	2.572431474622473E-7	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999503293481525	WITHOUT_CLASSIFICATION	4.967065184756314E-5	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9986991310409001	WITHOUT_CLASSIFICATION	0.0013008689590998344	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999975125561923	WITHOUT_CLASSIFICATION	2.487443807586246E-6	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999992470156512	WITHOUT_CLASSIFICATION	7.529843488022108E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999997600046895	WITHOUT_CLASSIFICATION	2.3999531058222394E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999997600046895	WITHOUT_CLASSIFICATION	2.3999531058222394E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998423827718	WITHOUT_CLASSIFICATION	1.5761722806734196E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999981145473702	WITHOUT_CLASSIFICATION	1.885452629866543E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998423827718	WITHOUT_CLASSIFICATION	1.5761722806734196E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999995807600982	WITHOUT_CLASSIFICATION	4.192399017003773E-7	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999995798019505	WITHOUT_CLASSIFICATION	4.2019804947928473E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999995933217003	WITHOUT_CLASSIFICATION	4.0667829962017895E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999999170196828	WITHOUT_CLASSIFICATION	8.298031715836365E-8	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999999170196828	WITHOUT_CLASSIFICATION	8.298031715836365E-8	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999996768570307	WITHOUT_CLASSIFICATION	3.231429693697936E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999996768570307	WITHOUT_CLASSIFICATION	3.231429693697936E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999996865393003	WITHOUT_CLASSIFICATION	3.1346069972379325E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999996865393003	WITHOUT_CLASSIFICATION	3.1346069972379325E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997987600838	WITHOUT_CLASSIFICATION	2.0123991613150973E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997987600838	WITHOUT_CLASSIFICATION	2.0123991613150973E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997987600838	WITHOUT_CLASSIFICATION	2.0123991613150973E-7	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9999996095038591	WITHOUT_CLASSIFICATION	3.904961407466095E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997987600838	WITHOUT_CLASSIFICATION	2.0123991613150973E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997987600838	WITHOUT_CLASSIFICATION	2.0123991613150973E-7	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999999515014573	WITHOUT_CLASSIFICATION	4.849854272403654E-8	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.9999984671168597	WITHOUT_CLASSIFICATION	1.5328831402691128E-6	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9999997059666402	WITHOUT_CLASSIFICATION	2.9403335974291757E-7	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9999099945858784	WITHOUT_CLASSIFICATION	9.000541412155288E-5	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999940335465802	WITHOUT_CLASSIFICATION	5.966453419785371E-6	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.9999999265700313	WITHOUT_CLASSIFICATION	7.342996864478883E-8	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999917737089129	WITHOUT_CLASSIFICATION	8.226291086990136E-6	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.999999229302879	WITHOUT_CLASSIFICATION	7.706971210024349E-7	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9996560827332085	WITHOUT_CLASSIFICATION	3.439172667914977E-4	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.999999988352986	WITHOUT_CLASSIFICATION	1.1647014026881824E-8	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999744026216243	WITHOUT_CLASSIFICATION	2.5597378375750005E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999995826524964	WITHOUT_CLASSIFICATION	4.1734750356313795E-7	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.999996639448987	WITHOUT_CLASSIFICATION	3.36055101310207E-6	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999995692819094	WITHOUT_CLASSIFICATION	4.3071809068804824E-7	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.99999542699153	WITHOUT_CLASSIFICATION	4.573008469960253E-6	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999988952736445	WITHOUT_CLASSIFICATION	1.104726355475787E-6	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999996867280714	WITHOUT_CLASSIFICATION	3.13271928678251E-7	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999939222095882	WITHOUT_CLASSIFICATION	6.077790411898149E-6	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999995674587113	WITHOUT_CLASSIFICATION	4.3254128869393703E-7	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999968119085527	WITHOUT_CLASSIFICATION	3.1880914473885433E-6	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999995350522066	WITHOUT_CLASSIFICATION	4.649477933136864E-7	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9949793364589559	WITHOUT_CLASSIFICATION	0.00502066354104422	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9949793364589559	WITHOUT_CLASSIFICATION	0.00502066354104422	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9961679163197843	WITHOUT_CLASSIFICATION	0.0038320836802157275	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9961679163197843	WITHOUT_CLASSIFICATION	0.0038320836802157275	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999996448494746	WITHOUT_CLASSIFICATION	3.55150525471042E-7	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999953354433397	WITHOUT_CLASSIFICATION	4.664556660277891E-6	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999999800847317	WITHOUT_CLASSIFICATION	1.9915268251186988E-8	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999998265712177	WITHOUT_CLASSIFICATION	1.734287823022472E-7	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999978013041	WITHOUT_CLASSIFICATION	2.19869589996913E-6	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.9999920832239825	WITHOUT_CLASSIFICATION	7.916776017548372E-6	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999997495105077	WITHOUT_CLASSIFICATION	2.50489492359512E-7	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.9975215634678685	WITHOUT_CLASSIFICATION	0.0024784365321314436	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.999999482313852	WITHOUT_CLASSIFICATION	5.176861479730283E-7	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999984706068269	WITHOUT_CLASSIFICATION	1.5293931731848336E-6	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.9999997401295104	WITHOUT_CLASSIFICATION	2.5987048958521515E-7	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999996741110356	WITHOUT_CLASSIFICATION	3.2588896437774833E-7	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999990702974989	WITHOUT_CLASSIFICATION	9.297025010358306E-7	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999999994851256	WITHOUT_CLASSIFICATION	5.148743182498518E-10	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999997105847293	WITHOUT_CLASSIFICATION	2.894152708221117E-7	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999924423542892	WITHOUT_CLASSIFICATION	7.557645710812562E-6	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999999785693701	WITHOUT_CLASSIFICATION	2.1430629864105802E-8	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9994498075883006	WITHOUT_CLASSIFICATION	5.501924116993446E-4	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999986964609039	WITHOUT_CLASSIFICATION	1.3035390960470178E-6	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9998386622824048	WITHOUT_CLASSIFICATION	1.6133771759521443E-4	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.999999970946935	WITHOUT_CLASSIFICATION	2.9053064957179314E-8	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999976292787032	WITHOUT_CLASSIFICATION	2.3707212967994676E-6	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.999999663319628	WITHOUT_CLASSIFICATION	3.3668037210950674E-7	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9963474131709575	WITHOUT_CLASSIFICATION	0.0036525868290425557	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999992438075901	WITHOUT_CLASSIFICATION	7.56192409801301E-7	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.999991576646865	WITHOUT_CLASSIFICATION	8.423353134932951E-6	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999763731420883	WITHOUT_CLASSIFICATION	2.3626857911721322E-5	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9999404589986888	WITHOUT_CLASSIFICATION	5.954100131126111E-5	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999999389046349	WITHOUT_CLASSIFICATION	6.109536515167025E-8	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.999965656697879	WITHOUT_CLASSIFICATION	3.4343302121025374E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999581799718	WITHOUT_CLASSIFICATION	4.1820028202747734E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999784719963	WITHOUT_CLASSIFICATION	2.1528003662910828E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998979850951	WITHOUT_CLASSIFICATION	1.0201490487803748E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995301441714	WITHOUT_CLASSIFICATION	4.6985582861924954E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999434289609	WITHOUT_CLASSIFICATION	5.657103908174705E-8	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999985794225194	WITHOUT_CLASSIFICATION	1.4205774806933122E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999116645855	WITHOUT_CLASSIFICATION	8.833541455648967E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998255590047	WITHOUT_CLASSIFICATION	1.744409952148426E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999957010054	WITHOUT_CLASSIFICATION	4.298994584694477E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995357486573	WITHOUT_CLASSIFICATION	4.642513426138678E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963192686054	WITHOUT_CLASSIFICATION	3.680731394590711E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997429564909	WITHOUT_CLASSIFICATION	2.570435091173942E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999992449812223	WITHOUT_CLASSIFICATION	7.550187776545914E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999512158778	WITHOUT_CLASSIFICATION	4.8784122192126066E-8	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999387789601	WITHOUT_CLASSIFICATION	6.122103983601584E-8	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999993476237704	WITHOUT_CLASSIFICATION	6.523762295140658E-7	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9999969256063698	WITHOUT_CLASSIFICATION	3.074393630253848E-6	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999999262720525	WITHOUT_CLASSIFICATION	7.372794756765897E-8	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999974680112244	WITHOUT_CLASSIFICATION	2.5319887756460076E-6	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.999998706016394	WITHOUT_CLASSIFICATION	1.2939836059579728E-6	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999999158777649	WITHOUT_CLASSIFICATION	8.41222350579234E-8	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.9999735410509539	WITHOUT_CLASSIFICATION	2.6458949046055776E-5	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999999882821217	WITHOUT_CLASSIFICATION	1.1717878426586585E-8	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.99999999427208	WITHOUT_CLASSIFICATION	5.72792001940614E-9	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999996160243702	WITHOUT_CLASSIFICATION	3.839756299342042E-7	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999977642787359	WITHOUT_CLASSIFICATION	2.235721264115206E-6	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9999968642966045	WITHOUT_CLASSIFICATION	3.1357033955418144E-6	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9999983550994942	WITHOUT_CLASSIFICATION	1.6449005057071914E-6	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999963395103155	WITHOUT_CLASSIFICATION	3.6604896845162977E-6	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9999875031773303	WITHOUT_CLASSIFICATION	1.2496822669683309E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9999967157237948	WITHOUT_CLASSIFICATION	3.2842762052456845E-6	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9999996611672282	WITHOUT_CLASSIFICATION	3.3883277194301974E-7	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999953683092918	WITHOUT_CLASSIFICATION	4.6316907080857585E-6	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.999997676563527	WITHOUT_CLASSIFICATION	2.323436472999763E-6	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999996129404	WITHOUT_CLASSIFICATION	3.870596194070183E-10	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9999460474007326	WITHOUT_CLASSIFICATION	5.395259926738502E-5	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9969893615230795	WITHOUT_CLASSIFICATION	0.0030106384769204133	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.999999587331648	WITHOUT_CLASSIFICATION	4.126683519970997E-7	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.999999983464377	WITHOUT_CLASSIFICATION	1.6535622951954636E-8	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.5909964429690897	DEFECT	0.40900355703091024	WITHOUT_CLASSIFICATION
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9986215574093694	WITHOUT_CLASSIFICATION	0.0013784425906306205	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9999982903908132	WITHOUT_CLASSIFICATION	1.7096091868278946E-6	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999999839987659	WITHOUT_CLASSIFICATION	1.6001234123315613E-8	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999999936385352	WITHOUT_CLASSIFICATION	6.361464836368182E-9	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999996960576988	WITHOUT_CLASSIFICATION	3.0394230126705105E-7	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999992706786707	WITHOUT_CLASSIFICATION	7.293213292343393E-7	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.999998537114227	WITHOUT_CLASSIFICATION	1.4628857730134026E-6	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.999905385111948	WITHOUT_CLASSIFICATION	9.46148880519142E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9999999889830109	WITHOUT_CLASSIFICATION	1.1016989120582482E-8	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999999803960856	WITHOUT_CLASSIFICATION	1.9603914349707787E-8	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999822641621838	WITHOUT_CLASSIFICATION	1.773583781611522E-5	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.9999991786848631	WITHOUT_CLASSIFICATION	8.213151368825074E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999991245550851	WITHOUT_CLASSIFICATION	8.754449149841442E-7	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.999999677812319	WITHOUT_CLASSIFICATION	3.221876809130968E-7	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999916672493008	WITHOUT_CLASSIFICATION	8.332750699276558E-6	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999997938558249	WITHOUT_CLASSIFICATION	2.0614417498887128E-7	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.999999165169955	WITHOUT_CLASSIFICATION	8.348300449575972E-7	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999986892210326	WITHOUT_CLASSIFICATION	1.310778967295876E-6	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999996464465211	WITHOUT_CLASSIFICATION	3.535534789035782E-7	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.99999772757427	WITHOUT_CLASSIFICATION	2.2724257301041215E-6	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9999999448171031	WITHOUT_CLASSIFICATION	5.518289697344454E-8	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999998985406751	WITHOUT_CLASSIFICATION	1.0145932499777455E-7	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999742502931419	WITHOUT_CLASSIFICATION	2.5749706858093187E-5	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.999999729192389	WITHOUT_CLASSIFICATION	2.7080761110988134E-7	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9992045969361361	WITHOUT_CLASSIFICATION	7.954030638640133E-4	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999989577783396	WITHOUT_CLASSIFICATION	1.0422216604041194E-6	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999863949097352	WITHOUT_CLASSIFICATION	1.3605090264920876E-5	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999996065716885	WITHOUT_CLASSIFICATION	3.93428311512329E-7	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999996579772652	WITHOUT_CLASSIFICATION	3.420227348286148E-7	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999998811508115	WITHOUT_CLASSIFICATION	1.188491884813803E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999986366063482	WITHOUT_CLASSIFICATION	1.36339365172104E-6	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999986366063482	WITHOUT_CLASSIFICATION	1.36339365172104E-6	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999999999927177	WITHOUT_CLASSIFICATION	7.282344549155837E-12	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999976261720456	WITHOUT_CLASSIFICATION	2.373827954493884E-6	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999997169018527	WITHOUT_CLASSIFICATION	2.830981472315247E-7	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.999999935212745	WITHOUT_CLASSIFICATION	6.478725490999022E-8	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.9999997333726804	WITHOUT_CLASSIFICATION	2.666273195297276E-7	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.9999795580975019	WITHOUT_CLASSIFICATION	2.0441902498105992E-5	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.9999999895893218	WITHOUT_CLASSIFICATION	1.0410678280099895E-8	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9999999121849314	WITHOUT_CLASSIFICATION	8.781506856331762E-8	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999999440229438	WITHOUT_CLASSIFICATION	5.5977056199326596E-8	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999892218720576	WITHOUT_CLASSIFICATION	1.0778127942323486E-5	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999999803346897	WITHOUT_CLASSIFICATION	1.9665310235429112E-8	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9978408132747885	WITHOUT_CLASSIFICATION	0.002159186725211517	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999968993136655	WITHOUT_CLASSIFICATION	3.1006863343492673E-6	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.999997874224572	WITHOUT_CLASSIFICATION	2.12577542801304E-6	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999999769792302	WITHOUT_CLASSIFICATION	2.3020769790256108E-8	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9998776737670182	WITHOUT_CLASSIFICATION	1.2232623298174264E-4	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.9999959663336995	WITHOUT_CLASSIFICATION	4.033666300580076E-6	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.9999999968070525	WITHOUT_CLASSIFICATION	3.192947427653934E-9	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.9999935496966931	WITHOUT_CLASSIFICATION	6.450303306877254E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9992924970570365	WITHOUT_CLASSIFICATION	7.075029429635273E-4	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999997210219572	WITHOUT_CLASSIFICATION	2.7897804284945416E-7	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999982655772439	WITHOUT_CLASSIFICATION	1.73442275600576E-6	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999999903820088	WITHOUT_CLASSIFICATION	9.617991198093824E-9	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999999928375631	WITHOUT_CLASSIFICATION	7.162436760373178E-9	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999999283026645	WITHOUT_CLASSIFICATION	7.169733551732672E-8	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999984817870528	WITHOUT_CLASSIFICATION	1.518212947260679E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999967609979086	WITHOUT_CLASSIFICATION	3.2390020913609227E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997987600838	WITHOUT_CLASSIFICATION	2.0123991613150973E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997987600838	WITHOUT_CLASSIFICATION	2.0123991613150973E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997987600838	WITHOUT_CLASSIFICATION	2.0123991613150973E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997987600838	WITHOUT_CLASSIFICATION	2.0123991613150973E-7	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999915804511053	WITHOUT_CLASSIFICATION	8.419548894740581E-6	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9999806714268539	WITHOUT_CLASSIFICATION	1.932857314616469E-5	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999974822252023	WITHOUT_CLASSIFICATION	2.5177747976251817E-6	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9992760971909639	WITHOUT_CLASSIFICATION	7.239028090361285E-4	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999991020151905	WITHOUT_CLASSIFICATION	8.979848095416457E-7	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.999997621661931	WITHOUT_CLASSIFICATION	2.3783380690522455E-6	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999988010198241	WITHOUT_CLASSIFICATION	1.1989801759047579E-6	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999999954560274	WITHOUT_CLASSIFICATION	4.5439726824602915E-9	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999992015682085	WITHOUT_CLASSIFICATION	7.984317915119944E-7	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.999999054843251	WITHOUT_CLASSIFICATION	9.451567490931973E-7	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999999996134179	WITHOUT_CLASSIFICATION	3.86582100662043E-10	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999998406388103	WITHOUT_CLASSIFICATION	1.5936118974089262E-7	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999993543011793	WITHOUT_CLASSIFICATION	6.45698820803489E-7	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.999997498238088	WITHOUT_CLASSIFICATION	2.5017619120450823E-6	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.999998234246933	WITHOUT_CLASSIFICATION	1.7657530669453424E-6	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999993780306738	WITHOUT_CLASSIFICATION	6.219693261660936E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999997600046895	WITHOUT_CLASSIFICATION	2.3999531058222394E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999997600046895	WITHOUT_CLASSIFICATION	2.3999531058222394E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998423827718	WITHOUT_CLASSIFICATION	1.5761722806734196E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998423827718	WITHOUT_CLASSIFICATION	1.5761722806734196E-7	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.999999891038713	WITHOUT_CLASSIFICATION	1.0896128698761809E-7	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9999590036393319	WITHOUT_CLASSIFICATION	4.099636066817151E-5	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999998975373519	WITHOUT_CLASSIFICATION	1.0246264817148432E-7	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999962511337037	WITHOUT_CLASSIFICATION	3.748866296357002E-6	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9999957210083594	WITHOUT_CLASSIFICATION	4.2789916406751515E-6	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999995213183698	WITHOUT_CLASSIFICATION	4.78681630220097E-7	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.9999998897371909	WITHOUT_CLASSIFICATION	1.1026280907541203E-7	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999999644738033	WITHOUT_CLASSIFICATION	3.552619666336743E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999975363719484	WITHOUT_CLASSIFICATION	2.4636280516053374E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999975363719484	WITHOUT_CLASSIFICATION	2.4636280516053374E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999947244603256	WITHOUT_CLASSIFICATION	5.27553967443428E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999947244603256	WITHOUT_CLASSIFICATION	5.27553967443428E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999999903495671	WITHOUT_CLASSIFICATION	9.650432998868648E-9	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999995798019505	WITHOUT_CLASSIFICATION	4.2019804947928473E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999995807600982	WITHOUT_CLASSIFICATION	4.192399017003773E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999995933217003	WITHOUT_CLASSIFICATION	4.0667829962017895E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999999170196828	WITHOUT_CLASSIFICATION	8.298031715836365E-8	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999999170196828	WITHOUT_CLASSIFICATION	8.298031715836365E-8	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999996768570307	WITHOUT_CLASSIFICATION	3.231429693697936E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999996768570307	WITHOUT_CLASSIFICATION	3.231429693697936E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999996865393003	WITHOUT_CLASSIFICATION	3.1346069972379325E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999996865393003	WITHOUT_CLASSIFICATION	3.1346069972379325E-7	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9999474545151823	WITHOUT_CLASSIFICATION	5.254548481782416E-5	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999999757280972	WITHOUT_CLASSIFICATION	2.427190286963769E-8	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.9999939894723097	WITHOUT_CLASSIFICATION	6.010527690353486E-6	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9999770611380951	WITHOUT_CLASSIFICATION	2.29388619048882E-5	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999978882342024	WITHOUT_CLASSIFICATION	2.1117657975314697E-6	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999999063225908	WITHOUT_CLASSIFICATION	9.36774091815674E-8	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999998478708638	WITHOUT_CLASSIFICATION	1.5212913615478208E-7	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9999947027669853	WITHOUT_CLASSIFICATION	5.297233014695696E-6	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9999999249183001	WITHOUT_CLASSIFICATION	7.508169990276073E-8	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999893982050043	WITHOUT_CLASSIFICATION	1.0601794995714385E-5	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999999700353914	WITHOUT_CLASSIFICATION	2.996460859624257E-8	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9999943421162689	WITHOUT_CLASSIFICATION	5.65788373106852E-6	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.99999798996022	WITHOUT_CLASSIFICATION	2.010039779918795E-6	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999999536238875	WITHOUT_CLASSIFICATION	4.6376112536743954E-8	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999987779536501	WITHOUT_CLASSIFICATION	1.2220463498618385E-6	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999746320109889	WITHOUT_CLASSIFICATION	2.536798901118289E-5	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999714310781895	WITHOUT_CLASSIFICATION	2.856892181041959E-5	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.999999378373479	WITHOUT_CLASSIFICATION	6.216265210134487E-7	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999999998192396	WITHOUT_CLASSIFICATION	1.8076033144897848E-10	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999955279296856	WITHOUT_CLASSIFICATION	4.472070314437187E-6	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999990796882633	WITHOUT_CLASSIFICATION	9.203117367425711E-7	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.999997946722968	WITHOUT_CLASSIFICATION	2.0532770319301816E-6	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999958682128508	WITHOUT_CLASSIFICATION	4.131787149244871E-6	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999992112214402	WITHOUT_CLASSIFICATION	7.887785597963156E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999755236283078	WITHOUT_CLASSIFICATION	2.4476371692195883E-5	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999999828340811	WITHOUT_CLASSIFICATION	1.7165918916059565E-8	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9993137875927834	WITHOUT_CLASSIFICATION	6.862124072166302E-4	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999496731552998	WITHOUT_CLASSIFICATION	5.032684470012519E-5	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9965731538427146	WITHOUT_CLASSIFICATION	0.0034268461572854003	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9999015711922289	WITHOUT_CLASSIFICATION	9.842880777119168E-5	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999999894221785	WITHOUT_CLASSIFICATION	1.057782141173356E-8	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999998537403496	WITHOUT_CLASSIFICATION	1.4625965047321604E-7	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.999997105424876	WITHOUT_CLASSIFICATION	2.89457512405765E-6	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.9999984817556359	WITHOUT_CLASSIFICATION	1.518244364150313E-6	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999998955247561	WITHOUT_CLASSIFICATION	1.0447524400390125E-7	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.999999991755722	WITHOUT_CLASSIFICATION	8.244277983574322E-9	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999998202260121	WITHOUT_CLASSIFICATION	1.7977398803018578E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999998373135914	WITHOUT_CLASSIFICATION	1.6268640854706023E-7	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999999823256867	WITHOUT_CLASSIFICATION	1.7674313315540655E-8	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999988859183611	WITHOUT_CLASSIFICATION	1.114081638862132E-6	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.999990017747632	WITHOUT_CLASSIFICATION	9.982252367943804E-6	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999996145855129	WITHOUT_CLASSIFICATION	3.854144871225446E-7	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999999969997988	WITHOUT_CLASSIFICATION	3.0002010885858236E-9	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999997986261233	WITHOUT_CLASSIFICATION	2.0137387678730938E-7	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999999969721038	WITHOUT_CLASSIFICATION	3.0278962281101965E-9	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.9999978923213421	WITHOUT_CLASSIFICATION	2.107678658022464E-6	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9826939085007478	WITHOUT_CLASSIFICATION	0.017306091499252156	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9999999642197381	WITHOUT_CLASSIFICATION	3.578026192091745E-8	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999992502319413	WITHOUT_CLASSIFICATION	7.49768058667685E-7	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999997519300443	WITHOUT_CLASSIFICATION	2.4806995571411216E-7	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999997451673287	WITHOUT_CLASSIFICATION	2.5483267138477685E-7	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999990336358977	WITHOUT_CLASSIFICATION	9.663641023157171E-7	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9990218866569232	WITHOUT_CLASSIFICATION	9.781133430767956E-4	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.980759262736328	WITHOUT_CLASSIFICATION	0.019240737263671967	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9997453786370809	WITHOUT_CLASSIFICATION	2.5462136291907886E-4	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.9999999819836419	WITHOUT_CLASSIFICATION	1.8016358129723264E-8	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.9998171126228643	WITHOUT_CLASSIFICATION	1.8288737713575986E-4	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999990916905775	WITHOUT_CLASSIFICATION	9.083094224685584E-7	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999999906185086	WITHOUT_CLASSIFICATION	9.381491353330714E-9	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999998760959846	WITHOUT_CLASSIFICATION	1.239040153932139E-7	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9999995269566047	WITHOUT_CLASSIFICATION	4.730433953677198E-7	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999999998779934	WITHOUT_CLASSIFICATION	1.22006584383637E-10	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999999489596592	WITHOUT_CLASSIFICATION	5.104034074752057E-8	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999998563544374	WITHOUT_CLASSIFICATION	1.4364556252768862E-7	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999996486242262	WITHOUT_CLASSIFICATION	3.513757738003311E-7	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9999289558810928	WITHOUT_CLASSIFICATION	7.104411890730598E-5	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999999910656536	WITHOUT_CLASSIFICATION	8.934346397381152E-9	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999982516042596	WITHOUT_CLASSIFICATION	1.7483957403940089E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999116645855	WITHOUT_CLASSIFICATION	8.833541455648967E-8	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9999869760135786	WITHOUT_CLASSIFICATION	1.3023986421392206E-5	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999995110622616	WITHOUT_CLASSIFICATION	4.889377384681811E-7	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999994606652	WITHOUT_CLASSIFICATION	5.393347971712487E-10	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999987805502807	WITHOUT_CLASSIFICATION	1.2194497193011094E-6	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.9999999150056269	WITHOUT_CLASSIFICATION	8.499437306943121E-8	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999999985214943	WITHOUT_CLASSIFICATION	1.4785055944636023E-9	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999826116401869	WITHOUT_CLASSIFICATION	1.7388359813190124E-5	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.9999998812323257	WITHOUT_CLASSIFICATION	1.1876767420858048E-7	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999990080197355	WITHOUT_CLASSIFICATION	9.919802644749565E-7	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9973705164487724	WITHOUT_CLASSIFICATION	0.0026294835512276366	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999997354879677	WITHOUT_CLASSIFICATION	2.6451203224205527E-7	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9999601910686744	WITHOUT_CLASSIFICATION	3.980893132563049E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998255590047	WITHOUT_CLASSIFICATION	1.744409952148426E-7	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999987947927252	WITHOUT_CLASSIFICATION	1.2052072747521981E-6	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9999999999999883	WITHOUT_CLASSIFICATION	1.1726274016130823E-14	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.999635573007324	WITHOUT_CLASSIFICATION	3.644269926759765E-4	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.999999935696674	WITHOUT_CLASSIFICATION	6.43033259989487E-8	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999999783841983	WITHOUT_CLASSIFICATION	2.1615801774552056E-8	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9999201450668422	WITHOUT_CLASSIFICATION	7.985493315770683E-5	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.999993894594791	WITHOUT_CLASSIFICATION	6.105405208969028E-6	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999995476899559	WITHOUT_CLASSIFICATION	4.5231004413804303E-7	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999901525886328	WITHOUT_CLASSIFICATION	9.847411367242662E-6	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9999999998393422	WITHOUT_CLASSIFICATION	1.606578695113152E-10	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999950529896907	WITHOUT_CLASSIFICATION	4.947010309268569E-6	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9996702075442337	WITHOUT_CLASSIFICATION	3.297924557663069E-4	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9999961997896296	WITHOUT_CLASSIFICATION	3.800210370330074E-6	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.99999939050462	WITHOUT_CLASSIFICATION	6.094953801021206E-7	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999993484810162	WITHOUT_CLASSIFICATION	6.515189838586222E-7	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999988166925341	WITHOUT_CLASSIFICATION	1.1833074659475512E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999998886242868	WITHOUT_CLASSIFICATION	1.1137571325078893E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999982665878671	WITHOUT_CLASSIFICATION	1.7334121328389558E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.999998457791454	WITHOUT_CLASSIFICATION	1.5422085459194087E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.999998457791454	WITHOUT_CLASSIFICATION	1.5422085459194087E-6	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999998589687218	WITHOUT_CLASSIFICATION	1.4103127827948134E-7	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.999999898167405	WITHOUT_CLASSIFICATION	1.0183259509111372E-7	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999998367363324	WITHOUT_CLASSIFICATION	1.6326366767520893E-7	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999998728117432	WITHOUT_CLASSIFICATION	1.271882567126608E-7	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999999881012145	WITHOUT_CLASSIFICATION	1.1898785456138458E-8	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999999393809075	WITHOUT_CLASSIFICATION	6.061909254789325E-8	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9999991290509723	WITHOUT_CLASSIFICATION	8.709490276449487E-7	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999991733830741	WITHOUT_CLASSIFICATION	8.266169259270743E-7	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999981741291274	WITHOUT_CLASSIFICATION	1.8258708726923713E-6	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9999998341253258	WITHOUT_CLASSIFICATION	1.6587467428819312E-7	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999999554613078	WITHOUT_CLASSIFICATION	4.453869209512543E-8	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999999988965652	WITHOUT_CLASSIFICATION	1.1034348133068916E-9	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999993130307073	WITHOUT_CLASSIFICATION	6.869692927101321E-7	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.999999112324656	WITHOUT_CLASSIFICATION	8.876753440822938E-7	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.999997546462866	WITHOUT_CLASSIFICATION	2.4535371341131544E-6	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999993791951808	WITHOUT_CLASSIFICATION	6.208048192759761E-7	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999998758439178	WITHOUT_CLASSIFICATION	1.241560822759164E-7	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9999856120555416	WITHOUT_CLASSIFICATION	1.4387944458344229E-5	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.9999998906865485	WITHOUT_CLASSIFICATION	1.093134515098251E-7	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.999999448894164	WITHOUT_CLASSIFICATION	5.511058359013802E-7	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999998348959136	WITHOUT_CLASSIFICATION	1.6510408641359702E-7	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999950663984779	WITHOUT_CLASSIFICATION	4.933601522127208E-6	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999978804097185	WITHOUT_CLASSIFICATION	2.1195902813953355E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999999744410757	WITHOUT_CLASSIFICATION	2.5558924394828827E-8	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999987093706326	WITHOUT_CLASSIFICATION	1.2906293674076025E-6	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999999762287	WITHOUT_CLASSIFICATION	2.3771300030213233E-8	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999993404887858	WITHOUT_CLASSIFICATION	6.595112141700223E-7	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9999996541746693	WITHOUT_CLASSIFICATION	3.4582533070917486E-7	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999998925106295	WITHOUT_CLASSIFICATION	1.0748937051535847E-7	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.999999769986227	WITHOUT_CLASSIFICATION	2.30013773123336E-7	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9999982556787808	WITHOUT_CLASSIFICATION	1.7443212193313762E-6	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.99999785752427	WITHOUT_CLASSIFICATION	2.142475729989351E-6	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999835169806939	WITHOUT_CLASSIFICATION	1.6483019306147438E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999971270822415	WITHOUT_CLASSIFICATION	2.872917758492709E-6	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.9999941401555087	WITHOUT_CLASSIFICATION	5.859844491306043E-6	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.999992928703103	WITHOUT_CLASSIFICATION	7.0712968970501025E-6	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.9999913661010364	WITHOUT_CLASSIFICATION	8.633898963575833E-6	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999998925106295	WITHOUT_CLASSIFICATION	1.0748937051535847E-7	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.999999945471514	WITHOUT_CLASSIFICATION	5.452848600485366E-8	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999993181922783	WITHOUT_CLASSIFICATION	6.818077218271913E-7	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999994317132371	WITHOUT_CLASSIFICATION	5.682867628975936E-7	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.9999328828317176	WITHOUT_CLASSIFICATION	6.711716828240823E-5	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999886693582337	WITHOUT_CLASSIFICATION	1.1330641766239404E-5	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999956339454003	WITHOUT_CLASSIFICATION	4.366054599739008E-6	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999988217247373	WITHOUT_CLASSIFICATION	1.1782752627329629E-6	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9999937602680439	WITHOUT_CLASSIFICATION	6.239731956157339E-6	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999994667034531	WITHOUT_CLASSIFICATION	5.332965468578981E-7	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999998023864431	WITHOUT_CLASSIFICATION	1.9761355682143708E-7	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999980937158056	WITHOUT_CLASSIFICATION	1.906284194476084E-6	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999995516966482	WITHOUT_CLASSIFICATION	4.4830335180024644E-7	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999996887463776	WITHOUT_CLASSIFICATION	3.112536224900609E-7	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.999983769368399	WITHOUT_CLASSIFICATION	1.6230631600981194E-5	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.999999245731139	WITHOUT_CLASSIFICATION	7.542688609947833E-7	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9998753538312424	WITHOUT_CLASSIFICATION	1.2464616875759556E-4	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9998753538312424	WITHOUT_CLASSIFICATION	1.2464616875759556E-4	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9965076119813361	WITHOUT_CLASSIFICATION	0.003492388018663997	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9992553747240834	WITHOUT_CLASSIFICATION	7.446252759165446E-4	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999844658165421	WITHOUT_CLASSIFICATION	1.55341834579215E-5	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.9999858358885714	WITHOUT_CLASSIFICATION	1.416411142872127E-5	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999999971800031	WITHOUT_CLASSIFICATION	2.819996883704348E-9	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.999999243838227	WITHOUT_CLASSIFICATION	7.561617728719176E-7	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.999997985313855	WITHOUT_CLASSIFICATION	2.0146861449958084E-6	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999938983608356	WITHOUT_CLASSIFICATION	6.101639164366157E-6	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9998448422247431	WITHOUT_CLASSIFICATION	1.551577752568743E-4	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999991525935281	WITHOUT_CLASSIFICATION	8.47406471962497E-7	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999998605494076	WITHOUT_CLASSIFICATION	1.3945059236182817E-7	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9986490020933406	WITHOUT_CLASSIFICATION	0.0013509979066594355	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999999864245	WITHOUT_CLASSIFICATION	1.357550798391629E-11	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999981145473702	WITHOUT_CLASSIFICATION	1.885452629866543E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999981145473702	WITHOUT_CLASSIFICATION	1.885452629866543E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9999844658165421	WITHOUT_CLASSIFICATION	1.55341834579215E-5	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999998605494076	WITHOUT_CLASSIFICATION	1.3945059236182817E-7	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999984334128785	WITHOUT_CLASSIFICATION	1.5665871214964398E-6	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9996957962493868	WITHOUT_CLASSIFICATION	3.042037506132976E-4	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9996950397970298	WITHOUT_CLASSIFICATION	3.049602029702088E-4	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9999608552733863	WITHOUT_CLASSIFICATION	3.914472661364465E-5	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9997716401058656	WITHOUT_CLASSIFICATION	2.283598941343607E-4	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999974933412	WITHOUT_CLASSIFICATION	2.506658800025418E-6	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9998798801227905	WITHOUT_CLASSIFICATION	1.2011987720950388E-4	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999999736994913	WITHOUT_CLASSIFICATION	2.630050861810941E-8	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.999999999697999	WITHOUT_CLASSIFICATION	3.020009352165369E-10	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.9999988975020814	WITHOUT_CLASSIFICATION	1.1024979186315468E-6	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9998930824907322	WITHOUT_CLASSIFICATION	1.0691750926794054E-4	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9994201248825253	WITHOUT_CLASSIFICATION	5.798751174746939E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9999937182598777	WITHOUT_CLASSIFICATION	6.281740122312216E-6	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999937183970377	WITHOUT_CLASSIFICATION	6.281602962299988E-6	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.9999988209015526	WITHOUT_CLASSIFICATION	1.1790984475254737E-6	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9999974481849161	WITHOUT_CLASSIFICATION	2.551815083963171E-6	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999950051762422	WITHOUT_CLASSIFICATION	4.994823757874595E-6	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999993967080875	WITHOUT_CLASSIFICATION	6.032919124698711E-7	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999979610490636	WITHOUT_CLASSIFICATION	2.0389509363897755E-6	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999999563797087	WITHOUT_CLASSIFICATION	4.362029134672372E-8	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9942828277791219	WITHOUT_CLASSIFICATION	0.005717172220877989	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9999997619600127	WITHOUT_CLASSIFICATION	2.3803998725366467E-7	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.9929653599880645	WITHOUT_CLASSIFICATION	0.007034640011935468	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9999944490331789	WITHOUT_CLASSIFICATION	5.550966821123098E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999999293538	WITHOUT_CLASSIFICATION	7.064616686646726E-11	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998834329714	WITHOUT_CLASSIFICATION	1.1656702863317452E-7	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.999999778282464	WITHOUT_CLASSIFICATION	2.2171753596209838E-7	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999907304731549	WITHOUT_CLASSIFICATION	9.26952684505802E-6	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999999605362161	WITHOUT_CLASSIFICATION	3.946378391297786E-8	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.9999997149038475	WITHOUT_CLASSIFICATION	2.850961524681263E-7	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.999819668666211	WITHOUT_CLASSIFICATION	1.8033133378905425E-4	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999996803319507	WITHOUT_CLASSIFICATION	3.1966804923038017E-7	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999999913779781	WITHOUT_CLASSIFICATION	8.622021854664427E-9	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999999936962456	WITHOUT_CLASSIFICATION	6.303754416460252E-9	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999999887865497	WITHOUT_CLASSIFICATION	1.1213450381189645E-8	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999898794703186	WITHOUT_CLASSIFICATION	1.0120529681349237E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999999913129359	WITHOUT_CLASSIFICATION	8.687064068708025E-9	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999999977727699	WITHOUT_CLASSIFICATION	2.227229984415538E-9	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999999740438368	WITHOUT_CLASSIFICATION	2.5956163284833496E-8	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999999914079114	WITHOUT_CLASSIFICATION	8.592088639226503E-9	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.9999999840935706	WITHOUT_CLASSIFICATION	1.590642943049887E-8	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999999933249687	WITHOUT_CLASSIFICATION	6.675031343454788E-9	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999990055095183	WITHOUT_CLASSIFICATION	9.944904817346633E-7	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999999890897094	WITHOUT_CLASSIFICATION	1.0910290557002382E-8	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.9999895706382799	WITHOUT_CLASSIFICATION	1.0429361720221206E-5	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999960427849098	WITHOUT_CLASSIFICATION	3.957215090185717E-6	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9999902630591996	WITHOUT_CLASSIFICATION	9.736940800382929E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999957010054	WITHOUT_CLASSIFICATION	4.298994584694477E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995357486573	WITHOUT_CLASSIFICATION	4.642513426138678E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963192686054	WITHOUT_CLASSIFICATION	3.680731394590711E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997429564909	WITHOUT_CLASSIFICATION	2.570435091173942E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999999970143968	WITHOUT_CLASSIFICATION	2.9856030658076716E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999999977372644	WITHOUT_CLASSIFICATION	2.2627355158924683E-9	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999992449812223	WITHOUT_CLASSIFICATION	7.550187776545914E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999512158778	WITHOUT_CLASSIFICATION	4.8784122192126066E-8	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999935388272457	WITHOUT_CLASSIFICATION	6.461172754255084E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999387789601	WITHOUT_CLASSIFICATION	6.122103983601584E-8	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999984966459036	WITHOUT_CLASSIFICATION	1.5033540964145904E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999955347052939	WITHOUT_CLASSIFICATION	4.465294706058334E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999809883724026	WITHOUT_CLASSIFICATION	1.901162759741038E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999892688639	WITHOUT_CLASSIFICATION	1.0731136037542756E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999991998288007	WITHOUT_CLASSIFICATION	8.001711992210335E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999996708973486	WITHOUT_CLASSIFICATION	3.291026513558617E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999955584168	WITHOUT_CLASSIFICATION	4.4415832408557074E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999995889983115	WITHOUT_CLASSIFICATION	4.1100168848735856E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999988633778055	WITHOUT_CLASSIFICATION	1.1366221944627103E-6	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999506684336434	WITHOUT_CLASSIFICATION	4.933156635649883E-5	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9999805744716886	WITHOUT_CLASSIFICATION	1.9425528311342585E-5	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.999989396607047	WITHOUT_CLASSIFICATION	1.0603392952940388E-5	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.999963733729423	WITHOUT_CLASSIFICATION	3.626627057696735E-5	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999981868494103	WITHOUT_CLASSIFICATION	1.8131505897207842E-6	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999981868494103	WITHOUT_CLASSIFICATION	1.8131505897207842E-6	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999865283829976	WITHOUT_CLASSIFICATION	1.347161700248852E-5	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999873402464415	WITHOUT_CLASSIFICATION	1.2659753558432602E-5	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9999927745135122	WITHOUT_CLASSIFICATION	7.225486487799345E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999925621962125	WITHOUT_CLASSIFICATION	7.437803787617346E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999925621962125	WITHOUT_CLASSIFICATION	7.437803787617346E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999925621962125	WITHOUT_CLASSIFICATION	7.437803787617346E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999854638003237	WITHOUT_CLASSIFICATION	1.4536199676319476E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999784719963	WITHOUT_CLASSIFICATION	2.1528003662910828E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998979850951	WITHOUT_CLASSIFICATION	1.0201490487803748E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995301441714	WITHOUT_CLASSIFICATION	4.6985582861924954E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999434289609	WITHOUT_CLASSIFICATION	5.657103908174705E-8	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999985794225194	WITHOUT_CLASSIFICATION	1.4205774806933122E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999999928935	WITHOUT_CLASSIFICATION	7.106533500167354E-12	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999998834329714	WITHOUT_CLASSIFICATION	1.1656702863317452E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999999116645855	WITHOUT_CLASSIFICATION	8.833541455648967E-8	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998255590047	WITHOUT_CLASSIFICATION	1.744409952148426E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999957010054	WITHOUT_CLASSIFICATION	4.298994584694477E-9	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995357486573	WITHOUT_CLASSIFICATION	4.642513426138678E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963192686054	WITHOUT_CLASSIFICATION	3.680731394590711E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999997429564909	WITHOUT_CLASSIFICATION	2.570435091173942E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999999512158778	WITHOUT_CLASSIFICATION	4.8784122192126066E-8	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.9999955347052939	WITHOUT_CLASSIFICATION	4.465294706058334E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999809883724026	WITHOUT_CLASSIFICATION	1.901162759741038E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999892688639	WITHOUT_CLASSIFICATION	1.0731136037542756E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999677158812	WITHOUT_CLASSIFICATION	3.228411885434022E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999883127266	WITHOUT_CLASSIFICATION	1.1687273353408111E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999965843025186	WITHOUT_CLASSIFICATION	3.4156974813507646E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999999887361261	WITHOUT_CLASSIFICATION	1.1263873909420461E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999181829729781	WITHOUT_CLASSIFICATION	8.181702702189941E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999955908377584	WITHOUT_CLASSIFICATION	4.409162241683959E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999765896932244	WITHOUT_CLASSIFICATION	2.341030677548888E-5	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999966055541535	WITHOUT_CLASSIFICATION	3.3944458466063982E-6	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9999446684101952	WITHOUT_CLASSIFICATION	5.5331589804718434E-5	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9999204232714914	WITHOUT_CLASSIFICATION	7.957672850846041E-5	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9995931708008283	WITHOUT_CLASSIFICATION	4.068291991717093E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9999130022790276	WITHOUT_CLASSIFICATION	8.699772097245022E-5	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999998194820136	WITHOUT_CLASSIFICATION	1.8051798637985497E-7	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.9999999538797398	WITHOUT_CLASSIFICATION	4.6120260158837E-8	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9999387840007202	WITHOUT_CLASSIFICATION	6.121599927976865E-5	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999865678392095	WITHOUT_CLASSIFICATION	1.3432160790489609E-5	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.999913342589254	WITHOUT_CLASSIFICATION	8.665741074597797E-5	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9998969444378687	WITHOUT_CLASSIFICATION	1.0305556213135093E-4	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9997350417677173	WITHOUT_CLASSIFICATION	2.6495823228271E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.9999965256162708	WITHOUT_CLASSIFICATION	3.474383729217936E-6	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999990786834324	WITHOUT_CLASSIFICATION	9.213165675257882E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999984966459036	WITHOUT_CLASSIFICATION	1.5033540964145904E-6	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999955584168	WITHOUT_CLASSIFICATION	4.4415832408557074E-9	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999995889983115	WITHOUT_CLASSIFICATION	4.1100168848735856E-7	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999988633778055	WITHOUT_CLASSIFICATION	1.1366221944627103E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999999883127266	WITHOUT_CLASSIFICATION	1.1687273353408111E-8	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999965843025186	WITHOUT_CLASSIFICATION	3.4156974813507646E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.999999887361261	WITHOUT_CLASSIFICATION	1.1263873909420461E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9999181829729781	WITHOUT_CLASSIFICATION	8.181702702189941E-5	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999955908377584	WITHOUT_CLASSIFICATION	4.409162241683959E-6	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.999999989585115	WITHOUT_CLASSIFICATION	1.0414884949133459E-8	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9918334019365788	WITHOUT_CLASSIFICATION	0.008166598063421232	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999945557263215	WITHOUT_CLASSIFICATION	5.444273678515934E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999937916505726	WITHOUT_CLASSIFICATION	6.208349427496624E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999937916505726	WITHOUT_CLASSIFICATION	6.208349427496624E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999937916505726	WITHOUT_CLASSIFICATION	6.208349427496624E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999937916505726	WITHOUT_CLASSIFICATION	6.208349427496624E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.9999937916505726	WITHOUT_CLASSIFICATION	6.208349427496624E-6	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.999989575233781	WITHOUT_CLASSIFICATION	1.0424766219018003E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999171440493	WITHOUT_CLASSIFICATION	8.28559507064521E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999171440493	WITHOUT_CLASSIFICATION	8.28559507064521E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999171440493	WITHOUT_CLASSIFICATION	8.28559507064521E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999171440493	WITHOUT_CLASSIFICATION	8.28559507064521E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999171440493	WITHOUT_CLASSIFICATION	8.28559507064521E-8	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999999171440493	WITHOUT_CLASSIFICATION	8.28559507064521E-8	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999995963189129	WITHOUT_CLASSIFICATION	4.0368108707466225E-7	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9999863717830776	WITHOUT_CLASSIFICATION	1.3628216922387436E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999581799718	WITHOUT_CLASSIFICATION	4.1820028202747734E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999581799718	WITHOUT_CLASSIFICATION	4.1820028202747734E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999581799718	WITHOUT_CLASSIFICATION	4.1820028202747734E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999581799718	WITHOUT_CLASSIFICATION	4.1820028202747734E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999581799718	WITHOUT_CLASSIFICATION	4.1820028202747734E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999581799718	WITHOUT_CLASSIFICATION	4.1820028202747734E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999581799718	WITHOUT_CLASSIFICATION	4.1820028202747734E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999999581799718	WITHOUT_CLASSIFICATION	4.1820028202747734E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999991041455921	WITHOUT_CLASSIFICATION	8.958544078549491E-7	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.9999996627728369	WITHOUT_CLASSIFICATION	3.3722716306712687E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999996793378617	WITHOUT_CLASSIFICATION	3.206621383328295E-7	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.999992734764099	WITHOUT_CLASSIFICATION	7.265235900909566E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999975363719484	WITHOUT_CLASSIFICATION	2.4636280516053374E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999975363719484	WITHOUT_CLASSIFICATION	2.4636280516053374E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.9999975363719484	WITHOUT_CLASSIFICATION	2.4636280516053374E-6	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999968431354864	WITHOUT_CLASSIFICATION	3.1568645136823347E-6	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.9999500663904433	WITHOUT_CLASSIFICATION	4.993360955678066E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999261332520168	WITHOUT_CLASSIFICATION	7.386674798310755E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999193665435212	WITHOUT_CLASSIFICATION	8.063345647876234E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999193665435212	WITHOUT_CLASSIFICATION	8.063345647876234E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.999999643757119	WITHOUT_CLASSIFICATION	3.5624288100506254E-7	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9999193665435212	WITHOUT_CLASSIFICATION	8.063345647876234E-5	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999959180347032	WITHOUT_CLASSIFICATION	4.081965296713563E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.99998234698872	WITHOUT_CLASSIFICATION	1.7653011280023843E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999976196566912	WITHOUT_CLASSIFICATION	2.3803433087157207E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999976492187237	WITHOUT_CLASSIFICATION	2.3507812763725724E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999976492187237	WITHOUT_CLASSIFICATION	2.3507812763725724E-6	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9999996975171876	WITHOUT_CLASSIFICATION	3.0248281246331297E-7	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999875396795544	WITHOUT_CLASSIFICATION	1.2460320445504408E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999859892914634	WITHOUT_CLASSIFICATION	1.4010708536715195E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999859892914634	WITHOUT_CLASSIFICATION	1.4010708536715195E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999859892914634	WITHOUT_CLASSIFICATION	1.4010708536715195E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9998417224345055	WITHOUT_CLASSIFICATION	1.5827756549441178E-4	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9999853266164153	WITHOUT_CLASSIFICATION	1.4673383584691637E-5	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.9999953820914071	WITHOUT_CLASSIFICATION	4.617908592844484E-6	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999997462003085	WITHOUT_CLASSIFICATION	2.5379969139935126E-7	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9999988879179844	WITHOUT_CLASSIFICATION	1.1120820155976503E-6	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999969887980729	WITHOUT_CLASSIFICATION	3.0112019271363956E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999861280025764	WITHOUT_CLASSIFICATION	1.3871997423666782E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.999999553086191	WITHOUT_CLASSIFICATION	4.4691380899355055E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999861280025764	WITHOUT_CLASSIFICATION	1.3871997423666782E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999854638003237	WITHOUT_CLASSIFICATION	1.4536199676319476E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999925621962125	WITHOUT_CLASSIFICATION	7.437803787617346E-6	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999999707353714	WITHOUT_CLASSIFICATION	2.9264628574404476E-8	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999911237358937	WITHOUT_CLASSIFICATION	8.876264106288952E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999838095814109	WITHOUT_CLASSIFICATION	1.6190418589072576E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999875451454802	WITHOUT_CLASSIFICATION	1.2454854519747842E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999854638003237	WITHOUT_CLASSIFICATION	1.4536199676319476E-5	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999675499268369	WITHOUT_CLASSIFICATION	3.245007316316339E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.999998754444017	WITHOUT_CLASSIFICATION	1.2455559830238777E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999997987600838	WITHOUT_CLASSIFICATION	2.0123991613150973E-7	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999940335465802	WITHOUT_CLASSIFICATION	5.966453419785371E-6	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999869247455766	WITHOUT_CLASSIFICATION	1.3075254423399547E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999869247455766	WITHOUT_CLASSIFICATION	1.3075254423399547E-5	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999974157969409	WITHOUT_CLASSIFICATION	2.5842030590643113E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999999999990431	WITHOUT_CLASSIFICATION	9.568857295018933E-13	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999999978141	WITHOUT_CLASSIFICATION	2.1858530566334466E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999999999744912	WITHOUT_CLASSIFICATION	2.5508796573074254E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999898267	WITHOUT_CLASSIFICATION	1.017333220240497E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999999980613	WITHOUT_CLASSIFICATION	1.93873139388918E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.999999999995301	WITHOUT_CLASSIFICATION	4.699022749234708E-12	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999995096458181	WITHOUT_CLASSIFICATION	4.903541819017456E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999995380443013	WITHOUT_CLASSIFICATION	4.6195569867808714E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999716018988	WITHOUT_CLASSIFICATION	2.839810129934515E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999073658494	WITHOUT_CLASSIFICATION	9.263415052434431E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999962599867	WITHOUT_CLASSIFICATION	3.740013380084941E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999999351729	WITHOUT_CLASSIFICATION	6.482710066885504E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999984113704	WITHOUT_CLASSIFICATION	1.5886295455122747E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999654273469	WITHOUT_CLASSIFICATION	3.4572653050616015E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999948864	WITHOUT_CLASSIFICATION	5.113584475435834E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999942687	WITHOUT_CLASSIFICATION	5.731246929809416E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999999899253	WITHOUT_CLASSIFICATION	1.0074858817894796E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999999322144	WITHOUT_CLASSIFICATION	6.778564181796493E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999999715018	WITHOUT_CLASSIFICATION	2.849829423361579E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999999996855	WITHOUT_CLASSIFICATION	3.1448058112615174E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999878035	WITHOUT_CLASSIFICATION	1.2196501001615471E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999948864	WITHOUT_CLASSIFICATION	5.113584475435834E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999999168727	WITHOUT_CLASSIFICATION	8.312734577593147E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999948199	WITHOUT_CLASSIFICATION	5.180066670300706E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999999876449	WITHOUT_CLASSIFICATION	1.2355068863386094E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999999913559	WITHOUT_CLASSIFICATION	8.644081882000423E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999964186	WITHOUT_CLASSIFICATION	3.581275650631162E-12	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999451517	WITHOUT_CLASSIFICATION	5.484843425162498E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999999999891942	WITHOUT_CLASSIFICATION	1.0805882447045302E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999999862313	WITHOUT_CLASSIFICATION	1.3768638446383741E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999999905665	WITHOUT_CLASSIFICATION	9.43350275437939E-12	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999970263098898	WITHOUT_CLASSIFICATION	2.9736901101171437E-6	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.9999970263098898	WITHOUT_CLASSIFICATION	2.9736901101171437E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999999996855	WITHOUT_CLASSIFICATION	3.1448058112615174E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999999999837209	WITHOUT_CLASSIFICATION	1.6279094030829246E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999996427	WITHOUT_CLASSIFICATION	3.5733880212106207E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999999999595526	WITHOUT_CLASSIFICATION	4.044752663815161E-11	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999999999813529	WITHOUT_CLASSIFICATION	1.8647072960332762E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.999999999724385	WITHOUT_CLASSIFICATION	2.7561503046601103E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999955257093	WITHOUT_CLASSIFICATION	4.474290702102122E-9	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999999440561856	WITHOUT_CLASSIFICATION	5.594381429261263E-8	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999999924111884	WITHOUT_CLASSIFICATION	7.588811527707677E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999972381614	WITHOUT_CLASSIFICATION	2.761838731977498E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999510481561	WITHOUT_CLASSIFICATION	4.895184402576665E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999999550278	WITHOUT_CLASSIFICATION	4.4972334392253594E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999176018101	WITHOUT_CLASSIFICATION	8.239819004133144E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999974487859	WITHOUT_CLASSIFICATION	2.5512140003965115E-9	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999999999984533	WITHOUT_CLASSIFICATION	1.54661709493917E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999999928935	WITHOUT_CLASSIFICATION	7.106533500167354E-12	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999998778	WITHOUT_CLASSIFICATION	1.22157723562985E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999999999772129	WITHOUT_CLASSIFICATION	2.2787208112837268E-11	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999996738978633	WITHOUT_CLASSIFICATION	3.2610213676695176E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999797133484	WITHOUT_CLASSIFICATION	2.0286651545454813E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999998778	WITHOUT_CLASSIFICATION	1.22157723562985E-13	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999999995884064	WITHOUT_CLASSIFICATION	4.115937272510813E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999633229	WITHOUT_CLASSIFICATION	3.667714871186272E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999999337593	WITHOUT_CLASSIFICATION	6.624069956388651E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999999997321524	WITHOUT_CLASSIFICATION	2.678477092134304E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999999994616418	WITHOUT_CLASSIFICATION	5.383582233686055E-10	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999812267761143	WITHOUT_CLASSIFICATION	1.8773223885657868E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999812267761143	WITHOUT_CLASSIFICATION	1.8773223885657868E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999812267761143	WITHOUT_CLASSIFICATION	1.8773223885657868E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999812267761143	WITHOUT_CLASSIFICATION	1.8773223885657868E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999812267761143	WITHOUT_CLASSIFICATION	1.8773223885657868E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999812267761143	WITHOUT_CLASSIFICATION	1.8773223885657868E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999996694047545	WITHOUT_CLASSIFICATION	3.3059524556282636E-7	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999994320082382	WITHOUT_CLASSIFICATION	5.679917618302179E-7	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.99992901525907	WITHOUT_CLASSIFICATION	7.09847409300841E-5	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.999998111475885	WITHOUT_CLASSIFICATION	1.888524115043089E-6	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999999948978601	WITHOUT_CLASSIFICATION	5.102139931380883E-9	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9999987092010574	WITHOUT_CLASSIFICATION	1.2907989425550388E-6	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999996129404	WITHOUT_CLASSIFICATION	3.870596194070183E-10	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.999998531887563	WITHOUT_CLASSIFICATION	1.4681124370192146E-6	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9969745616393102	WITHOUT_CLASSIFICATION	0.0030254383606897303	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999869047197169	WITHOUT_CLASSIFICATION	1.3095280283115016E-5	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999999398012649	WITHOUT_CLASSIFICATION	6.019873511903559E-8	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999207544161369	WITHOUT_CLASSIFICATION	7.92455838629779E-5	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999999938134764	WITHOUT_CLASSIFICATION	6.186523539394156E-9	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.9999998144329586	WITHOUT_CLASSIFICATION	1.8556704136428338E-7	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999999561662881	WITHOUT_CLASSIFICATION	4.3833711867424416E-8	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999998949883223	WITHOUT_CLASSIFICATION	1.0501167766193476E-7	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999994567383471	WITHOUT_CLASSIFICATION	5.432616529708932E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998818806158	WITHOUT_CLASSIFICATION	1.18119384187673E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998818806158	WITHOUT_CLASSIFICATION	1.18119384187673E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999998818806158	WITHOUT_CLASSIFICATION	1.18119384187673E-7	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999999903820088	WITHOUT_CLASSIFICATION	9.617991198093824E-9	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999991638508227	WITHOUT_CLASSIFICATION	8.361491772532082E-7	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9999998876503872	WITHOUT_CLASSIFICATION	1.1234961289112705E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999784719963	WITHOUT_CLASSIFICATION	2.1528003662910828E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999784719963	WITHOUT_CLASSIFICATION	2.1528003662910828E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999784719963	WITHOUT_CLASSIFICATION	2.1528003662910828E-8	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.9845442767651382	WITHOUT_CLASSIFICATION	0.015455723234861708	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998979850951	WITHOUT_CLASSIFICATION	1.0201490487803748E-7	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999999998988391	WITHOUT_CLASSIFICATION	1.011608392887555E-10	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995301441714	WITHOUT_CLASSIFICATION	4.6985582861924954E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999995301441714	WITHOUT_CLASSIFICATION	4.6985582861924954E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9999755236283078	WITHOUT_CLASSIFICATION	2.4476371692195883E-5	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999434289609	WITHOUT_CLASSIFICATION	5.657103908174705E-8	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999434289609	WITHOUT_CLASSIFICATION	5.657103908174705E-8	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.9999999434289609	WITHOUT_CLASSIFICATION	5.657103908174705E-8	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9996277727025786	WITHOUT_CLASSIFICATION	3.722272974212819E-4	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999998746161787	WITHOUT_CLASSIFICATION	1.2538382127536254E-7	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999999841908378	WITHOUT_CLASSIFICATION	1.5809162228302595E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999861280025764	WITHOUT_CLASSIFICATION	1.3871997423666782E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999861280025764	WITHOUT_CLASSIFICATION	1.3871997423666782E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999832666184366	WITHOUT_CLASSIFICATION	1.673338156346358E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999985794225194	WITHOUT_CLASSIFICATION	1.4205774806933122E-6	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999985794225194	WITHOUT_CLASSIFICATION	1.4205774806933122E-6	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.999997105424876	WITHOUT_CLASSIFICATION	2.89457512405765E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999957010054	WITHOUT_CLASSIFICATION	4.298994584694477E-9	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.9999999957010054	WITHOUT_CLASSIFICATION	4.298994584694477E-9	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9996764578807947	WITHOUT_CLASSIFICATION	3.2354211920531404E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995357486573	WITHOUT_CLASSIFICATION	4.642513426138678E-7	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9999949908301988	WITHOUT_CLASSIFICATION	5.00916980116817E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999963192686054	WITHOUT_CLASSIFICATION	3.680731394590711E-6	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999999939590375	WITHOUT_CLASSIFICATION	6.040962518561627E-9	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999861280025764	WITHOUT_CLASSIFICATION	1.3871997423666782E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999925621962125	WITHOUT_CLASSIFICATION	7.437803787617346E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999992449812223	WITHOUT_CLASSIFICATION	7.550187776545914E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999992449812223	WITHOUT_CLASSIFICATION	7.550187776545914E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999992449812223	WITHOUT_CLASSIFICATION	7.550187776545914E-7	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.999999965203424	WITHOUT_CLASSIFICATION	3.4796575982149986E-8	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999991722020348	WITHOUT_CLASSIFICATION	8.277979651019252E-7	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999988583710382	WITHOUT_CLASSIFICATION	1.1416289618249056E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999995703649535	WITHOUT_CLASSIFICATION	4.2963504662438843E-7	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999995703649535	WITHOUT_CLASSIFICATION	4.2963504662438843E-7	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.999999757968961	WITHOUT_CLASSIFICATION	2.4203103897913526E-7	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999739651924644	WITHOUT_CLASSIFICATION	2.6034807535579633E-5	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999999924121362	WITHOUT_CLASSIFICATION	7.587863847107858E-9	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999994030863657	WITHOUT_CLASSIFICATION	5.969136342121711E-7	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999998886242868	WITHOUT_CLASSIFICATION	1.1137571325078893E-7	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999998886242868	WITHOUT_CLASSIFICATION	1.1137571325078893E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9996734488828379	WITHOUT_CLASSIFICATION	3.26551117162127E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9996734488828379	WITHOUT_CLASSIFICATION	3.26551117162127E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999998589687218	WITHOUT_CLASSIFICATION	1.4103127827948134E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999984817870528	WITHOUT_CLASSIFICATION	1.518212947260679E-6	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999989068149351	WITHOUT_CLASSIFICATION	1.0931850649682264E-6	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999958547688289	WITHOUT_CLASSIFICATION	4.145231171079628E-6	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999998526767514	WITHOUT_CLASSIFICATION	1.4732324864569436E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999991254937276	WITHOUT_CLASSIFICATION	8.745062723745294E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999991254937276	WITHOUT_CLASSIFICATION	8.745062723745294E-7	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9995377792209375	WITHOUT_CLASSIFICATION	4.6222077906259775E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999999996498261	WITHOUT_CLASSIFICATION	3.5017379092741094E-10	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999999900000529	WITHOUT_CLASSIFICATION	9.999946958342522E-9	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.9999999969966806	WITHOUT_CLASSIFICATION	3.0033192280538136E-9	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999998925106295	WITHOUT_CLASSIFICATION	1.0748937051535847E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999981366728566	WITHOUT_CLASSIFICATION	1.8633271433816192E-6	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9979557307172061	WITHOUT_CLASSIFICATION	0.002044269282793863	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999999586267696	WITHOUT_CLASSIFICATION	4.1373230314279594E-8	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.9965076119813361	WITHOUT_CLASSIFICATION	0.003492388018663997	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999889456369591	WITHOUT_CLASSIFICATION	1.1054363040896058E-5	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9999974659986217	WITHOUT_CLASSIFICATION	2.5340013783313677E-6	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999999934508265	WITHOUT_CLASSIFICATION	6.5491734353745066E-9	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9915097408750502	WITHOUT_CLASSIFICATION	0.008490259124949787	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999994358539212	WITHOUT_CLASSIFICATION	5.641460787961869E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999994358539212	WITHOUT_CLASSIFICATION	5.641460787961869E-6	DEFECT
// }	WITHOUT_CLASSIFICATION	0.999994358539212	WITHOUT_CLASSIFICATION	5.641460787961869E-6	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9999935952776866	WITHOUT_CLASSIFICATION	6.404722313345852E-6	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.999999289696078	WITHOUT_CLASSIFICATION	7.103039221054818E-7	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999999946451004	WITHOUT_CLASSIFICATION	5.35489960390842E-9	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999984334128785	WITHOUT_CLASSIFICATION	1.5665871214964398E-6	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999993475216182	WITHOUT_CLASSIFICATION	6.524783817036264E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999993383769912	WITHOUT_CLASSIFICATION	6.616230089262141E-7	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999993383769912	WITHOUT_CLASSIFICATION	6.616230089262141E-7	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999997979168616	WITHOUT_CLASSIFICATION	2.0208313846079328E-7	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9951813833181086	WITHOUT_CLASSIFICATION	0.004818616681891401	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999989548221916	WITHOUT_CLASSIFICATION	1.0451778084063797E-6	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999965525505412	WITHOUT_CLASSIFICATION	3.4474494587804035E-6	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999999713006411	WITHOUT_CLASSIFICATION	2.8699358902936516E-8	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9999839147203449	WITHOUT_CLASSIFICATION	1.6085279655048135E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.9999621817434897	WITHOUT_CLASSIFICATION	3.78182565102679E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999996241765546	WITHOUT_CLASSIFICATION	3.7582344530675207E-7	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999992525254976	WITHOUT_CLASSIFICATION	7.474745025108467E-7	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999999942083823	WITHOUT_CLASSIFICATION	5.791617737873202E-9	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9999831719666223	WITHOUT_CLASSIFICATION	1.6828033377643787E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999974844425726	WITHOUT_CLASSIFICATION	2.515557427447238E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999933418026918	WITHOUT_CLASSIFICATION	6.658197308108098E-6	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.8599616804184259	WITHOUT_CLASSIFICATION	0.1400383195815741	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9999874678395015	WITHOUT_CLASSIFICATION	1.2532160498499985E-5	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999996711557305	WITHOUT_CLASSIFICATION	3.2884426950398873E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999988841567148	WITHOUT_CLASSIFICATION	1.1158432852175862E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999992535768432	WITHOUT_CLASSIFICATION	7.464231568566177E-7	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999887294457847	WITHOUT_CLASSIFICATION	1.1270554215269938E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999887294457847	WITHOUT_CLASSIFICATION	1.1270554215269938E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999887294457847	WITHOUT_CLASSIFICATION	1.1270554215269938E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999887294457847	WITHOUT_CLASSIFICATION	1.1270554215269938E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999997491031147	WITHOUT_CLASSIFICATION	2.508968851695005E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.99999964929364	WITHOUT_CLASSIFICATION	3.5070635996723324E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.99999964929364	WITHOUT_CLASSIFICATION	3.5070635996723324E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999975382809679	WITHOUT_CLASSIFICATION	2.4617190320529778E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999998842266543	WITHOUT_CLASSIFICATION	1.1577334569903526E-7	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.999999954174129	WITHOUT_CLASSIFICATION	4.582587105197956E-8	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999903690122	WITHOUT_CLASSIFICATION	9.63098768076427E-9	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999962861268887	WITHOUT_CLASSIFICATION	3.713873111127379E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999999060007834	WITHOUT_CLASSIFICATION	9.399921655500747E-8	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.9999896697681834	WITHOUT_CLASSIFICATION	1.0330231816625775E-5	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999981145473702	WITHOUT_CLASSIFICATION	1.885452629866543E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999981145473702	WITHOUT_CLASSIFICATION	1.885452629866543E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999981145473702	WITHOUT_CLASSIFICATION	1.885452629866543E-6	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9999993834965132	WITHOUT_CLASSIFICATION	6.165034867725381E-7	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998960431221	WITHOUT_CLASSIFICATION	1.039568778761189E-7	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9998054805311962	WITHOUT_CLASSIFICATION	1.945194688038594E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999998002718304	WITHOUT_CLASSIFICATION	1.9972816961069572E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999998002718304	WITHOUT_CLASSIFICATION	1.9972816961069572E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999978823997	WITHOUT_CLASSIFICATION	2.1176003326428154E-9	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999999055890795	WITHOUT_CLASSIFICATION	9.441092045863529E-8	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999989134582127	WITHOUT_CLASSIFICATION	1.0865417872728157E-6	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9999626112949536	WITHOUT_CLASSIFICATION	3.7388705046517224E-5	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.999248939622554	WITHOUT_CLASSIFICATION	7.510603774459445E-4	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.99999998993287	WITHOUT_CLASSIFICATION	1.0067130029756276E-8	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999951534202327	WITHOUT_CLASSIFICATION	4.8465797672984795E-6	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.9999999834111295	WITHOUT_CLASSIFICATION	1.6588870450607253E-8	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9999999928858285	WITHOUT_CLASSIFICATION	7.1141715274508515E-9	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999998186749256	WITHOUT_CLASSIFICATION	1.8132507443974215E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999976733299	WITHOUT_CLASSIFICATION	2.3266701347803584E-9	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999593375357739	WITHOUT_CLASSIFICATION	4.0662464226121436E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9999593375357739	WITHOUT_CLASSIFICATION	4.0662464226121436E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.9998676284915278	WITHOUT_CLASSIFICATION	1.3237150847226085E-4	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999909290416364	WITHOUT_CLASSIFICATION	9.070958363620897E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999909290416364	WITHOUT_CLASSIFICATION	9.070958363620897E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999990763264079	WITHOUT_CLASSIFICATION	9.236735921230258E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999990763264079	WITHOUT_CLASSIFICATION	9.236735921230258E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999990763264079	WITHOUT_CLASSIFICATION	9.236735921230258E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999990763264079	WITHOUT_CLASSIFICATION	9.236735921230258E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999990763264079	WITHOUT_CLASSIFICATION	9.236735921230258E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999990763264079	WITHOUT_CLASSIFICATION	9.236735921230258E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999990763264079	WITHOUT_CLASSIFICATION	9.236735921230258E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999990763264079	WITHOUT_CLASSIFICATION	9.236735921230258E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999990763264079	WITHOUT_CLASSIFICATION	9.236735921230258E-7	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.99999999025054	WITHOUT_CLASSIFICATION	9.749460068380091E-9	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.99999999025054	WITHOUT_CLASSIFICATION	9.749460068380091E-9	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999960078666	WITHOUT_CLASSIFICATION	3.992133386202947E-9	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999993509333244	WITHOUT_CLASSIFICATION	6.490666756735432E-7	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9993307948702691	WITHOUT_CLASSIFICATION	6.692051297309357E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999935388272457	WITHOUT_CLASSIFICATION	6.461172754255084E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999935388272457	WITHOUT_CLASSIFICATION	6.461172754255084E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999916550426685	WITHOUT_CLASSIFICATION	8.34495733150229E-6	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999999774302709	WITHOUT_CLASSIFICATION	2.2569729138447084E-8	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9998717140839621	WITHOUT_CLASSIFICATION	1.2828591603789225E-4	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.9481157342320129	DEFECT	0.05188426576798705	WITHOUT_CLASSIFICATION
// EATM must fix isSet bits.	DEFECT	0.9999995202107789	WITHOUT_CLASSIFICATION	4.797892211969037E-7	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999995202107789	WITHOUT_CLASSIFICATION	4.797892211969037E-7	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.9992132000085233	DEFECT	7.867999914767413E-4	WITHOUT_CLASSIFICATION
// is this an error???	DEFECT	0.9999951101164603	WITHOUT_CLASSIFICATION	4.889883539730794E-6	DEFECT
// is this an error???	DEFECT	0.9999951101164603	WITHOUT_CLASSIFICATION	4.889883539730794E-6	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.999949313712967	WITHOUT_CLASSIFICATION	5.068628703299131E-5	DEFECT
