// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999988601302464	WITHOUT_CLASSIFICATION	1.139869753554383E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999892403132715	WITHOUT_CLASSIFICATION	1.0759686728496827E-4	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999926634420704	WITHOUT_CLASSIFICATION	7.336557929588126E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9942538074171413	WITHOUT_CLASSIFICATION	0.005746192582858645	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9982688987495504	WITHOUT_CLASSIFICATION	0.00173110125044962	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999989596994778	WITHOUT_CLASSIFICATION	1.0403005221628952E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999673203130112	WITHOUT_CLASSIFICATION	3.2679686988898924E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999997270552637	WITHOUT_CLASSIFICATION	2.7294473616957645E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999780258414045	WITHOUT_CLASSIFICATION	2.1974158595568295E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999961144672418	WITHOUT_CLASSIFICATION	3.885532758148183E-6	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999887322109511	WITHOUT_CLASSIFICATION	1.126778904880654E-5	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999982896974791	WITHOUT_CLASSIFICATION	1.7103025209431549E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9995008546097934	WITHOUT_CLASSIFICATION	4.991453902064884E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999989791689198	WITHOUT_CLASSIFICATION	1.0208310802760795E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999995691047404	WITHOUT_CLASSIFICATION	4.308952596833556E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999998967378808	WITHOUT_CLASSIFICATION	1.0326211913724412E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999744611841593	WITHOUT_CLASSIFICATION	2.5538815840687357E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999673203130112	WITHOUT_CLASSIFICATION	3.2679686988898924E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999711733480705	WITHOUT_CLASSIFICATION	2.8826651929399423E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.999998630901264	WITHOUT_CLASSIFICATION	1.3690987360656637E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999901870055078	WITHOUT_CLASSIFICATION	9.8129944922962E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999706484706047	WITHOUT_CLASSIFICATION	2.9351529395307188E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999706484706047	WITHOUT_CLASSIFICATION	2.9351529395307188E-5	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999984304031563	WITHOUT_CLASSIFICATION	1.5695968438177716E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998370139732	WITHOUT_CLASSIFICATION	1.6298602677759794E-7	DEFECT
// This is the page for the list viewer //	WITHOUT_CLASSIFICATION	0.9999935313282351	WITHOUT_CLASSIFICATION	6.468671764904501E-6	DEFECT
// This is the page for the tree viewer //	WITHOUT_CLASSIFICATION	0.9999155395166536	WITHOUT_CLASSIFICATION	8.44604833464539E-5	DEFECT
// This is the page for the table viewer. //	WITHOUT_CLASSIFICATION	0.9999953548264208	WITHOUT_CLASSIFICATION	4.645173579220912E-6	DEFECT
// This is the page for the table tree viewer. //	WITHOUT_CLASSIFICATION	0.9999918844601631	WITHOUT_CLASSIFICATION	8.115539836914748E-6	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9997171299399211	WITHOUT_CLASSIFICATION	2.82870060078901E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998614286956865	WITHOUT_CLASSIFICATION	1.3857130431347016E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999993886790319	WITHOUT_CLASSIFICATION	6.113209680376343E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9987941301856387	WITHOUT_CLASSIFICATION	0.0012058698143613768	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999942374046991	WITHOUT_CLASSIFICATION	5.7625953009006174E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999983125604547	WITHOUT_CLASSIFICATION	1.687439545209564E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999243818742231	WITHOUT_CLASSIFICATION	7.561812577697254E-5	DEFECT
// Set the input to the widget. //	WITHOUT_CLASSIFICATION	0.9999862954051439	WITHOUT_CLASSIFICATION	1.370459485617279E-5	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999940314736946	WITHOUT_CLASSIFICATION	5.968526305324236E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999845965891139	WITHOUT_CLASSIFICATION	1.540341088616203E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999974987954267	WITHOUT_CLASSIFICATION	2.5012045734269133E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Create a default .jetsettings file file	WITHOUT_CLASSIFICATION	0.9999999778924858	WITHOUT_CLASSIFICATION	2.210751421535094E-8	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9998656288748533	WITHOUT_CLASSIFICATION	1.343711251466585E-4	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999785518248	WITHOUT_CLASSIFICATION	2.1448175210316247E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999979279993	WITHOUT_CLASSIFICATION	2.0720005881007257E-9	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999069493041961	WITHOUT_CLASSIFICATION	9.305069580384737E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999229837406427	WITHOUT_CLASSIFICATION	7.701625935727777E-5	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.999986508858625	WITHOUT_CLASSIFICATION	1.349114137506419E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999665047659	WITHOUT_CLASSIFICATION	3.349523404823831E-8	DEFECT
//Ecore2XMLAdapterFactory	WITHOUT_CLASSIFICATION	0.9998661287645227	WITHOUT_CLASSIFICATION	1.338712354771539E-4	DEFECT
//Ecore2XMLSwitch	WITHOUT_CLASSIFICATION	0.9996960163887063	WITHOUT_CLASSIFICATION	3.0398361129367374E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999660903053	WITHOUT_CLASSIFICATION	3.3909694784460406E-8	DEFECT
//Ecore2XMLResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.999986508858625	WITHOUT_CLASSIFICATION	1.349114137506419E-5	DEFECT
//FunctionNamePairImpl	WITHOUT_CLASSIFICATION	0.9999962187953455	WITHOUT_CLASSIFICATION	3.7812046544798573E-6	DEFECT
//MappingFactoryImpl	WITHOUT_CLASSIFICATION	0.9999114428917626	WITHOUT_CLASSIFICATION	8.85571082374883E-5	DEFECT
//ComplexTypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999936230833217	WITHOUT_CLASSIFICATION	6.376916678248682E-6	DEFECT
//MappingHelperImpl	WITHOUT_CLASSIFICATION	0.9999562700797604	WITHOUT_CLASSIFICATION	4.3729920239668736E-5	DEFECT
//MappingStrategyImpl	WITHOUT_CLASSIFICATION	0.9999899849392896	WITHOUT_CLASSIFICATION	1.0015060710380313E-5	DEFECT
//FunctionPairImpl	WITHOUT_CLASSIFICATION	0.999983619740109	WITHOUT_CLASSIFICATION	1.6380259891038197E-5	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998762952466	WITHOUT_CLASSIFICATION	1.237047533777149E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999992245098178	WITHOUT_CLASSIFICATION	7.75490182166597E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999849400648185	WITHOUT_CLASSIFICATION	1.5059935181373625E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996138216523	WITHOUT_CLASSIFICATION	3.861783478063688E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998949513081	WITHOUT_CLASSIFICATION	1.0504869187685939E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995751368276	WITHOUT_CLASSIFICATION	4.2486317237552965E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999966882499354	WITHOUT_CLASSIFICATION	3.31175006461721E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999987446375067	WITHOUT_CLASSIFICATION	1.2553624931933802E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999995278526853	WITHOUT_CLASSIFICATION	4.721473147652249E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998595120936	WITHOUT_CLASSIFICATION	1.404879063273303E-7	DEFECT
//MappingImpl	WITHOUT_CLASSIFICATION	0.9999079132645012	WITHOUT_CLASSIFICATION	9.208673549871274E-5	DEFECT
// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //	WITHOUT_CLASSIFICATION	0.9999929285242285	WITHOUT_CLASSIFICATION	7.071475771449967E-6	DEFECT
//TypeConverterImpl	WITHOUT_CLASSIFICATION	0.9999921970172918	WITHOUT_CLASSIFICATION	7.802982708177365E-6	DEFECT
// Barring a better result, this will be the result. //	WITHOUT_CLASSIFICATION	0.998885422720026	WITHOUT_CLASSIFICATION	0.0011145772799739824	DEFECT
// If the intersection is empty, i.e., no ancestor is in the mapping... //	WITHOUT_CLASSIFICATION	0.9999980265805172	WITHOUT_CLASSIFICATION	1.9734194828119973E-6	DEFECT
// If this mapping isn't a parent, it's children definitely won't be either. //	WITHOUT_CLASSIFICATION	0.9931848559967248	WITHOUT_CLASSIFICATION	0.006815144003275257	DEFECT
// Make sure the collections aren't identical... //	WITHOUT_CLASSIFICATION	0.9994860988738771	WITHOUT_CLASSIFICATION	5.139011261228965E-4	DEFECT
//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.	WITHOUT_CLASSIFICATION	0.9998378692707427	WITHOUT_CLASSIFICATION	1.6213072925738714E-4	DEFECT
// printAdapters();	WITHOUT_CLASSIFICATION	0.9999998054498207	WITHOUT_CLASSIFICATION	1.945501793282017E-7	DEFECT
//MappingRootImpl	WITHOUT_CLASSIFICATION	0.99990588846854	WITHOUT_CLASSIFICATION	9.411153145996242E-5	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9988515523697962	WITHOUT_CLASSIFICATION	0.0011484476302038309	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999982896974791	WITHOUT_CLASSIFICATION	1.7103025209431549E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9995008546097934	WITHOUT_CLASSIFICATION	4.991453902064884E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999989791689198	WITHOUT_CLASSIFICATION	1.0208310802760795E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// VAJ kludge //	WITHOUT_CLASSIFICATION	0.9999882769308795	WITHOUT_CLASSIFICATION	1.1723069120382614E-5	DEFECT
// This just notifies those things that are affected by the selection. //	WITHOUT_CLASSIFICATION	0.9999967535598083	WITHOUT_CLASSIFICATION	3.2464401916416924E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999995691047404	WITHOUT_CLASSIFICATION	4.308952596833556E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999998967378808	WITHOUT_CLASSIFICATION	1.0326211913724412E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999744611841593	WITHOUT_CLASSIFICATION	2.5538815840687357E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999847317307071	WITHOUT_CLASSIFICATION	1.5268269292851866E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999847317307071	WITHOUT_CLASSIFICATION	1.5268269292851866E-5	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999847317307071	WITHOUT_CLASSIFICATION	1.5268269292851866E-5	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999989596994778	WITHOUT_CLASSIFICATION	1.0403005221628952E-6	DEFECT
// I assume that the editorInput is a file object. //	WITHOUT_CLASSIFICATION	0.9999929211502843	WITHOUT_CLASSIFICATION	7.078849715778012E-6	DEFECT
// Handle the creation of the model from the modelFile. //	WITHOUT_CLASSIFICATION	0.9999999370199234	WITHOUT_CLASSIFICATION	6.298007653534912E-8	DEFECT
// Restore the persistent command stack, if need be. //	WITHOUT_CLASSIFICATION	0.9999948572485323	WITHOUT_CLASSIFICATION	5.1427514676316235E-6	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999901870055078	WITHOUT_CLASSIFICATION	9.8129944922962E-6	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999991331818717	WITHOUT_CLASSIFICATION	8.668181283298151E-7	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9997171299399211	WITHOUT_CLASSIFICATION	2.82870060078901E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998614286956865	WITHOUT_CLASSIFICATION	1.3857130431347016E-4	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9987941301856387	WITHOUT_CLASSIFICATION	0.0012058698143613768	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999243818742231	WITHOUT_CLASSIFICATION	7.561812577697254E-5	DEFECT
// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //	WITHOUT_CLASSIFICATION	0.9997926690245066	WITHOUT_CLASSIFICATION	2.0733097549345054E-4	DEFECT
// The one object in the resource's extent should be the root object. //	WITHOUT_CLASSIFICATION	0.9998971664820718	WITHOUT_CLASSIFICATION	1.0283351792806607E-4	DEFECT
// Save the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999982205840271	WITHOUT_CLASSIFICATION	1.77941597297708E-6	DEFECT
// Update the workbench's knowledge of the file's contents. //	WITHOUT_CLASSIFICATION	0.9999974630172758	WITHOUT_CLASSIFICATION	2.5369827242480956E-6	DEFECT
// Add the binding to the provided hash table: //	WITHOUT_CLASSIFICATION	0.9997839731761314	WITHOUT_CLASSIFICATION	2.1602682386858408E-4	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999974987954267	WITHOUT_CLASSIFICATION	2.5012045734269133E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9998656288748533	WITHOUT_CLASSIFICATION	1.343711251466585E-4	DEFECT
// Parse as an attribute=value:	WITHOUT_CLASSIFICATION	0.9999997742111169	WITHOUT_CLASSIFICATION	2.2578888318110685E-7	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Create the mapping domain with a special command stack. // 	WITHOUT_CLASSIFICATION	0.9988855986448005	WITHOUT_CLASSIFICATION	0.0011144013551994511	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();	WITHOUT_CLASSIFICATION	0.9999996885598622	WITHOUT_CLASSIFICATION	3.114401377996494E-7	DEFECT
// If the object is an input or output object, then use it. //	WITHOUT_CLASSIFICATION	0.9999967039251937	WITHOUT_CLASSIFICATION	3.296074806188062E-6	DEFECT
// Process the children recursively. //	WITHOUT_CLASSIFICATION	0.9999919178358975	WITHOUT_CLASSIFICATION	8.082164102593976E-6	DEFECT
// Look for a single-char work delimiter: //	WITHOUT_CLASSIFICATION	0.9998369295870898	WITHOUT_CLASSIFICATION	1.6307041291015685E-4	DEFECT
// oldWidth = table.getClientArea().width;	WITHOUT_CLASSIFICATION	0.9999991773446033	WITHOUT_CLASSIFICATION	8.226553966715754E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999940360146585	WITHOUT_CLASSIFICATION	5.963985341461555E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999779010208568	WITHOUT_CLASSIFICATION	2.2098979143210607E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.999965207617275	WITHOUT_CLASSIFICATION	3.4792382724901455E-5	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999996456263349	WITHOUT_CLASSIFICATION	3.5437366511265165E-7	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999779010208568	WITHOUT_CLASSIFICATION	2.2098979143210607E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999236487626676	WITHOUT_CLASSIFICATION	7.635123733242529E-5	DEFECT
//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999989217195643	WITHOUT_CLASSIFICATION	1.0782804356676078E-6	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999998165077525	WITHOUT_CLASSIFICATION	1.8349224755350766E-7	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999966639026809	WITHOUT_CLASSIFICATION	3.336097319118515E-6	DEFECT
// This is for the in2out feature. //	WITHOUT_CLASSIFICATION	0.9999779010208568	WITHOUT_CLASSIFICATION	2.2098979143210607E-5	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.999965207617275	WITHOUT_CLASSIFICATION	3.4792382724901455E-5	DEFECT
//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999989864586476	WITHOUT_CLASSIFICATION	1.0135413523651858E-6	DEFECT
// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999261662799	WITHOUT_CLASSIFICATION	7.383372012399995E-8	DEFECT
//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999937268920319	WITHOUT_CLASSIFICATION	6.2731079680443195E-6	DEFECT
//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999988583991726	WITHOUT_CLASSIFICATION	1.1416008274772602E-6	DEFECT
//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999997601984947	WITHOUT_CLASSIFICATION	2.398015053921439E-7	DEFECT
// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);	WITHOUT_CLASSIFICATION	0.9998440389767788	WITHOUT_CLASSIFICATION	1.559610232212803E-4	DEFECT
// supportedTypes.add(IUpdateableItemText.class);	WITHOUT_CLASSIFICATION	0.9999956875710256	WITHOUT_CLASSIFICATION	4.3124289744184434E-6	DEFECT
//FB ????? 	WITHOUT_CLASSIFICATION	0.9999275913423022	WITHOUT_CLASSIFICATION	7.240865769779812E-5	DEFECT
// This is for the helper feature. //	WITHOUT_CLASSIFICATION	0.9998689676248451	WITHOUT_CLASSIFICATION	1.3103237515494685E-4	DEFECT
// This is for the typeMapping feature. //	WITHOUT_CLASSIFICATION	0.9998357308444251	WITHOUT_CLASSIFICATION	1.642691555748608E-4	DEFECT
//FIX:::	WITHOUT_CLASSIFICATION	0.9928933156998425	WITHOUT_CLASSIFICATION	0.007106684300157525	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999991193076405	WITHOUT_CLASSIFICATION	8.806923595725913E-7	DEFECT
//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999996918114121	WITHOUT_CLASSIFICATION	3.0818858779134277E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999665047659	WITHOUT_CLASSIFICATION	3.349523404823831E-8	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.999999918802591	WITHOUT_CLASSIFICATION	8.119740902035012E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999968062829273	WITHOUT_CLASSIFICATION	3.1937170727988322E-6	DEFECT
// Break the cycle. //	WITHOUT_CLASSIFICATION	0.9999862936199755	WITHOUT_CLASSIFICATION	1.370638002464532E-5	DEFECT
//MappingAdapterFactory	WITHOUT_CLASSIFICATION	0.9999607240015138	WITHOUT_CLASSIFICATION	3.927599848625075E-5	DEFECT
// This ensures that we are dealing with actual MOF objects. //	WITHOUT_CLASSIFICATION	0.9999971852237748	WITHOUT_CLASSIFICATION	2.8147762251539188E-6	DEFECT
//MappingSwitch	WITHOUT_CLASSIFICATION	0.9999581512347328	WITHOUT_CLASSIFICATION	4.184876526720618E-5	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.999946676558517	WITHOUT_CLASSIFICATION	5.3323441483092506E-5	DEFECT
// Create a resource set and load the model file into it. //	WITHOUT_CLASSIFICATION	0.999999918802591	WITHOUT_CLASSIFICATION	8.119740902035012E-8	DEFECT
// This is the path of the target directory. //	WITHOUT_CLASSIFICATION	0.9999968062829273	WITHOUT_CLASSIFICATION	3.1937170727988322E-6	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999912559005334	WITHOUT_CLASSIFICATION	8.744099466603077E-6	DEFECT
// This is to handle a genmodel produced by rose2genmodel. //	WITHOUT_CLASSIFICATION	0.9999912559005334	WITHOUT_CLASSIFICATION	8.744099466603077E-6	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999436210726582	WITHOUT_CLASSIFICATION	5.6378927341688893E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.8592191245541256	WITHOUT_CLASSIFICATION	0.14078087544587436	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9996700075669899	WITHOUT_CLASSIFICATION	3.2999243301019723E-4	DEFECT
// Clean up any old project information. //	WITHOUT_CLASSIFICATION	0.9999436210726582	WITHOUT_CLASSIFICATION	5.6378927341688893E-5	DEFECT
// Remove variables since the plugin.xml should provide the complete path information. //	WITHOUT_CLASSIFICATION	0.8592191245541256	WITHOUT_CLASSIFICATION	0.14078087544587436	DEFECT
// Consult the generator option for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999981045840725	WITHOUT_CLASSIFICATION	1.895415927636227E-6	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9997790980700028	WITHOUT_CLASSIFICATION	2.2090192999728122E-4	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999936726898	WITHOUT_CLASSIFICATION	6.327310263021044E-9	DEFECT
// Multiple jet directives.	WITHOUT_CLASSIFICATION	0.9999998827486902	WITHOUT_CLASSIFICATION	1.172513098539665E-7	DEFECT
// If the target is read-only, we can ask the platform to release it. //	WITHOUT_CLASSIFICATION	0.9999999936726898	WITHOUT_CLASSIFICATION	6.327310263021044E-9	DEFECT
// Merge with an existing file. //	WITHOUT_CLASSIFICATION	0.9999996828230764	WITHOUT_CLASSIFICATION	3.171769236432578E-7	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999978874314	WITHOUT_CLASSIFICATION	2.112568683013307E-9	DEFECT
// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //	WITHOUT_CLASSIFICATION	0.9999999978874314	WITHOUT_CLASSIFICATION	2.112568683013307E-9	DEFECT
// Create a code formatter for this compilation unit, if needed. //	WITHOUT_CLASSIFICATION	0.9999975730399697	WITHOUT_CLASSIFICATION	2.426960030364673E-6	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999994879413214	WITHOUT_CLASSIFICATION	5.120586786432205E-7	DEFECT
// If we can't determine it by reading the file, // look at the preferences instead.	WITHOUT_CLASSIFICATION	0.9999986976865498	WITHOUT_CLASSIFICATION	1.3023134502251643E-6	DEFECT
// Since we're invoking plugged-in code, we must be defensive against cycles. //	WITHOUT_CLASSIFICATION	0.9999999940878489	WITHOUT_CLASSIFICATION	5.912151151631703E-9	DEFECT
// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //	WITHOUT_CLASSIFICATION	0.9999944702572547	WITHOUT_CLASSIFICATION	5.529742745202584E-6	DEFECT
// Combine the two lists. //	WITHOUT_CLASSIFICATION	0.9999997835543827	WITHOUT_CLASSIFICATION	2.1644561735953578E-7	DEFECT
// Give all generator adapters the chance to do setup work. //	WITHOUT_CLASSIFICATION	0.9999983738371141	WITHOUT_CLASSIFICATION	1.6261628858827847E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994442495614	WITHOUT_CLASSIFICATION	5.557504386251153E-7	DEFECT
// Give all generator adapters the chance to do tear down. //	WITHOUT_CLASSIFICATION	0.9999990129448096	WITHOUT_CLASSIFICATION	9.870551903774308E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999828066348325	WITHOUT_CLASSIFICATION	1.7193365167401637E-5	DEFECT
// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface	WITHOUT_CLASSIFICATION	0.9999999996221147	WITHOUT_CLASSIFICATION	3.778852092316499E-10	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994442495614	WITHOUT_CLASSIFICATION	5.557504386251153E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999828066348325	WITHOUT_CLASSIFICATION	1.7193365167401637E-5	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994442495614	WITHOUT_CLASSIFICATION	5.557504386251153E-7	DEFECT
// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.	WITHOUT_CLASSIFICATION	0.9999996196804337	WITHOUT_CLASSIFICATION	3.803195662704927E-7	DEFECT
// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)	WITHOUT_CLASSIFICATION	0.999999925551866	WITHOUT_CLASSIFICATION	7.444813404493268E-8	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994442495614	WITHOUT_CLASSIFICATION	5.557504386251153E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994442495614	WITHOUT_CLASSIFICATION	5.557504386251153E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994442495614	WITHOUT_CLASSIFICATION	5.557504386251153E-7	DEFECT
// // EMF.Editor generation //	WITHOUT_CLASSIFICATION	0.999988576830848	WITHOUT_CLASSIFICATION	1.1423169152172264E-5	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.999999272691338	WITHOUT_CLASSIFICATION	7.273086619560008E-7	DEFECT
// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();	WITHOUT_CLASSIFICATION	0.9999982858785061	WITHOUT_CLASSIFICATION	1.7141214938886044E-6	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999252234987263	WITHOUT_CLASSIFICATION	7.477650127365993E-5	DEFECT
// This URI handler redirect the URI based on the mapping. //	WITHOUT_CLASSIFICATION	0.9997583030373538	WITHOUT_CLASSIFICATION	2.416969626462749E-4	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999973816780621	WITHOUT_CLASSIFICATION	2.6183219378888034E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999988423451459	WITHOUT_CLASSIFICATION	1.1576548540289392E-6	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999972825762622	WITHOUT_CLASSIFICATION	2.717423737934595E-6	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999972825762622	WITHOUT_CLASSIFICATION	2.717423737934595E-6	DEFECT
// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999898898855395	WITHOUT_CLASSIFICATION	1.0110114460625058E-5	DEFECT
// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //	WITHOUT_CLASSIFICATION	0.9999791696132779	WITHOUT_CLASSIFICATION	2.0830386722009435E-5	DEFECT
//We are not generating the manifest file if the plugin.xml exists. //	WITHOUT_CLASSIFICATION	0.9995701897530472	WITHOUT_CLASSIFICATION	4.2981024695271184E-4	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999873528530212	WITHOUT_CLASSIFICATION	1.2647146978867654E-5	DEFECT
// J9 2.2 has problems assigning null to a Class variable. // 	WITHOUT_CLASSIFICATION	0.9999969676120225	WITHOUT_CLASSIFICATION	3.0323879775482864E-6	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999996667001239	WITHOUT_CLASSIFICATION	3.332998761930982E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999252234987263	WITHOUT_CLASSIFICATION	7.477650127365993E-5	DEFECT
// Escape a string that will terminate the comment in which this will all be nested. //	WITHOUT_CLASSIFICATION	0.9999026574624539	WITHOUT_CLASSIFICATION	9.734253754613158E-5	DEFECT
// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //	WITHOUT_CLASSIFICATION	0.9999993223472159	WITHOUT_CLASSIFICATION	6.776527841064762E-7	DEFECT
// Search the local scope for a resolution of the type parameter name. //	WITHOUT_CLASSIFICATION	0.9999954207672097	WITHOUT_CLASSIFICATION	4.579232790314495E-6	DEFECT
// Check if we found a resolution for it. //	WITHOUT_CLASSIFICATION	0.9999998051161343	WITHOUT_CLASSIFICATION	1.9488386572374878E-7	DEFECT
// If not we'll erase it to java.lang.Object. //	WITHOUT_CLASSIFICATION	0.9999079951836242	WITHOUT_CLASSIFICATION	9.20048163758921E-5	DEFECT
// Otherwise, recursively call ourselves to substitute it in context if necessary. //	WITHOUT_CLASSIFICATION	0.9999997215734894	WITHOUT_CLASSIFICATION	2.7842651063141E-7	DEFECT
// Add back in the array indices if there are any. //	WITHOUT_CLASSIFICATION	0.9993942716982832	WITHOUT_CLASSIFICATION	6.057283017167453E-4	DEFECT
// Just import the name or use it directly. //	WITHOUT_CLASSIFICATION	0.9999333850130119	WITHOUT_CLASSIFICATION	6.661498698810402E-5	DEFECT
// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //	WITHOUT_CLASSIFICATION	0.9999998533219016	WITHOUT_CLASSIFICATION	1.4667809843851314E-7	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999828066348325	WITHOUT_CLASSIFICATION	1.7193365167401637E-5	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999875005172185	WITHOUT_CLASSIFICATION	1.2499482781436966E-5	DEFECT
// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case	WITHOUT_CLASSIFICATION	0.9999999999435809	WITHOUT_CLASSIFICATION	5.641918679226254E-11	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999990120075799	WITHOUT_CLASSIFICATION	9.879924201193424E-7	DEFECT
// We assume that the rootExtendsClass already implements it. //	WITHOUT_CLASSIFICATION	0.9999990120075799	WITHOUT_CLASSIFICATION	9.879924201193424E-7	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999874103557083	WITHOUT_CLASSIFICATION	1.2589644291730034E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999828066348325	WITHOUT_CLASSIFICATION	1.7193365167401637E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.999999875160328	WITHOUT_CLASSIFICATION	1.2483967208899706E-7	DEFECT
// An interface should be abstract, but this makes sure of that fact. //	WITHOUT_CLASSIFICATION	0.9999511055307098	WITHOUT_CLASSIFICATION	4.889446929036913E-5	DEFECT
// Simple cases: no mix-ins for no inheritance or for a single base class. //	WITHOUT_CLASSIFICATION	0.9920773740559549	WITHOUT_CLASSIFICATION	0.007922625944045114	DEFECT
// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //	WITHOUT_CLASSIFICATION	0.9999998801847538	WITHOUT_CLASSIFICATION	1.1981524616790195E-7	DEFECT
// Mix-ins are everything after the base class. //	WITHOUT_CLASSIFICATION	0.9999570562520411	WITHOUT_CLASSIFICATION	4.2943747958902075E-5	DEFECT
// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //	WITHOUT_CLASSIFICATION	0.998829101206616	WITHOUT_CLASSIFICATION	0.0011708987933839502	DEFECT
// Add all other create child features that this item provider is responsible for. //	WITHOUT_CLASSIFICATION	0.9999983053884394	WITHOUT_CLASSIFICATION	1.6946115605997483E-6	DEFECT
// Many inherited methods must be overridden to handle this case. //	WITHOUT_CLASSIFICATION	0.9999999617455159	WITHOUT_CLASSIFICATION	3.825448422677656E-8	DEFECT
// If this looks like a feature getter, a kind property will allow it to be recognized properly. //	WITHOUT_CLASSIFICATION	0.9994637990762919	WITHOUT_CLASSIFICATION	5.362009237081629E-4	DEFECT
// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //	WITHOUT_CLASSIFICATION	0.9999999990692426	WITHOUT_CLASSIFICATION	9.30757329130683E-10	DEFECT
// Type parameter casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999969908697929	WITHOUT_CLASSIFICATION	3.00913020714868E-6	DEFECT
// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //	WITHOUT_CLASSIFICATION	0.9999906747072148	WITHOUT_CLASSIFICATION	9.325292785266043E-6	DEFECT
// Optimize the performance of applying the import regular  // expressions locating the last import line //      	WITHOUT_CLASSIFICATION	0.9999996391612106	WITHOUT_CLASSIFICATION	3.608387893857953E-7	DEFECT
// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //	WITHOUT_CLASSIFICATION	0.9996019632190875	WITHOUT_CLASSIFICATION	3.9803678091261256E-4	DEFECT
// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //	WITHOUT_CLASSIFICATION	0.9999016688433096	WITHOUT_CLASSIFICATION	9.833115669045875E-5	DEFECT
// Get the Java literal expression for the value. //	WITHOUT_CLASSIFICATION	0.999999940428125	WITHOUT_CLASSIFICATION	5.957187507745268E-8	DEFECT
// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //	WITHOUT_CLASSIFICATION	0.9999999845823713	WITHOUT_CLASSIFICATION	1.541762877404505E-8	DEFECT
// If the base package isn't set but there is a parent package, us it's information instead. //	WITHOUT_CLASSIFICATION	0.9999983451098345	WITHOUT_CLASSIFICATION	1.6548901654302544E-6	DEFECT
// Add all classes from this package first, to guarantee they get the // simple names	WITHOUT_CLASSIFICATION	0.9999999937982663	WITHOUT_CLASSIFICATION	6.201733712938566E-9	DEFECT
// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //	WITHOUT_CLASSIFICATION	0.9999982584517239	WITHOUT_CLASSIFICATION	1.741548276088237E-6	DEFECT
// Set the mapper to build an XSD2EcoreMappingRoot, if available. //	WITHOUT_CLASSIFICATION	0.9994232645105546	WITHOUT_CLASSIFICATION	5.767354894453045E-4	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999828066348325	WITHOUT_CLASSIFICATION	1.7193365167401637E-5	DEFECT
// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //	WITHOUT_CLASSIFICATION	0.9999998872868486	WITHOUT_CLASSIFICATION	1.1271315138317191E-7	DEFECT
// Restore original resource URI values. //	WITHOUT_CLASSIFICATION	0.9999962450360143	WITHOUT_CLASSIFICATION	3.754963985781144E-6	DEFECT
// The "suffix" can actually be a substitution pattern for the package name. //	WITHOUT_CLASSIFICATION	0.9999982493993441	WITHOUT_CLASSIFICATION	1.7506006558392722E-6	DEFECT
// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //	WITHOUT_CLASSIFICATION	0.9999995624333413	WITHOUT_CLASSIFICATION	4.3756665872081516E-7	DEFECT
// Any features that delegate to features in this package. //	WITHOUT_CLASSIFICATION	0.999990153980269	WITHOUT_CLASSIFICATION	9.846019730948963E-6	DEFECT
// If there are delegated features, add only those that aren't already in this package to the end of the list. //	WITHOUT_CLASSIFICATION	0.9999997782485931	WITHOUT_CLASSIFICATION	2.2175140692192493E-7	DEFECT
// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9983946733681793	WITHOUT_CLASSIFICATION	0.0016053266318205868	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999828066348325	WITHOUT_CLASSIFICATION	1.7193365167401637E-5	DEFECT
// source method return type is array (getExceptions), target is not array (i.e. addException)	WITHOUT_CLASSIFICATION	0.9999997985556882	WITHOUT_CLASSIFICATION	2.0144431185533422E-7	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999984202422393	WITHOUT_CLASSIFICATION	1.5797577606711431E-6	DEFECT
// We also need to set it on any GenModels holding any used or static packages that may be refered to. //	WITHOUT_CLASSIFICATION	0.9999984202422393	WITHOUT_CLASSIFICATION	1.5797577606711431E-6	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999442081795885	WITHOUT_CLASSIFICATION	5.579182041137155E-5	DEFECT
// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //	WITHOUT_CLASSIFICATION	0.9999442081795885	WITHOUT_CLASSIFICATION	5.579182041137155E-5	DEFECT
// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998681143976	WITHOUT_CLASSIFICATION	1.3188560245367612E-7	DEFECT
// If there are any warnings other than raw type warnings, include all the warnings. //	WITHOUT_CLASSIFICATION	0.9999831249317491	WITHOUT_CLASSIFICATION	1.6875068250839456E-5	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999906740141347	WITHOUT_CLASSIFICATION	9.325985865258675E-6	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999906740141347	WITHOUT_CLASSIFICATION	9.325985865258675E-6	DEFECT
// node is not marked up by now, but keep checking other rules 	WITHOUT_CLASSIFICATION	0.9999964616061002	WITHOUT_CLASSIFICATION	3.5383938998451693E-6	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999996313080755	WITHOUT_CLASSIFICATION	3.686919246058641E-7	DEFECT
// // Tests generation //	WITHOUT_CLASSIFICATION	0.999999272691338	WITHOUT_CLASSIFICATION	7.273086619560008E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999997605996905	WITHOUT_CLASSIFICATION	2.3940030949807744E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999997605996905	WITHOUT_CLASSIFICATION	2.3940030949807744E-7	DEFECT
// If we change to pattern defaults, will have to specify plain suffix in no main package case. //	WITHOUT_CLASSIFICATION	0.9999997605996905	WITHOUT_CLASSIFICATION	2.3940030949807744E-7	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999996313080755	WITHOUT_CLASSIFICATION	3.686919246058641E-7	DEFECT
// See if a GenModel is registered for the package's URI, and if so, try to load it. //	WITHOUT_CLASSIFICATION	0.9999999734779059	WITHOUT_CLASSIFICATION	2.6522094070398067E-8	DEFECT
// If that didn't work, just synthesize one. //	WITHOUT_CLASSIFICATION	0.9999796988558881	WITHOUT_CLASSIFICATION	2.030114411188916E-5	DEFECT
// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.	WITHOUT_CLASSIFICATION	0.9966137025339107	WITHOUT_CLASSIFICATION	0.0033862974660893996	DEFECT
// EATM  // Foreign Model	WITHOUT_CLASSIFICATION	0.9999767013733865	WITHOUT_CLASSIFICATION	2.3298626613531075E-5	DEFECT
// Any features from one package that delegate to features in another. //	WITHOUT_CLASSIFICATION	0.9999991993082205	WITHOUT_CLASSIFICATION	8.006917795932383E-7	DEFECT
// If there are features delegating across packages, add only those that aren't already being generated. //	WITHOUT_CLASSIFICATION	0.9999999350884464	WITHOUT_CLASSIFICATION	6.491155358116002E-8	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999926634420704	WITHOUT_CLASSIFICATION	7.336557929588126E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9942538074171413	WITHOUT_CLASSIFICATION	0.005746192582858645	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9982688987495504	WITHOUT_CLASSIFICATION	0.00173110125044962	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999989596994778	WITHOUT_CLASSIFICATION	1.0403005221628952E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999997270552637	WITHOUT_CLASSIFICATION	2.7294473616957645E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999780258414045	WITHOUT_CLASSIFICATION	2.1974158595568295E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999961144672418	WITHOUT_CLASSIFICATION	3.885532758148183E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999982896974791	WITHOUT_CLASSIFICATION	1.7103025209431549E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9995008546097934	WITHOUT_CLASSIFICATION	4.991453902064884E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999989791689198	WITHOUT_CLASSIFICATION	1.0208310802760795E-6	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.999995717188713	WITHOUT_CLASSIFICATION	4.282811286924798E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999995691047404	WITHOUT_CLASSIFICATION	4.308952596833556E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999998967378808	WITHOUT_CLASSIFICATION	1.0326211913724412E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999744611841593	WITHOUT_CLASSIFICATION	2.5538815840687357E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999711733480705	WITHOUT_CLASSIFICATION	2.8826651929399423E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.999998630901264	WITHOUT_CLASSIFICATION	1.3690987360656637E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998390279305	WITHOUT_CLASSIFICATION	1.609720693575134E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999998352463181	WITHOUT_CLASSIFICATION	1.6475368195032687E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999901870055078	WITHOUT_CLASSIFICATION	9.8129944922962E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999984304031563	WITHOUT_CLASSIFICATION	1.5695968438177716E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998370139732	WITHOUT_CLASSIFICATION	1.6298602677759794E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999991331818717	WITHOUT_CLASSIFICATION	8.668181283298151E-7	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9997171299399211	WITHOUT_CLASSIFICATION	2.82870060078901E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998614286956865	WITHOUT_CLASSIFICATION	1.3857130431347016E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999993886790319	WITHOUT_CLASSIFICATION	6.113209680376343E-7	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9987941301856387	WITHOUT_CLASSIFICATION	0.0012058698143613768	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999037915885	WITHOUT_CLASSIFICATION	9.620841144796071E-8	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999410216396	WITHOUT_CLASSIFICATION	5.8978360493443295E-8	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999940314736946	WITHOUT_CLASSIFICATION	5.968526305324236E-6	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999942374046991	WITHOUT_CLASSIFICATION	5.7625953009006174E-5	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999243818742231	WITHOUT_CLASSIFICATION	7.561812577697254E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999983125604547	WITHOUT_CLASSIFICATION	1.687439545209564E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999968163271782	WITHOUT_CLASSIFICATION	3.183672821781129E-6	DEFECT
// loop for all commented out nodes	WITHOUT_CLASSIFICATION	0.9999918956172533	WITHOUT_CLASSIFICATION	8.104382746789152E-6	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999243818742231	WITHOUT_CLASSIFICATION	7.561812577697254E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999974987954267	WITHOUT_CLASSIFICATION	2.5012045734269133E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999845965891139	WITHOUT_CLASSIFICATION	1.540341088616203E-5	DEFECT
// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)	WITHOUT_CLASSIFICATION	0.9999991211166739	WITHOUT_CLASSIFICATION	8.788833260868615E-7	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9998656288748533	WITHOUT_CLASSIFICATION	1.343711251466585E-4	DEFECT
// Nothing to do	WITHOUT_CLASSIFICATION	0.9999959504091218	WITHOUT_CLASSIFICATION	4.049590878215816E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999968163271782	WITHOUT_CLASSIFICATION	3.183672821781129E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9998656288748533	WITHOUT_CLASSIFICATION	1.343711251466585E-4	DEFECT
// Stop only on cancel. //	WITHOUT_CLASSIFICATION	0.9999949627180221	WITHOUT_CLASSIFICATION	5.037281977840282E-6	DEFECT
// insert line break at the first line if there is something before the node start and the beginning of the line	WITHOUT_CLASSIFICATION	0.9999999992301765	WITHOUT_CLASSIFICATION	7.698236645370162E-10	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.999964063086673	WITHOUT_CLASSIFICATION	3.593691332703313E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999977256889987	WITHOUT_CLASSIFICATION	2.2743110012697944E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
//Class/genFeature.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999998353118936	WITHOUT_CLASSIFICATION	1.646881063725686E-7	DEFECT
// Kick of a Java build if not already in a build. //	WITHOUT_CLASSIFICATION	0.9999839325934453	WITHOUT_CLASSIFICATION	1.6067406554744186E-5	DEFECT
//Class/implementedGenOperation.override.javajetinc //for	WITHOUT_CLASSIFICATION	0.9999999570073927	WITHOUT_CLASSIFICATION	4.2992607164369864E-8	DEFECT
// do not add a new line if there is one	WITHOUT_CLASSIFICATION	0.9999967691719149	WITHOUT_CLASSIFICATION	3.230828085057555E-6	DEFECT
// This call should get the files checked out from version control if the project is a 'team' project. //	WITHOUT_CLASSIFICATION	0.9999597125980975	WITHOUT_CLASSIFICATION	4.0287401902582756E-5	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.999983794322826	WITHOUT_CLASSIFICATION	1.620567717390305E-5	DEFECT
// Check which directive it is. //	WITHOUT_CLASSIFICATION	0.9999985740623576	WITHOUT_CLASSIFICATION	1.4259376423814273E-6	DEFECT
//reader.reset(start); //return false;	WITHOUT_CLASSIFICATION	0.9999999424614427	WITHOUT_CLASSIFICATION	5.753855735930085E-8	DEFECT
// Parse the attr-val pairs. //	WITHOUT_CLASSIFICATION	0.9999997953577797	WITHOUT_CLASSIFICATION	2.0464222030074245E-7	DEFECT
// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 	WITHOUT_CLASSIFICATION	0.9999900243410138	WITHOUT_CLASSIFICATION	9.975658986150642E-6	DEFECT
// Compute the URL for where the classes for this project will be located. //	WITHOUT_CLASSIFICATION	0.999998250665607	WITHOUT_CLASSIFICATION	1.7493343931109533E-6	DEFECT
// Compute the URLs for all the output folder of all the project dependencies. //	WITHOUT_CLASSIFICATION	0.9999995957735708	WITHOUT_CLASSIFICATION	4.0422642917566E-7	DEFECT
// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //	WITHOUT_CLASSIFICATION	0.9999967123109842	WITHOUT_CLASSIFICATION	3.2876890157994343E-6	DEFECT
// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //	WITHOUT_CLASSIFICATION	0.9999811018243359	WITHOUT_CLASSIFICATION	1.8898175664160973E-5	DEFECT
// Strip off the trailing "_" and load that class. //	WITHOUT_CLASSIFICATION	0.9999999483052086	WITHOUT_CLASSIFICATION	5.169479143710344E-8	DEFECT
// Check that the class is actually different from the one that's directly visible to the JETEmitter. //	WITHOUT_CLASSIFICATION	0.9999989303751398	WITHOUT_CLASSIFICATION	1.069624860235752E-6	DEFECT
// Don't do any of the other normally dynamic JETEmitter project processing. //	WITHOUT_CLASSIFICATION	0.999990381707953	WITHOUT_CLASSIFICATION	9.618292047117606E-6	DEFECT
// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //	WITHOUT_CLASSIFICATION	0.9999724318699706	WITHOUT_CLASSIFICATION	2.7568130029339625E-5	DEFECT
// Add the new entries, including source, JRE container, and added variables and classpath containers.  //	WITHOUT_CLASSIFICATION	0.9999999768183263	WITHOUT_CLASSIFICATION	2.318167363485873E-8	DEFECT
// Construct a proper URL for relative lookup. //	WITHOUT_CLASSIFICATION	0.9999996644802521	WITHOUT_CLASSIFICATION	3.355197478592633E-7	DEFECT
// Determine all the bundles that this project depends on. //	WITHOUT_CLASSIFICATION	0.999996900869796	WITHOUT_CLASSIFICATION	3.0991302039564155E-6	DEFECT
// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //	WITHOUT_CLASSIFICATION	0.985208533526199	WITHOUT_CLASSIFICATION	0.014791466473801038	DEFECT
// Add JETBuilder //	WITHOUT_CLASSIFICATION	0.9999931897853358	WITHOUT_CLASSIFICATION	6.810214664222057E-6	DEFECT
// Create .jetproperties file //	WITHOUT_CLASSIFICATION	0.9999997150465357	WITHOUT_CLASSIFICATION	2.849534642212457E-7	DEFECT
// clone includeStack without cloning contents //	WITHOUT_CLASSIFICATION	0.9999999500709708	WITHOUT_CLASSIFICATION	4.9929029368274437E-8	DEFECT
// Store the current state in stack. //	WITHOUT_CLASSIFICATION	0.9999984834563008	WITHOUT_CLASSIFICATION	1.5165436991603052E-6	DEFECT
// Set the new variables. //	WITHOUT_CLASSIFICATION	0.9999999785518248	WITHOUT_CLASSIFICATION	2.1448175210316247E-8	DEFECT
// Make sure we have something to pop. //	WITHOUT_CLASSIFICATION	0.9999991491482161	WITHOUT_CLASSIFICATION	8.508517838989479E-7	DEFECT
// Get previous state in stack. //	WITHOUT_CLASSIFICATION	0.9999997153709841	WITHOUT_CLASSIFICATION	2.846290158872239E-7	DEFECT
// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.	WITHOUT_CLASSIFICATION	0.9999960823763441	WITHOUT_CLASSIFICATION	3.91762365590025E-6	DEFECT
// Register the file, and read its content: //	WITHOUT_CLASSIFICATION	0.999983722823715	WITHOUT_CLASSIFICATION	1.627717628508179E-5	DEFECT
// Is stack created ? (will happen if the JET file we're looking at is missing. //	WITHOUT_CLASSIFICATION	0.9999405427459207	WITHOUT_CLASSIFICATION	5.945725407930052E-5	DEFECT
// Restore parser state: //	WITHOUT_CLASSIFICATION	0.9994915815997485	WITHOUT_CLASSIFICATION	5.084184002515733E-4	DEFECT
// Consume the open quote: //	WITHOUT_CLASSIFICATION	0.9999982396779289	WITHOUT_CLASSIFICATION	1.7603220711892227E-6	DEFECT
// Check end of quote, skip closing quote: //	WITHOUT_CLASSIFICATION	0.9999996489412593	WITHOUT_CLASSIFICATION	3.510587407172376E-7	DEFECT
// Get the attribute name: //	WITHOUT_CLASSIFICATION	0.9999991187258173	WITHOUT_CLASSIFICATION	8.812741826025237E-7	DEFECT
// Check for an equal sign: //	WITHOUT_CLASSIFICATION	0.999997309265794	WITHOUT_CLASSIFICATION	2.690734206113677E-6	DEFECT
// Get the attribute value: //	WITHOUT_CLASSIFICATION	0.9999988424957292	WITHOUT_CLASSIFICATION	1.1575042707591454E-6	DEFECT
// insert line break if there is non-whitespace before end of the line	WITHOUT_CLASSIFICATION	0.9999994988369338	WITHOUT_CLASSIFICATION	5.011630660653785E-7	DEFECT
// End of the useBean tag. //	WITHOUT_CLASSIFICATION	0.9999944346665586	WITHOUT_CLASSIFICATION	5.565333441406902E-6	DEFECT
// XMLesque Close tags //	WITHOUT_CLASSIFICATION	0.9999875259230413	WITHOUT_CLASSIFICATION	1.2474076958761003E-5	DEFECT
// Parse as an attribute=value: //	WITHOUT_CLASSIFICATION	0.9999987118807353	WITHOUT_CLASSIFICATION	1.288119264716917E-6	DEFECT
// Reached EOF: //	WITHOUT_CLASSIFICATION	0.9998558752978709	WITHOUT_CLASSIFICATION	1.4412470212917463E-4	DEFECT
// Look for an end-of-comment or end-of-tag: //	WITHOUT_CLASSIFICATION	0.9999446075721429	WITHOUT_CLASSIFICATION	5.5392427857206696E-5	DEFECT
// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //	WITHOUT_CLASSIFICATION	0.9999999673319077	WITHOUT_CLASSIFICATION	3.2668092354497133E-8	DEFECT
// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //	WITHOUT_CLASSIFICATION	0.9999999259812308	WITHOUT_CLASSIFICATION	7.40187692491276E-8	DEFECT
// The include failed, so if there is an alternative, we don't skip it. //	WITHOUT_CLASSIFICATION	0.9999999635047645	WITHOUT_CLASSIFICATION	3.649523541158837E-8	DEFECT
// A section is not allowed without a preceding include with alternative. //	WITHOUT_CLASSIFICATION	0.9995821387429056	WITHOUT_CLASSIFICATION	4.178612570944567E-4	DEFECT
// This pop is safe because a section couldn't have been started without an include that pushed. //	WITHOUT_CLASSIFICATION	0.9963145166367892	WITHOUT_CLASSIFICATION	0.003685483363210817	DEFECT
// Process this first. //	WITHOUT_CLASSIFICATION	0.9999996052736794	WITHOUT_CLASSIFICATION	3.947263205451716E-7	DEFECT
// Ignore this now //	WITHOUT_CLASSIFICATION	0.9999995286212641	WITHOUT_CLASSIFICATION	4.7137873589198546E-7	DEFECT
// If a newline from the previous character data remains, add a generator for it. //	WITHOUT_CLASSIFICATION	0.9999994879413214	WITHOUT_CLASSIFICATION	5.120586786432205E-7	DEFECT
// An expression with more that 931 "+" will break Sun and IBM javac compilers. //	WITHOUT_CLASSIFICATION	0.9999875683777496	WITHOUT_CLASSIFICATION	1.2431622250329193E-5	DEFECT
// Register our directive. //	WITHOUT_CLASSIFICATION	0.9999976516682123	WITHOUT_CLASSIFICATION	2.348331787776626E-6	DEFECT
// Ignore it if there are multiple comments. //	WITHOUT_CLASSIFICATION	0.9999996571487592	WITHOUT_CLASSIFICATION	3.4285124085243456E-7	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999990026285023	WITHOUT_CLASSIFICATION	9.973714977009617E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999999682155067	WITHOUT_CLASSIFICATION	3.1784493267681625E-8	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999194176321443	WITHOUT_CLASSIFICATION	8.058236785561563E-5	DEFECT
//  We expect this failure when running stand-alone //	WITHOUT_CLASSIFICATION	0.9997792507201294	WITHOUT_CLASSIFICATION	2.2074927987059058E-4	DEFECT
// JControlModel.class is used with classNames that were not found //	WITHOUT_CLASSIFICATION	0.9999928362391904	WITHOUT_CLASSIFICATION	7.1637608095656685E-6	DEFECT
// Ignore the further-most javadoc //	WITHOUT_CLASSIFICATION	0.9999999962336457	WITHOUT_CLASSIFICATION	3.76635431894773E-9	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999989174084515	WITHOUT_CLASSIFICATION	1.082591548520825E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999999818042344	WITHOUT_CLASSIFICATION	1.8195765469426322E-8	DEFECT
// There must be at least one match. //	WITHOUT_CLASSIFICATION	0.9999973816780621	WITHOUT_CLASSIFICATION	2.6183219378888034E-6	DEFECT
// Ignore if there is not substantial change. //	WITHOUT_CLASSIFICATION	0.9999988423451459	WITHOUT_CLASSIFICATION	1.1576548540289392E-6	DEFECT
// Create the options model. //	WITHOUT_CLASSIFICATION	0.9999996667001239	WITHOUT_CLASSIFICATION	3.332998761930982E-7	DEFECT
// Create a pattern dictionary for each. //	WITHOUT_CLASSIFICATION	0.9999194176321443	WITHOUT_CLASSIFICATION	8.058236785561563E-5	DEFECT
// retrieve source node corresponding to target //	WITHOUT_CLASSIFICATION	0.9999989174084515	WITHOUT_CLASSIFICATION	1.082591548520825E-6	DEFECT
// convert the target node to a compatible node //	WITHOUT_CLASSIFICATION	0.9999999818042344	WITHOUT_CLASSIFICATION	1.8195765469426322E-8	DEFECT
// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //	WITHOUT_CLASSIFICATION	0.9999999910985379	WITHOUT_CLASSIFICATION	8.901462148990041E-9	DEFECT
// Skip if there's an equality filter and the values aren't equal. //	WITHOUT_CLASSIFICATION	0.9999958750746444	WITHOUT_CLASSIFICATION	4.124925355624923E-6	DEFECT
// The methods were matched by a process that doesn't consider the // parameters	WITHOUT_CLASSIFICATION	0.9999920808479641	WITHOUT_CLASSIFICATION	7.919152035925356E-6	DEFECT
// Don't push method annotations into redirected methods. //	WITHOUT_CLASSIFICATION	0.9999929689173355	WITHOUT_CLASSIFICATION	7.031082664538117E-6	DEFECT
// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999949120570609	WITHOUT_CLASSIFICATION	5.087942939042187E-6	DEFECT
// Create the source and target JCompilationUnit. //	WITHOUT_CLASSIFICATION	0.9999999960701742	WITHOUT_CLASSIFICATION	3.929825858904787E-9	DEFECT
// apply changes using ASTRewrite //	WITHOUT_CLASSIFICATION	0.999999991264521	WITHOUT_CLASSIFICATION	8.735478995331476E-9	DEFECT
// apply additional edits like replacing or commenting out nodes //	WITHOUT_CLASSIFICATION	0.9999841310649253	WITHOUT_CLASSIFICATION	1.586893507464534E-5	DEFECT
// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it	WITHOUT_CLASSIFICATION	0.9999998815955748	WITHOUT_CLASSIFICATION	1.184044250970339E-7	DEFECT
// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)	WITHOUT_CLASSIFICATION	0.9998527672373857	WITHOUT_CLASSIFICATION	1.472327626143604E-4	DEFECT
// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used	WITHOUT_CLASSIFICATION	0.9999948004812095	WITHOUT_CLASSIFICATION	5.1995187905016135E-6	DEFECT
// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called	WITHOUT_CLASSIFICATION	0.9999768788712179	WITHOUT_CLASSIFICATION	2.3121128782080748E-5	DEFECT
// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //	WITHOUT_CLASSIFICATION	0.9999901207024877	WITHOUT_CLASSIFICATION	9.879297512230619E-6	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos	WITHOUT_CLASSIFICATION	0.9999995997771757	WITHOUT_CLASSIFICATION	4.0022282428634673E-7	DEFECT
// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 	WITHOUT_CLASSIFICATION	0.9999996457700265	WITHOUT_CLASSIFICATION	3.542299733944993E-7	DEFECT
// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment	WITHOUT_CLASSIFICATION	0.9999995363163839	WITHOUT_CLASSIFICATION	4.636836160729693E-7	DEFECT
// there is anything else but comma after constant - insert line break	WITHOUT_CLASSIFICATION	0.9999190015431821	WITHOUT_CLASSIFICATION	8.0998456817812E-5	DEFECT
// we don't want to include the line comments immediately before an import in the  // returned range	WITHOUT_CLASSIFICATION	0.9999993485737674	WITHOUT_CLASSIFICATION	6.514262326096589E-7	DEFECT
// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it	WITHOUT_CLASSIFICATION	0.999999918366231	WITHOUT_CLASSIFICATION	8.163376895769435E-8	DEFECT
// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)	WITHOUT_CLASSIFICATION	0.999981446291533	WITHOUT_CLASSIFICATION	1.855370846710955E-5	DEFECT
// replace arguments that match the name of the fields with the initializer value of the field //	WITHOUT_CLASSIFICATION	0.9999999660494329	WITHOUT_CLASSIFICATION	3.3950567081465917E-8	DEFECT
// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers	WITHOUT_CLASSIFICATION	0.9999999982356825	WITHOUT_CLASSIFICATION	1.7643174727251249E-9	DEFECT
// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //	WITHOUT_CLASSIFICATION	0.9999990026285023	WITHOUT_CLASSIFICATION	9.973714977009617E-7	DEFECT
// Create the source and target JDOMs. //	WITHOUT_CLASSIFICATION	0.9999999682155067	WITHOUT_CLASSIFICATION	3.1784493267681625E-8	DEFECT
// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)	WITHOUT_CLASSIFICATION	0.9999998982915463	WITHOUT_CLASSIFICATION	1.0170845362435014E-7	DEFECT
// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu	WITHOUT_CLASSIFICATION	0.9999999995098308	WITHOUT_CLASSIFICATION	4.901692360559526E-10	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //	WITHOUT_CLASSIFICATION	0.9999998123483601	WITHOUT_CLASSIFICATION	1.8765163984860428E-7	DEFECT
// Don't do replacement if previous line ended with a comment. //	WITHOUT_CLASSIFICATION	0.9999974702539097	WITHOUT_CLASSIFICATION	2.529746090168562E-6	DEFECT
// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9999916858263268	WITHOUT_CLASSIFICATION	8.31417367326285E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999950075243695	WITHOUT_CLASSIFICATION	4.99247563046606E-6	DEFECT
// Platform.resolve() doesn't work if the project is encoded. //	WITHOUT_CLASSIFICATION	0.9966539018006435	WITHOUT_CLASSIFICATION	0.0033460981993565	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9995854590215101	WITHOUT_CLASSIFICATION	4.14540978489974E-4	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999982595073741	WITHOUT_CLASSIFICATION	1.7404926259105832E-6	DEFECT
// There must be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999982595073741	WITHOUT_CLASSIFICATION	1.7404926259105832E-6	DEFECT
// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999843212073399	WITHOUT_CLASSIFICATION	1.567879266008666E-5	DEFECT
// There should be at least one archive separator per scheme. //	WITHOUT_CLASSIFICATION	0.9999944451322474	WITHOUT_CLASSIFICATION	5.554867752500293E-6	DEFECT
// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //	WITHOUT_CLASSIFICATION	0.9999853963885134	WITHOUT_CLASSIFICATION	1.4603611486684822E-5	DEFECT
// Skip a scheme for the archive accessor to be handled directly here. //	WITHOUT_CLASSIFICATION	0.9999933129961377	WITHOUT_CLASSIFICATION	6.687003862366486E-6	DEFECT
// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //	WITHOUT_CLASSIFICATION	0.9999999943077791	WITHOUT_CLASSIFICATION	5.692220958692674E-9	DEFECT
// Create the delegate URL. //	WITHOUT_CLASSIFICATION	0.999999970427553	WITHOUT_CLASSIFICATION	2.9572447083745124E-8	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.999997809383929	WITHOUT_CLASSIFICATION	2.190616070880476E-6	DEFECT
// The cutoff point to the next archive. //	WITHOUT_CLASSIFICATION	0.999997809383929	WITHOUT_CLASSIFICATION	2.190616070880476E-6	DEFECT
// Construct the input stream in a special efficient way for case of a file scheme. //	WITHOUT_CLASSIFICATION	0.9999999921359444	WITHOUT_CLASSIFICATION	7.864055606530794E-9	DEFECT
// Just get the stream from the URL. //	WITHOUT_CLASSIFICATION	0.9999997651365821	WITHOUT_CLASSIFICATION	2.3486341791868472E-7	DEFECT
// The name to be used for the entry. //	WITHOUT_CLASSIFICATION	0.9999970451829083	WITHOUT_CLASSIFICATION	2.9548170916194592E-6	DEFECT
// Skip over this archive path to the next one, since we are handling this one special. //	WITHOUT_CLASSIFICATION	0.9999993746237096	WITHOUT_CLASSIFICATION	6.253762903678664E-7	DEFECT
// Loop over the archive paths. //	WITHOUT_CLASSIFICATION	0.9999998683326285	WITHOUT_CLASSIFICATION	1.3166737147169622E-7	DEFECT
// The entry name to be matched. //	WITHOUT_CLASSIFICATION	0.9999868352837692	WITHOUT_CLASSIFICATION	1.316471623075187E-5	DEFECT
// Wrap the input stream as a zip stream to scan it's contents for a match. //	WITHOUT_CLASSIFICATION	0.9999999353350559	WITHOUT_CLASSIFICATION	6.46649440124295E-8	DEFECT
// Skip to the next archive path and continue the loop. //	WITHOUT_CLASSIFICATION	0.9999962092897245	WITHOUT_CLASSIFICATION	3.7907102754050093E-6	DEFECT
// Create the delegate URL //	WITHOUT_CLASSIFICATION	0.9999999894479049	WITHOUT_CLASSIFICATION	1.055209499051504E-8	DEFECT
// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //	WITHOUT_CLASSIFICATION	0.999999972681072	WITHOUT_CLASSIFICATION	2.7318928069502823E-8	DEFECT
// Record the input and output streams for closing in case of failure so that handles are not left open. //	WITHOUT_CLASSIFICATION	0.9999709510823411	WITHOUT_CLASSIFICATION	2.9048917658879823E-5	DEFECT
// Create the output stream to the temporary file and the input stream for the delegate URL. //	WITHOUT_CLASSIFICATION	0.9999999977707452	WITHOUT_CLASSIFICATION	2.229254746274258E-9	DEFECT
// The most deeply nested output stream that will be returned wrapped as the result. //	WITHOUT_CLASSIFICATION	0.9999967028004608	WITHOUT_CLASSIFICATION	3.2971995392105894E-6	DEFECT
// A buffer for transferring archive contents. //	WITHOUT_CLASSIFICATION	0.9999998061222061	WITHOUT_CLASSIFICATION	1.938777939837853E-7	DEFECT
// We expect there to be at least one archive path. //	WITHOUT_CLASSIFICATION	0.9999622870596978	WITHOUT_CLASSIFICATION	3.771294030219864E-5	DEFECT
// The name that will be used as the archive entry. //	WITHOUT_CLASSIFICATION	0.9999931721318861	WITHOUT_CLASSIFICATION	6.827868113935261E-6	DEFECT
// Wrap the current result as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999979463837008	WITHOUT_CLASSIFICATION	2.053616299355066E-6	DEFECT
// Wrap the current input as a zip stream, and record it for loop-based recursion. //	WITHOUT_CLASSIFICATION	0.9999969142909322	WITHOUT_CLASSIFICATION	3.0857090678039096E-6	DEFECT
// Loop over the entries in the zip stream. //	WITHOUT_CLASSIFICATION	0.9999991564330686	WITHOUT_CLASSIFICATION	8.435669314247039E-7	DEFECT
// Transfer the entry and its contents. //	WITHOUT_CLASSIFICATION	0.9999986904216005	WITHOUT_CLASSIFICATION	1.3095783995551585E-6	DEFECT
// Find the next archive path and continue "recursively" if there is one. //	WITHOUT_CLASSIFICATION	0.9999919715219691	WITHOUT_CLASSIFICATION	8.028478030923834E-6	DEFECT
// Create no entry since we are deleting and return immediately. //	WITHOUT_CLASSIFICATION	0.9999999875160207	WITHOUT_CLASSIFICATION	1.2483979239311859E-8	DEFECT
// Create a new or replaced entry and continue processing the remaining archives. //	WITHOUT_CLASSIFICATION	0.9999998614334773	WITHOUT_CLASSIFICATION	1.385665227274793E-7	DEFECT
// Ensure that it won't be closed in the finally block. //	WITHOUT_CLASSIFICATION	0.9999666230035201	WITHOUT_CLASSIFICATION	3.3376996479901056E-5	DEFECT
// Wrap the deepest result so that on close, the results are finally transferred. //	WITHOUT_CLASSIFICATION	0.9999999233928007	WITHOUT_CLASSIFICATION	7.660719929035869E-8	DEFECT
// Make sure we close only once. //	WITHOUT_CLASSIFICATION	0.9999994139351362	WITHOUT_CLASSIFICATION	5.860648638877713E-7	DEFECT
// Close for real so that the temporary file is ready to be read. //	WITHOUT_CLASSIFICATION	0.9999998297835011	WITHOUT_CLASSIFICATION	1.702164989004677E-7	DEFECT
// Make sure they are closed no matter what bad thing happens. //	WITHOUT_CLASSIFICATION	0.9999992607914608	WITHOUT_CLASSIFICATION	7.392085390673081E-7	DEFECT
// Close in case of failure to complete. //	WITHOUT_CLASSIFICATION	0.9999989685400814	WITHOUT_CLASSIFICATION	1.0314599186574366E-6	DEFECT
// Close if we created this. //	WITHOUT_CLASSIFICATION	0.9999999771314312	WITHOUT_CLASSIFICATION	2.286856884040558E-8	DEFECT
// Go through the commands of the list. //	WITHOUT_CLASSIFICATION	0.9999917604049529	WITHOUT_CLASSIFICATION	8.23959504712142E-6	DEFECT
// If there are some... //	WITHOUT_CLASSIFICATION	0.9999928117716982	WITHOUT_CLASSIFICATION	7.188228301870333E-6	DEFECT
// The termination guard is in the body. //	WITHOUT_CLASSIFICATION	0.9999929854461881	WITHOUT_CLASSIFICATION	7.014553811922929E-6	DEFECT
// We can't undo it, so we'd better give up. //	WITHOUT_CLASSIFICATION	0.9999985630455822	WITHOUT_CLASSIFICATION	1.4369544177555567E-6	DEFECT
// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //	WITHOUT_CLASSIFICATION	0.99978063174042	WITHOUT_CLASSIFICATION	2.1936825957991602E-4	DEFECT
// If we can't execute this one, we just can't do it at all. //	WITHOUT_CLASSIFICATION	0.9999970883581113	WITHOUT_CLASSIFICATION	2.911641888681034E-6	DEFECT
// If we are pessimistic, then we need to undo all the commands that we have executed so far. //	WITHOUT_CLASSIFICATION	0.9997578717575145	WITHOUT_CLASSIFICATION	2.421282424854632E-4	DEFECT
// The most recently processed command will never have been executed. //	WITHOUT_CLASSIFICATION	0.9997942585332427	WITHOUT_CLASSIFICATION	2.0574146675736657E-4	DEFECT
// We want to unroll all the effects of the previous commands. //	WITHOUT_CLASSIFICATION	0.9999525506409699	WITHOUT_CLASSIFICATION	4.74493590301501E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.999928136263363	WITHOUT_CLASSIFICATION	7.18637366369391E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999768478976021	WITHOUT_CLASSIFICATION	2.3152102397843688E-5	DEFECT
// If the command is executable, record and execute it. //	WITHOUT_CLASSIFICATION	0.9995688031224388	WITHOUT_CLASSIFICATION	4.3119687756119717E-4	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999998058210091	WITHOUT_CLASSIFICATION	1.941789907714536E-7	DEFECT
// Record the successfully executed command. //	WITHOUT_CLASSIFICATION	0.9998156353257773	WITHOUT_CLASSIFICATION	1.8436467422269036E-4	DEFECT
// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below	WITHOUT_CLASSIFICATION	0.9999968807965557	WITHOUT_CLASSIFICATION	3.1192034441726346E-6	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999768478976021	WITHOUT_CLASSIFICATION	2.3152102397843688E-5	DEFECT
// Clear the list past the top. //	WITHOUT_CLASSIFICATION	0.9999998058210091	WITHOUT_CLASSIFICATION	1.941789907714536E-7	DEFECT
// This forces isSaveNeded to always be true. //	WITHOUT_CLASSIFICATION	0.999998585097994	WITHOUT_CLASSIFICATION	1.4149020060208079E-6	DEFECT
// Clear the list. //	WITHOUT_CLASSIFICATION	0.9999999559413939	WITHOUT_CLASSIFICATION	4.405860616616208E-8	DEFECT
//  Remember where we are now. //	WITHOUT_CLASSIFICATION	0.9999967086026433	WITHOUT_CLASSIFICATION	3.291397356562216E-6	DEFECT
// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;	WITHOUT_CLASSIFICATION	0.9999999593018666	WITHOUT_CLASSIFICATION	4.069813340083595E-8	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.999928136263363	WITHOUT_CLASSIFICATION	7.18637366369391E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.999928136263363	WITHOUT_CLASSIFICATION	7.18637366369391E-5	DEFECT
// Iterate back over the executed commands to undo them. //	WITHOUT_CLASSIFICATION	0.9999768478976021	WITHOUT_CLASSIFICATION	2.3152102397843688E-5	DEFECT
// Iterate forward over the undone commands to redo them. //	WITHOUT_CLASSIFICATION	0.9999984386281054	WITHOUT_CLASSIFICATION	1.5613718944941718E-6	DEFECT
// This ensures that these useless state variables at least reflect the right value. //	WITHOUT_CLASSIFICATION	0.9999830449386443	WITHOUT_CLASSIFICATION	1.6955061355732726E-5	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.999998812430334	WITHOUT_CLASSIFICATION	1.1875696660943988E-6	DEFECT
// Copy to a list and allocate positions. //	WITHOUT_CLASSIFICATION	0.999998812430334	WITHOUT_CLASSIFICATION	1.1875696660943988E-6	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999999892527307	WITHOUT_CLASSIFICATION	1.0747269299397177E-7	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999955720157886	WITHOUT_CLASSIFICATION	4.427984211413357E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999799184083248	WITHOUT_CLASSIFICATION	2.008159167519022E-5	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999799184083248	WITHOUT_CLASSIFICATION	2.008159167519022E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.999998555342085	WITHOUT_CLASSIFICATION	1.4446579149925254E-6	DEFECT
// If any objects are matched. //	WITHOUT_CLASSIFICATION	0.9999955720157886	WITHOUT_CLASSIFICATION	4.427984211413357E-6	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999799184083248	WITHOUT_CLASSIFICATION	2.008159167519022E-5	DEFECT
// Compact the results to remove unmatched objects //	WITHOUT_CLASSIFICATION	0.999998555342085	WITHOUT_CLASSIFICATION	1.4446579149925254E-6	DEFECT
// Create view form.     //control = new ViewForm(parent, getStyle());	WITHOUT_CLASSIFICATION	0.9999777389204015	WITHOUT_CLASSIFICATION	2.2261079598455027E-5	DEFECT
// Listen to title changes. // getViewPart().addPropertyListener(this);	WITHOUT_CLASSIFICATION	0.9999999163423029	WITHOUT_CLASSIFICATION	8.365769702476761E-8	DEFECT
//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));	WITHOUT_CLASSIFICATION	0.9999999901827396	WITHOUT_CLASSIFICATION	9.817260459045376E-9	DEFECT
//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());	WITHOUT_CLASSIFICATION	0.9999956935859414	WITHOUT_CLASSIFICATION	4.30641405855042E-6	DEFECT
//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);	WITHOUT_CLASSIFICATION	0.9999947554762659	WITHOUT_CLASSIFICATION	5.2445237341199935E-6	DEFECT
// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());	WITHOUT_CLASSIFICATION	0.9999998213673539	WITHOUT_CLASSIFICATION	1.7863264605381004E-7	DEFECT
// If there are objects to populate... //	WITHOUT_CLASSIFICATION	0.9999283510476951	WITHOUT_CLASSIFICATION	7.164895230495285E-5	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999992870387542	WITHOUT_CLASSIFICATION	7.129612457442077E-7	DEFECT
// Fill in the result array with labels and re-populate the original list in order. //	WITHOUT_CLASSIFICATION	0.999936656561688	WITHOUT_CLASSIFICATION	6.334343831197487E-5	DEFECT
// Fill in the array with labels. //	WITHOUT_CLASSIFICATION	0.9999477727065474	WITHOUT_CLASSIFICATION	5.222729345244596E-5	DEFECT
// Get the index into the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999957362101992	WITHOUT_CLASSIFICATION	4.263789800775471E-6	DEFECT
// Set the index of the object value in the list via this call to super. //	WITHOUT_CLASSIFICATION	0.9999942387584713	WITHOUT_CLASSIFICATION	5.761241528719797E-6	DEFECT
// Ensure there are no extraneous style bits. //	WITHOUT_CLASSIFICATION	0.9999999621401858	WITHOUT_CLASSIFICATION	3.785981412074373E-8	DEFECT
// Assign default style bits, if necessary, and ensure none conflict. //	WITHOUT_CLASSIFICATION	0.9999999552561412	WITHOUT_CLASSIFICATION	4.4743858762614164E-8	DEFECT
// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //	WITHOUT_CLASSIFICATION	0.9999999999143686	WITHOUT_CLASSIFICATION	8.563131017248026E-11	DEFECT
// On Motif, selection color may be set as background. //	WITHOUT_CLASSIFICATION	0.9999514869936973	WITHOUT_CLASSIFICATION	4.851300630273292E-5	DEFECT
// Draw the extra first-column image. //	WITHOUT_CLASSIFICATION	0.9999995011081542	WITHOUT_CLASSIFICATION	4.988918457636425E-7	DEFECT
// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //	WITHOUT_CLASSIFICATION	0.999999625141488	WITHOUT_CLASSIFICATION	3.748585120695028E-7	DEFECT
// If the table is indenting, draw tree lines. //	WITHOUT_CLASSIFICATION	0.9999996613432791	WITHOUT_CLASSIFICATION	3.386567208618819E-7	DEFECT
//private final boolean iri; //private URI cachedASCIIURI;	WITHOUT_CLASSIFICATION	0.9999989794748458	WITHOUT_CLASSIFICATION	1.0205251541328855E-6	DEFECT
// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999985523025	WITHOUT_CLASSIFICATION	1.4476975005533176E-9	DEFECT
//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");	WITHOUT_CLASSIFICATION	0.9999977539685837	WITHOUT_CLASSIFICATION	2.2460314162233687E-6	DEFECT
// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999999625253463	WITHOUT_CLASSIFICATION	3.7474653626690086E-8	DEFECT
// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.	WITHOUT_CLASSIFICATION	0.9999997542821879	WITHOUT_CLASSIFICATION	2.457178120810676E-7	DEFECT
// Returns the lower half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999997887207133	WITHOUT_CLASSIFICATION	2.112792868120793E-7	DEFECT
// Returns whether the given character is in the set specified by the given // bitmask.	WITHOUT_CLASSIFICATION	0.9999999457171574	WITHOUT_CLASSIFICATION	5.428284243632272E-8	DEFECT
// Converts null to length-zero array, and clones array to ensure // immutability.	WITHOUT_CLASSIFICATION	0.9999999561812688	WITHOUT_CLASSIFICATION	4.381873106718693E-8	DEFECT
// Checks whether the string contains any more segments after the one that // starts at position i.	WITHOUT_CLASSIFICATION	0.9999995628143601	WITHOUT_CLASSIFICATION	4.3718563997244774E-7	DEFECT
// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.	WITHOUT_CLASSIFICATION	0.9999992956481351	WITHOUT_CLASSIFICATION	7.043518648735877E-7	DEFECT
// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...	WITHOUT_CLASSIFICATION	0.9992107925595018	WITHOUT_CLASSIFICATION	7.892074404981043E-4	DEFECT
// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>	WITHOUT_CLASSIFICATION	0.999999106891093	WITHOUT_CLASSIFICATION	8.931089071290312E-7	DEFECT
// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 	WITHOUT_CLASSIFICATION	0.999999918656479	WITHOUT_CLASSIFICATION	8.134352095557321E-8	DEFECT
//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999998899994242	WITHOUT_CLASSIFICATION	1.1000057568231753E-7	DEFECT
// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>	WITHOUT_CLASSIFICATION	0.9999999067086632	WITHOUT_CLASSIFICATION	9.329133671136474E-8	DEFECT
// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 	WITHOUT_CLASSIFICATION	0.9999998340937349	WITHOUT_CLASSIFICATION	1.6590626508014275E-7	DEFECT
// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 	WITHOUT_CLASSIFICATION	0.9999995048351492	WITHOUT_CLASSIFICATION	4.951648507791494E-7	DEFECT
// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.	WITHOUT_CLASSIFICATION	0.9999999999581989	WITHOUT_CLASSIFICATION	4.1801040160973644E-11	DEFECT
// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999972324249948	WITHOUT_CLASSIFICATION	2.767575005197012E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999960759362418	WITHOUT_CLASSIFICATION	3.924063758208739E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999960759362418	WITHOUT_CLASSIFICATION	3.924063758208739E-6	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999960759362418	WITHOUT_CLASSIFICATION	3.924063758208739E-6	DEFECT
// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.	WITHOUT_CLASSIFICATION	0.9999998934653594	WITHOUT_CLASSIFICATION	1.0653464054274819E-7	DEFECT
// Tests whether this URI's path segment array is equal to that of the // given uri.	WITHOUT_CLASSIFICATION	0.9999978657568294	WITHOUT_CLASSIFICATION	2.134243170536122E-6	DEFECT
// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.	WITHOUT_CLASSIFICATION	0.9999965372031814	WITHOUT_CLASSIFICATION	3.4627968185658923E-6	DEFECT
// Tests two strings for equality, tolerating nulls and optionally // ignoring case.	WITHOUT_CLASSIFICATION	0.9999999506865181	WITHOUT_CLASSIFICATION	4.931348179398737E-8	DEFECT
// note: it's okay for two URIs to share a segments array, since // neither will ever modify it	WITHOUT_CLASSIFICATION	0.9997140541831284	WITHOUT_CLASSIFICATION	2.859458168715988E-4	DEFECT
// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 	WITHOUT_CLASSIFICATION	0.9999740130666789	WITHOUT_CLASSIFICATION	2.5986933321103353E-5	DEFECT
// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.99999998768918	WITHOUT_CLASSIFICATION	1.2310819984561742E-8	DEFECT
// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path	WITHOUT_CLASSIFICATION	0.9999958790611855	WITHOUT_CLASSIFICATION	4.1209388145436674E-6	DEFECT
// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.	WITHOUT_CLASSIFICATION	0.9999995100579401	WITHOUT_CLASSIFICATION	4.899420599877374E-7	DEFECT
// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed	WITHOUT_CLASSIFICATION	0.9999984313621492	WITHOUT_CLASSIFICATION	1.5686378509109416E-6	DEFECT
// unless we're already accumulating root parent references, // parent references simply pop the last segment descended	WITHOUT_CLASSIFICATION	0.9999990112090315	WITHOUT_CLASSIFICATION	9.887909685950942E-7	DEFECT
// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path	WITHOUT_CLASSIFICATION	0.9999845703926742	WITHOUT_CLASSIFICATION	1.54296073257782E-5	DEFECT
// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.	WITHOUT_CLASSIFICATION	0.999992632433806	WITHOUT_CLASSIFICATION	7.367566193988322E-6	DEFECT
// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents	WITHOUT_CLASSIFICATION	0.9999488693267691	WITHOUT_CLASSIFICATION	5.1130673230821256E-5	DEFECT
// a single separator, possibly preceded by some parent reference // segments, is redundant	WITHOUT_CLASSIFICATION	0.9999947488597049	WITHOUT_CLASSIFICATION	5.251140295071817E-6	DEFECT
// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference	WITHOUT_CLASSIFICATION	0.9999997020384677	WITHOUT_CLASSIFICATION	2.9796153229053326E-7	DEFECT
// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.	WITHOUT_CLASSIFICATION	0.9999999929025833	WITHOUT_CLASSIFICATION	7.097416656373281E-9	DEFECT
// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator	WITHOUT_CLASSIFICATION	0.9999992684369254	WITHOUT_CLASSIFICATION	7.315630745071225E-7	DEFECT
// Returns a string representation of this URI for debugging, explicitly // showing each of the components.	WITHOUT_CLASSIFICATION	0.9999867972904216	WITHOUT_CLASSIFICATION	1.3202709578412031E-5	DEFECT
// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.	WITHOUT_CLASSIFICATION	0.9999926996424411	WITHOUT_CLASSIFICATION	7.300357558890802E-6	DEFECT
// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.	WITHOUT_CLASSIFICATION	0.99999722362983	WITHOUT_CLASSIFICATION	2.776370170031078E-6	DEFECT
// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.	WITHOUT_CLASSIFICATION	0.9999959123518384	WITHOUT_CLASSIFICATION	4.087648161711198E-6	DEFECT
// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.	WITHOUT_CLASSIFICATION	0.9999830373871633	WITHOUT_CLASSIFICATION	1.6962612836623463E-5	DEFECT
// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.	WITHOUT_CLASSIFICATION	0.9999999026565799	WITHOUT_CLASSIFICATION	9.734342016936433E-8	DEFECT
// create new field and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999875783442858	WITHOUT_CLASSIFICATION	1.2421655714237072E-5	DEFECT
// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.	WITHOUT_CLASSIFICATION	0.9999984221583359	WITHOUT_CLASSIFICATION	1.5778416641491738E-6	DEFECT
// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.	WITHOUT_CLASSIFICATION	0.9999999945917438	WITHOUT_CLASSIFICATION	5.408256175589856E-9	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999993244483385	WITHOUT_CLASSIFICATION	6.755516614989202E-7	DEFECT
// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.	WITHOUT_CLASSIFICATION	0.9999998039793393	WITHOUT_CLASSIFICATION	1.9602066075415636E-7	DEFECT
// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.	WITHOUT_CLASSIFICATION	0.9999533644731043	WITHOUT_CLASSIFICATION	4.663552689574088E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999940340581368	WITHOUT_CLASSIFICATION	5.965941863191838E-6	DEFECT
// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //	WITHOUT_CLASSIFICATION	0.9999937515990066	WITHOUT_CLASSIFICATION	6.248400993465226E-6	DEFECT
// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.	WITHOUT_CLASSIFICATION	0.9991509656535447	WITHOUT_CLASSIFICATION	8.490343464553001E-4	DEFECT
// Determine the base URL by looking for the plugin.properties file in the standard way. //	WITHOUT_CLASSIFICATION	0.999973336543253	WITHOUT_CLASSIFICATION	2.6663456746945192E-5	DEFECT
// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal	WITHOUT_CLASSIFICATION	0.9999756045272807	WITHOUT_CLASSIFICATION	2.4395472719308192E-5	DEFECT
// for enum constants use special range	WITHOUT_CLASSIFICATION	0.9999998191579873	WITHOUT_CLASSIFICATION	1.808420127108673E-7	DEFECT
//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }	WITHOUT_CLASSIFICATION	0.9999999991261782	WITHOUT_CLASSIFICATION	8.738219005521287E-10	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999863163667326	WITHOUT_CLASSIFICATION	1.3683633267386949E-5	DEFECT
// clear old values	WITHOUT_CLASSIFICATION	0.9999989044102883	WITHOUT_CLASSIFICATION	1.0955897116681178E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999765954357486	WITHOUT_CLASSIFICATION	2.3404564251398025E-5	DEFECT
// For an archive URI, check for the plugin.properties in the archive. //	WITHOUT_CLASSIFICATION	0.9999960857225124	WITHOUT_CLASSIFICATION	3.914277487651566E-6	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999989375252724	WITHOUT_CLASSIFICATION	1.062474727622682E-6	DEFECT
// Trim off the "bin" or "runtime" segment. //	WITHOUT_CLASSIFICATION	0.9999950075243695	WITHOUT_CLASSIFICATION	4.99247563046606E-6	DEFECT
// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //	WITHOUT_CLASSIFICATION	0.9998009638819161	WITHOUT_CLASSIFICATION	1.9903611808380888E-4	DEFECT
// If we didn't find the plugin.properties in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.998993831687867	WITHOUT_CLASSIFICATION	0.0010061683121328872	DEFECT
// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9999092156691699	WITHOUT_CLASSIFICATION	9.078433083008863E-5	DEFECT
// If we still don't have a good base URL, complain about it. //	WITHOUT_CLASSIFICATION	0.9999854729020256	WITHOUT_CLASSIFICATION	1.4527097974432918E-5	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.	WITHOUT_CLASSIFICATION	0.9999924338782543	WITHOUT_CLASSIFICATION	7.566121745668772E-6	DEFECT
// If we are still on the root mapping itself... //	WITHOUT_CLASSIFICATION	0.9982294376493467	WITHOUT_CLASSIFICATION	0.001770562350653298	DEFECT
// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.999552448428592	WITHOUT_CLASSIFICATION	4.475515714079879E-4	DEFECT
// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //	WITHOUT_CLASSIFICATION	0.9999999984434355	WITHOUT_CLASSIFICATION	1.5565645456862168E-9	DEFECT
// If the result about to be returned has children... //	WITHOUT_CLASSIFICATION	0.9999843238259227	WITHOUT_CLASSIFICATION	1.5676174077272525E-5	DEFECT
// Record the iterator as the next one to prune, and add it to the stack. //	WITHOUT_CLASSIFICATION	0.999970481750106	WITHOUT_CLASSIFICATION	2.9518249893983145E-5	DEFECT
// There will be no iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999993470959884	WITHOUT_CLASSIFICATION	6.529040116113463E-7	DEFECT
// While the current iterator has no next... //	WITHOUT_CLASSIFICATION	0.9999710078277126	WITHOUT_CLASSIFICATION	2.899217228740683E-5	DEFECT
// Pop it from the stack. //	WITHOUT_CLASSIFICATION	0.9999989076078929	WITHOUT_CLASSIFICATION	1.0923921071316463E-6	DEFECT
// If the stack is empty, we're done. //	WITHOUT_CLASSIFICATION	0.9999954998797573	WITHOUT_CLASSIFICATION	4.500120242737849E-6	DEFECT
// if the given class is subclass of enum and node is of subclass of type	WITHOUT_CLASSIFICATION	0.9998934020904122	WITHOUT_CLASSIFICATION	1.0659790958780413E-4	DEFECT
// Pop it off the stack. //	WITHOUT_CLASSIFICATION	0.9999995107709869	WITHOUT_CLASSIFICATION	4.892290130223545E-7	DEFECT
// Get the next one down and then test it for has next. //	WITHOUT_CLASSIFICATION	0.9999945067126119	WITHOUT_CLASSIFICATION	5.493287388123855E-6	DEFECT
// If there is an iterator to prune. //	WITHOUT_CLASSIFICATION	0.9999998166719837	WITHOUT_CLASSIFICATION	1.8332801642134205E-7	DEFECT
// You can only prune once. //	WITHOUT_CLASSIFICATION	0.9999993306791586	WITHOUT_CLASSIFICATION	6.69320841399834E-7	DEFECT
// If that iterator is still at the top of the stack... //	WITHOUT_CLASSIFICATION	0.99996257752168	WITHOUT_CLASSIFICATION	3.742247832001747E-5	DEFECT
// Allow for a bit-shift of growth. //	WITHOUT_CLASSIFICATION	0.9999859954948815	WITHOUT_CLASSIFICATION	1.4004505118389072E-5	DEFECT
// Keep popping the stack until an iterator that has a next is at the top. //	WITHOUT_CLASSIFICATION	0.9998814861032694	WITHOUT_CLASSIFICATION	1.1851389673049889E-4	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999447778547923	WITHOUT_CLASSIFICATION	5.522214520766921E-5	DEFECT
//  ++modCount //	WITHOUT_CLASSIFICATION	0.9999894154050597	WITHOUT_CLASSIFICATION	1.0584594940255083E-5	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999994776521147	WITHOUT_CLASSIFICATION	5.22347885160515E-7	DEFECT
// Guard for no data. //	WITHOUT_CLASSIFICATION	0.9999994776521147	WITHOUT_CLASSIFICATION	5.22347885160515E-7	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999948432470284	WITHOUT_CLASSIFICATION	5.156752971639908E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999948432470284	WITHOUT_CLASSIFICATION	5.156752971639908E-6	DEFECT
// Conditionally create the data. //	WITHOUT_CLASSIFICATION	0.9999447778547923	WITHOUT_CLASSIFICATION	5.522214520766921E-5	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999948432470284	WITHOUT_CLASSIFICATION	5.156752971639908E-6	DEFECT
// Don't hold onto a duplicate reference to the last object. //	WITHOUT_CLASSIFICATION	0.9999972133917492	WITHOUT_CLASSIFICATION	2.7866082507605083E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999939548895623	WITHOUT_CLASSIFICATION	6.045110437604148E-6	DEFECT
// Give it all back to the garbage collector. //	WITHOUT_CLASSIFICATION	0.9999939548895623	WITHOUT_CLASSIFICATION	6.045110437604148E-6	DEFECT
// Write the capacity. //	WITHOUT_CLASSIFICATION	0.9999973043692051	WITHOUT_CLASSIFICATION	2.6956307948917865E-6	DEFECT
// create map of public static final field initializers to fields	WITHOUT_CLASSIFICATION	0.999999757241342	WITHOUT_CLASSIFICATION	2.4275865798184193E-7	DEFECT
// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //	WITHOUT_CLASSIFICATION	0.9999990007095274	WITHOUT_CLASSIFICATION	9.992904725594691E-7	DEFECT
// This should be transparent. //	WITHOUT_CLASSIFICATION	0.9998277714999759	WITHOUT_CLASSIFICATION	1.722285000241869E-4	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Write all the entryData; there will be size of them. //	WITHOUT_CLASSIFICATION	0.9999438573096101	WITHOUT_CLASSIFICATION	5.614269038998746E-5	DEFECT
// Restore the capacity, if there was any. //	WITHOUT_CLASSIFICATION	0.9999940308374132	WITHOUT_CLASSIFICATION	5.969162586877449E-6	DEFECT
// Read all size number of entryData. //	WITHOUT_CLASSIFICATION	0.9999798060308681	WITHOUT_CLASSIFICATION	2.019396913189927E-5	DEFECT
//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000	WITHOUT_CLASSIFICATION	0.999963842088621	WITHOUT_CLASSIFICATION	3.615791137901751E-5	DEFECT
//0000 0000 1111 //1111 0000 0000	WITHOUT_CLASSIFICATION	0.9999634721924978	WITHOUT_CLASSIFICATION	3.652780750216617E-5	DEFECT
// This just represents going back to the unset state, but that doesn't affect the contents of the list. //	WITHOUT_CLASSIFICATION	0.9999983872680062	WITHOUT_CLASSIFICATION	1.6127319938599105E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// add all converted fields after the last final field  // that is used in initializers of the converted fields	WITHOUT_CLASSIFICATION	0.9999995384863508	WITHOUT_CLASSIFICATION	4.615136492116565E-7	DEFECT
// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //	WITHOUT_CLASSIFICATION	0.9999999988112106	WITHOUT_CLASSIFICATION	1.1887894073417468E-9	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999991710291825	WITHOUT_CLASSIFICATION	8.289708175976473E-7	DEFECT
// create field initializer from enum constant's arguments and body	WITHOUT_CLASSIFICATION	0.9999999466051082	WITHOUT_CLASSIFICATION	5.339489188658322E-8	DEFECT
// Apply the change. //	WITHOUT_CLASSIFICATION	0.9999935631882864	WITHOUT_CLASSIFICATION	6.436811713632285E-6	DEFECT
// Delete the change information because it is invalid now that the objects have been changed. //	WITHOUT_CLASSIFICATION	0.99999998104016	WITHOUT_CLASSIFICATION	1.8959840061994577E-8	DEFECT
// Apply the change and reverse the change information. //	WITHOUT_CLASSIFICATION	0.9999975513325059	WITHOUT_CLASSIFICATION	2.448667494166935E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// set original node of annotations (to allow get methods to work correctly)	WITHOUT_CLASSIFICATION	0.9727493744903032	WITHOUT_CLASSIFICATION	0.02725062550969677	DEFECT
// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.	WITHOUT_CLASSIFICATION	0.9988189613877873	WITHOUT_CLASSIFICATION	0.001181038612212752	DEFECT
// Reverse the objects to attach and detach lists. //	WITHOUT_CLASSIFICATION	0.9999991659115568	WITHOUT_CLASSIFICATION	8.34088443236266E-7	DEFECT
// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //	WITHOUT_CLASSIFICATION	0.999999997819803	WITHOUT_CLASSIFICATION	2.1801970080026344E-9	DEFECT
// This case will be handled special during apply //	WITHOUT_CLASSIFICATION	0.9999967678709863	WITHOUT_CLASSIFICATION	3.232129013565503E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999808295245	WITHOUT_CLASSIFICATION	1.9170475569138892E-8	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999951086000777	WITHOUT_CLASSIFICATION	4.891399922294636E-6	DEFECT
// If there's no position, the list is being cleared. //	WITHOUT_CLASSIFICATION	0.9999951086000777	WITHOUT_CLASSIFICATION	4.891399922294636E-6	DEFECT
// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //	WITHOUT_CLASSIFICATION	0.9999999131260315	WITHOUT_CLASSIFICATION	8.687396848745428E-8	DEFECT
// When we attached we have to recompute the erasure of the type parameter. //	WITHOUT_CLASSIFICATION	0.9999987237369267	WITHOUT_CLASSIFICATION	1.276263073331936E-6	DEFECT
// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error	WITHOUT_CLASSIFICATION	0.999954164736537	WITHOUT_CLASSIFICATION	4.583526346303758E-5	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999606411198937	WITHOUT_CLASSIFICATION	3.935888010628442E-5	DEFECT
// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //	WITHOUT_CLASSIFICATION	0.9999998936882026	WITHOUT_CLASSIFICATION	1.0631179737805417E-7	DEFECT
// Create a key set that supports add. //	WITHOUT_CLASSIFICATION	0.9999986940979604	WITHOUT_CLASSIFICATION	1.3059020396671998E-6	DEFECT
// Skip derived features. //	WITHOUT_CLASSIFICATION	0.9999997562262108	WITHOUT_CLASSIFICATION	2.4377378920401196E-7	DEFECT
// Include derived relations only if they won't also come from mixed or a group. //	WITHOUT_CLASSIFICATION	0.9996456741567046	WITHOUT_CLASSIFICATION	3.5432584329540676E-4	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.999883578543507	WITHOUT_CLASSIFICATION	1.1642145649307772E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.999859359731279	WITHOUT_CLASSIFICATION	1.4064026872089139E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999984745527362	WITHOUT_CLASSIFICATION	1.5254472638583074E-6	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999737593859465	WITHOUT_CLASSIFICATION	2.624061405350404E-5	DEFECT
// At development time, the real factory may not be available. Just return null. //	WITHOUT_CLASSIFICATION	0.9999998483141024	WITHOUT_CLASSIFICATION	1.5168589761138446E-7	DEFECT
// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.	WITHOUT_CLASSIFICATION	0.9999938613407133	WITHOUT_CLASSIFICATION	6.138659286676321E-6	DEFECT
// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();	WITHOUT_CLASSIFICATION	0.9999999992350748	WITHOUT_CLASSIFICATION	7.649251942048032E-10	DEFECT
// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999997267653956	WITHOUT_CLASSIFICATION	2.7323460437000415E-7	DEFECT
// This should never be called. //	WITHOUT_CLASSIFICATION	0.9999745451054877	WITHOUT_CLASSIFICATION	2.5454894512389084E-5	DEFECT
// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);	WITHOUT_CLASSIFICATION	0.9999999903681354	WITHOUT_CLASSIFICATION	9.63186468531463E-9	DEFECT
// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999998156689698	WITHOUT_CLASSIFICATION	1.8433103024343583E-7	DEFECT
// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //	WITHOUT_CLASSIFICATION	0.9999999472102824	WITHOUT_CLASSIFICATION	5.278971752720295E-8	DEFECT
// When setting the resource to null we assume that detach has already been called in the resource implementation //	WITHOUT_CLASSIFICATION	0.9999992693762634	WITHOUT_CLASSIFICATION	7.306237366892479E-7	DEFECT
/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */	WITHOUT_CLASSIFICATION	0.9999900542231359	WITHOUT_CLASSIFICATION	9.945776864167804E-6	DEFECT
// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //	WITHOUT_CLASSIFICATION	0.9999624607573254	WITHOUT_CLASSIFICATION	3.7539242674472234E-5	DEFECT
// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //	WITHOUT_CLASSIFICATION	0.9999454338219694	WITHOUT_CLASSIFICATION	5.4566178030701284E-5	DEFECT
// For isSet, we only need to check the bit and return -1 when the bit is 0. //	WITHOUT_CLASSIFICATION	0.9999994035244555	WITHOUT_CLASSIFICATION	5.964755445078061E-7	DEFECT
// If the value index set, there's no index to return. //	WITHOUT_CLASSIFICATION	0.9999932708428979	WITHOUT_CLASSIFICATION	6.729157102031034E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //	WITHOUT_CLASSIFICATION	0.9999999990522614	WITHOUT_CLASSIFICATION	9.477386375261547E-10	DEFECT
// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //	WITHOUT_CLASSIFICATION	0.9999992366182456	WITHOUT_CLASSIFICATION	7.633817542543904E-7	DEFECT
// Determine the index for the feature and return the value at that index, if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999998709075002	WITHOUT_CLASSIFICATION	1.2909249975980664E-7	DEFECT
// Determine if an index is assigned. //	WITHOUT_CLASSIFICATION	0.9999998566935935	WITHOUT_CLASSIFICATION	1.4330640663565782E-7	DEFECT
// Determine the index. //	WITHOUT_CLASSIFICATION	0.9999990432723341	WITHOUT_CLASSIFICATION	9.56727665834178E-7	DEFECT
// If it's newly allocated, add a new value, and indicate there was no previous value. //	WITHOUT_CLASSIFICATION	0.9999999357251418	WITHOUT_CLASSIFICATION	6.427485823826716E-8	DEFECT
// Set the value at the previously allocated index and return the previous value there. //	WITHOUT_CLASSIFICATION	0.999991188432993	WITHOUT_CLASSIFICATION	8.811567007083345E-6	DEFECT
// Forward the interned value. //	WITHOUT_CLASSIFICATION	0.999999605140876	WITHOUT_CLASSIFICATION	3.948591239148888E-7	DEFECT
// If it's a parameterized type... //	WITHOUT_CLASSIFICATION	0.9995321734674804	WITHOUT_CLASSIFICATION	4.678265325196513E-4	DEFECT
// The instance class name is the erasure. //	WITHOUT_CLASSIFICATION	0.9999966536183155	WITHOUT_CLASSIFICATION	3.3463816844895252E-6	DEFECT
// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //	WITHOUT_CLASSIFICATION	0.9999999753649298	WITHOUT_CLASSIFICATION	2.4635070220266154E-8	DEFECT
// Be sure to pick up any trailing [] brackets. //	WITHOUT_CLASSIFICATION	0.9999988552923811	WITHOUT_CLASSIFICATION	1.1447076188945823E-6	DEFECT
// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //	WITHOUT_CLASSIFICATION	0.9993737601934671	WITHOUT_CLASSIFICATION	6.262398065328772E-4	DEFECT
// If the result is not a proxy, cache it. //	WITHOUT_CLASSIFICATION	0.9996340180127068	WITHOUT_CLASSIFICATION	3.6598198729329283E-4	DEFECT
// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //	WITHOUT_CLASSIFICATION	0.9999999926595272	WITHOUT_CLASSIFICATION	7.3404728076494355E-9	DEFECT
// Is the first character a special character, i.e., something other than '@'? //	WITHOUT_CLASSIFICATION	0.999999999097389	WITHOUT_CLASSIFICATION	9.026111381624834E-10	DEFECT
// Is it the start of a source URI of an annotation? //	WITHOUT_CLASSIFICATION	0.9999989662266852	WITHOUT_CLASSIFICATION	1.0337733147763503E-6	DEFECT
// Recompute the read only state. //	WITHOUT_CLASSIFICATION	0.9999926634420704	WITHOUT_CLASSIFICATION	7.336557929588126E-6	DEFECT
// Refresh any actions that may become enabled or disabled. //	WITHOUT_CLASSIFICATION	0.9942538074171413	WITHOUT_CLASSIFICATION	0.005746192582858645	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
// If this is just a proxy being resolved... //	WITHOUT_CLASSIFICATION	0.999883578543507	WITHOUT_CLASSIFICATION	1.1642145649307772E-4	DEFECT
// Force the raw type to be resolved so we don't resolve this endlessly. //	WITHOUT_CLASSIFICATION	0.999859359731279	WITHOUT_CLASSIFICATION	1.4064026872089139E-4	DEFECT
// Update the classifier and hence the raw type as normal. //	WITHOUT_CLASSIFICATION	0.9999984745527362	WITHOUT_CLASSIFICATION	1.5254472638583074E-6	DEFECT
// Find the closing '%' //	WITHOUT_CLASSIFICATION	0.9999996186565348	WITHOUT_CLASSIFICATION	3.813434652643561E-7	DEFECT
// Decode all encoded characters. //	WITHOUT_CLASSIFICATION	0.9999998513139513	WITHOUT_CLASSIFICATION	1.4868604862366332E-7	DEFECT
// Check for a count, i.e., a '.' followed by a number. //	WITHOUT_CLASSIFICATION	0.999999733008686	WITHOUT_CLASSIFICATION	2.6699131396192247E-7	DEFECT
// Look for the annotation with the matching source. //	WITHOUT_CLASSIFICATION	0.999985472241563	WITHOUT_CLASSIFICATION	1.452775843698348E-5	DEFECT
// Look for trailing count. //	WITHOUT_CLASSIFICATION	0.9999976783372962	WITHOUT_CLASSIFICATION	2.3216627036897322E-6	DEFECT
// Look for a matching named element. //	WITHOUT_CLASSIFICATION	0.9999951096434585	WITHOUT_CLASSIFICATION	4.89035654150037E-6	DEFECT
// Find the uppermost class loader in the hierarchy that can load the class. //	WITHOUT_CLASSIFICATION	0.9999994595258007	WITHOUT_CLASSIFICATION	5.404741993060466E-7	DEFECT
// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999962976990007	WITHOUT_CLASSIFICATION	3.702300999436833E-6	DEFECT
// Register with the upper most class loader that's able to load the class. //	WITHOUT_CLASSIFICATION	0.9999999280092672	WITHOUT_CLASSIFICATION	7.199073284278843E-8	DEFECT
// This let's us test whether the string exists as a file. // If not, we try as a URI. //	WITHOUT_CLASSIFICATION	0.9999998614135125	WITHOUT_CLASSIFICATION	1.3858648753269043E-7	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999932703991802	WITHOUT_CLASSIFICATION	6.729600819771925E-6	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999932703991802	WITHOUT_CLASSIFICATION	6.729600819771925E-6	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999995498753463	WITHOUT_CLASSIFICATION	4.5012465370074775E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999845721142893	WITHOUT_CLASSIFICATION	1.5427885710732916E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999616076128	WITHOUT_CLASSIFICATION	3.839238720579221E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999993735967072	WITHOUT_CLASSIFICATION	6.264032928269635E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999997144943878	WITHOUT_CLASSIFICATION	2.855056122222976E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999003073611	WITHOUT_CLASSIFICATION	9.969263895901114E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999988238111853	WITHOUT_CLASSIFICATION	1.1761888147138613E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999972175406786	WITHOUT_CLASSIFICATION	2.7824593214474157E-6	DEFECT
// Make sure the file ends in ".ecore". //	WITHOUT_CLASSIFICATION	0.999990280868691	WITHOUT_CLASSIFICATION	9.719131308957735E-6	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999816179327	WITHOUT_CLASSIFICATION	1.8382067324390666E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998152329287	WITHOUT_CLASSIFICATION	1.8476707126274228E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999940872079661	WITHOUT_CLASSIFICATION	5.912792033849812E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999993196350048	WITHOUT_CLASSIFICATION	6.803649951527595E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9998700414093425	WITHOUT_CLASSIFICATION	1.2995859065746316E-4	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999989484982529	WITHOUT_CLASSIFICATION	1.0515017471166846E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999598128536726	WITHOUT_CLASSIFICATION	4.0187146327442215E-5	DEFECT
// Create an adapter factory that yields item providers. //	WITHOUT_CLASSIFICATION	0.9999887322109511	WITHOUT_CLASSIFICATION	1.126778904880654E-5	DEFECT
// Create the command stack that will notify this editor as commands are executed. //	WITHOUT_CLASSIFICATION	0.9982688987495504	WITHOUT_CLASSIFICATION	0.00173110125044962	DEFECT
// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //	WITHOUT_CLASSIFICATION	0.9999989596994778	WITHOUT_CLASSIFICATION	1.0403005221628952E-6	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999997270552637	WITHOUT_CLASSIFICATION	2.7294473616957645E-7	DEFECT
// Create the editing domain with a special command stack. //	WITHOUT_CLASSIFICATION	0.9999780258414045	WITHOUT_CLASSIFICATION	2.1974158595568295E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999961144672418	WITHOUT_CLASSIFICATION	3.885532758148183E-6	DEFECT
// Try to select the items in the current content viewer of the editor. //	WITHOUT_CLASSIFICATION	0.9999982896974791	WITHOUT_CLASSIFICATION	1.7103025209431549E-6	DEFECT
// If it is changing... //	WITHOUT_CLASSIFICATION	0.9995008546097934	WITHOUT_CLASSIFICATION	4.991453902064884E-4	DEFECT
// Create the listener on demand. //	WITHOUT_CLASSIFICATION	0.9999989791689198	WITHOUT_CLASSIFICATION	1.0208310802760795E-6	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.999995717188713	WITHOUT_CLASSIFICATION	4.282811286924798E-6	DEFECT
// Stop listening to the old one. //	WITHOUT_CLASSIFICATION	0.9999995691047404	WITHOUT_CLASSIFICATION	4.308952596833556E-7	DEFECT
// Start listening to the new one. //	WITHOUT_CLASSIFICATION	0.9999998967378808	WITHOUT_CLASSIFICATION	1.0326211913724412E-7	DEFECT
// Remember it. //	WITHOUT_CLASSIFICATION	0.9999744611841593	WITHOUT_CLASSIFICATION	2.5538815840687357E-5	DEFECT
// Set the editors selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999711733480705	WITHOUT_CLASSIFICATION	2.8826651929399423E-5	DEFECT
// Load the resource through the editing domain. //	WITHOUT_CLASSIFICATION	0.999998630901264	WITHOUT_CLASSIFICATION	1.3690987360656637E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
// Create a page for the selection tree view. //	WITHOUT_CLASSIFICATION	0.9999901870055078	WITHOUT_CLASSIFICATION	9.8129944922962E-6	DEFECT
// Ensures that this editor will only display the page's tab // area if there are more than one page //	WITHOUT_CLASSIFICATION	0.9999984304031563	WITHOUT_CLASSIFICATION	1.5695968438177716E-6	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998370139732	WITHOUT_CLASSIFICATION	1.6298602677759794E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999991331818717	WITHOUT_CLASSIFICATION	8.668181283298151E-7	DEFECT
// Make sure our popups work. //	WITHOUT_CLASSIFICATION	0.9997171299399211	WITHOUT_CLASSIFICATION	2.82870060078901E-4	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998614286956865	WITHOUT_CLASSIFICATION	1.3857130431347016E-4	DEFECT
// Listen to selection so that we can handle it is a special way. //	WITHOUT_CLASSIFICATION	0.9999993886790319	WITHOUT_CLASSIFICATION	6.113209680376343E-7	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999037915885	WITHOUT_CLASSIFICATION	9.620841144796071E-8	DEFECT
// Set the selection to the widget. //	WITHOUT_CLASSIFICATION	0.999942374046991	WITHOUT_CLASSIFICATION	5.7625953009006174E-5	DEFECT
// Save only resources that have actually changed. //	WITHOUT_CLASSIFICATION	0.9999983125604547	WITHOUT_CLASSIFICATION	1.687439545209564E-6	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999968163271782	WITHOUT_CLASSIFICATION	3.183672821781129E-6	DEFECT
// Save the resources to the file system. //	WITHOUT_CLASSIFICATION	0.9999940314736946	WITHOUT_CLASSIFICATION	5.968526305324236E-6	DEFECT
// This runs the options, and shows progress. //	WITHOUT_CLASSIFICATION	0.9999845965891139	WITHOUT_CLASSIFICATION	1.540341088616203E-5	DEFECT
// Refresh the necessary state. //	WITHOUT_CLASSIFICATION	0.9999974987954267	WITHOUT_CLASSIFICATION	2.5012045734269133E-6	DEFECT
// Something went wrong that shouldn't. //	WITHOUT_CLASSIFICATION	0.9998656288748533	WITHOUT_CLASSIFICATION	1.343711251466585E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999995498753463	WITHOUT_CLASSIFICATION	4.5012465370074775E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999845721142893	WITHOUT_CLASSIFICATION	1.5427885710732916E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999616076128	WITHOUT_CLASSIFICATION	3.839238720579221E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999993735967072	WITHOUT_CLASSIFICATION	6.264032928269635E-7	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999988238111853	WITHOUT_CLASSIFICATION	1.1761888147138613E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999972175406786	WITHOUT_CLASSIFICATION	2.7824593214474157E-6	DEFECT
// We can't have a null name, in case we're using EMOF serialization. //	WITHOUT_CLASSIFICATION	0.9999944461488383	WITHOUT_CLASSIFICATION	5.553851161760261E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.999964063086673	WITHOUT_CLASSIFICATION	3.593691332703313E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999977256889987	WITHOUT_CLASSIFICATION	2.2743110012697944E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998152329287	WITHOUT_CLASSIFICATION	1.8476707126274228E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999940872079661	WITHOUT_CLASSIFICATION	5.912792033849812E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999993196350048	WITHOUT_CLASSIFICATION	6.803649951527595E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9998700414093425	WITHOUT_CLASSIFICATION	1.2995859065746316E-4	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999598128536726	WITHOUT_CLASSIFICATION	4.0187146327442215E-5	DEFECT
// Prepare for CreateChild item addition or removal. //	WITHOUT_CLASSIFICATION	0.9999901350055955	WITHOUT_CLASSIFICATION	9.864994404505503E-6	DEFECT
// Prepare for CreateSibling item addition or removal. //	WITHOUT_CLASSIFICATION	0.999987625013157	WITHOUT_CLASSIFICATION	1.2374986843101431E-5	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999998268082739	WITHOUT_CLASSIFICATION	1.7319172597248577E-7	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9955537079713505	WITHOUT_CLASSIFICATION	0.004446292028649494	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999950223882744	WITHOUT_CLASSIFICATION	4.977611725543993E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999946935963597	WITHOUT_CLASSIFICATION	5.306403640158477E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999996044253991	WITHOUT_CLASSIFICATION	3.955746008456885E-7	DEFECT
// Delete the ActionContributionItems with matching action. //	WITHOUT_CLASSIFICATION	0.9999988601302464	WITHOUT_CLASSIFICATION	1.139869753554383E-6	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999997747640794	WITHOUT_CLASSIFICATION	2.2523592068232408E-7	DEFECT
// Changes to the parameters should also update the label. //	WITHOUT_CLASSIFICATION	0.9999980336643247	WITHOUT_CLASSIFICATION	1.96633567531572E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// If it's really a contained child, return the feature for it. //	WITHOUT_CLASSIFICATION	0.9999997747640794	WITHOUT_CLASSIFICATION	2.2523592068232408E-7	DEFECT
// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //	WITHOUT_CLASSIFICATION	0.9971584255789998	WITHOUT_CLASSIFICATION	0.0028415744210002728	DEFECT
// Changes to parameter types should also update the operation's label. //	WITHOUT_CLASSIFICATION	0.9999980433718252	WITHOUT_CLASSIFICATION	1.9566281748867634E-6	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999283147199176	WITHOUT_CLASSIFICATION	7.168528008241026E-5	DEFECT
// Filter out types that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999283147199176	WITHOUT_CLASSIFICATION	7.168528008241026E-5	DEFECT
// Avoid allowing choices that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999963628610449	WITHOUT_CLASSIFICATION	3.6371389551588524E-6	DEFECT
//  Avoid allowing a choice that will lead to duplicates. //	WITHOUT_CLASSIFICATION	0.9999991425552313	WITHOUT_CLASSIFICATION	8.57444768708089E-7	DEFECT
// Ensure that there are enough type arguments to match the number of type parameters. //	WITHOUT_CLASSIFICATION	0.9999979315128884	WITHOUT_CLASSIFICATION	2.0684871116099685E-6	DEFECT
// You can only add type arguments if there are type parameters not yet used up. //	WITHOUT_CLASSIFICATION	0.9999777189242902	WITHOUT_CLASSIFICATION	2.2281075709855583E-5	DEFECT
// You cannot add any children for a type parameter. //	WITHOUT_CLASSIFICATION	0.9992728251161078	WITHOUT_CLASSIFICATION	7.271748838921596E-4	DEFECT
// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //	WITHOUT_CLASSIFICATION	0.9999999977761922	WITHOUT_CLASSIFICATION	2.223807785173745E-9	DEFECT
// Otherwise you can't make it a child. //	WITHOUT_CLASSIFICATION	0.9999749709564393	WITHOUT_CLASSIFICATION	2.5029043560697503E-5	DEFECT
// Let them choose type parameters as well. //	WITHOUT_CLASSIFICATION	0.9999999788996835	WITHOUT_CLASSIFICATION	2.1100316608579774E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Handle eOpposite specially. //	WITHOUT_CLASSIFICATION	0.9999995250428827	WITHOUT_CLASSIFICATION	4.749571172725944E-7	DEFECT
// Don't use the normal reference copying for eOpposite. //	WITHOUT_CLASSIFICATION	0.9999997724037823	WITHOUT_CLASSIFICATION	2.2759621769842206E-7	DEFECT
// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //	WITHOUT_CLASSIFICATION	0.9999995673333095	WITHOUT_CLASSIFICATION	4.326666904903705E-7	DEFECT
// Filter out classes that aren't permitted. //	WITHOUT_CLASSIFICATION	0.9999844522373281	WITHOUT_CLASSIFICATION	1.554776267191828E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999742209157115	WITHOUT_CLASSIFICATION	2.57790842884614E-5	DEFECT
// Read all the values into an array. //	WITHOUT_CLASSIFICATION	0.9999742209157115	WITHOUT_CLASSIFICATION	2.57790842884614E-5	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999998725623158	WITHOUT_CLASSIFICATION	1.2743768418567452E-7	DEFECT
// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //	WITHOUT_CLASSIFICATION	0.9999994505537648	WITHOUT_CLASSIFICATION	5.494462352154293E-7	DEFECT
// This guard is needed to ensure that clear doesn't make the resource become loaded. //	WITHOUT_CLASSIFICATION	0.9999705741051521	WITHOUT_CLASSIFICATION	2.9425894847943934E-5	DEFECT
// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.	WITHOUT_CLASSIFICATION	0.999887986099872	WITHOUT_CLASSIFICATION	1.120139001280701E-4	DEFECT
// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY	WITHOUT_CLASSIFICATION	0.9999883755822012	WITHOUT_CLASSIFICATION	1.162441779885143E-5	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999990487234903	WITHOUT_CLASSIFICATION	9.512765097954216E-7	DEFECT
// Build a list of the keys //	WITHOUT_CLASSIFICATION	0.9999996388631771	WITHOUT_CLASSIFICATION	3.611368229336958E-7	DEFECT
// The classifier of an references's generic type must be a class. //	WITHOUT_CLASSIFICATION	0.9999998408235669	WITHOUT_CLASSIFICATION	1.5917643306592757E-7	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999611944999	WITHOUT_CLASSIFICATION	3.880550006480309E-8	DEFECT
// Ignore derived features. //	WITHOUT_CLASSIFICATION	0.9999999217905462	WITHOUT_CLASSIFICATION	7.820945376656418E-8	DEFECT
// Don't set the type if it's already set. //	WITHOUT_CLASSIFICATION	0.9999935671384953	WITHOUT_CLASSIFICATION	6.432861504672847E-6	DEFECT
// Look through all the references... //	WITHOUT_CLASSIFICATION	0.9999678265454732	WITHOUT_CLASSIFICATION	3.2173454526756976E-5	DEFECT
// Do the extent processing that should have been done for the root but was actualljy done for the document root. //	WITHOUT_CLASSIFICATION	0.999990279717949	WITHOUT_CLASSIFICATION	9.720282051017445E-6	DEFECT
// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //	WITHOUT_CLASSIFICATION	0.99620121255843	WITHOUT_CLASSIFICATION	0.003798787441570131	DEFECT
// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999606411198937	WITHOUT_CLASSIFICATION	3.935888010628442E-5	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999838748399	WITHOUT_CLASSIFICATION	1.6125160013714226E-8	DEFECT
// Reserve a place to insert xmlns declarations after we know what they all are. //	WITHOUT_CLASSIFICATION	0.9999991649631396	WITHOUT_CLASSIFICATION	8.350368604656921E-7	DEFECT
// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);	WITHOUT_CLASSIFICATION	0.9999997211352168	WITHOUT_CLASSIFICATION	2.7886478315717277E-7	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999991656957117	WITHOUT_CLASSIFICATION	8.343042882366683E-7	DEFECT
// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)	WITHOUT_CLASSIFICATION	0.9998008775383572	WITHOUT_CLASSIFICATION	1.9912246164270844E-4	DEFECT
// Ignore CHAR tokens. // ** // **	WITHOUT_CLASSIFICATION	0.9999936415619979	WITHOUT_CLASSIFICATION	6.358438002095957E-6	DEFECT
//missing Specials add manually // 84	WITHOUT_CLASSIFICATION	0.999981169200676	WITHOUT_CLASSIFICATION	1.88307993240055E-5	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999999618145223	WITHOUT_CLASSIFICATION	3.818547767812895E-8	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999992741825622	WITHOUT_CLASSIFICATION	7.258174377812255E-7	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999981850063269	WITHOUT_CLASSIFICATION	1.8149936731612425E-6	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999904906136	WITHOUT_CLASSIFICATION	9.509386366140025E-9	DEFECT
// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.	WITHOUT_CLASSIFICATION	0.9999999904906136	WITHOUT_CLASSIFICATION	9.509386366140025E-9	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9992580102498884	WITHOUT_CLASSIFICATION	7.419897501116798E-4	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999593394651637	WITHOUT_CLASSIFICATION	4.066053483635171E-5	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.999999997873294	WITHOUT_CLASSIFICATION	2.126705983184285E-9	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999924056153959	WITHOUT_CLASSIFICATION	7.594384604143957E-6	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999919135239086	WITHOUT_CLASSIFICATION	8.08647609136459E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891153038679	WITHOUT_CLASSIFICATION	1.0884696132198404E-5	DEFECT
// Check whether there is an opposite that needs attention. //	WITHOUT_CLASSIFICATION	0.9999980095625747	WITHOUT_CLASSIFICATION	1.9904374252613365E-6	DEFECT
// Return whether there is a list, the value is in the list, and index is in range... //	WITHOUT_CLASSIFICATION	0.9992292922369304	WITHOUT_CLASSIFICATION	7.707077630696497E-4	DEFECT
// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //	WITHOUT_CLASSIFICATION	0.9999905035596663	WITHOUT_CLASSIFICATION	9.496440333695762E-6	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9979769205563516	WITHOUT_CLASSIFICATION	0.0020230794436483105	DEFECT
// Only return the feedback for an executable command. //	WITHOUT_CLASSIFICATION	0.9999653538357687	WITHOUT_CLASSIFICATION	3.4646164231438074E-5	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999997935874833	WITHOUT_CLASSIFICATION	2.0641251663367792E-7	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999970247434146	WITHOUT_CLASSIFICATION	2.975256585486774E-6	DEFECT
// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //	WITHOUT_CLASSIFICATION	0.9998525682850704	WITHOUT_CLASSIFICATION	1.4743171492963086E-4	DEFECT
// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //	WITHOUT_CLASSIFICATION	0.9999999859136383	WITHOUT_CLASSIFICATION	1.4086361672902684E-8	DEFECT
// Record the part. //	WITHOUT_CLASSIFICATION	0.9999927002537455	WITHOUT_CLASSIFICATION	7.299746254420034E-6	DEFECT
// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon	WITHOUT_CLASSIFICATION	0.9999999974257846	WITHOUT_CLASSIFICATION	2.5742153807777346E-9	DEFECT
// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //	WITHOUT_CLASSIFICATION	0.9991741742963305	WITHOUT_CLASSIFICATION	8.258257036696217E-4	DEFECT
// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //	WITHOUT_CLASSIFICATION	0.9998937789947842	WITHOUT_CLASSIFICATION	1.0622100521579379E-4	DEFECT
// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //	WITHOUT_CLASSIFICATION	0.9999981865692795	WITHOUT_CLASSIFICATION	1.813430720501188E-6	DEFECT
// If we've found thing with type parameters, search them for a match. //	WITHOUT_CLASSIFICATION	0.9999993476865293	WITHOUT_CLASSIFICATION	6.523134707672193E-7	DEFECT
// process documentation info and create eEnumLiteral for each line //	WITHOUT_CLASSIFICATION	0.9999998971219848	WITHOUT_CLASSIFICATION	1.0287801525641967E-7	DEFECT
// This just notifies those things that are affected by the section. //	WITHOUT_CLASSIFICATION	0.999995717188713	WITHOUT_CLASSIFICATION	4.282811286924798E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998390279305	WITHOUT_CLASSIFICATION	1.609720693575134E-7	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999968163271782	WITHOUT_CLASSIFICATION	3.183672821781129E-6	DEFECT
// Generate actions for selection; populate and redraw the menus. //	WITHOUT_CLASSIFICATION	0.9999946935963597	WITHOUT_CLASSIFICATION	5.306403640158477E-6	DEFECT
// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info	WITHOUT_CLASSIFICATION	0.9999996493855429	WITHOUT_CLASSIFICATION	3.506144570695066E-7	DEFECT
// Create a page for the parent tree view. //	WITHOUT_CLASSIFICATION	0.9999835513072992	WITHOUT_CLASSIFICATION	1.6448692700711487E-5	DEFECT
// Make sure it's okay. //	WITHOUT_CLASSIFICATION	0.9999961144672418	WITHOUT_CLASSIFICATION	3.885532758148183E-6	DEFECT
// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //	WITHOUT_CLASSIFICATION	0.9999989306889604	WITHOUT_CLASSIFICATION	1.0693110396685188E-6	DEFECT
// Cache the tree path for each object. //	WITHOUT_CLASSIFICATION	0.9999911113506413	WITHOUT_CLASSIFICATION	8.888649358710326E-6	DEFECT
// Set the editor's selection based on the current viewer's selection. //	WITHOUT_CLASSIFICATION	0.9999611244024337	WITHOUT_CLASSIFICATION	3.887559756632779E-5	DEFECT
// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //	WITHOUT_CLASSIFICATION	0.9998057822495215	WITHOUT_CLASSIFICATION	1.9421775047841363E-4	DEFECT
// This is the method that gets invoked when the operation runs. //	WITHOUT_CLASSIFICATION	0.9999968163271782	WITHOUT_CLASSIFICATION	3.183672821781129E-6	DEFECT
// This is for the out2in feature. //	WITHOUT_CLASSIFICATION	0.999965207617275	WITHOUT_CLASSIFICATION	3.4792382724901455E-5	DEFECT
// This is for the topDown feature. //	WITHOUT_CLASSIFICATION	0.9999236487626676	WITHOUT_CLASSIFICATION	7.635123733242529E-5	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
// There needs to be another URL protocol right after the archive protocol, and not a "/". //	WITHOUT_CLASSIFICATION	0.9995854590215101	WITHOUT_CLASSIFICATION	4.14540978489974E-4	DEFECT
// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //	WITHOUT_CLASSIFICATION	0.9999996329392309	WITHOUT_CLASSIFICATION	3.670607690618777E-7	DEFECT
// Record them as generic streams to record state during the loop that emulates recursion. //	WITHOUT_CLASSIFICATION	0.99999834878422	WITHOUT_CLASSIFICATION	1.6512157800411444E-6	DEFECT
// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //	WITHOUT_CLASSIFICATION	0.9987968105918297	WITHOUT_CLASSIFICATION	0.0012031894081703342	DEFECT
// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //	WITHOUT_CLASSIFICATION	0.999999993347638	WITHOUT_CLASSIFICATION	6.652362016407219E-9	DEFECT
// Either execute or redo the command, as appropriate. //	WITHOUT_CLASSIFICATION	0.9999358644683354	WITHOUT_CLASSIFICATION	6.413553166461036E-5	DEFECT
// Skip over the command that threw the exception. //	WITHOUT_CLASSIFICATION	0.999928136263363	WITHOUT_CLASSIFICATION	7.18637366369391E-5	DEFECT
// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //	WITHOUT_CLASSIFICATION	0.9996774639068015	WITHOUT_CLASSIFICATION	3.225360931985528E-4	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999999892527307	WITHOUT_CLASSIFICATION	1.0747269299397177E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999999892527307	WITHOUT_CLASSIFICATION	1.0747269299397177E-7	DEFECT
// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //	WITHOUT_CLASSIFICATION	0.999999892527307	WITHOUT_CLASSIFICATION	1.0747269299397177E-7	DEFECT
// Remove from by position in reverse order. //	WITHOUT_CLASSIFICATION	0.9999799184083248	WITHOUT_CLASSIFICATION	2.008159167519022E-5	DEFECT
// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)	WITHOUT_CLASSIFICATION	0.9875444580145678	WITHOUT_CLASSIFICATION	0.012455541985432072	DEFECT
//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));	WITHOUT_CLASSIFICATION	0.9999989946940986	WITHOUT_CLASSIFICATION	1.0053059013412891E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999993005316709	WITHOUT_CLASSIFICATION	6.994683291815105E-7	DEFECT
// Create a new array. //	WITHOUT_CLASSIFICATION	0.9999992870387542	WITHOUT_CLASSIFICATION	7.129612457442077E-7	DEFECT
// buttonComposite has to be the first child of composite because subclasses are expecting this.	WITHOUT_CLASSIFICATION	0.9999999822002242	WITHOUT_CLASSIFICATION	1.7799775730801066E-8	DEFECT
// Common to all URI types.	WITHOUT_CLASSIFICATION	0.999998783830741	WITHOUT_CLASSIFICATION	1.2161692590066112E-6	DEFECT
// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.	WITHOUT_CLASSIFICATION	0.9999985308651437	WITHOUT_CLASSIFICATION	1.4691348563948877E-6	DEFECT
// The lower-cased schemes that will be used to identify archive URIs.	WITHOUT_CLASSIFICATION	0.9999944078438758	WITHOUT_CLASSIFICATION	5.5921561241098814E-6	DEFECT
// Special segment values interpreted at resolve and resolve time.	WITHOUT_CLASSIFICATION	0.9999991893114826	WITHOUT_CLASSIFICATION	8.106885173994052E-7	DEFECT
// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //	WITHOUT_CLASSIFICATION	0.9999999999965553	WITHOUT_CLASSIFICATION	3.44462523612469E-12	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999778359069	WITHOUT_CLASSIFICATION	2.216409307902903E-8	DEFECT
// We can't want to do encoding of platform resource URIs by default yet.    //	WITHOUT_CLASSIFICATION	0.9999927848465688	WITHOUT_CLASSIFICATION	7.2151534311368425E-6	DEFECT
// Returns the upper half bitmask for all the ASCII characters in the given // string.	WITHOUT_CLASSIFICATION	0.9999987548641354	WITHOUT_CLASSIFICATION	1.2451358647070229E-6	DEFECT
// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.	WITHOUT_CLASSIFICATION	0.999950865452829	WITHOUT_CLASSIFICATION	4.913454717102586E-5	DEFECT
// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //	WITHOUT_CLASSIFICATION	0.9999999999884623	WITHOUT_CLASSIFICATION	1.1537738973673203E-11	DEFECT
//boolean iri = false;	WITHOUT_CLASSIFICATION	0.9999992003026172	WITHOUT_CLASSIFICATION	7.996973827972427E-7	DEFECT
//iri = iri || containsNonASCII(segments[i]);	WITHOUT_CLASSIFICATION	0.9999991843355533	WITHOUT_CLASSIFICATION	8.156644466241959E-7	DEFECT
// <p>A valid query may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999906800626	WITHOUT_CLASSIFICATION	9.31993738416394E-9	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999998697063045	WITHOUT_CLASSIFICATION	1.3029369543542988E-7	DEFECT
// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.	WITHOUT_CLASSIFICATION	0.9999999999998009	WITHOUT_CLASSIFICATION	1.9906780662072325E-13	DEFECT
// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null	WITHOUT_CLASSIFICATION	0.9999960759362418	WITHOUT_CLASSIFICATION	3.924063758208739E-6	DEFECT
// current document reference: use base path and query	WITHOUT_CLASSIFICATION	0.9999982273388982	WITHOUT_CLASSIFICATION	1.7726611018437416E-6	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999840575946	WITHOUT_CLASSIFICATION	1.5942405393230815E-8	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999695670015	WITHOUT_CLASSIFICATION	3.043299846523005E-8	DEFECT
// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.	WITHOUT_CLASSIFICATION	0.9999999244776266	WITHOUT_CLASSIFICATION	7.552237336999697E-8	DEFECT
// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path	WITHOUT_CLASSIFICATION	0.9999999548415712	WITHOUT_CLASSIFICATION	4.515842878446127E-8	DEFECT
// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI	WITHOUT_CLASSIFICATION	0.9999999574170954	WITHOUT_CLASSIFICATION	4.258290460430434E-8	DEFECT
// path form demands an absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999945900037778	WITHOUT_CLASSIFICATION	5.409996222278359E-6	DEFECT
// always include fragment, even if null; // no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.999999990947041	WITHOUT_CLASSIFICATION	9.052959069481244E-9	DEFECT
// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.	WITHOUT_CLASSIFICATION	0.9999999825560076	WITHOUT_CLASSIFICATION	1.74439922941864E-8	DEFECT
// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty	WITHOUT_CLASSIFICATION	0.9999374048409339	WITHOUT_CLASSIFICATION	6.259515906616515E-5	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999624385747	WITHOUT_CLASSIFICATION	3.756142527174846E-8	DEFECT
// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.	WITHOUT_CLASSIFICATION	0.9999999782622304	WITHOUT_CLASSIFICATION	2.173776959638053E-8	DEFECT
/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */	WITHOUT_CLASSIFICATION	0.9999999985020791	WITHOUT_CLASSIFICATION	1.4979208761631632E-9	DEFECT
// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //	WITHOUT_CLASSIFICATION	0.999953096920428	WITHOUT_CLASSIFICATION	4.6903079572009966E-5	DEFECT
// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //	WITHOUT_CLASSIFICATION	0.9995880108827747	WITHOUT_CLASSIFICATION	4.1198911722533033E-4	DEFECT
// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //	WITHOUT_CLASSIFICATION	0.9999961501354959	WITHOUT_CLASSIFICATION	3.849864504086572E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999948432470284	WITHOUT_CLASSIFICATION	5.156752971639908E-6	DEFECT
// ++modCount //	WITHOUT_CLASSIFICATION	0.9999948432470284	WITHOUT_CLASSIFICATION	5.156752971639908E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999991710291825	WITHOUT_CLASSIFICATION	8.289708175976473E-7	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999991710291825	WITHOUT_CLASSIFICATION	8.289708175976473E-7	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999995625336391	WITHOUT_CLASSIFICATION	4.3746636079666185E-7	DEFECT
// Create a proper feature map entry. //	WITHOUT_CLASSIFICATION	0.9999605464913024	WITHOUT_CLASSIFICATION	3.9453508697567065E-5	DEFECT
// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //	WITHOUT_CLASSIFICATION	0.9999997053216471	WITHOUT_CLASSIFICATION	2.946783528874461E-7	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999999044733422	WITHOUT_CLASSIFICATION	9.552665782149999E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999999044733422	WITHOUT_CLASSIFICATION	9.552665782149999E-8	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999999044733422	WITHOUT_CLASSIFICATION	9.552665782149999E-8	DEFECT
// Maintain a (weak hash) set on the type parameter of all referencing generic types. //	WITHOUT_CLASSIFICATION	0.9999966162192665	WITHOUT_CLASSIFICATION	3.3837807335041366E-6	DEFECT
// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //	WITHOUT_CLASSIFICATION	0.9999999855559645	WITHOUT_CLASSIFICATION	1.4444035568506043E-8	DEFECT
// The notification for this list is being thrown by the // delegating list //	WITHOUT_CLASSIFICATION	0.9999737593859465	WITHOUT_CLASSIFICATION	2.624061405350404E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999996792033548	WITHOUT_CLASSIFICATION	3.2079664531354213E-7	DEFECT
// return eContainerFeatureID;	WITHOUT_CLASSIFICATION	0.9999999649384443	WITHOUT_CLASSIFICATION	3.5061555583930644E-8	DEFECT
// If we're not setting a new resource, attach it to the old container's resource.	WITHOUT_CLASSIFICATION	0.999999198518458	WITHOUT_CLASSIFICATION	8.014815420273103E-7	DEFECT
// If we didn't detach it from an old resource already, detach it from the old container's resource. //	WITHOUT_CLASSIFICATION	0.9999995459420296	WITHOUT_CLASSIFICATION	4.5405797037089235E-7	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999979900218892	WITHOUT_CLASSIFICATION	2.009978110903975E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999979900218892	WITHOUT_CLASSIFICATION	2.009978110903975E-6	DEFECT
// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //	WITHOUT_CLASSIFICATION	0.9999999983352883	WITHOUT_CLASSIFICATION	1.6647117338828145E-9	DEFECT
// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //	WITHOUT_CLASSIFICATION	0.9999999311529564	WITHOUT_CLASSIFICATION	6.884704369500143E-8	DEFECT
// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //	WITHOUT_CLASSIFICATION	0.9999984859551057	WITHOUT_CLASSIFICATION	1.5140448942962593E-6	DEFECT
// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //	WITHOUT_CLASSIFICATION	0.9999998697916884	WITHOUT_CLASSIFICATION	1.3020831163749088E-7	DEFECT
// Interpret it as part of the name. //	WITHOUT_CLASSIFICATION	0.9999999765239315	WITHOUT_CLASSIFICATION	2.3476068471045672E-8	DEFECT
// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //	WITHOUT_CLASSIFICATION	0.9999903330187363	WITHOUT_CLASSIFICATION	9.666981263665455E-6	DEFECT
//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);	WITHOUT_CLASSIFICATION	0.9999999308429598	WITHOUT_CLASSIFICATION	6.915704016380426E-8	DEFECT
// First try to see if this class has an eInstance  //	WITHOUT_CLASSIFICATION	0.9999932703991802	WITHOUT_CLASSIFICATION	6.729600819771925E-6	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999997144943878	WITHOUT_CLASSIFICATION	2.855056122222976E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999003073611	WITHOUT_CLASSIFICATION	9.969263895901114E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999816179327	WITHOUT_CLASSIFICATION	1.8382067324390666E-8	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999989484982529	WITHOUT_CLASSIFICATION	1.0515017471166846E-6	DEFECT
// Load the schema and packages that were used to load the instance into this resource set. //	WITHOUT_CLASSIFICATION	0.9999985295442217	WITHOUT_CLASSIFICATION	1.4704557782595654E-6	DEFECT
// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //	WITHOUT_CLASSIFICATION	0.9999995702622126	WITHOUT_CLASSIFICATION	4.2973778737796145E-7	DEFECT
// Put all static package in the package registry. //	WITHOUT_CLASSIFICATION	0.9999999193733019	WITHOUT_CLASSIFICATION	8.062669810046547E-8	DEFECT
// Look into SubContributionItems //	WITHOUT_CLASSIFICATION	0.9999996044253991	WITHOUT_CLASSIFICATION	3.955746008456885E-7	DEFECT
//return;	WITHOUT_CLASSIFICATION	0.9999964268671836	WITHOUT_CLASSIFICATION	3.5731328164576533E-6	DEFECT
// super.collectNewChildDescriptors(newChildDescriptors, object);	WITHOUT_CLASSIFICATION	0.9999994172378187	WITHOUT_CLASSIFICATION	5.827621812679309E-7	DEFECT
// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //	WITHOUT_CLASSIFICATION	0.9999998725623158	WITHOUT_CLASSIFICATION	1.2743768418567452E-7	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999799645395	WITHOUT_CLASSIFICATION	2.0035460477551258E-8	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9994208720182608	WITHOUT_CLASSIFICATION	5.791279817391797E-4	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.999999756688879	WITHOUT_CLASSIFICATION	2.433111209628083E-7	DEFECT
// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 	WITHOUT_CLASSIFICATION	0.9999998194539049	WITHOUT_CLASSIFICATION	1.805460950021852E-7	DEFECT
// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //	WITHOUT_CLASSIFICATION	0.9999955184303814	WITHOUT_CLASSIFICATION	4.48156961867676E-6	DEFECT
// A primitive type can only be used as the generic type of a typed element. //	WITHOUT_CLASSIFICATION	0.9999850874203936	WITHOUT_CLASSIFICATION	1.4912579606470287E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999996622904032	WITHOUT_CLASSIFICATION	3.377095968865016E-7	DEFECT
// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //	WITHOUT_CLASSIFICATION	0.9999957710739779	WITHOUT_CLASSIFICATION	4.228926022246985E-6	DEFECT
// Or we test their relationship via their instance classes, if they have them. //	WITHOUT_CLASSIFICATION	0.9999999913289946	WITHOUT_CLASSIFICATION	8.671005397581958E-9	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999858484652	WITHOUT_CLASSIFICATION	1.4151534900040542E-8	DEFECT
// The bound is a wildcard with no constraints. //	WITHOUT_CLASSIFICATION	0.9999999858484652	WITHOUT_CLASSIFICATION	1.4151534900040542E-8	DEFECT
/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/	WITHOUT_CLASSIFICATION	0.9999999929860498	WITHOUT_CLASSIFICATION	7.013950258723912E-9	DEFECT
// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //	WITHOUT_CLASSIFICATION	0.9999666001500758	WITHOUT_CLASSIFICATION	3.339984992427983E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999999968500619	WITHOUT_CLASSIFICATION	3.1499380090514753E-9	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999972116597198	WITHOUT_CLASSIFICATION	2.788340280270435E-6	DEFECT
// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //	WITHOUT_CLASSIFICATION	0.9999972116597198	WITHOUT_CLASSIFICATION	2.788340280270435E-6	DEFECT
// If we can't add it, it must already be in the list so find it and move it to the end. //	WITHOUT_CLASSIFICATION	0.9999977241077138	WITHOUT_CLASSIFICATION	2.27589228613839E-6	DEFECT
// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //	WITHOUT_CLASSIFICATION	0.997012398100315	WITHOUT_CLASSIFICATION	0.002987601899685033	DEFECT
// There's no reason they aren't equal, so they are. //	WITHOUT_CLASSIFICATION	0.9999996091667808	WITHOUT_CLASSIFICATION	3.9083321929551883E-7	DEFECT
// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //	WITHOUT_CLASSIFICATION	0.9999999728080882	WITHOUT_CLASSIFICATION	2.719191183281111E-8	DEFECT
// If entries don't have the same feature, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9998640436797506	WITHOUT_CLASSIFICATION	1.3595632024943402E-4	DEFECT
// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //	WITHOUT_CLASSIFICATION	0.9999999975936318	WITHOUT_CLASSIFICATION	2.406368214018337E-9	DEFECT
// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //	WITHOUT_CLASSIFICATION	0.9999999408824355	WITHOUT_CLASSIFICATION	5.911756451536246E-8	DEFECT
// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //	WITHOUT_CLASSIFICATION	0.9999985570958352	WITHOUT_CLASSIFICATION	1.4429041647559028E-6	DEFECT
// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //	WITHOUT_CLASSIFICATION	0.9999997223034595	WITHOUT_CLASSIFICATION	2.776965405105935E-7	DEFECT
// Cc	WITHOUT_CLASSIFICATION	0.9999932128554728	WITHOUT_CLASSIFICATION	6.787144527229803E-6	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.999999999675551	WITHOUT_CLASSIFICATION	3.2444907363611035E-10	DEFECT
// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //	WITHOUT_CLASSIFICATION	0.9999997617140038	WITHOUT_CLASSIFICATION	2.3828599617470966E-7	DEFECT
// So if the resolved object is also present... //	WITHOUT_CLASSIFICATION	0.9999573174848527	WITHOUT_CLASSIFICATION	4.2682515147336486E-5	DEFECT
// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //	WITHOUT_CLASSIFICATION	0.9999999984897993	WITHOUT_CLASSIFICATION	1.5102007332891796E-9	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999802206938989	WITHOUT_CLASSIFICATION	1.9779306101061085E-5	DEFECT
// Look for the first non-XMI element. //	WITHOUT_CLASSIFICATION	0.9999997297595511	WITHOUT_CLASSIFICATION	2.702404488871917E-7	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999994778227499	WITHOUT_CLASSIFICATION	5.221772501177892E-7	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999950923025	WITHOUT_CLASSIFICATION	4.9076974308758766E-9	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.999999910132779	WITHOUT_CLASSIFICATION	8.98672209715751E-8	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999999694866504	WITHOUT_CLASSIFICATION	3.051334962975139E-8	DEFECT
// see if prefix already exists in current context	WITHOUT_CLASSIFICATION	0.9999997392950718	WITHOUT_CLASSIFICATION	2.607049282209597E-7	DEFECT
// Walk up the super types until we reach a root. //	WITHOUT_CLASSIFICATION	0.9998982410793562	WITHOUT_CLASSIFICATION	1.017589206437431E-4	DEFECT
// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //	WITHOUT_CLASSIFICATION	0.9999204676823505	WITHOUT_CLASSIFICATION	7.953231764943388E-5	DEFECT
/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */	WITHOUT_CLASSIFICATION	0.9999924996318308	WITHOUT_CLASSIFICATION	7.500368169141652E-6	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999173753922	WITHOUT_CLASSIFICATION	8.262460780811619E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999173753922	WITHOUT_CLASSIFICATION	8.262460780811619E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999173753922	WITHOUT_CLASSIFICATION	8.262460780811619E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999173753922	WITHOUT_CLASSIFICATION	8.262460780811619E-7	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999996613718193	WITHOUT_CLASSIFICATION	3.386281806909746E-7	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999945239644984	WITHOUT_CLASSIFICATION	5.476035501654873E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999972475110025	WITHOUT_CLASSIFICATION	2.7524889974966947E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999972475110025	WITHOUT_CLASSIFICATION	2.7524889974966947E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999972475110025	WITHOUT_CLASSIFICATION	2.7524889974966947E-6	DEFECT
// Only handle classifiers from this package. //	WITHOUT_CLASSIFICATION	0.999999915671881	WITHOUT_CLASSIFICATION	8.432811899237465E-8	DEFECT
// We effectively passed null, "" to look up the general-content feature. //	WITHOUT_CLASSIFICATION	0.9998336761082792	WITHOUT_CLASSIFICATION	1.6632389172064384E-4	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999983177636862	WITHOUT_CLASSIFICATION	1.682236313855334E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.999998334997916	WITHOUT_CLASSIFICATION	1.665002084023546E-6	DEFECT
// Keep trying other member types until all have failed.	WITHOUT_CLASSIFICATION	0.999998334997916	WITHOUT_CLASSIFICATION	1.665002084023546E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999840924933091	WITHOUT_CLASSIFICATION	1.590750669094456E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999840924933091	WITHOUT_CLASSIFICATION	1.590750669094456E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999840924933091	WITHOUT_CLASSIFICATION	1.590750669094456E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999840924933091	WITHOUT_CLASSIFICATION	1.590750669094456E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999840924933091	WITHOUT_CLASSIFICATION	1.590750669094456E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999840924933091	WITHOUT_CLASSIFICATION	1.590750669094456E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999840924933091	WITHOUT_CLASSIFICATION	1.590750669094456E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999840924933091	WITHOUT_CLASSIFICATION	1.590750669094456E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999840924933091	WITHOUT_CLASSIFICATION	1.590750669094456E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999840924933091	WITHOUT_CLASSIFICATION	1.590750669094456E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999840924933091	WITHOUT_CLASSIFICATION	1.590750669094456E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999840924933091	WITHOUT_CLASSIFICATION	1.590750669094456E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999840924933091	WITHOUT_CLASSIFICATION	1.590750669094456E-5	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999991656957117	WITHOUT_CLASSIFICATION	8.343042882366683E-7	DEFECT
// Need not to call setSource() because // a caller can not access this match instance.	WITHOUT_CLASSIFICATION	0.9999991656957117	WITHOUT_CLASSIFICATION	8.343042882366683E-7	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9951090530136856	WITHOUT_CLASSIFICATION	0.004890946986314387	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9951090530136856	WITHOUT_CLASSIFICATION	0.004890946986314387	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999494242244457	WITHOUT_CLASSIFICATION	5.057577555435477E-5	DEFECT
// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 	WITHOUT_CLASSIFICATION	0.9999985337236684	WITHOUT_CLASSIFICATION	1.4662763315920212E-6	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999940251402916	WITHOUT_CLASSIFICATION	5.974859708542225E-6	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999948435232913	WITHOUT_CLASSIFICATION	5.156476708811563E-6	DEFECT
// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o	WITHOUT_CLASSIFICATION	0.9999981884529947	WITHOUT_CLASSIFICATION	1.8115470052060965E-6	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999563551037941	WITHOUT_CLASSIFICATION	4.364489620587969E-5	DEFECT
// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999612843774628	WITHOUT_CLASSIFICATION	3.8715622537310206E-5	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999999701094169	WITHOUT_CLASSIFICATION	2.989058316630773E-8	DEFECT
/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */	WITHOUT_CLASSIFICATION	0.9999999983900912	WITHOUT_CLASSIFICATION	1.6099087405765578E-9	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999828268481598	WITHOUT_CLASSIFICATION	1.717315184031428E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999936717963132	WITHOUT_CLASSIFICATION	6.328203686817505E-6	DEFECT
// off -> next of '}'	WITHOUT_CLASSIFICATION	0.9999946606748474	WITHOUT_CLASSIFICATION	5.339325152655751E-6	DEFECT
// \ + c // backsolidus // POSIX Character class such as [:alnum:]	WITHOUT_CLASSIFICATION	0.9999997209333658	WITHOUT_CLASSIFICATION	2.790666343009565E-7	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999968535028521	WITHOUT_CLASSIFICATION	3.1464971479977013E-6	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.999995107289811	WITHOUT_CLASSIFICATION	4.8927101889134275E-6	DEFECT
// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B	WITHOUT_CLASSIFICATION	0.9999959379911093	WITHOUT_CLASSIFICATION	4.06200889075899E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999981916017479	WITHOUT_CLASSIFICATION	1.8083982521096964E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999971180043156	WITHOUT_CLASSIFICATION	2.8819956845088984E-6	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999864148176378	WITHOUT_CLASSIFICATION	1.3585182362262709E-5	DEFECT
/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */	WITHOUT_CLASSIFICATION	0.9999999522528811	WITHOUT_CLASSIFICATION	4.774711895754889E-8	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999760094847793	WITHOUT_CLASSIFICATION	2.399051522064938E-5	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999760094847793	WITHOUT_CLASSIFICATION	2.399051522064938E-5	DEFECT
// 28 // 29, 30 // 31-37	WITHOUT_CLASSIFICATION	0.9999918991792889	WITHOUT_CLASSIFICATION	8.100820711080378E-6	DEFECT
// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote	WITHOUT_CLASSIFICATION	0.9999861563484022	WITHOUT_CLASSIFICATION	1.3843651597822397E-5	DEFECT
/*0590..05FF;*/	WITHOUT_CLASSIFICATION	0.9991655979750111	WITHOUT_CLASSIFICATION	8.344020249888196E-4	DEFECT
/*0A00..0A7F;*/	WITHOUT_CLASSIFICATION	0.9990612890224791	WITHOUT_CLASSIFICATION	9.38710977520905E-4	DEFECT
/*0D00..0D7F;*/	WITHOUT_CLASSIFICATION	0.9987604779153052	WITHOUT_CLASSIFICATION	0.0012395220846948113	DEFECT
/*10A0..10FF;*/	WITHOUT_CLASSIFICATION	0.9994023877839273	WITHOUT_CLASSIFICATION	5.976122160727379E-4	DEFECT
/*16A0..16FF;*/	WITHOUT_CLASSIFICATION	0.999521164969718	WITHOUT_CLASSIFICATION	4.7883503028192366E-4	DEFECT
/*2000..206F;*/	WITHOUT_CLASSIFICATION	0.9983845486922568	WITHOUT_CLASSIFICATION	0.0016154513077432243	DEFECT
/*2190..21FF;*/	WITHOUT_CLASSIFICATION	0.9992934532917834	WITHOUT_CLASSIFICATION	7.065467082166725E-4	DEFECT
/*2500..257F;*/	WITHOUT_CLASSIFICATION	0.9985460145440527	WITHOUT_CLASSIFICATION	0.0014539854559474338	DEFECT
/*2FF0..2FFF;*/	WITHOUT_CLASSIFICATION	0.9992896347762715	WITHOUT_CLASSIFICATION	7.103652237285305E-4	DEFECT
/*3190..319F;*/	WITHOUT_CLASSIFICATION	0.9993828549154434	WITHOUT_CLASSIFICATION	6.17145084556532E-4	DEFECT
/*A000..A48F;*/	WITHOUT_CLASSIFICATION	0.9989703401355264	WITHOUT_CLASSIFICATION	0.0010296598644735362	DEFECT
/*FB50..FDFF;*/	WITHOUT_CLASSIFICATION	0.9975773633586442	WITHOUT_CLASSIFICATION	0.0024226366413557235	DEFECT
/*FF00..FFEF;*/	WITHOUT_CLASSIFICATION	0.9988723064870806	WITHOUT_CLASSIFICATION	0.0011276935129194124	DEFECT
/*1D400..1D7FF;*/	WITHOUT_CLASSIFICATION	0.998834276846627	WITHOUT_CLASSIFICATION	0.0011657231533730556	DEFECT
//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 	WITHOUT_CLASSIFICATION	0.9999964941757068	WITHOUT_CLASSIFICATION	3.5058242930816556E-6	DEFECT
// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;	WITHOUT_CLASSIFICATION	0.9999857972122901	WITHOUT_CLASSIFICATION	1.4202787709882248E-5	DEFECT
// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction	WITHOUT_CLASSIFICATION	0.9999972320726532	WITHOUT_CLASSIFICATION	2.7679273468495153E-6	DEFECT
// both prefix (if any) a localpart must be valid NCName	WITHOUT_CLASSIFICATION	0.9999999983419937	WITHOUT_CLASSIFICATION	1.6580061801265978E-9	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999857047248961	WITHOUT_CLASSIFICATION	1.4295275103906733E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999857047248961	WITHOUT_CLASSIFICATION	1.4295275103906733E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999857047248961	WITHOUT_CLASSIFICATION	1.4295275103906733E-5	DEFECT
// Empty.	WITHOUT_CLASSIFICATION	0.9999857047248961	WITHOUT_CLASSIFICATION	1.4295275103906733E-5	DEFECT
/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */	WITHOUT_CLASSIFICATION	0.9972235717872902	WITHOUT_CLASSIFICATION	0.0027764282127098017	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999905808858	WITHOUT_CLASSIFICATION	9.419114191004172E-9	DEFECT
/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */	WITHOUT_CLASSIFICATION	0.9999999997429874	WITHOUT_CLASSIFICATION	2.5701258861208304E-10	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999995453512186	WITHOUT_CLASSIFICATION	4.5464878143547704E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999995453512186	WITHOUT_CLASSIFICATION	4.5464878143547704E-7	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999654734939215	WITHOUT_CLASSIFICATION	3.452650607847169E-5	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999932355668052	WITHOUT_CLASSIFICATION	6.764433194842385E-6	DEFECT
// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html	WITHOUT_CLASSIFICATION	0.9999932355668052	WITHOUT_CLASSIFICATION	6.764433194842385E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999951580263496	WITHOUT_CLASSIFICATION	4.841973650274567E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999951580263496	WITHOUT_CLASSIFICATION	4.841973650274567E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999939506873735	WITHOUT_CLASSIFICATION	6.049312626575626E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999867852005812	WITHOUT_CLASSIFICATION	1.3214799418871861E-5	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999927408677738	WITHOUT_CLASSIFICATION	7.259132226118499E-6	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999992514869529	WITHOUT_CLASSIFICATION	7.485130471158304E-7	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999999681804261	WITHOUT_CLASSIFICATION	3.181957380547934E-8	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999920821449	WITHOUT_CLASSIFICATION	7.917855157517931E-9	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999999334087533	WITHOUT_CLASSIFICATION	6.65912467804792E-8	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999962937486896	WITHOUT_CLASSIFICATION	3.7062513103266635E-6	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9999830893562309	WITHOUT_CLASSIFICATION	1.6910643769115807E-5	DEFECT
// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments	WITHOUT_CLASSIFICATION	0.9999830893562309	WITHOUT_CLASSIFICATION	1.6910643769115807E-5	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999961533998403	WITHOUT_CLASSIFICATION	3.846600159623867E-6	DEFECT
// create message	WITHOUT_CLASSIFICATION	0.9999999099444152	WITHOUT_CLASSIFICATION	9.005558477025777E-8	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999999759148306	WITHOUT_CLASSIFICATION	2.4085169418903983E-8	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999973853475	WITHOUT_CLASSIFICATION	2.6146525972979164E-9	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999877444966492	WITHOUT_CLASSIFICATION	1.22555033509217E-5	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999637965367	WITHOUT_CLASSIFICATION	3.620346330508061E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999637965367	WITHOUT_CLASSIFICATION	3.620346330508061E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999637965367	WITHOUT_CLASSIFICATION	3.620346330508061E-8	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999987795074	WITHOUT_CLASSIFICATION	1.2204926009907885E-9	DEFECT
// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas	WITHOUT_CLASSIFICATION	0.9999999987795074	WITHOUT_CLASSIFICATION	1.2204926009907885E-9	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999820664875	WITHOUT_CLASSIFICATION	1.7933512438422765E-8	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999999859767341	WITHOUT_CLASSIFICATION	1.4023265981415715E-8	DEFECT
// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.	WITHOUT_CLASSIFICATION	0.9999999859767341	WITHOUT_CLASSIFICATION	1.4023265981415715E-8	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999991996672333	WITHOUT_CLASSIFICATION	8.00332766733479E-7	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999994983661492	WITHOUT_CLASSIFICATION	5.016338508066262E-7	DEFECT
// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999924056153959	WITHOUT_CLASSIFICATION	7.594384604143957E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999952318589191	WITHOUT_CLASSIFICATION	4.768141080809669E-6	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999761645741055	WITHOUT_CLASSIFICATION	2.3835425894523957E-5	DEFECT
// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999761645741055	WITHOUT_CLASSIFICATION	2.3835425894523957E-5	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977580126616	WITHOUT_CLASSIFICATION	2.2419873384402673E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977580126616	WITHOUT_CLASSIFICATION	2.2419873384402673E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977580126616	WITHOUT_CLASSIFICATION	2.2419873384402673E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977580126616	WITHOUT_CLASSIFICATION	2.2419873384402673E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977580126616	WITHOUT_CLASSIFICATION	2.2419873384402673E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977580126616	WITHOUT_CLASSIFICATION	2.2419873384402673E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977580126616	WITHOUT_CLASSIFICATION	2.2419873384402673E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977580126616	WITHOUT_CLASSIFICATION	2.2419873384402673E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977580126616	WITHOUT_CLASSIFICATION	2.2419873384402673E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977580126616	WITHOUT_CLASSIFICATION	2.2419873384402673E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977580126616	WITHOUT_CLASSIFICATION	2.2419873384402673E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977580126616	WITHOUT_CLASSIFICATION	2.2419873384402673E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999727052679225	WITHOUT_CLASSIFICATION	2.729473207742365E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999859730020012	WITHOUT_CLASSIFICATION	1.4026997998727707E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999974676636044	WITHOUT_CLASSIFICATION	2.5323363955223316E-6	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999926775811228	WITHOUT_CLASSIFICATION	7.322418877262281E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999859035681483	WITHOUT_CLASSIFICATION	1.4096431851680804E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999927949323093	WITHOUT_CLASSIFICATION	7.205067690735244E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999765520593	WITHOUT_CLASSIFICATION	2.3447940700580953E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999765520593	WITHOUT_CLASSIFICATION	2.3447940700580953E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999765520593	WITHOUT_CLASSIFICATION	2.3447940700580953E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999765520593	WITHOUT_CLASSIFICATION	2.3447940700580953E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965497865744	WITHOUT_CLASSIFICATION	3.4502134256462636E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965497865744	WITHOUT_CLASSIFICATION	3.4502134256462636E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965497865744	WITHOUT_CLASSIFICATION	3.4502134256462636E-6	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999988716455269	WITHOUT_CLASSIFICATION	1.1283544730897363E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999874366339095	WITHOUT_CLASSIFICATION	1.2563366090564411E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999879990289519	WITHOUT_CLASSIFICATION	1.200097104802409E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999879990289519	WITHOUT_CLASSIFICATION	1.200097104802409E-5	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999925395039518	WITHOUT_CLASSIFICATION	7.460496048155443E-6	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999898732725534	WITHOUT_CLASSIFICATION	1.012672744668763E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999984578266573	WITHOUT_CLASSIFICATION	1.5421733426923266E-5	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999980175423128	WITHOUT_CLASSIFICATION	1.9824576873612206E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999860962313764	WITHOUT_CLASSIFICATION	1.3903768623658092E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999997941074122	WITHOUT_CLASSIFICATION	2.0589258769838185E-7	DEFECT
// cause a syntax error	WITHOUT_CLASSIFICATION	0.9999887880038274	WITHOUT_CLASSIFICATION	1.1211996172654503E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Look for a likely plugin name. //	WITHOUT_CLASSIFICATION	0.9996700075669899	WITHOUT_CLASSIFICATION	3.2999243301019723E-4	DEFECT
/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */	WITHOUT_CLASSIFICATION	0.9999996634354994	WITHOUT_CLASSIFICATION	3.3656450059937646E-7	DEFECT
/*   * Returns the base portion of the dynamic template path.   */	WITHOUT_CLASSIFICATION	0.9999956715959613	WITHOUT_CLASSIFICATION	4.328404038800602E-6	DEFECT
// It's okay for there not be a precompiled template, so fail quietly.	WITHOUT_CLASSIFICATION	0.9999995471397526	WITHOUT_CLASSIFICATION	4.5286024735485835E-7	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9935521108396423	WITHOUT_CLASSIFICATION	0.0064478891603577	DEFECT
// GenTypedElement	WITHOUT_CLASSIFICATION	0.9999983649525361	WITHOUT_CLASSIFICATION	1.6350474639179691E-6	DEFECT
// GenTypeParameter	WITHOUT_CLASSIFICATION	0.9999998438721494	WITHOUT_CLASSIFICATION	1.5612785061319033E-7	DEFECT
//GenRuntimeVersion	WITHOUT_CLASSIFICATION	0.9999876476592747	WITHOUT_CLASSIFICATION	1.2352340725399697E-5	DEFECT
//GenModelPackage	WITHOUT_CLASSIFICATION	0.9999864886372015	WITHOUT_CLASSIFICATION	1.3511362798499015E-5	DEFECT
// String getPackageID();	WITHOUT_CLASSIFICATION	0.9999990315745729	WITHOUT_CLASSIFICATION	9.684254271074492E-7	DEFECT
// getFirstFileExtension?	WITHOUT_CLASSIFICATION	0.9999995747779155	WITHOUT_CLASSIFICATION	4.252220845359665E-7	DEFECT
// this returns either "attribute", "attribute list", "reference", or "reference list"	WITHOUT_CLASSIFICATION	0.9999994205462194	WITHOUT_CLASSIFICATION	5.794537806333212E-7	DEFECT
// add variable fragment to new declaration	WITHOUT_CLASSIFICATION	0.9999999768422656	WITHOUT_CLASSIFICATION	2.3157734460845592E-8	DEFECT
// Filtered for property keys to remove duplicates.	WITHOUT_CLASSIFICATION	0.9999971217881287	WITHOUT_CLASSIFICATION	2.8782118713175245E-6	DEFECT
//GenModelFactory	WITHOUT_CLASSIFICATION	0.9999737189960065	WITHOUT_CLASSIFICATION	2.6281003993427843E-5	DEFECT
// GenAnnotation	WITHOUT_CLASSIFICATION	0.9999886851447719	WITHOUT_CLASSIFICATION	1.1314855228191736E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999997941074122	WITHOUT_CLASSIFICATION	2.0589258769838185E-7	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999922080920598	WITHOUT_CLASSIFICATION	7.791907940208708E-6	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999992260112996	WITHOUT_CLASSIFICATION	7.739887002928885E-7	DEFECT
// only 1 fragment left - revert the changes	WITHOUT_CLASSIFICATION	0.9999997166527944	WITHOUT_CLASSIFICATION	2.833472055796308E-7	DEFECT
// split is performed	WITHOUT_CLASSIFICATION	0.9999992757042145	WITHOUT_CLASSIFICATION	7.242957853780982E-7	DEFECT
// name already contains ".*" - unset on demand property	WITHOUT_CLASSIFICATION	0.9999977073754807	WITHOUT_CLASSIFICATION	2.292624519360033E-6	DEFECT
// not supported in JDOM	WITHOUT_CLASSIFICATION	0.9999240557041492	WITHOUT_CLASSIFICATION	7.594429585078399E-5	DEFECT
// not supported in JDOM    	WITHOUT_CLASSIFICATION	0.9998567541825286	WITHOUT_CLASSIFICATION	1.432458174713592E-4	DEFECT
//The shared instance.	WITHOUT_CLASSIFICATION	0.9999993499264372	WITHOUT_CLASSIFICATION	6.500735626169695E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.999995222583271	WITHOUT_CLASSIFICATION	4.777416728959014E-6	DEFECT
//GenAnnotationImpl	WITHOUT_CLASSIFICATION	0.9999007603879135	WITHOUT_CLASSIFICATION	9.92396120864081E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999660903053	WITHOUT_CLASSIFICATION	3.3909694784460406E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998762952466	WITHOUT_CLASSIFICATION	1.237047533777149E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999992245098178	WITHOUT_CLASSIFICATION	7.75490182166597E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999829356381	WITHOUT_CLASSIFICATION	1.7064361898045296E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999849400648185	WITHOUT_CLASSIFICATION	1.5059935181373625E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996138216523	WITHOUT_CLASSIFICATION	3.861783478063688E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.99999955321197	WITHOUT_CLASSIFICATION	4.4678802994924626E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998949513081	WITHOUT_CLASSIFICATION	1.0504869187685939E-7	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995751368276	WITHOUT_CLASSIFICATION	4.2486317237552965E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999966882499354	WITHOUT_CLASSIFICATION	3.31175006461721E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999987446375067	WITHOUT_CLASSIFICATION	1.2553624931933802E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999989995496296	WITHOUT_CLASSIFICATION	1.0004503704205164E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998595120936	WITHOUT_CLASSIFICATION	1.404879063273303E-7	DEFECT
//GenModelPackageImpl	WITHOUT_CLASSIFICATION	0.9999889287416248	WITHOUT_CLASSIFICATION	1.1071258375259354E-5	DEFECT
// Does nothing	WITHOUT_CLASSIFICATION	0.9999955701415896	WITHOUT_CLASSIFICATION	4.4298584104609835E-6	DEFECT
// Create an import manager for this compilation unit	WITHOUT_CLASSIFICATION	0.9999964763351457	WITHOUT_CLASSIFICATION	3.52366485439454E-6	DEFECT
// Create a code formatter for this compilation unit, if needed	WITHOUT_CLASSIFICATION	0.9999982702831122	WITHOUT_CLASSIFICATION	1.729716887726203E-6	DEFECT
// InputStream contents = new ByteArrayInputStream(bytes);	WITHOUT_CLASSIFICATION	0.9999953863751802	WITHOUT_CLASSIFICATION	4.613624819791466E-6	DEFECT
// Clear the import manager	WITHOUT_CLASSIFICATION	0.9999995567415835	WITHOUT_CLASSIFICATION	4.432584164845073E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9990049061810636	WITHOUT_CLASSIFICATION	9.950938189363797E-4	DEFECT
// BasicEMap.this.removeEntry(index, j);	WITHOUT_CLASSIFICATION	0.9999942760463296	WITHOUT_CLASSIFICATION	5.723953670336588E-6	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9990049061810636	WITHOUT_CLASSIFICATION	9.950938189363797E-4	DEFECT
//(eType instanceof EDataType)	WITHOUT_CLASSIFICATION	0.9999993300042018	WITHOUT_CLASSIFICATION	6.699957982342929E-7	DEFECT
// order genPackages by putting firstGenPackage (if non-null) first	WITHOUT_CLASSIFICATION	0.9999998475412318	WITHOUT_CLASSIFICATION	1.5245876819934328E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999976404256707	WITHOUT_CLASSIFICATION	2.359574329311418E-6	DEFECT
// If the value is null, the key is a referenced object	WITHOUT_CLASSIFICATION	0.9999948966210582	WITHOUT_CLASSIFICATION	5.103378941736945E-6	DEFECT
// If we've found thing with type parameters, search them for a match.	WITHOUT_CLASSIFICATION	0.9999997242207266	WITHOUT_CLASSIFICATION	2.757792735143686E-7	DEFECT
/*   * Set from {@link #isChildren children} if unset, and return value.   */	WITHOUT_CLASSIFICATION	0.9999999836625685	WITHOUT_CLASSIFICATION	1.63374315453625E-8	DEFECT
//  && eReverseFeature.isNavigable();	WITHOUT_CLASSIFICATION	0.9999999575149227	WITHOUT_CLASSIFICATION	4.248507735256932E-8	DEFECT
//GenFeatureImpl	WITHOUT_CLASSIFICATION	0.9999973062335404	WITHOUT_CLASSIFICATION	2.6937664594986457E-6	DEFECT
// Returns whether this class implements any of the given features.	WITHOUT_CLASSIFICATION	0.9935521108396423	WITHOUT_CLASSIFICATION	0.0064478891603577	DEFECT
//GenEnumImpl	WITHOUT_CLASSIFICATION	0.9999748534861641	WITHOUT_CLASSIFICATION	2.5146513835904018E-5	DEFECT
//GenModelFactoryImpl	WITHOUT_CLASSIFICATION	0.9999892773297973	WITHOUT_CLASSIFICATION	1.0722670202769424E-5	DEFECT
// build mapping from classes to list of features that use them	WITHOUT_CLASSIFICATION	0.9999995806690699	WITHOUT_CLASSIFICATION	4.1933093018013195E-7	DEFECT
// scan feature lists for those with multiple elements and return them	WITHOUT_CLASSIFICATION	0.9999999887006651	WITHOUT_CLASSIFICATION	1.1299335019887674E-8	DEFECT
//data type	WITHOUT_CLASSIFICATION	0.9999836482079132	WITHOUT_CLASSIFICATION	1.6351792086805274E-5	DEFECT
//GenTypeParameterImpl	WITHOUT_CLASSIFICATION	0.999996753086564	WITHOUT_CLASSIFICATION	3.2469134359966837E-6	DEFECT
//GenTypedElementImpl	WITHOUT_CLASSIFICATION	0.9999822762575158	WITHOUT_CLASSIFICATION	1.772374248421937E-5	DEFECT
// escaped unicode form	WITHOUT_CLASSIFICATION	0.9999999347167229	WITHOUT_CLASSIFICATION	6.528327714867437E-8	DEFECT
// EObject is handled by default case	WITHOUT_CLASSIFICATION	0.9999999526045004	WITHOUT_CLASSIFICATION	4.7395499722346765E-8	DEFECT
// Go through class super types to catch any from other packages	WITHOUT_CLASSIFICATION	0.9999921551962657	WITHOUT_CLASSIFICATION	7.844803734247772E-6	DEFECT
// Go through class super types to catch constraints from other packages	WITHOUT_CLASSIFICATION	0.9999999099661885	WITHOUT_CLASSIFICATION	9.003381160916713E-8	DEFECT
// Create helpers to cache and supply information for unique naming	WITHOUT_CLASSIFICATION	0.9998901462238349	WITHOUT_CLASSIFICATION	1.0985377616510182E-4	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999900365200421	WITHOUT_CLASSIFICATION	9.963479957971674E-6	DEFECT
// return getPrefixedName("EditPlugin");	WITHOUT_CLASSIFICATION	0.9999880673332178	WITHOUT_CLASSIFICATION	1.1932666782296776E-5	DEFECT
// return getProviderPackageName() + "." + getEditPluginClassName();	WITHOUT_CLASSIFICATION	0.9999941374354251	WITHOUT_CLASSIFICATION	5.862564574934389E-6	DEFECT
// return getPrefixedName("EditorPlugin");	WITHOUT_CLASSIFICATION	0.9999881107662217	WITHOUT_CLASSIFICATION	1.1889233778349956E-5	DEFECT
// return getPresentationPackageName() + "." + getEditorPluginClassName();	WITHOUT_CLASSIFICATION	0.9999995590877157	WITHOUT_CLASSIFICATION	4.4091228441252084E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999896356565569	WITHOUT_CLASSIFICATION	1.0364343443145657E-5	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9998682079069999	WITHOUT_CLASSIFICATION	1.3179209300009744E-4	DEFECT
//TBD 	WITHOUT_CLASSIFICATION	0.9998682079069999	WITHOUT_CLASSIFICATION	1.3179209300009744E-4	DEFECT
//GenPackageImpl	WITHOUT_CLASSIFICATION	0.9999910037201527	WITHOUT_CLASSIFICATION	8.996279847255324E-6	DEFECT
// Don't care about plugin class; we can generate a model without one.	WITHOUT_CLASSIFICATION	0.9992057716433481	WITHOUT_CLASSIFICATION	7.942283566520116E-4	DEFECT
// genPackage can be a broken proxy	WITHOUT_CLASSIFICATION	0.992856968901837	WITHOUT_CLASSIFICATION	0.007143031098162955	DEFECT
//   protected JETEmitter extendedItemProviderEmitter = null;	WITHOUT_CLASSIFICATION	0.99970099078623	WITHOUT_CLASSIFICATION	2.990092137700165E-4	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997325082759	WITHOUT_CLASSIFICATION	2.674917241288129E-7	DEFECT
//GenModelImpl	WITHOUT_CLASSIFICATION	0.9999542729382411	WITHOUT_CLASSIFICATION	4.572706175883418E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// TODO	WITHOUT_CLASSIFICATION	0.9988515523697962	WITHOUT_CLASSIFICATION	0.0011484476302038309	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.999999428079536	WITHOUT_CLASSIFICATION	5.719204640334702E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999988654473334	WITHOUT_CLASSIFICATION	1.1345526665754025E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999994087141351	WITHOUT_CLASSIFICATION	5.9128586490278276E-6	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998726400184522	WITHOUT_CLASSIFICATION	1.2735998154775278E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999866167120572	WITHOUT_CLASSIFICATION	1.3383287942811873E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
//GenModelSwitch	WITHOUT_CLASSIFICATION	0.9999556367452997	WITHOUT_CLASSIFICATION	4.436325470029806E-5	DEFECT
//GenModelAdapterFactory	WITHOUT_CLASSIFICATION	0.999987257198563	WITHOUT_CLASSIFICATION	1.274280143693194E-5	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999665047659	WITHOUT_CLASSIFICATION	3.349523404823831E-8	DEFECT
//GenModelValidator	WITHOUT_CLASSIFICATION	0.999985093207581	WITHOUT_CLASSIFICATION	1.4906792418980394E-5	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997679219026	WITHOUT_CLASSIFICATION	2.3207809752073447E-7	DEFECT
//ItemProvider/getText.override.javajetinc	WITHOUT_CLASSIFICATION	0.999988319947153	WITHOUT_CLASSIFICATION	1.1680052846955978E-5	DEFECT
//ItemProvider/addPropertyDescriptor.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999911638957563	WITHOUT_CLASSIFICATION	8.83610424370793E-6	DEFECT
//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997325082759	WITHOUT_CLASSIFICATION	2.674917241288129E-7	DEFECT
//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997679219026	WITHOUT_CLASSIFICATION	2.3207809752073447E-7	DEFECT
//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 	WITHOUT_CLASSIFICATION	0.999999428079536	WITHOUT_CLASSIFICATION	5.719204640334702E-7	DEFECT
//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999988654473334	WITHOUT_CLASSIFICATION	1.1345526665754025E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999896356565569	WITHOUT_CLASSIFICATION	1.0364343443145657E-5	DEFECT
// return eProperties;	WITHOUT_CLASSIFICATION	0.9999998796729666	WITHOUT_CLASSIFICATION	1.2032703340569324E-7	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999896356565569	WITHOUT_CLASSIFICATION	1.0364343443145657E-5	DEFECT
//Class/reflectiveDelegation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999987854258252	WITHOUT_CLASSIFICATION	1.2145741747909385E-6	DEFECT
//Editor/addItemproviderFactories.override.javajetinc"	WITHOUT_CLASSIFICATION	0.9999960906843715	WITHOUT_CLASSIFICATION	3.909315628475112E-6	DEFECT
//ResourceFactoryClass/createResource.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998816819621	WITHOUT_CLASSIFICATION	1.1831803795124159E-7	DEFECT
//Class/declaredFieldGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999145179794	WITHOUT_CLASSIFICATION	8.548202058814687E-8	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999853204106277	WITHOUT_CLASSIFICATION	1.4679589372209966E-5	DEFECT
///////////////////////	WITHOUT_CLASSIFICATION	0.9999853204106277	WITHOUT_CLASSIFICATION	1.4679589372209966E-5	DEFECT
//volatile	WITHOUT_CLASSIFICATION	0.9999930420553484	WITHOUT_CLASSIFICATION	6.957944651517142E-6	DEFECT
//Class/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999988171652362	WITHOUT_CLASSIFICATION	1.1828347637477295E-6	DEFECT
//Class/getGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998071066406	WITHOUT_CLASSIFICATION	1.928933594277566E-7	DEFECT
//Class/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999726677644	WITHOUT_CLASSIFICATION	2.733223560029942E-7	DEFECT
//Class/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998456866923	WITHOUT_CLASSIFICATION	1.5431330764417739E-7	DEFECT
//Class/basicGetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999989659823166	WITHOUT_CLASSIFICATION	1.034017683316115E-6	DEFECT
//Class/basicGetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998651014722	WITHOUT_CLASSIFICATION	1.3489852777213996E-7	DEFECT
//Class/basicGetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997610654289	WITHOUT_CLASSIFICATION	2.3893457114600645E-7	DEFECT
//Class/basicSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999990169549442	WITHOUT_CLASSIFICATION	9.830450558405356E-7	DEFECT
//Class/basicSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998717513956	WITHOUT_CLASSIFICATION	1.282486044760697E-7	DEFECT
//Class/basicSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997728438852	WITHOUT_CLASSIFICATION	2.271561148500975E-7	DEFECT
//Class/setGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999873615574	WITHOUT_CLASSIFICATION	1.263844260678648E-7	DEFECT
//Class/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999989829769528	WITHOUT_CLASSIFICATION	1.0170230471378263E-6	DEFECT
//Class/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998988933646	WITHOUT_CLASSIFICATION	1.0110663539517055E-7	DEFECT
//Class/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998209181997	WITHOUT_CLASSIFICATION	1.790818001997903E-7	DEFECT
//Class/basicUnsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999993779133434	WITHOUT_CLASSIFICATION	6.220866565952468E-7	DEFECT
//Class/basicUnsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999361909613	WITHOUT_CLASSIFICATION	6.38090386955357E-8	DEFECT
//Class.basicUnsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999160734673	WITHOUT_CLASSIFICATION	8.392653275110042E-8	DEFECT
//Class/unsetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998321670317	WITHOUT_CLASSIFICATION	1.678329682364374E-7	DEFECT
//Class/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999986910236704	WITHOUT_CLASSIFICATION	1.3089763295402508E-6	DEFECT
//Class/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998657348267	WITHOUT_CLASSIFICATION	1.3426517329225512E-7	DEFECT
//Class/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997621872371	WITHOUT_CLASSIFICATION	2.378127630146348E-7	DEFECT
//Class/isSetGenFeature.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998572582047	WITHOUT_CLASSIFICATION	1.4274179519930825E-7	DEFECT
//Class/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999991246977005	WITHOUT_CLASSIFICATION	8.753022994603027E-7	DEFECT
//Class/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999998858075861	WITHOUT_CLASSIFICATION	1.1419241388440552E-7	DEFECT
//Class/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999997977404474	WITHOUT_CLASSIFICATION	2.022595526126755E-7	DEFECT
//Class/genOperation.javadoc.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999996965788426	WITHOUT_CLASSIFICATION	3.0342115750082084E-7	DEFECT
//Class/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.999998743773483	WITHOUT_CLASSIFICATION	1.2562265170805504E-6	DEFECT
//Class/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999925872653	WITHOUT_CLASSIFICATION	7.412734708315913E-8	DEFECT
//Class/eUnset.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999994868363683	WITHOUT_CLASSIFICATION	5.131636315951388E-7	DEFECT
//datatype	WITHOUT_CLASSIFICATION	0.9999596440651376	WITHOUT_CLASSIFICATION	4.035593486237283E-5	DEFECT
//Class/eIsSet.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999984638951022	WITHOUT_CLASSIFICATION	1.53610489787151E-6	DEFECT
//TestCase/getGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997709810362	WITHOUT_CLASSIFICATION	2.2901896378257537E-7	DEFECT
//TestCase/getGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999772322559	WITHOUT_CLASSIFICATION	2.2767744056900213E-8	DEFECT
//TestCase/getGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999596733803	WITHOUT_CLASSIFICATION	4.032661973763217E-8	DEFECT
//TestCase/setGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998058686006	WITHOUT_CLASSIFICATION	1.941313995119629E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999896356565569	WITHOUT_CLASSIFICATION	1.0364343443145657E-5	DEFECT
//TestCase/setGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999807005768	WITHOUT_CLASSIFICATION	1.929942309415636E-8	DEFECT
//TestCase/setGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999658165298	WITHOUT_CLASSIFICATION	3.41834701062364E-8	DEFECT
//TestCase/unsetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997461507506	WITHOUT_CLASSIFICATION	2.5384924949668476E-7	DEFECT
//TestCase/unsetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999973962034	WITHOUT_CLASSIFICATION	2.603796602834221E-8	DEFECT
//TestCase/unsetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.999999953881107	WITHOUT_CLASSIFICATION	4.6118893004680366E-8	DEFECT
//TestCase/isSetGenFeature.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999998330222429	WITHOUT_CLASSIFICATION	1.6697775699570027E-7	DEFECT
//TestCase/isSetGenFeature.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999834000357	WITHOUT_CLASSIFICATION	1.6599964296704244E-8	DEFECT
//TestCase/implementedGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999776773668	WITHOUT_CLASSIFICATION	2.232263319517631E-8	DEFECT
//TestCase/genOperation.annotations.insert.javajetinc	WITHOUT_CLASSIFICATION	0.9999997567710038	WITHOUT_CLASSIFICATION	2.4322899618963956E-7	DEFECT
//TestCase/implementedGenOperation.todo.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999861157439	WITHOUT_CLASSIFICATION	1.3884255957886759E-8	DEFECT
//TestCase/implementedGenOperation.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999760172625	WITHOUT_CLASSIFICATION	2.398273743017853E-8	DEFECT
/*   * Char buffer for HTML data   */	WITHOUT_CLASSIFICATION	0.9999997663752782	WITHOUT_CLASSIFICATION	2.3362472174417437E-7	DEFECT
// Match close.	WITHOUT_CLASSIFICATION	0.9999999372812856	WITHOUT_CLASSIFICATION	6.271871446272245E-8	DEFECT
// Continue processing dynamically as normal.	WITHOUT_CLASSIFICATION	0.999996222231905	WITHOUT_CLASSIFICATION	3.7777680950855953E-6	DEFECT
// Ignore because we'll rethrow the original exception eventually.	WITHOUT_CLASSIFICATION	0.9999998459328068	WITHOUT_CLASSIFICATION	1.5406719321281667E-7	DEFECT
// pure obfuscated genius!	WITHOUT_CLASSIFICATION	0.9999999118885353	WITHOUT_CLASSIFICATION	8.811146465074713E-8	DEFECT
// Read value until delimiter is found:	WITHOUT_CLASSIFICATION	0.999895642257148	WITHOUT_CLASSIFICATION	1.0435774285195309E-4	DEFECT
// Take care of the quoting here.	WITHOUT_CLASSIFICATION	0.9999597850814985	WITHOUT_CLASSIFICATION	4.0214918501486855E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999879990289519	WITHOUT_CLASSIFICATION	1.200097104802409E-5	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999866167120572	WITHOUT_CLASSIFICATION	1.3383287942811873E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Close NCSA like attributes "->"	WITHOUT_CLASSIFICATION	0.9999998590673037	WITHOUT_CLASSIFICATION	1.4093269630635278E-7	DEFECT
// Close variable like attributes "%>"	WITHOUT_CLASSIFICATION	0.999999991287934	WITHOUT_CLASSIFICATION	8.712065930704954E-9	DEFECT
// XMLesque Close tags	WITHOUT_CLASSIFICATION	0.9999965303763482	WITHOUT_CLASSIFICATION	3.469623651815376E-6	DEFECT
// Reached EOF:	WITHOUT_CLASSIFICATION	0.9999788452626843	WITHOUT_CLASSIFICATION	2.1154737315702583E-5	DEFECT
// Ignore the version	WITHOUT_CLASSIFICATION	0.9999998783593006	WITHOUT_CLASSIFICATION	1.216406993173472E-7	DEFECT
//dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999990202900046	WITHOUT_CLASSIFICATION	9.797099953358721E-7	DEFECT
// dumpNodeContents(node);	WITHOUT_CLASSIFICATION	0.9999996752032548	WITHOUT_CLASSIFICATION	3.2479674512491946E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994442495614	WITHOUT_CLASSIFICATION	5.557504386251153E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994442495614	WITHOUT_CLASSIFICATION	5.557504386251153E-7	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998726400184522	WITHOUT_CLASSIFICATION	1.2735998154775278E-4	DEFECT
/////////////////////////////////  PULL  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999766410322415	WITHOUT_CLASSIFICATION	2.3358967758529745E-5	DEFECT
/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/	WITHOUT_CLASSIFICATION	0.999999994905219	WITHOUT_CLASSIFICATION	5.094781045617734E-9	DEFECT
/////////////////////////////////  PUSH  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999803634238935	WITHOUT_CLASSIFICATION	1.9636576106486094E-5	DEFECT
/////////////////////////////////  SWEEP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999758925798343	WITHOUT_CLASSIFICATION	2.410742016559548E-5	DEFECT
/////////////////////////////////  SORT  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999989739177688	WITHOUT_CLASSIFICATION	1.0260822312080262E-5	DEFECT
/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999823287152554	WITHOUT_CLASSIFICATION	1.7671284744550012E-5	DEFECT
// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");	WITHOUT_CLASSIFICATION	0.9999998510466644	WITHOUT_CLASSIFICATION	1.4895333558843733E-7	DEFECT
// apply target parent pattern first	WITHOUT_CLASSIFICATION	0.9999998161062232	WITHOUT_CLASSIFICATION	1.8389377685393632E-7	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994442495614	WITHOUT_CLASSIFICATION	5.557504386251153E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999875005172185	WITHOUT_CLASSIFICATION	1.2499482781436966E-5	DEFECT
// Ignore the exception.	WITHOUT_CLASSIFICATION	0.999999875160328	WITHOUT_CLASSIFICATION	1.2483967208899706E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999988506506702	WITHOUT_CLASSIFICATION	1.1493493297984267E-6	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999998524349133	WITHOUT_CLASSIFICATION	1.4756508672586621E-7	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999807244682166	WITHOUT_CLASSIFICATION	1.927553178333649E-5	DEFECT
// Back up over the whitespace.	WITHOUT_CLASSIFICATION	0.9999998978769797	WITHOUT_CLASSIFICATION	1.0212302019637587E-7	DEFECT
// target method is NOT addSuperInterface	WITHOUT_CLASSIFICATION	0.9999999951234328	WITHOUT_CLASSIFICATION	4.876567251078776E-9	DEFECT
// if the parent is not in target, there is no point on checking the child	WITHOUT_CLASSIFICATION	0.9999874397354599	WITHOUT_CLASSIFICATION	1.256026454009373E-5	DEFECT
// by default nodes are marked up	WITHOUT_CLASSIFICATION	0.9999994481048476	WITHOUT_CLASSIFICATION	5.518951524119875E-7	DEFECT
// ignore rules for nodes of different class	WITHOUT_CLASSIFICATION	0.9999855088340083	WITHOUT_CLASSIFICATION	1.449116599187138E-5	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998726400184522	WITHOUT_CLASSIFICATION	1.2735998154775278E-4	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994442495614	WITHOUT_CLASSIFICATION	5.557504386251153E-7	DEFECT
// use new node from now on	WITHOUT_CLASSIFICATION	0.9999988506506702	WITHOUT_CLASSIFICATION	1.1493493297984267E-6	DEFECT
// redo the markup since nodes changed now	WITHOUT_CLASSIFICATION	0.9999998524349133	WITHOUT_CLASSIFICATION	1.4756508672586621E-7	DEFECT
// super is called on converted node	WITHOUT_CLASSIFICATION	0.9999807244682166	WITHOUT_CLASSIFICATION	1.927553178333649E-5	DEFECT
// Command line execution methods	WITHOUT_CLASSIFICATION	0.9999963096223298	WITHOUT_CLASSIFICATION	3.690377670317375E-6	DEFECT
// do not crash when control model is not set	WITHOUT_CLASSIFICATION	0.9999534298653006	WITHOUT_CLASSIFICATION	4.657013469942461E-5	DEFECT
// Subclasses may override this method	WITHOUT_CLASSIFICATION	0.9999996313080755	WITHOUT_CLASSIFICATION	3.686919246058641E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999977065981	WITHOUT_CLASSIFICATION	2.2934017917989266E-9	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999841565209235	WITHOUT_CLASSIFICATION	1.5843479076393726E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999841565209235	WITHOUT_CLASSIFICATION	1.5843479076393726E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999841565209235	WITHOUT_CLASSIFICATION	1.5843479076393726E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Not instantiable	WITHOUT_CLASSIFICATION	0.9999978977981216	WITHOUT_CLASSIFICATION	2.102201878392885E-6	DEFECT
// replace or append	WITHOUT_CLASSIFICATION	0.9999976797811083	WITHOUT_CLASSIFICATION	2.3202188917037347E-6	DEFECT
// enable tracking for nodes that have string content	WITHOUT_CLASSIFICATION	0.9999960773661071	WITHOUT_CLASSIFICATION	3.9226338928561894E-6	DEFECT
// enable tracking for commented out nodes	WITHOUT_CLASSIFICATION	0.9999975878543671	WITHOUT_CLASSIFICATION	2.4121456330209014E-6	DEFECT
// apply header	WITHOUT_CLASSIFICATION	0.999996978658368	WITHOUT_CLASSIFICATION	3.0213416321049576E-6	DEFECT
// skip whitespace, up to the end of the line	WITHOUT_CLASSIFICATION	0.9999999729033989	WITHOUT_CLASSIFICATION	2.7096601124709034E-8	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.99942112921432	WITHOUT_CLASSIFICATION	5.788707856799792E-4	DEFECT
// revert all current edits for this node	WITHOUT_CLASSIFICATION	0.9999984892937971	WITHOUT_CLASSIFICATION	1.510706202901044E-6	DEFECT
// log the error, ignore the change and continue	WITHOUT_CLASSIFICATION	0.9999999410216396	WITHOUT_CLASSIFICATION	5.8978360493443295E-8	DEFECT
// comment out all lines of the node itself, from firstLine to last line	WITHOUT_CLASSIFICATION	0.9999999114927037	WITHOUT_CLASSIFICATION	8.850729623274566E-8	DEFECT
// if there is anything after the node on the same line, insert line break	WITHOUT_CLASSIFICATION	0.9999962656778039	WITHOUT_CLASSIFICATION	3.7343221961145972E-6	DEFECT
// reset text edits; since this node is processed successfully, there is no need to revert these changes	WITHOUT_CLASSIFICATION	0.9999998730522609	WITHOUT_CLASSIFICATION	1.2694773904294887E-7	DEFECT
// this line has been commented out, return next line number	WITHOUT_CLASSIFICATION	0.9999552543375723	WITHOUT_CLASSIFICATION	4.474566242774029E-5	DEFECT
// return the line number of the start of the node	WITHOUT_CLASSIFICATION	0.9999999802987198	WITHOUT_CLASSIFICATION	1.9701280133446625E-8	DEFECT
// handle the case when there is a replace edit that covers these lines	WITHOUT_CLASSIFICATION	0.9999999242558264	WITHOUT_CLASSIFICATION	7.574417362744887E-8	DEFECT
// skip all lines that replace edit covers	WITHOUT_CLASSIFICATION	0.999999374856488	WITHOUT_CLASSIFICATION	6.251435120153188E-7	DEFECT
// should not happen, re-throw exception	WITHOUT_CLASSIFICATION	0.9913949574636315	WITHOUT_CLASSIFICATION	0.008605042536368599	DEFECT
// make sure that dummy edit is not in the tree	WITHOUT_CLASSIFICATION	0.9982547629334347	WITHOUT_CLASSIFICATION	0.0017452370665652598	DEFECT
// assume length will grow by 10% (average line length is 20 characters)	WITHOUT_CLASSIFICATION	0.9999966032361802	WITHOUT_CLASSIFICATION	3.3967638199134026E-6	DEFECT
// next position is checked as well	WITHOUT_CLASSIFICATION	0.9999932957278798	WITHOUT_CLASSIFICATION	6.704272120253669E-6	DEFECT
// char at currentPos is copied as well	WITHOUT_CLASSIFICATION	0.9999995960199575	WITHOUT_CLASSIFICATION	4.039800424611446E-7	DEFECT
// lastPos, currentPos points at the next chars that will be copied later	WITHOUT_CLASSIFICATION	0.9999830992689357	WITHOUT_CLASSIFICATION	1.690073106432648E-5	DEFECT
// copy last piece if any	WITHOUT_CLASSIFICATION	0.9999964802004124	WITHOUT_CLASSIFICATION	3.5197995876148447E-6	DEFECT
// if needed, comment out a comma of the previous enum constant	WITHOUT_CLASSIFICATION	0.9999999102111962	WITHOUT_CLASSIFICATION	8.978880379657629E-8	DEFECT
// if there is anything before the node on the same line, create line break and comment out the first line of the node	WITHOUT_CLASSIFICATION	0.9999999261720603	WITHOUT_CLASSIFICATION	7.382793965389072E-8	DEFECT
// there is only whitespace on this line - no need for line break	WITHOUT_CLASSIFICATION	0.999983794322826	WITHOUT_CLASSIFICATION	1.620567717390305E-5	DEFECT
// for enum constants, insert line break after the comma if there is anything after the comma	WITHOUT_CLASSIFICATION	0.9999786038965983	WITHOUT_CLASSIFICATION	2.139610340166907E-5	DEFECT
// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)	WITHOUT_CLASSIFICATION	0.9999970807628763	WITHOUT_CLASSIFICATION	2.9192371237250297E-6	DEFECT
// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)	WITHOUT_CLASSIFICATION	0.9999992877384469	WITHOUT_CLASSIFICATION	7.122615531304105E-7	DEFECT
// if previous node is not commented out, but all following are	WITHOUT_CLASSIFICATION	0.9999983690295476	WITHOUT_CLASSIFICATION	1.630970452343383E-6	DEFECT
// insert new line at the end of previous constant	WITHOUT_CLASSIFICATION	0.9999988879066908	WITHOUT_CLASSIFICATION	1.1120933092675621E-6	DEFECT
// if comma is on a line by itself, comment it out but do not insert the line break	WITHOUT_CLASSIFICATION	0.9999949047599328	WITHOUT_CLASSIFICATION	5.095240067192925E-6	DEFECT
// delete variable fragment from old declaration	WITHOUT_CLASSIFICATION	0.9999999378921887	WITHOUT_CLASSIFICATION	6.210781142944166E-8	DEFECT
// do not insert line break if there is only whitespace after comma	WITHOUT_CLASSIFICATION	0.9998991394776602	WITHOUT_CLASSIFICATION	1.0086052233972336E-4	DEFECT
// there is only whitespace after enum constant on the same line - do not add line breaks	WITHOUT_CLASSIFICATION	0.9999233260917298	WITHOUT_CLASSIFICATION	7.667390827010618E-5	DEFECT
//listRewrite.remove((ASTNode)modifier, null);	WITHOUT_CLASSIFICATION	0.9999995387426228	WITHOUT_CLASSIFICATION	4.612573771057865E-7	DEFECT
// add added super interfaces to the array	WITHOUT_CLASSIFICATION	0.9999922080920598	WITHOUT_CLASSIFICATION	7.791907940208708E-6	DEFECT
// this could be method body, for example	WITHOUT_CLASSIFICATION	0.9999528329419245	WITHOUT_CLASSIFICATION	4.716705807542983E-5	DEFECT
// for field declarations use variable declaration fragments instead	WITHOUT_CLASSIFICATION	0.9999999985011463	WITHOUT_CLASSIFICATION	1.498853748339681E-9	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.999999566498676	WITHOUT_CLASSIFICATION	4.33501324019959E-7	DEFECT
// remove all existing modifiers	WITHOUT_CLASSIFICATION	0.9999986719943873	WITHOUT_CLASSIFICATION	1.328005612722835E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999771924757996	WITHOUT_CLASSIFICATION	2.2807524200420796E-5	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999117989124343	WITHOUT_CLASSIFICATION	8.820108756575584E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999771924757996	WITHOUT_CLASSIFICATION	2.2807524200420796E-5	DEFECT
// create new modifiers and add to rewrite	WITHOUT_CLASSIFICATION	0.9999996210299408	WITHOUT_CLASSIFICATION	3.78970059240465E-7	DEFECT
// parse	WITHOUT_CLASSIFICATION	0.9999963246712942	WITHOUT_CLASSIFICATION	3.6753287059034704E-6	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999475503368587	WITHOUT_CLASSIFICATION	5.2449663141414996E-5	DEFECT
// specify the exact parent of annotations	WITHOUT_CLASSIFICATION	0.9999987629000743	WITHOUT_CLASSIFICATION	1.2370999256826264E-6	DEFECT
// set source	WITHOUT_CLASSIFICATION	0.9999997644662632	WITHOUT_CLASSIFICATION	2.355337369287917E-7	DEFECT
// create rewriter to record changes	WITHOUT_CLASSIFICATION	0.9999995617240456	WITHOUT_CLASSIFICATION	4.382759544777167E-7	DEFECT
// keep comments between nodes when removing or moving nodes	WITHOUT_CLASSIFICATION	0.999971945240401	WITHOUT_CLASSIFICATION	2.8054759598941414E-5	DEFECT
// set properties	WITHOUT_CLASSIFICATION	0.9999988125197753	WITHOUT_CLASSIFICATION	1.187480224778422E-6	DEFECT
// create JNode and set properties	WITHOUT_CLASSIFICATION	0.999998602421969	WITHOUT_CLASSIFICATION	1.3975780309200814E-6	DEFECT
// Set of options that we want to copy from the current definition        	WITHOUT_CLASSIFICATION	0.9999994373605634	WITHOUT_CLASSIFICATION	5.626394366138993E-7	DEFECT
// Set of options that we want to control	WITHOUT_CLASSIFICATION	0.9999999151019174	WITHOUT_CLASSIFICATION	8.489808251756767E-8	DEFECT
// separate fields with an empty line	WITHOUT_CLASSIFICATION	0.999999281174646	WITHOUT_CLASSIFICATION	7.188253539256221E-7	DEFECT
// make all enum constants to be on separate lines	WITHOUT_CLASSIFICATION	0.9999980134136665	WITHOUT_CLASSIFICATION	1.9865863335154035E-6	DEFECT
// handle field declarations separately	WITHOUT_CLASSIFICATION	0.9999999328835942	WITHOUT_CLASSIFICATION	6.711640580940108E-8	DEFECT
// create new node and replace it all by original contents	WITHOUT_CLASSIFICATION	0.9999799264508412	WITHOUT_CLASSIFICATION	2.0073549158745214E-5	DEFECT
// set rewriter on the new node	WITHOUT_CLASSIFICATION	0.9999882527706968	WITHOUT_CLASSIFICATION	1.1747229303192773E-5	DEFECT
// if there are multiple variables in the same field declaration, create declaration with only 1 variable	WITHOUT_CLASSIFICATION	0.9999998641682293	WITHOUT_CLASSIFICATION	1.3583177079002361E-7	DEFECT
// rewriter is required for set methods	WITHOUT_CLASSIFICATION	0.9999911529878218	WITHOUT_CLASSIFICATION	8.847012178153885E-6	DEFECT
// set comment and initializer as strings	WITHOUT_CLASSIFICATION	0.9999995788263164	WITHOUT_CLASSIFICATION	4.2117368361615074E-7	DEFECT
// set annotation contents	WITHOUT_CLASSIFICATION	0.9999996971174494	WITHOUT_CLASSIFICATION	3.028825506111262E-7	DEFECT
// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999997594771833	WITHOUT_CLASSIFICATION	2.405228166463986E-7	DEFECT
// get rewriter	WITHOUT_CLASSIFICATION	0.9999973327237831	WITHOUT_CLASSIFICATION	2.667276216941971E-6	DEFECT
// update the wrapped object map	WITHOUT_CLASSIFICATION	0.9999953229969204	WITHOUT_CLASSIFICATION	4.677003079527784E-6	DEFECT
// range to look for comments	WITHOUT_CLASSIFICATION	0.9999993244483385	WITHOUT_CLASSIFICATION	6.755516614989202E-7	DEFECT
// get the end position of the range for the previous node	WITHOUT_CLASSIFICATION	0.9999977081368899	WITHOUT_CLASSIFICATION	2.2918631100652616E-6	DEFECT
//previousNode.getStartPosition() + previousNode.getLength();	WITHOUT_CLASSIFICATION	0.999999907572981	WITHOUT_CLASSIFICATION	9.242701901433789E-8	DEFECT
// if there is an element with end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999963250884423	WITHOUT_CLASSIFICATION	3.6749115578714415E-6	DEFECT
// the previous element must have end position <= rangeEndPos	WITHOUT_CLASSIFICATION	0.9999880803131096	WITHOUT_CLASSIFICATION	1.1919686890425895E-5	DEFECT
// else - there is a comment that ends exactly at rangeEndPos    	WITHOUT_CLASSIFICATION	0.9996382002042533	WITHOUT_CLASSIFICATION	3.6179979574664614E-4	DEFECT
// if there is a comment with start position > rangeStartPos	WITHOUT_CLASSIFICATION	0.9999944636176465	WITHOUT_CLASSIFICATION	5.53638235344528E-6	DEFECT
// else - there is a comment that starts exactly at rangeStartPos	WITHOUT_CLASSIFICATION	0.9999763495617018	WITHOUT_CLASSIFICATION	2.365043829833251E-5	DEFECT
// find start position of farthest preceding comment	WITHOUT_CLASSIFICATION	0.9999940340581368	WITHOUT_CLASSIFICATION	5.965941863191838E-6	DEFECT
// check if there is just whitespace between position and start of the comment	WITHOUT_CLASSIFICATION	0.9999999979849937	WITHOUT_CLASSIFICATION	2.015006272895099E-9	DEFECT
// extend to include the comment at the same line as the position 	WITHOUT_CLASSIFICATION	0.999979277921546	WITHOUT_CLASSIFICATION	2.0722078453960348E-5	DEFECT
// extend range backward	WITHOUT_CLASSIFICATION	0.9999988203003514	WITHOUT_CLASSIFICATION	1.179699648633215E-6	DEFECT
// extend range forward	WITHOUT_CLASSIFICATION	0.9999994315251883	WITHOUT_CLASSIFICATION	5.684748117488368E-7	DEFECT
// add trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999907919734	WITHOUT_CLASSIFICATION	9.20802652432259E-9	DEFECT
// increments the position to add the white spaces	WITHOUT_CLASSIFICATION	0.9999993810451903	WITHOUT_CLASSIFICATION	6.189548096562278E-7	DEFECT
// for all nodes but some use default extended range	WITHOUT_CLASSIFICATION	0.999999566498676	WITHOUT_CLASSIFICATION	4.33501324019959E-7	DEFECT
// include line comments following end of the nodes into the range	WITHOUT_CLASSIFICATION	0.9999996361762422	WITHOUT_CLASSIFICATION	3.6382375782485435E-7	DEFECT
// add leading comments	WITHOUT_CLASSIFICATION	0.9999994774997806	WITHOUT_CLASSIFICATION	5.225002194308611E-7	DEFECT
// add trailing comments if necessary	WITHOUT_CLASSIFICATION	0.9999990252217086	WITHOUT_CLASSIFICATION	9.747782914285308E-7	DEFECT
// insert new declaration before this one	WITHOUT_CLASSIFICATION	0.9999997387918576	WITHOUT_CLASSIFICATION	2.612081423585167E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// append extra dimensions if any	WITHOUT_CLASSIFICATION	0.9999117989124343	WITHOUT_CLASSIFICATION	8.820108756575584E-5	DEFECT
// default implementation does nothing	WITHOUT_CLASSIFICATION	0.9999863163667326	WITHOUT_CLASSIFICATION	1.3683633267386949E-5	DEFECT
// disable commenting out	WITHOUT_CLASSIFICATION	0.9999966293207826	WITHOUT_CLASSIFICATION	3.370679217457434E-6	DEFECT
// enable commenting out	WITHOUT_CLASSIFICATION	0.9999992786646678	WITHOUT_CLASSIFICATION	7.213353322536354E-7	DEFECT
// mark the node as moved if node has been removed      	WITHOUT_CLASSIFICATION	0.9999737010229586	WITHOUT_CLASSIFICATION	2.6298977041327792E-5	DEFECT
// if are dealing with original, not cloned node	WITHOUT_CLASSIFICATION	0.9999997794157327	WITHOUT_CLASSIFICATION	2.2058426741581845E-7	DEFECT
// mark the node to be removed	WITHOUT_CLASSIFICATION	0.9999833896031638	WITHOUT_CLASSIFICATION	1.6610396836117263E-5	DEFECT
// assume that the node is being moved (to allow insertion after)	WITHOUT_CLASSIFICATION	0.9999986046460848	WITHOUT_CLASSIFICATION	1.3953539152278305E-6	DEFECT
// remove the node	WITHOUT_CLASSIFICATION	0.9999964826746692	WITHOUT_CLASSIFICATION	3.517325330694875E-6	DEFECT
// insert new values	WITHOUT_CLASSIFICATION	0.9999998722499869	WITHOUT_CLASSIFICATION	1.2775001321297125E-7	DEFECT
// stringValue not null, nodeValue is null	WITHOUT_CLASSIFICATION	0.9999697640054962	WITHOUT_CLASSIFICATION	3.0235994503728454E-5	DEFECT
// always returns original value	WITHOUT_CLASSIFICATION	0.9999992260112996	WITHOUT_CLASSIFICATION	7.739887002928885E-7	DEFECT
// append extra dimensions since they are not stored in Type object	WITHOUT_CLASSIFICATION	0.9999989375252724	WITHOUT_CLASSIFICATION	1.062474727622682E-6	DEFECT
// create map of field names to fields	WITHOUT_CLASSIFICATION	0.9999872728565785	WITHOUT_CLASSIFICATION	1.2727143421403897E-5	DEFECT
// move all children to the enum, converting some fields to constants	WITHOUT_CLASSIFICATION	0.9999978322549826	WITHOUT_CLASSIFICATION	2.167745017396555E-6	DEFECT
// remove type, insert enum	WITHOUT_CLASSIFICATION	0.9999971460891478	WITHOUT_CLASSIFICATION	2.853910852193004E-6	DEFECT
// convert only public static final fields	WITHOUT_CLASSIFICATION	0.9999998326202817	WITHOUT_CLASSIFICATION	1.673797183876688E-7	DEFECT
// convert only fields of the same type as parent	WITHOUT_CLASSIFICATION	0.9999398991542203	WITHOUT_CLASSIFICATION	6.0100845779634484E-5	DEFECT
// set arguments and body	WITHOUT_CLASSIFICATION	0.999999896585778	WITHOUT_CLASSIFICATION	1.0341422200799896E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999979472219571	WITHOUT_CLASSIFICATION	2.0527780429087633E-6	DEFECT
// unable to set arguments or body	WITHOUT_CLASSIFICATION	0.9999999428777353	WITHOUT_CLASSIFICATION	5.7122264668246816E-8	DEFECT
// update the wrapped object	WITHOUT_CLASSIFICATION	0.9999994210423792	WITHOUT_CLASSIFICATION	5.789576208774272E-7	DEFECT
// move annotations	WITHOUT_CLASSIFICATION	0.9999979472219571	WITHOUT_CLASSIFICATION	2.0527780429087633E-6	DEFECT
// convert enum constants and add to list of converted constants	WITHOUT_CLASSIFICATION	0.9999998015692614	WITHOUT_CLASSIFICATION	1.984307385939251E-7	DEFECT
// move the node	WITHOUT_CLASSIFICATION	0.9999985457548644	WITHOUT_CLASSIFICATION	1.4542451356758384E-6	DEFECT
// insert nodeToInsert after targetNode	WITHOUT_CLASSIFICATION	0.9999999260851681	WITHOUT_CLASSIFICATION	7.391483198839895E-8	DEFECT
// replace type by enum	WITHOUT_CLASSIFICATION	0.9999994174602895	WITHOUT_CLASSIFICATION	5.82539710459858E-7	DEFECT
// create field declaration with 1 variable declaration fragment	WITHOUT_CLASSIFICATION	0.9999999854659462	WITHOUT_CLASSIFICATION	1.453405383499396E-8	DEFECT
// set the type to create	WITHOUT_CLASSIFICATION	0.9999999358545916	WITHOUT_CLASSIFICATION	6.414540842973929E-8	DEFECT
// set arguments	WITHOUT_CLASSIFICATION	0.9999999724431066	WITHOUT_CLASSIFICATION	2.755689340625955E-8	DEFECT
// replace some arguments by another field names (constants)	WITHOUT_CLASSIFICATION	0.9999983866262444	WITHOUT_CLASSIFICATION	1.613373755589589E-6	DEFECT
// update last field that is used	WITHOUT_CLASSIFICATION	0.9999983790950334	WITHOUT_CLASSIFICATION	1.620904966533194E-6	DEFECT
// set the arguments to the constructor	WITHOUT_CLASSIFICATION	0.9999999600041323	WITHOUT_CLASSIFICATION	3.999586778073386E-8	DEFECT
// set the body	WITHOUT_CLASSIFICATION	0.9999974698690117	WITHOUT_CLASSIFICATION	2.5301309882160005E-6	DEFECT
// set the whole initializer	WITHOUT_CLASSIFICATION	0.9999999916408763	WITHOUT_CLASSIFICATION	8.359123666301769E-9	DEFECT
// return the whole declaration contents (not just variableDeclarationFragment)	WITHOUT_CLASSIFICATION	0.9999999997997691	WITHOUT_CLASSIFICATION	2.0023094016920718E-10	DEFECT
// check number of fragments	WITHOUT_CLASSIFICATION	0.9999999875022174	WITHOUT_CLASSIFICATION	1.2497782674177976E-8	DEFECT
// create a copy of declaration	WITHOUT_CLASSIFICATION	0.9999979152298489	WITHOUT_CLASSIFICATION	2.084770151146645E-6	DEFECT
// new declaration will not have fragments until performSplit() is called	WITHOUT_CLASSIFICATION	0.9999907251379734	WITHOUT_CLASSIFICATION	9.274862026645018E-6	DEFECT
// set rewritten node to be the original	WITHOUT_CLASSIFICATION	0.9999900461160591	WITHOUT_CLASSIFICATION	9.953883940866427E-6	DEFECT
// perform split if there is more than 1 fragment	WITHOUT_CLASSIFICATION	0.9999997512517856	WITHOUT_CLASSIFICATION	2.487482143929534E-7	DEFECT
// set javadoc	WITHOUT_CLASSIFICATION	0.9999998262238963	WITHOUT_CLASSIFICATION	1.737761038260851E-7	DEFECT
// set initializer	WITHOUT_CLASSIFICATION	0.9999998806782973	WITHOUT_CLASSIFICATION	1.193217027391617E-7	DEFECT
// set annotations contents	WITHOUT_CLASSIFICATION	0.9999993556206981	WITHOUT_CLASSIFICATION	6.443793019520533E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999879990289519	WITHOUT_CLASSIFICATION	1.200097104802409E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999879990289519	WITHOUT_CLASSIFICATION	1.200097104802409E-5	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999976404256707	WITHOUT_CLASSIFICATION	2.359574329311418E-6	DEFECT
// exception.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994442495614	WITHOUT_CLASSIFICATION	5.557504386251153E-7	DEFECT
// container specification group	WITHOUT_CLASSIFICATION	0.999999316935678	WITHOUT_CLASSIFICATION	6.830643220334978E-7	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999901277502	WITHOUT_CLASSIFICATION	9.872249804248096E-9	DEFECT
// New Template Container Label	WITHOUT_CLASSIFICATION	0.9999999901277502	WITHOUT_CLASSIFICATION	9.872249804248096E-9	DEFECT
// New Template Container Entryfield	WITHOUT_CLASSIFICATION	0.9999999808295245	WITHOUT_CLASSIFICATION	1.9170475569138892E-8	DEFECT
// jetNature.setTemplateContainers(newTemplateContainers);	WITHOUT_CLASSIFICATION	0.9999999963477432	WITHOUT_CLASSIFICATION	3.6522568510824235E-9	DEFECT
// jetNature.setJavaSourceContainer(newJavaSourceContainer);	WITHOUT_CLASSIFICATION	0.9999999893191202	WITHOUT_CLASSIFICATION	1.0680879892008963E-8	DEFECT
// will point at the character after 0 to 3 octal digits	WITHOUT_CLASSIFICATION	0.9999995210762997	WITHOUT_CLASSIFICATION	4.789237002331556E-7	DEFECT
/*   * @since 2.4   */	WITHOUT_CLASSIFICATION	0.9999999562710777	WITHOUT_CLASSIFICATION	4.372892231454043E-8	DEFECT
// the for loop's condition finds the separator 	WITHOUT_CLASSIFICATION	0.999873458657851	WITHOUT_CLASSIFICATION	1.2654134214901133E-4	DEFECT
// Assume that we aren't running.	WITHOUT_CLASSIFICATION	0.999996929184844	WITHOUT_CLASSIFICATION	3.0708151561199774E-6	DEFECT
// Assume that it's not available.	WITHOUT_CLASSIFICATION	0.999996749084812	WITHOUT_CLASSIFICATION	3.250915187967073E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999998522369695	WITHOUT_CLASSIFICATION	1.477630304656068E-7	DEFECT
/*     * Javadoc copied from interface.     */	WITHOUT_CLASSIFICATION	0.9999998522369695	WITHOUT_CLASSIFICATION	1.477630304656068E-7	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999971274108077	WITHOUT_CLASSIFICATION	2.872589192318573E-6	DEFECT
// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999971274108077	WITHOUT_CLASSIFICATION	2.872589192318573E-6	DEFECT
// Trim off the segments corresponding to the package nesting. //	WITHOUT_CLASSIFICATION	0.9999765954357486	WITHOUT_CLASSIFICATION	2.3404564251398025E-5	DEFECT
// For an archive URI, check for the path in the archive. //	WITHOUT_CLASSIFICATION	0.9999998987332708	WITHOUT_CLASSIFICATION	1.0126672919847168E-7	DEFECT
// Just print an error message.	WITHOUT_CLASSIFICATION	0.9999981520572616	WITHOUT_CLASSIFICATION	1.8479427383830924E-6	DEFECT
// Assume the class is not available.	WITHOUT_CLASSIFICATION	0.9999467274827349	WITHOUT_CLASSIFICATION	5.327251726495063E-5	DEFECT
// Just return the default.	WITHOUT_CLASSIFICATION	0.9999999927685228	WITHOUT_CLASSIFICATION	7.2314771823065855E-9	DEFECT
// Ignore the exception and return the original URI.	WITHOUT_CLASSIFICATION	0.9999999825639337	WITHOUT_CLASSIFICATION	1.7436066274009295E-8	DEFECT
// Continue with the unresolved URI.	WITHOUT_CLASSIFICATION	0.9999933707606862	WITHOUT_CLASSIFICATION	6.629239313790668E-6	DEFECT
// Return the original URI.	WITHOUT_CLASSIFICATION	0.9999981718408119	WITHOUT_CLASSIFICATION	1.8281591881468667E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
// If we can open  an input stream, then the path is there, and we have a good URL. //	WITHOUT_CLASSIFICATION	0.9999901155631133	WITHOUT_CLASSIFICATION	9.884436886744537E-6	DEFECT
// If we didn't find the path in the usual place nor in the archive... //	WITHOUT_CLASSIFICATION	0.9999874876325147	WITHOUT_CLASSIFICATION	1.2512367485340682E-5	DEFECT
// Continue processing if the file doesn't exist so that we try create a new empty one.	WITHOUT_CLASSIFICATION	0.999999950157957	WITHOUT_CLASSIFICATION	4.9842043067124914E-8	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999996730220382	WITHOUT_CLASSIFICATION	3.2697796186344807E-7	DEFECT
// This is just a marker interface.	WITHOUT_CLASSIFICATION	0.9999996730220382	WITHOUT_CLASSIFICATION	3.2697796186344807E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999997941074122	WITHOUT_CLASSIFICATION	2.0589258769838185E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999772108891	WITHOUT_CLASSIFICATION	2.278911089100672E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999772108891	WITHOUT_CLASSIFICATION	2.278911089100672E-8	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999997941074122	WITHOUT_CLASSIFICATION	2.0589258769838185E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
// Create a title bar.	WITHOUT_CLASSIFICATION	0.9999996483539966	WITHOUT_CLASSIFICATION	3.5164600340709495E-7	DEFECT
// When the pane or any child gains focus, notify the workbench.	WITHOUT_CLASSIFICATION	0.9998031407623269	WITHOUT_CLASSIFICATION	1.9685923767312976E-4	DEFECT
// Only do this once.	WITHOUT_CLASSIFICATION	0.9999984808578006	WITHOUT_CLASSIFICATION	1.5191421993928345E-6	DEFECT
// Title.  	WITHOUT_CLASSIFICATION	0.9999845619372633	WITHOUT_CLASSIFICATION	1.5438062736723965E-5	DEFECT
// Action bar.	WITHOUT_CLASSIFICATION	0.999969125982244	WITHOUT_CLASSIFICATION	3.0874017755957454E-5	DEFECT
// System bar.  	WITHOUT_CLASSIFICATION	0.9999978045071536	WITHOUT_CLASSIFICATION	2.1954928464912152E-6	DEFECT
// Define gradient (blue to widget background color)	WITHOUT_CLASSIFICATION	0.9999993005316709	WITHOUT_CLASSIFICATION	6.994683291815105E-7	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999987875225975	WITHOUT_CLASSIFICATION	1.2124774024236757E-6	DEFECT
// colorMap.put(CLR_GRAD_START, clr1);	WITHOUT_CLASSIFICATION	0.9999987875225975	WITHOUT_CLASSIFICATION	1.2124774024236757E-6	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999985438882748	WITHOUT_CLASSIFICATION	1.4561117252188585E-6	DEFECT
// Preload.	WITHOUT_CLASSIFICATION	0.9999985438882748	WITHOUT_CLASSIFICATION	1.4561117252188585E-6	DEFECT
// was the details button pressed?	WITHOUT_CLASSIFICATION	0.9999975485682304	WITHOUT_CLASSIFICATION	2.451431769655713E-6	DEFECT
// create OK and Details buttons	WITHOUT_CLASSIFICATION	0.9999986552223231	WITHOUT_CLASSIFICATION	1.3447776768897212E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999956197660128	WITHOUT_CLASSIFICATION	4.380233987184647E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999956197660128	WITHOUT_CLASSIFICATION	4.380233987184647E-6	DEFECT
// Empty block	WITHOUT_CLASSIFICATION	0.9999956197660128	WITHOUT_CLASSIFICATION	4.380233987184647E-6	DEFECT
// create a composite with standard margins and spacing	WITHOUT_CLASSIFICATION	0.999997780916848	WITHOUT_CLASSIFICATION	2.219083151979653E-6	DEFECT
//Create a label if there are no children to force a smaller layout	WITHOUT_CLASSIFICATION	0.9999989010151834	WITHOUT_CLASSIFICATION	1.098984816576212E-6	DEFECT
//If it was not a warning or an diagnostic then return the diagnostic image	WITHOUT_CLASSIFICATION	0.9999995108311589	WITHOUT_CLASSIFICATION	4.891688410477982E-7	DEFECT
// Closing the detail area	WITHOUT_CLASSIFICATION	0.9999999444393874	WITHOUT_CLASSIFICATION	5.55606125583784E-8	DEFECT
// Opening the detail area	WITHOUT_CLASSIFICATION	0.9999999215451424	WITHOUT_CLASSIFICATION	7.845485769222179E-8	DEFECT
//Only one example per wizard	WITHOUT_CLASSIFICATION	0.999859156023283	WITHOUT_CLASSIFICATION	1.408439767170451E-4	DEFECT
// null -> relative URI reference	WITHOUT_CLASSIFICATION	0.9999999522622941	WITHOUT_CLASSIFICATION	4.77377059118164E-8	DEFECT
// Applicable only to a hierarchical URI.	WITHOUT_CLASSIFICATION	0.999996888076611	WITHOUT_CLASSIFICATION	3.111923388926304E-6	DEFECT
// empty last segment -> trailing separator	WITHOUT_CLASSIFICATION	0.9999997608418267	WITHOUT_CLASSIFICATION	2.3915817326758006E-7	DEFECT
// Identifies a file-type absolute URI.	WITHOUT_CLASSIFICATION	0.9999996792665966	WITHOUT_CLASSIFICATION	3.207334033702142E-7	DEFECT
// Separators for parsing a URI string.	WITHOUT_CLASSIFICATION	0.9999962492647207	WITHOUT_CLASSIFICATION	3.7507352792436114E-6	DEFECT
// Characters to use in escaping.	WITHOUT_CLASSIFICATION	0.9999997976866283	WITHOUT_CLASSIFICATION	2.023133716600469E-7	DEFECT
// | ucschar | escaped	WITHOUT_CLASSIFICATION	0.9999999778359069	WITHOUT_CLASSIFICATION	2.216409307902903E-8	DEFECT
// Static initializer for archiveSchemes.	WITHOUT_CLASSIFICATION	0.9999999953238494	WITHOUT_CLASSIFICATION	4.676150578893423E-9	DEFECT
// Returns the lower half bitmask for the given ASCII character.	WITHOUT_CLASSIFICATION	0.9999996987184723	WITHOUT_CLASSIFICATION	3.0128152780037127E-7	DEFECT
// Returns the upper half bitmask for the given ACSII character.	WITHOUT_CLASSIFICATION	0.9999981988287574	WITHOUT_CLASSIFICATION	1.801171242667714E-6	DEFECT
// Debugging method: converts the given long to a string of binary digits.	WITHOUT_CLASSIFICATION	0.9999882826034654	WITHOUT_CLASSIFICATION	1.1717396534627313E-5	DEFECT
// String-parsing implementation.	WITHOUT_CLASSIFICATION	0.9999400034830862	WITHOUT_CLASSIFICATION	5.999651691376494E-5	DEFECT
// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)	WITHOUT_CLASSIFICATION	0.9999999680183408	WITHOUT_CLASSIFICATION	3.198165929714112E-8	DEFECT
// Private constructor for use of platform factory methods.	WITHOUT_CLASSIFICATION	0.9999999995527455	WITHOUT_CLASSIFICATION	4.4725439678099375E-10	DEFECT
// Private constructor for use of static factory methods.	WITHOUT_CLASSIFICATION	0.9999999981134087	WITHOUT_CLASSIFICATION	1.8865912230511064E-9	DEFECT
//iri = iri || containsNonASCII(authority);	WITHOUT_CLASSIFICATION	0.9999973210869422	WITHOUT_CLASSIFICATION	2.678913057856632E-6	DEFECT
//iri = iri || containsNonASCII(device);	WITHOUT_CLASSIFICATION	0.9999977608842597	WITHOUT_CLASSIFICATION	2.2391157401727856E-6	DEFECT
//iri = iri || containsNonASCII(query);	WITHOUT_CLASSIFICATION	0.999998441772199	WITHOUT_CLASSIFICATION	1.5582278010487587E-6	DEFECT
//iri = iri || containsNonASCII(fragment);	WITHOUT_CLASSIFICATION	0.999998867471229	WITHOUT_CLASSIFICATION	1.1325287709767405E-6	DEFECT
//this.iri = iri;	WITHOUT_CLASSIFICATION	0.9999984505215695	WITHOUT_CLASSIFICATION	1.5494784304621342E-6	DEFECT
//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999998543801096	WITHOUT_CLASSIFICATION	1.456198903603849E-7	DEFECT
// Ignore the exception and return false.	WITHOUT_CLASSIFICATION	0.9999999928537932	WITHOUT_CLASSIFICATION	7.146206917101659E-9	DEFECT
//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999995844332611	WITHOUT_CLASSIFICATION	4.155667389240793E-7	DEFECT
//return value == null || validate(value, URIC_HI, URIC_LO, true, true);	WITHOUT_CLASSIFICATION	0.9999998697063045	WITHOUT_CLASSIFICATION	1.3029369543542988E-7	DEFECT
// <p>A valid fragment may be null or contain any allowed URI characters.	WITHOUT_CLASSIFICATION	0.9999999930391629	WITHOUT_CLASSIFICATION	6.960837104697385E-9	DEFECT
// note: hierarchical -> authority != null	WITHOUT_CLASSIFICATION	0.9999820510172179	WITHOUT_CLASSIFICATION	1.7948982782015265E-5	DEFECT
// note: device != null -> hierarchical	WITHOUT_CLASSIFICATION	0.999991918815206	WITHOUT_CLASSIFICATION	8.08118479395578E-6	DEFECT
// note: absolutePath -> hierarchical	WITHOUT_CLASSIFICATION	0.9999985838443994	WITHOUT_CLASSIFICATION	1.4161556006135885E-6	DEFECT
// note: query != null -> hierarchical	WITHOUT_CLASSIFICATION	0.9999725474877287	WITHOUT_CLASSIFICATION	2.7452512271248757E-5	DEFECT
// an absolute URI needs no resolving	WITHOUT_CLASSIFICATION	0.9999999250967843	WITHOUT_CLASSIFICATION	7.490321580426736E-8	DEFECT
// note: isRelative() -> hierarchical	WITHOUT_CLASSIFICATION	0.999993994908907	WITHOUT_CLASSIFICATION	6.005091093046248E-6	DEFECT
// no authority: use base's	WITHOUT_CLASSIFICATION	0.9999998097772894	WITHOUT_CLASSIFICATION	1.9022271047814002E-7	DEFECT
// no device: use base's	WITHOUT_CLASSIFICATION	0.9999999049578578	WITHOUT_CLASSIFICATION	9.504214209176035E-8	DEFECT
// else keep device, path, and query	WITHOUT_CLASSIFICATION	0.9999999840575946	WITHOUT_CLASSIFICATION	1.5942405393230815E-8	DEFECT
// else absolute path: keep it and query	WITHOUT_CLASSIFICATION	0.9999967112855865	WITHOUT_CLASSIFICATION	3.2887144135624286E-6	DEFECT
// else keep authority, device, path, and query	WITHOUT_CLASSIFICATION	0.9999999695670015	WITHOUT_CLASSIFICATION	3.043299846523005E-8	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.999975087172743	WITHOUT_CLASSIFICATION	2.4912827256950606E-5	DEFECT
// skip empty segments and self references; push everything else	WITHOUT_CLASSIFICATION	0.9999999965965264	WITHOUT_CLASSIFICATION	3.4034735451944524E-9	DEFECT
// different scheme: need complete, absolute URI	WITHOUT_CLASSIFICATION	0.999995403070801	WITHOUT_CLASSIFICATION	4.5969291988809755E-6	DEFECT
// matching authorities and no device or path removal	WITHOUT_CLASSIFICATION	0.9999989400883261	WITHOUT_CLASSIFICATION	1.0599116738646782E-6	DEFECT
// matching devices and no path removal	WITHOUT_CLASSIFICATION	0.9999991014487309	WITHOUT_CLASSIFICATION	8.985512691544057E-7	DEFECT
// user rejects a relative path: keep absolute or no path	WITHOUT_CLASSIFICATION	0.9999995207847244	WITHOUT_CLASSIFICATION	4.79215275633878E-7	DEFECT
// current document reference: keep no path or query	WITHOUT_CLASSIFICATION	0.9999975773558765	WITHOUT_CLASSIFICATION	2.4226441235594784E-6	DEFECT
// no paths: keep query only	WITHOUT_CLASSIFICATION	0.9999975549664502	WITHOUT_CLASSIFICATION	2.4450335499017516E-6	DEFECT
// keep query and select relative or absolute path based on length	WITHOUT_CLASSIFICATION	0.9999937406530681	WITHOUT_CLASSIFICATION	6.259346931869242E-6	DEFECT
// user demands a relative path or the absolute path is longer	WITHOUT_CLASSIFICATION	0.9999989035613217	WITHOUT_CLASSIFICATION	1.0964386782897671E-6	DEFECT
// else keep shorter absolute path	WITHOUT_CLASSIFICATION	0.9999999671912772	WITHOUT_CLASSIFICATION	3.280872286063252E-8	DEFECT
// treat an empty base path as the root absolute path	WITHOUT_CLASSIFICATION	0.9999976462863451	WITHOUT_CLASSIFICATION	2.3537136548175217E-6	DEFECT
// drop last segment from base, as in resolving	WITHOUT_CLASSIFICATION	0.9999952836797265	WITHOUT_CLASSIFICATION	4.7163202735385895E-6	DEFECT
// index of first segment that is different between endPath and startPath	WITHOUT_CLASSIFICATION	0.9999091142229773	WITHOUT_CLASSIFICATION	9.088577702267592E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.999975087172743	WITHOUT_CLASSIFICATION	2.4912827256950606E-5	DEFECT
// return a correctly sized result	WITHOUT_CLASSIFICATION	0.999975087172743	WITHOUT_CLASSIFICATION	2.4912827256950606E-5	DEFECT
// Empty statement.	WITHOUT_CLASSIFICATION	0.9999993677207466	WITHOUT_CLASSIFICATION	6.322792533758713E-7	DEFECT
// use a stack to accumulate segments	WITHOUT_CLASSIFICATION	0.9999969871518363	WITHOUT_CLASSIFICATION	3.0128481637256045E-6	DEFECT
// absolute path or no path -> absolute path	WITHOUT_CLASSIFICATION	0.9999999624385747	WITHOUT_CLASSIFICATION	3.756142527174846E-8	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999979428839646	WITHOUT_CLASSIFICATION	2.0571160353788143E-6	DEFECT
// note: segments.length > 0 -> hierarchical	WITHOUT_CLASSIFICATION	0.9999979428839646	WITHOUT_CLASSIFICATION	2.0571160353788143E-6	DEFECT
// Get what's left of the segments after trimming the prefix.	WITHOUT_CLASSIFICATION	0.9999999830878624	WITHOUT_CLASSIFICATION	1.691213760928605E-8	DEFECT
// no validation needed since all components are from existing URIs	WITHOUT_CLASSIFICATION	0.9999998697074299	WITHOUT_CLASSIFICATION	1.302925700230837E-7	DEFECT
// Otherwise, the path needs only the remaining segments.	WITHOUT_CLASSIFICATION	0.9999997264689956	WITHOUT_CLASSIFICATION	2.735310043927687E-7	DEFECT
// Returns the int value of the given hex digit.	WITHOUT_CLASSIFICATION	0.9997382477181692	WITHOUT_CLASSIFICATION	2.617522818307396E-4	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999941230906186	WITHOUT_CLASSIFICATION	5.876909381303736E-6	DEFECT
/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */	WITHOUT_CLASSIFICATION	0.99999999786965	WITHOUT_CLASSIFICATION	2.1303500252104887E-9	DEFECT
// Continue with the established base URL.	WITHOUT_CLASSIFICATION	0.9999999311391096	WITHOUT_CLASSIFICATION	6.886089037328086E-8	DEFECT
// Ignore the exception since we will throw one when all else fails.	WITHOUT_CLASSIFICATION	0.9999996541389762	WITHOUT_CLASSIFICATION	3.458610238381735E-7	DEFECT
// We'll rethrow the original exception, not this one.	WITHOUT_CLASSIFICATION	0.9998966473653476	WITHOUT_CLASSIFICATION	1.033526346524804E-4	DEFECT
// Ignore this since we will throw an exception when all else fails.	WITHOUT_CLASSIFICATION	0.9999916080279997	WITHOUT_CLASSIFICATION	8.391972000304744E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from source.   */	WITHOUT_CLASSIFICATION	0.9999999619202705	WITHOUT_CLASSIFICATION	3.807972946413093E-8	DEFECT
// Suppress default constructor for noninstantiability.	WITHOUT_CLASSIFICATION	0.9999999859353089	WITHOUT_CLASSIFICATION	1.406469114867885E-8	DEFECT
// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999941230906186	WITHOUT_CLASSIFICATION	5.876909381303736E-6	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998522369695	WITHOUT_CLASSIFICATION	1.477630304656068E-7	DEFECT
/*    * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.9999998522369695	WITHOUT_CLASSIFICATION	1.477630304656068E-7	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
//EParameter	WITHOUT_CLASSIFICATION	0.9999982195514082	WITHOUT_CLASSIFICATION	1.780448591830295E-6	DEFECT
// Subclasses may overrride 	WITHOUT_CLASSIFICATION	0.9999959261632645	WITHOUT_CLASSIFICATION	4.073836735520437E-6	DEFECT
// WizardContainer variables	WITHOUT_CLASSIFICATION	0.9999999820965007	WITHOUT_CLASSIFICATION	1.7903499292424283E-8	DEFECT
// Sorting only the genModels	WITHOUT_CLASSIFICATION	0.9999915105363858	WITHOUT_CLASSIFICATION	8.489463614183307E-6	DEFECT
//EOperation	WITHOUT_CLASSIFICATION	0.9999952498733502	WITHOUT_CLASSIFICATION	4.750126649765738E-6	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999989348546415	WITHOUT_CLASSIFICATION	1.0651453584324243E-6	DEFECT
// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList	WITHOUT_CLASSIFICATION	0.9999989348546415	WITHOUT_CLASSIFICATION	1.0651453584324243E-6	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999834524561829	WITHOUT_CLASSIFICATION	1.6547543816968422E-5	DEFECT
//ETypedElement	WITHOUT_CLASSIFICATION	0.9999764397222908	WITHOUT_CLASSIFICATION	2.3560277709173557E-5	DEFECT
// ETypeParameter	WITHOUT_CLASSIFICATION	0.9999996772133055	WITHOUT_CLASSIFICATION	3.227866944979547E-7	DEFECT
//EDataType	WITHOUT_CLASSIFICATION	0.9999891613864483	WITHOUT_CLASSIFICATION	1.0838613551627148E-5	DEFECT
//EcoreFactory	WITHOUT_CLASSIFICATION	0.9999721241457388	WITHOUT_CLASSIFICATION	2.787585426132535E-5	DEFECT
// EAnnotation	WITHOUT_CLASSIFICATION	0.9999399487540643	WITHOUT_CLASSIFICATION	6.0051245935588766E-5	DEFECT
// EGenericType	WITHOUT_CLASSIFICATION	0.9999947006585126	WITHOUT_CLASSIFICATION	5.299341487408594E-6	DEFECT
//EcorePackage	WITHOUT_CLASSIFICATION	0.999983873804632	WITHOUT_CLASSIFICATION	1.6126195368014505E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999660903053	WITHOUT_CLASSIFICATION	3.3909694784460406E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998762952466	WITHOUT_CLASSIFICATION	1.237047533777149E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999992245098178	WITHOUT_CLASSIFICATION	7.75490182166597E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999829356381	WITHOUT_CLASSIFICATION	1.7064361898045296E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999849400648185	WITHOUT_CLASSIFICATION	1.5059935181373625E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996138216523	WITHOUT_CLASSIFICATION	3.861783478063688E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.99999955321197	WITHOUT_CLASSIFICATION	4.4678802994924626E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998949513081	WITHOUT_CLASSIFICATION	1.0504869187685939E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999999973885357	WITHOUT_CLASSIFICATION	2.611464303361549E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995751368276	WITHOUT_CLASSIFICATION	4.2486317237552965E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999966882499354	WITHOUT_CLASSIFICATION	3.31175006461721E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999987446375067	WITHOUT_CLASSIFICATION	1.2553624931933802E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999989995496296	WITHOUT_CLASSIFICATION	1.0004503704205164E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998595120936	WITHOUT_CLASSIFICATION	1.404879063273303E-7	DEFECT
// ListChange	WITHOUT_CLASSIFICATION	0.9999999495177901	WITHOUT_CLASSIFICATION	5.04822097667826E-8	DEFECT
// FeatureMapEntry	WITHOUT_CLASSIFICATION	0.9999996918638357	WITHOUT_CLASSIFICATION	3.081361641896314E-7	DEFECT
// FeatureChange	WITHOUT_CLASSIFICATION	0.9999999294709717	WITHOUT_CLASSIFICATION	7.052902829035821E-8	DEFECT
// ChangeDescription	WITHOUT_CLASSIFICATION	0.999999353457041	WITHOUT_CLASSIFICATION	6.465429589890174E-7	DEFECT
//ChangeFactory	WITHOUT_CLASSIFICATION	0.9999971402725274	WITHOUT_CLASSIFICATION	2.859727472615462E-6	DEFECT
//ChangePackage	WITHOUT_CLASSIFICATION	0.9999988290241257	WITHOUT_CLASSIFICATION	1.170975874301345E-6	DEFECT
// ResourceChange	WITHOUT_CLASSIFICATION	0.9999997974464566	WITHOUT_CLASSIFICATION	2.0255354340871284E-7	DEFECT
//ChangePackageImpl	WITHOUT_CLASSIFICATION	0.9999980378317272	WITHOUT_CLASSIFICATION	1.962168272703255E-6	DEFECT
//EObjectToChangesMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999998492135126	WITHOUT_CLASSIFICATION	1.507864873292146E-7	DEFECT
//ListChangeImpl	WITHOUT_CLASSIFICATION	0.9999990806344768	WITHOUT_CLASSIFICATION	9.193655231660912E-7	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999985809201708	WITHOUT_CLASSIFICATION	1.419079829262743E-6	DEFECT
// cache result	WITHOUT_CLASSIFICATION	0.9999985809201708	WITHOUT_CLASSIFICATION	1.419079829262743E-6	DEFECT
//ResourceChangeImpl	WITHOUT_CLASSIFICATION	0.9999994819313112	WITHOUT_CLASSIFICATION	5.180686888045323E-7	DEFECT
// feature is instance of EAttribute	WITHOUT_CLASSIFICATION	0.9999995625336391	WITHOUT_CLASSIFICATION	4.3746636079666185E-7	DEFECT
// cached already?	WITHOUT_CLASSIFICATION	0.9999989899091071	WITHOUT_CLASSIFICATION	1.010090892918505E-6	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.999999186885685	WITHOUT_CLASSIFICATION	8.131143149437567E-7	DEFECT
//FeatureChangeImpl	WITHOUT_CLASSIFICATION	0.999999186885685	WITHOUT_CLASSIFICATION	8.131143149437567E-7	DEFECT
// Isolating the new objects	WITHOUT_CLASSIFICATION	0.9999994624444699	WITHOUT_CLASSIFICATION	5.375555300880791E-7	DEFECT
// getObjectsToDetachGen() should be changed only if required	WITHOUT_CLASSIFICATION	0.9999522520907711	WITHOUT_CLASSIFICATION	4.774790922894784E-5	DEFECT
// caches the list value.	WITHOUT_CLASSIFICATION	0.9999999044733422	WITHOUT_CLASSIFICATION	9.552665782149999E-8	DEFECT
//ChangeDescriptionImpl	WITHOUT_CLASSIFICATION	0.9999976293881444	WITHOUT_CLASSIFICATION	2.3706118554734763E-6	DEFECT
//ChangeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999976139971009	WITHOUT_CLASSIFICATION	2.386002899106306E-6	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999829356381	WITHOUT_CLASSIFICATION	1.7064361898045296E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999997607084252	WITHOUT_CLASSIFICATION	2.392915746706051E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996138216523	WITHOUT_CLASSIFICATION	3.861783478063688E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998949513081	WITHOUT_CLASSIFICATION	1.0504869187685939E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999966882499354	WITHOUT_CLASSIFICATION	3.31175006461721E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999987446375067	WITHOUT_CLASSIFICATION	1.2553624931933802E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999995278526853	WITHOUT_CLASSIFICATION	4.721473147652249E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998595120936	WITHOUT_CLASSIFICATION	1.404879063273303E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999665047659	WITHOUT_CLASSIFICATION	3.349523404823831E-8	DEFECT
/*   * @deprecated   */	WITHOUT_CLASSIFICATION	0.9999999772108891	WITHOUT_CLASSIFICATION	2.278911089100672E-8	DEFECT
//ChangeSwitch	WITHOUT_CLASSIFICATION	0.9999972985679403	WITHOUT_CLASSIFICATION	2.7014320596416334E-6	DEFECT
//ChangeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999976895679127	WITHOUT_CLASSIFICATION	2.3104320873726127E-6	DEFECT
// Make sure that all the old values are cached.	WITHOUT_CLASSIFICATION	0.9999997053497003	WITHOUT_CLASSIFICATION	2.946502997100539E-7	DEFECT
//case Notification.REMOVE:	WITHOUT_CLASSIFICATION	0.9999987357449058	WITHOUT_CLASSIFICATION	1.2642550942057295E-6	DEFECT
//case Notification.REMOVE_MANY:	WITHOUT_CLASSIFICATION	0.9999981681174415	WITHOUT_CLASSIFICATION	1.8318825585366426E-6	DEFECT
// Continue with no instanceClass. 	WITHOUT_CLASSIFICATION	0.99999955090148	WITHOUT_CLASSIFICATION	4.4909852005373195E-7	DEFECT
//EGenericTypeImpl	WITHOUT_CLASSIFICATION	0.9999561090734572	WITHOUT_CLASSIFICATION	4.3890926542750254E-5	DEFECT
//EParameterImpl	WITHOUT_CLASSIFICATION	0.9999967859782358	WITHOUT_CLASSIFICATION	3.2140217642273197E-6	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999992140582608	WITHOUT_CLASSIFICATION	7.859417393441835E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999995530390813	WITHOUT_CLASSIFICATION	4.469609187131973E-7	DEFECT
//return eContainer;	WITHOUT_CLASSIFICATION	0.999999898368204	WITHOUT_CLASSIFICATION	1.0163179609535497E-7	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
//ETypeParameterImpl	WITHOUT_CLASSIFICATION	0.9999961861536273	WITHOUT_CLASSIFICATION	3.8138463728036508E-6	DEFECT
//EStringToStringMapEntryImpl	WITHOUT_CLASSIFICATION	0.9999945560686823	WITHOUT_CLASSIFICATION	5.44393131769749E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999805281708437	WITHOUT_CLASSIFICATION	1.947182915634997E-5	DEFECT
// create containment one.	WITHOUT_CLASSIFICATION	0.9999998568478519	WITHOUT_CLASSIFICATION	1.431521482309352E-7	DEFECT
//getList(entry).clear();	WITHOUT_CLASSIFICATION	0.9999988222285402	WITHOUT_CLASSIFICATION	1.177771459829515E-6	DEFECT
//ETypedElementImpl	WITHOUT_CLASSIFICATION	0.9999728217053407	WITHOUT_CLASSIFICATION	2.7178294659282993E-5	DEFECT
// Keep trying until all else has failed.	WITHOUT_CLASSIFICATION	0.9999996792033548	WITHOUT_CLASSIFICATION	3.2079664531354213E-7	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999872381855319	WITHOUT_CLASSIFICATION	1.2761814468082196E-5	DEFECT
// Continue to try a different approach.	WITHOUT_CLASSIFICATION	0.9999872381855319	WITHOUT_CLASSIFICATION	1.2761814468082196E-5	DEFECT
// Keep trying until all else false.	WITHOUT_CLASSIFICATION	0.9999999507216842	WITHOUT_CLASSIFICATION	4.9278315804392466E-8	DEFECT
//EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999767417890874	WITHOUT_CLASSIFICATION	2.325821091262246E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999979900218892	WITHOUT_CLASSIFICATION	2.009978110903975E-6	DEFECT
/* backward compatibility with old generated overrides */	WITHOUT_CLASSIFICATION	0.9999979900218892	WITHOUT_CLASSIFICATION	2.009978110903975E-6	DEFECT
// Subclasses MUST override this function	WITHOUT_CLASSIFICATION	0.9999998013871174	WITHOUT_CLASSIFICATION	1.986128826241004E-7	DEFECT
// return eVirtualIndexBits[offset];	WITHOUT_CLASSIFICATION	0.9999982882629375	WITHOUT_CLASSIFICATION	1.7117370625615945E-6	DEFECT
// eVirtualIndexBits[offset] = newIndexBits;	WITHOUT_CLASSIFICATION	0.9999977895992276	WITHOUT_CLASSIFICATION	2.210400772409511E-6	DEFECT
// Continue to compute the offset.	WITHOUT_CLASSIFICATION	0.9999998997338784	WITHOUT_CLASSIFICATION	1.0026612163901281E-7	DEFECT
// return eVirtualValues;	WITHOUT_CLASSIFICATION	0.9999999768844292	WITHOUT_CLASSIFICATION	2.3115570803486026E-8	DEFECT
// eVirtualValues = newValues;	WITHOUT_CLASSIFICATION	0.999999904598068	WITHOUT_CLASSIFICATION	9.540193191202283E-8	DEFECT
// return minimumCapacity;	WITHOUT_CLASSIFICATION	0.9999999723558831	WITHOUT_CLASSIFICATION	2.7644116926603616E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999091877145	WITHOUT_CLASSIFICATION	9.081228539665269E-8	DEFECT
// Continue and return null.	WITHOUT_CLASSIFICATION	0.9999996937562841	WITHOUT_CLASSIFICATION	3.062437160151342E-7	DEFECT
// Ensure that cached ePackage is forgotten.	WITHOUT_CLASSIFICATION	0.9999996301984443	WITHOUT_CLASSIFICATION	3.698015557118185E-7	DEFECT
//EAnnotationImpl	WITHOUT_CLASSIFICATION	0.9998061185070202	WITHOUT_CLASSIFICATION	1.9388149297983417E-4	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Don't really unset it.	WITHOUT_CLASSIFICATION	0.9999805281708437	WITHOUT_CLASSIFICATION	1.947182915634997E-5	DEFECT
// Force this to be initialized as well.	WITHOUT_CLASSIFICATION	0.999999961114463	WITHOUT_CLASSIFICATION	3.8885536931267356E-8	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998726400184522	WITHOUT_CLASSIFICATION	1.2735998154775278E-4	DEFECT
// (	WITHOUT_CLASSIFICATION	0.9999866167120572	WITHOUT_CLASSIFICATION	1.3383287942811873E-5	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999803960591	WITHOUT_CLASSIFICATION	1.9603940954634913E-8	DEFECT
// all implementations of Java 1.5 should support AES	WITHOUT_CLASSIFICATION	0.9995385585308489	WITHOUT_CLASSIFICATION	4.614414691509604E-4	DEFECT
// generate the key	WITHOUT_CLASSIFICATION	0.9999993930868152	WITHOUT_CLASSIFICATION	6.069131848570898E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
// Continue and try to close.	WITHOUT_CLASSIFICATION	0.9999999723586809	WITHOUT_CLASSIFICATION	2.764131911903924E-8	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999987270230744	WITHOUT_CLASSIFICATION	1.2729769256078846E-5	DEFECT
// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999987270230744	WITHOUT_CLASSIFICATION	1.2729769256078846E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// ...	WITHOUT_CLASSIFICATION	0.9998747889145898	WITHOUT_CLASSIFICATION	1.252110854101801E-4	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
/*   * Javadoc copied from interface.   */	WITHOUT_CLASSIFICATION	0.999999835992122	WITHOUT_CLASSIFICATION	1.6400787806138128E-7	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999091877145	WITHOUT_CLASSIFICATION	9.081228539665269E-8	DEFECT
// Ignore exceptions.	WITHOUT_CLASSIFICATION	0.9999999091877145	WITHOUT_CLASSIFICATION	9.081228539665269E-8	DEFECT
// encrypt the input	WITHOUT_CLASSIFICATION	0.9999972645894024	WITHOUT_CLASSIFICATION	2.735410597543458E-6	DEFECT
// this is the key we will use to encrypt the data 	WITHOUT_CLASSIFICATION	0.9996882095438642	WITHOUT_CLASSIFICATION	3.117904561358291E-4	DEFECT
// create the IV for the password generation algorithm	WITHOUT_CLASSIFICATION	0.9999900126983503	WITHOUT_CLASSIFICATION	9.987301649716877E-6	DEFECT
// generate the IV for encryption	WITHOUT_CLASSIFICATION	0.9999936730193969	WITHOUT_CLASSIFICATION	6.326980603011923E-6	DEFECT
// turn the password into an AES key	WITHOUT_CLASSIFICATION	0.9999974907510639	WITHOUT_CLASSIFICATION	2.5092489360252455E-6	DEFECT
// now create the encryption cipher 	WITHOUT_CLASSIFICATION	0.999994638320135	WITHOUT_CLASSIFICATION	5.361679864951234E-6	DEFECT
// Read the header of the encrypted file.	WITHOUT_CLASSIFICATION	0.9999072151124102	WITHOUT_CLASSIFICATION	9.278488758980425E-5	DEFECT
// Decrypt the key bytes	WITHOUT_CLASSIFICATION	0.9999999362453061	WITHOUT_CLASSIFICATION	6.375469390053736E-8	DEFECT
// Create the key from the key bytes	WITHOUT_CLASSIFICATION	0.9999999326422255	WITHOUT_CLASSIFICATION	6.735777445727623E-8	DEFECT
// If we haven't yet generated a key, just use this one	WITHOUT_CLASSIFICATION	0.9999997617093525	WITHOUT_CLASSIFICATION	2.3829064752366487E-7	DEFECT
// now create the decrypt cipher	WITHOUT_CLASSIFICATION	0.9999999112458152	WITHOUT_CLASSIFICATION	8.87541847469323E-8	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999871742045983	WITHOUT_CLASSIFICATION	1.2825795401819789E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999871742045983	WITHOUT_CLASSIFICATION	1.2825795401819789E-5	DEFECT
// No methods added.	WITHOUT_CLASSIFICATION	0.9999999753684391	WITHOUT_CLASSIFICATION	2.4631560827995154E-8	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999917327472958	WITHOUT_CLASSIFICATION	8.267252704130796E-6	DEFECT
// ECLIPSE-DEPEND-BEGIN	WITHOUT_CLASSIFICATION	0.9999917327472958	WITHOUT_CLASSIFICATION	8.267252704130796E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.999994742480648	WITHOUT_CLASSIFICATION	5.257519352025278E-6	DEFECT
// ECLIPSE-DEPEND-END	WITHOUT_CLASSIFICATION	0.999994742480648	WITHOUT_CLASSIFICATION	5.257519352025278E-6	DEFECT
// We can't update any properties via just a URL connection.	WITHOUT_CLASSIFICATION	0.9999940150883249	WITHOUT_CLASSIFICATION	5.98491167505387E-6	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999526998887	WITHOUT_CLASSIFICATION	4.730011137563056E-8	DEFECT
// Ignore the bound if the value is too big.	WITHOUT_CLASSIFICATION	0.9999999526998887	WITHOUT_CLASSIFICATION	4.730011137563056E-8	DEFECT
// Ignore features from the first super type. //	WITHOUT_CLASSIFICATION	0.9999998893392086	WITHOUT_CLASSIFICATION	1.1066079138161263E-7	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999996755563432	WITHOUT_CLASSIFICATION	3.244436568619935E-7	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999994087141351	WITHOUT_CLASSIFICATION	5.9128586490278276E-6	DEFECT
// The CipherOutputStream shoudln't close the underlying stream //	WITHOUT_CLASSIFICATION	0.9999990487234903	WITHOUT_CLASSIFICATION	9.512765097954216E-7	DEFECT
// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);	WITHOUT_CLASSIFICATION	0.9999999799645395	WITHOUT_CLASSIFICATION	2.0035460477551258E-8	DEFECT
// Ensure that the class loader for this class will be used downstream. //	WITHOUT_CLASSIFICATION	0.9999806558538715	WITHOUT_CLASSIFICATION	1.9344146128475873E-5	DEFECT
// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //	WITHOUT_CLASSIFICATION	0.9994208720182608	WITHOUT_CLASSIFICATION	5.791279817391797E-4	DEFECT
//EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999475727459717	WITHOUT_CLASSIFICATION	5.24272540283568E-5	DEFECT
// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //	WITHOUT_CLASSIFICATION	0.999996803124559	WITHOUT_CLASSIFICATION	3.1968754411103786E-6	DEFECT
// For performance, skip matching all the features of the first super type. //	WITHOUT_CLASSIFICATION	0.9999998884133805	WITHOUT_CLASSIFICATION	1.1158661950553395E-7	DEFECT
// Don't bother complaining about things with no name, // since there are constraints for that problem. //	WITHOUT_CLASSIFICATION	0.9999993558112859	WITHOUT_CLASSIFICATION	6.44188714139142E-7	DEFECT
// Drop the _ separators and normalize the case. //	WITHOUT_CLASSIFICATION	0.999999992744969	WITHOUT_CLASSIFICATION	7.255030998226176E-9	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999827276344279	WITHOUT_CLASSIFICATION	1.7272365572194278E-5	DEFECT
// Match against every other operation but this one. //	WITHOUT_CLASSIFICATION	0.9999996755563432	WITHOUT_CLASSIFICATION	3.244436568619935E-7	DEFECT
// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //	WITHOUT_CLASSIFICATION	0.9999993779149224	WITHOUT_CLASSIFICATION	6.220850774642047E-7	DEFECT
// There is no match if the types are different // and they don't each specify the same non-null instance class name. //	WITHOUT_CLASSIFICATION	0.999999756688879	WITHOUT_CLASSIFICATION	2.433111209628083E-7	DEFECT
// Iterate over all the operations but skip all the operations in the first super. //	WITHOUT_CLASSIFICATION	0.9999999815510815	WITHOUT_CLASSIFICATION	1.8448918598625103E-8	DEFECT
// We do not want to diagnose any error that have already been diagnosed by a super type. //	WITHOUT_CLASSIFICATION	0.9999478039992499	WITHOUT_CLASSIFICATION	5.2196000750205324E-5	DEFECT
// Maintain a list of classifiers for looking up conflicts. //	WITHOUT_CLASSIFICATION	0.9999999974084175	WITHOUT_CLASSIFICATION	2.5915825149989693E-9	DEFECT
// Look for duplicates among the generic super types. //	WITHOUT_CLASSIFICATION	0.9999965116524047	WITHOUT_CLASSIFICATION	3.4883475954896766E-6	DEFECT
// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //	WITHOUT_CLASSIFICATION	0.9999785903482366	WITHOUT_CLASSIFICATION	2.1409651763380185E-5	DEFECT
// The string must contain inappropriate whitespace, so find the index for the first difference. //	WITHOUT_CLASSIFICATION	0.9999999951769114	WITHOUT_CLASSIFICATION	4.823088648545574E-9	DEFECT
// Don't complain about the literals if they are the same as the names and the names collide. //	WITHOUT_CLASSIFICATION	0.9999999308397677	WITHOUT_CLASSIFICATION	6.916023237482688E-8	DEFECT
// Can't have both a classifier and a type parameter. //	WITHOUT_CLASSIFICATION	0.9999991745356084	WITHOUT_CLASSIFICATION	8.25464391624345E-7	DEFECT
// The referencing generic type must be contained to be in scope //	WITHOUT_CLASSIFICATION	0.9999994466422866	WITHOUT_CLASSIFICATION	5.533577134303769E-7	DEFECT
// The type parameter must be in scope and must not be a forward reference. //	WITHOUT_CLASSIFICATION	0.9999867808399495	WITHOUT_CLASSIFICATION	1.3219160050497122E-5	DEFECT
// When used as a generic super type, there must be a classifier that refers to a class. //	WITHOUT_CLASSIFICATION	0.9999995841279046	WITHOUT_CLASSIFICATION	4.158720954568067E-7	DEFECT
// The type arguments of a generic super type must not be a wildcard. //	WITHOUT_CLASSIFICATION	0.9999283423486567	WITHOUT_CLASSIFICATION	7.165765134339661E-5	DEFECT
// Wildcards are only allowed in type arguments. //	WITHOUT_CLASSIFICATION	0.9999991631168714	WITHOUT_CLASSIFICATION	8.368831284797354E-7	DEFECT
// The classifier of an attribute's generic type must be a data type. //	WITHOUT_CLASSIFICATION	0.99999964844661	WITHOUT_CLASSIFICATION	3.515533900577445E-7	DEFECT
// Can't have both an upper and lower bound. //	WITHOUT_CLASSIFICATION	0.999995637723116	WITHOUT_CLASSIFICATION	4.362276884058673E-6	DEFECT
// Can't have a classifier or a type parameter as well as bounds. //	WITHOUT_CLASSIFICATION	0.9999994342229024	WITHOUT_CLASSIFICATION	5.657770976548284E-7	DEFECT
// Can only have bounds when used as a type argument. //	WITHOUT_CLASSIFICATION	0.9999990753214358	WITHOUT_CLASSIFICATION	9.246785641199128E-7	DEFECT
// Can't have type arguments unless there is a classifier //	WITHOUT_CLASSIFICATION	0.9999990493101909	WITHOUT_CLASSIFICATION	9.506898090485935E-7	DEFECT
// Have no arguments when they are allowed is only a warning. //	WITHOUT_CLASSIFICATION	0.999999946634293	WITHOUT_CLASSIFICATION	5.336570683157083E-8	DEFECT
// Incorrect number of type arguments. //	WITHOUT_CLASSIFICATION	0.9999702825085347	WITHOUT_CLASSIFICATION	2.9717491465242228E-5	DEFECT
// Check if the bound specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999996622904032	WITHOUT_CLASSIFICATION	3.377095968865016E-7	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999978593397418	WITHOUT_CLASSIFICATION	2.1406602580886506E-6	DEFECT
// If the are the same then it is bounded properly... //	WITHOUT_CLASSIFICATION	0.984104375426273	WITHOUT_CLASSIFICATION	0.01589562457372691	DEFECT
// We test their relationship either via them both being classes... //	WITHOUT_CLASSIFICATION	0.9999996302627331	WITHOUT_CLASSIFICATION	3.697372669860128E-7	DEFECT
// namespace context	WITHOUT_CLASSIFICATION	0.9999987682586846	WITHOUT_CLASSIFICATION	1.2317413154429187E-6	DEFECT
// Determine if there is a bounding generic super type. //	WITHOUT_CLASSIFICATION	0.999996050286637	WITHOUT_CLASSIFICATION	3.949713363014607E-6	DEFECT
// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //	WITHOUT_CLASSIFICATION	0.9999516277220287	WITHOUT_CLASSIFICATION	4.837227797119741E-5	DEFECT
// Test if there are type parameters that might require substitution. //	WITHOUT_CLASSIFICATION	0.9990671995960528	WITHOUT_CLASSIFICATION	9.328004039472781E-4	DEFECT
// If none of the generic super types are bounded, then we've failed. //	WITHOUT_CLASSIFICATION	0.9999965629744624	WITHOUT_CLASSIFICATION	3.437025537709706E-6	DEFECT
// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //	WITHOUT_CLASSIFICATION	0.9999997954388165	WITHOUT_CLASSIFICATION	2.0456118347450516E-7	DEFECT
// If there is a type parameter, one of its bounds must be bounded by the bound. //	WITHOUT_CLASSIFICATION	0.9999996397842207	WITHOUT_CLASSIFICATION	3.6021577922209365E-7	DEFECT
// If there is a upper bound, the bound must bound it. //	WITHOUT_CLASSIFICATION	0.999998066069854	WITHOUT_CLASSIFICATION	1.9339301461183166E-6	DEFECT
// Failing all those cases, there must be an lower bound that bounds it. //	WITHOUT_CLASSIFICATION	0.9999928772024469	WITHOUT_CLASSIFICATION	7.122797553113737E-6	DEFECT
// If the generic type is a wildcard, it can't be bounded by another wildcard. //	WITHOUT_CLASSIFICATION	0.9999211207748695	WITHOUT_CLASSIFICATION	7.887922513057355E-5	DEFECT
// If there is an lower bound, the type argument must bound it. //	WITHOUT_CLASSIFICATION	0.9999972311618949	WITHOUT_CLASSIFICATION	2.768838105137258E-6	DEFECT
// If the type also specifies a classifier... //	WITHOUT_CLASSIFICATION	0.9999978593397418	WITHOUT_CLASSIFICATION	2.1406602580886506E-6	DEFECT
// If they are the same classifier, they are of course equal. //	WITHOUT_CLASSIFICATION	0.9999999611944999	WITHOUT_CLASSIFICATION	3.880550006480309E-8	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999999049114981	WITHOUT_CLASSIFICATION	9.508850187458161E-8	DEFECT
// Consider the instance type names they wrap  // to see if they are non-null and equal. //	WITHOUT_CLASSIFICATION	0.9999999049114981	WITHOUT_CLASSIFICATION	9.508850187458161E-8	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999998591725916	WITHOUT_CLASSIFICATION	1.4082740841512425E-7	DEFECT
// I.e., the classifiers are considered equal if they wrap the same non-null type. //	WITHOUT_CLASSIFICATION	0.9999998591725916	WITHOUT_CLASSIFICATION	1.4082740841512425E-7	DEFECT
// If the generic type is a different wildcard, it doesn't match. //	WITHOUT_CLASSIFICATION	0.9993006648829176	WITHOUT_CLASSIFICATION	6.993351170823434E-4	DEFECT
// Reverse the test. //	WITHOUT_CLASSIFICATION	0.9999998774926815	WITHOUT_CLASSIFICATION	1.2250731842815402E-7	DEFECT
// If they are the same instance they are equal. //	WITHOUT_CLASSIFICATION	0.9999998191430542	WITHOUT_CLASSIFICATION	1.8085694579302862E-7	DEFECT
// If one is null (but the other is not) then they are not equal. //	WITHOUT_CLASSIFICATION	0.9999987277694659	WITHOUT_CLASSIFICATION	1.2722305340925406E-6	DEFECT
// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //	WITHOUT_CLASSIFICATION	0.9999897105793776	WITHOUT_CLASSIFICATION	1.028942062242258E-5	DEFECT
// If they both aren't null... //	WITHOUT_CLASSIFICATION	0.9999695493315611	WITHOUT_CLASSIFICATION	3.045066843886634E-5	DEFECT
// If one is null (but the other is not) then they can't be equal. //	WITHOUT_CLASSIFICATION	0.9999936531386913	WITHOUT_CLASSIFICATION	6.3468613087691525E-6	DEFECT
// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //	WITHOUT_CLASSIFICATION	0.9999989611618365	WITHOUT_CLASSIFICATION	1.038838163521887E-6	DEFECT
// Ignore leading whitespace	WITHOUT_CLASSIFICATION	0.9999999902500389	WITHOUT_CLASSIFICATION	9.749961117230805E-9	DEFECT
// Ignore trailing whitespace	WITHOUT_CLASSIFICATION	0.9999999973981667	WITHOUT_CLASSIFICATION	2.601833319884488E-9	DEFECT
//EcoreValidator	WITHOUT_CLASSIFICATION	0.9999760884315563	WITHOUT_CLASSIFICATION	2.3911568443722616E-5	DEFECT
//  Public	WITHOUT_CLASSIFICATION	0.9999935517012231	WITHOUT_CLASSIFICATION	6.448298776989913E-6	DEFECT
// --entryCursor;	WITHOUT_CLASSIFICATION	0.9999993745916427	WITHOUT_CLASSIFICATION	6.254083573155171E-7	DEFECT
//lastCursor = -1; //prepared = 0;	WITHOUT_CLASSIFICATION	0.9999995703871765	WITHOUT_CLASSIFICATION	4.296128234688423E-7	DEFECT
/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/	WITHOUT_CLASSIFICATION	0.9999999688254938	WITHOUT_CLASSIFICATION	3.117450630077487E-8	DEFECT
// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //	WITHOUT_CLASSIFICATION	0.9998789121033322	WITHOUT_CLASSIFICATION	1.2108789666774808E-4	DEFECT
// For the extended meta data to be created. //	WITHOUT_CLASSIFICATION	0.9999966949415213	WITHOUT_CLASSIFICATION	3.3050584786975175E-6	DEFECT
// We can also optimize single valued reverse.  //	WITHOUT_CLASSIFICATION	0.9999999803960591	WITHOUT_CLASSIFICATION	1.9603940954634913E-8	DEFECT
// This forces the feature ids to be assigned. //	WITHOUT_CLASSIFICATION	0.999998788966978	WITHOUT_CLASSIFICATION	1.2110330219967862E-6	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999997669230918	WITHOUT_CLASSIFICATION	2.3307690814131278E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999665047659	WITHOUT_CLASSIFICATION	3.349523404823831E-8	DEFECT
// We can use == for EObjects and EnumLiterals. //	WITHOUT_CLASSIFICATION	0.9999997669230918	WITHOUT_CLASSIFICATION	2.3307690814131278E-7	DEFECT
// This should be the same as the logic in ResourceImpl.getEObject(String). //	WITHOUT_CLASSIFICATION	0.9999894519374775	WITHOUT_CLASSIFICATION	1.0548062522635596E-5	DEFECT
//EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999774763991544	WITHOUT_CLASSIFICATION	2.2523600845546366E-5	DEFECT
// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //	WITHOUT_CLASSIFICATION	0.9999186994436362	WITHOUT_CLASSIFICATION	8.130055636378536E-5	DEFECT
/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/	WITHOUT_CLASSIFICATION	0.9999999968500619	WITHOUT_CLASSIFICATION	3.1499380090514753E-9	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999991145955989	WITHOUT_CLASSIFICATION	8.854044011119952E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999382661538782	WITHOUT_CLASSIFICATION	6.173384612185494E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999382661538782	WITHOUT_CLASSIFICATION	6.173384612185494E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.999993711672194	WITHOUT_CLASSIFICATION	6.288327806086994E-6	DEFECT
// demandDocumentRoot(ePackage);	WITHOUT_CLASSIFICATION	0.9999639125643036	WITHOUT_CLASSIFICATION	3.6087435696421347E-5	DEFECT
// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //	WITHOUT_CLASSIFICATION	0.9999999909158649	WITHOUT_CLASSIFICATION	9.084135004322018E-9	DEFECT
// No new methods.	WITHOUT_CLASSIFICATION	0.9999999740080363	WITHOUT_CLASSIFICATION	2.599196372556314E-8	DEFECT
// Undo the preparation for previous and continue.	WITHOUT_CLASSIFICATION	0.9999999388526771	WITHOUT_CLASSIFICATION	6.114732291380409E-8	DEFECT
// Undo the preparation for next and continue.	WITHOUT_CLASSIFICATION	0.9999959314969624	WITHOUT_CLASSIFICATION	4.068503037553135E-6	DEFECT
// Validate now since the call we make after will skip validating.	WITHOUT_CLASSIFICATION	0.9999991145955989	WITHOUT_CLASSIFICATION	8.854044011119952E-7	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999382661538782	WITHOUT_CLASSIFICATION	6.173384612185494E-5	DEFECT
// Index should be -1.	WITHOUT_CLASSIFICATION	0.9999382661538782	WITHOUT_CLASSIFICATION	6.173384612185494E-5	DEFECT
// This may be called directly on an EObject for the case of a containment. //	WITHOUT_CLASSIFICATION	0.999993711672194	WITHOUT_CLASSIFICATION	6.288327806086994E-6	DEFECT
/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/	WITHOUT_CLASSIFICATION	0.9999999760660124	WITHOUT_CLASSIFICATION	2.3933987545143698E-8	DEFECT
//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }	WITHOUT_CLASSIFICATION	0.9999998174664791	WITHOUT_CLASSIFICATION	1.8253352081411973E-7	DEFECT
// Failure to resolve is ignored.	WITHOUT_CLASSIFICATION	0.9999990771579695	WITHOUT_CLASSIFICATION	9.228420303992032E-7	DEFECT
// The loop resolves the cross references by visiting them.	WITHOUT_CLASSIFICATION	0.9999976865781682	WITHOUT_CLASSIFICATION	2.3134218318470307E-6	DEFECT
// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //	WITHOUT_CLASSIFICATION	0.9999950855402234	WITHOUT_CLASSIFICATION	4.914459776552823E-6	DEFECT
// If we are on the special resource set iterator, and there isn't really a next object at this point... //	WITHOUT_CLASSIFICATION	0.999003763343339	WITHOUT_CLASSIFICATION	9.96236656661019E-4	DEFECT
// Skip the dummy null object and test again. //	WITHOUT_CLASSIFICATION	0.9999999600949481	WITHOUT_CLASSIFICATION	3.990505186440928E-8	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999791573808118	WITHOUT_CLASSIFICATION	2.0842619188154086E-5	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999791573808118	WITHOUT_CLASSIFICATION	2.0842619188154086E-5	DEFECT
// If the first object is null, the second object must be null. //	WITHOUT_CLASSIFICATION	0.9999818367782567	WITHOUT_CLASSIFICATION	1.8163221743238167E-5	DEFECT
// We know the first object isn't null, so if the second one is, it can't be equal. //	WITHOUT_CLASSIFICATION	0.9999994698599235	WITHOUT_CLASSIFICATION	5.301400765937711E-7	DEFECT
// Then eObject2 must be that previous match. //	WITHOUT_CLASSIFICATION	0.9999994693903246	WITHOUT_CLASSIFICATION	5.306096754466336E-7	DEFECT
// If eObject2 has been compared already... //	WITHOUT_CLASSIFICATION	0.9986022733948148	WITHOUT_CLASSIFICATION	0.0013977266051851873	DEFECT
// Then eObject1 must be that match. //	WITHOUT_CLASSIFICATION	0.9999994281395608	WITHOUT_CLASSIFICATION	5.718604392667627E-7	DEFECT
// Neither eObject1 nor eObject2 have been compared yet.	WITHOUT_CLASSIFICATION	0.9999848275129845	WITHOUT_CLASSIFICATION	1.5172487015549389E-5	DEFECT
// If eObject1 and eObject2 are the same instance... //	WITHOUT_CLASSIFICATION	0.9999159046716374	WITHOUT_CLASSIFICATION	8.409532836271063E-5	DEFECT
// Match them and return true. //	WITHOUT_CLASSIFICATION	0.9999999476700911	WITHOUT_CLASSIFICATION	5.2329908764753335E-8	DEFECT
// If they don't have the same class, they can't be equal. //	WITHOUT_CLASSIFICATION	0.9998262560521467	WITHOUT_CLASSIFICATION	1.7374394785339345E-4	DEFECT
// Assume from now on that they match. //	WITHOUT_CLASSIFICATION	0.9999668948681016	WITHOUT_CLASSIFICATION	3.310513189836718E-5	DEFECT
// Check all the values. //	WITHOUT_CLASSIFICATION	0.9999999789293971	WITHOUT_CLASSIFICATION	2.107060299879948E-8	DEFECT
// If the first value is null, the second value must be null. //	WITHOUT_CLASSIFICATION	0.9999947057998865	WITHOUT_CLASSIFICATION	5.294200113510827E-6	DEFECT
// Since the first value isn't null, if the second one is, they aren't equal. //	WITHOUT_CLASSIFICATION	0.9999999482951962	WITHOUT_CLASSIFICATION	5.170480376817362E-8	DEFECT
// If this is a feature map... //	WITHOUT_CLASSIFICATION	0.9986647749299281	WITHOUT_CLASSIFICATION	0.0013352250700719116	DEFECT
// The feature maps must be equal. //	WITHOUT_CLASSIFICATION	0.99999946688932	WITHOUT_CLASSIFICATION	5.331106800960886E-7	DEFECT
// The values must be Java equal. //	WITHOUT_CLASSIFICATION	0.9999995652622646	WITHOUT_CLASSIFICATION	4.347377354483242E-7	DEFECT
// If they don't have the same size, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999386583691763	WITHOUT_CLASSIFICATION	6.134163082374863E-5	DEFECT
// Compare entries in order. //	WITHOUT_CLASSIFICATION	0.99999673536345	WITHOUT_CLASSIFICATION	3.2646365499841646E-6	DEFECT
// There is no reason they aren't equals. //	WITHOUT_CLASSIFICATION	0.9999962852245419	WITHOUT_CLASSIFICATION	3.7147754581550533E-6	DEFECT
// If the referenced EObjects aren't equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999983258561194	WITHOUT_CLASSIFICATION	1.674143880636034E-6	DEFECT
// If the values aren't Java equal, the feature maps aren't equal. //	WITHOUT_CLASSIFICATION	0.9999930678972756	WITHOUT_CLASSIFICATION	6.932102724357008E-6	DEFECT
// EqualityHelper	WITHOUT_CLASSIFICATION	0.9999995418780049	WITHOUT_CLASSIFICATION	4.5812199506546915E-7	DEFECT
// If it's a proxy, use that. //	WITHOUT_CLASSIFICATION	0.9999985187564127	WITHOUT_CLASSIFICATION	1.481243587273934E-6	DEFECT
// If it is in a resource, form the URI relative to that resource. //	WITHOUT_CLASSIFICATION	0.9999992068970829	WITHOUT_CLASSIFICATION	7.931029171206596E-7	DEFECT
// Keys that will be used to record visibility for the accessors. //	WITHOUT_CLASSIFICATION	0.9999940439477932	WITHOUT_CLASSIFICATION	5.956052206812727E-6	DEFECT
// Value used to suppress visibility. //	WITHOUT_CLASSIFICATION	0.9999972890876101	WITHOUT_CLASSIFICATION	2.710912389908554E-6	DEFECT
// Handle the last byte at the end. //	WITHOUT_CLASSIFICATION	0.9999997196727458	WITHOUT_CLASSIFICATION	2.803272542487005E-7	DEFECT
// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //	WITHOUT_CLASSIFICATION	0.9999975100336145	WITHOUT_CLASSIFICATION	2.4899663854720784E-6	DEFECT
// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //	WITHOUT_CLASSIFICATION	0.9999999920196123	WITHOUT_CLASSIFICATION	7.98038760154198E-9	DEFECT
// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //	WITHOUT_CLASSIFICATION	0.999999817328242	WITHOUT_CLASSIFICATION	1.8267175802571132E-7	DEFECT
// clockseq_hi	WITHOUT_CLASSIFICATION	0.9999980081529407	WITHOUT_CLASSIFICATION	1.991847059229845E-6	DEFECT
// clockseq_low	WITHOUT_CLASSIFICATION	0.9999959450062598	WITHOUT_CLASSIFICATION	4.0549937401375496E-6	DEFECT
// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //	WITHOUT_CLASSIFICATION	0.9999863244768447	WITHOUT_CLASSIFICATION	1.3675523155338136E-5	DEFECT
// Wait so that the clock can catch up and the time adjustment won't overflow.	WITHOUT_CLASSIFICATION	0.9999992857604229	WITHOUT_CLASSIFICATION	7.142395771040731E-7	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999962190062558	WITHOUT_CLASSIFICATION	3.7809937441856676E-6	DEFECT
// We just woke up.	WITHOUT_CLASSIFICATION	0.9999962190062558	WITHOUT_CLASSIFICATION	3.7809937441856676E-6	DEFECT
// Place the time into the byte array in network byte order. //	WITHOUT_CLASSIFICATION	0.999997384957128	WITHOUT_CLASSIFICATION	2.615042871955423E-6	DEFECT
// time_low //	WITHOUT_CLASSIFICATION	0.9999954185595853	WITHOUT_CLASSIFICATION	4.58144041479208E-6	DEFECT
// time_mid //	WITHOUT_CLASSIFICATION	0.999997608404188	WITHOUT_CLASSIFICATION	2.3915958118891566E-6	DEFECT
// time_hi //	WITHOUT_CLASSIFICATION	0.9999982121595294	WITHOUT_CLASSIFICATION	1.7878404706061318E-6	DEFECT
// Ignore if we can't freeze.	WITHOUT_CLASSIFICATION	0.9999993808545689	WITHOUT_CLASSIFICATION	6.191454311569682E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999997941074122	WITHOUT_CLASSIFICATION	2.0589258769838185E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */	WITHOUT_CLASSIFICATION	0.9999997226526309	WITHOUT_CLASSIFICATION	2.773473690684674E-7	DEFECT
// fall through	WITHOUT_CLASSIFICATION	0.9999803114519927	WITHOUT_CLASSIFICATION	1.9688548007316702E-5	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923566962368	WITHOUT_CLASSIFICATION	7.643303763191126E-6	DEFECT
//fall through...	WITHOUT_CLASSIFICATION	0.9995138022177247	WITHOUT_CLASSIFICATION	4.8619778227532406E-4	DEFECT
// Deresolve all the URI against the current base URI. //	WITHOUT_CLASSIFICATION	0.9999999592909877	WITHOUT_CLASSIFICATION	4.0709012197078284E-8	DEFECT
// System.err.println("add = ["+newString+"]");	WITHOUT_CLASSIFICATION	0.9999998020964138	WITHOUT_CLASSIFICATION	1.9790358619198804E-7	DEFECT
// If there is a temporary file... //	WITHOUT_CLASSIFICATION	0.9999251613107375	WITHOUT_CLASSIFICATION	7.48386892625469E-5	DEFECT
// This is the cheapest and most common case. //	WITHOUT_CLASSIFICATION	0.9999759783268992	WITHOUT_CLASSIFICATION	2.402167310074487E-5	DEFECT
// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  	WITHOUT_CLASSIFICATION	0.9987594949934542	WITHOUT_CLASSIFICATION	0.001240505006545847	DEFECT
// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //	WITHOUT_CLASSIFICATION	0.9588141138872639	WITHOUT_CLASSIFICATION	0.04118588611273608	DEFECT
// If we can't create one, too bad.	WITHOUT_CLASSIFICATION	0.9999918875344035	WITHOUT_CLASSIFICATION	8.112465596530155E-6	DEFECT
// SAXXMIHandler	WITHOUT_CLASSIFICATION	0.9999968397066779	WITHOUT_CLASSIFICATION	3.1602933221493922E-6	DEFECT
// EMOF.isReadOnly = !Ecore.changeable	WITHOUT_CLASSIFICATION	0.9999967670379749	WITHOUT_CLASSIFICATION	3.2329620250719842E-6	DEFECT
// Ecore.changeable = !EMOF.isReadOnly	WITHOUT_CLASSIFICATION	0.9999971843456852	WITHOUT_CLASSIFICATION	2.8156543147458088E-6	DEFECT
// Ignore it if we've already set generic versions of these //	WITHOUT_CLASSIFICATION	0.9999999368639982	WITHOUT_CLASSIFICATION	6.313600176128944E-8	DEFECT
// Ignore whatever was set before. //	WITHOUT_CLASSIFICATION	0.9999999450658761	WITHOUT_CLASSIFICATION	5.4934123892729306E-8	DEFECT
// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.	WITHOUT_CLASSIFICATION	0.9999958030213855	WITHOUT_CLASSIFICATION	4.196978614544699E-6	DEFECT
// throws SAXException	WITHOUT_CLASSIFICATION	0.9999486832177913	WITHOUT_CLASSIFICATION	5.1316782208775536E-5	DEFECT
// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //	WITHOUT_CLASSIFICATION	0.999999999675551	WITHOUT_CLASSIFICATION	3.2444907363611035E-10	DEFECT
// // Overwrite DefaultHandler methods //	WITHOUT_CLASSIFICATION	0.9999999977379137	WITHOUT_CLASSIFICATION	2.2620862477905407E-9	DEFECT
// // Implement LexicalHandler methods //	WITHOUT_CLASSIFICATION	0.9999995058684399	WITHOUT_CLASSIFICATION	4.941315601385159E-7	DEFECT
// // Implement DTDHandler methods //	WITHOUT_CLASSIFICATION	0.9999999271364877	WITHOUT_CLASSIFICATION	7.286351232639189E-8	DEFECT
// // Implement EntityResolver methods //	WITHOUT_CLASSIFICATION	0.9999986939817063	WITHOUT_CLASSIFICATION	1.3060182936675844E-6	DEFECT
// And find the one that holds this proxy. //	WITHOUT_CLASSIFICATION	0.9999698770764089	WITHOUT_CLASSIFICATION	3.0122923591090174E-5	DEFECT
// Try to resolve the proxy locally. //	WITHOUT_CLASSIFICATION	0.9999876132260186	WITHOUT_CLASSIFICATION	1.2386773981528163E-5	DEFECT
// We won't need to process this again later. //	WITHOUT_CLASSIFICATION	0.999995492346616	WITHOUT_CLASSIFICATION	4.50765338398229E-6	DEFECT
// Compute the holder of the proxy //	WITHOUT_CLASSIFICATION	0.9999969827019731	WITHOUT_CLASSIFICATION	3.0172980268051943E-6	DEFECT
// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //	WITHOUT_CLASSIFICATION	0.9999982393576972	WITHOUT_CLASSIFICATION	1.7606423027879861E-6	DEFECT
// Move the resolved object to the right place, remove the proxy, and we're done. //	WITHOUT_CLASSIFICATION	0.9999841610366764	WITHOUT_CLASSIFICATION	1.583896332361472E-5	DEFECT
// If the resolved object doesn't contain a reference to the proxy holder as it should. //	WITHOUT_CLASSIFICATION	0.9998202011434177	WITHOUT_CLASSIFICATION	1.7979885658230197E-4	DEFECT
// The proxy needs to be replaced in a way that updates both ends of the reference. //	WITHOUT_CLASSIFICATION	0.9999964358005154	WITHOUT_CLASSIFICATION	3.5641994845298288E-6	DEFECT
// We won't need to process this again later.	WITHOUT_CLASSIFICATION	0.9999970857395747	WITHOUT_CLASSIFICATION	2.9142604251812135E-6	DEFECT
// At least set the references that we were able to resolve, if any. //	WITHOUT_CLASSIFICATION	0.9999988666909638	WITHOUT_CLASSIFICATION	1.133309036169486E-6	DEFECT
// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //	WITHOUT_CLASSIFICATION	0.9999999791763795	WITHOUT_CLASSIFICATION	2.0823620477500355E-8	DEFECT
// EATM temporary for debug purposes only. //	WITHOUT_CLASSIFICATION	0.9999875567170485	WITHOUT_CLASSIFICATION	1.2443282951550312E-5	DEFECT
// check for simple feature	WITHOUT_CLASSIFICATION	0.9999999918350547	WITHOUT_CLASSIFICATION	8.164945298774279E-9	DEFECT
// Set up a deferred extent so the document root we create definitely will not be added to the resource. //	WITHOUT_CLASSIFICATION	0.9999996933425275	WITHOUT_CLASSIFICATION	3.0665747246801494E-7	DEFECT
// Remove the document root's information from the top of the stacks. //	WITHOUT_CLASSIFICATION	0.9999992114247639	WITHOUT_CLASSIFICATION	7.88575236054008E-7	DEFECT
// Process the new root object if any. //	WITHOUT_CLASSIFICATION	0.9999975295041359	WITHOUT_CLASSIFICATION	2.47049586418295E-6	DEFECT
// There's an EObject on the stack already. //	WITHOUT_CLASSIFICATION	0.9999861058882887	WITHOUT_CLASSIFICATION	1.3894111711226969E-5	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999996506992592	WITHOUT_CLASSIFICATION	3.493007407495302E-7	DEFECT
// handler.ignorableWhitespace(ch, start, length);	WITHOUT_CLASSIFICATION	0.9999999984660901	WITHOUT_CLASSIFICATION	1.5339098964683715E-9	DEFECT
// Excise the new root from the document root. //	WITHOUT_CLASSIFICATION	0.9999996506992592	WITHOUT_CLASSIFICATION	3.493007407495302E-7	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999626901026036	WITHOUT_CLASSIFICATION	3.730989739636027E-5	DEFECT
// The new root object is the actual new object since all sign of the document root will now have disappeared. //	WITHOUT_CLASSIFICATION	0.9956551117694385	WITHOUT_CLASSIFICATION	0.0043448882305614145	DEFECT
// Ignore a whitespace only text entry at the beginning. //	WITHOUT_CLASSIFICATION	0.9999999331939934	WITHOUT_CLASSIFICATION	6.680600660018387E-8	DEFECT
// Handle namespaces	WITHOUT_CLASSIFICATION	0.9999999706860214	WITHOUT_CLASSIFICATION	2.9313978581979636E-8	DEFECT
// If processSchemaLocations is specified, treat these as XML Schema locations	WITHOUT_CLASSIFICATION	0.9999993414545905	WITHOUT_CLASSIFICATION	6.585454095206277E-7	DEFECT
// If externalSchemaLocations are specified, process these ones as well	WITHOUT_CLASSIFICATION	0.9999999995599926	WITHOUT_CLASSIFICATION	4.4000729158279127E-10	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999979765352187	WITHOUT_CLASSIFICATION	2.02346478132048E-6	DEFECT
// This happens when processing an element with simple content that has elements content even though it shouldn't. //	WITHOUT_CLASSIFICATION	0.9999619258661591	WITHOUT_CLASSIFICATION	3.807413384092995E-5	DEFECT
// Try to get a general-content feature. // Use a pattern that's not possible any other way. //	WITHOUT_CLASSIFICATION	0.9997949652581187	WITHOUT_CLASSIFICATION	2.0503474188116348E-4	DEFECT
// This is for the case for a local unqualified element that has been bound. //	WITHOUT_CLASSIFICATION	0.9999986089641089	WITHOUT_CLASSIFICATION	1.391035891148352E-6	DEFECT
// This handles the case of a substitution group. //	WITHOUT_CLASSIFICATION	0.9999990539030416	WITHOUT_CLASSIFICATION	9.46096958464186E-7	DEFECT
// This check is redundant -- see handleFeature method (EL)	WITHOUT_CLASSIFICATION	0.9999999339131469	WITHOUT_CLASSIFICATION	6.608685313846352E-8	DEFECT
// processing unknown feature with xsi:type (xmi:type)	WITHOUT_CLASSIFICATION	0.9999947825241704	WITHOUT_CLASSIFICATION	5.217475829591875E-6	DEFECT
// This only works for old globally registered things.	WITHOUT_CLASSIFICATION	0.9982091969209316	WITHOUT_CLASSIFICATION	0.0017908030790683793	DEFECT
// Ignore it if we can't find it since we'll fail anyway.	WITHOUT_CLASSIFICATION	0.9999822383331727	WITHOUT_CLASSIFICATION	1.776166682729194E-5	DEFECT
// Continue with a different approach.	WITHOUT_CLASSIFICATION	0.9999802206938989	WITHOUT_CLASSIFICATION	1.9779306101061085E-5	DEFECT
// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...	WITHOUT_CLASSIFICATION	0.9999254215417962	WITHOUT_CLASSIFICATION	7.457845820370373E-5	DEFECT
// Create a proxy in the correct way and pop it. //	WITHOUT_CLASSIFICATION	0.9987091706727547	WITHOUT_CLASSIFICATION	0.0012908293272453507	DEFECT
// Test for a same document reference that would usually be handled as an IDREF. //	WITHOUT_CLASSIFICATION	0.9999971547485684	WITHOUT_CLASSIFICATION	2.8452514315202724E-6	DEFECT
// EATM Demand create metadata.	WITHOUT_CLASSIFICATION	0.9999982121593426	WITHOUT_CLASSIFICATION	1.787840657341409E-6	DEFECT
/*   * Javadoc copied from interface   */	WITHOUT_CLASSIFICATION	0.9999998354229687	WITHOUT_CLASSIFICATION	1.645770313989412E-7	DEFECT
// add the key/value pairs to the output string	WITHOUT_CLASSIFICATION	0.9999983457691912	WITHOUT_CLASSIFICATION	1.6542308087390177E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ensure that anything can be handled, even if it's not recognized. //	WITHOUT_CLASSIFICATION	0.9999979765352187	WITHOUT_CLASSIFICATION	2.02346478132048E-6	DEFECT
// xmlResource.getResourceSet().getResources().addAll(generatedResources);	WITHOUT_CLASSIFICATION	0.9999995998883513	WITHOUT_CLASSIFICATION	4.001116486945552E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999994497362825	WITHOUT_CLASSIFICATION	5.502637174446518E-7	DEFECT
// use the pool to retrieve the parser	WITHOUT_CLASSIFICATION	0.9999994497362825	WITHOUT_CLASSIFICATION	5.502637174446518E-7	DEFECT
// set features and properties	WITHOUT_CLASSIFICATION	0.9999994778227499	WITHOUT_CLASSIFICATION	5.221772501177892E-7	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999994413014814	WITHOUT_CLASSIFICATION	5.586985185560955E-7	DEFECT
// set lexical handler	WITHOUT_CLASSIFICATION	0.9999994413014814	WITHOUT_CLASSIFICATION	5.586985185560955E-7	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999637692716926	WITHOUT_CLASSIFICATION	3.623072830744505E-5	DEFECT
// release parser back to the pool	WITHOUT_CLASSIFICATION	0.9999637692716926	WITHOUT_CLASSIFICATION	3.623072830744505E-5	DEFECT
// Don't read encoding - rely on XML parser to provide one via Locator2	WITHOUT_CLASSIFICATION	0.7600572156246652	DEFECT	0.23994278437533492	WITHOUT_CLASSIFICATION
// record node's attributes	WITHOUT_CLASSIFICATION	0.9999999174920624	WITHOUT_CLASSIFICATION	8.250793753385043E-8	DEFECT
// Include only non-duplicate namespace declarations. //	WITHOUT_CLASSIFICATION	0.9999999950923025	WITHOUT_CLASSIFICATION	4.9076974308758766E-9	DEFECT
// record namespaces in scope //	WITHOUT_CLASSIFICATION	0.999998761141569	WITHOUT_CLASSIFICATION	1.2388584309349248E-6	DEFECT
// traverse element node	WITHOUT_CLASSIFICATION	0.999999767616064	WITHOUT_CLASSIFICATION	2.3238393596797784E-7	DEFECT
// class AttributesProxy	WITHOUT_CLASSIFICATION	0.9999967052626797	WITHOUT_CLASSIFICATION	3.2947373203754307E-6	DEFECT
// XMLLoad	WITHOUT_CLASSIFICATION	0.9997634085062956	WITHOUT_CLASSIFICATION	2.3659149370424014E-4	DEFECT
// Ignore close since we don't want to let the parser close the stream when it's done.	WITHOUT_CLASSIFICATION	0.9999965580569956	WITHOUT_CLASSIFICATION	3.44194300446873E-6	DEFECT
// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.	WITHOUT_CLASSIFICATION	0.9999999287906219	WITHOUT_CLASSIFICATION	7.120937804342107E-8	DEFECT
// handler.skippedEntity(name);	WITHOUT_CLASSIFICATION	0.9999977505977524	WITHOUT_CLASSIFICATION	2.2494022475618185E-6	DEFECT
// handler.resolveEntity(publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999999034886834	WITHOUT_CLASSIFICATION	9.651131662228676E-8	DEFECT
// Skips '-'	WITHOUT_CLASSIFICATION	0.9999941819160447	WITHOUT_CLASSIFICATION	5.81808395523503E-6	DEFECT
// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //	WITHOUT_CLASSIFICATION	0.999999910132779	WITHOUT_CLASSIFICATION	8.98672209715751E-8	DEFECT
// handler.notationDecl(name, publicId, systemId);	WITHOUT_CLASSIFICATION	0.9999998027332764	WITHOUT_CLASSIFICATION	1.972667235573686E-7	DEFECT
// handler.unparsedEntityDecl(name, publicId, systemId, notationName);	WITHOUT_CLASSIFICATION	0.9999988926645449	WITHOUT_CLASSIFICATION	1.1073354550903193E-6	DEFECT
// SAXXMLHandler	WITHOUT_CLASSIFICATION	0.9999971475380868	WITHOUT_CLASSIFICATION	2.852461913173115E-6	DEFECT
// true if seen xmlns="" declaration	WITHOUT_CLASSIFICATION	0.9999988961476989	WITHOUT_CLASSIFICATION	1.1038523011286268E-6	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999992824226518	WITHOUT_CLASSIFICATION	7.175773481618608E-7	DEFECT
// There really must be a package. //	WITHOUT_CLASSIFICATION	0.9999992824226518	WITHOUT_CLASSIFICATION	7.175773481618608E-7	DEFECT
// We must have a qualifier for an attribute that needs qualified. //	WITHOUT_CLASSIFICATION	0.9999999694866504	WITHOUT_CLASSIFICATION	3.051334962975139E-8	DEFECT
// for any content prefix to URI mapping could be in namespace context	WITHOUT_CLASSIFICATION	0.999135406978898	WITHOUT_CLASSIFICATION	8.645930211018739E-4	DEFECT
// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //	WITHOUT_CLASSIFICATION	0.9999999375925074	WITHOUT_CLASSIFICATION	6.240749265285322E-8	DEFECT
// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //	WITHOUT_CLASSIFICATION	0.9999972395041319	WITHOUT_CLASSIFICATION	2.7604958681005677E-6	DEFECT
// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //	WITHOUT_CLASSIFICATION	0.9999961807705443	WITHOUT_CLASSIFICATION	3.8192294556969425E-6	DEFECT
// If we are substituting an EAttribute for an EReference... //	WITHOUT_CLASSIFICATION	0.9999973529409907	WITHOUT_CLASSIFICATION	2.6470590092641158E-6	DEFECT
// Create an simple any type wrapper for the attribute value and use that with the EReference. //	WITHOUT_CLASSIFICATION	0.9999978166080564	WITHOUT_CLASSIFICATION	2.1833919435443383E-6	DEFECT
// Make sure that the list will appear to be set to be empty. //	WITHOUT_CLASSIFICATION	0.9999963378601916	WITHOUT_CLASSIFICATION	3.662139808384324E-6	DEFECT
// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>	WITHOUT_CLASSIFICATION	0.999997675372795	WITHOUT_CLASSIFICATION	2.324627204874675E-6	DEFECT
// since xmlns="" is default declaration, remove ""->empty_URI mapping	WITHOUT_CLASSIFICATION	0.9999963266625923	WITHOUT_CLASSIFICATION	3.673337407724198E-6	DEFECT
// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)	WITHOUT_CLASSIFICATION	0.999999998947191	WITHOUT_CLASSIFICATION	1.0528089163101046E-9	DEFECT
// record duplicate declaration for a given prefix (#3)	WITHOUT_CLASSIFICATION	0.9999996921522484	WITHOUT_CLASSIFICATION	3.078477515111806E-7	DEFECT
// recording a first declaration for a given prefix	WITHOUT_CLASSIFICATION	0.9999997426432319	WITHOUT_CLASSIFICATION	2.573567680506441E-7	DEFECT
// extend the array, if necessary	WITHOUT_CLASSIFICATION	0.999999755448578	WITHOUT_CLASSIFICATION	2.4455142191003115E-7	DEFECT
// push context	WITHOUT_CLASSIFICATION	0.9999985140788687	WITHOUT_CLASSIFICATION	1.4859211312553215E-6	DEFECT
// resize array, if needed	WITHOUT_CLASSIFICATION	0.9999998875535772	WITHOUT_CLASSIFICATION	1.1244642290453769E-7	DEFECT
// bind prefix to uri in current context	WITHOUT_CLASSIFICATION	0.9999871306014471	WITHOUT_CLASSIFICATION	1.2869398552972732E-5	DEFECT
// find prefix in current context	WITHOUT_CLASSIFICATION	0.9999730852895418	WITHOUT_CLASSIFICATION	2.6914710458211494E-5	DEFECT
// prefix not found	WITHOUT_CLASSIFICATION	0.9999771942165621	WITHOUT_CLASSIFICATION	2.2805783438020108E-5	DEFECT
// find uri in current context	WITHOUT_CLASSIFICATION	0.9999888736321546	WITHOUT_CLASSIFICATION	1.1126367845453651E-5	DEFECT
// uri not found	WITHOUT_CLASSIFICATION	0.9999777614942318	WITHOUT_CLASSIFICATION	2.2238505768264447E-5	DEFECT
// getDeclaredPrefixAt(int):String	WITHOUT_CLASSIFICATION	0.9999900556302787	WITHOUT_CLASSIFICATION	9.944369721249596E-6	DEFECT
/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */	WITHOUT_CLASSIFICATION	0.9999973875294269	WITHOUT_CLASSIFICATION	2.6124705732060567E-6	DEFECT
// Look for a matching element in the specified packages if there are any. //	WITHOUT_CLASSIFICATION	0.9999971421614953	WITHOUT_CLASSIFICATION	2.8578385046286055E-6	DEFECT
// Look for a substitution group feature in the feature's containing class' containing package. //	WITHOUT_CLASSIFICATION	0.9999999694562702	WITHOUT_CLASSIFICATION	3.054372974257309E-8	DEFECT
// Look for a substitution group feature in the classifier's containing package. //	WITHOUT_CLASSIFICATION	0.9999999846239274	WITHOUT_CLASSIFICATION	1.537607269671305E-8	DEFECT
// Look for a substitution group feature in the additional packages. //	WITHOUT_CLASSIFICATION	0.9999990433674553	WITHOUT_CLASSIFICATION	9.566325446913229E-7	DEFECT
// Process the super types if that's been specified. //	WITHOUT_CLASSIFICATION	0.9999999503664958	WITHOUT_CLASSIFICATION	4.963350427071432E-8	DEFECT
// XMIHandler	WITHOUT_CLASSIFICATION	0.9999864234136211	WITHOUT_CLASSIFICATION	1.3576586379047811E-5	DEFECT
// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation	WITHOUT_CLASSIFICATION	0.9999956379937094	WITHOUT_CLASSIFICATION	4.362006290649566E-6	DEFECT
// set serialization options	WITHOUT_CLASSIFICATION	0.999999937158841	WITHOUT_CLASSIFICATION	6.284115897181598E-8	DEFECT
// If we can't create a temp file then we have to ignore the option.	WITHOUT_CLASSIFICATION	0.9999999402571271	WITHOUT_CLASSIFICATION	5.97428729100605E-8	DEFECT
// DOM serialization	WITHOUT_CLASSIFICATION	0.9999978370819501	WITHOUT_CLASSIFICATION	2.162918049856473E-6	DEFECT
// caching turned on by the user	WITHOUT_CLASSIFICATION	0.9999971133201725	WITHOUT_CLASSIFICATION	2.8866798275927202E-6	DEFECT
//no caching	WITHOUT_CLASSIFICATION	0.9999860722902858	WITHOUT_CLASSIFICATION	1.3927709714162972E-5	DEFECT
// If there is no field, then we can't do this.	WITHOUT_CLASSIFICATION	0.9999846129992508	WITHOUT_CLASSIFICATION	1.5387000749208303E-5	DEFECT
// Entities aren't supported for DOM.	WITHOUT_CLASSIFICATION	0.9995067041323734	WITHOUT_CLASSIFICATION	4.932958676265198E-4	DEFECT
// this is a root element	WITHOUT_CLASSIFICATION	0.999966039673746	WITHOUT_CLASSIFICATION	3.396032625397261E-5	DEFECT
// Process XML attributes	WITHOUT_CLASSIFICATION	0.9999996693233673	WITHOUT_CLASSIFICATION	3.306766327981002E-7	DEFECT
// it's intentional to keep going	WITHOUT_CLASSIFICATION	0.999999173753922	WITHOUT_CLASSIFICATION	8.262460780811619E-7	DEFECT
// It's intentional to keep going.	WITHOUT_CLASSIFICATION	0.9999983391708088	WITHOUT_CLASSIFICATION	1.6608291911554047E-6	DEFECT
// Process XML elements	WITHOUT_CLASSIFICATION	0.9999995861071582	WITHOUT_CLASSIFICATION	4.138928418378952E-7	DEFECT
// for performance reasons saveNil and saveElement are not used	WITHOUT_CLASSIFICATION	0.9999990714496305	WITHOUT_CLASSIFICATION	9.285503695423224E-7	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999987800167923	WITHOUT_CLASSIFICATION	1.2199832076827659E-6	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9972382742504778	WITHOUT_CLASSIFICATION	0.0027617257495221323	DEFECT
// Produce the supplemental character as an entity	WITHOUT_CLASSIFICATION	0.9999996613718193	WITHOUT_CLASSIFICATION	3.386281806909746E-7	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9998685757263321	WITHOUT_CLASSIFICATION	1.3142427366793274E-4	DEFECT
// value[outputPos];	WITHOUT_CLASSIFICATION	0.9999987800167923	WITHOUT_CLASSIFICATION	1.2199832076827659E-6	DEFECT
// Go back and add all the XMLNS stuff. //	WITHOUT_CLASSIFICATION	0.999957499244058	WITHOUT_CLASSIFICATION	4.2500755942066895E-5	DEFECT
// First try to see if this package's implementation class has an eInstance. //	WITHOUT_CLASSIFICATION	0.9999979504569467	WITHOUT_CLASSIFICATION	2.049543053312722E-6	DEFECT
// Check if it's an anonymous type. //	WITHOUT_CLASSIFICATION	0.9999998561639186	WITHOUT_CLASSIFICATION	1.4383608132802976E-7	DEFECT
// We only get here if we should do this. //	WITHOUT_CLASSIFICATION	0.9999341950524621	WITHOUT_CLASSIFICATION	6.580494753794768E-5	DEFECT
// 2^N // 2^N-1    	WITHOUT_CLASSIFICATION	0.9999838010839889	WITHOUT_CLASSIFICATION	1.6198916011096266E-5	DEFECT
// Every codepoint is supported! 	WITHOUT_CLASSIFICATION	0.9972382742504778	WITHOUT_CLASSIFICATION	0.0027617257495221323	DEFECT
// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:	WITHOUT_CLASSIFICATION	0.9998685757263321	WITHOUT_CLASSIFICATION	1.3142427366793274E-4	DEFECT
/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */	WITHOUT_CLASSIFICATION	0.9999980401872692	WITHOUT_CLASSIFICATION	1.9598127308255887E-6	DEFECT
// We not sure the encoding supports this code point, so we write it as a character entity reference.	WITHOUT_CLASSIFICATION	0.9999945239644984	WITHOUT_CLASSIFICATION	5.476035501654873E-6	DEFECT
/*     *  Convert:     *  \n to line separator     */	WITHOUT_CLASSIFICATION	0.9999981064157212	WITHOUT_CLASSIFICATION	1.8935842788208428E-6	DEFECT
// continue with default processing	WITHOUT_CLASSIFICATION	0.9999999494678993	WITHOUT_CLASSIFICATION	5.053210084802206E-8	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999896696741218	WITHOUT_CLASSIFICATION	1.0330325878197055E-5	DEFECT
// write doctype	WITHOUT_CLASSIFICATION	0.9999946164793092	WITHOUT_CLASSIFICATION	5.383520690828265E-6	DEFECT
// Avoid a function call... //	WITHOUT_CLASSIFICATION	0.9976447211047992	WITHOUT_CLASSIFICATION	0.0023552788952008654	DEFECT
// create dummy documentElement	WITHOUT_CLASSIFICATION	0.9999991702693315	WITHOUT_CLASSIFICATION	8.297306684593934E-7	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999972475110025	WITHOUT_CLASSIFICATION	2.7524889974966947E-6	DEFECT
// no property	WITHOUT_CLASSIFICATION	0.9999972475110025	WITHOUT_CLASSIFICATION	2.7524889974966947E-6	DEFECT
// boolean not	WITHOUT_CLASSIFICATION	0.999999266209895	WITHOUT_CLASSIFICATION	7.337901049178207E-7	DEFECT
// ownedProperty???	WITHOUT_CLASSIFICATION	0.9999925952296103	WITHOUT_CLASSIFICATION	7.404770389719418E-6	DEFECT
// We will use an xmi:Extension element for these	WITHOUT_CLASSIFICATION	0.9999984849543205	WITHOUT_CLASSIFICATION	1.5150456795020122E-6	DEFECT
// set parser features and properties	WITHOUT_CLASSIFICATION	0.9999712803695825	WITHOUT_CLASSIFICATION	2.871963041742941E-5	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999660903053	WITHOUT_CLASSIFICATION	3.3909694784460406E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998762952466	WITHOUT_CLASSIFICATION	1.237047533777149E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999992245098178	WITHOUT_CLASSIFICATION	7.75490182166597E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999992245098178	WITHOUT_CLASSIFICATION	7.75490182166597E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999829356381	WITHOUT_CLASSIFICATION	1.7064361898045296E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999997607084252	WITHOUT_CLASSIFICATION	2.392915746706051E-7	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999997607084252	WITHOUT_CLASSIFICATION	2.392915746706051E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999849400648185	WITHOUT_CLASSIFICATION	1.5059935181373625E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996138216523	WITHOUT_CLASSIFICATION	3.861783478063688E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996138216523	WITHOUT_CLASSIFICATION	3.861783478063688E-7	DEFECT
// Create enums	WITHOUT_CLASSIFICATION	0.99999955321197	WITHOUT_CLASSIFICATION	4.4678802994924626E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998949513081	WITHOUT_CLASSIFICATION	1.0504869187685939E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999999973885357	WITHOUT_CLASSIFICATION	2.611464303361549E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995751368276	WITHOUT_CLASSIFICATION	4.2486317237552965E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999966882499354	WITHOUT_CLASSIFICATION	3.31175006461721E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999987446375067	WITHOUT_CLASSIFICATION	1.2553624931933802E-6	DEFECT
// Initialize enums and add enum literals	WITHOUT_CLASSIFICATION	0.9999989995496296	WITHOUT_CLASSIFICATION	1.0004503704205164E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998595120936	WITHOUT_CLASSIFICATION	1.404879063273303E-7	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999992140582608	WITHOUT_CLASSIFICATION	7.859417393441835E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999995530390813	WITHOUT_CLASSIFICATION	4.469609187131973E-7	DEFECT
// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");	WITHOUT_CLASSIFICATION	0.9999620351914589	WITHOUT_CLASSIFICATION	3.7964808541129026E-5	DEFECT
// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi	WITHOUT_CLASSIFICATION	0.9998238107692239	WITHOUT_CLASSIFICATION	1.7618923077614517E-4	DEFECT
// no property // no property // no property	WITHOUT_CLASSIFICATION	0.9999938980304609	WITHOUT_CLASSIFICATION	6.1019695389878696E-6	DEFECT
// no property // no property	WITHOUT_CLASSIFICATION	0.9999980753343554	WITHOUT_CLASSIFICATION	1.92466564462434E-6	DEFECT
//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //	WITHOUT_CLASSIFICATION	0.9999759094765733	WITHOUT_CLASSIFICATION	2.4090523426756644E-5	DEFECT
// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //	WITHOUT_CLASSIFICATION	0.9999999953788387	WITHOUT_CLASSIFICATION	4.621161276065184E-9	DEFECT
// register default options	WITHOUT_CLASSIFICATION	0.9999999986445114	WITHOUT_CLASSIFICATION	1.3554886666676108E-9	DEFECT
/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */	WITHOUT_CLASSIFICATION	0.9999999976690944	WITHOUT_CLASSIFICATION	2.3309055086440436E-9	DEFECT
// Assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999923285425771	WITHOUT_CLASSIFICATION	7.671457422773192E-6	DEFECT
//XMLNamespaceFactory	WITHOUT_CLASSIFICATION	0.9999980010234054	WITHOUT_CLASSIFICATION	1.9989765946087065E-6	DEFECT
// DocumentRoot	WITHOUT_CLASSIFICATION	0.9999983177636862	WITHOUT_CLASSIFICATION	1.682236313855334E-6	DEFECT
//XMLNamespacePackage	WITHOUT_CLASSIFICATION	0.9999991303826768	WITHOUT_CLASSIFICATION	8.696173231333324E-7	DEFECT
//SpaceType	WITHOUT_CLASSIFICATION	0.9999944790115497	WITHOUT_CLASSIFICATION	5.52098845022672E-6	DEFECT
// http:///org/eclipse/emf/ecore/util/ExtendedMetaData	WITHOUT_CLASSIFICATION	0.9999956176121165	WITHOUT_CLASSIFICATION	4.382387883431576E-6	DEFECT
//XMLNamespacePackageImpl	WITHOUT_CLASSIFICATION	0.9999975377348019	WITHOUT_CLASSIFICATION	2.46226519800277E-6	DEFECT
//XMLNamespaceDocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999942851675687	WITHOUT_CLASSIFICATION	5.7148324312707764E-6	DEFECT
//XMLNamespaceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999971817977474	WITHOUT_CLASSIFICATION	2.818202252475252E-6	DEFECT
//XMLNamespaceValidator	WITHOUT_CLASSIFICATION	0.9999978793218915	WITHOUT_CLASSIFICATION	2.1206781084338406E-6	DEFECT
// AnyType	WITHOUT_CLASSIFICATION	0.9999863526042643	WITHOUT_CLASSIFICATION	1.3647395735785473E-5	DEFECT
// SimpleAnyType	WITHOUT_CLASSIFICATION	0.9999968071021599	WITHOUT_CLASSIFICATION	3.192897840105603E-6	DEFECT
// ProcessingInstructionType	WITHOUT_CLASSIFICATION	0.9999999454797618	WITHOUT_CLASSIFICATION	5.452023814109032E-8	DEFECT
//XMLTypeFactory	WITHOUT_CLASSIFICATION	0.9999738998202127	WITHOUT_CLASSIFICATION	2.6100179787303705E-5	DEFECT
//XMLTypePackage	WITHOUT_CLASSIFICATION	0.9999777376969484	WITHOUT_CLASSIFICATION	2.2262303051579106E-5	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998949513081	WITHOUT_CLASSIFICATION	1.0504869187685939E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999999973885357	WITHOUT_CLASSIFICATION	2.611464303361549E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995751368276	WITHOUT_CLASSIFICATION	4.2486317237552965E-7	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999987446375067	WITHOUT_CLASSIFICATION	1.2553624931933802E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999995278526853	WITHOUT_CLASSIFICATION	4.721473147652249E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998595120936	WITHOUT_CLASSIFICATION	1.404879063273303E-7	DEFECT
// Create data types	WITHOUT_CLASSIFICATION	0.9999992140582608	WITHOUT_CLASSIFICATION	7.859417393441835E-7	DEFECT
// Initialize data types	WITHOUT_CLASSIFICATION	0.9999995530390813	WITHOUT_CLASSIFICATION	4.469609187131973E-7	DEFECT
// {	WITHOUT_CLASSIFICATION	0.9999791573808118	WITHOUT_CLASSIFICATION	2.0842619188154086E-5	DEFECT
// Create annotations // http://www.w3.org/XML/1998/namespace	WITHOUT_CLASSIFICATION	0.999863903106482	WITHOUT_CLASSIFICATION	1.3609689351814057E-4	DEFECT
// Don't create anything.	WITHOUT_CLASSIFICATION	0.9999953708871966	WITHOUT_CLASSIFICATION	4.62911280340665E-6	DEFECT
//XMLTypePackageImpl	WITHOUT_CLASSIFICATION	0.9999542668062599	WITHOUT_CLASSIFICATION	4.573319374009012E-5	DEFECT
//AnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999396387090914	WITHOUT_CLASSIFICATION	6.0361290908566876E-5	DEFECT
//ProcessingInstructionTypeImpl	WITHOUT_CLASSIFICATION	0.9999982748194687	WITHOUT_CLASSIFICATION	1.7251805312503093E-6	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999998808943407	WITHOUT_CLASSIFICATION	1.1910565943501354E-7	DEFECT
// do not validate on load. Check validity using Diagnostician.	WITHOUT_CLASSIFICATION	0.9999998808943407	WITHOUT_CLASSIFICATION	1.1910565943501354E-7	DEFECT
//XMLTypeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999733023926107	WITHOUT_CLASSIFICATION	2.6697607389347723E-5	DEFECT
//DocumentRootImpl	WITHOUT_CLASSIFICATION	0.9999539665539653	WITHOUT_CLASSIFICATION	4.603344603461048E-5	DEFECT
//SimpleAnyTypeImpl	WITHOUT_CLASSIFICATION	0.9999551478509592	WITHOUT_CLASSIFICATION	4.4852149040761303E-5	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999983582878343	WITHOUT_CLASSIFICATION	1.6417121656860508E-6	DEFECT
//System.err.println("Starts at "+index);	WITHOUT_CLASSIFICATION	0.9999983582878343	WITHOUT_CLASSIFICATION	1.6417121656860508E-6	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999840924933091	WITHOUT_CLASSIFICATION	1.590750669094456E-5	DEFECT
// ================================================================	WITHOUT_CLASSIFICATION	0.9999840924933091	WITHOUT_CLASSIFICATION	1.590750669094456E-5	DEFECT
// Skips a white space.	WITHOUT_CLASSIFICATION	0.999999918190168	WITHOUT_CLASSIFICATION	8.180983197009851E-8	DEFECT
// Skips characters between '#' and a line end.	WITHOUT_CLASSIFICATION	0.9999998573790685	WITHOUT_CLASSIFICATION	1.4262093149682647E-7	DEFECT
// Strips an escaped white space.	WITHOUT_CLASSIFICATION	0.999999921864776	WITHOUT_CLASSIFICATION	7.813522390398643E-8	DEFECT
// Other escaped character.	WITHOUT_CLASSIFICATION	0.9999999979594079	WITHOUT_CLASSIFICATION	2.0405922142003152E-9	DEFECT
// As is.	WITHOUT_CLASSIFICATION	0.999931602383711	WITHOUT_CLASSIFICATION	6.839761628905426E-5	DEFECT
// ret.next is null.	WITHOUT_CLASSIFICATION	0.9999667349350737	WITHOUT_CLASSIFICATION	3.3265064926328515E-5	DEFECT
// {n}	WITHOUT_CLASSIFICATION	0.9999782695369002	WITHOUT_CLASSIFICATION	2.173046309980929E-5	DEFECT
// X{2,6} -> XX(X(X(XX?)?)?)?	WITHOUT_CLASSIFICATION	0.9999161480859305	WITHOUT_CLASSIFICATION	8.385191406950189E-5	DEFECT
// Token.CLOSURE	WITHOUT_CLASSIFICATION	0.9999847200861681	WITHOUT_CLASSIFICATION	1.5279913831949748E-5	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9997265716640416	WITHOUT_CLASSIFICATION	2.73428335958401E-4	DEFECT
//System.err.println("DEBUG: matchEnd="+matchEnd);	WITHOUT_CLASSIFICATION	0.9997265716640416	WITHOUT_CLASSIFICATION	2.73428335958401E-4	DEFECT
/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */	WITHOUT_CLASSIFICATION	0.9951090530136856	WITHOUT_CLASSIFICATION	0.004890946986314387	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9989009445650585	WITHOUT_CLASSIFICATION	0.0010990554349414657	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9989009445650585	WITHOUT_CLASSIFICATION	0.0010990554349414657	DEFECT
//System.err.println("DEBUG: fixed-only: "+this.fixedString);	WITHOUT_CLASSIFICATION	0.9989009445650585	WITHOUT_CLASSIFICATION	0.0010990554349414657	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999494242244457	WITHOUT_CLASSIFICATION	5.057577555435477E-5	DEFECT
/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */	WITHOUT_CLASSIFICATION	0.9999494242244457	WITHOUT_CLASSIFICATION	5.057577555435477E-5	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999974566759605	WITHOUT_CLASSIFICATION	2.543324039399828E-6	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999974566759605	WITHOUT_CLASSIFICATION	2.543324039399828E-6	DEFECT
//System.err.println("Non-match in fixed-string search.");	WITHOUT_CLASSIFICATION	0.9999974566759605	WITHOUT_CLASSIFICATION	2.543324039399828E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999989666650444	WITHOUT_CLASSIFICATION	1.03333495566432E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999989666650444	WITHOUT_CLASSIFICATION	1.03333495566432E-6	DEFECT
/*           * Checks whether the expression starts with ".*".           */	WITHOUT_CLASSIFICATION	0.9999989666650444	WITHOUT_CLASSIFICATION	1.03333495566432E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.999999999918385	WITHOUT_CLASSIFICATION	8.161500082617916E-11	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.999999999918385	WITHOUT_CLASSIFICATION	8.161500082617916E-11	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999861028131757	WITHOUT_CLASSIFICATION	1.3897186824412009E-5	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999861028131757	WITHOUT_CLASSIFICATION	1.3897186824412009E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999988921903017	WITHOUT_CLASSIFICATION	1.1078096982674691E-6	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999988921903017	WITHOUT_CLASSIFICATION	1.1078096982674691E-6	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999838748399	WITHOUT_CLASSIFICATION	1.6125160013714226E-8	DEFECT
// Internal use only. // The @ always matches line beginnings.	WITHOUT_CLASSIFICATION	0.9999999838748399	WITHOUT_CLASSIFICATION	1.6125160013714226E-8	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999997871284484	WITHOUT_CLASSIFICATION	2.1287155171673518E-7	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999997871284484	WITHOUT_CLASSIFICATION	2.1287155171673518E-7	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999913573649057	WITHOUT_CLASSIFICATION	8.642635094283766E-6	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999913573649057	WITHOUT_CLASSIFICATION	8.642635094283766E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999976106237148	WITHOUT_CLASSIFICATION	2.3893762851144814E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999976106237148	WITHOUT_CLASSIFICATION	2.3893762851144814E-6	DEFECT
/*           * Optimization against the first character.           */	WITHOUT_CLASSIFICATION	0.999999999918385	WITHOUT_CLASSIFICATION	8.161500082617916E-11	DEFECT
//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);	WITHOUT_CLASSIFICATION	0.9999861028131757	WITHOUT_CLASSIFICATION	1.3897186824412009E-5	DEFECT
/*           * Straightforward matching.           */	WITHOUT_CLASSIFICATION	0.9999988921903017	WITHOUT_CLASSIFICATION	1.1078096982674691E-6	DEFECT
// switch anchor type	WITHOUT_CLASSIFICATION	0.9999997871284484	WITHOUT_CLASSIFICATION	2.1287155171673518E-7	DEFECT
// ********	WITHOUT_CLASSIFICATION	0.9999913573649057	WITHOUT_CLASSIFICATION	8.642635094283766E-6	DEFECT
/*                       * Saves current position to avoid                       * zero-width repeats.                       */	WITHOUT_CLASSIFICATION	0.9999976106237148	WITHOUT_CLASSIFICATION	2.3893762851144814E-6	DEFECT
// "w"	WITHOUT_CLASSIFICATION	0.9999833718651712	WITHOUT_CLASSIFICATION	1.662813482884334E-5	DEFECT
// Op.CHAR	WITHOUT_CLASSIFICATION	0.9999965285380393	WITHOUT_CLASSIFICATION	3.4714619606186104E-6	DEFECT
//+this.fixedString	WITHOUT_CLASSIFICATION	0.9999926237346712	WITHOUT_CLASSIFICATION	7.376265328794962E-6	DEFECT
// This pattern has a fixed string of which length is more than one.	WITHOUT_CLASSIFICATION	0.9997713914208007	WITHOUT_CLASSIFICATION	2.286085791992763E-4	DEFECT
// Cf // Mn // Mc	WITHOUT_CLASSIFICATION	0.9999912588158997	WITHOUT_CLASSIFICATION	8.741184100232815E-6	DEFECT
// "u"	WITHOUT_CLASSIFICATION	0.9999916388952022	WITHOUT_CLASSIFICATION	8.361104797805716E-6	DEFECT
/*    public ParseException(String mes) {        this(mes, -1);    }    */	WITHOUT_CLASSIFICATION	0.9999999580216273	WITHOUT_CLASSIFICATION	4.197837254316505E-8	DEFECT
// L // L // L // L // L // N // N // N // Mc	WITHOUT_CLASSIFICATION	0.9999970342833049	WITHOUT_CLASSIFICATION	2.965716695078046E-6	DEFECT
// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)	WITHOUT_CLASSIFICATION	0.9999772042036487	WITHOUT_CLASSIFICATION	2.279579635140035E-5	DEFECT
// Legacy word characters	WITHOUT_CLASSIFICATION	0.9999997453248828	WITHOUT_CLASSIFICATION	2.5467511728032335E-7	DEFECT
// for UNION	WITHOUT_CLASSIFICATION	0.9999967692113417	WITHOUT_CLASSIFICATION	3.230788658213919E-6	DEFECT
//System.err.println("Creates UnionOp");	WITHOUT_CLASSIFICATION	0.9999997588492466	WITHOUT_CLASSIFICATION	2.4115075335875783E-7	DEFECT
// ModifierOp	WITHOUT_CLASSIFICATION	0.9999978539232699	WITHOUT_CLASSIFICATION	2.1460767301337153E-6	DEFECT
// for CLOSURE, QUESTION	WITHOUT_CLASSIFICATION	0.999999584276057	WITHOUT_CLASSIFICATION	4.1572394300280175E-7	DEFECT
// for UNIoN	WITHOUT_CLASSIFICATION	0.9999953337827536	WITHOUT_CLASSIFICATION	4.66621724631784E-6	DEFECT
// STRING	WITHOUT_CLASSIFICATION	0.9999940251402916	WITHOUT_CLASSIFICATION	5.974859708542225E-6	DEFECT
// RANGE, NRANGE	WITHOUT_CLASSIFICATION	0.9999596902004255	WITHOUT_CLASSIFICATION	4.0309799574508474E-5	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.999979654612171	WITHOUT_CLASSIFICATION	2.0345387829093926E-5	DEFECT
// for RANGE or NRANGE	WITHOUT_CLASSIFICATION	0.9999948435232913	WITHOUT_CLASSIFICATION	5.156476708811563E-6	DEFECT
//System.err.println("Token#addRange(): "+start+" "+end);	WITHOUT_CLASSIFICATION	0.999782932400579	WITHOUT_CLASSIFICATION	2.1706759942084753E-4	DEFECT
//System.err.println("Do sorting: "+this.ranges.length);	WITHOUT_CLASSIFICATION	0.9999996155888808	WITHOUT_CLASSIFICATION	3.8441111907225013E-7	DEFECT
// Index of writing point // Index of processing point	WITHOUT_CLASSIFICATION	0.9999967465537397	WITHOUT_CLASSIFICATION	3.253446260269723E-6	DEFECT
//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);	WITHOUT_CLASSIFICATION	0.9999979024084048	WITHOUT_CLASSIFICATION	2.097591595187443E-6	DEFECT
// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999970357708079	WITHOUT_CLASSIFICATION	2.964229192098889E-6	DEFECT
// src:    o--------o // sub:  o------------o // res: empty // Reuse sub	WITHOUT_CLASSIFICATION	0.9999899452464466	WITHOUT_CLASSIFICATION	1.005475355346836E-5	DEFECT
// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)	WITHOUT_CLASSIFICATION	0.9999682937889374	WITHOUT_CLASSIFICATION	3.1706211062647324E-5	DEFECT
// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub	WITHOUT_CLASSIFICATION	0.9999752765998569	WITHOUT_CLASSIFICATION	2.4723400143242725E-5	DEFECT
// Not overlapped // src:          o-----o // sub: o----o	WITHOUT_CLASSIFICATION	0.9999983095037313	WITHOUT_CLASSIFICATION	1.6904962687841073E-6	DEFECT
// this.ranges is sorted and compacted.	WITHOUT_CLASSIFICATION	0.9999563551037941	WITHOUT_CLASSIFICATION	4.364489620587969E-5	DEFECT
// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2	WITHOUT_CLASSIFICATION	0.9999977399360005	WITHOUT_CLASSIFICATION	2.2600639996304086E-6	DEFECT
// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o	WITHOUT_CLASSIFICATION	0.9999966750889057	WITHOUT_CLASSIFICATION	3.3249110944336944E-6	DEFECT
// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2	WITHOUT_CLASSIFICATION	0.9999612843774628	WITHOUT_CLASSIFICATION	3.8715622537310206E-5	DEFECT
// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999950760744657	WITHOUT_CLASSIFICATION	4.923925534285738E-6	DEFECT
// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1	WITHOUT_CLASSIFICATION	0.9999950760744657	WITHOUT_CLASSIFICATION	4.923925534285738E-6	DEFECT
// Not overlapped // src1:          o-----o // src2: o----o	WITHOUT_CLASSIFICATION	0.9999968972649611	WITHOUT_CLASSIFICATION	3.1027350388529124E-6	DEFECT
// 32 is the number of bits in `int'.	WITHOUT_CLASSIFICATION	0.999997765212872	WITHOUT_CLASSIFICATION	2.234787127966997E-6	DEFECT
// s&0x1f : 0-31	WITHOUT_CLASSIFICATION	0.9999036032568221	WITHOUT_CLASSIFICATION	9.639674317783082E-5	DEFECT
// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class	WITHOUT_CLASSIFICATION	0.999996107871995	WITHOUT_CLASSIFICATION	3.892128005024254E-6	DEFECT
//this.setLocale(Locale.getDefault());	WITHOUT_CLASSIFICATION	0.9999999701094169	WITHOUT_CLASSIFICATION	2.989058316630773E-8	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999998294158696	WITHOUT_CLASSIFICATION	1.7058413028291158E-7	DEFECT
// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.	WITHOUT_CLASSIFICATION	0.9999799267057718	WITHOUT_CLASSIFICATION	2.0073294228178685E-5	DEFECT
// Through down	WITHOUT_CLASSIFICATION	0.9999076439638188	WITHOUT_CLASSIFICATION	9.235603618110731E-5	DEFECT
// Options	WITHOUT_CLASSIFICATION	0.9999985862069961	WITHOUT_CLASSIFICATION	1.4137930038802507E-6	DEFECT
// conditional // this.offsets points the next of '('.	WITHOUT_CLASSIFICATION	0.99989185658337	WITHOUT_CLASSIFICATION	1.0814341662995428E-4	DEFECT
// '|'	WITHOUT_CLASSIFICATION	0.9999853184892404	WITHOUT_CLASSIFICATION	1.4681510759603395E-5	DEFECT
//tok = Token.createConcat(tok, this.parseFactor());	WITHOUT_CLASSIFICATION	0.9999976739278401	WITHOUT_CLASSIFICATION	2.326072159871419E-6	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999760094847793	WITHOUT_CLASSIFICATION	2.399051522064938E-5	DEFECT
// ----------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999760094847793	WITHOUT_CLASSIFICATION	2.399051522064938E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999828268481598	WITHOUT_CLASSIFICATION	1.717315184031428E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999828268481598	WITHOUT_CLASSIFICATION	1.717315184031428E-5	DEFECT
// ')'	WITHOUT_CLASSIFICATION	0.9999828268481598	WITHOUT_CLASSIFICATION	1.717315184031428E-5	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9997833156331473	WITHOUT_CLASSIFICATION	2.166843668526207E-4	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999686484023175	WITHOUT_CLASSIFICATION	3.13515976825241E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999936717963132	WITHOUT_CLASSIFICATION	6.328203686817505E-6	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999936717963132	WITHOUT_CLASSIFICATION	6.328203686817505E-6	DEFECT
// this.offset points the next of '('	WITHOUT_CLASSIFICATION	0.9999883339280692	WITHOUT_CLASSIFICATION	1.1666071930809155E-5	DEFECT
// Parses a condition.	WITHOUT_CLASSIFICATION	0.9999692622314286	WITHOUT_CLASSIFICATION	3.073776857146366E-5	DEFECT
// Points '('.	WITHOUT_CLASSIFICATION	0.9999991120345547	WITHOUT_CLASSIFICATION	8.879654453846346E-7	DEFECT
// Parses yes/no-patterns.	WITHOUT_CLASSIFICATION	0.9999976167516919	WITHOUT_CLASSIFICATION	2.3832483081504257E-6	DEFECT
// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'	WITHOUT_CLASSIFICATION	0.9999895944349203	WITHOUT_CLASSIFICATION	1.0405565079640652E-5	DEFECT
// '-' or ':'?	WITHOUT_CLASSIFICATION	0.9999821273637406	WITHOUT_CLASSIFICATION	1.7872636259386395E-5	DEFECT
// ':'?	WITHOUT_CLASSIFICATION	0.9999720542448104	WITHOUT_CLASSIFICATION	2.794575518960321E-5	DEFECT
// such as (?-i)	WITHOUT_CLASSIFICATION	0.9999997589712976	WITHOUT_CLASSIFICATION	2.4102870244615077E-7	DEFECT
// Must be in 0x0040-0x005f	WITHOUT_CLASSIFICATION	0.999999773193101	WITHOUT_CLASSIFICATION	2.2680689901700763E-7	DEFECT
// through down	WITHOUT_CLASSIFICATION	0.9997262367310972	WITHOUT_CLASSIFICATION	2.737632689028154E-4	DEFECT
// this.offset -> next of '{'	WITHOUT_CLASSIFICATION	0.9999969649868613	WITHOUT_CLASSIFICATION	3.035013138694487E-6	DEFECT
// {min,max}	WITHOUT_CLASSIFICATION	0.9999932962663083	WITHOUT_CLASSIFICATION	6.703733691700034E-6	DEFECT
// assume {min,}	WITHOUT_CLASSIFICATION	0.9999998008654792	WITHOUT_CLASSIFICATION	1.991345207271675E-7	DEFECT
//System.err.println("CLOSURE: "+min+", "+max);	WITHOUT_CLASSIFICATION	0.999985192633434	WITHOUT_CLASSIFICATION	1.480736656590075E-5	DEFECT
// '(?:' // '(?(' // (?modifiers ... )	WITHOUT_CLASSIFICATION	0.9999577600019928	WITHOUT_CLASSIFICATION	4.2239998007243314E-5	DEFECT
// Skips '.'	WITHOUT_CLASSIFICATION	0.9999946902687493	WITHOUT_CLASSIFICATION	5.309731250744049E-6	DEFECT
// handle category escape	WITHOUT_CLASSIFICATION	0.9999999679919241	WITHOUT_CLASSIFICATION	3.200807580480134E-8	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999863556290718	WITHOUT_CLASSIFICATION	1.364437092830589E-5	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999853236112681	WITHOUT_CLASSIFICATION	1.4676388731850555E-5	DEFECT
// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)	WITHOUT_CLASSIFICATION	0.9999645099491957	WITHOUT_CLASSIFICATION	3.5490050804271625E-5	DEFECT
// if not shorthands... // Here is no '-'.	WITHOUT_CLASSIFICATION	0.999945206001698	WITHOUT_CLASSIFICATION	5.4793998302050416E-5	DEFECT
//tok.dumpRanges();	WITHOUT_CLASSIFICATION	0.9999968535028521	WITHOUT_CLASSIFICATION	3.1464971479977013E-6	DEFECT
// *** It is not a bug.	WITHOUT_CLASSIFICATION	0.9984236928905487	WITHOUT_CLASSIFICATION	0.0015763071094513326	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999981916017479	WITHOUT_CLASSIFICATION	1.8083982521096964E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999981916017479	WITHOUT_CLASSIFICATION	1.8083982521096964E-6	DEFECT
// for CLOSURE	WITHOUT_CLASSIFICATION	0.9999981916017479	WITHOUT_CLASSIFICATION	1.8083982521096964E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999971180043156	WITHOUT_CLASSIFICATION	2.8819956845088984E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999971180043156	WITHOUT_CLASSIFICATION	2.8819956845088984E-6	DEFECT
// *******	WITHOUT_CLASSIFICATION	0.9999864148176378	WITHOUT_CLASSIFICATION	1.3585182362262709E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999301870474373	WITHOUT_CLASSIFICATION	6.981295256276895E-5	DEFECT
// ***** Really?	WITHOUT_CLASSIFICATION	0.9999301870474373	WITHOUT_CLASSIFICATION	6.981295256276895E-5	DEFECT
// infinity	WITHOUT_CLASSIFICATION	0.9999920756314313	WITHOUT_CLASSIFICATION	7.924368568679192E-6	DEFECT
// When this.child.getMaxLength() < 0, // this returns minus value	WITHOUT_CLASSIFICATION	0.9999973264314926	WITHOUT_CLASSIFICATION	2.673568507467724E-6	DEFECT
// ******	WITHOUT_CLASSIFICATION	0.9999864148176378	WITHOUT_CLASSIFICATION	1.3585182362262709E-5	DEFECT
/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */	WITHOUT_CLASSIFICATION	0.9999999584222353	WITHOUT_CLASSIFICATION	4.1577764619800836E-8	DEFECT
// ****	WITHOUT_CLASSIFICATION	0.9999864148176378	WITHOUT_CLASSIFICATION	1.3585182362262709E-5	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999991604381278	WITHOUT_CLASSIFICATION	8.395618722215111E-7	DEFECT
// **** We can not optimize.	WITHOUT_CLASSIFICATION	0.9999991604381278	WITHOUT_CLASSIFICATION	8.395618722215111E-7	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999760094847793	WITHOUT_CLASSIFICATION	2.399051522064938E-5	DEFECT
//blockNames in UNICODE 3.1 that supported by XML Schema REC             	WITHOUT_CLASSIFICATION	0.9996817653277532	WITHOUT_CLASSIFICATION	3.182346722467132E-4	DEFECT
/*0000..007F;*/	WITHOUT_CLASSIFICATION	0.9994134093398889	WITHOUT_CLASSIFICATION	5.865906601111775E-4	DEFECT
/*0080..00FF;*/	WITHOUT_CLASSIFICATION	0.998766310953954	WITHOUT_CLASSIFICATION	0.001233689046045968	DEFECT
/*0100..017F;*/	WITHOUT_CLASSIFICATION	0.9991345844585982	WITHOUT_CLASSIFICATION	8.654155414018412E-4	DEFECT
/*0180..024F;*/	WITHOUT_CLASSIFICATION	0.9994247723220214	WITHOUT_CLASSIFICATION	5.75227677978465E-4	DEFECT
/*0250..02AF;*/	WITHOUT_CLASSIFICATION	0.9988745385362507	WITHOUT_CLASSIFICATION	0.001125461463749282	DEFECT
/*02B0..02FF;*/	WITHOUT_CLASSIFICATION	0.9985845463584224	WITHOUT_CLASSIFICATION	0.0014154536415776058	DEFECT
/*0300..036F;*/	WITHOUT_CLASSIFICATION	0.9992701820140318	WITHOUT_CLASSIFICATION	7.298179859682604E-4	DEFECT
/*0370..03FF;*/	WITHOUT_CLASSIFICATION	0.9992761152894821	WITHOUT_CLASSIFICATION	7.238847105178679E-4	DEFECT
/*0400..04FF;*/	WITHOUT_CLASSIFICATION	0.9991449319272194	WITHOUT_CLASSIFICATION	8.550680727805729E-4	DEFECT
/*0530..058F;*/	WITHOUT_CLASSIFICATION	0.9992602512502303	WITHOUT_CLASSIFICATION	7.397487497696737E-4	DEFECT
/*0600..06FF;*/	WITHOUT_CLASSIFICATION	0.9993504353538919	WITHOUT_CLASSIFICATION	6.495646461080147E-4	DEFECT
/*0700..074F;*/	WITHOUT_CLASSIFICATION	0.9994692873999043	WITHOUT_CLASSIFICATION	5.307126000957423E-4	DEFECT
/*0780..07BF;*/	WITHOUT_CLASSIFICATION	0.9987702822690754	WITHOUT_CLASSIFICATION	0.0012297177309246248	DEFECT
/*0900..097F;*/	WITHOUT_CLASSIFICATION	0.9990904210193191	WITHOUT_CLASSIFICATION	9.095789806808556E-4	DEFECT
/*0980..09FF;*/	WITHOUT_CLASSIFICATION	0.999220803065941	WITHOUT_CLASSIFICATION	7.791969340589188E-4	DEFECT
/*0A80..0AFF;*/	WITHOUT_CLASSIFICATION	0.9991600068519582	WITHOUT_CLASSIFICATION	8.399931480419058E-4	DEFECT
/*0B00..0B7F;*/	WITHOUT_CLASSIFICATION	0.9983320250083965	WITHOUT_CLASSIFICATION	0.001667974991603472	DEFECT
/*0B80..0BFF;*/	WITHOUT_CLASSIFICATION	0.9984901064936536	WITHOUT_CLASSIFICATION	0.0015098935063464047	DEFECT
/*0C00..0C7F;*/	WITHOUT_CLASSIFICATION	0.9994626922343488	WITHOUT_CLASSIFICATION	5.373077656513324E-4	DEFECT
/*0C80..0CFF;*/	WITHOUT_CLASSIFICATION	0.9995220884626107	WITHOUT_CLASSIFICATION	4.77911537389294E-4	DEFECT
/*0D80..0DFF;*/	WITHOUT_CLASSIFICATION	0.9988797616347828	WITHOUT_CLASSIFICATION	0.0011202383652172384	DEFECT
/*0E00..0E7F;*/	WITHOUT_CLASSIFICATION	0.999028962708472	WITHOUT_CLASSIFICATION	9.710372915279142E-4	DEFECT
/*0E80..0EFF;*/	WITHOUT_CLASSIFICATION	0.9990926827043364	WITHOUT_CLASSIFICATION	9.073172956636334E-4	DEFECT
/*0F00..0FFF;*/	WITHOUT_CLASSIFICATION	0.999112723314834	WITHOUT_CLASSIFICATION	8.872766851659419E-4	DEFECT
/*1000..109F;*/	WITHOUT_CLASSIFICATION	0.9990469234391286	WITHOUT_CLASSIFICATION	9.530765608715043E-4	DEFECT
/*1100..11FF;*/	WITHOUT_CLASSIFICATION	0.9992658449728651	WITHOUT_CLASSIFICATION	7.341550271349001E-4	DEFECT
/*1200..137F;*/	WITHOUT_CLASSIFICATION	0.9985515499331764	WITHOUT_CLASSIFICATION	0.0014484500668236428	DEFECT
/*13A0..13FF;*/	WITHOUT_CLASSIFICATION	0.9993958688700064	WITHOUT_CLASSIFICATION	6.041311299935941E-4	DEFECT
/*1400..167F;*/	WITHOUT_CLASSIFICATION	0.9993895461693906	WITHOUT_CLASSIFICATION	6.104538306094998E-4	DEFECT
/*1680..169F;*/	WITHOUT_CLASSIFICATION	0.999469019009581	WITHOUT_CLASSIFICATION	5.309809904189899E-4	DEFECT
/*1780..17FF;*/	WITHOUT_CLASSIFICATION	0.999151469738123	WITHOUT_CLASSIFICATION	8.485302618770208E-4	DEFECT
/*1800..18AF;*/	WITHOUT_CLASSIFICATION	0.9989671677996808	WITHOUT_CLASSIFICATION	0.0010328322003192736	DEFECT
/*1E00..1EFF;*/	WITHOUT_CLASSIFICATION	0.9990342363375921	WITHOUT_CLASSIFICATION	9.657636624078314E-4	DEFECT
/*1F00..1FFF;*/	WITHOUT_CLASSIFICATION	0.9991894147189182	WITHOUT_CLASSIFICATION	8.105852810817685E-4	DEFECT
/*2070..209F;*/	WITHOUT_CLASSIFICATION	0.9993175663508227	WITHOUT_CLASSIFICATION	6.824336491773179E-4	DEFECT
/*20A0..20CF;*/	WITHOUT_CLASSIFICATION	0.9993665306292263	WITHOUT_CLASSIFICATION	6.334693707735953E-4	DEFECT
/*20D0..20FF;*/	WITHOUT_CLASSIFICATION	0.9986109599158366	WITHOUT_CLASSIFICATION	0.0013890400841633913	DEFECT
/*2100..214F;*/	WITHOUT_CLASSIFICATION	0.9991785591641942	WITHOUT_CLASSIFICATION	8.214408358057724E-4	DEFECT
/*2150..218F;*/	WITHOUT_CLASSIFICATION	0.9990031242507315	WITHOUT_CLASSIFICATION	9.968757492685963E-4	DEFECT
/*2200..22FF;*/	WITHOUT_CLASSIFICATION	0.9982985955554399	WITHOUT_CLASSIFICATION	0.0017014044445601225	DEFECT
/*2300..23FF;*/	WITHOUT_CLASSIFICATION	0.9990490501009445	WITHOUT_CLASSIFICATION	9.509498990555766E-4	DEFECT
/*2400..243F;*/	WITHOUT_CLASSIFICATION	0.9991197607849516	WITHOUT_CLASSIFICATION	8.80239215048575E-4	DEFECT
/*2440..245F;*/	WITHOUT_CLASSIFICATION	0.9991262849038075	WITHOUT_CLASSIFICATION	8.737150961924696E-4	DEFECT
/*2460..24FF;*/	WITHOUT_CLASSIFICATION	0.9995619249395343	WITHOUT_CLASSIFICATION	4.38075060465598E-4	DEFECT
/*2580..259F;*/	WITHOUT_CLASSIFICATION	0.9987399712973876	WITHOUT_CLASSIFICATION	0.001260028702612462	DEFECT
/*25A0..25FF;*/	WITHOUT_CLASSIFICATION	0.9989657400076715	WITHOUT_CLASSIFICATION	0.0010342599923284963	DEFECT
/*2600..26FF;*/	WITHOUT_CLASSIFICATION	0.9992733400028914	WITHOUT_CLASSIFICATION	7.266599971085291E-4	DEFECT
/*2700..27BF;*/	WITHOUT_CLASSIFICATION	0.9983738534367043	WITHOUT_CLASSIFICATION	0.0016261465632957184	DEFECT
/*2800..28FF;*/	WITHOUT_CLASSIFICATION	0.9987994584969161	WITHOUT_CLASSIFICATION	0.0012005415030839012	DEFECT
/*2E80..2EFF;*/	WITHOUT_CLASSIFICATION	0.9989862144980598	WITHOUT_CLASSIFICATION	0.001013785501940185	DEFECT
/*2F00..2FDF;*/	WITHOUT_CLASSIFICATION	0.9987055824609189	WITHOUT_CLASSIFICATION	0.0012944175390811328	DEFECT
/*3000..303F;*/	WITHOUT_CLASSIFICATION	0.9988755050755129	WITHOUT_CLASSIFICATION	0.001124494924487081	DEFECT
/*3040..309F;*/	WITHOUT_CLASSIFICATION	0.9993965728351063	WITHOUT_CLASSIFICATION	6.034271648938128E-4	DEFECT
/*30A0..30FF;*/	WITHOUT_CLASSIFICATION	0.9993191613301159	WITHOUT_CLASSIFICATION	6.808386698840486E-4	DEFECT
/*3100..312F;*/	WITHOUT_CLASSIFICATION	0.9990236329674802	WITHOUT_CLASSIFICATION	9.76367032519756E-4	DEFECT
/*3130..318F;*/	WITHOUT_CLASSIFICATION	0.9993518245822557	WITHOUT_CLASSIFICATION	6.481754177443907E-4	DEFECT
/*31A0..31BF;*/	WITHOUT_CLASSIFICATION	0.9987768908873541	WITHOUT_CLASSIFICATION	0.0012231091126459917	DEFECT
/*3200..32FF;*/	WITHOUT_CLASSIFICATION	0.9983140073050475	WITHOUT_CLASSIFICATION	0.0016859926949524993	DEFECT
/*3300..33FF;*/	WITHOUT_CLASSIFICATION	0.9991652214922659	WITHOUT_CLASSIFICATION	8.347785077340502E-4	DEFECT
/*3400..4DB5;*/	WITHOUT_CLASSIFICATION	0.9972058045805813	WITHOUT_CLASSIFICATION	0.002794195419418728	DEFECT
/*4E00..9FFF;*/	WITHOUT_CLASSIFICATION	0.9991393086078916	WITHOUT_CLASSIFICATION	8.606913921085062E-4	DEFECT
/*A490..A4CF;*/	WITHOUT_CLASSIFICATION	0.9996109985989853	WITHOUT_CLASSIFICATION	3.890014010147958E-4	DEFECT
/*AC00..D7A3;*/	WITHOUT_CLASSIFICATION	0.999224828095832	WITHOUT_CLASSIFICATION	7.751719041680096E-4	DEFECT
/*E000..F8FF;*/	WITHOUT_CLASSIFICATION	0.9987588754027692	WITHOUT_CLASSIFICATION	0.0012411245972308426	DEFECT
/*F900..FAFF;*/	WITHOUT_CLASSIFICATION	0.9989655737395939	WITHOUT_CLASSIFICATION	0.0010344262604061022	DEFECT
/*FB00..FB4F;*/	WITHOUT_CLASSIFICATION	0.9985091759949951	WITHOUT_CLASSIFICATION	0.0014908240050049634	DEFECT
/*FE20..FE2F;*/	WITHOUT_CLASSIFICATION	0.9989448717110817	WITHOUT_CLASSIFICATION	0.0010551282889183732	DEFECT
/*FE30..FE4F;*/	WITHOUT_CLASSIFICATION	0.9994145790381325	WITHOUT_CLASSIFICATION	5.854209618675843E-4	DEFECT
/*FE50..FE6F;*/	WITHOUT_CLASSIFICATION	0.9991589562220423	WITHOUT_CLASSIFICATION	8.410437779576178E-4	DEFECT
/*FE70..FEFE;*/	WITHOUT_CLASSIFICATION	0.9993089071126996	WITHOUT_CLASSIFICATION	6.910928873003069E-4	DEFECT
/*FEFF..FEFF;*/	WITHOUT_CLASSIFICATION	0.9991918077424748	WITHOUT_CLASSIFICATION	8.081922575251957E-4	DEFECT
/*10300..1032F;*/	WITHOUT_CLASSIFICATION	0.9989959686714891	WITHOUT_CLASSIFICATION	0.0010040313285109076	DEFECT
/*10330..1034F;*/	WITHOUT_CLASSIFICATION	0.9993717588703435	WITHOUT_CLASSIFICATION	6.2824112965658E-4	DEFECT
/*10400..1044F;*/	WITHOUT_CLASSIFICATION	0.9992593288780721	WITHOUT_CLASSIFICATION	7.406711219279322E-4	DEFECT
/*1D000..1D0FF;*/	WITHOUT_CLASSIFICATION	0.9987470447062037	WITHOUT_CLASSIFICATION	0.001252955293796298	DEFECT
/*1D100..1D1FF;*/	WITHOUT_CLASSIFICATION	0.9987990762811181	WITHOUT_CLASSIFICATION	0.0012009237188819247	DEFECT
/*20000..2A6D6;*/	WITHOUT_CLASSIFICATION	0.9978806714446731	WITHOUT_CLASSIFICATION	0.0021193285553270332	DEFECT
/*2F800..2FA1F;*/	WITHOUT_CLASSIFICATION	0.9988844534737129	WITHOUT_CLASSIFICATION	0.001115546526287041	DEFECT
/*E0000..E007F;*/	WITHOUT_CLASSIFICATION	0.9993532532613976	WITHOUT_CLASSIFICATION	6.467467386023941E-4	DEFECT
//missing 2 private use add manually	WITHOUT_CLASSIFICATION	0.9999692250694229	WITHOUT_CLASSIFICATION	3.077493057714011E-5	DEFECT
// 84	WITHOUT_CLASSIFICATION	0.9999864901623856	WITHOUT_CLASSIFICATION	1.350983761435678E-5	DEFECT
//build table of Pi values	WITHOUT_CLASSIFICATION	0.9999997652412046	WITHOUT_CLASSIFICATION	2.3475879532341938E-7	DEFECT
//build table of Pf values	WITHOUT_CLASSIFICATION	0.9999997624323228	WITHOUT_CLASSIFICATION	2.3756767716727738E-7	DEFECT
// for all characters	WITHOUT_CLASSIFICATION	0.9999999728177603	WITHOUT_CLASSIFICATION	2.7182239612023476E-8	DEFECT
// Unassigned	WITHOUT_CLASSIFICATION	0.999999809428391	WITHOUT_CLASSIFICATION	1.905716089148077E-7	DEFECT
// TR#18 1.2	WITHOUT_CLASSIFICATION	0.9999905096751247	WITHOUT_CLASSIFICATION	9.490324875212533E-6	DEFECT
// Z	WITHOUT_CLASSIFICATION	0.9999834450963327	WITHOUT_CLASSIFICATION	1.6554903667249125E-5	DEFECT
// Lu Ll Lo Nd	WITHOUT_CLASSIFICATION	0.9999960933617577	WITHOUT_CLASSIFICATION	3.906638242345196E-6	DEFECT
// Perl extension	WITHOUT_CLASSIFICATION	0.9999979280334537	WITHOUT_CLASSIFICATION	2.071966546232587E-6	DEFECT
//this.setLocale(locale);	WITHOUT_CLASSIFICATION	0.9999998294158696	WITHOUT_CLASSIFICATION	1.7058413028291158E-7	DEFECT
// X+ -> XX*	WITHOUT_CLASSIFICATION	0.9997833156331473	WITHOUT_CLASSIFICATION	2.166843668526207E-4	DEFECT
// X? -> X|	WITHOUT_CLASSIFICATION	0.9999686484023175	WITHOUT_CLASSIFICATION	3.13515976825241E-5	DEFECT
// Skips ')'	WITHOUT_CLASSIFICATION	0.9999936717963132	WITHOUT_CLASSIFICATION	6.328203686817505E-6	DEFECT
// '['	WITHOUT_CLASSIFICATION	0.9999863556290718	WITHOUT_CLASSIFICATION	1.364437092830589E-5	DEFECT
// '^'	WITHOUT_CLASSIFICATION	0.9999853236112681	WITHOUT_CLASSIFICATION	1.4676388731850555E-5	DEFECT
// Skips ']'	WITHOUT_CLASSIFICATION	0.999995107289811	WITHOUT_CLASSIFICATION	4.8927101889134275E-6	DEFECT
// for STRING	WITHOUT_CLASSIFICATION	0.9999971180043156	WITHOUT_CLASSIFICATION	2.8819956845088984E-6	DEFECT
// ------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999760094847793	WITHOUT_CLASSIFICATION	2.399051522064938E-5	DEFECT
// \pM* // \PM + \pM*	WITHOUT_CLASSIFICATION	0.9999768113659891	WITHOUT_CLASSIFICATION	2.318863401089964E-5	DEFECT
// Lu // Ll // Lo	WITHOUT_CLASSIFICATION	0.999991004852485	WITHOUT_CLASSIFICATION	8.995147515057689E-6	DEFECT
// Lu Ll Lo // Nd	WITHOUT_CLASSIFICATION	0.9999972291275099	WITHOUT_CLASSIFICATION	2.770872490113332E-6	DEFECT
// synchronized // if null	WITHOUT_CLASSIFICATION	0.9999985007710012	WITHOUT_CLASSIFICATION	1.4992289989150109E-6	DEFECT
//DEBUG //System.err.println("isRegisterNonXS: "+name);	WITHOUT_CLASSIFICATION	0.9996115793512772	WITHOUT_CLASSIFICATION	3.88420648722868E-4	DEFECT
// [{ASSIGNED}]-[{M},{C}]	WITHOUT_CLASSIFICATION	0.9999938898742009	WITHOUT_CLASSIFICATION	6.110125799124216E-6	DEFECT
// hangul_medial and hangul_final // extras	WITHOUT_CLASSIFICATION	0.9999996962522523	WITHOUT_CLASSIFICATION	3.0374774769755046E-7	DEFECT
// base_char?	WITHOUT_CLASSIFICATION	0.9999999403655118	WITHOUT_CLASSIFICATION	5.963448819864236E-8	DEFECT
//case 0x0b:  ret = "\\v";  break;	WITHOUT_CLASSIFICATION	0.999979654612171	WITHOUT_CLASSIFICATION	2.0345387829093926E-5	DEFECT
// This is CONCAT, and new child is CONCAT.	WITHOUT_CLASSIFICATION	0.9999933232344628	WITHOUT_CLASSIFICATION	6.676765537327623E-6	DEFECT
// Recursion	WITHOUT_CLASSIFICATION	0.9999967892739868	WITHOUT_CLASSIFICATION	3.2107260131182948E-6	DEFECT
//System.err.println("Merge '"+previous+"' and '"+tok+"'.");	WITHOUT_CLASSIFICATION	0.9999998316763711	WITHOUT_CLASSIFICATION	1.6832362888438198E-7	DEFECT
// Replace previous token by STRING	WITHOUT_CLASSIFICATION	0.9999470579875375	WITHOUT_CLASSIFICATION	5.294201246254234E-5	DEFECT
// Subraction	WITHOUT_CLASSIFICATION	0.9999966820420727	WITHOUT_CLASSIFICATION	3.3179579272509392E-6	DEFECT
// Exit this loop	WITHOUT_CLASSIFICATION	0.9999817050434054	WITHOUT_CLASSIFICATION	1.8294956594537182E-5	DEFECT
// if not shorthands...	WITHOUT_CLASSIFICATION	0.9999738911242021	WITHOUT_CLASSIFICATION	2.6108875797865424E-5	DEFECT
// Here is no '-'.	WITHOUT_CLASSIFICATION	0.9999978785203318	WITHOUT_CLASSIFICATION	2.1214796681745827E-6	DEFECT
// c '-' ']' -> '-' is a single-range.	WITHOUT_CLASSIFICATION	0.9999984861360784	WITHOUT_CLASSIFICATION	1.513863921569986E-6	DEFECT
// if - is at the last position of the group	WITHOUT_CLASSIFICATION	0.9999705474495236	WITHOUT_CLASSIFICATION	2.945255047645527E-5	DEFECT
// LINE FEED U+000A	WITHOUT_CLASSIFICATION	0.9999881562814058	WITHOUT_CLASSIFICATION	1.1843718594146745E-5	DEFECT
// CRRIAGE RETURN U+000D	WITHOUT_CLASSIFICATION	0.9999969153522522	WITHOUT_CLASSIFICATION	3.0846477477363865E-6	DEFECT
// HORIZONTAL TABULATION U+0009	WITHOUT_CLASSIFICATION	0.9999936544501511	WITHOUT_CLASSIFICATION	6.3455498489874905E-6	DEFECT
// return actucal char	WITHOUT_CLASSIFICATION	0.999999956956651	WITHOUT_CLASSIFICATION	4.3043348969803076E-8	DEFECT
// \ + c // backsolidus	WITHOUT_CLASSIFICATION	0.9999995998116988	WITHOUT_CLASSIFICATION	4.0018830115509747E-7	DEFECT
// Found '-' // Is this '-' is a from-to token?? // Skips '-'	WITHOUT_CLASSIFICATION	0.9999531938447943	WITHOUT_CLASSIFICATION	4.680615520567776E-5	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999828593642686	WITHOUT_CLASSIFICATION	1.7140635731511686E-5	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9998876667540773	WITHOUT_CLASSIFICATION	1.1233324592262867E-4	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999996594300005	WITHOUT_CLASSIFICATION	3.4056999951773897E-7	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.999858087695957	WITHOUT_CLASSIFICATION	1.4191230404298966E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999998933024055	WITHOUT_CLASSIFICATION	1.0669759452399726E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999981491133112	WITHOUT_CLASSIFICATION	1.8508866888617109E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999905808858	WITHOUT_CLASSIFICATION	9.419114191004172E-9	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999905808858	WITHOUT_CLASSIFICATION	9.419114191004172E-9	DEFECT
//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero	WITHOUT_CLASSIFICATION	0.9999999618145223	WITHOUT_CLASSIFICATION	3.818547767812895E-8	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.999997529139158	WITHOUT_CLASSIFICATION	2.4708608420641276E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999945538746841	WITHOUT_CLASSIFICATION	5.446125315883518E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9847030389464189	WITHOUT_CLASSIFICATION	0.015296961053581236	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999864834324176	WITHOUT_CLASSIFICATION	1.3516567582400598E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999998366556804	WITHOUT_CLASSIFICATION	1.633443196085265E-7	DEFECT
/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */	WITHOUT_CLASSIFICATION	0.9953977274542668	WITHOUT_CLASSIFICATION	0.004602272545733186	DEFECT
// add IANA to Java encoding mappings.	WITHOUT_CLASSIFICATION	0.9999654734939215	WITHOUT_CLASSIFICATION	3.452650607847169E-5	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999950388083899	WITHOUT_CLASSIFICATION	4.961191610064306E-6	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999745349330204	WITHOUT_CLASSIFICATION	2.546506697973102E-5	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999951580263496	WITHOUT_CLASSIFICATION	4.841973650274567E-6	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999940617920582	WITHOUT_CLASSIFICATION	5.9382079417849396E-6	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999523487970091	WITHOUT_CLASSIFICATION	4.7651202990856696E-5	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999937884916575	WITHOUT_CLASSIFICATION	6.2115083425494725E-6	DEFECT
// putJava2IANAMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999939506873735	WITHOUT_CLASSIFICATION	6.049312626575626E-6	DEFECT
// getJava2IANAMapping(String):String	WITHOUT_CLASSIFICATION	0.9999867852005812	WITHOUT_CLASSIFICATION	1.3214799418871861E-5	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.999996214350005	WITHOUT_CLASSIFICATION	3.785649994923775E-6	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9998789712092935	WITHOUT_CLASSIFICATION	1.2102879070652267E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999647046912642	WITHOUT_CLASSIFICATION	3.529530873575212E-5	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999951061546	WITHOUT_CLASSIFICATION	4.893845413693788E-9	DEFECT
// removeJava2IANAMapping	WITHOUT_CLASSIFICATION	0.9999927408677738	WITHOUT_CLASSIFICATION	7.259132226118499E-6	DEFECT
// class EncodingMap	WITHOUT_CLASSIFICATION	0.9999155446576053	WITHOUT_CLASSIFICATION	8.44553423946747E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999999416906398	WITHOUT_CLASSIFICATION	5.8309360101786485E-8	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999990614366807	WITHOUT_CLASSIFICATION	9.385633192169367E-7	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999993833392952	WITHOUT_CLASSIFICATION	6.166607047103582E-7	DEFECT
// Add ASCII Letters	WITHOUT_CLASSIFICATION	0.9999992514869529	WITHOUT_CLASSIFICATION	7.485130471158304E-7	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999848724548	WITHOUT_CLASSIFICATION	1.5127545172742078E-8	DEFECT
// Add Mark Characters	WITHOUT_CLASSIFICATION	0.9999999681804261	WITHOUT_CLASSIFICATION	3.181957380547934E-8	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999946898434	WITHOUT_CLASSIFICATION	5.310156642675393E-9	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999773797749	WITHOUT_CLASSIFICATION	2.2620225041024938E-8	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999997329367535	WITHOUT_CLASSIFICATION	2.6706324642675265E-7	DEFECT
// just make a copy of the base if spec is empty	WITHOUT_CLASSIFICATION	0.9999999334087533	WITHOUT_CLASSIFICATION	6.65912467804792E-8	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999996178329227	WITHOUT_CLASSIFICATION	3.82167077280428E-7	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999693536876	WITHOUT_CLASSIFICATION	3.0646312399406186E-8	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.999976459703766	WITHOUT_CLASSIFICATION	2.3540296233950478E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999532835873068	WITHOUT_CLASSIFICATION	4.6716412693101526E-5	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999995802160352	WITHOUT_CLASSIFICATION	4.1978396473088175E-7	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999999238455812	WITHOUT_CLASSIFICATION	7.615441871980012E-8	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999991629180085	WITHOUT_CLASSIFICATION	8.370819914516901E-7	DEFECT
// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done	WITHOUT_CLASSIFICATION	0.9999999973853475	WITHOUT_CLASSIFICATION	2.6146525972979164E-9	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999973769971747	WITHOUT_CLASSIFICATION	2.623002825360839E-6	DEFECT
// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6	WITHOUT_CLASSIFICATION	0.9999877444966492	WITHOUT_CLASSIFICATION	1.22555033509217E-5	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999959626530888	WITHOUT_CLASSIFICATION	4.03734691125273E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9998529294499684	WITHOUT_CLASSIFICATION	1.470705500316066E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9998565935512402	WITHOUT_CLASSIFICATION	1.434064487597431E-4	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9974318850698279	WITHOUT_CLASSIFICATION	0.0025681149301719714	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.999999000740375	WITHOUT_CLASSIFICATION	9.992596250248813E-7	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999999279901645	WITHOUT_CLASSIFICATION	7.200983549809753E-8	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999807442788204	WITHOUT_CLASSIFICATION	1.925572117959647E-5	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.999999958437258	WITHOUT_CLASSIFICATION	4.1562742081303804E-8	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999998613048567	WITHOUT_CLASSIFICATION	1.38695143346799E-7	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999667753119	WITHOUT_CLASSIFICATION	3.322468815275678E-8	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999977414032	WITHOUT_CLASSIFICATION	2.2585968622937976E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999637965367	WITHOUT_CLASSIFICATION	3.620346330508061E-8	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999996674219	WITHOUT_CLASSIFICATION	3.3257806727676146E-10	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999998940975722	WITHOUT_CLASSIFICATION	1.0590242773568624E-7	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9996344218968939	WITHOUT_CLASSIFICATION	3.6557810310613336E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999999654261794	WITHOUT_CLASSIFICATION	3.4573820500309326E-8	DEFECT
// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.	WITHOUT_CLASSIFICATION	0.9999992741825622	WITHOUT_CLASSIFICATION	7.258174377812255E-7	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999999273299945	WITHOUT_CLASSIFICATION	7.267000547423733E-8	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999950207456562	WITHOUT_CLASSIFICATION	4.979254343923205E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999991086814507	WITHOUT_CLASSIFICATION	8.913185493470379E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999997757322626	WITHOUT_CLASSIFICATION	2.2426773752057282E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999291164051648	WITHOUT_CLASSIFICATION	7.088359483511819E-5	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999997162441576	WITHOUT_CLASSIFICATION	2.8375584244817794E-7	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999987156011205	WITHOUT_CLASSIFICATION	1.2843988794802836E-6	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999536542936	WITHOUT_CLASSIFICATION	4.634570649018417E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999999374634697	WITHOUT_CLASSIFICATION	6.253653025745322E-8	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999798489096904	WITHOUT_CLASSIFICATION	2.0151090309646057E-5	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999967614109343	WITHOUT_CLASSIFICATION	3.238589065701629E-6	DEFECT
// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum	WITHOUT_CLASSIFICATION	0.9999999820664875	WITHOUT_CLASSIFICATION	1.7933512438422765E-8	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999989957671348	WITHOUT_CLASSIFICATION	1.0042328651964008E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999941297839389	WITHOUT_CLASSIFICATION	5.8702160610974645E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999997749976898	WITHOUT_CLASSIFICATION	2.2500231019956854E-7	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999986324959317	WITHOUT_CLASSIFICATION	1.3675040682686344E-6	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9992694160283643	WITHOUT_CLASSIFICATION	7.305839716357735E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999997150375902	WITHOUT_CLASSIFICATION	2.8496240987125987E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999992267633914	WITHOUT_CLASSIFICATION	7.732366086986288E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.999875369525293	WITHOUT_CLASSIFICATION	1.246304747070154E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999998054245409	WITHOUT_CLASSIFICATION	1.9457545921036882E-7	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999998999352123	WITHOUT_CLASSIFICATION	1.000647876042673E-7	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999976730087903	WITHOUT_CLASSIFICATION	2.326991209687958E-6	DEFECT
// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.	WITHOUT_CLASSIFICATION	0.9999593394651637	WITHOUT_CLASSIFICATION	4.066053483635171E-5	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999934692112137	WITHOUT_CLASSIFICATION	6.530788786286592E-6	DEFECT
// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 	WITHOUT_CLASSIFICATION	0.9999991996672333	WITHOUT_CLASSIFICATION	8.00332766733479E-7	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999901388400377	WITHOUT_CLASSIFICATION	9.861159962239866E-6	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9999254720068607	WITHOUT_CLASSIFICATION	7.452799313930614E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9998897320361559	WITHOUT_CLASSIFICATION	1.1026796384408131E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999998796853691	WITHOUT_CLASSIFICATION	1.2031463086818443E-7	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999995453512186	WITHOUT_CLASSIFICATION	4.5464878143547704E-7	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999910145123	WITHOUT_CLASSIFICATION	8.985487705160289E-9	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999988241708236	WITHOUT_CLASSIFICATION	1.1758291764019447E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999903575097233	WITHOUT_CLASSIFICATION	9.642490276688678E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999918888098775	WITHOUT_CLASSIFICATION	8.11119012242633E-6	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999997548659316	WITHOUT_CLASSIFICATION	2.45134068376064E-7	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999987586301704	WITHOUT_CLASSIFICATION	1.2413698295840131E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999990085507198	WITHOUT_CLASSIFICATION	9.914492802319074E-7	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999982476690203	WITHOUT_CLASSIFICATION	1.7523309796670962E-6	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999998910068816	WITHOUT_CLASSIFICATION	1.0899311841725384E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999990378297773	WITHOUT_CLASSIFICATION	9.621702226715642E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999376213859978	WITHOUT_CLASSIFICATION	6.237861400215628E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999986255896871	WITHOUT_CLASSIFICATION	1.3744103129196595E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.999992376254906	WITHOUT_CLASSIFICATION	7.6237450939983905E-6	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999984807468204	WITHOUT_CLASSIFICATION	1.5192531796115117E-6	DEFECT
// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999952318589191	WITHOUT_CLASSIFICATION	4.768141080809669E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880844718932	WITHOUT_CLASSIFICATION	1.191552810671422E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999978704963359	WITHOUT_CLASSIFICATION	2.129503663990377E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999770268655773	WITHOUT_CLASSIFICATION	2.2973134422658438E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965288111445	WITHOUT_CLASSIFICATION	3.471188855535823E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977580126616	WITHOUT_CLASSIFICATION	2.2419873384402673E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999954837535525	WITHOUT_CLASSIFICATION	4.5162464474894E-6	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999997665746359	WITHOUT_CLASSIFICATION	2.334253641016243E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999909683917777	WITHOUT_CLASSIFICATION	9.031608222247373E-6	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999730088459867	WITHOUT_CLASSIFICATION	2.6991154013369986E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977256160952	WITHOUT_CLASSIFICATION	2.2743839047054974E-6	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999958710141711	WITHOUT_CLASSIFICATION	4.128985828941229E-6	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999986190281845	WITHOUT_CLASSIFICATION	1.3809718154306706E-6	DEFECT
// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999859730020012	WITHOUT_CLASSIFICATION	1.4026997998727707E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999969804970881	WITHOUT_CLASSIFICATION	3.0195029118875763E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999974676636044	WITHOUT_CLASSIFICATION	2.5323363955223316E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999961029665453	WITHOUT_CLASSIFICATION	3.897033454725602E-6	DEFECT
// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999926775811228	WITHOUT_CLASSIFICATION	7.322418877262281E-6	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999926072033548	WITHOUT_CLASSIFICATION	7.392796645232392E-6	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999857431130865	WITHOUT_CLASSIFICATION	1.4256886913488283E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999997558370922	WITHOUT_CLASSIFICATION	2.441629077962951E-6	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977033059682	WITHOUT_CLASSIFICATION	2.296694031858466E-6	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999832151725171	WITHOUT_CLASSIFICATION	1.6784827482926825E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999980675658044	WITHOUT_CLASSIFICATION	1.9324341956014405E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999827122730778	WITHOUT_CLASSIFICATION	1.728772692214937E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999765520593	WITHOUT_CLASSIFICATION	2.3447940700580953E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999974676636044	WITHOUT_CLASSIFICATION	2.5323363955223316E-6	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999827122730778	WITHOUT_CLASSIFICATION	1.728772692214937E-5	DEFECT
// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999927949323093	WITHOUT_CLASSIFICATION	7.205067690735244E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999765520593	WITHOUT_CLASSIFICATION	2.3447940700580953E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999765520593	WITHOUT_CLASSIFICATION	2.3447940700580953E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876373387785	WITHOUT_CLASSIFICATION	1.2362661221576537E-5	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999828059054031	WITHOUT_CLASSIFICATION	1.719409459684747E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999898465000668	WITHOUT_CLASSIFICATION	1.0153499933117913E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999943998652204	WITHOUT_CLASSIFICATION	5.6001347795826105E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999908940839848	WITHOUT_CLASSIFICATION	9.105916015165186E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965497865744	WITHOUT_CLASSIFICATION	3.4502134256462636E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965497865744	WITHOUT_CLASSIFICATION	3.4502134256462636E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999868476153307	WITHOUT_CLASSIFICATION	1.3152384669306935E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988746741831	WITHOUT_CLASSIFICATION	1.1253258168950394E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999823903445256	WITHOUT_CLASSIFICATION	1.7609655474391887E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999964763754229	WITHOUT_CLASSIFICATION	3.5236245771365016E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999817887924379	WITHOUT_CLASSIFICATION	1.8211207562063354E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999967406348954	WITHOUT_CLASSIFICATION	3.259365104582779E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999892058765285	WITHOUT_CLASSIFICATION	1.0794123471581968E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999974676636044	WITHOUT_CLASSIFICATION	2.5323363955223316E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999765520593	WITHOUT_CLASSIFICATION	2.3447940700580953E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999874366339095	WITHOUT_CLASSIFICATION	1.2563366090564411E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999818830757438	WITHOUT_CLASSIFICATION	1.8116924256285727E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999993057564728	WITHOUT_CLASSIFICATION	6.942435271979107E-6	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999884546960078	WITHOUT_CLASSIFICATION	1.1545303992151213E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999827707336422	WITHOUT_CLASSIFICATION	1.7229266357788267E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999861207108833	WITHOUT_CLASSIFICATION	1.387928911666815E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999883761557616	WITHOUT_CLASSIFICATION	1.1623844238490897E-5	DEFECT
// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999984578266573	WITHOUT_CLASSIFICATION	1.5421733426923266E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965725862722	WITHOUT_CLASSIFICATION	3.4274137277868105E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965725862722	WITHOUT_CLASSIFICATION	3.4274137277868105E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999973267028476	WITHOUT_CLASSIFICATION	2.6732971523609526E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999973267028476	WITHOUT_CLASSIFICATION	2.6732971523609526E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999980175423128	WITHOUT_CLASSIFICATION	1.9824576873612206E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999860962313764	WITHOUT_CLASSIFICATION	1.3903768623658092E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999974676636044	WITHOUT_CLASSIFICATION	2.5323363955223316E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999961029665453	WITHOUT_CLASSIFICATION	3.897033454725602E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999765520593	WITHOUT_CLASSIFICATION	2.3447940700580953E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965497865744	WITHOUT_CLASSIFICATION	3.4502134256462636E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999883761557616	WITHOUT_CLASSIFICATION	1.1623844238490897E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965725862722	WITHOUT_CLASSIFICATION	3.4274137277868105E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999973267028476	WITHOUT_CLASSIFICATION	2.6732971523609526E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999860962313764	WITHOUT_CLASSIFICATION	1.3903768623658092E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999893921947601	WITHOUT_CLASSIFICATION	1.0607805239838945E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999815889535009	WITHOUT_CLASSIFICATION	1.8411046499127455E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999935683206942	WITHOUT_CLASSIFICATION	6.431679305823835E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999886351284243	WITHOUT_CLASSIFICATION	1.1364871575623387E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999793676167246	WITHOUT_CLASSIFICATION	2.0632383275508897E-5	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999888472240283	WITHOUT_CLASSIFICATION	1.1152775971668613E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99999779661608	WITHOUT_CLASSIFICATION	2.2033839199433327E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965497865744	WITHOUT_CLASSIFICATION	3.4502134256462636E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891153038679	WITHOUT_CLASSIFICATION	1.0884696132198404E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99999779661608	WITHOUT_CLASSIFICATION	2.2033839199433327E-6	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999943046382059	WITHOUT_CLASSIFICATION	5.6953617939900455E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999863903789437	WITHOUT_CLASSIFICATION	1.3609621056327144E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999849286925226	WITHOUT_CLASSIFICATION	1.5071307477332244E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986907701664	WITHOUT_CLASSIFICATION	1.3092298336032459E-5	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999802552274656	WITHOUT_CLASSIFICATION	1.9744772534433433E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999937114288834	WITHOUT_CLASSIFICATION	6.2885711165363295E-6	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999922936416885	WITHOUT_CLASSIFICATION	7.706358311399618E-6	DEFECT
// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999834524561829	WITHOUT_CLASSIFICATION	1.6547543816968422E-5	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999881462000291	WITHOUT_CLASSIFICATION	1.185379997097909E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999989560783702	WITHOUT_CLASSIFICATION	1.0439216297946908E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999867470536996	WITHOUT_CLASSIFICATION	1.3252946300335285E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999894168175777	WITHOUT_CLASSIFICATION	1.0583182422250093E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99998762327139	WITHOUT_CLASSIFICATION	1.237672860988867E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999983027438567	WITHOUT_CLASSIFICATION	1.6972561433923843E-6	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999975839966498	WITHOUT_CLASSIFICATION	2.4160033501115812E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880215422732	WITHOUT_CLASSIFICATION	1.1978457726882255E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999903514123307	WITHOUT_CLASSIFICATION	9.648587669324046E-6	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999985332801294	WITHOUT_CLASSIFICATION	1.4667198706333472E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999978111764981	WITHOUT_CLASSIFICATION	2.1888235018856205E-6	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999979367938442	WITHOUT_CLASSIFICATION	2.0632061559009364E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999951061546	WITHOUT_CLASSIFICATION	4.893845413693788E-9	DEFECT
// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999827276344279	WITHOUT_CLASSIFICATION	1.7272365572194278E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999896696741218	WITHOUT_CLASSIFICATION	1.0330325878197055E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999921856193785	WITHOUT_CLASSIFICATION	7.814380621555985E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999867470536996	WITHOUT_CLASSIFICATION	1.3252946300335285E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999910733504425	WITHOUT_CLASSIFICATION	8.92664955760093E-6	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999844562100995	WITHOUT_CLASSIFICATION	1.5543789900555257E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855942957837	WITHOUT_CLASSIFICATION	1.4405704216293444E-5	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999993396283953	WITHOUT_CLASSIFICATION	6.603716047779054E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.999999314716216	WITHOUT_CLASSIFICATION	6.852837840518021E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999992337366076	WITHOUT_CLASSIFICATION	7.662633924693149E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999995048896063	WITHOUT_CLASSIFICATION	4.951103936184899E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999996523628624	WITHOUT_CLASSIFICATION	3.476371376499514E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999998643720406	WITHOUT_CLASSIFICATION	1.3562795945017698E-7	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999995674373952	WITHOUT_CLASSIFICATION	4.3256260482452096E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.999999909380273	WITHOUT_CLASSIFICATION	9.061972688103261E-8	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999997109835675	WITHOUT_CLASSIFICATION	2.8901643237585854E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999991185223737	WITHOUT_CLASSIFICATION	8.814776264184982E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998672546547	WITHOUT_CLASSIFICATION	1.3274534532169853E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999997548659316	WITHOUT_CLASSIFICATION	2.45134068376064E-7	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999999393828266	WITHOUT_CLASSIFICATION	6.061717334369751E-8	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999993851328587	WITHOUT_CLASSIFICATION	6.148671413034253E-7	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999892533654875	WITHOUT_CLASSIFICATION	1.0746634512438424E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999743358202715	WITHOUT_CLASSIFICATION	2.566417972846876E-5	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999954895755865	WITHOUT_CLASSIFICATION	4.510424413476005E-6	DEFECT
// class XMLChar	WITHOUT_CLASSIFICATION	0.9999829938721617	WITHOUT_CLASSIFICATION	1.700612783821502E-5	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999983865749055	WITHOUT_CLASSIFICATION	1.6134250944839968E-6	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999997184358611	WITHOUT_CLASSIFICATION	2.8156413882867363E-7	DEFECT
// interface TypeValidator	WITHOUT_CLASSIFICATION	0.9999997153526368	WITHOUT_CLASSIFICATION	2.846473632378504E-7	DEFECT
// This implementation was changed to not introduce multi line content.	WITHOUT_CLASSIFICATION	0.9998876667540773	WITHOUT_CLASSIFICATION	1.1233324592262867E-4	DEFECT
// form integral number of 6-bit groups	WITHOUT_CLASSIFICATION	0.9999996594300005	WITHOUT_CLASSIFICATION	3.4056999951773897E-7	DEFECT
//encodedData[encodedIndex] = 0xa;	WITHOUT_CLASSIFICATION	0.999858087695957	WITHOUT_CLASSIFICATION	1.4191230404298966E-4	DEFECT
// remove white spaces	WITHOUT_CLASSIFICATION	0.9999998933024055	WITHOUT_CLASSIFICATION	1.0669759452399726E-7	DEFECT
//should be divisible by four	WITHOUT_CLASSIFICATION	0.9999981491133112	WITHOUT_CLASSIFICATION	1.8508866888617109E-6	DEFECT
//if found "no data" just return null	WITHOUT_CLASSIFICATION	0.9999999905808858	WITHOUT_CLASSIFICATION	9.419114191004172E-9	DEFECT
//One PAD  e.g. 3cQ[Pad]	WITHOUT_CLASSIFICATION	0.999997529139158	WITHOUT_CLASSIFICATION	2.4708608420641276E-6	DEFECT
//last 2 bits should be zero	WITHOUT_CLASSIFICATION	0.9999945538746841	WITHOUT_CLASSIFICATION	5.446125315883518E-6	DEFECT
//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data	WITHOUT_CLASSIFICATION	0.9847030389464189	WITHOUT_CLASSIFICATION	0.015296961053581236	DEFECT
//No PAD e.g 3cQl	WITHOUT_CLASSIFICATION	0.9999864834324176	WITHOUT_CLASSIFICATION	1.3516567582400598E-5	DEFECT
// count characters that's not whitespace	WITHOUT_CLASSIFICATION	0.9999998366556804	WITHOUT_CLASSIFICATION	1.633443196085265E-7	DEFECT
// // Data //	WITHOUT_CLASSIFICATION	0.9999981850063269	WITHOUT_CLASSIFICATION	1.8149936731612425E-6	DEFECT
// // Static initialization //	WITHOUT_CLASSIFICATION	0.9999995453512186	WITHOUT_CLASSIFICATION	4.5464878143547704E-7	DEFECT
// Add support for Cp1252 and its friends	WITHOUT_CLASSIFICATION	0.9999745349330204	WITHOUT_CLASSIFICATION	2.546506697973102E-5	DEFECT
// added since this encoding only differs w.r.t. presentation 	WITHOUT_CLASSIFICATION	0.9999940617920582	WITHOUT_CLASSIFICATION	5.9382079417849396E-6	DEFECT
// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html	WITHOUT_CLASSIFICATION	0.999996214350005	WITHOUT_CLASSIFICATION	3.785649994923775E-6	DEFECT
// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?	WITHOUT_CLASSIFICATION	0.9998789712092935	WITHOUT_CLASSIFICATION	1.2102879070652267E-4	DEFECT
// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?	WITHOUT_CLASSIFICATION	0.9999647046912642	WITHOUT_CLASSIFICATION	3.529530873575212E-5	DEFECT
// proposed addition (see above for details):	WITHOUT_CLASSIFICATION	0.9999950388083899	WITHOUT_CLASSIFICATION	4.961191610064306E-6	DEFECT
// <clinit>()	WITHOUT_CLASSIFICATION	0.9999951580263496	WITHOUT_CLASSIFICATION	4.841973650274567E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999951061546	WITHOUT_CLASSIFICATION	4.893845413693788E-9	DEFECT
// putIANA2JavaMapping(String,String)	WITHOUT_CLASSIFICATION	0.9999937884916575	WITHOUT_CLASSIFICATION	6.2115083425494725E-6	DEFECT
// getIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999828593642686	WITHOUT_CLASSIFICATION	1.7140635731511686E-5	DEFECT
// removeIANA2JavaMapping(String):String	WITHOUT_CLASSIFICATION	0.9999523487970091	WITHOUT_CLASSIFICATION	4.7651202990856696E-5	DEFECT
//RFC 2732 added '[' and ']' as reserved characters	WITHOUT_CLASSIFICATION	0.9999999416906398	WITHOUT_CLASSIFICATION	5.8309360101786485E-8	DEFECT
// Add ASCII Digits and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999990614366807	WITHOUT_CLASSIFICATION	9.385633192169367E-7	DEFECT
// Add ASCII Letters and ASCII Hex Numbers	WITHOUT_CLASSIFICATION	0.9999993833392952	WITHOUT_CLASSIFICATION	6.166607047103582E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999997548659316	WITHOUT_CLASSIFICATION	2.45134068376064E-7	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999635000392174	WITHOUT_CLASSIFICATION	3.6499960782617715E-5	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999988061163	WITHOUT_CLASSIFICATION	1.193883658741869E-9	DEFECT
// Add Reserved Characters	WITHOUT_CLASSIFICATION	0.9999999848724548	WITHOUT_CLASSIFICATION	1.5127545172742078E-8	DEFECT
// Add Scheme Characters	WITHOUT_CLASSIFICATION	0.9999999946898434	WITHOUT_CLASSIFICATION	5.310156642675393E-9	DEFECT
// Add Userinfo Characters	WITHOUT_CLASSIFICATION	0.9999999920821449	WITHOUT_CLASSIFICATION	7.917855157517931E-9	DEFECT
// Add Path Characters	WITHOUT_CLASSIFICATION	0.9999999773797749	WITHOUT_CLASSIFICATION	2.2620225041024938E-8	DEFECT
// Just use null.	WITHOUT_CLASSIFICATION	0.9999997329367535	WITHOUT_CLASSIFICATION	2.6706324642675265E-7	DEFECT
// search backwards starting from character before ':'.	WITHOUT_CLASSIFICATION	0.9999996178329227	WITHOUT_CLASSIFICATION	3.82167077280428E-7	DEFECT
// A standalone base is a valid URI according to spec	WITHOUT_CLASSIFICATION	0.9999962937486896	WITHOUT_CLASSIFICATION	3.7062513103266635E-6	DEFECT
// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.	WITHOUT_CLASSIFICATION	0.9999999693536876	WITHOUT_CLASSIFICATION	3.0646312399406186E-8	DEFECT
// Authority will be everything up to path, query or fragment	WITHOUT_CLASSIFICATION	0.999976459703766	WITHOUT_CLASSIFICATION	2.3540296233950478E-5	DEFECT
// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.	WITHOUT_CLASSIFICATION	0.9999532835873068	WITHOUT_CLASSIFICATION	4.6716412693101526E-5	DEFECT
// If we didn't find authority we need to back up. Attempt to // match against abs_path next.	WITHOUT_CLASSIFICATION	0.9999961533998403	WITHOUT_CLASSIFICATION	3.846600159623867E-6	DEFECT
// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications	WITHOUT_CLASSIFICATION	0.9999995802160352	WITHOUT_CLASSIFICATION	4.1978396473088175E-7	DEFECT
// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC	WITHOUT_CLASSIFICATION	0.9999999759148306	WITHOUT_CLASSIFICATION	2.4085169418903983E-8	DEFECT
// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done	WITHOUT_CLASSIFICATION	0.9999973769971747	WITHOUT_CLASSIFICATION	2.623002825360839E-6	DEFECT
// check for absolute path - RFC 2396 5.2 #5	WITHOUT_CLASSIFICATION	0.9999999238455812	WITHOUT_CLASSIFICATION	7.615441871980012E-8	DEFECT
// 6a - get all but the last segment of the base URI path	WITHOUT_CLASSIFICATION	0.9999991629180085	WITHOUT_CLASSIFICATION	8.370819914516901E-7	DEFECT
// 6b - append the relative URI path	WITHOUT_CLASSIFICATION	0.9999959626530888	WITHOUT_CLASSIFICATION	4.03734691125273E-6	DEFECT
// 6c - remove all "./" where "." is a complete path segment	WITHOUT_CLASSIFICATION	0.9998529294499684	WITHOUT_CLASSIFICATION	1.470705500316066E-4	DEFECT
// 6d - remove "." if path ends with "." as a complete path segment	WITHOUT_CLASSIFICATION	0.9998565935512402	WITHOUT_CLASSIFICATION	1.434064487597431E-4	DEFECT
// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."	WITHOUT_CLASSIFICATION	0.9992580102498884	WITHOUT_CLASSIFICATION	7.419897501116798E-4	DEFECT
// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment	WITHOUT_CLASSIFICATION	0.9974318850698279	WITHOUT_CLASSIFICATION	0.0025681149301719714	DEFECT
// userinfo is everything up to @	WITHOUT_CLASSIFICATION	0.999999000740375	WITHOUT_CLASSIFICATION	9.992596250248813E-7	DEFECT
// host is everything up to last ':', or up to  // and including ']' if followed by ':'.	WITHOUT_CLASSIFICATION	0.9999999279901645	WITHOUT_CLASSIFICATION	7.200983549809753E-8	DEFECT
// port	WITHOUT_CLASSIFICATION	0.9999807442788204	WITHOUT_CLASSIFICATION	1.925572117959647E-5	DEFECT
// Check if the host is well formed.	WITHOUT_CLASSIFICATION	0.999999958437258	WITHOUT_CLASSIFICATION	4.1562742081303804E-8	DEFECT
// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.	WITHOUT_CLASSIFICATION	0.9999998613048567	WITHOUT_CLASSIFICATION	1.38695143346799E-7	DEFECT
// Check that userinfo is well formed if it exists.	WITHOUT_CLASSIFICATION	0.9999999667753119	WITHOUT_CLASSIFICATION	3.322468815275678E-8	DEFECT
// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.9999999977414032	WITHOUT_CLASSIFICATION	2.2585968622937976E-9	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999637965367	WITHOUT_CLASSIFICATION	3.620346330508061E-8	DEFECT
// check for valid escape sequence	WITHOUT_CLASSIFICATION	0.9999999637965367	WITHOUT_CLASSIFICATION	3.620346330508061E-8	DEFECT
// can check against path characters because the set // is the same except for '/' which we've already excluded.	WITHOUT_CLASSIFICATION	0.9999999996674219	WITHOUT_CLASSIFICATION	3.3257806727676146E-10	DEFECT
// path - everything up to query string or fragment	WITHOUT_CLASSIFICATION	0.9999998940975722	WITHOUT_CLASSIFICATION	1.0590242773568624E-7	DEFECT
// RFC 2732 only allows '[' and ']' to appear in the opaque part.	WITHOUT_CLASSIFICATION	0.9996344218968939	WITHOUT_CLASSIFICATION	3.6557810310613336E-4	DEFECT
// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]	WITHOUT_CLASSIFICATION	0.9999999654261794	WITHOUT_CLASSIFICATION	3.4573820500309326E-8	DEFECT
// Scan opaque part. // opaque_part = uric_no_slash *uric	WITHOUT_CLASSIFICATION	0.9999999273299945	WITHOUT_CLASSIFICATION	7.267000547423733E-8	DEFECT
// query - starts with ? and up to fragment or end	WITHOUT_CLASSIFICATION	0.9999950207456562	WITHOUT_CLASSIFICATION	4.979254343923205E-6	DEFECT
// fragment - starts with #	WITHOUT_CLASSIFICATION	0.9999991086814507	WITHOUT_CLASSIFICATION	8.913185493470379E-7	DEFECT
// Server based authority.	WITHOUT_CLASSIFICATION	0.9999997757322626	WITHOUT_CLASSIFICATION	2.2426773752057282E-7	DEFECT
// Registry based authority.	WITHOUT_CLASSIFICATION	0.9999997162441576	WITHOUT_CLASSIFICATION	2.8375584244817794E-7	DEFECT
// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','	WITHOUT_CLASSIFICATION	0.999999997873294	WITHOUT_CLASSIFICATION	2.126705983184285E-9	DEFECT
// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )	WITHOUT_CLASSIFICATION	0.9999987156011205	WITHOUT_CLASSIFICATION	1.2843988794802836E-6	DEFECT
// presence of the host (whether valid or empty) means // double-slashes which means generic uri	WITHOUT_CLASSIFICATION	0.9999999536542936	WITHOUT_CLASSIFICATION	4.634570649018417E-8	DEFECT
// Check if the host is a valid IPv6reference.	WITHOUT_CLASSIFICATION	0.9999999374634697	WITHOUT_CLASSIFICATION	6.253653025745322E-8	DEFECT
// Cannot start with a '.', '-', or end with a '-'.	WITHOUT_CLASSIFICATION	0.9999798489096904	WITHOUT_CLASSIFICATION	2.0151090309646057E-5	DEFECT
// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2	WITHOUT_CLASSIFICATION	0.9999967614109343	WITHOUT_CLASSIFICATION	3.238589065701629E-6	DEFECT
// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.	WITHOUT_CLASSIFICATION	0.9999989957671348	WITHOUT_CLASSIFICATION	1.0042328651964008E-6	DEFECT
// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric	WITHOUT_CLASSIFICATION	0.9999941297839389	WITHOUT_CLASSIFICATION	5.8702160610974645E-6	DEFECT
// RFC 1034: Labels must be 63 characters or less.	WITHOUT_CLASSIFICATION	0.9999997749976898	WITHOUT_CLASSIFICATION	2.2500231019956854E-7	DEFECT
// Check that that there are no more than three digits // in this segment.	WITHOUT_CLASSIFICATION	0.9999986324959317	WITHOUT_CLASSIFICATION	1.3675040682686344E-6	DEFECT
// Check that this segment is not greater than 255.	WITHOUT_CLASSIFICATION	0.9992694160283643	WITHOUT_CLASSIFICATION	7.305839716357735E-4	DEFECT
// Check if string is a potential match for IPv6reference.	WITHOUT_CLASSIFICATION	0.9999997150375902	WITHOUT_CLASSIFICATION	2.8496240987125987E-7	DEFECT
// Counter for the number of 16-bit sections read in the address.	WITHOUT_CLASSIFICATION	0.9999992267633914	WITHOUT_CLASSIFICATION	7.732366086986288E-7	DEFECT
// Scan hex sequence before possible '::' or IPv4 address.	WITHOUT_CLASSIFICATION	0.999875369525293	WITHOUT_CLASSIFICATION	1.246304747070154E-4	DEFECT
// Address must contain 128-bits of information.	WITHOUT_CLASSIFICATION	0.9999998054245409	WITHOUT_CLASSIFICATION	1.9457545921036882E-7	DEFECT
// '::' represents at least one 16-bit group of zeros.	WITHOUT_CLASSIFICATION	0.9999998999352123	WITHOUT_CLASSIFICATION	1.000647876042673E-7	DEFECT
// Trailing zeros will fill out the rest of the address.	WITHOUT_CLASSIFICATION	0.9999976730087903	WITHOUT_CLASSIFICATION	2.326991209687958E-6	DEFECT
// 3. Scan hex sequence after '::'.	WITHOUT_CLASSIFICATION	0.9999934692112137	WITHOUT_CLASSIFICATION	6.530788786286592E-6	DEFECT
// IPv6 addresses are 128-bit, so there can be at most eight sections.	WITHOUT_CLASSIFICATION	0.9999901388400377	WITHOUT_CLASSIFICATION	9.861159962239866E-6	DEFECT
// This could be '::'.	WITHOUT_CLASSIFICATION	0.9999254720068607	WITHOUT_CLASSIFICATION	7.452799313930614E-5	DEFECT
// There can be at most 4 hex digits per group.	WITHOUT_CLASSIFICATION	0.9998897320361559	WITHOUT_CLASSIFICATION	1.1026796384408131E-4	DEFECT
// which ASCII characters need to be escaped	WITHOUT_CLASSIFICATION	0.9999998796853691	WITHOUT_CLASSIFICATION	1.2031463086818443E-7	DEFECT
// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG	WITHOUT_CLASSIFICATION	0.9999919135239086	WITHOUT_CLASSIFICATION	8.08647609136459E-6	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999999791409464	WITHOUT_CLASSIFICATION	2.0859053564382482E-8	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999973537280804	WITHOUT_CLASSIFICATION	2.646271919613838E-6	DEFECT
// we saw some non-ascii character	WITHOUT_CLASSIFICATION	0.9999999910145123	WITHOUT_CLASSIFICATION	8.985487705160289E-9	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999471470197	WITHOUT_CLASSIFICATION	5.285298036758354E-8	DEFECT
// for each byte	WITHOUT_CLASSIFICATION	0.9999988241708236	WITHOUT_CLASSIFICATION	1.1758291764019447E-6	DEFECT
// for non-ascii character: make it positive, then escape	WITHOUT_CLASSIFICATION	0.9999903575097233	WITHOUT_CLASSIFICATION	9.642490276688678E-6	DEFECT
// should never happen	WITHOUT_CLASSIFICATION	0.9999918888098775	WITHOUT_CLASSIFICATION	8.11119012242633E-6	DEFECT
// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.	WITHOUT_CLASSIFICATION	0.9999994983661492	WITHOUT_CLASSIFICATION	5.016338508066262E-7	DEFECT
// // XML Schema anyURI specific information //	WITHOUT_CLASSIFICATION	0.9999987586301704	WITHOUT_CLASSIFICATION	1.2413698295840131E-6	DEFECT
// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).	WITHOUT_CLASSIFICATION	0.9999990085507198	WITHOUT_CLASSIFICATION	9.914492802319074E-7	DEFECT
// for each character in the anyURI	WITHOUT_CLASSIFICATION	0.9999982476690203	WITHOUT_CLASSIFICATION	1.7523309796670962E-6	DEFECT
// If encoding happened, create a new string; // otherwise, return the orginal one.	WITHOUT_CLASSIFICATION	0.9999998910068816	WITHOUT_CLASSIFICATION	1.0899311841725384E-7	DEFECT
// // Constants //	WITHOUT_CLASSIFICATION	0.9999990378297773	WITHOUT_CLASSIFICATION	9.621702226715642E-7	DEFECT
// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.	WITHOUT_CLASSIFICATION	0.9999376213859978	WITHOUT_CLASSIFICATION	6.237861400215628E-5	DEFECT
// Fill 3 of value (byte) 49	WITHOUT_CLASSIFICATION	0.9999986255896871	WITHOUT_CLASSIFICATION	1.3744103129196595E-6	DEFECT
// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71	WITHOUT_CLASSIFICATION	0.999992376254906	WITHOUT_CLASSIFICATION	7.6237450939983905E-6	DEFECT
// Fill 10 of value (byte) -71	WITHOUT_CLASSIFICATION	0.9999984807468204	WITHOUT_CLASSIFICATION	1.5192531796115117E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880844718932	WITHOUT_CLASSIFICATION	1.191552810671422E-5	DEFECT
// Fill 31 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999978704963359	WITHOUT_CLASSIFICATION	2.129503663990377E-6	DEFECT
// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999770268655773	WITHOUT_CLASSIFICATION	2.2973134422658438E-5	DEFECT
// Fill 53 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965288111445	WITHOUT_CLASSIFICATION	3.471188855535823E-6	DEFECT
// Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977580126616	WITHOUT_CLASSIFICATION	2.2419873384402673E-6	DEFECT
// Fill 20 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999954837535525	WITHOUT_CLASSIFICATION	4.5162464474894E-6	DEFECT
// Fill 44 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999997665746359	WITHOUT_CLASSIFICATION	2.334253641016243E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999909683917777	WITHOUT_CLASSIFICATION	9.031608222247373E-6	DEFECT
// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999730088459867	WITHOUT_CLASSIFICATION	2.6991154013369986E-5	DEFECT
// Fill 66 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977256160952	WITHOUT_CLASSIFICATION	2.2743839047054974E-6	DEFECT
// Fill 12 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999958710141711	WITHOUT_CLASSIFICATION	4.128985828941229E-6	DEFECT
// Fill 36 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999986190281845	WITHOUT_CLASSIFICATION	1.3809718154306706E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999727052679225	WITHOUT_CLASSIFICATION	2.729473207742365E-5	DEFECT
// Fill 23 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999969804970881	WITHOUT_CLASSIFICATION	3.0195029118875763E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999974676636044	WITHOUT_CLASSIFICATION	2.5323363955223316E-6	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999961029665453	WITHOUT_CLASSIFICATION	3.897033454725602E-6	DEFECT
// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999926072033548	WITHOUT_CLASSIFICATION	7.392796645232392E-6	DEFECT
// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999857431130865	WITHOUT_CLASSIFICATION	1.4256886913488283E-5	DEFECT
// Fill 15 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999997558370922	WITHOUT_CLASSIFICATION	2.441629077962951E-6	DEFECT
// Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999977033059682	WITHOUT_CLASSIFICATION	2.296694031858466E-6	DEFECT
// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999832151725171	WITHOUT_CLASSIFICATION	1.6784827482926825E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999859035681483	WITHOUT_CLASSIFICATION	1.4096431851680804E-5	DEFECT
// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.999980675658044	WITHOUT_CLASSIFICATION	1.9324341956014405E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999827122730778	WITHOUT_CLASSIFICATION	1.728772692214937E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999765520593	WITHOUT_CLASSIFICATION	2.3447940700580953E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999765520593	WITHOUT_CLASSIFICATION	2.3447940700580953E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999876373387785	WITHOUT_CLASSIFICATION	1.2362661221576537E-5	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965497865744	WITHOUT_CLASSIFICATION	3.4502134256462636E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965497865744	WITHOUT_CLASSIFICATION	3.4502134256462636E-6	DEFECT
// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999988746741831	WITHOUT_CLASSIFICATION	1.1253258168950394E-5	DEFECT
// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999827122730778	WITHOUT_CLASSIFICATION	1.728772692214937E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999765520593	WITHOUT_CLASSIFICATION	2.3447940700580953E-6	DEFECT
// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999828059054031	WITHOUT_CLASSIFICATION	1.719409459684747E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999898465000668	WITHOUT_CLASSIFICATION	1.0153499933117913E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999943998652204	WITHOUT_CLASSIFICATION	5.6001347795826105E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999908940839848	WITHOUT_CLASSIFICATION	9.105916015165186E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965497865744	WITHOUT_CLASSIFICATION	3.4502134256462636E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999868476153307	WITHOUT_CLASSIFICATION	1.3152384669306935E-5	DEFECT
// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999823903445256	WITHOUT_CLASSIFICATION	1.7609655474391887E-5	DEFECT
// Fill 22 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999964763754229	WITHOUT_CLASSIFICATION	3.5236245771365016E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999817887924379	WITHOUT_CLASSIFICATION	1.8211207562063354E-5	DEFECT
// Fill 8 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999967406348954	WITHOUT_CLASSIFICATION	3.259365104582779E-6	DEFECT
// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999892058765285	WITHOUT_CLASSIFICATION	1.0794123471581968E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.999988716455269	WITHOUT_CLASSIFICATION	1.1283544730897363E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999898732725534	WITHOUT_CLASSIFICATION	1.012672744668763E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999818830757438	WITHOUT_CLASSIFICATION	1.8116924256285727E-5	DEFECT
// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999993057564728	WITHOUT_CLASSIFICATION	6.942435271979107E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999827707336422	WITHOUT_CLASSIFICATION	1.7229266357788267E-5	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999974676636044	WITHOUT_CLASSIFICATION	2.5323363955223316E-6	DEFECT
// Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999974676636044	WITHOUT_CLASSIFICATION	2.5323363955223316E-6	DEFECT
// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999884546960078	WITHOUT_CLASSIFICATION	1.1545303992151213E-5	DEFECT
// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999861207108833	WITHOUT_CLASSIFICATION	1.387928911666815E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999883761557616	WITHOUT_CLASSIFICATION	1.1623844238490897E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965725862722	WITHOUT_CLASSIFICATION	3.4274137277868105E-6	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965725862722	WITHOUT_CLASSIFICATION	3.4274137277868105E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999973267028476	WITHOUT_CLASSIFICATION	2.6732971523609526E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999973267028476	WITHOUT_CLASSIFICATION	2.6732971523609526E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999980175423128	WITHOUT_CLASSIFICATION	1.9824576873612206E-6	DEFECT
// Fill 10 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999980175423128	WITHOUT_CLASSIFICATION	1.9824576873612206E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999860962313764	WITHOUT_CLASSIFICATION	1.3903768623658092E-5	DEFECT
// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999893921947601	WITHOUT_CLASSIFICATION	1.0607805239838945E-5	DEFECT
// Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999961029665453	WITHOUT_CLASSIFICATION	3.897033454725602E-6	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999765520593	WITHOUT_CLASSIFICATION	2.3447940700580953E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965497865744	WITHOUT_CLASSIFICATION	3.4502134256462636E-6	DEFECT
// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999883761557616	WITHOUT_CLASSIFICATION	1.1623844238490897E-5	DEFECT
// Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965725862722	WITHOUT_CLASSIFICATION	3.4274137277868105E-6	DEFECT
// Fill 23 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999973267028476	WITHOUT_CLASSIFICATION	2.6732971523609526E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999815889535009	WITHOUT_CLASSIFICATION	1.8411046499127455E-5	DEFECT
// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999935683206942	WITHOUT_CLASSIFICATION	6.431679305823835E-6	DEFECT
// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999886351284243	WITHOUT_CLASSIFICATION	1.1364871575623387E-5	DEFECT
// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999793676167246	WITHOUT_CLASSIFICATION	2.0632383275508897E-5	DEFECT
// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999888472240283	WITHOUT_CLASSIFICATION	1.1152775971668613E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891153038679	WITHOUT_CLASSIFICATION	1.0884696132198404E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999891153038679	WITHOUT_CLASSIFICATION	1.0884696132198404E-5	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99999779661608	WITHOUT_CLASSIFICATION	2.2033839199433327E-6	DEFECT
// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999943046382059	WITHOUT_CLASSIFICATION	5.6953617939900455E-6	DEFECT
// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999863903789437	WITHOUT_CLASSIFICATION	1.3609621056327144E-5	DEFECT
// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999849286925226	WITHOUT_CLASSIFICATION	1.5071307477332244E-5	DEFECT
// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19	WITHOUT_CLASSIFICATION	0.999986907701664	WITHOUT_CLASSIFICATION	1.3092298336032459E-5	DEFECT
// Fill 7 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99999765520593	WITHOUT_CLASSIFICATION	2.3447940700580953E-6	DEFECT
// Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999965497865744	WITHOUT_CLASSIFICATION	3.4502134256462636E-6	DEFECT
// Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.99999779661608	WITHOUT_CLASSIFICATION	2.2033839199433327E-6	DEFECT
// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999802552274656	WITHOUT_CLASSIFICATION	1.9744772534433433E-5	DEFECT
// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999937114288834	WITHOUT_CLASSIFICATION	6.2885711165363295E-6	DEFECT
// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999922936416885	WITHOUT_CLASSIFICATION	7.706358311399618E-6	DEFECT
// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999881462000291	WITHOUT_CLASSIFICATION	1.185379997097909E-5	DEFECT
// Fill 11 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999989560783702	WITHOUT_CLASSIFICATION	1.0439216297946908E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999867470536996	WITHOUT_CLASSIFICATION	1.3252946300335285E-5	DEFECT
// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999894168175777	WITHOUT_CLASSIFICATION	1.0583182422250093E-5	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.99998762327139	WITHOUT_CLASSIFICATION	1.237672860988867E-5	DEFECT
// Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999983027438567	WITHOUT_CLASSIFICATION	1.6972561433923843E-6	DEFECT
// Fill 9 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999975839966498	WITHOUT_CLASSIFICATION	2.4160033501115812E-6	DEFECT
// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999880215422732	WITHOUT_CLASSIFICATION	1.1978457726882255E-5	DEFECT
// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999903514123307	WITHOUT_CLASSIFICATION	9.648587669324046E-6	DEFECT
// Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999985332801294	WITHOUT_CLASSIFICATION	1.4667198706333472E-6	DEFECT
// Fill 8 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999978111764981	WITHOUT_CLASSIFICATION	2.1888235018856205E-6	DEFECT
// Fill 68 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999979367938442	WITHOUT_CLASSIFICATION	2.0632061559009364E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999923566962368	WITHOUT_CLASSIFICATION	7.643303763191126E-6	DEFECT
// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999921856193785	WITHOUT_CLASSIFICATION	7.814380621555985E-6	DEFECT
// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999867470536996	WITHOUT_CLASSIFICATION	1.3252946300335285E-5	DEFECT
// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999910733504425	WITHOUT_CLASSIFICATION	8.92664955760093E-6	DEFECT
// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87	WITHOUT_CLASSIFICATION	0.9999844562100995	WITHOUT_CLASSIFICATION	1.5543789900555257E-5	DEFECT
// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19	WITHOUT_CLASSIFICATION	0.9999855942957837	WITHOUT_CLASSIFICATION	1.4405704216293444E-5	DEFECT
// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33	WITHOUT_CLASSIFICATION	0.9999635000392174	WITHOUT_CLASSIFICATION	3.6499960782617715E-5	DEFECT
// isValid(int):boolean	WITHOUT_CLASSIFICATION	0.9999993396283953	WITHOUT_CLASSIFICATION	6.603716047779054E-7	DEFECT
// isInvalid(int):boolean	WITHOUT_CLASSIFICATION	0.999999314716216	WITHOUT_CLASSIFICATION	6.852837840518021E-7	DEFECT
// isContent(int):boolean	WITHOUT_CLASSIFICATION	0.9999992337366076	WITHOUT_CLASSIFICATION	7.662633924693149E-7	DEFECT
// isMarkup(int):boolean	WITHOUT_CLASSIFICATION	0.9999995048896063	WITHOUT_CLASSIFICATION	4.951103936184899E-7	DEFECT
// isSpace(int):boolean	WITHOUT_CLASSIFICATION	0.9999996523628624	WITHOUT_CLASSIFICATION	3.476371376499514E-7	DEFECT
// isNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.9999998643720406	WITHOUT_CLASSIFICATION	1.3562795945017698E-7	DEFECT
// isName(int):boolean	WITHOUT_CLASSIFICATION	0.9999995674373952	WITHOUT_CLASSIFICATION	4.3256260482452096E-7	DEFECT
// isNCNameStart(int):boolean	WITHOUT_CLASSIFICATION	0.999999909380273	WITHOUT_CLASSIFICATION	9.061972688103261E-8	DEFECT
// isNCName(int):boolean	WITHOUT_CLASSIFICATION	0.9999997109835675	WITHOUT_CLASSIFICATION	2.8901643237585854E-7	DEFECT
// isPubid(int):boolean	WITHOUT_CLASSIFICATION	0.9999991185223737	WITHOUT_CLASSIFICATION	8.814776264184982E-7	DEFECT
/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */	WITHOUT_CLASSIFICATION	0.9999998672546547	WITHOUT_CLASSIFICATION	1.3274534532169853E-7	DEFECT
// isValidName(String):boolean	WITHOUT_CLASSIFICATION	0.9999997548659316	WITHOUT_CLASSIFICATION	2.45134068376064E-7	DEFECT
/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */	WITHOUT_CLASSIFICATION	0.9999999393828266	WITHOUT_CLASSIFICATION	6.061717334369751E-8	DEFECT
// isValidNCName(String):boolean	WITHOUT_CLASSIFICATION	0.9999993851328587	WITHOUT_CLASSIFICATION	6.148671413034253E-7	DEFECT
/*      * [7] Nmtoken ::= (NameChar)+      */	WITHOUT_CLASSIFICATION	0.9999892533654875	WITHOUT_CLASSIFICATION	1.0746634512438424E-5	DEFECT
// encodings	WITHOUT_CLASSIFICATION	0.9999743358202715	WITHOUT_CLASSIFICATION	2.566417972846876E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// // Public static methods //	WITHOUT_CLASSIFICATION	0.9999999951061546	WITHOUT_CLASSIFICATION	4.893845413693788E-9	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999954895755865	WITHOUT_CLASSIFICATION	4.510424413476005E-6	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999954895755865	WITHOUT_CLASSIFICATION	4.510424413476005E-6	DEFECT
//order constants	WITHOUT_CLASSIFICATION	0.9999983865749055	WITHOUT_CLASSIFICATION	1.6134250944839968E-6	DEFECT
// check whether the character is in the range 0x30 ~ 0x39	WITHOUT_CLASSIFICATION	0.9999997184358611	WITHOUT_CLASSIFICATION	2.8156413882867363E-7	DEFECT
// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1	WITHOUT_CLASSIFICATION	0.9999999988061163	WITHOUT_CLASSIFICATION	1.193883658741869E-9	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999969058959584	WITHOUT_CLASSIFICATION	3.0941040415194793E-6	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999969058959584	WITHOUT_CLASSIFICATION	3.0941040415194793E-6	DEFECT
//XMLTypeResourceImpl	WITHOUT_CLASSIFICATION	0.9999849450894085	WITHOUT_CLASSIFICATION	1.5054910591453493E-5	DEFECT
//XMLTypeValidator	WITHOUT_CLASSIFICATION	0.9999483951586108	WITHOUT_CLASSIFICATION	5.160484138911062E-5	DEFECT
// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //	WITHOUT_CLASSIFICATION	0.9999933620660425	WITHOUT_CLASSIFICATION	6.637933957411419E-6	DEFECT
// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //	WITHOUT_CLASSIFICATION	0.999989763666557	WITHOUT_CLASSIFICATION	1.023633344302521E-5	DEFECT
// If we aren't simply removing all the old values... //	WITHOUT_CLASSIFICATION	0.9991762017324384	WITHOUT_CLASSIFICATION	8.237982675616696E-4	DEFECT
// If there are values to remove, append a command for them. //	WITHOUT_CLASSIFICATION	0.9999059313576476	WITHOUT_CLASSIFICATION	9.406864235229793E-5	DEFECT
// Determine the values that will remain and move them into the right order, if necessary. //	WITHOUT_CLASSIFICATION	0.9999997132583802	WITHOUT_CLASSIFICATION	2.867416197345563E-7	DEFECT
// end setting whole list	WITHOUT_CLASSIFICATION	0.9999999523708291	WITHOUT_CLASSIFICATION	4.7629170845608764E-8	DEFECT
// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //	WITHOUT_CLASSIFICATION	0.9954599684561205	WITHOUT_CLASSIFICATION	0.004540031543879479	DEFECT
// (value == null) && (oldValue == null) // A simple set/unset will suffice. //	WITHOUT_CLASSIFICATION	0.9999949157888522	WITHOUT_CLASSIFICATION	5.084211147662168E-6	DEFECT
// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //	WITHOUT_CLASSIFICATION	0.9999734170131717	WITHOUT_CLASSIFICATION	2.658298682825558E-5	DEFECT
// ((value != null) 	WITHOUT_CLASSIFICATION	0.9999960916792823	WITHOUT_CLASSIFICATION	3.908320717777484E-6	DEFECT
// (value != null) && (oldValue == null) // Add owner to new value. //	WITHOUT_CLASSIFICATION	0.9999904457880481	WITHOUT_CLASSIFICATION	9.554211951933428E-6	DEFECT
// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //	WITHOUT_CLASSIFICATION	0.9995513340515905	WITHOUT_CLASSIFICATION	4.486659484095796E-4	DEFECT
// For consistency, we always set 1-1 container relations from the container end. //	WITHOUT_CLASSIFICATION	0.9999985794338567	WITHOUT_CLASSIFICATION	1.420566143332134E-6	DEFECT
// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //	WITHOUT_CLASSIFICATION	0.9999999950306356	WITHOUT_CLASSIFICATION	4.969364392127346E-9	DEFECT
// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //	WITHOUT_CLASSIFICATION	0.9999344883467125	WITHOUT_CLASSIFICATION	6.551165328749648E-5	DEFECT
// For a 1-to-1, we can directly create a SetCommand. //	WITHOUT_CLASSIFICATION	0.9999311642283357	WITHOUT_CLASSIFICATION	6.883577166432084E-5	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999995399990334	WITHOUT_CLASSIFICATION	4.600009665963949E-6	DEFECT
// If there is an owner. //	WITHOUT_CLASSIFICATION	0.9999981044218853	WITHOUT_CLASSIFICATION	1.89557811466704E-6	DEFECT
// Get the owner's meta object. //	WITHOUT_CLASSIFICATION	0.9999993925586533	WITHOUT_CLASSIFICATION	6.074413467395254E-7	DEFECT
// Is the feature an attribute of the owner... //	WITHOUT_CLASSIFICATION	0.9999752743055379	WITHOUT_CLASSIFICATION	2.4725694462054782E-5	DEFECT
// If must be of this type then. //	WITHOUT_CLASSIFICATION	0.9999978732647485	WITHOUT_CLASSIFICATION	2.126735251462009E-6	DEFECT
// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //	WITHOUT_CLASSIFICATION	0.9999981661081797	WITHOUT_CLASSIFICATION	1.833891820211001E-6	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999885266256973	WITHOUT_CLASSIFICATION	1.1473374302814797E-5	DEFECT
// oldValue = owner.eGet(feature);	WITHOUT_CLASSIFICATION	0.999995173962527	WITHOUT_CLASSIFICATION	4.826037472948505E-6	DEFECT
// Make sure the container is not being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999880353680348	WITHOUT_CLASSIFICATION	1.196463196517829E-5	DEFECT
// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.9998405582627851	WITHOUT_CLASSIFICATION	1.5944173721490042E-4	DEFECT
// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //	WITHOUT_CLASSIFICATION	0.999989921140699	WITHOUT_CLASSIFICATION	1.0078859301095668E-5	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999977386245351	WITHOUT_CLASSIFICATION	2.2613754648097898E-6	DEFECT
// Either set or unset the feature. //	WITHOUT_CLASSIFICATION	0.9999977386245351	WITHOUT_CLASSIFICATION	2.2613754648097898E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998381215062	WITHOUT_CLASSIFICATION	1.6187849383606258E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998381215062	WITHOUT_CLASSIFICATION	1.6187849383606258E-7	DEFECT
// Either set or unset the old value. //	WITHOUT_CLASSIFICATION	0.9999965351534623	WITHOUT_CLASSIFICATION	3.4648465377780307E-6	DEFECT
// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //	WITHOUT_CLASSIFICATION	0.9999922578801042	WITHOUT_CLASSIFICATION	7.742119895868193E-6	DEFECT
// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //	WITHOUT_CLASSIFICATION	0.9999997248888322	WITHOUT_CLASSIFICATION	2.751111678148232E-7	DEFECT
// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //	WITHOUT_CLASSIFICATION	0.9998986678155879	WITHOUT_CLASSIFICATION	1.0133218441213126E-4	DEFECT
// Check each object...  //	WITHOUT_CLASSIFICATION	0.9999800060462807	WITHOUT_CLASSIFICATION	1.9993953719225776E-5	DEFECT
// Check type of object. //	WITHOUT_CLASSIFICATION	0.9999987579604527	WITHOUT_CLASSIFICATION	1.2420395472840518E-6	DEFECT
// Check that the object isn't already in a unique list. //	WITHOUT_CLASSIFICATION	0.9999998483659542	WITHOUT_CLASSIFICATION	1.5163404580441618E-7	DEFECT
// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //	WITHOUT_CLASSIFICATION	0.999984466320501	WITHOUT_CLASSIFICATION	1.5533679499039326E-5	DEFECT
// Check to see if a container is being put into a contained object. //	WITHOUT_CLASSIFICATION	0.9999998566560796	WITHOUT_CLASSIFICATION	1.4334392030135626E-7	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999992899174969	WITHOUT_CLASSIFICATION	7.100825030985108E-7	DEFECT
// Simply add the collection to the list. //	WITHOUT_CLASSIFICATION	0.9999992899174969	WITHOUT_CLASSIFICATION	7.100825030985108E-7	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9995508328239368	WITHOUT_CLASSIFICATION	4.4916717606326736E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9995508328239368	WITHOUT_CLASSIFICATION	4.4916717606326736E-4	DEFECT
// Remove the collection from the list by index. //	WITHOUT_CLASSIFICATION	0.9999486499250287	WITHOUT_CLASSIFICATION	5.135007497124619E-5	DEFECT
// We'd like the owner selected after this undo completes. //	WITHOUT_CLASSIFICATION	0.9999992797224095	WITHOUT_CLASSIFICATION	7.202775904260211E-7	DEFECT
// It must be an unsettable feature to be null and considered set. //	WITHOUT_CLASSIFICATION	0.9999997764400803	WITHOUT_CLASSIFICATION	2.235599197449068E-7	DEFECT
// It must be an unsettable feature to be empty and considered set. //	WITHOUT_CLASSIFICATION	0.999999291615438	WITHOUT_CLASSIFICATION	7.083845620089938E-7	DEFECT
// if one is null, they'll all be null	WITHOUT_CLASSIFICATION	0.9999998378525389	WITHOUT_CLASSIFICATION	1.6214746113841017E-7	DEFECT
// Possible scope for the ChangeRecorder	WITHOUT_CLASSIFICATION	0.9999998489487285	WITHOUT_CLASSIFICATION	1.5105127143063883E-7	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999728247925732	WITHOUT_CLASSIFICATION	2.7175207426819614E-5	DEFECT
// We'll default to this. //	WITHOUT_CLASSIFICATION	0.9999999360076477	WITHOUT_CLASSIFICATION	6.399235235368126E-8	DEFECT
// If there isn't something obviously wrong with the arguments... //	WITHOUT_CLASSIFICATION	0.9984732205061665	WITHOUT_CLASSIFICATION	0.0015267794938335674	DEFECT
// If the location is near the boundary, we'll start by trying to do a drop insert. //	WITHOUT_CLASSIFICATION	0.9999998555260837	WITHOUT_CLASSIFICATION	1.4447391633655543E-7	DEFECT
// If we could do a drop insert operation... //	WITHOUT_CLASSIFICATION	0.9999948545844416	WITHOUT_CLASSIFICATION	5.145415558379167E-6	DEFECT
// Set the bounds so that we re-check when we are closer to the middle. //	WITHOUT_CLASSIFICATION	0.9999998649804319	WITHOUT_CLASSIFICATION	1.350195680344948E-7	DEFECT
// We can try to do a drop on instead. //	WITHOUT_CLASSIFICATION	0.999997445071067	WITHOUT_CLASSIFICATION	2.5549289329739043E-6	DEFECT
// Set the bounds so that we re-check when we get near the other end. //	WITHOUT_CLASSIFICATION	0.9999993879094385	WITHOUT_CLASSIFICATION	6.120905615277847E-7	DEFECT
// We are near the middle, so we'll start by trying to do a drop on. //	WITHOUT_CLASSIFICATION	0.9999999947601607	WITHOUT_CLASSIFICATION	5.239839335906911E-9	DEFECT
// If we can do a drop on operation. //	WITHOUT_CLASSIFICATION	0.9999979362153284	WITHOUT_CLASSIFICATION	2.0637846716798816E-6	DEFECT
// Set the range so that we re-check when we get aren't in the middle. //	WITHOUT_CLASSIFICATION	0.9999971232106015	WITHOUT_CLASSIFICATION	2.8767893985364484E-6	DEFECT
// We can reset and try a drop insert instead. //	WITHOUT_CLASSIFICATION	0.9999886112658111	WITHOUT_CLASSIFICATION	1.1388734188916577E-5	DEFECT
// We'll always be wrong for these arguments, so don't bother re-checking. //	WITHOUT_CLASSIFICATION	0.9999907668543581	WITHOUT_CLASSIFICATION	9.233145641948992E-6	DEFECT
// This will be the default return value. //	WITHOUT_CLASSIFICATION	0.99999968080199	WITHOUT_CLASSIFICATION	3.1919801000071906E-7	DEFECT
// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //	WITHOUT_CLASSIFICATION	0.9961306379347361	WITHOUT_CLASSIFICATION	0.003869362065263957	DEFECT
// If we can't determine the parent. //	WITHOUT_CLASSIFICATION	0.9999892023020317	WITHOUT_CLASSIFICATION	1.079769796833041E-5	DEFECT
// Iterate over the children to find the owner. //	WITHOUT_CLASSIFICATION	0.999999600827808	WITHOUT_CLASSIFICATION	3.991721919862929E-7	DEFECT
// When we match the owner, we're done. //	WITHOUT_CLASSIFICATION	0.9999991354112918	WITHOUT_CLASSIFICATION	8.645887081803409E-7	DEFECT
// Try to create a specific command based on the current desired operation. //	WITHOUT_CLASSIFICATION	0.9999999582027665	WITHOUT_CLASSIFICATION	4.1797233460414716E-8	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9956300405238259	WITHOUT_CLASSIFICATION	0.004369959476174213	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999978114538314	WITHOUT_CLASSIFICATION	2.188546168646488E-6	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999992501790762	WITHOUT_CLASSIFICATION	7.498209238227582E-7	DEFECT
// We've switch the operation! //	WITHOUT_CLASSIFICATION	0.9999992501790762	WITHOUT_CLASSIFICATION	7.498209238227582E-7	DEFECT
// We don't want to move insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9999553374658054	WITHOUT_CLASSIFICATION	4.4662534194673624E-5	DEFECT
// If the dragged objects share a parent... //	WITHOUT_CLASSIFICATION	0.9997706923477963	WITHOUT_CLASSIFICATION	2.2930765220385529E-4	DEFECT
// Just remove the objects and add them. //	WITHOUT_CLASSIFICATION	0.9999991879421095	WITHOUT_CLASSIFICATION	8.120578905170404E-7	DEFECT
// We don't want to copy insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9996886773965122	WITHOUT_CLASSIFICATION	3.11322603487841E-4	DEFECT
// Copy the collection //	WITHOUT_CLASSIFICATION	0.9999967254512495	WITHOUT_CLASSIFICATION	3.2745487504871005E-6	DEFECT
// And add the copy. //	WITHOUT_CLASSIFICATION	0.9999707689593407	WITHOUT_CLASSIFICATION	2.9231040659297725E-5	DEFECT
// if optimize // if collection	WITHOUT_CLASSIFICATION	0.9999994985554371	WITHOUT_CLASSIFICATION	5.014445627581565E-7	DEFECT
// We don't want to insert an object before or after itself... //	WITHOUT_CLASSIFICATION	0.9998459252461914	WITHOUT_CLASSIFICATION	1.5407475380853475E-4	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998381215062	WITHOUT_CLASSIFICATION	1.6187849383606258E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998381215062	WITHOUT_CLASSIFICATION	1.6187849383606258E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998381215062	WITHOUT_CLASSIFICATION	1.6187849383606258E-7	DEFECT
// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9956300405238259	WITHOUT_CLASSIFICATION	0.004369959476174213	DEFECT
// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //	WITHOUT_CLASSIFICATION	0.9979769205563516	WITHOUT_CLASSIFICATION	0.0020230794436483105	DEFECT
// Add the collection //	WITHOUT_CLASSIFICATION	0.9999925233251661	WITHOUT_CLASSIFICATION	7.476674833870273E-6	DEFECT
// This is the default return value. //	WITHOUT_CLASSIFICATION	0.9999995109195169	WITHOUT_CLASSIFICATION	4.890804830158135E-7	DEFECT
// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //	WITHOUT_CLASSIFICATION	0.9985650535030166	WITHOUT_CLASSIFICATION	0.0014349464969834137	DEFECT
// Prepare the right type of operation. //	WITHOUT_CLASSIFICATION	0.9999889245082006	WITHOUT_CLASSIFICATION	1.1075491799324485E-5	DEFECT
// If we can't set the collection, try setting use the single value of the collection. //	WITHOUT_CLASSIFICATION	0.9999969909293157	WITHOUT_CLASSIFICATION	3.0090706843238606E-6	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999989945958125	WITHOUT_CLASSIFICATION	1.0054041875641553E-6	DEFECT
// Reset as in the constructor. //	WITHOUT_CLASSIFICATION	0.999999939208596	WITHOUT_CLASSIFICATION	6.07914040249749E-8	DEFECT
// If the operation has changed significantly... //	WITHOUT_CLASSIFICATION	0.9995820770109914	WITHOUT_CLASSIFICATION	4.17922989008562E-4	DEFECT
// Clean it up. //	WITHOUT_CLASSIFICATION	0.999998931872025	WITHOUT_CLASSIFICATION	1.0681279749331758E-6	DEFECT
// Set the arguments again. //	WITHOUT_CLASSIFICATION	0.9999999856345184	WITHOUT_CLASSIFICATION	1.4365481596504439E-8	DEFECT
// Determine if the operation is executable. //	WITHOUT_CLASSIFICATION	0.9999999330530248	WITHOUT_CLASSIFICATION	6.694697518841257E-8	DEFECT
// Just return the cached result. //	WITHOUT_CLASSIFICATION	0.9999997230111854	WITHOUT_CLASSIFICATION	2.769888145929644E-7	DEFECT
// Only return the operation for an executable command. //	WITHOUT_CLASSIFICATION	0.999997822970946	WITHOUT_CLASSIFICATION	2.177029054027016E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999993424864478	WITHOUT_CLASSIFICATION	6.575135520941337E-7	DEFECT
// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //	WITHOUT_CLASSIFICATION	0.9998957823356471	WITHOUT_CLASSIFICATION	1.0421766435285399E-4	DEFECT
// An extent allows anything to be added. //	WITHOUT_CLASSIFICATION	0.9998038202605593	WITHOUT_CLASSIFICATION	1.9617973944085788E-4	DEFECT
// Make sure each object conforms to the type of the feature. //	WITHOUT_CLASSIFICATION	0.9999975271153222	WITHOUT_CLASSIFICATION	2.4728846778208354E-6	DEFECT
// Record the position of the value in the owner list. //	WITHOUT_CLASSIFICATION	0.9999932057994976	WITHOUT_CLASSIFICATION	6.794200502543787E-6	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999989845105344	WITHOUT_CLASSIFICATION	1.0154894655903981E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999823411503143	WITHOUT_CLASSIFICATION	1.765884968579572E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999969279710578	WITHOUT_CLASSIFICATION	3.0720289421533428E-6	DEFECT
// Remove the collection of replacements. //	WITHOUT_CLASSIFICATION	0.9999971948724246	WITHOUT_CLASSIFICATION	2.8051275755116966E-6	DEFECT
// Add the value back in the right place. //	WITHOUT_CLASSIFICATION	0.9999175268309112	WITHOUT_CLASSIFICATION	8.247316908886396E-5	DEFECT
// We'd like the replaced selected after this undo replace completes. //	WITHOUT_CLASSIFICATION	0.9999973423565167	WITHOUT_CLASSIFICATION	2.6576434833971446E-6	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998381215062	WITHOUT_CLASSIFICATION	1.6187849383606258E-7	DEFECT
// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //	WITHOUT_CLASSIFICATION	0.9999989945958125	WITHOUT_CLASSIFICATION	1.0054041875641553E-6	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999993424864478	WITHOUT_CLASSIFICATION	6.575135520941337E-7	DEFECT
// Create a strict compound command to do a copy and then add the result //	WITHOUT_CLASSIFICATION	0.9999994980001204	WITHOUT_CLASSIFICATION	5.019998795126057E-7	DEFECT
// Create a command to copy the clipboard. //	WITHOUT_CLASSIFICATION	0.9999984230778671	WITHOUT_CLASSIFICATION	1.5769221328857135E-6	DEFECT
// Create a proxy that will create an add command. //	WITHOUT_CLASSIFICATION	0.9999142922430126	WITHOUT_CLASSIFICATION	8.57077569873737E-5	DEFECT
// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //	WITHOUT_CLASSIFICATION	0.9891073166943481	WITHOUT_CLASSIFICATION	0.010892683305651888	DEFECT
// This will determine canExecute as efficiently as possible. //	WITHOUT_CLASSIFICATION	0.9999051197384831	WITHOUT_CLASSIFICATION	9.488026151686495E-5	DEFECT
// This will actually execute the copy command in order to check if the add can execute. //	WITHOUT_CLASSIFICATION	0.9997913362518768	WITHOUT_CLASSIFICATION	2.086637481232539E-4	DEFECT
// We need to check canExecute() here in case prepare() went down the "optimize" path. //	WITHOUT_CLASSIFICATION	0.9999976956805197	WITHOUT_CLASSIFICATION	2.3043194803402913E-6	DEFECT
// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //	WITHOUT_CLASSIFICATION	0.9999690127629228	WITHOUT_CLASSIFICATION	3.098723707717934E-5	DEFECT
// If this owned object is one from the collection... //	WITHOUT_CLASSIFICATION	0.9988676961620765	WITHOUT_CLASSIFICATION	0.0011323038379234887	DEFECT
// Remove the object from the collection and add it to the identity list. //	WITHOUT_CLASSIFICATION	0.9999929845175691	WITHOUT_CLASSIFICATION	7.01548243090392E-6	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.999910059317004	WITHOUT_CLASSIFICATION	8.994068299601745E-5	DEFECT
// Record the index. //	WITHOUT_CLASSIFICATION	0.999910059317004	WITHOUT_CLASSIFICATION	8.994068299601745E-5	DEFECT
// Second pass: match by value equality. //	WITHOUT_CLASSIFICATION	0.9998371144141253	WITHOUT_CLASSIFICATION	1.628855858746844E-4	DEFECT
// If this owned object is equal to one from the collection... //	WITHOUT_CLASSIFICATION	0.9999520453124157	WITHOUT_CLASSIFICATION	4.795468758437411E-5	DEFECT
// Remove the object from the collection and add it to the equality list.  //	WITHOUT_CLASSIFICATION	0.9999978533770169	WITHOUT_CLASSIFICATION	2.1466229831950238E-6	DEFECT
// Merge the lists. //	WITHOUT_CLASSIFICATION	0.9999999382500934	WITHOUT_CLASSIFICATION	6.174990657531866E-8	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9998103699733486	WITHOUT_CLASSIFICATION	1.8963002665136155E-4	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.999972518780222	WITHOUT_CLASSIFICATION	2.748121977799458E-5	DEFECT
// If either list is empty, the result is simply the other. //	WITHOUT_CLASSIFICATION	0.9999983254330267	WITHOUT_CLASSIFICATION	1.6745669732996792E-6	DEFECT
// Allocate list and array for objects and indices. //	WITHOUT_CLASSIFICATION	0.9999961883506332	WITHOUT_CLASSIFICATION	3.8116493667392783E-6	DEFECT
// Index counters into indices1, indices2, and indices.  //	WITHOUT_CLASSIFICATION	0.9999835521960132	WITHOUT_CLASSIFICATION	1.644780398675866E-5	DEFECT
// Object iterators. //	WITHOUT_CLASSIFICATION	0.9999999488479384	WITHOUT_CLASSIFICATION	5.1152061565563055E-8	DEFECT
// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //	WITHOUT_CLASSIFICATION	0.9998460948850826	WITHOUT_CLASSIFICATION	1.539051149174332E-4	DEFECT
// We'd like the collection of things added to be selected after this command completes. //	WITHOUT_CLASSIFICATION	0.9995508328239368	WITHOUT_CLASSIFICATION	4.4916717606326736E-4	DEFECT
// Create commands to create copies of the children. //	WITHOUT_CLASSIFICATION	0.9999728247925732	WITHOUT_CLASSIFICATION	2.7175207426819614E-5	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999993424864478	WITHOUT_CLASSIFICATION	6.575135520941337E-7	DEFECT
// Remove objects from the owner list by index, starting from the end. //	WITHOUT_CLASSIFICATION	0.9998103699733486	WITHOUT_CLASSIFICATION	1.8963002665136155E-4	DEFECT
// We'd like the owner selected after this remove completes. //	WITHOUT_CLASSIFICATION	0.999972518780222	WITHOUT_CLASSIFICATION	2.748121977799458E-5	DEFECT
// Create commands to create the copy object(s). //	WITHOUT_CLASSIFICATION	0.9998790477996415	WITHOUT_CLASSIFICATION	1.2095220035846391E-4	DEFECT
// Create an initialize copy command for each of the created objects. //	WITHOUT_CLASSIFICATION	0.9999974131380407	WITHOUT_CLASSIFICATION	2.5868619593839506E-6	DEFECT
// Record it for execution. //	WITHOUT_CLASSIFICATION	0.9992825979169275	WITHOUT_CLASSIFICATION	7.174020830725265E-4	DEFECT
// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //	WITHOUT_CLASSIFICATION	0.9995720178041478	WITHOUT_CLASSIFICATION	4.279821958521735E-4	DEFECT
// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //	WITHOUT_CLASSIFICATION	0.9999075652427128	WITHOUT_CLASSIFICATION	9.243475728720727E-5	DEFECT
// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //	WITHOUT_CLASSIFICATION	0.999998360081275	WITHOUT_CLASSIFICATION	1.6399187250448383E-6	DEFECT
// This will call prepare() which will partially execute the command. //	WITHOUT_CLASSIFICATION	0.9939283789021853	WITHOUT_CLASSIFICATION	0.006071621097814678	DEFECT
// We need to check canExecute() in case optimize is true. //	WITHOUT_CLASSIFICATION	0.99999996746047	WITHOUT_CLASSIFICATION	3.2539530013926586E-8	DEFECT
// Create a command to create a copy of the object. //	WITHOUT_CLASSIFICATION	0.9999740916274439	WITHOUT_CLASSIFICATION	2.590837255608316E-5	DEFECT
// This handles IStructuredSelection. //	WITHOUT_CLASSIFICATION	0.9999996784647925	WITHOUT_CLASSIFICATION	3.2153520735800624E-7	DEFECT
// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());	WITHOUT_CLASSIFICATION	0.9999999809138113	WITHOUT_CLASSIFICATION	1.9086188741217363E-8	DEFECT
// If the owner parameter is set, we delegate to the owner's adapter //	WITHOUT_CLASSIFICATION	0.9999991935188121	WITHOUT_CLASSIFICATION	8.06481188026007E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9915301814814825	WITHOUT_CLASSIFICATION	0.008469818518517469	DEFECT
// If command has no owner specified //	WITHOUT_CLASSIFICATION	0.9999988090947831	WITHOUT_CLASSIFICATION	1.1909052168853305E-6	DEFECT
// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //	WITHOUT_CLASSIFICATION	0.9998024627650037	WITHOUT_CLASSIFICATION	1.9753723499612856E-4	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999998547066733	WITHOUT_CLASSIFICATION	1.452933266850054E-7	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9915301814814825	WITHOUT_CLASSIFICATION	0.008469818518517469	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9915301814814825	WITHOUT_CLASSIFICATION	0.008469818518517469	DEFECT
// If there is an adapter of the correct type... //	WITHOUT_CLASSIFICATION	0.9915301814814825	WITHOUT_CLASSIFICATION	0.008469818518517469	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// We will iterate over the whole collection, removing some as we go. //	WITHOUT_CLASSIFICATION	0.9999973790505682	WITHOUT_CLASSIFICATION	2.6209494319016298E-6	DEFECT
// Take the first object, and remove it. //	WITHOUT_CLASSIFICATION	0.9999991853599285	WITHOUT_CLASSIFICATION	8.146400716427742E-7	DEFECT
// Determine the object's parent. //	WITHOUT_CLASSIFICATION	0.9999998291956379	WITHOUT_CLASSIFICATION	1.708043621432451E-7	DEFECT
// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //	WITHOUT_CLASSIFICATION	0.9999889834935326	WITHOUT_CLASSIFICATION	1.1016506467366871E-5	DEFECT
// Get the next object and check if it has the same parent. //	WITHOUT_CLASSIFICATION	0.9999834058141069	WITHOUT_CLASSIFICATION	1.6594185893006995E-5	DEFECT
// Remove the object and add it as a sibling. //	WITHOUT_CLASSIFICATION	0.9997652445433547	WITHOUT_CLASSIFICATION	2.3475545664529884E-4	DEFECT
// We will now create a command with this implied parent //	WITHOUT_CLASSIFICATION	0.9999741583808973	WITHOUT_CLASSIFICATION	2.5841619102718227E-5	DEFECT
// The parent is null, which implies a top-level removal, so create a self-removing command. //	WITHOUT_CLASSIFICATION	0.9999951932436383	WITHOUT_CLASSIFICATION	4.806756361753847E-6	DEFECT
// If no object is specified, but an existing sibling is, the object is // its parent. //	WITHOUT_CLASSIFICATION	0.9999934531167263	WITHOUT_CLASSIFICATION	6.546883273766543E-6	DEFECT
// protected Object labelProvider;	WITHOUT_CLASSIFICATION	0.9999847919059633	WITHOUT_CLASSIFICATION	1.5208094036667195E-5	DEFECT
//return getDefaultValue(attribute.getEType());	WITHOUT_CLASSIFICATION	0.9999992105784566	WITHOUT_CLASSIFICATION	7.894215434798318E-7	DEFECT
// If any children were added or removed, reset the indices.	WITHOUT_CLASSIFICATION	0.9999125026130037	WITHOUT_CLASSIFICATION	8.749738699632368E-5	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999993735967072	WITHOUT_CLASSIFICATION	6.264032928269635E-7	DEFECT
// isValidIANAEncoding(String):boolean	WITHOUT_CLASSIFICATION	0.9999954895755865	WITHOUT_CLASSIFICATION	4.510424413476005E-6	DEFECT
// Wrap any new children and add them to the map. Remove each current child from the set of old children. //	WITHOUT_CLASSIFICATION	0.9999338631676193	WITHOUT_CLASSIFICATION	6.613683238066947E-5	DEFECT
// Remove and dispose any wrappers for remaining old children. //	WITHOUT_CLASSIFICATION	0.9996546909801766	WITHOUT_CLASSIFICATION	3.453090198234647E-4	DEFECT
// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //	WITHOUT_CLASSIFICATION	0.9999055965438532	WITHOUT_CLASSIFICATION	9.440345614673662E-5	DEFECT
/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/	WITHOUT_CLASSIFICATION	0.9999951622968515	WITHOUT_CLASSIFICATION	4.8377031485645714E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999993731617646	WITHOUT_CLASSIFICATION	6.268382353418435E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999993731617646	WITHOUT_CLASSIFICATION	6.268382353418435E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998442369564	WITHOUT_CLASSIFICATION	1.5576304365358334E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999927879202822	WITHOUT_CLASSIFICATION	7.2120797177645234E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998442369564	WITHOUT_CLASSIFICATION	1.5576304365358334E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999991778391297	WITHOUT_CLASSIFICATION	8.221608702699452E-7	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999992802466151	WITHOUT_CLASSIFICATION	7.19753384931698E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999996460519781	WITHOUT_CLASSIFICATION	3.5394802189278033E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999996665797506	WITHOUT_CLASSIFICATION	3.334202493993079E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999996665797506	WITHOUT_CLASSIFICATION	3.334202493993079E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999995299180988	WITHOUT_CLASSIFICATION	4.7008190110377763E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999995299180988	WITHOUT_CLASSIFICATION	4.7008190110377763E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999997976253412	WITHOUT_CLASSIFICATION	2.0237465887617023E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999997976253412	WITHOUT_CLASSIFICATION	2.0237465887617023E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999995265695356	WITHOUT_CLASSIFICATION	4.7343046445683755E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999995265695356	WITHOUT_CLASSIFICATION	4.7343046445683755E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999995265695356	WITHOUT_CLASSIFICATION	4.7343046445683755E-7	DEFECT
//public String getUpdateableText(Object object)	WITHOUT_CLASSIFICATION	0.9999996775676865	WITHOUT_CLASSIFICATION	3.224323134204387E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999995265695356	WITHOUT_CLASSIFICATION	4.7343046445683755E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999995265695356	WITHOUT_CLASSIFICATION	4.7343046445683755E-7	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();	WITHOUT_CLASSIFICATION	0.9999951906660303	WITHOUT_CLASSIFICATION	4.809333969830604E-6	DEFECT
// Check that the value is type compatible with the entry feature. //	WITHOUT_CLASSIFICATION	0.999991684373077	WITHOUT_CLASSIFICATION	8.315626923076894E-6	DEFECT
// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;	WITHOUT_CLASSIFICATION	0.9999981595265347	WITHOUT_CLASSIFICATION	1.8404734653418818E-6	DEFECT
// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //	WITHOUT_CLASSIFICATION	0.9997340818646046	WITHOUT_CLASSIFICATION	2.65918135395446E-4	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999236034416245	WITHOUT_CLASSIFICATION	7.639655837554641E-5	DEFECT
// Use an existing getReferenceValue() override. //	WITHOUT_CLASSIFICATION	0.99999994366093	WITHOUT_CLASSIFICATION	5.633907005350625E-8	DEFECT
// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //	WITHOUT_CLASSIFICATION	0.9999981028094448	WITHOUT_CLASSIFICATION	1.8971905551754292E-6	DEFECT
// Iterate over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999959472585745	WITHOUT_CLASSIFICATION	4.052741425525684E-6	DEFECT
// If this object is compatible with this reference... //	WITHOUT_CLASSIFICATION	0.9995894139557305	WITHOUT_CLASSIFICATION	4.1058604426944824E-4	DEFECT
// Iterate over all the set feature to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999997737199734	WITHOUT_CLASSIFICATION	2.2628002661539744E-7	DEFECT
// Build the collection of new child descriptors. //	WITHOUT_CLASSIFICATION	0.9999847282503871	WITHOUT_CLASSIFICATION	1.5271749612988205E-5	DEFECT
// Add child descriptors contributed by extenders. //	WITHOUT_CLASSIFICATION	0.9999903394938268	WITHOUT_CLASSIFICATION	9.660506173359287E-6	DEFECT
// If a sibling has been specified, add the best index possible to each CommandParameter. //	WITHOUT_CLASSIFICATION	0.9999889182608329	WITHOUT_CLASSIFICATION	1.1081739167032474E-5	DEFECT
// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //	WITHOUT_CLASSIFICATION	0.9999998679700484	WITHOUT_CLASSIFICATION	1.3202995166345055E-7	DEFECT
// For each CommandParameter with a non-null, multi-valued structural feature... //	WITHOUT_CLASSIFICATION	0.9999632125953248	WITHOUT_CLASSIFICATION	3.678740467525113E-5	DEFECT
// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //	WITHOUT_CLASSIFICATION	0.9999968638597136	WITHOUT_CLASSIFICATION	3.136140286441871E-6	DEFECT
// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //	WITHOUT_CLASSIFICATION	0.9999990433072523	WITHOUT_CLASSIFICATION	9.566927476842276E-7	DEFECT
// If the child feature follows the sibling feature, the child should be first in its feature. //	WITHOUT_CLASSIFICATION	0.9999953062980592	WITHOUT_CLASSIFICATION	4.693701940726201E-6	DEFECT
// Subclasses may override to add descriptors.	WITHOUT_CLASSIFICATION	0.9999970833593956	WITHOUT_CLASSIFICATION	2.916640604452216E-6	DEFECT
// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //	WITHOUT_CLASSIFICATION	0.9999949213575786	WITHOUT_CLASSIFICATION	5.078642421361989E-6	DEFECT
// Iterator over all the child references to factor each child to the right reference. //	WITHOUT_CLASSIFICATION	0.9999963588985747	WITHOUT_CLASSIFICATION	3.6411014251622353E-6	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9986432358399843	WITHOUT_CLASSIFICATION	0.0013567641600158021	DEFECT
// If it is a list type value... // 	WITHOUT_CLASSIFICATION	0.9986432358399843	WITHOUT_CLASSIFICATION	0.0013567641600158021	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9978775845432781	WITHOUT_CLASSIFICATION	0.002122415456721976	DEFECT
// Is this object in this feature... //	WITHOUT_CLASSIFICATION	0.9978775845432781	WITHOUT_CLASSIFICATION	0.002122415456721976	DEFECT
// Add it to the list and remove it from the other list. //	WITHOUT_CLASSIFICATION	0.9999970247434146	WITHOUT_CLASSIFICATION	2.975256585486774E-6	DEFECT
// If we have children to remove for this feature, create a command for it. //	WITHOUT_CLASSIFICATION	0.9999842388641318	WITHOUT_CLASSIFICATION	1.5761135868183817E-5	DEFECT
// It's just a single value //	WITHOUT_CLASSIFICATION	0.9999999797706669	WITHOUT_CLASSIFICATION	2.022933309348742E-8	DEFECT
// Create a command to set this to null and remove the object from the other list. //	WITHOUT_CLASSIFICATION	0.9999994837444236	WITHOUT_CLASSIFICATION	5.162555764319805E-7	DEFECT
// If all the objects are used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999992560389468	WITHOUT_CLASSIFICATION	7.43961053204078E-7	DEFECT
// Correct the index, if necessary. //	WITHOUT_CLASSIFICATION	0.999988407397032	WITHOUT_CLASSIFICATION	1.159260296815535E-5	DEFECT
// Consume the rest of the appropriate children. //	WITHOUT_CLASSIFICATION	0.9999996042453175	WITHOUT_CLASSIFICATION	3.957546824696459E-7	DEFECT
// Is this child in this feature... //	WITHOUT_CLASSIFICATION	0.997695273745218	WITHOUT_CLASSIFICATION	0.0023047262547820175	DEFECT
// Create a command for this feature,  //	WITHOUT_CLASSIFICATION	0.9999985120121822	WITHOUT_CLASSIFICATION	1.4879878178318043E-6	DEFECT
// If all the objects aren't used up by the above, then we can't do the command. //	WITHOUT_CLASSIFICATION	0.9999996761970239	WITHOUT_CLASSIFICATION	3.238029760200425E-7	DEFECT
// Compute the relative index as best as possible. //	WITHOUT_CLASSIFICATION	0.999999490134297	WITHOUT_CLASSIFICATION	5.098657029305296E-7	DEFECT
// Create a command for this feature, //	WITHOUT_CLASSIFICATION	0.9999987809658548	WITHOUT_CLASSIFICATION	1.2190341452493205E-6	DEFECT
// continue to next case	WITHOUT_CLASSIFICATION	0.9999988135398636	WITHOUT_CLASSIFICATION	1.1864601363993784E-6	DEFECT
// All this logic is so that we only create a list if the adapter is set to more than one target. //	WITHOUT_CLASSIFICATION	0.9999999957622696	WITHOUT_CLASSIFICATION	4.23773048379847E-9	DEFECT
// Dispose the child wrappers. //	WITHOUT_CLASSIFICATION	0.9999993645506967	WITHOUT_CLASSIFICATION	6.354493032243428E-7	DEFECT
// Ignore the unset notification for an isMany feature; the value is boolean in this case. //	WITHOUT_CLASSIFICATION	0.9999903422458083	WITHOUT_CLASSIFICATION	9.657754191722386E-6	DEFECT
// No index specified when removing all elements. //	WITHOUT_CLASSIFICATION	0.9999994014112072	WITHOUT_CLASSIFICATION	5.985887927631928E-7	DEFECT
// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //	WITHOUT_CLASSIFICATION	0.9985659057511945	WITHOUT_CLASSIFICATION	0.0014340942488054247	DEFECT
// Unwrap collection. //	WITHOUT_CLASSIFICATION	0.9999988276496483	WITHOUT_CLASSIFICATION	1.172350351643209E-6	DEFECT
// If the first wrapped value is found... //	WITHOUT_CLASSIFICATION	0.9999168024595887	WITHOUT_CLASSIFICATION	8.319754041127489E-5	DEFECT
// Allocate the new collection, and populate it up to this point. //	WITHOUT_CLASSIFICATION	0.999999417621458	WITHOUT_CLASSIFICATION	5.82378541913595E-7	DEFECT
// If a new collection was allocated, continue to populate it. //	WITHOUT_CLASSIFICATION	0.9999983078395681	WITHOUT_CLASSIFICATION	1.6921604318661895E-6	DEFECT
// Unwrap value. //	WITHOUT_CLASSIFICATION	0.9999995318694667	WITHOUT_CLASSIFICATION	4.6813053343153515E-7	DEFECT
// Wrappers from the old command parameter must be considered in order for cut and paste to work. //	WITHOUT_CLASSIFICATION	0.9960864766916452	WITHOUT_CLASSIFICATION	0.003913523308354861	DEFECT
// If the adapter factory is composeable, we'll adapt using the root. //	WITHOUT_CLASSIFICATION	0.9999987338199745	WITHOUT_CLASSIFICATION	1.2661800254604659E-6	DEFECT
// Build list of wrapped children from the appropriate adapters. //	WITHOUT_CLASSIFICATION	0.9999996112553768	WITHOUT_CLASSIFICATION	3.887446230881794E-7	DEFECT
// Add in additional wrappers to search. //	WITHOUT_CLASSIFICATION	0.9999535858370615	WITHOUT_CLASSIFICATION	4.6414162938547386E-5	DEFECT
/*   * Returns the help context id for this property.   */	WITHOUT_CLASSIFICATION	0.9999602267386715	WITHOUT_CLASSIFICATION	3.977326132859844E-5	DEFECT
/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/	WITHOUT_CLASSIFICATION	0.9999996653185742	WITHOUT_CLASSIFICATION	3.346814258863064E-7	DEFECT
// Does this part provide an editing domain? //	WITHOUT_CLASSIFICATION	0.9999551840438992	WITHOUT_CLASSIFICATION	4.481595610088587E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999997941074122	WITHOUT_CLASSIFICATION	2.0589258769838185E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999660903053	WITHOUT_CLASSIFICATION	3.3909694784460406E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998762952466	WITHOUT_CLASSIFICATION	1.237047533777149E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999992245098178	WITHOUT_CLASSIFICATION	7.75490182166597E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999829356381	WITHOUT_CLASSIFICATION	1.7064361898045296E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999849400648185	WITHOUT_CLASSIFICATION	1.5059935181373625E-5	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996138216523	WITHOUT_CLASSIFICATION	3.861783478063688E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998949513081	WITHOUT_CLASSIFICATION	1.0504869187685939E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999999973885357	WITHOUT_CLASSIFICATION	2.611464303361549E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995751368276	WITHOUT_CLASSIFICATION	4.2486317237552965E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999966882499354	WITHOUT_CLASSIFICATION	3.31175006461721E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999987446375067	WITHOUT_CLASSIFICATION	1.2553624931933802E-6	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999995278526853	WITHOUT_CLASSIFICATION	4.721473147652249E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998595120936	WITHOUT_CLASSIFICATION	1.404879063273303E-7	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999665047659	WITHOUT_CLASSIFICATION	3.349523404823831E-8	DEFECT
// There are attributes to handle.	WITHOUT_CLASSIFICATION	0.9999969058959584	WITHOUT_CLASSIFICATION	3.0941040415194793E-6	DEFECT
// This ensure that this package itself is traversed even if the reference type is EObject... //	WITHOUT_CLASSIFICATION	0.9999798907017078	WITHOUT_CLASSIFICATION	2.0109298292309866E-5	DEFECT
// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //	WITHOUT_CLASSIFICATION	0.9999997519260986	WITHOUT_CLASSIFICATION	2.480739014115272E-7	DEFECT
// Is this a containment reference child? //	WITHOUT_CLASSIFICATION	0.9999993760112551	WITHOUT_CLASSIFICATION	6.239887450096476E-7	DEFECT
// Is this the label feature? //	WITHOUT_CLASSIFICATION	0.9999981533032434	WITHOUT_CLASSIFICATION	1.8466967566455587E-6	DEFECT
// Or a feature map child? //	WITHOUT_CLASSIFICATION	0.9999998418111881	WITHOUT_CLASSIFICATION	1.5818881193531055E-7	DEFECT
// Don't include controlled children here, they'll show up under their container. //	WITHOUT_CLASSIFICATION	0.999994342914944	WITHOUT_CLASSIFICATION	5.6570850560265905E-6	DEFECT
// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());	WITHOUT_CLASSIFICATION	0.9999999337106756	WITHOUT_CLASSIFICATION	6.628932436995701E-8	DEFECT
// Overlay if the resource is the target for any controlled objects.  //	WITHOUT_CLASSIFICATION	0.9999999768047333	WITHOUT_CLASSIFICATION	2.3195266619722675E-8	DEFECT
// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:	WITHOUT_CLASSIFICATION	0.9999961069182692	WITHOUT_CLASSIFICATION	3.893081730770397E-6	DEFECT
// TreeNode	WITHOUT_CLASSIFICATION	0.9999938861802791	WITHOUT_CLASSIFICATION	6.113819720907837E-6	DEFECT
//TreeFactory	WITHOUT_CLASSIFICATION	0.9999919876347242	WITHOUT_CLASSIFICATION	8.012365275886013E-6	DEFECT
//TreePackage	WITHOUT_CLASSIFICATION	0.9999973618834967	WITHOUT_CLASSIFICATION	2.6381165033521917E-6	DEFECT
//TreeFactoryImpl	WITHOUT_CLASSIFICATION	0.9999933149073547	WITHOUT_CLASSIFICATION	6.685092645340655E-6	DEFECT
//TreeNodeImpl	WITHOUT_CLASSIFICATION	0.9999693932899855	WITHOUT_CLASSIFICATION	3.060671001460542E-5	DEFECT
//TreePackageImpl	WITHOUT_CLASSIFICATION	0.9999955793936623	WITHOUT_CLASSIFICATION	4.420606337647296E-6	DEFECT
/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/	WITHOUT_CLASSIFICATION	0.9999961671125508	WITHOUT_CLASSIFICATION	3.832887449239975E-6	DEFECT
//TreeAdapterFactory	WITHOUT_CLASSIFICATION	0.9999897255738931	WITHOUT_CLASSIFICATION	1.027442610696006E-5	DEFECT
//TreeSwitch	WITHOUT_CLASSIFICATION	0.999990701381064	WITHOUT_CLASSIFICATION	9.298618935994553E-6	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999675751754	WITHOUT_CLASSIFICATION	3.242482459837015E-8	DEFECT
// If there is a new one... //	WITHOUT_CLASSIFICATION	0.9999313500560623	WITHOUT_CLASSIFICATION	6.864994393768187E-5	DEFECT
// This guard is for extra security, but should not be necessary. //	WITHOUT_CLASSIFICATION	0.9966997736447586	WITHOUT_CLASSIFICATION	0.0033002263552414325	DEFECT
// Use up the command. // Note that notification will cause a new command to be created. //	WITHOUT_CLASSIFICATION	0.9999765607118245	WITHOUT_CLASSIFICATION	2.343928817542624E-5	DEFECT
// We will only deal with structured selections. //	WITHOUT_CLASSIFICATION	0.9999998777823867	WITHOUT_CLASSIFICATION	1.2221761331509805E-7	DEFECT
// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?	WITHOUT_CLASSIFICATION	0.8734302599377449	WITHOUT_CLASSIFICATION	0.12656974006225513	DEFECT
// If we have a good editing domain... //	WITHOUT_CLASSIFICATION	0.9998828415902904	WITHOUT_CLASSIFICATION	1.171584097096247E-4	DEFECT
// Delegate the action for this object to the editing domain. //	WITHOUT_CLASSIFICATION	0.9999988370878827	WITHOUT_CLASSIFICATION	1.1629121172817102E-6	DEFECT
// We can enable the action as indicated by the command, // and we can set all the other values from the command. //	WITHOUT_CLASSIFICATION	0.9999999236770805	WITHOUT_CLASSIFICATION	7.632291955291518E-8	DEFECT
// Nothing more to do and we don't want to do the default stuff below. //	WITHOUT_CLASSIFICATION	0.9999999484538274	WITHOUT_CLASSIFICATION	5.154617246460341E-8	DEFECT
// We just can't do it. //	WITHOUT_CLASSIFICATION	0.9999999049681373	WITHOUT_CLASSIFICATION	9.503186274361576E-8	DEFECT
// No point in keeping garbage. //	WITHOUT_CLASSIFICATION	0.9999992835642891	WITHOUT_CLASSIFICATION	7.16435710878359E-7	DEFECT
// Show the colourless image. //	WITHOUT_CLASSIFICATION	0.9999988888415469	WITHOUT_CLASSIFICATION	1.1111584530967642E-6	DEFECT
// try to get editing domain from workbench part	WITHOUT_CLASSIFICATION	0.999908787541727	WITHOUT_CLASSIFICATION	9.121245827292532E-5	DEFECT
// only handle structured selections	WITHOUT_CLASSIFICATION	0.9999999094617297	WITHOUT_CLASSIFICATION	9.053827030485085E-8	DEFECT
// convert the selection to a collection of the selected objects	WITHOUT_CLASSIFICATION	0.9999997502411607	WITHOUT_CLASSIFICATION	2.497588392812925E-7	DEFECT
// if the editing domain wasn't given by the workbench part, try to get // it from the selection	WITHOUT_CLASSIFICATION	0.9999749522513294	WITHOUT_CLASSIFICATION	2.5047748670584602E-5	DEFECT
// if we found an editing domain, create command	WITHOUT_CLASSIFICATION	0.999999099095392	WITHOUT_CLASSIFICATION	9.009046080879641E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// use up the command	WITHOUT_CLASSIFICATION	0.9999982257925424	WITHOUT_CLASSIFICATION	1.774207457578275E-6	DEFECT
// Add our standard marker. //	WITHOUT_CLASSIFICATION	0.9999980817668238	WITHOUT_CLASSIFICATION	1.9182331761917913E-6	DEFECT
// Add the edit menu actions. //	WITHOUT_CLASSIFICATION	0.9999944101545357	WITHOUT_CLASSIFICATION	5.5898454643130075E-6	DEFECT
// Add our other standard marker. //	WITHOUT_CLASSIFICATION	0.9999971405952703	WITHOUT_CLASSIFICATION	2.859404729603842E-6	DEFECT
// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //	WITHOUT_CLASSIFICATION	0.9999998568508333	WITHOUT_CLASSIFICATION	1.4314916685909321E-7	DEFECT
// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //	WITHOUT_CLASSIFICATION	0.9999984971726558	WITHOUT_CLASSIFICATION	1.5028273441832597E-6	DEFECT
// grabHorizontal = true;	WITHOUT_CLASSIFICATION	0.9999997287685799	WITHOUT_CLASSIFICATION	2.712314200932502E-7	DEFECT
// We use multi even for a single line because we want to respond to the enter key. //	WITHOUT_CLASSIFICATION	0.9999822257853594	WITHOUT_CLASSIFICATION	1.777421464049263E-5	DEFECT
// event is null when choiceTableViewer is double clicked	WITHOUT_CLASSIFICATION	0.9999998851935122	WITHOUT_CLASSIFICATION	1.1480648776993824E-7	DEFECT
// event is null when featureTableViewer is double clicked 	WITHOUT_CLASSIFICATION	0.9999995485789047	WITHOUT_CLASSIFICATION	4.5142109517499945E-7	DEFECT
// In column 0, the drop-down is indented past the collapse/expand icon. //	WITHOUT_CLASSIFICATION	0.9999294956774153	WITHOUT_CLASSIFICATION	7.050432258470694E-5	DEFECT
// dropDown.addListener(SWT.Paint, dropDownListener);	WITHOUT_CLASSIFICATION	0.9999993639700578	WITHOUT_CLASSIFICATION	6.360299422471837E-7	DEFECT
// This should be consistent with paintControl(). // 	WITHOUT_CLASSIFICATION	0.9992405155225058	WITHOUT_CLASSIFICATION	7.594844774941284E-4	DEFECT
// setEditor(null, null, -1);	WITHOUT_CLASSIFICATION	0.9999974238765155	WITHOUT_CLASSIFICATION	2.576123484503637E-6	DEFECT
// Fill with background. //	WITHOUT_CLASSIFICATION	0.9999685781611233	WITHOUT_CLASSIFICATION	3.142183887671842E-5	DEFECT
// Draw the icons. //	WITHOUT_CLASSIFICATION	0.9999994179731835	WITHOUT_CLASSIFICATION	5.82026816480193E-7	DEFECT
// Draw the text. //	WITHOUT_CLASSIFICATION	0.9999992027038624	WITHOUT_CLASSIFICATION	7.972961375356912E-7	DEFECT
// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);	WITHOUT_CLASSIFICATION	0.9999993042110098	WITHOUT_CLASSIFICATION	6.957889901594894E-7	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999978768686344	WITHOUT_CLASSIFICATION	2.1231313655961966E-6	DEFECT
// Remember the requested operation.	WITHOUT_CLASSIFICATION	0.9999978768686344	WITHOUT_CLASSIFICATION	2.1231313655961966E-6	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */	WITHOUT_CLASSIFICATION	0.9999999979406778	WITHOUT_CLASSIFICATION	2.059322169244562E-9	DEFECT
// Draw background of right-side button. //	WITHOUT_CLASSIFICATION	0.9999824820542889	WITHOUT_CLASSIFICATION	1.7517945711100836E-5	DEFECT
// Draw down arrow, offset if dropped. //	WITHOUT_CLASSIFICATION	0.9999987959065288	WITHOUT_CLASSIFICATION	1.204093471214429E-6	DEFECT
// Draw ellipses, offset if down. //	WITHOUT_CLASSIFICATION	0.999999597634966	WITHOUT_CLASSIFICATION	4.023650339186799E-7	DEFECT
// Draw outline. //	WITHOUT_CLASSIFICATION	0.999999053038638	WITHOUT_CLASSIFICATION	9.469613618812842E-7	DEFECT
// Draw 3D effect on right-side button. //	WITHOUT_CLASSIFICATION	0.999870560495604	WITHOUT_CLASSIFICATION	1.2943950439603312E-4	DEFECT
// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //	WITHOUT_CLASSIFICATION	0.999999893461292	WITHOUT_CLASSIFICATION	1.0653870792268601E-7	DEFECT
// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //	WITHOUT_CLASSIFICATION	0.9999990929136623	WITHOUT_CLASSIFICATION	9.070863376897506E-7	DEFECT
// A command was created if the source was available early, and the // information used to create it was cached... //	WITHOUT_CLASSIFICATION	0.9999950292455363	WITHOUT_CLASSIFICATION	4.9707544636847546E-6	DEFECT
// Recreate the command. //	WITHOUT_CLASSIFICATION	0.9999792215280248	WITHOUT_CLASSIFICATION	2.0778471975243444E-5	DEFECT
// Otherwise, the source should be available now as event.data, and we // can create the command. //	WITHOUT_CLASSIFICATION	0.9999998736101149	WITHOUT_CLASSIFICATION	1.2638988515505517E-7	DEFECT
// If the command can execute... //	WITHOUT_CLASSIFICATION	0.9885886001311365	WITHOUT_CLASSIFICATION	0.011411399868863567	DEFECT
// Execute it. //	WITHOUT_CLASSIFICATION	0.9999815376533624	WITHOUT_CLASSIFICATION	1.846234663769058E-5	DEFECT
// Otherwise, let's call the whole thing off. //	WITHOUT_CLASSIFICATION	0.9999998224564081	WITHOUT_CLASSIFICATION	1.7754359200154601E-7	DEFECT
// Clean up the state. //	WITHOUT_CLASSIFICATION	0.9999999321077943	WITHOUT_CLASSIFICATION	6.789220575524127E-8	DEFECT
// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.	WITHOUT_CLASSIFICATION	0.9999079042611237	WITHOUT_CLASSIFICATION	9.209573887623256E-5	DEFECT
// Clear out any old information from a previous drag. //	WITHOUT_CLASSIFICATION	0.999993091664611	WITHOUT_CLASSIFICATION	6.908335388954865E-6	DEFECT
// Get the target object from the item widget and the mouse location in it. //	WITHOUT_CLASSIFICATION	0.999999987076127	WITHOUT_CLASSIFICATION	1.2923873002105692E-8	DEFECT
// Determine if we can create a valid command at the current location. //	WITHOUT_CLASSIFICATION	0.999996076360013	WITHOUT_CLASSIFICATION	3.923639987085978E-6	DEFECT
// If we don't have a previous cached command... //	WITHOUT_CLASSIFICATION	0.9989696510414291	WITHOUT_CLASSIFICATION	0.0010303489585708812	DEFECT
// Remember the target; create the command and test if it is executable. //	WITHOUT_CLASSIFICATION	0.9999921538079178	WITHOUT_CLASSIFICATION	7.846192082216978E-6	DEFECT
// Keep track of any changes to the command information.	WITHOUT_CLASSIFICATION	0.9999949091078049	WITHOUT_CLASSIFICATION	5.090892195118054E-6	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999998566516431	WITHOUT_CLASSIFICATION	1.4334835680392433E-7	DEFECT
// create OK and Cancel buttons by default	WITHOUT_CLASSIFICATION	0.9999999639805784	WITHOUT_CLASSIFICATION	3.601942160654931E-8	DEFECT
// create composite	WITHOUT_CLASSIFICATION	0.9999998685985039	WITHOUT_CLASSIFICATION	1.3140149607759894E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999976404256707	WITHOUT_CLASSIFICATION	2.359574329311418E-6	DEFECT
// }}	WITHOUT_CLASSIFICATION	0.9999925395039518	WITHOUT_CLASSIFICATION	7.460496048155443E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999995265695356	WITHOUT_CLASSIFICATION	4.7343046445683755E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999995265695356	WITHOUT_CLASSIFICATION	4.7343046445683755E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999995265695356	WITHOUT_CLASSIFICATION	4.7343046445683755E-7	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999995265695356	WITHOUT_CLASSIFICATION	4.7343046445683755E-7	DEFECT
// Check if the cached command can provide DND feedback/revalidation. //	WITHOUT_CLASSIFICATION	0.9999304550819711	WITHOUT_CLASSIFICATION	6.954491802893272E-5	DEFECT
// If so, revalidate the command. //	WITHOUT_CLASSIFICATION	0.9999439954216593	WITHOUT_CLASSIFICATION	5.600457834055319E-5	DEFECT
// If not, dispose the current command and create a new one. //	WITHOUT_CLASSIFICATION	0.9999939191004404	WITHOUT_CLASSIFICATION	6.0808995596504615E-6	DEFECT
// If this command can provide detailed drag and drop feedback... //	WITHOUT_CLASSIFICATION	0.9986948660082016	WITHOUT_CLASSIFICATION	0.0013051339917983962	DEFECT
// Use it for the operation and drag under effect. //	WITHOUT_CLASSIFICATION	0.9999989337722113	WITHOUT_CLASSIFICATION	1.0662277887009315E-6	DEFECT
// There is no executable command, so we'd better nix the whole deal. //	WITHOUT_CLASSIFICATION	0.9999854441041773	WITHOUT_CLASSIFICATION	1.4555895822763024E-5	DEFECT
// Check whether the current data type can be transfered locally. //	WITHOUT_CLASSIFICATION	0.9999970541014608	WITHOUT_CLASSIFICATION	2.945898539261244E-6	DEFECT
// Iterate over the data types to see if there is a data type that supports a local transfer. //	WITHOUT_CLASSIFICATION	0.9999999293034914	WITHOUT_CLASSIFICATION	7.069650864048727E-8	DEFECT
// If the local transfer supports this data type, switch to that data type //	WITHOUT_CLASSIFICATION	0.9999759617323792	WITHOUT_CLASSIFICATION	2.403826762070926E-5	DEFECT
// Transfer the data and, if non-null, extract it. //	WITHOUT_CLASSIFICATION	0.9999964456652143	WITHOUT_CLASSIFICATION	3.5543347857341966E-6	DEFECT
// Transfer the data and convert the structured selection to a collection of objects. //	WITHOUT_CLASSIFICATION	0.9999999945697072	WITHOUT_CLASSIFICATION	5.43029274692505E-9	DEFECT
//do this here because setting the text will set enablement on the OK // button	WITHOUT_CLASSIFICATION	0.9999777538204883	WITHOUT_CLASSIFICATION	2.2246179511774477E-5	DEFECT
/* | GridData.GRAB_VERTICAL */	WITHOUT_CLASSIFICATION	0.9999960888734777	WITHOUT_CLASSIFICATION	3.911126522407946E-6	DEFECT
// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292	WITHOUT_CLASSIFICATION	0.9999897808163686	WITHOUT_CLASSIFICATION	1.0219183631492423E-5	DEFECT
// If there was no old input, then we must be providing content for this part for the first time... //	WITHOUT_CLASSIFICATION	0.9999946072554831	WITHOUT_CLASSIFICATION	5.392744516986291E-6	DEFECT
// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //	WITHOUT_CLASSIFICATION	0.9999981629362071	WITHOUT_CLASSIFICATION	1.8370637929605967E-6	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999993731617646	WITHOUT_CLASSIFICATION	6.268382353418435E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999993731617646	WITHOUT_CLASSIFICATION	6.268382353418435E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998442369564	WITHOUT_CLASSIFICATION	1.5576304365358334E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //	WITHOUT_CLASSIFICATION	0.9999998442369564	WITHOUT_CLASSIFICATION	1.5576304365358334E-7	DEFECT
// No image is a good default. //	WITHOUT_CLASSIFICATION	0.9999997935874833	WITHOUT_CLASSIFICATION	2.0641251663367792E-7	DEFECT
// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 	WITHOUT_CLASSIFICATION	0.9999434702488816	WITHOUT_CLASSIFICATION	5.652975111835971E-5	DEFECT
// n2.isLabelUpdate()	WITHOUT_CLASSIFICATION	0.9999996262731535	WITHOUT_CLASSIFICATION	3.7372684650258403E-7	DEFECT
// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //	WITHOUT_CLASSIFICATION	0.9999788328511544	WITHOUT_CLASSIFICATION	2.1167148845606873E-5	DEFECT
// ???	WITHOUT_CLASSIFICATION	0.9999897875888989	WITHOUT_CLASSIFICATION	1.0212411101193897E-5	DEFECT
//    case Notification.TOUCH:	WITHOUT_CLASSIFICATION	0.9999994394514166	WITHOUT_CLASSIFICATION	5.605485834213463E-7	DEFECT
// We ignore non-changes for now. //	WITHOUT_CLASSIFICATION	0.999999328042804	WITHOUT_CLASSIFICATION	6.719571959725836E-7	DEFECT
// fireLabelProviderChanged();	WITHOUT_CLASSIFICATION	0.9999994771705348	WITHOUT_CLASSIFICATION	5.228294651781835E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.999995222583271	WITHOUT_CLASSIFICATION	4.777416728959014E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.999995222583271	WITHOUT_CLASSIFICATION	4.777416728959014E-6	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999871742045983	WITHOUT_CLASSIFICATION	1.2825795401819789E-5	DEFECT
// Ignore any exceptions and assume the class isn't available.	WITHOUT_CLASSIFICATION	0.9999871742045983	WITHOUT_CLASSIFICATION	1.2825795401819789E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// If there is a column object, just convert it to a string. //	WITHOUT_CLASSIFICATION	0.9999998547066733	WITHOUT_CLASSIFICATION	1.452933266850054E-7	DEFECT
// No font is a good default. //	WITHOUT_CLASSIFICATION	0.9999992802466151	WITHOUT_CLASSIFICATION	7.19753384931698E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999991778391297	WITHOUT_CLASSIFICATION	8.221608702699452E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemFontProvider. //	WITHOUT_CLASSIFICATION	0.9999996460519781	WITHOUT_CLASSIFICATION	3.5394802189278033E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999996665797506	WITHOUT_CLASSIFICATION	3.334202493993079E-7	DEFECT
// No color is a good default. //	WITHOUT_CLASSIFICATION	0.9999996665797506	WITHOUT_CLASSIFICATION	3.334202493993079E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999995299180988	WITHOUT_CLASSIFICATION	4.7008190110377763E-7	DEFECT
// Now we could check that the adapter implements interface ITableItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999995299180988	WITHOUT_CLASSIFICATION	4.7008190110377763E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999997976253412	WITHOUT_CLASSIFICATION	2.0237465887617023E-7	DEFECT
// Otherwise, we could check that the adapter implements interface IItemColorProvider. //	WITHOUT_CLASSIFICATION	0.9999997976253412	WITHOUT_CLASSIFICATION	2.0237465887617023E-7	DEFECT
// The class is not available.	WITHOUT_CLASSIFICATION	0.9999691114207963	WITHOUT_CLASSIFICATION	3.088857920377928E-5	DEFECT
// Nested GenAnnotations	WITHOUT_CLASSIFICATION	0.9999997483516363	WITHOUT_CLASSIFICATION	2.516483637582476E-7	DEFECT
/*   * For debugging purposes.  May be removed in the future.   */	WITHOUT_CLASSIFICATION	0.999992632631874	WITHOUT_CLASSIFICATION	7.367368126134794E-6	DEFECT
// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //	WITHOUT_CLASSIFICATION	0.9503030377165393	WITHOUT_CLASSIFICATION	0.0496969622834606	DEFECT
// Create resources for all the root EPackages. //	WITHOUT_CLASSIFICATION	0.9999980361609361	WITHOUT_CLASSIFICATION	1.9638390638797645E-6	DEFECT
// removing the first space	WITHOUT_CLASSIFICATION	0.9999999330467847	WITHOUT_CLASSIFICATION	6.695321530441873E-8	DEFECT
// Subclasses may overwrite	WITHOUT_CLASSIFICATION	0.9999994580995518	WITHOUT_CLASSIFICATION	5.419004481376498E-7	DEFECT
// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.	WITHOUT_CLASSIFICATION	0.9999988024981638	WITHOUT_CLASSIFICATION	1.1975018362803574E-6	DEFECT
// Initialize the GenModel with all the computed data. //	WITHOUT_CLASSIFICATION	0.9999993923574959	WITHOUT_CLASSIFICATION	6.076425040040366E-7	DEFECT
// Restore all configured settings from the original. //	WITHOUT_CLASSIFICATION	0.9999701045480498	WITHOUT_CLASSIFICATION	2.9895451950278005E-5	DEFECT
// Handle application genmodel stub //	WITHOUT_CLASSIFICATION	0.9999999202937344	WITHOUT_CLASSIFICATION	7.970626551786347E-8	DEFECT
// Determine which projects will need to be referenced. //	WITHOUT_CLASSIFICATION	0.9999857646402699	WITHOUT_CLASSIFICATION	1.4235359730141568E-5	DEFECT
// Create the model project. //	WITHOUT_CLASSIFICATION	0.9999962155419306	WITHOUT_CLASSIFICATION	3.784458069350809E-6	DEFECT
// Add a dummy GenModel for referenced packages. //	WITHOUT_CLASSIFICATION	0.9999997819408103	WITHOUT_CLASSIFICATION	2.18059189809588E-7	DEFECT
// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //	WITHOUT_CLASSIFICATION	0.9999969234160785	WITHOUT_CLASSIFICATION	3.0765839215320395E-6	DEFECT
// Walk the project looking for .java files to analyze. //	WITHOUT_CLASSIFICATION	0.9999554298725063	WITHOUT_CLASSIFICATION	4.4570127493732363E-5	DEFECT
// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //	WITHOUT_CLASSIFICATION	0.9999931429503535	WITHOUT_CLASSIFICATION	6.85704964659625E-6	DEFECT
// Now we need to hook up opposites by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999975374117182	WITHOUT_CLASSIFICATION	2.4625882817682467E-6	DEFECT
// Containers are transient by default unless explicitly annotated otherwise. //	WITHOUT_CLASSIFICATION	0.9999999999257961	WITHOUT_CLASSIFICATION	7.420387188789202E-11	DEFECT
// Now we need to hook up keys by finding the named feature in the type. //	WITHOUT_CLASSIFICATION	0.9999903946891515	WITHOUT_CLASSIFICATION	9.605310848439625E-6	DEFECT
// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //	WITHOUT_CLASSIFICATION	0.9999995784284587	WITHOUT_CLASSIFICATION	4.215715413220078E-7	DEFECT
// Now we should sort. //	WITHOUT_CLASSIFICATION	0.9999949862295001	WITHOUT_CLASSIFICATION	5.013770499969877E-6	DEFECT
// Find the fragment root so that we can generate to the right location (by default). //	WITHOUT_CLASSIFICATION	0.9999901848884535	WITHOUT_CLASSIFICATION	9.81511154645325E-6	DEFECT
// Iterate over all projects to look at the manifests. //	WITHOUT_CLASSIFICATION	0.9999986971028054	WITHOUT_CLASSIFICATION	1.3028971945427982E-6	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9998701349539687	WITHOUT_CLASSIFICATION	1.2986504603120194E-4	DEFECT
// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //	WITHOUT_CLASSIFICATION	0.9999998926934073	WITHOUT_CLASSIFICATION	1.0730659272985801E-7	DEFECT
// Also add each required plugin for consideration in the loop. //	WITHOUT_CLASSIFICATION	0.9977872856951888	WITHOUT_CLASSIFICATION	0.002212714304811273	DEFECT
// If it's a platform plugin URI, include it in the map. //	WITHOUT_CLASSIFICATION	0.9999407629312194	WITHOUT_CLASSIFICATION	5.923706878065881E-5	DEFECT
// Keep only the plugins that have GenModels for consideration. //	WITHOUT_CLASSIFICATION	0.9908155118559389	WITHOUT_CLASSIFICATION	0.00918448814406116	DEFECT
// Consider each GenModel location URI for each required plugin. //	WITHOUT_CLASSIFICATION	0.9970115683799208	WITHOUT_CLASSIFICATION	0.0029884316200790976	DEFECT
// Compute the closure. //	WITHOUT_CLASSIFICATION	0.9999999682648321	WITHOUT_CLASSIFICATION	3.1735167929545725E-8	DEFECT
// use no encoding	WITHOUT_CLASSIFICATION	0.9999994378404177	WITHOUT_CLASSIFICATION	5.621595822799623E-7	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.999997503389424	WITHOUT_CLASSIFICATION	2.4966105761281232E-6	DEFECT
// Create the EPackage on demand. //	WITHOUT_CLASSIFICATION	0.99999819984467	WITHOUT_CLASSIFICATION	1.8001553300347947E-6	DEFECT
// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //	WITHOUT_CLASSIFICATION	0.9999982485715515	WITHOUT_CLASSIFICATION	1.7514284483845832E-6	DEFECT
// Get the package name and see if there's an EPackage for it. //	WITHOUT_CLASSIFICATION	0.9999999119183282	WITHOUT_CLASSIFICATION	8.808167185274227E-8	DEFECT
// If it's an interface, then it will be treated as an EClass //	WITHOUT_CLASSIFICATION	0.9999984482092552	WITHOUT_CLASSIFICATION	1.5517907447946372E-6	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //	WITHOUT_CLASSIFICATION	0.9999982558966254	WITHOUT_CLASSIFICATION	1.7441033745884204E-6	DEFECT
// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //	WITHOUT_CLASSIFICATION	0.9999993211953728	WITHOUT_CLASSIFICATION	6.788046272068091E-7	DEFECT
// Match them and accumulate the appropriate result. //	WITHOUT_CLASSIFICATION	0.9999964020140968	WITHOUT_CLASSIFICATION	3.597985903302418E-6	DEFECT
// Walk the methods. //	WITHOUT_CLASSIFICATION	0.9999991698759491	WITHOUT_CLASSIFICATION	8.301240510047188E-7	DEFECT
// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //	WITHOUT_CLASSIFICATION	0.9999900047090429	WITHOUT_CLASSIFICATION	9.995290957018163E-6	DEFECT
// Otherwise it's treated as an EEnum //	WITHOUT_CLASSIFICATION	0.9999999911870899	WITHOUT_CLASSIFICATION	8.812910127567636E-9	DEFECT
// Find Packages and Factories	WITHOUT_CLASSIFICATION	0.9999995982991626	WITHOUT_CLASSIFICATION	4.017008373180422E-7	DEFECT
// It's definitely a package if it was declared as such. //	WITHOUT_CLASSIFICATION	0.9999999243146216	WITHOUT_CLASSIFICATION	7.568537842172263E-8	DEFECT
// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //	WITHOUT_CLASSIFICATION	0.999988047285371	WITHOUT_CLASSIFICATION	1.1952714628888719E-5	DEFECT
// This will catch inherited features, or additional things we don't want to worry about.	WITHOUT_CLASSIFICATION	0.9573670505135712	WITHOUT_CLASSIFICATION	0.04263294948642882	DEFECT
// Check whether this has @model annotation contents. //	WITHOUT_CLASSIFICATION	0.9999987480961423	WITHOUT_CLASSIFICATION	1.2519038576634343E-6	DEFECT
// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //	WITHOUT_CLASSIFICATION	0.9999885852375759	WITHOUT_CLASSIFICATION	1.1414762424026537E-5	DEFECT
// Map to an EEnum.	WITHOUT_CLASSIFICATION	0.9999989272339929	WITHOUT_CLASSIFICATION	1.072766007075989E-6	DEFECT
// The feature name is extracted lower cased. //	WITHOUT_CLASSIFICATION	0.9999977077829352	WITHOUT_CLASSIFICATION	2.2922170648180575E-6	DEFECT
// The name is extracted and lower cased. //	WITHOUT_CLASSIFICATION	0.9999924563596582	WITHOUT_CLASSIFICATION	7.543640341853889E-6	DEFECT
// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //	WITHOUT_CLASSIFICATION	0.9989089137226288	WITHOUT_CLASSIFICATION	0.001091086277371205	DEFECT
// Each token in exceptions will specify a data type for the corresponding exception. //	WITHOUT_CLASSIFICATION	0.9706677390724698	WITHOUT_CLASSIFICATION	0.029332260927530177	DEFECT
// If we aren't doing an operation... //	WITHOUT_CLASSIFICATION	0.9999461284918889	WITHOUT_CLASSIFICATION	5.3871508111032293E-5	DEFECT
// We'll create one of these. //	WITHOUT_CLASSIFICATION	0.999999961075808	WITHOUT_CLASSIFICATION	3.892419198895637E-8	DEFECT
// If any of these attributes appear, this must be a reference. //	WITHOUT_CLASSIFICATION	0.999988080158679	WITHOUT_CLASSIFICATION	1.1919841321124608E-5	DEFECT
// Set the EReference attributes. //	WITHOUT_CLASSIFICATION	0.9999998096353837	WITHOUT_CLASSIFICATION	1.9036461632228334E-7	DEFECT
// Defer the handling of the opposite. //	WITHOUT_CLASSIFICATION	0.9999999759754233	WITHOUT_CLASSIFICATION	2.4024576575150898E-8	DEFECT
// Set the visibility annotations for the EstructuralFeature. //	WITHOUT_CLASSIFICATION	0.9999997984370173	WITHOUT_CLASSIFICATION	2.0156298274063344E-7	DEFECT
// Set the EAttribute attributes. //	WITHOUT_CLASSIFICATION	0.9999997940453635	WITHOUT_CLASSIFICATION	2.059546364772086E-7	DEFECT
// Handle the type, multiplicity and other ETypedElement attributes. //	WITHOUT_CLASSIFICATION	0.9999999993965292	WITHOUT_CLASSIFICATION	6.034708868342827E-10	DEFECT
// Set the EStructuralFeature attributes. //	WITHOUT_CLASSIFICATION	0.9999999466278611	WITHOUT_CLASSIFICATION	5.337213903706369E-8	DEFECT
// Process the annotations. //	WITHOUT_CLASSIFICATION	0.9999993578265614	WITHOUT_CLASSIFICATION	6.421734386091488E-7	DEFECT
// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //	WITHOUT_CLASSIFICATION	0.9999997127103811	WITHOUT_CLASSIFICATION	2.872896188624345E-7	DEFECT
// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //	WITHOUT_CLASSIFICATION	0.9999169196913327	WITHOUT_CLASSIFICATION	8.308030866735944E-5	DEFECT
// Allow the value to be defined by an annotation or by the field's initializer //	WITHOUT_CLASSIFICATION	0.9999999074705526	WITHOUT_CLASSIFICATION	9.252944744754788E-8	DEFECT
// Allow a distinct literal value to be provided, too. //	WITHOUT_CLASSIFICATION	0.9999941978724269	WITHOUT_CLASSIFICATION	5.802127573184192E-6	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996138216523	WITHOUT_CLASSIFICATION	3.861783478063688E-7	DEFECT
// Allow a mixed case version of the name to be provided. //	WITHOUT_CLASSIFICATION	0.9996268309129096	WITHOUT_CLASSIFICATION	3.7316908709037665E-4	DEFECT
// But, if name doesn't expand into field name, ignore it. //	WITHOUT_CLASSIFICATION	0.9999989891190023	WITHOUT_CLASSIFICATION	1.0108809976441725E-6	DEFECT
// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //	WITHOUT_CLASSIFICATION	0.9999999809043398	WITHOUT_CLASSIFICATION	1.909566015852052E-8	DEFECT
// We want to resolve to this. //	WITHOUT_CLASSIFICATION	0.9999982218083037	WITHOUT_CLASSIFICATION	1.7781916964454213E-6	DEFECT
// Check if it is exactly the name of a type parameter that's in scope. //	WITHOUT_CLASSIFICATION	0.999999676141508	WITHOUT_CLASSIFICATION	3.2385849201695487E-7	DEFECT
// Check if the name is qualified //	WITHOUT_CLASSIFICATION	0.9999999945160256	WITHOUT_CLASSIFICATION	5.48397439601833E-9	DEFECT
// For arrays, consider the element type. //	WITHOUT_CLASSIFICATION	0.9999821931704407	WITHOUT_CLASSIFICATION	1.7806829559314E-5	DEFECT
// Find an explicit import or the first wildcard import. //	WITHOUT_CLASSIFICATION	0.999999589721704	WITHOUT_CLASSIFICATION	4.1027829606615005E-7	DEFECT
// Find the modeled package for the import and look up the name there. //	WITHOUT_CLASSIFICATION	0.9999993975011019	WITHOUT_CLASSIFICATION	6.024988981030009E-7	DEFECT
// If we can't find it, try the simple name in the package... //	WITHOUT_CLASSIFICATION	0.9999529320167646	WITHOUT_CLASSIFICATION	4.70679832353635E-5	DEFECT
// Find the modeled package for the name and look up the name there. //	WITHOUT_CLASSIFICATION	0.999999595895345	WITHOUT_CLASSIFICATION	4.0410465494796097E-7	DEFECT
// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //	WITHOUT_CLASSIFICATION	0.9999806313676652	WITHOUT_CLASSIFICATION	1.9368632334814574E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998949513081	WITHOUT_CLASSIFICATION	1.0504869187685939E-7	DEFECT
// See if we already have the EDataType. //	WITHOUT_CLASSIFICATION	0.9999996587092503	WITHOUT_CLASSIFICATION	3.412907496755545E-7	DEFECT
// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //	WITHOUT_CLASSIFICATION	0.9999999999992307	WITHOUT_CLASSIFICATION	7.693485746408504E-13	DEFECT
// If we don't have one yet, maybe it's one of the special types... //	WITHOUT_CLASSIFICATION	0.9992491307673782	WITHOUT_CLASSIFICATION	7.508692326219085E-4	DEFECT
// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //	WITHOUT_CLASSIFICATION	0.9999999650110573	WITHOUT_CLASSIFICATION	3.498894264733264E-8	DEFECT
// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //	WITHOUT_CLASSIFICATION	0.9999999380144192	WITHOUT_CLASSIFICATION	6.198558078366985E-8	DEFECT
// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //	WITHOUT_CLASSIFICATION	0.9998839111535721	WITHOUT_CLASSIFICATION	1.1608884642785938E-4	DEFECT
// Make array names legal. //	WITHOUT_CLASSIFICATION	0.9999966766149585	WITHOUT_CLASSIFICATION	3.3233850416119784E-6	DEFECT
// Avoid classifier name collisions. //	WITHOUT_CLASSIFICATION	0.9999988939666501	WITHOUT_CLASSIFICATION	1.1060333499549905E-6	DEFECT
// For the model information. //	WITHOUT_CLASSIFICATION	0.9999900465834467	WITHOUT_CLASSIFICATION	9.953416553294063E-6	DEFECT
// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //	WITHOUT_CLASSIFICATION	0.9999999998318073	WITHOUT_CLASSIFICATION	1.681926175065199E-10	DEFECT
// The package is in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999996048165091	WITHOUT_CLASSIFICATION	3.9518349084747613E-7	DEFECT
// The package not in a .cat file. //	WITHOUT_CLASSIFICATION	0.9999735458688184	WITHOUT_CLASSIFICATION	2.6454131181540404E-5	DEFECT
// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //	WITHOUT_CLASSIFICATION	0.9999446661636906	WITHOUT_CLASSIFICATION	5.533383630941274E-5	DEFECT
// Get the parent object. //	WITHOUT_CLASSIFICATION	0.9999984049994911	WITHOUT_CLASSIFICATION	1.595000508895786E-6	DEFECT
// Map to an EPackage. //	WITHOUT_CLASSIFICATION	0.9999995328993877	WITHOUT_CLASSIFICATION	4.6710061235262616E-7	DEFECT
// Add to package. //	WITHOUT_CLASSIFICATION	0.9999977297501748	WITHOUT_CLASSIFICATION	2.2702498251849667E-6	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999995520450727	WITHOUT_CLASSIFICATION	4.479549272648707E-7	DEFECT
//do nothing	WITHOUT_CLASSIFICATION	0.9999935029599855	WITHOUT_CLASSIFICATION	6.4970400145264355E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999989827127753	WITHOUT_CLASSIFICATION	1.017287224602964E-6	DEFECT
// Map to an EDataType. //	WITHOUT_CLASSIFICATION	0.9999989827127753	WITHOUT_CLASSIFICATION	1.017287224602964E-6	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999996714326654	WITHOUT_CLASSIFICATION	3.2856733453757544E-7	DEFECT
// Map to an EOperation.	WITHOUT_CLASSIFICATION	0.9999998448838096	WITHOUT_CLASSIFICATION	1.5511619046882088E-7	DEFECT
// Add to an EClass //	WITHOUT_CLASSIFICATION	0.9999981363443667	WITHOUT_CLASSIFICATION	1.8636556332396546E-6	DEFECT
// Map to an EParameter as input parameter for operation. //	WITHOUT_CLASSIFICATION	0.9999994543989781	WITHOUT_CLASSIFICATION	5.456010218647512E-7	DEFECT
// Do this first for better error message during setEParameterProperties. //	WITHOUT_CLASSIFICATION	0.9999999629266989	WITHOUT_CLASSIFICATION	3.707330108306332E-8	DEFECT
// Map to EAttribute, or EEnumLiteral. //	WITHOUT_CLASSIFICATION	0.9999997494684072	WITHOUT_CLASSIFICATION	2.5053159288630707E-7	DEFECT
// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //	WITHOUT_CLASSIFICATION	0.9999998915671932	WITHOUT_CLASSIFICATION	1.0843280693458561E-7	DEFECT
// Convert to an EReference. //	WITHOUT_CLASSIFICATION	0.9999988149221944	WITHOUT_CLASSIFICATION	1.1850778056267774E-6	DEFECT
// map to EReference when is navigable //	WITHOUT_CLASSIFICATION	0.9999940735415104	WITHOUT_CLASSIFICATION	5.92645848962702E-6	DEFECT
// eReference.setNavigable(roseNode.isNavigable());	WITHOUT_CLASSIFICATION	0.9999995093591336	WITHOUT_CLASSIFICATION	4.906408663267179E-7	DEFECT
/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */	WITHOUT_CLASSIFICATION	0.9999999440585258	WITHOUT_CLASSIFICATION	5.5941474157171645E-8	DEFECT
// try to retrieve the fully qualified name of the specified type...	WITHOUT_CLASSIFICATION	0.9999999893915875	WITHOUT_CLASSIFICATION	1.06084124948399E-8	DEFECT
// convert to dot-separated format if necessary...	WITHOUT_CLASSIFICATION	0.9999972082990612	WITHOUT_CLASSIFICATION	2.7917009386231237E-6	DEFECT
// remove garbage characters...	WITHOUT_CLASSIFICATION	0.9999983067066346	WITHOUT_CLASSIFICATION	1.6932933654625352E-6	DEFECT
// qualify type name if not already qualified...	WITHOUT_CLASSIFICATION	0.9999986728479816	WITHOUT_CLASSIFICATION	1.327152018359584E-6	DEFECT
// default value //	WITHOUT_CLASSIFICATION	0.9999997227925641	WITHOUT_CLASSIFICATION	2.7720743594952435E-7	DEFECT
// Order first by number of features (descending) and then alphabetically (ascending) //	WITHOUT_CLASSIFICATION	0.9999997464618439	WITHOUT_CLASSIFICATION	2.535381561529415E-7	DEFECT
// Temporary WAS/WSAD migration option. //	WITHOUT_CLASSIFICATION	0.9999919149866765	WITHOUT_CLASSIFICATION	8.085013323527311E-6	DEFECT
// A container must be transient. //	WITHOUT_CLASSIFICATION	0.999999923484856	WITHOUT_CLASSIFICATION	7.651514399583288E-8	DEFECT
// setup attribute and parameter type //	WITHOUT_CLASSIFICATION	0.9999989178192414	WITHOUT_CLASSIFICATION	1.082180758505287E-6	DEFECT
// Convert attributes of with EClass type to references. //	WITHOUT_CLASSIFICATION	0.9999996959293972	WITHOUT_CLASSIFICATION	3.040706028582933E-7	DEFECT
// It was not found in the model class so check if primitive type. //	WITHOUT_CLASSIFICATION	0.9999918732144135	WITHOUT_CLASSIFICATION	8.12678558650776E-6	DEFECT
// Convert reference to attribute if its type is an EDataType...  //	WITHOUT_CLASSIFICATION	0.9999948744502059	WITHOUT_CLASSIFICATION	5.125549794135772E-6	DEFECT
// Store the base name for relative .cat file references. //	WITHOUT_CLASSIFICATION	0.9999999942463524	WITHOUT_CLASSIFICATION	5.753647493977633E-9	DEFECT
// read mdl file...	WITHOUT_CLASSIFICATION	0.9999959393440606	WITHOUT_CLASSIFICATION	4.0606559393574075E-6	DEFECT
// special case, traverse cat file or mdl file //	WITHOUT_CLASSIFICATION	0.9999999506004454	WITHOUT_CLASSIFICATION	4.9399554576038284E-8	DEFECT
// file is a mdl file // // get model name	WITHOUT_CLASSIFICATION	0.9999993919679907	WITHOUT_CLASSIFICATION	6.080320092758494E-7	DEFECT
// cat(unit) file referenced by mdl file	WITHOUT_CLASSIFICATION	0.9999993678019742	WITHOUT_CLASSIFICATION	6.321980258310703E-7	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999988890422289	WITHOUT_CLASSIFICATION	1.1109577711094924E-6	DEFECT
//directoryName.length() > 0 && directoryName.charAt(0) == '$') 	WITHOUT_CLASSIFICATION	0.9999986321677885	WITHOUT_CLASSIFICATION	1.3678322115273349E-6	DEFECT
// map properties even when isTreeOnly == true	WITHOUT_CLASSIFICATION	0.9999948436092537	WITHOUT_CLASSIFICATION	5.156390746326648E-6	DEFECT
//    top++;	WITHOUT_CLASSIFICATION	0.9999874912917666	WITHOUT_CLASSIFICATION	1.2508708233516114E-5	DEFECT
// 7 is the size of (object	WITHOUT_CLASSIFICATION	0.9999870653717996	WITHOUT_CLASSIFICATION	1.2934628200245995E-5	DEFECT
// 5 is the size of (list	WITHOUT_CLASSIFICATION	0.9999981773530653	WITHOUT_CLASSIFICATION	1.8226469348060005E-6	DEFECT
// 6 is the size of (value	WITHOUT_CLASSIFICATION	0.999999124929134	WITHOUT_CLASSIFICATION	8.750708659523879E-7	DEFECT
// size should be 1	WITHOUT_CLASSIFICATION	0.9999895669273767	WITHOUT_CLASSIFICATION	1.0433072623360625E-5	DEFECT
// could this happen?	WITHOUT_CLASSIFICATION	0.999980899834351	WITHOUT_CLASSIFICATION	1.9100165648932457E-5	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999988890422289	WITHOUT_CLASSIFICATION	1.1109577711094924E-6	DEFECT
// Process the contents of the extent //	WITHOUT_CLASSIFICATION	0.9999997274919655	WITHOUT_CLASSIFICATION	2.725080344005855E-7	DEFECT
// Load the Rose .mdl or .cat file, and create mappings for the objects. //	WITHOUT_CLASSIFICATION	0.9999991466008411	WITHOUT_CLASSIFICATION	8.533991588415769E-7	DEFECT
// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //	WITHOUT_CLASSIFICATION	0.9999944585448708	WITHOUT_CLASSIFICATION	5.54145512917025E-6	DEFECT
// Start second traverse to create mapping objects in memory. //	WITHOUT_CLASSIFICATION	0.999851141400319	WITHOUT_CLASSIFICATION	1.4885859968090194E-4	DEFECT
// Only one open quote. //	WITHOUT_CLASSIFICATION	0.9999912185533207	WITHOUT_CLASSIFICATION	8.781446679298505E-6	DEFECT
// This will not add duplicates. //	WITHOUT_CLASSIFICATION	0.9999920724835352	WITHOUT_CLASSIFICATION	7.92751646481402E-6	DEFECT
// No additional features // MappingStrategy	WITHOUT_CLASSIFICATION	0.9999968593937084	WITHOUT_CLASSIFICATION	3.1406062916764648E-6	DEFECT
//MappingPackage	WITHOUT_CLASSIFICATION	0.9999887298867361	WITHOUT_CLASSIFICATION	1.1270113263858984E-5	DEFECT
// ComplexTypeConverter	WITHOUT_CLASSIFICATION	0.9999994705707226	WITHOUT_CLASSIFICATION	5.294292774647866E-7	DEFECT
// No additional features // TypeConverter	WITHOUT_CLASSIFICATION	0.9999996272714091	WITHOUT_CLASSIFICATION	3.727285909437953E-7	DEFECT
// MappingRoot	WITHOUT_CLASSIFICATION	0.9999913328018348	WITHOUT_CLASSIFICATION	8.6671981651364E-6	DEFECT
// FunctionNamePair	WITHOUT_CLASSIFICATION	0.9999994219736356	WITHOUT_CLASSIFICATION	5.780263645273707E-7	DEFECT
// MappingHelper	WITHOUT_CLASSIFICATION	0.9999962804863157	WITHOUT_CLASSIFICATION	3.7195136842785733E-6	DEFECT
//MappingFactory	WITHOUT_CLASSIFICATION	0.9999134244648835	WITHOUT_CLASSIFICATION	8.657553511648811E-5	DEFECT
// FunctionPair	WITHOUT_CLASSIFICATION	0.9999978254914129	WITHOUT_CLASSIFICATION	2.17450858712907E-6	DEFECT
//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),	WITHOUT_CLASSIFICATION	0.9993156562030684	WITHOUT_CLASSIFICATION	6.843437969315251E-4	DEFECT
//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),	WITHOUT_CLASSIFICATION	0.9993156562030684	WITHOUT_CLASSIFICATION	6.843437969315251E-4	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.988288208506919	WITHOUT_CLASSIFICATION	0.011711791493080997	DEFECT
// For each mapping being removed... //	WITHOUT_CLASSIFICATION	0.9952174839924307	WITHOUT_CLASSIFICATION	0.004782516007569387	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9998905123207266	WITHOUT_CLASSIFICATION	1.0948767927336032E-4	DEFECT
//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));	WITHOUT_CLASSIFICATION	0.999808768922823	WITHOUT_CLASSIFICATION	1.912310771769946E-4	DEFECT
// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //	WITHOUT_CLASSIFICATION	0.9999999226585723	WITHOUT_CLASSIFICATION	7.734142773993016E-8	DEFECT
// Do we also have some non-input objects to copy? //	WITHOUT_CLASSIFICATION	0.9999994376506156	WITHOUT_CLASSIFICATION	5.62349384337698E-7	DEFECT
// Just remember it; it's encoded later during execution, which is more efficient. //	WITHOUT_CLASSIFICATION	0.999981856774308	WITHOUT_CLASSIFICATION	1.8143225692103433E-5	DEFECT
// Do the encoding. //	WITHOUT_CLASSIFICATION	0.9999811627130057	WITHOUT_CLASSIFICATION	1.8837286994221024E-5	DEFECT
// Record the records for the executed commands on the stack. //	WITHOUT_CLASSIFICATION	0.9964862860721885	WITHOUT_CLASSIFICATION	0.00351371392781154	DEFECT
// If there is more than one exact match, we must get an index number; //	WITHOUT_CLASSIFICATION	0.9999978201772093	WITHOUT_CLASSIFICATION	2.179822790770726E-6	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999999027190924	WITHOUT_CLASSIFICATION	9.728090752289247E-8	DEFECT
//Resource resource = EcoreUtil.getURI(refObject).; FIX:::	WITHOUT_CLASSIFICATION	0.9959512212044306	WITHOUT_CLASSIFICATION	0.004048778795569368	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999988664163	WITHOUT_CLASSIFICATION	1.133583706502437E-9	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999927879202822	WITHOUT_CLASSIFICATION	7.2120797177645234E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999927879202822	WITHOUT_CLASSIFICATION	7.2120797177645234E-6	DEFECT
// Make sure the back pointers to this mapping from the mapped objects is set. //	WITHOUT_CLASSIFICATION	0.9998905123207266	WITHOUT_CLASSIFICATION	1.0948767927336032E-4	DEFECT
// Iterate over the whole tree to do this. //	WITHOUT_CLASSIFICATION	0.9999999027190924	WITHOUT_CLASSIFICATION	9.728090752289247E-8	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999963685155309	WITHOUT_CLASSIFICATION	3.631484469034141E-6	DEFECT
// For each mapping being added... //	WITHOUT_CLASSIFICATION	0.9993804995611955	WITHOUT_CLASSIFICATION	6.195004388046188E-4	DEFECT
// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //	WITHOUT_CLASSIFICATION	0.9969145301092364	WITHOUT_CLASSIFICATION	0.0030854698907635107	DEFECT
// If there are siblings that need to be reparented. //	WITHOUT_CLASSIFICATION	0.9995767650815708	WITHOUT_CLASSIFICATION	4.232349184292546E-4	DEFECT
// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.9995751244526512	WITHOUT_CLASSIFICATION	4.2487554734872197E-4	DEFECT
//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999909511515915	WITHOUT_CLASSIFICATION	9.048848408488927E-6	DEFECT
// Create commands to do mapping.getNested().addAll(siblingsToReparent). //	WITHOUT_CLASSIFICATION	0.999890589634494	WITHOUT_CLASSIFICATION	1.0941036550609228E-4	DEFECT
// return false if iteration should continue.	WITHOUT_CLASSIFICATION	0.9999999422332505	WITHOUT_CLASSIFICATION	5.776674942168475E-8	DEFECT
// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)	WITHOUT_CLASSIFICATION	0.9999999975656739	WITHOUT_CLASSIFICATION	2.434326117430811E-9	DEFECT
//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));	WITHOUT_CLASSIFICATION	0.999979758085877	WITHOUT_CLASSIFICATION	2.0241914122971354E-5	DEFECT
// Get the corresponding type. //	WITHOUT_CLASSIFICATION	0.9998445902624152	WITHOUT_CLASSIFICATION	1.5540973758470568E-4	DEFECT
// Create the copy from this corresponding type. //	WITHOUT_CLASSIFICATION	0.9995079877734452	WITHOUT_CLASSIFICATION	4.920122265547747E-4	DEFECT
// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //	WITHOUT_CLASSIFICATION	0.9998049832935717	WITHOUT_CLASSIFICATION	1.9501670642825617E-4	DEFECT
// Type matching never matches inputs that are already mapped	WITHOUT_CLASSIFICATION	0.9999955753196275	WITHOUT_CLASSIFICATION	4.42468037250249E-6	DEFECT
//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));	WITHOUT_CLASSIFICATION	0.999982775917745	WITHOUT_CLASSIFICATION	1.7224082255047503E-5	DEFECT
// Copy the children references  //	WITHOUT_CLASSIFICATION	0.9999960390199507	WITHOUT_CLASSIFICATION	3.960980049245279E-6	DEFECT
// this will create the mapping as well	WITHOUT_CLASSIFICATION	0.9999935344342139	WITHOUT_CLASSIFICATION	6.4655657861189545E-6	DEFECT
// Copy the name //	WITHOUT_CLASSIFICATION	0.9999994078678993	WITHOUT_CLASSIFICATION	5.921321007399004E-7	DEFECT
// Copy the type //	WITHOUT_CLASSIFICATION	0.9999982455582754	WITHOUT_CLASSIFICATION	1.7544417244859149E-6	DEFECT
// We have done our preparation. Now ask the super to validate. //	WITHOUT_CLASSIFICATION	0.9999995137955401	WITHOUT_CLASSIFICATION	4.862044598693085E-7	DEFECT
// Remove all the mappings from the root. //	WITHOUT_CLASSIFICATION	0.9970618446866234	WITHOUT_CLASSIFICATION	0.002938155313376649	DEFECT
//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());	WITHOUT_CLASSIFICATION	0.9999960533771911	WITHOUT_CLASSIFICATION	3.946622808913738E-6	DEFECT
// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //	WITHOUT_CLASSIFICATION	0.7338028339042623	WITHOUT_CLASSIFICATION	0.26619716609573785	DEFECT
//domain.getMappingRoot().removeMapping(newMapping);	WITHOUT_CLASSIFICATION	0.9999590743231398	WITHOUT_CLASSIFICATION	4.0925676860152574E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */	WITHOUT_CLASSIFICATION	0.9999999956226889	WITHOUT_CLASSIFICATION	4.377311034900466E-9	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// If eCore, return the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999997865626794	WITHOUT_CLASSIFICATION	2.134373206003233E-7	DEFECT
// If there is an adapter of the correct type, return the item label //	WITHOUT_CLASSIFICATION	0.9999926611869114	WITHOUT_CLASSIFICATION	7.33881308865602E-6	DEFECT
// If eCore, set the ENamedElement name //	WITHOUT_CLASSIFICATION	0.9999998583079365	WITHOUT_CLASSIFICATION	1.4169206350519172E-7	DEFECT
// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //	WITHOUT_CLASSIFICATION	0.999991483136263	WITHOUT_CLASSIFICATION	8.516863736943169E-6	DEFECT
// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //	WITHOUT_CLASSIFICATION	0.9970599030705124	WITHOUT_CLASSIFICATION	0.0029400969294874984	DEFECT
// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //	WITHOUT_CLASSIFICATION	0.9999996114179057	WITHOUT_CLASSIFICATION	3.885820943710663E-7	DEFECT
// remove all sourceSeparator characters	WITHOUT_CLASSIFICATION	0.9999999474883807	WITHOUT_CLASSIFICATION	5.2511619205319484E-8	DEFECT
// sourceSeparator == LABEL_NO_SEPARATOR	WITHOUT_CLASSIFICATION	0.9999999666964301	WITHOUT_CLASSIFICATION	3.3303569957385495E-8	DEFECT
// add a targetSeparator in front of every upper case character	WITHOUT_CLASSIFICATION	0.9999999828399623	WITHOUT_CLASSIFICATION	1.716003770848203E-8	DEFECT
// type-mappings	WITHOUT_CLASSIFICATION	0.9999542978509804	WITHOUT_CLASSIFICATION	4.570214901959099E-5	DEFECT
// top-label-separator	WITHOUT_CLASSIFICATION	0.9999999447924443	WITHOUT_CLASSIFICATION	5.5207555798196516E-8	DEFECT
// bottom-label-separator	WITHOUT_CLASSIFICATION	0.9999999926921425	WITHOUT_CLASSIFICATION	7.307857523635222E-9	DEFECT
// top-label-case	WITHOUT_CLASSIFICATION	0.9999998268209964	WITHOUT_CLASSIFICATION	1.731790035741677E-7	DEFECT
// bottom-label-case	WITHOUT_CLASSIFICATION	0.9999999718958912	WITHOUT_CLASSIFICATION	2.8104108869955458E-8	DEFECT
// top-label-forms	WITHOUT_CLASSIFICATION	0.999999733226277	WITHOUT_CLASSIFICATION	2.667737230280588E-7	DEFECT
// bottom-label-forms	WITHOUT_CLASSIFICATION	0.9999999624045086	WITHOUT_CLASSIFICATION	3.7595491397848405E-8	DEFECT
//if // for // for	WITHOUT_CLASSIFICATION	0.9999934867671294	WITHOUT_CLASSIFICATION	6.513232870643683E-6	DEFECT
/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */	WITHOUT_CLASSIFICATION	0.9999999885688639	WITHOUT_CLASSIFICATION	1.1431136199364441E-8	DEFECT
//Ecore2EcorePackage	WITHOUT_CLASSIFICATION	0.999981925599982	WITHOUT_CLASSIFICATION	1.8074400018022866E-5	DEFECT
// Ecore2EcoreMappingRoot	WITHOUT_CLASSIFICATION	0.9999887943925934	WITHOUT_CLASSIFICATION	1.1205607406685078E-5	DEFECT
//Ecore2EcoreFactory	WITHOUT_CLASSIFICATION	0.9999687565098856	WITHOUT_CLASSIFICATION	3.124349011450623E-5	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999999973885357	WITHOUT_CLASSIFICATION	2.611464303361549E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995751368276	WITHOUT_CLASSIFICATION	4.2486317237552965E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999966882499354	WITHOUT_CLASSIFICATION	3.31175006461721E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999987446375067	WITHOUT_CLASSIFICATION	1.2553624931933802E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999997169114805	WITHOUT_CLASSIFICATION	2.830885196214097E-7	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */	WITHOUT_CLASSIFICATION	0.9999998788495312	WITHOUT_CLASSIFICATION	1.211504687280585E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999995278526853	WITHOUT_CLASSIFICATION	4.721473147652249E-7	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998595120936	WITHOUT_CLASSIFICATION	1.404879063273303E-7	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999673203130112	WITHOUT_CLASSIFICATION	3.2679686988898924E-5	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.9999999665047659	WITHOUT_CLASSIFICATION	3.349523404823831E-8	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999991710291825	WITHOUT_CLASSIFICATION	8.289708175976473E-7	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999995498753463	WITHOUT_CLASSIFICATION	4.5012465370074775E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999845721142893	WITHOUT_CLASSIFICATION	1.5427885710732916E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999616076128	WITHOUT_CLASSIFICATION	3.839238720579221E-8	DEFECT
// Get the URI of the model file. //	WITHOUT_CLASSIFICATION	0.9999993735967072	WITHOUT_CLASSIFICATION	6.264032928269635E-7	DEFECT
// Create a resource for this file. //	WITHOUT_CLASSIFICATION	0.9999997144943878	WITHOUT_CLASSIFICATION	2.855056122222976E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999003073611	WITHOUT_CLASSIFICATION	9.969263895901114E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999988238111853	WITHOUT_CLASSIFICATION	1.1761888147138613E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999972175406786	WITHOUT_CLASSIFICATION	2.7824593214474157E-6	DEFECT
// Determine the values to be added and add them at the right position. //	WITHOUT_CLASSIFICATION	0.9999355852572552	WITHOUT_CLASSIFICATION	6.441474274472453E-5	DEFECT
//Ecore2EcorePackageImpl	WITHOUT_CLASSIFICATION	0.9999809175342134	WITHOUT_CLASSIFICATION	1.908246578659688E-5	DEFECT
//Ecore2EcoreFactoryImpl	WITHOUT_CLASSIFICATION	0.9999835754119238	WITHOUT_CLASSIFICATION	1.642458807616933E-5	DEFECT
//Ecore2EcoreMappingRootImpl	WITHOUT_CLASSIFICATION	0.9999332803743018	WITHOUT_CLASSIFICATION	6.67196256981077E-5	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999918347406964	WITHOUT_CLASSIFICATION	8.165259303537246E-6	DEFECT
//Ecore2EcoreResourceFactoryImpl	WITHOUT_CLASSIFICATION	0.9999918347406964	WITHOUT_CLASSIFICATION	8.165259303537246E-6	DEFECT
//Ecore2EcoreAdapterFactory	WITHOUT_CLASSIFICATION	0.9999747553438616	WITHOUT_CLASSIFICATION	2.52446561385107E-5	DEFECT
//Ecore2EcoreSwitch	WITHOUT_CLASSIFICATION	0.9999412392704048	WITHOUT_CLASSIFICATION	5.876072959512619E-5	DEFECT
//$NON-NLS-1$ 	WITHOUT_CLASSIFICATION	0.9999555770479185	WITHOUT_CLASSIFICATION	4.442295208150405E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999706484706047	WITHOUT_CLASSIFICATION	2.9351529395307188E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999706484706047	WITHOUT_CLASSIFICATION	2.9351529395307188E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999706484706047	WITHOUT_CLASSIFICATION	2.9351529395307188E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998963990731834	WITHOUT_CLASSIFICATION	1.036009268165917E-4	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999660903053	WITHOUT_CLASSIFICATION	3.3909694784460406E-8	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998762952466	WITHOUT_CLASSIFICATION	1.237047533777149E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999992245098178	WITHOUT_CLASSIFICATION	7.75490182166597E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999829356381	WITHOUT_CLASSIFICATION	1.7064361898045296E-7	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999849400648185	WITHOUT_CLASSIFICATION	1.5059935181373625E-5	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999997294176	WITHOUT_CLASSIFICATION	2.7058253490246505E-10	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// Create classes and their features	WITHOUT_CLASSIFICATION	0.9999996138216523	WITHOUT_CLASSIFICATION	3.861783478063688E-7	DEFECT
// Initialize package	WITHOUT_CLASSIFICATION	0.9999998949513081	WITHOUT_CLASSIFICATION	1.0504869187685939E-7	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999999973885357	WITHOUT_CLASSIFICATION	2.611464303361549E-8	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995751368276	WITHOUT_CLASSIFICATION	4.2486317237552965E-7	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999966882499354	WITHOUT_CLASSIFICATION	3.31175006461721E-6	DEFECT
// Add supertypes to classes	WITHOUT_CLASSIFICATION	0.9999987446375067	WITHOUT_CLASSIFICATION	1.2553624931933802E-6	DEFECT
// Create resource	WITHOUT_CLASSIFICATION	0.9999998595120936	WITHOUT_CLASSIFICATION	1.404879063273303E-7	DEFECT
// Remember the file. //	WITHOUT_CLASSIFICATION	0.999995498753463	WITHOUT_CLASSIFICATION	4.5012465370074775E-6	DEFECT
// Do the work within an operation. //	WITHOUT_CLASSIFICATION	0.9999845721142893	WITHOUT_CLASSIFICATION	1.5427885710732916E-5	DEFECT
// Create a resource set //	WITHOUT_CLASSIFICATION	0.9999999616076128	WITHOUT_CLASSIFICATION	3.839238720579221E-8	DEFECT
// Create a page, set the title, and the initial model file name. //	WITHOUT_CLASSIFICATION	0.9999999816179327	WITHOUT_CLASSIFICATION	1.8382067324390666E-8	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998152329287	WITHOUT_CLASSIFICATION	1.8476707126274228E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999940872079661	WITHOUT_CLASSIFICATION	5.912792033849812E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999993196350048	WITHOUT_CLASSIFICATION	6.803649951527595E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9998700414093425	WITHOUT_CLASSIFICATION	1.2995859065746316E-4	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999989484982529	WITHOUT_CLASSIFICATION	1.0515017471166846E-6	DEFECT
// Make up a unique new name here. //	WITHOUT_CLASSIFICATION	0.9999598128536726	WITHOUT_CLASSIFICATION	4.0187146327442215E-5	DEFECT
// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //	WITHOUT_CLASSIFICATION	0.9999981898110805	WITHOUT_CLASSIFICATION	1.810188919607936E-6	DEFECT
//Ecore2XMLPackage	WITHOUT_CLASSIFICATION	0.9999196438631278	WITHOUT_CLASSIFICATION	8.035613687215649E-5	DEFECT
//Ecore2XMLFactory	WITHOUT_CLASSIFICATION	0.9998096424075146	WITHOUT_CLASSIFICATION	1.903575924854454E-4	DEFECT
// XMLInfo	WITHOUT_CLASSIFICATION	0.9992720617338895	WITHOUT_CLASSIFICATION	7.279382661105828E-4	DEFECT
// XMLMap	WITHOUT_CLASSIFICATION	0.9998287448159278	WITHOUT_CLASSIFICATION	1.7125518407227003E-4	DEFECT
// missing attribute	WITHOUT_CLASSIFICATION	0.9999995239402394	WITHOUT_CLASSIFICATION	4.7605976061197936E-7	DEFECT
// invalid element	WITHOUT_CLASSIFICATION	0.999999721707254	WITHOUT_CLASSIFICATION	2.782927459396781E-7	DEFECT
//XMLMapImpl	WITHOUT_CLASSIFICATION	0.9998988358077356	WITHOUT_CLASSIFICATION	1.0116419226446792E-4	DEFECT
//ENamedElementToXMLInfoMapEntryImpl	WITHOUT_CLASSIFICATION	0.999982976761876	WITHOUT_CLASSIFICATION	1.7023238123975764E-5	DEFECT
//Ecore2XMLFactoryImpl	WITHOUT_CLASSIFICATION	0.9998999221593737	WITHOUT_CLASSIFICATION	1.0007784062624858E-4	DEFECT
//Ecore2XMLPackageImpl	WITHOUT_CLASSIFICATION	0.9999151624449757	WITHOUT_CLASSIFICATION	8.48375550243604E-5	DEFECT
//XMLInfoImpl	WITHOUT_CLASSIFICATION	0.9996496555553034	WITHOUT_CLASSIFICATION	3.503444446966718E-4	DEFECT
// Switch to the new selection provider. //	WITHOUT_CLASSIFICATION	0.999964063086673	WITHOUT_CLASSIFICATION	3.593691332703313E-5	DEFECT
// Fake a selection changed event to update the menus. //	WITHOUT_CLASSIFICATION	0.9999977256889987	WITHOUT_CLASSIFICATION	2.2743110012697944E-6	DEFECT
// Open an editor on the new file. //	WITHOUT_CLASSIFICATION	0.9999991710291825	WITHOUT_CLASSIFICATION	8.289708175976473E-7	DEFECT
// Add the initial model object to the contents. //	WITHOUT_CLASSIFICATION	0.9999999003073611	WITHOUT_CLASSIFICATION	9.969263895901114E-8	DEFECT
// Save the contents of the resource to the file system. //	WITHOUT_CLASSIFICATION	0.9999988238111853	WITHOUT_CLASSIFICATION	1.1761888147138613E-6	DEFECT
// Select the new file resource in the current view. //	WITHOUT_CLASSIFICATION	0.9999972175406786	WITHOUT_CLASSIFICATION	2.7824593214474157E-6	DEFECT
// Try and get the resource selection to determine a current directory for the file dialog. //	WITHOUT_CLASSIFICATION	0.9999998152329287	WITHOUT_CLASSIFICATION	1.8476707126274228E-7	DEFECT
// Get the resource... //	WITHOUT_CLASSIFICATION	0.9999940872079661	WITHOUT_CLASSIFICATION	5.912792033849812E-6	DEFECT
// Get the resource parent, if its a file. //	WITHOUT_CLASSIFICATION	0.9999993196350048	WITHOUT_CLASSIFICATION	6.803649951527595E-7	DEFECT
// This gives us a directory... //	WITHOUT_CLASSIFICATION	0.9998700414093425	WITHOUT_CLASSIFICATION	1.2995859065746316E-4	DEFECT
// Set this for the container. //	WITHOUT_CLASSIFICATION	0.9999989484982529	WITHOUT_CLASSIFICATION	1.0515017471166846E-6	DEFECT
// Force an update because Eclipse hides empty menus now. //	WITHOUT_CLASSIFICATION	0.9999998268082739	WITHOUT_CLASSIFICATION	1.7319172597248577E-7	DEFECT
// Remove any menu items for old selection. //	WITHOUT_CLASSIFICATION	0.9955537079713505	WITHOUT_CLASSIFICATION	0.004446292028649494	DEFECT
// Query the new selection for appropriate new child/sibling descriptors //	WITHOUT_CLASSIFICATION	0.9999950223882744	WITHOUT_CLASSIFICATION	4.977611725543993E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999995399990334	WITHOUT_CLASSIFICATION	4.600009665963949E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999995399990334	WITHOUT_CLASSIFICATION	4.600009665963949E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999995399990334	WITHOUT_CLASSIFICATION	4.600009665963949E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999995399990334	WITHOUT_CLASSIFICATION	4.600009665963949E-6	DEFECT
// Initialize all the fields from the command parameter. //	WITHOUT_CLASSIFICATION	0.999995399990334	WITHOUT_CLASSIFICATION	4.600009665963949E-6	DEFECT
// If the attribute is set, record it's old value. //	WITHOUT_CLASSIFICATION	0.9999885266256973	WITHOUT_CLASSIFICATION	1.1473374302814797E-5	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998381215062	WITHOUT_CLASSIFICATION	1.6187849383606258E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998381215062	WITHOUT_CLASSIFICATION	1.6187849383606258E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998381215062	WITHOUT_CLASSIFICATION	1.6187849383606258E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998381215062	WITHOUT_CLASSIFICATION	1.6187849383606258E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998381215062	WITHOUT_CLASSIFICATION	1.6187849383606258E-7	DEFECT
// Update the containing map, if necessary. //	WITHOUT_CLASSIFICATION	0.9999998381215062	WITHOUT_CLASSIFICATION	1.6187849383606258E-7	DEFECT
// Create the copy //	WITHOUT_CLASSIFICATION	0.9999995551852543	WITHOUT_CLASSIFICATION	4.448147458215101E-7	DEFECT
// EATM Leave this disabled for now. //	WITHOUT_CLASSIFICATION	0.9999698852558133	WITHOUT_CLASSIFICATION	3.011474418667191E-5	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999997941074122	WITHOUT_CLASSIFICATION	2.0589258769838185E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999997941074122	WITHOUT_CLASSIFICATION	2.0589258769838185E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999997941074122	WITHOUT_CLASSIFICATION	2.0589258769838185E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999997941074122	WITHOUT_CLASSIFICATION	2.0589258769838185E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999997941074122	WITHOUT_CLASSIFICATION	2.0589258769838185E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999997941074122	WITHOUT_CLASSIFICATION	2.0589258769838185E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999997941074122	WITHOUT_CLASSIFICATION	2.0589258769838185E-7	DEFECT
/*   * Javadoc copied from base class.   */	WITHOUT_CLASSIFICATION	0.9999997941074122	WITHOUT_CLASSIFICATION	2.0589258769838185E-7	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Remember the static instance. //	WITHOUT_CLASSIFICATION	0.9999980128732863	WITHOUT_CLASSIFICATION	1.987126713755518E-6	DEFECT
// Set the range so that we re-check when we get into the other half. //	WITHOUT_CLASSIFICATION	0.999997371137731	WITHOUT_CLASSIFICATION	2.6288622689460658E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// Subclasses may override	WITHOUT_CLASSIFICATION	0.9999986285855755	WITHOUT_CLASSIFICATION	1.3714144245417908E-6	DEFECT
// If the location indicates after, add one more. //	WITHOUT_CLASSIFICATION	0.9999774338925628	WITHOUT_CLASSIFICATION	2.2566107437316287E-5	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.999995222583271	WITHOUT_CLASSIFICATION	4.777416728959014E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.999995222583271	WITHOUT_CLASSIFICATION	4.777416728959014E-6	DEFECT
// Empty extension to limit the effect of suppressing the deprecation warning.	WITHOUT_CLASSIFICATION	0.999995222583271	WITHOUT_CLASSIFICATION	4.777416728959014E-6	DEFECT
// Try again. //	WITHOUT_CLASSIFICATION	0.9999978114538314	WITHOUT_CLASSIFICATION	2.188546168646488E-6	DEFECT
// This is the name of the model. //	WITHOUT_CLASSIFICATION	0.999946676558517	WITHOUT_CLASSIFICATION	5.3323441483092506E-5	DEFECT
// Create move commands for all the objects in the collection. //	WITHOUT_CLASSIFICATION	0.9999805277799447	WITHOUT_CLASSIFICATION	1.9472220055263487E-5	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9997790980700028	WITHOUT_CLASSIFICATION	2.2090192999728122E-4	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9997790980700028	WITHOUT_CLASSIFICATION	2.2090192999728122E-4	DEFECT
// Thread.dumpStack();	WITHOUT_CLASSIFICATION	0.9999993424864478	WITHOUT_CLASSIFICATION	6.575135520941337E-7	DEFECT
// Apply a redirection pattern, if specified. //	WITHOUT_CLASSIFICATION	0.9997790980700028	WITHOUT_CLASSIFICATION	2.2090192999728122E-4	DEFECT
// Simply remove the object from the owner list. //	WITHOUT_CLASSIFICATION	0.9999989845105344	WITHOUT_CLASSIFICATION	1.0154894655903981E-6	DEFECT
// Insert the collection at the right place. //	WITHOUT_CLASSIFICATION	0.9999823411503143	WITHOUT_CLASSIFICATION	1.765884968579572E-5	DEFECT
// We'd like the collection of replacements selected after this replace completes. //	WITHOUT_CLASSIFICATION	0.9999969279710578	WITHOUT_CLASSIFICATION	3.0720289421533428E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999928687939607	WITHOUT_CLASSIFICATION	7.131206039401476E-6	DEFECT
/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */	WITHOUT_CLASSIFICATION	0.9999928687939607	WITHOUT_CLASSIFICATION	7.131206039401476E-6	DEFECT
// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //	WITHOUT_CLASSIFICATION	0.9999996900375613	WITHOUT_CLASSIFICATION	3.099624387125204E-7	DEFECT
// Invoke generator adapters for each object. //	WITHOUT_CLASSIFICATION	0.9999672588079993	WITHOUT_CLASSIFICATION	3.274119200077065E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999828066348325	WITHOUT_CLASSIFICATION	1.7193365167401637E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999828066348325	WITHOUT_CLASSIFICATION	1.7193365167401637E-5	DEFECT
// // EMFEdit generation //	WITHOUT_CLASSIFICATION	0.9999828066348325	WITHOUT_CLASSIFICATION	1.7193365167401637E-5	DEFECT
// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //	WITHOUT_CLASSIFICATION	0.9999262832254346	WITHOUT_CLASSIFICATION	7.37167745652654E-5	DEFECT
// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.	WITHOUT_CLASSIFICATION	0.9999093533236901	WITHOUT_CLASSIFICATION	9.064667630990128E-5	DEFECT
// Add any remaining object-index pairs from either set. //	WITHOUT_CLASSIFICATION	0.999938733141913	WITHOUT_CLASSIFICATION	6.126685808701033E-5	DEFECT
// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object	WITHOUT_CLASSIFICATION	0.9999991874648678	WITHOUT_CLASSIFICATION	8.125351321564145E-7	DEFECT
// This guards the switch. //	WITHOUT_CLASSIFICATION	0.9999971324489112	WITHOUT_CLASSIFICATION	2.8675510888705837E-6	DEFECT
// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //	WITHOUT_CLASSIFICATION	0.9999246769934725	WITHOUT_CLASSIFICATION	7.532300652756367E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999229837406427	WITHOUT_CLASSIFICATION	7.701625935727777E-5	DEFECT
// Get the adapter from the factory. //	WITHOUT_CLASSIFICATION	0.9999995113823625	WITHOUT_CLASSIFICATION	4.886176374734819E-7	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999229837406427	WITHOUT_CLASSIFICATION	7.701625935727777E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998963990731834	WITHOUT_CLASSIFICATION	1.036009268165917E-4	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999706484706047	WITHOUT_CLASSIFICATION	2.9351529395307188E-5	DEFECT
// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999999669595052	WITHOUT_CLASSIFICATION	3.3040494779044E-8	DEFECT
// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999802578999812	WITHOUT_CLASSIFICATION	1.974210001882491E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.999892403132715	WITHOUT_CLASSIFICATION	1.0759686728496827E-4	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// Make up a unique new name here. // //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999464216303257	WITHOUT_CLASSIFICATION	5.3578369674303865E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9998963990731834	WITHOUT_CLASSIFICATION	1.036009268165917E-4	DEFECT
// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999725854294944	WITHOUT_CLASSIFICATION	2.7414570505680643E-5	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// And delegate the call. //	WITHOUT_CLASSIFICATION	0.9999985419939292	WITHOUT_CLASSIFICATION	1.458006070728993E-6	DEFECT
// Either delegate the call or return nothing. //	WITHOUT_CLASSIFICATION	0.9999995265695356	WITHOUT_CLASSIFICATION	4.7343046445683755E-7	DEFECT
// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //	WITHOUT_CLASSIFICATION	0.9999236034416245	WITHOUT_CLASSIFICATION	7.639655837554641E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999732292500344	WITHOUT_CLASSIFICATION	2.6770749965690715E-5	DEFECT
// These will be the children belonging to this feature. //	WITHOUT_CLASSIFICATION	0.9999732292500344	WITHOUT_CLASSIFICATION	2.6770749965690715E-5	DEFECT
// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //	WITHOUT_CLASSIFICATION	0.9999950023811762	WITHOUT_CLASSIFICATION	4.9976188237804015E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */	WITHOUT_CLASSIFICATION	0.9999999998032915	WITHOUT_CLASSIFICATION	1.9670861453299093E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999994882813	WITHOUT_CLASSIFICATION	5.117187466840102E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */	WITHOUT_CLASSIFICATION	0.9999999986753202	WITHOUT_CLASSIFICATION	1.3246797900332162E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999988338678	WITHOUT_CLASSIFICATION	1.1661321999335204E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */	WITHOUT_CLASSIFICATION	0.9999999992878192	WITHOUT_CLASSIFICATION	7.121807443018469E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */	WITHOUT_CLASSIFICATION	0.9999999988361298	WITHOUT_CLASSIFICATION	1.1638702035759635E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999989705950265	WITHOUT_CLASSIFICATION	1.029404973565228E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
// Do nothing.	WITHOUT_CLASSIFICATION	0.9999985063448198	WITHOUT_CLASSIFICATION	1.493655180198344E-6	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999419440353	WITHOUT_CLASSIFICATION	5.805596477434378E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999998430452967	WITHOUT_CLASSIFICATION	1.569547032316176E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999937917179	WITHOUT_CLASSIFICATION	6.20828208755578E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999612134862	WITHOUT_CLASSIFICATION	3.8786513859111626E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999955125722	WITHOUT_CLASSIFICATION	4.487427725481742E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999475766185	WITHOUT_CLASSIFICATION	5.2423381515459476E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999994116378	WITHOUT_CLASSIFICATION	5.883621329755158E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999994629051	WITHOUT_CLASSIFICATION	5.370949865235131E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999983245028	WITHOUT_CLASSIFICATION	1.675497169652563E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999887644294	WITHOUT_CLASSIFICATION	1.1235570723906035E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */	WITHOUT_CLASSIFICATION	0.999999998383071	WITHOUT_CLASSIFICATION	1.6169289550388737E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999999185532	WITHOUT_CLASSIFICATION	8.144680387106148E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999977065981	WITHOUT_CLASSIFICATION	2.2934017917989266E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999994116378	WITHOUT_CLASSIFICATION	5.883621329755158E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999845910856	WITHOUT_CLASSIFICATION	1.5408914383883026E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999994104981	WITHOUT_CLASSIFICATION	5.895018476689941E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */	WITHOUT_CLASSIFICATION	0.9999999977021558	WITHOUT_CLASSIFICATION	2.297844334187712E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */	WITHOUT_CLASSIFICATION	0.9999999988641576	WITHOUT_CLASSIFICATION	1.135842469363944E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999995295713	WITHOUT_CLASSIFICATION	4.704286609725257E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.999999990149466	WITHOUT_CLASSIFICATION	9.850534176014871E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */	WITHOUT_CLASSIFICATION	0.9999999971901867	WITHOUT_CLASSIFICATION	2.8098132966912755E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */	WITHOUT_CLASSIFICATION	0.9999999957248056	WITHOUT_CLASSIFICATION	4.275194489508107E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */	WITHOUT_CLASSIFICATION	0.9999999982600388	WITHOUT_CLASSIFICATION	1.739961157312525E-9	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.99999762639547	WITHOUT_CLASSIFICATION	2.3736045300183473E-6	DEFECT
// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)	WITHOUT_CLASSIFICATION	0.99999762639547	WITHOUT_CLASSIFICATION	2.3736045300183473E-6	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */	WITHOUT_CLASSIFICATION	0.9999999999185532	WITHOUT_CLASSIFICATION	8.144680387106148E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */	WITHOUT_CLASSIFICATION	0.9999999953668421	WITHOUT_CLASSIFICATION	4.6331578628414255E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999998657616	WITHOUT_CLASSIFICATION	1.3423835493601084E-10	DEFECT
/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */	WITHOUT_CLASSIFICATION	0.9999999929172966	WITHOUT_CLASSIFICATION	7.082703443123242E-9	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */	WITHOUT_CLASSIFICATION	0.9999999947925103	WITHOUT_CLASSIFICATION	5.207489638890686E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999991121364	WITHOUT_CLASSIFICATION	8.878635495684992E-10	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999892703032	WITHOUT_CLASSIFICATION	1.072969676289072E-8	DEFECT
/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */	WITHOUT_CLASSIFICATION	0.9999994892145931	WITHOUT_CLASSIFICATION	5.107854068518027E-7	DEFECT
/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */	WITHOUT_CLASSIFICATION	0.9999997939476385	WITHOUT_CLASSIFICATION	2.0605236142378258E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999953156682	WITHOUT_CLASSIFICATION	4.6843318379298705E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999325122798	WITHOUT_CLASSIFICATION	6.748772015791589E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */	WITHOUT_CLASSIFICATION	0.9999999645795232	WITHOUT_CLASSIFICATION	3.5420476798696207E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999511388997	WITHOUT_CLASSIFICATION	4.886110029297947E-8	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999972686164	WITHOUT_CLASSIFICATION	2.731383529447992E-9	DEFECT
/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */	WITHOUT_CLASSIFICATION	0.9999999998895829	WITHOUT_CLASSIFICATION	1.104171459723226E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */	WITHOUT_CLASSIFICATION	0.9999999997294176	WITHOUT_CLASSIFICATION	2.7058253490246505E-10	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999761442	WITHOUT_CLASSIFICATION	2.385578808569838E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */	WITHOUT_CLASSIFICATION	0.9999999945743122	WITHOUT_CLASSIFICATION	5.425687864532212E-9	DEFECT
/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999995568694294	WITHOUT_CLASSIFICATION	4.431305705174064E-7	DEFECT
/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */	WITHOUT_CLASSIFICATION	0.9999999765335569	WITHOUT_CLASSIFICATION	2.346644304861606E-8	DEFECT
/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */	WITHOUT_CLASSIFICATION	0.9999999999761442	WITHOUT_CLASSIFICATION	2.385578808569838E-11	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */	WITHOUT_CLASSIFICATION	0.9999999286606379	WITHOUT_CLASSIFICATION	7.133936206828526E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999948843837	WITHOUT_CLASSIFICATION	5.115616223987092E-9	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */	WITHOUT_CLASSIFICATION	0.9999999884484427	WITHOUT_CLASSIFICATION	1.1551557287767072E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */	WITHOUT_CLASSIFICATION	0.9999999598970085	WITHOUT_CLASSIFICATION	4.0102991544022474E-8	DEFECT
/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */	WITHOUT_CLASSIFICATION	0.9999999227305136	WITHOUT_CLASSIFICATION	7.726948639628364E-8	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999475503368587	WITHOUT_CLASSIFICATION	5.2449663141414996E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999475503368587	WITHOUT_CLASSIFICATION	5.2449663141414996E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999475503368587	WITHOUT_CLASSIFICATION	5.2449663141414996E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999475503368587	WITHOUT_CLASSIFICATION	5.2449663141414996E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999475503368587	WITHOUT_CLASSIFICATION	5.2449663141414996E-5	DEFECT
//	WITHOUT_CLASSIFICATION	0.9999475503368587	WITHOUT_CLASSIFICATION	5.2449663141414996E-5	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986582990149	WITHOUT_CLASSIFICATION	1.3417009850762106E-6	DEFECT
// Attribute	WITHOUT_CLASSIFICATION	0.9999979803474656	WITHOUT_CLASSIFICATION	2.0196525344672093E-6	DEFECT
// If the workbench part changes... //	WITHOUT_CLASSIFICATION	0.9998621981806491	WITHOUT_CLASSIFICATION	1.3780181935088646E-4	DEFECT
// Discard the old editing domain. //	WITHOUT_CLASSIFICATION	0.9999994655897	WITHOUT_CLASSIFICATION	5.34410299938116E-7	DEFECT
// Convert the selection to a collection of the selected objects. //	WITHOUT_CLASSIFICATION	0.9999999352491367	WITHOUT_CLASSIFICATION	6.475086326026533E-8	DEFECT
// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName	WITHOUT_CLASSIFICATION	0.9999998537430423	WITHOUT_CLASSIFICATION	1.4625695760025984E-7	DEFECT
// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //	WITHOUT_CLASSIFICATION	0.9999999675751754	WITHOUT_CLASSIFICATION	3.242482459837015E-8	DEFECT
// this returns either "EAttribute" or "EReference"	WITHOUT_CLASSIFICATION	0.9999959308835167	WITHOUT_CLASSIFICATION	4.069116483331811E-6	DEFECT
// this guard is for extra security, but should not be necessary	WITHOUT_CLASSIFICATION	0.9937793488668004	WITHOUT_CLASSIFICATION	0.006220651133199618	DEFECT
// // EMF.Edit generation //	WITHOUT_CLASSIFICATION	0.9999829371255388	WITHOUT_CLASSIFICATION	1.706287446120071E-5	DEFECT
// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //	WITHOUT_CLASSIFICATION	0.9999998809927255	WITHOUT_CLASSIFICATION	1.1900727443556817E-7	DEFECT
//  Remove any non-Java dependencies from being added. //	WITHOUT_CLASSIFICATION	0.9999252234987263	WITHOUT_CLASSIFICATION	7.477650127365993E-5	DEFECT
// Get extra icon and bounds for first column of ExtendedTableTreeItem. //	WITHOUT_CLASSIFICATION	0.9999999694371116	WITHOUT_CLASSIFICATION	3.056288838038836E-8	DEFECT
/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */	WITHOUT_CLASSIFICATION	0.999999532001916	WITHOUT_CLASSIFICATION	4.679980839150031E-7	DEFECT
// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //	WITHOUT_CLASSIFICATION	0.9999998027557265	WITHOUT_CLASSIFICATION	1.9724427336983748E-7	DEFECT
// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //	WITHOUT_CLASSIFICATION	0.9999986604857334	WITHOUT_CLASSIFICATION	1.3395142667037937E-6	DEFECT
// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.	WITHOUT_CLASSIFICATION	0.9999964551562802	WITHOUT_CLASSIFICATION	3.5448437197653483E-6	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.999999639103786	WITHOUT_CLASSIFICATION	3.6089621394984034E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.999999639103786	WITHOUT_CLASSIFICATION	3.6089621394984034E-7	DEFECT
// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.999999639103786	WITHOUT_CLASSIFICATION	3.6089621394984034E-7	DEFECT
/*     * (non-Javadoc) Method declared on Dialog.     */	WITHOUT_CLASSIFICATION	0.9999998566516431	WITHOUT_CLASSIFICATION	1.4334835680392433E-7	DEFECT
// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //	WITHOUT_CLASSIFICATION	0.9999972825762622	WITHOUT_CLASSIFICATION	2.717423737934595E-6	DEFECT
/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/	WITHOUT_CLASSIFICATION	0.9999995600847968	WITHOUT_CLASSIFICATION	4.399152031289462E-7	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999660903053	WITHOUT_CLASSIFICATION	3.3909694784460406E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999660903053	WITHOUT_CLASSIFICATION	3.3909694784460406E-8	DEFECT
// Obtain or create and register package	WITHOUT_CLASSIFICATION	0.9999999660903053	WITHOUT_CLASSIFICATION	3.3909694784460406E-8	DEFECT
// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 	WITHOUT_CLASSIFICATION	0.8370690369889522	WITHOUT_CLASSIFICATION	0.16293096301104779	DEFECT
// Initialize simple dependencies	WITHOUT_CLASSIFICATION	0.9999998762952466	WITHOUT_CLASSIFICATION	1.237047533777149E-7	DEFECT
// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.	WITHOUT_CLASSIFICATION	0.9999999886520909	WITHOUT_CLASSIFICATION	1.1347909064637489E-8	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999992245098178	WITHOUT_CLASSIFICATION	7.75490182166597E-7	DEFECT
// Create package meta-data objects	WITHOUT_CLASSIFICATION	0.9999992245098178	WITHOUT_CLASSIFICATION	7.75490182166597E-7	DEFECT
// Determine the required plugins. //	WITHOUT_CLASSIFICATION	0.9998701349539687	WITHOUT_CLASSIFICATION	1.2986504603120194E-4	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999829356381	WITHOUT_CLASSIFICATION	1.7064361898045296E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999829356381	WITHOUT_CLASSIFICATION	1.7064361898045296E-7	DEFECT
// Initialize created meta-data	WITHOUT_CLASSIFICATION	0.999999829356381	WITHOUT_CLASSIFICATION	1.7064361898045296E-7	DEFECT
// Include each required plugin of the starting project and the exported ones of all the required projects. //	WITHOUT_CLASSIFICATION	0.9966855001152545	WITHOUT_CLASSIFICATION	0.0033144998847454686	DEFECT
// Register package validator	WITHOUT_CLASSIFICATION	0.9999997607084252	WITHOUT_CLASSIFICATION	2.392915746706051E-7	DEFECT
// Determine the inverse map from plugin IDs to their registered GenModel locations. //	WITHOUT_CLASSIFICATION	0.9999993729110099	WITHOUT_CLASSIFICATION	6.270889900037208E-7	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999229837406427	WITHOUT_CLASSIFICATION	7.701625935727777E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999229837406427	WITHOUT_CLASSIFICATION	7.701625935727777E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999069493041961	WITHOUT_CLASSIFICATION	9.305069580384737E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999849400648185	WITHOUT_CLASSIFICATION	1.5059935181373625E-5	DEFECT
// Mark meta-data to indicate it can't be changed	WITHOUT_CLASSIFICATION	0.9999849400648185	WITHOUT_CLASSIFICATION	1.5059935181373625E-5	DEFECT
// Walk the fields. //	WITHOUT_CLASSIFICATION	0.999997503389424	WITHOUT_CLASSIFICATION	2.4966105761281232E-6	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999999973885357	WITHOUT_CLASSIFICATION	2.611464303361549E-8	DEFECT
// Obtain other dependent packages	WITHOUT_CLASSIFICATION	0.999999973885357	WITHOUT_CLASSIFICATION	2.611464303361549E-8	DEFECT
// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //	WITHOUT_CLASSIFICATION	0.9996144450721702	WITHOUT_CLASSIFICATION	3.8555492782974167E-4	DEFECT
// Create type parameters	WITHOUT_CLASSIFICATION	0.9999995751368276	WITHOUT_CLASSIFICATION	4.2486317237552965E-7	DEFECT
// We will create an EAttribute, EReference, or an EOperation. //	WITHOUT_CLASSIFICATION	0.9999988312547847	WITHOUT_CLASSIFICATION	1.168745215218422E-6	DEFECT
// Set bounds for type parameters	WITHOUT_CLASSIFICATION	0.9999966882499354	WITHOUT_CLASSIFICATION	3.31175006461721E-6	DEFECT
// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //	WITHOUT_CLASSIFICATION	0.9999999034005203	WITHOUT_CLASSIFICATION	9.659947973617275E-8	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$	WITHOUT_CLASSIFICATION	0.9999229837406427	WITHOUT_CLASSIFICATION	7.701625935727777E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999706484706047	WITHOUT_CLASSIFICATION	2.9351529395307188E-5	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999995278526853	WITHOUT_CLASSIFICATION	4.721473147652249E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999995278526853	WITHOUT_CLASSIFICATION	4.721473147652249E-7	DEFECT
// Initialize classes and features; add operations and parameters	WITHOUT_CLASSIFICATION	0.9999995278526853	WITHOUT_CLASSIFICATION	4.721473147652249E-7	DEFECT
// The method is not a structural feature, so it's modeled as an operation. //	WITHOUT_CLASSIFICATION	0.9999999905656427	WITHOUT_CLASSIFICATION	9.434357315170691E-9	DEFECT
// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$	WITHOUT_CLASSIFICATION	0.9999992527532117	WITHOUT_CLASSIFICATION	7.472467884763689E-7	DEFECT
// Create annotations // http://www.eclipse.org/emf/2002/Ecore	WITHOUT_CLASSIFICATION	0.9999687295238044	WITHOUT_CLASSIFICATION	3.127047619553234E-5	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999963386689039	WITHOUT_CLASSIFICATION	3.6613310961414457E-6	DEFECT
// Don't overwrite exising file	WITHOUT_CLASSIFICATION	0.9999963386689039	WITHOUT_CLASSIFICATION	3.6613310961414457E-6	DEFECT
// Look through the imports of the containing compilation unit. //	WITHOUT_CLASSIFICATION	0.9999991340615679	WITHOUT_CLASSIFICATION	8.659384321283429E-7	DEFECT
// Use an alternate if we can't write to this one. //	WITHOUT_CLASSIFICATION	0.9999873528530212	WITHOUT_CLASSIFICATION	1.2647146978867654E-5	DEFECT
// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //	WITHOUT_CLASSIFICATION	0.9999997345732801	WITHOUT_CLASSIFICATION	2.65426719856117E-7	DEFECT
//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes	WITHOUT_CLASSIFICATION	0.9999369607176384	WITHOUT_CLASSIFICATION	6.303928236168864E-5	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999995520450727	WITHOUT_CLASSIFICATION	4.479549272648707E-7	DEFECT
// Map to an EClass. //	WITHOUT_CLASSIFICATION	0.9999995520450727	WITHOUT_CLASSIFICATION	4.479549272648707E-7	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9990049061810636	WITHOUT_CLASSIFICATION	9.950938189363797E-4	DEFECT
//FB TBD different objects for ecore model!	WITHOUT_CLASSIFICATION	0.9990049061810636	WITHOUT_CLASSIFICATION	9.950938189363797E-4	DEFECT
// Map to an eClass. //	WITHOUT_CLASSIFICATION	0.9999996714326654	WITHOUT_CLASSIFICATION	3.2856733453757544E-7	DEFECT
// generateColor();	WITHOUT_CLASSIFICATION	0.9999976404256707	WITHOUT_CLASSIFICATION	2.359574329311418E-6	DEFECT
// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //	WITHOUT_CLASSIFICATION	0.9999933623154446	WITHOUT_CLASSIFICATION	6.637684555378562E-6	DEFECT
// Strip off the array indices if any. //	WITHOUT_CLASSIFICATION	0.9999901133575669	WITHOUT_CLASSIFICATION	9.886642433041253E-6	DEFECT
// process eStructuralFeatures for association end(Role) //	WITHOUT_CLASSIFICATION	0.9999995441357262	WITHOUT_CLASSIFICATION	4.558642738253194E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999998168725255	WITHOUT_CLASSIFICATION	1.8312747459516505E-7	DEFECT
// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.	WITHOUT_CLASSIFICATION	0.9999998168725255	WITHOUT_CLASSIFICATION	1.8312747459516505E-7	DEFECT
// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //	WITHOUT_CLASSIFICATION	0.9996606837256915	WITHOUT_CLASSIFICATION	3.393162743085437E-4	DEFECT
// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //	WITHOUT_CLASSIFICATION	0.9999999997383452	WITHOUT_CLASSIFICATION	2.6165485296317045E-10	DEFECT
// starting traverse file and build unit tree and table info	WITHOUT_CLASSIFICATION	0.9999999383677857	WITHOUT_CLASSIFICATION	6.163221430490453E-8	DEFECT
/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/	WITHOUT_CLASSIFICATION	0.999999992241541	WITHOUT_CLASSIFICATION	7.758458948417174E-9	DEFECT
// Process the children of the UnitTreeNode recursively. //	WITHOUT_CLASSIFICATION	0.9999988890422289	WITHOUT_CLASSIFICATION	1.1109577711094924E-6	DEFECT
// If the flag will straddle two fields, bump it to the next one. //	WITHOUT_CLASSIFICATION	0.9999874103557083	WITHOUT_CLASSIFICATION	1.2589644291730034E-5	DEFECT
//************************************************************************ //*    class RoseToken                                                   * //************************************************************************	WITHOUT_CLASSIFICATION	0.9996560287807463	WITHOUT_CLASSIFICATION	3.439712192536164E-4	DEFECT
// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //	WITHOUT_CLASSIFICATION	0.9999999819326181	WITHOUT_CLASSIFICATION	1.8067381900575E-8	DEFECT
// This will deal with all the subcommands to modifying the root mapping tree. //	WITHOUT_CLASSIFICATION	0.988288208506919	WITHOUT_CLASSIFICATION	0.011711791493080997	DEFECT
// Like isStringType(), but still returns true even if multiplicity-many. //	WITHOUT_CLASSIFICATION	0.9999957371580118	WITHOUT_CLASSIFICATION	4.262841988176889E-6	DEFECT
// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));	WITHOUT_CLASSIFICATION	0.9998757355551119	WITHOUT_CLASSIFICATION	1.242644448881417E-4	DEFECT
// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //	WITHOUT_CLASSIFICATION	0.9999999510494456	WITHOUT_CLASSIFICATION	4.895055441604269E-8	DEFECT
// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //	WITHOUT_CLASSIFICATION	0.9885094140358558	WITHOUT_CLASSIFICATION	0.011490585964144168	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999879990289519	WITHOUT_CLASSIFICATION	1.200097104802409E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999879990289519	WITHOUT_CLASSIFICATION	1.200097104802409E-5	DEFECT
// }	WITHOUT_CLASSIFICATION	0.9999879990289519	WITHOUT_CLASSIFICATION	1.200097104802409E-5	DEFECT
// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //	WITHOUT_CLASSIFICATION	0.9999950269166438	WITHOUT_CLASSIFICATION	4.973083356233077E-6	DEFECT
//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));	WITHOUT_CLASSIFICATION	0.9999972408250043	WITHOUT_CLASSIFICATION	2.759174995791089E-6	DEFECT
// Suppress default constructor for non-instantiability.	WITHOUT_CLASSIFICATION	0.9999999668434402	WITHOUT_CLASSIFICATION	3.315655988634265E-8	DEFECT
// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //	WITHOUT_CLASSIFICATION	0.9999963685155309	WITHOUT_CLASSIFICATION	3.631484469034141E-6	DEFECT
// See java.lang.Class.getName() javadoc for explanation of array encoding.	WITHOUT_CLASSIFICATION	0.9999985336742175	WITHOUT_CLASSIFICATION	1.4663257825194294E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999938039317421	WITHOUT_CLASSIFICATION	6.196068257935612E-6	DEFECT
// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //	WITHOUT_CLASSIFICATION	0.9999938039317421	WITHOUT_CLASSIFICATION	6.196068257935612E-6	DEFECT
// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //	WITHOUT_CLASSIFICATION	0.9999999210164674	WITHOUT_CLASSIFICATION	7.898353260056081E-8	DEFECT
//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat	WITHOUT_CLASSIFICATION	0.9941573259951665	WITHOUT_CLASSIFICATION	0.0058426740048335745	DEFECT
// Ignore this soft dependency when it's not satisfied.	WITHOUT_CLASSIFICATION	0.9999900365200421	WITHOUT_CLASSIFICATION	9.963479957971674E-6	DEFECT
// If it's the selection viewer, then we want it to select the same selection as this selection. //	WITHOUT_CLASSIFICATION	0.9999872787888289	WITHOUT_CLASSIFICATION	1.2721211171183268E-5	DEFECT
// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //	WITHOUT_CLASSIFICATION	0.9999997614207601	WITHOUT_CLASSIFICATION	2.385792399028825E-7	DEFECT
//MappingPackageImpl	WITHOUT_CLASSIFICATION	0.9999768476673088	WITHOUT_CLASSIFICATION	2.3152332691190035E-5	DEFECT
// Iterate over the mappings in the tree. //	WITHOUT_CLASSIFICATION	0.999965311969386	WITHOUT_CLASSIFICATION	3.468803061405217E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }	WITHOUT_CLASSIFICATION	0.9999998109066963	WITHOUT_CLASSIFICATION	1.8909330375750175E-7	DEFECT
// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //	WITHOUT_CLASSIFICATION	0.9999987763428718	WITHOUT_CLASSIFICATION	1.223657128128892E-6	DEFECT
// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //	WITHOUT_CLASSIFICATION	0.9999988993434341	WITHOUT_CLASSIFICATION	1.100656565818067E-6	DEFECT
// Ensure that this is a touch notification so to resource aren't marked as dirty. //	WITHOUT_CLASSIFICATION	0.9997810090996211	WITHOUT_CLASSIFICATION	2.1899090037894476E-4	DEFECT
// Force the project to be setup properly. //	WITHOUT_CLASSIFICATION	0.9999906740141347	WITHOUT_CLASSIFICATION	9.325985865258675E-6	DEFECT
/* EATM getDecoratedAdapterFactory().*/	WITHOUT_CLASSIFICATION	0.9999847317307071	WITHOUT_CLASSIFICATION	1.5268269292851866E-5	DEFECT
// This case happens when the IDE is brought up with the editor already open //	WITHOUT_CLASSIFICATION	0.9804932914216075	WITHOUT_CLASSIFICATION	0.01950670857839252	DEFECT
// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //	WITHOUT_CLASSIFICATION	0.9994249821466749	WITHOUT_CLASSIFICATION	5.750178533251434E-4	DEFECT
//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999992355044754	WITHOUT_CLASSIFICATION	7.644955246748565E-7	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// while	WITHOUT_CLASSIFICATION	0.9999961570329914	WITHOUT_CLASSIFICATION	3.842967008630758E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Ignore.	WITHOUT_CLASSIFICATION	0.9999975663868644	WITHOUT_CLASSIFICATION	2.4336131354522273E-6	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999841565209235	WITHOUT_CLASSIFICATION	1.5843479076393726E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999841565209235	WITHOUT_CLASSIFICATION	1.5843479076393726E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999841565209235	WITHOUT_CLASSIFICATION	1.5843479076393726E-5	DEFECT
// Empty	WITHOUT_CLASSIFICATION	0.9999841565209235	WITHOUT_CLASSIFICATION	1.5843479076393726E-5	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// Ignore	WITHOUT_CLASSIFICATION	0.9999990601516184	WITHOUT_CLASSIFICATION	9.398483815699614E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999992823032381	WITHOUT_CLASSIFICATION	7.17696761860971E-7	DEFECT
// the first hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999992823032381	WITHOUT_CLASSIFICATION	7.17696761860971E-7	DEFECT
// the second hex character if a character needs to be escaped	WITHOUT_CLASSIFICATION	0.9999291164051648	WITHOUT_CLASSIFICATION	7.088359483511819E-5	DEFECT
// initialize the above 3 arrays	WITHOUT_CLASSIFICATION	0.9999999791409464	WITHOUT_CLASSIFICATION	2.0859053564382482E-8	DEFECT
// if it's not an ASCII character, break here, and use UTF-8 encoding	WITHOUT_CLASSIFICATION	0.9999973537280804	WITHOUT_CLASSIFICATION	2.646271919613838E-6	DEFECT
// get UTF-8 bytes for the remaining sub-string	WITHOUT_CLASSIFICATION	0.9999999471470197	WITHOUT_CLASSIFICATION	5.285298036758354E-8	DEFECT
//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();	WITHOUT_CLASSIFICATION	0.9999814636626956	WITHOUT_CLASSIFICATION	1.8536337304374773E-5	DEFECT
// Try to select the affected objects. //	WITHOUT_CLASSIFICATION	0.9999997270552637	WITHOUT_CLASSIFICATION	2.7294473616957645E-7	DEFECT
// this should never happen	WITHOUT_CLASSIFICATION	0.99942112921432	WITHOUT_CLASSIFICATION	5.788707856799792E-4	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999927879202822	WITHOUT_CLASSIFICATION	7.2120797177645234E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999927879202822	WITHOUT_CLASSIFICATION	7.2120797177645234E-6	DEFECT
// no-op	WITHOUT_CLASSIFICATION	0.9999927879202822	WITHOUT_CLASSIFICATION	7.2120797177645234E-6	DEFECT
// && commandParameter instanceof MappingCommandParameter)	WITHOUT_CLASSIFICATION	0.9999929745654499	WITHOUT_CLASSIFICATION	7.0254345500424955E-6	DEFECT
// Creates the model from the editor input //	WITHOUT_CLASSIFICATION	0.9999998390279305	WITHOUT_CLASSIFICATION	1.609720693575134E-7	DEFECT
// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;	WITHOUT_CLASSIFICATION	0.9998519941076845	WITHOUT_CLASSIFICATION	1.4800589231542298E-4	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999998352463181	WITHOUT_CLASSIFICATION	1.6475368195032687E-7	DEFECT
// Only creates the other pages if there is something that can be edited //	WITHOUT_CLASSIFICATION	0.9999998352463181	WITHOUT_CLASSIFICATION	1.6475368195032687E-7	DEFECT
//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());	WITHOUT_CLASSIFICATION	0.9999999125613945	WITHOUT_CLASSIFICATION	8.743860539357448E-8	DEFECT
// The content outline is just a tree. //	WITHOUT_CLASSIFICATION	0.9999998370139732	WITHOUT_CLASSIFICATION	1.6298602677759794E-7	DEFECT
// Set up the tree viewer. //	WITHOUT_CLASSIFICATION	0.9999991331818717	WITHOUT_CLASSIFICATION	8.668181283298151E-7	DEFECT
// Select the root object in the view. //	WITHOUT_CLASSIFICATION	0.9998614286956865	WITHOUT_CLASSIFICATION	1.3857130431347016E-4	DEFECT
// This ensures that we handle selections correctly. //	WITHOUT_CLASSIFICATION	0.9987941301856387	WITHOUT_CLASSIFICATION	0.0012058698143613768	DEFECT
// Get the first selected element. //	WITHOUT_CLASSIFICATION	0.9999999037915885	WITHOUT_CLASSIFICATION	9.620841144796071E-8	DEFECT
// Do the work within an operation because this is a long running activity that modifies the workbench. //	WITHOUT_CLASSIFICATION	0.9999243818742231	WITHOUT_CLASSIFICATION	7.561812577697254E-5	DEFECT
// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    	WITHOUT_CLASSIFICATION	0.999999970192575	WITHOUT_CLASSIFICATION	2.980742491398522E-8	DEFECT
// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());	WITHOUT_CLASSIFICATION	0.9999999418292724	WITHOUT_CLASSIFICATION	5.817072752647678E-8	DEFECT
// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);	WITHOUT_CLASSIFICATION	0.9999998839005901	WITHOUT_CLASSIFICATION	1.1609940985289996E-7	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.	WITHOUT_CLASSIFICATION	0.9999999042874393	WITHOUT_CLASSIFICATION	9.571256063268186E-8	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998726400184522	WITHOUT_CLASSIFICATION	1.2735998154775278E-4	DEFECT
//)	WITHOUT_CLASSIFICATION	0.9998726400184522	WITHOUT_CLASSIFICATION	1.2735998154775278E-4	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */	WITHOUT_CLASSIFICATION	0.999997571963232	WITHOUT_CLASSIFICATION	2.428036767925959E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999994087141351	WITHOUT_CLASSIFICATION	5.9128586490278276E-6	DEFECT
/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */	WITHOUT_CLASSIFICATION	0.999994087141351	WITHOUT_CLASSIFICATION	5.9128586490278276E-6	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999896356565569	WITHOUT_CLASSIFICATION	1.0364343443145657E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999896356565569	WITHOUT_CLASSIFICATION	1.0364343443145657E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999896356565569	WITHOUT_CLASSIFICATION	1.0364343443145657E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999896356565569	WITHOUT_CLASSIFICATION	1.0364343443145657E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999896356565569	WITHOUT_CLASSIFICATION	1.0364343443145657E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999896356565569	WITHOUT_CLASSIFICATION	1.0364343443145657E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999896356565569	WITHOUT_CLASSIFICATION	1.0364343443145657E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999896356565569	WITHOUT_CLASSIFICATION	1.0364343443145657E-5	DEFECT
/* Trick to import java.util.* without warnings */	WITHOUT_CLASSIFICATION	0.9999896356565569	WITHOUT_CLASSIFICATION	1.0364343443145657E-5	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999514861727	WITHOUT_CLASSIFICATION	4.851382723462746E-8	DEFECT
// // Constructors //	WITHOUT_CLASSIFICATION	0.9999999514861727	WITHOUT_CLASSIFICATION	4.851382723462746E-8	DEFECT
//TestCase/isSetGenFeature.override.javajetinc	WITHOUT_CLASSIFICATION	0.9999999705978577	WITHOUT_CLASSIFICATION	2.9402142318655188E-8	DEFECT
// Avoid unnecessary out.write("") statements...	WITHOUT_CLASSIFICATION	0.9999730356584636	WITHOUT_CLASSIFICATION	2.696434153632891E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //	WITHOUT_CLASSIFICATION	0.9977269054569374	WITHOUT_CLASSIFICATION	0.002273094543062574	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999673203130112	WITHOUT_CLASSIFICATION	3.2679686988898924E-5	DEFECT
//$NON-NLS-1$ //$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999673203130112	WITHOUT_CLASSIFICATION	3.2679686988898924E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
//$NON-NLS-1$	WITHOUT_CLASSIFICATION	0.9999450323885545	WITHOUT_CLASSIFICATION	5.496761144548306E-5	DEFECT
// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //	WITHOUT_CLASSIFICATION	0.9999999931997917	WITHOUT_CLASSIFICATION	6.8002082721045654E-9	DEFECT
// EATM in JDK 1.4 there will be an indexOf on StringBuffer. //	DEFECT	0.9999336639968828	WITHOUT_CLASSIFICATION	6.63360031171881E-5	DEFECT
// line comments at the end of annotations are not a part of the range of annotation // TODO is not including line comments at the end of annotations a bug?	DEFECT	0.5765061733411149	DEFECT	0.4234938266588851	WITHOUT_CLASSIFICATION
// EATM must fix isSet bits.	DEFECT	0.9999995843199685	WITHOUT_CLASSIFICATION	4.15680031423424E-7	DEFECT
// EATM must fix isSet bits.	DEFECT	0.9999995843199685	WITHOUT_CLASSIFICATION	4.15680031423424E-7	DEFECT
// Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value // fields are taken into account.	DEFECT	0.5583730588837262	DEFECT	0.44162694111627376	WITHOUT_CLASSIFICATION
// is this an error???	DEFECT	0.9999878571853352	WITHOUT_CLASSIFICATION	1.2142814664723005E-5	DEFECT
// is this an error???	DEFECT	0.9999878571853352	WITHOUT_CLASSIFICATION	1.2142814664723005E-5	DEFECT
//FB Won't compile with VAJ or NO_JIKES  //FB Object adapter = adapterFactory.adapt(mapping);	DEFECT	0.9995232508535602	WITHOUT_CLASSIFICATION	4.7674914643970487E-4	DEFECT
