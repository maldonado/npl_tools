// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999985775504766	WITHOUT_CLASSIFICATION	1.422449523366943E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999955780669442	WITHOUT_CLASSIFICATION	4.421933055829606E-6	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.999999851178935	WITHOUT_CLASSIFICATION	1.4882106507451265E-7	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.999992693519792	WITHOUT_CLASSIFICATION	7.306480207922634E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999954324218453	WITHOUT_CLASSIFICATION	4.5675781547304E-6	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999755161078081	WITHOUT_CLASSIFICATION	2.4483892191920304E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999927820356005	WITHOUT_CLASSIFICATION	7.2179643994663995E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9997887933378047	WITHOUT_CLASSIFICATION	2.1120666219533163E-4	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999917527715622	WITHOUT_CLASSIFICATION	8.247228437834613E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999867530040887	WITHOUT_CLASSIFICATION	1.3246995911274174E-5	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999988121650315	WITHOUT_CLASSIFICATION	1.1878349684868803E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999975133643835	WITHOUT_CLASSIFICATION	2.486635616414372E-6	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.9999996977159118	WITHOUT_CLASSIFICATION	3.022840882813254E-7	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999991558380095	WITHOUT_CLASSIFICATION	8.441619904356933E-7	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.9999969139740766	WITHOUT_CLASSIFICATION	3.086025923258238E-6	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.9999930337161209	WITHOUT_CLASSIFICATION	6.966283879107882E-6	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.9999998754594566	WITHOUT_CLASSIFICATION	1.245405434699111E-7	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.9999999580248672	WITHOUT_CLASSIFICATION	4.19751328510424E-8	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.9999999505472345	WITHOUT_CLASSIFICATION	4.94527655045419E-8	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999475289677	WITHOUT_CLASSIFICATION	5.247103239308947E-8	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999999823151691	WITHOUT_CLASSIFICATION	1.7684830890678518E-8	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999791647163	WITHOUT_CLASSIFICATION	2.083528364072547E-8	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999881869032399	WITHOUT_CLASSIFICATION	1.1813096760089563E-5	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999940907070186	WITHOUT_CLASSIFICATION	5.909292981285592E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999997508291597	WITHOUT_CLASSIFICATION	2.4917084022576253E-7	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999184619707207	WITHOUT_CLASSIFICATION	8.153802927926718E-5	DEFECT
// high	WITHOUT_CLASSIFICATION	0.9999816679522529	WITHOUT_CLASSIFICATION	1.8332047747177675E-5	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9999241997753282	WITHOUT_CLASSIFICATION	7.580022467188476E-5	DEFECT
// close	WITHOUT_CLASSIFICATION	0.9999992541072369	WITHOUT_CLASSIFICATION	7.458927630447146E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999977753026124	WITHOUT_CLASSIFICATION	2.224697387597956E-5	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.9999958211813473	WITHOUT_CLASSIFICATION	4.178818652621436E-6	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.9999987395712692	WITHOUT_CLASSIFICATION	1.2604287308158031E-6	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999993334497966	WITHOUT_CLASSIFICATION	6.665502033470415E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999547541623011	WITHOUT_CLASSIFICATION	4.524583769896787E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999970796738246	WITHOUT_CLASSIFICATION	2.9203261754287537E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999990857559808	WITHOUT_CLASSIFICATION	9.142440191995529E-7	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999806967411028	WITHOUT_CLASSIFICATION	1.9303258897268134E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999997268319941	WITHOUT_CLASSIFICATION	2.7316800589367984E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999619862223054	WITHOUT_CLASSIFICATION	3.801377769460174E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999619862223054	WITHOUT_CLASSIFICATION	3.801377769460174E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999619862223054	WITHOUT_CLASSIFICATION	3.801377769460174E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999619862223054	WITHOUT_CLASSIFICATION	3.801377769460174E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999619862223054	WITHOUT_CLASSIFICATION	3.801377769460174E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999619862223054	WITHOUT_CLASSIFICATION	3.801377769460174E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999619862223054	WITHOUT_CLASSIFICATION	3.801377769460174E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999619862223054	WITHOUT_CLASSIFICATION	3.801377769460174E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999619862223054	WITHOUT_CLASSIFICATION	3.801377769460174E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999619862223054	WITHOUT_CLASSIFICATION	3.801377769460174E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999619862223054	WITHOUT_CLASSIFICATION	3.801377769460174E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999619862223054	WITHOUT_CLASSIFICATION	3.801377769460174E-5	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.9999954672787608	WITHOUT_CLASSIFICATION	4.532721239204817E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.999999554768918	WITHOUT_CLASSIFICATION	4.452310819231569E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.999999554768918	WITHOUT_CLASSIFICATION	4.452310819231569E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.999999554768918	WITHOUT_CLASSIFICATION	4.452310819231569E-7	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999982836183874	WITHOUT_CLASSIFICATION	1.716381612512243E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999996955772525	WITHOUT_CLASSIFICATION	3.0442274752059363E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999994475613873	WITHOUT_CLASSIFICATION	5.524386127598205E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999987708994984	WITHOUT_CLASSIFICATION	1.2291005017064643E-6	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999994241089295	WITHOUT_CLASSIFICATION	5.758910704870515E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999994241089295	WITHOUT_CLASSIFICATION	5.758910704870515E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999994241089295	WITHOUT_CLASSIFICATION	5.758910704870515E-7	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999999994325479	WITHOUT_CLASSIFICATION	5.674519987871936E-10	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999997821813855	WITHOUT_CLASSIFICATION	2.178186144517488E-7	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999955422056404	WITHOUT_CLASSIFICATION	4.457794359652439E-6	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.9778094890113809	WITHOUT_CLASSIFICATION	0.02219051098861911	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999821550793406	WITHOUT_CLASSIFICATION	1.7844920659407557E-5	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999987362450352	WITHOUT_CLASSIFICATION	1.2637549648162344E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.999994467164109	WITHOUT_CLASSIFICATION	5.5328358910322055E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999977253160282	WITHOUT_CLASSIFICATION	2.274683971889844E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999977253160282	WITHOUT_CLASSIFICATION	2.274683971889844E-6	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999076930572078	WITHOUT_CLASSIFICATION	9.23069427920901E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.998821243103885	WITHOUT_CLASSIFICATION	0.0011787568961150613	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.998821243103885	WITHOUT_CLASSIFICATION	0.0011787568961150613	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.998821243103885	WITHOUT_CLASSIFICATION	0.0011787568961150613	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.998821243103885	WITHOUT_CLASSIFICATION	0.0011787568961150613	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999994594289794	WITHOUT_CLASSIFICATION	5.405710205962447E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999610162695056	WITHOUT_CLASSIFICATION	3.8983730494402126E-5	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999060314118704	WITHOUT_CLASSIFICATION	9.396858812966448E-5	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9999660331226606	WITHOUT_CLASSIFICATION	3.396687733943929E-5	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999952476596267	WITHOUT_CLASSIFICATION	4.7523403733901426E-6	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.9998126397686674	WITHOUT_CLASSIFICATION	1.873602313326553E-4	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999830609896598	WITHOUT_CLASSIFICATION	1.6939010340207906E-5	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.9999932334234617	WITHOUT_CLASSIFICATION	6.766576538395328E-6	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999991633635354	WITHOUT_CLASSIFICATION	8.36636464617927E-7	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999998028372029	WITHOUT_CLASSIFICATION	1.9716279702835309E-7	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999983905378097	WITHOUT_CLASSIFICATION	1.6094621901881161E-6	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999973461695465	WITHOUT_CLASSIFICATION	2.653830453476305E-6	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.9999742088155967	WITHOUT_CLASSIFICATION	2.579118440319354E-5	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.9999973825204697	WITHOUT_CLASSIFICATION	2.6174795303511426E-6	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.9999971854668931	WITHOUT_CLASSIFICATION	2.814533107026776E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999951290805792	WITHOUT_CLASSIFICATION	4.870919420823015E-6	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.9988745568782549	WITHOUT_CLASSIFICATION	0.0011254431217451119	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.999999997948143	WITHOUT_CLASSIFICATION	2.0518570684052164E-9	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.999991392384586	WITHOUT_CLASSIFICATION	8.607615414054512E-6	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.999991392384586	WITHOUT_CLASSIFICATION	8.607615414054512E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999586171805905	WITHOUT_CLASSIFICATION	4.1382819409410277E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.999970823446142	WITHOUT_CLASSIFICATION	2.9176553858030477E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999873181862072	WITHOUT_CLASSIFICATION	1.268181379290303E-5	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.9999948377107734	WITHOUT_CLASSIFICATION	5.16228922657264E-6	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999990789051356	WITHOUT_CLASSIFICATION	9.210948644697133E-7	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.9999998013776681	WITHOUT_CLASSIFICATION	1.9862233181200893E-7	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9998130589817146	WITHOUT_CLASSIFICATION	1.869410182853982E-4	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.9999999783708763	WITHOUT_CLASSIFICATION	2.162912373132661E-8	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999793664935762	WITHOUT_CLASSIFICATION	2.063350642382931E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999998478058493	WITHOUT_CLASSIFICATION	1.521941508030523E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999510533812077	WITHOUT_CLASSIFICATION	4.894661879220327E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999421142881391	WITHOUT_CLASSIFICATION	5.788571186093447E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999615065017	WITHOUT_CLASSIFICATION	3.84934982753746E-8	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9989834053728303	WITHOUT_CLASSIFICATION	0.001016594627169696	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999933553662205	WITHOUT_CLASSIFICATION	6.644633779436497E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999933553662205	WITHOUT_CLASSIFICATION	6.644633779436497E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999997279220978	WITHOUT_CLASSIFICATION	2.7207790223068545E-7	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999858882600218	WITHOUT_CLASSIFICATION	1.411173997835527E-5	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999692586417953	WITHOUT_CLASSIFICATION	3.0741358204769356E-5	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9999566740179486	WITHOUT_CLASSIFICATION	4.3325982051364426E-5	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999801730056509	WITHOUT_CLASSIFICATION	1.98269943490795E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999647932225	WITHOUT_CLASSIFICATION	3.52067774157729E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999647932225	WITHOUT_CLASSIFICATION	3.52067774157729E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999647932225	WITHOUT_CLASSIFICATION	3.52067774157729E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999647932225	WITHOUT_CLASSIFICATION	3.52067774157729E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999647932225	WITHOUT_CLASSIFICATION	3.52067774157729E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999647932225	WITHOUT_CLASSIFICATION	3.52067774157729E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999647932225	WITHOUT_CLASSIFICATION	3.52067774157729E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999647932225	WITHOUT_CLASSIFICATION	3.52067774157729E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999647932225	WITHOUT_CLASSIFICATION	3.52067774157729E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999827535638555	WITHOUT_CLASSIFICATION	1.7246436144454757E-5	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999827535638555	WITHOUT_CLASSIFICATION	1.7246436144454757E-5	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999989188935877	WITHOUT_CLASSIFICATION	1.0811064122861752E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999989188935877	WITHOUT_CLASSIFICATION	1.0811064122861752E-6	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.9999997286373816	WITHOUT_CLASSIFICATION	2.7136261826420883E-7	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.9999874209888281	WITHOUT_CLASSIFICATION	1.2579011171947676E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999798332957809	WITHOUT_CLASSIFICATION	2.016670421907799E-5	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999896547529413	WITHOUT_CLASSIFICATION	1.0345247058572592E-5	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999896547529413	WITHOUT_CLASSIFICATION	1.0345247058572592E-5	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9995440576960073	WITHOUT_CLASSIFICATION	4.559423039926718E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9956986675601184	WITHOUT_CLASSIFICATION	0.00430133243988169	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999638348193417	WITHOUT_CLASSIFICATION	3.616518065827223E-5	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999993528163863	WITHOUT_CLASSIFICATION	6.471836135992075E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999993528163863	WITHOUT_CLASSIFICATION	6.471836135992075E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999830921539796	WITHOUT_CLASSIFICATION	1.6907846020367704E-5	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999830921539796	WITHOUT_CLASSIFICATION	1.6907846020367704E-5	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999998506009619	WITHOUT_CLASSIFICATION	1.493990381409064E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999651989365	WITHOUT_CLASSIFICATION	3.480106348964135E-8	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.9999999835103094	WITHOUT_CLASSIFICATION	1.6489690578561988E-8	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999999900845956	WITHOUT_CLASSIFICATION	9.915404454785029E-9	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.9999954535095416	WITHOUT_CLASSIFICATION	4.546490458471682E-6	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.9999971184643625	WITHOUT_CLASSIFICATION	2.881535637549656E-6	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.9999765588343942	WITHOUT_CLASSIFICATION	2.3441165605905686E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999995751049592	WITHOUT_CLASSIFICATION	4.2489504084876683E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999983419396523	WITHOUT_CLASSIFICATION	1.658060347696339E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999983419396523	WITHOUT_CLASSIFICATION	1.658060347696339E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999983419396523	WITHOUT_CLASSIFICATION	1.658060347696339E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999983419396523	WITHOUT_CLASSIFICATION	1.658060347696339E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999983419396523	WITHOUT_CLASSIFICATION	1.658060347696339E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999996067671276	WITHOUT_CLASSIFICATION	3.932328723712452E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999932511235186	WITHOUT_CLASSIFICATION	6.748876481400133E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999932511235186	WITHOUT_CLASSIFICATION	6.748876481400133E-5	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999828269854	WITHOUT_CLASSIFICATION	1.717301457315554E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999971975236983	WITHOUT_CLASSIFICATION	2.8024763016779387E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999971975236983	WITHOUT_CLASSIFICATION	2.8024763016779387E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999993685859655	WITHOUT_CLASSIFICATION	6.314140344297315E-7	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999993685859655	WITHOUT_CLASSIFICATION	6.314140344297315E-7	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.999999992694268	WITHOUT_CLASSIFICATION	7.305732024244876E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999938585754	WITHOUT_CLASSIFICATION	6.141424564569905E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999938585754	WITHOUT_CLASSIFICATION	6.141424564569905E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999938585754	WITHOUT_CLASSIFICATION	6.141424564569905E-9	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999963256185339	WITHOUT_CLASSIFICATION	3.674381465952126E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9998873588083874	WITHOUT_CLASSIFICATION	1.1264119161257355E-4	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999905807684822	WITHOUT_CLASSIFICATION	9.419231517732114E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999905807684822	WITHOUT_CLASSIFICATION	9.419231517732114E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999905807684822	WITHOUT_CLASSIFICATION	9.419231517732114E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999905807684822	WITHOUT_CLASSIFICATION	9.419231517732114E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999905807684822	WITHOUT_CLASSIFICATION	9.419231517732114E-6	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999997715863707	WITHOUT_CLASSIFICATION	2.2841362926595103E-7	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999941203733654	WITHOUT_CLASSIFICATION	5.8796266346520835E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999941203733654	WITHOUT_CLASSIFICATION	5.8796266346520835E-6	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999922966259162	WITHOUT_CLASSIFICATION	7.703374083802138E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999400711091101	WITHOUT_CLASSIFICATION	5.9928890889792106E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999400711091101	WITHOUT_CLASSIFICATION	5.9928890889792106E-5	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973285785689	WITHOUT_CLASSIFICATION	2.671421431095654E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999977210051442	WITHOUT_CLASSIFICATION	2.2789948558588188E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999977210051442	WITHOUT_CLASSIFICATION	2.2789948558588188E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999977210051442	WITHOUT_CLASSIFICATION	2.2789948558588188E-6	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999997778676314	WITHOUT_CLASSIFICATION	2.2213236850512392E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999997778676314	WITHOUT_CLASSIFICATION	2.2213236850512392E-7	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.9999994215751421	WITHOUT_CLASSIFICATION	5.784248579683615E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999994097292466	WITHOUT_CLASSIFICATION	5.902707533617598E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999994097292466	WITHOUT_CLASSIFICATION	5.902707533617598E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999900973808952	WITHOUT_CLASSIFICATION	9.902619104737563E-6	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.9999992878151869	WITHOUT_CLASSIFICATION	7.121848131271393E-7	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999347415877672	WITHOUT_CLASSIFICATION	6.525841223287187E-5	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999909980415709	WITHOUT_CLASSIFICATION	9.001958429088756E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999966412510893	WITHOUT_CLASSIFICATION	3.3587489106061604E-6	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.9999999962241096	WITHOUT_CLASSIFICATION	3.775890415096129E-9	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9999857067632089	WITHOUT_CLASSIFICATION	1.4293236791126075E-5	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.9999995603869934	WITHOUT_CLASSIFICATION	4.3961300659078934E-7	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9999806847473145	WITHOUT_CLASSIFICATION	1.9315252685487647E-5	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.9999757035970559	WITHOUT_CLASSIFICATION	2.429640294410376E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.999999702880831	WITHOUT_CLASSIFICATION	2.9711916911602557E-7	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.8201794298866211	WITHOUT_CLASSIFICATION	0.17982057011337899	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999985900413072	WITHOUT_CLASSIFICATION	1.409958692780697E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999977830661683	WITHOUT_CLASSIFICATION	2.216933831717265E-6	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.9999987237481291	WITHOUT_CLASSIFICATION	1.2762518708129673E-6	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999514193500625	WITHOUT_CLASSIFICATION	4.85806499375191E-5	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999986956150595	WITHOUT_CLASSIFICATION	1.3043849404217495E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999986956150595	WITHOUT_CLASSIFICATION	1.3043849404217495E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999986956150595	WITHOUT_CLASSIFICATION	1.3043849404217495E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999986956150595	WITHOUT_CLASSIFICATION	1.3043849404217495E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999986956150595	WITHOUT_CLASSIFICATION	1.3043849404217495E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999986956150595	WITHOUT_CLASSIFICATION	1.3043849404217495E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999986956150595	WITHOUT_CLASSIFICATION	1.3043849404217495E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999986956150595	WITHOUT_CLASSIFICATION	1.3043849404217495E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999986956150595	WITHOUT_CLASSIFICATION	1.3043849404217495E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999804316556836	WITHOUT_CLASSIFICATION	1.9568344316412706E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.999919256016682	WITHOUT_CLASSIFICATION	8.07439833179679E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999821882118937	WITHOUT_CLASSIFICATION	1.781178810641229E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999821882118937	WITHOUT_CLASSIFICATION	1.781178810641229E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.999998534266009	WITHOUT_CLASSIFICATION	1.4657339909631974E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999724585090224	WITHOUT_CLASSIFICATION	2.7541490977608768E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999724585090224	WITHOUT_CLASSIFICATION	2.7541490977608768E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999724585090224	WITHOUT_CLASSIFICATION	2.7541490977608768E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999930139659329	WITHOUT_CLASSIFICATION	6.986034067034704E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999184902787569	WITHOUT_CLASSIFICATION	8.150972124302878E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999184902787569	WITHOUT_CLASSIFICATION	8.150972124302878E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999184902787569	WITHOUT_CLASSIFICATION	8.150972124302878E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999184902787569	WITHOUT_CLASSIFICATION	8.150972124302878E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999184902787569	WITHOUT_CLASSIFICATION	8.150972124302878E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999184902787569	WITHOUT_CLASSIFICATION	8.150972124302878E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999797933593195	WITHOUT_CLASSIFICATION	2.0206640680490654E-5	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9734052795911641	WITHOUT_CLASSIFICATION	0.026594720408835835	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999842682516534	WITHOUT_CLASSIFICATION	1.5731748346579704E-5	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.9999999199546992	WITHOUT_CLASSIFICATION	8.004530080866053E-8	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.999946083005023	WITHOUT_CLASSIFICATION	5.391699497711397E-5	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.9999994425917705	WITHOUT_CLASSIFICATION	5.57408229579619E-7	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9996994398477975	WITHOUT_CLASSIFICATION	3.0056015220245535E-4	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9996994398477975	WITHOUT_CLASSIFICATION	3.0056015220245535E-4	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999990739814497	WITHOUT_CLASSIFICATION	9.260185502921972E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999990739814497	WITHOUT_CLASSIFICATION	9.260185502921972E-7	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999870765282071	WITHOUT_CLASSIFICATION	1.2923471792957954E-5	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.999997755085446	WITHOUT_CLASSIFICATION	2.2449145539625954E-6	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999998375332544	WITHOUT_CLASSIFICATION	1.6246674557647694E-7	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.999999727661171	WITHOUT_CLASSIFICATION	2.7233882904545703E-7	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999828952561799	WITHOUT_CLASSIFICATION	1.7104743820142555E-5	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.9998968964806171	WITHOUT_CLASSIFICATION	1.0310351938297584E-4	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.999995637896351	WITHOUT_CLASSIFICATION	4.362103648927151E-6	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.9999962082355155	WITHOUT_CLASSIFICATION	3.791764484552724E-6	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999839556525685	WITHOUT_CLASSIFICATION	1.6044347431478638E-5	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999985872619579	WITHOUT_CLASSIFICATION	1.412738042087261E-6	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999984692776558	WITHOUT_CLASSIFICATION	1.5307223441458648E-6	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.9999995158102785	WITHOUT_CLASSIFICATION	4.841897215284385E-7	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.9999242696524971	WITHOUT_CLASSIFICATION	7.573034750288104E-5	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9997434706592454	WITHOUT_CLASSIFICATION	2.5652934075462625E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9997434706592454	WITHOUT_CLASSIFICATION	2.5652934075462625E-4	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999998734713935	WITHOUT_CLASSIFICATION	1.265286064036533E-7	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.9999986480337869	WITHOUT_CLASSIFICATION	1.3519662131596472E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999951831259	WITHOUT_CLASSIFICATION	4.8168740697761114E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999951831259	WITHOUT_CLASSIFICATION	4.8168740697761114E-9	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.9999988550098583	WITHOUT_CLASSIFICATION	1.1449901416833923E-6	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9999992668193768	WITHOUT_CLASSIFICATION	7.331806232408371E-7	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.999999920606306	WITHOUT_CLASSIFICATION	7.939369393162527E-8	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9979726792360907	WITHOUT_CLASSIFICATION	0.002027320763909322	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999929922614328	WITHOUT_CLASSIFICATION	7.007738567138884E-6	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.9999991142682403	WITHOUT_CLASSIFICATION	8.857317596581647E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999990500895586	WITHOUT_CLASSIFICATION	9.499104414052301E-7	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.999941936577521	WITHOUT_CLASSIFICATION	5.8063422479065264E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.999941936577521	WITHOUT_CLASSIFICATION	5.8063422479065264E-5	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9998929569013921	WITHOUT_CLASSIFICATION	1.0704309860788406E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999899456598159	WITHOUT_CLASSIFICATION	1.0054340184040468E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999899456598159	WITHOUT_CLASSIFICATION	1.0054340184040468E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999899456598159	WITHOUT_CLASSIFICATION	1.0054340184040468E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999899456598159	WITHOUT_CLASSIFICATION	1.0054340184040468E-5	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9358363857461414	WITHOUT_CLASSIFICATION	0.06416361425385866	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999816314796353	WITHOUT_CLASSIFICATION	1.8368520364737124E-5	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999816314796353	WITHOUT_CLASSIFICATION	1.8368520364737124E-5	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9993657865087302	WITHOUT_CLASSIFICATION	6.342134912697431E-4	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999997525310519	WITHOUT_CLASSIFICATION	2.4746894813214447E-7	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.9999994746455134	WITHOUT_CLASSIFICATION	5.253544866149305E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999557781933	WITHOUT_CLASSIFICATION	4.422180673209581E-8	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.9999984183735653	WITHOUT_CLASSIFICATION	1.5816264347199287E-6	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999999323120206	WITHOUT_CLASSIFICATION	6.768797938436364E-8	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999375294798478	WITHOUT_CLASSIFICATION	6.247052015220149E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999375294798478	WITHOUT_CLASSIFICATION	6.247052015220149E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999375294798478	WITHOUT_CLASSIFICATION	6.247052015220149E-5	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.9999999978001807	WITHOUT_CLASSIFICATION	2.1998193521028463E-9	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999999394268698	WITHOUT_CLASSIFICATION	6.057313020188983E-8	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999999539753042	WITHOUT_CLASSIFICATION	4.6024695799428454E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999998386311011	WITHOUT_CLASSIFICATION	1.6136889878145708E-7	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999537836624	WITHOUT_CLASSIFICATION	4.62163376638833E-8	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.9999235308473813	WITHOUT_CLASSIFICATION	7.646915261869285E-5	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.9999999529439664	WITHOUT_CLASSIFICATION	4.705603372356349E-8	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999975644761387	WITHOUT_CLASSIFICATION	2.435523861252531E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999975644761387	WITHOUT_CLASSIFICATION	2.435523861252531E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999975644761387	WITHOUT_CLASSIFICATION	2.435523861252531E-6	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999890467335576	WITHOUT_CLASSIFICATION	1.0953266442331187E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999963594708714	WITHOUT_CLASSIFICATION	3.6405291285589946E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999963594708714	WITHOUT_CLASSIFICATION	3.6405291285589946E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999963594708714	WITHOUT_CLASSIFICATION	3.6405291285589946E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999963594708714	WITHOUT_CLASSIFICATION	3.6405291285589946E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999963594708714	WITHOUT_CLASSIFICATION	3.6405291285589946E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999963594708714	WITHOUT_CLASSIFICATION	3.6405291285589946E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999963594708714	WITHOUT_CLASSIFICATION	3.6405291285589946E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999963594708714	WITHOUT_CLASSIFICATION	3.6405291285589946E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999963594708714	WITHOUT_CLASSIFICATION	3.6405291285589946E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999970796738246	WITHOUT_CLASSIFICATION	2.9203261754287537E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999986056417611	WITHOUT_CLASSIFICATION	1.3943582388227081E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999986056417611	WITHOUT_CLASSIFICATION	1.3943582388227081E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999986056417611	WITHOUT_CLASSIFICATION	1.3943582388227081E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999992715526008	WITHOUT_CLASSIFICATION	7.284473990520548E-7	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999887949838769	WITHOUT_CLASSIFICATION	1.1205016123047772E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999887949838769	WITHOUT_CLASSIFICATION	1.1205016123047772E-5	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.9999551361655314	WITHOUT_CLASSIFICATION	4.486383446865965E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999994534355885	WITHOUT_CLASSIFICATION	5.465644114730584E-7	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999999064148812	WITHOUT_CLASSIFICATION	9.358511873720741E-8	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999998016810049	WITHOUT_CLASSIFICATION	1.9831899516760153E-7	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999998908406776	WITHOUT_CLASSIFICATION	1.0915932232380453E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999921401220967	WITHOUT_CLASSIFICATION	7.859877903242177E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999997268319941	WITHOUT_CLASSIFICATION	2.7316800589367984E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999997268319941	WITHOUT_CLASSIFICATION	2.7316800589367984E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999997268319941	WITHOUT_CLASSIFICATION	2.7316800589367984E-6	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9999962661489427	WITHOUT_CLASSIFICATION	3.7338510574105443E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999547541623011	WITHOUT_CLASSIFICATION	4.524583769896787E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.9999990773026431	WITHOUT_CLASSIFICATION	9.226973568674534E-7	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999988121650315	WITHOUT_CLASSIFICATION	1.1878349684868803E-6	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.9999578513845392	WITHOUT_CLASSIFICATION	4.2148615460875884E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999991858840199	WITHOUT_CLASSIFICATION	8.141159800073546E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999991858840199	WITHOUT_CLASSIFICATION	8.141159800073546E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999991858840199	WITHOUT_CLASSIFICATION	8.141159800073546E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999991858840199	WITHOUT_CLASSIFICATION	8.141159800073546E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999991858840199	WITHOUT_CLASSIFICATION	8.141159800073546E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999991858840199	WITHOUT_CLASSIFICATION	8.141159800073546E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999991858840199	WITHOUT_CLASSIFICATION	8.141159800073546E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999991858840199	WITHOUT_CLASSIFICATION	8.141159800073546E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999991858840199	WITHOUT_CLASSIFICATION	8.141159800073546E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992416478591	WITHOUT_CLASSIFICATION	7.583521409350142E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992416478591	WITHOUT_CLASSIFICATION	7.583521409350142E-7	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999961151401462	WITHOUT_CLASSIFICATION	3.88485985380183E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999961151401462	WITHOUT_CLASSIFICATION	3.88485985380183E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999979054596897	WITHOUT_CLASSIFICATION	2.094540310324923E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999979054596897	WITHOUT_CLASSIFICATION	2.094540310324923E-6	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.9999986534163683	WITHOUT_CLASSIFICATION	1.3465836317627658E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999917437868784	WITHOUT_CLASSIFICATION	8.256213121659963E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999917437868784	WITHOUT_CLASSIFICATION	8.256213121659963E-6	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.99999799619798	WITHOUT_CLASSIFICATION	2.0038020199259176E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999998452164485	WITHOUT_CLASSIFICATION	1.547835514105406E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999998452164485	WITHOUT_CLASSIFICATION	1.547835514105406E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999974511869557	WITHOUT_CLASSIFICATION	2.5488130442342863E-6	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.9999999575456621	WITHOUT_CLASSIFICATION	4.245433795367687E-8	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.9999964188850852	WITHOUT_CLASSIFICATION	3.581114914868649E-6	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.9999990316926571	WITHOUT_CLASSIFICATION	9.683073428595424E-7	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999982033228859	WITHOUT_CLASSIFICATION	1.7966771140494507E-6	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999982033228859	WITHOUT_CLASSIFICATION	1.7966771140494507E-6	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.9999974968748896	WITHOUT_CLASSIFICATION	2.503125110317947E-6	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.9820579884610766	WITHOUT_CLASSIFICATION	0.017942011538923427	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.9999988309002807	WITHOUT_CLASSIFICATION	1.1690997192529845E-6	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999875970440972	WITHOUT_CLASSIFICATION	1.2402955902697239E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999977968136	WITHOUT_CLASSIFICATION	2.2031864098303327E-8	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998059814664	WITHOUT_CLASSIFICATION	1.9401853365007742E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996160242789	WITHOUT_CLASSIFICATION	3.839757210983942E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999978508434	WITHOUT_CLASSIFICATION	2.149156590454928E-8	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999999550990716	WITHOUT_CLASSIFICATION	4.490092854521227E-8	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999871686310539	WITHOUT_CLASSIFICATION	1.2831368946144264E-5	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.999995115459964	WITHOUT_CLASSIFICATION	4.884540036022959E-6	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9999390891708065	WITHOUT_CLASSIFICATION	6.091082919348105E-5	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.9999992119291368	WITHOUT_CLASSIFICATION	7.880708632892752E-7	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999999484138272	WITHOUT_CLASSIFICATION	5.158617270888007E-8	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.9999992574293521	WITHOUT_CLASSIFICATION	7.425706479496207E-7	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.9999999105347019	WITHOUT_CLASSIFICATION	8.946529800755945E-8	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.9999941876565529	WITHOUT_CLASSIFICATION	5.81234344719876E-6	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.9999998820316481	WITHOUT_CLASSIFICATION	1.1796835182059348E-7	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.999997234270156	WITHOUT_CLASSIFICATION	2.765729844035047E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.999992988050758	WITHOUT_CLASSIFICATION	7.01194924203202E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.999992988050758	WITHOUT_CLASSIFICATION	7.01194924203202E-6	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999754243387114	WITHOUT_CLASSIFICATION	2.4575661288551527E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999991878003683	WITHOUT_CLASSIFICATION	8.121996316908507E-7	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999843880349915	WITHOUT_CLASSIFICATION	1.5611965008590757E-5	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999844860863227	WITHOUT_CLASSIFICATION	1.5513913677269804E-5	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999940841177549	WITHOUT_CLASSIFICATION	5.9158822451279836E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999962260994152	WITHOUT_CLASSIFICATION	3.7739005848078437E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999989893696342	WITHOUT_CLASSIFICATION	1.010630365850957E-6	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999991328851799	WITHOUT_CLASSIFICATION	8.671148199954672E-7	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999983351908016	WITHOUT_CLASSIFICATION	1.6648091983166311E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999983351908016	WITHOUT_CLASSIFICATION	1.6648091983166311E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9986635374108381	WITHOUT_CLASSIFICATION	0.001336462589161871	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999999106260821	WITHOUT_CLASSIFICATION	8.937391790557728E-8	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9996996127740408	WITHOUT_CLASSIFICATION	3.003872259590788E-4	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9996660234613782	WITHOUT_CLASSIFICATION	3.339765386216744E-4	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9994208874042576	WITHOUT_CLASSIFICATION	5.791125957423967E-4	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.99999984705027	WITHOUT_CLASSIFICATION	1.5294972993763085E-7	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.9999997145553539	WITHOUT_CLASSIFICATION	2.854446461436713E-7	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999998591494139	WITHOUT_CLASSIFICATION	1.4085058609542147E-7	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.9999998234451007	WITHOUT_CLASSIFICATION	1.7655489934408534E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999998261607704	WITHOUT_CLASSIFICATION	1.7383922963324478E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999998261607704	WITHOUT_CLASSIFICATION	1.7383922963324478E-7	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9996482564543518	WITHOUT_CLASSIFICATION	3.5174354564819005E-4	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999931296141582	WITHOUT_CLASSIFICATION	6.870385841800775E-6	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999986984263745	WITHOUT_CLASSIFICATION	1.301573625549333E-6	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999997066376707	WITHOUT_CLASSIFICATION	2.933623293509698E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999997066376707	WITHOUT_CLASSIFICATION	2.933623293509698E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999993534360675	WITHOUT_CLASSIFICATION	6.465639325059152E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999993534360675	WITHOUT_CLASSIFICATION	6.465639325059152E-7	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9993867209855559	WITHOUT_CLASSIFICATION	6.132790144441607E-4	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999644909703215	WITHOUT_CLASSIFICATION	3.550902967847636E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999990751670511	WITHOUT_CLASSIFICATION	9.248329490401421E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999990751670511	WITHOUT_CLASSIFICATION	9.248329490401421E-7	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999963606907346	WITHOUT_CLASSIFICATION	3.639309265254303E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999975133643835	WITHOUT_CLASSIFICATION	2.486635616414372E-6	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.9999982941289673	WITHOUT_CLASSIFICATION	1.7058710326624657E-6	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.9999970304134388	WITHOUT_CLASSIFICATION	2.969586561133481E-6	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.9999959031094888	WITHOUT_CLASSIFICATION	4.09689051118861E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994762610286	WITHOUT_CLASSIFICATION	5.237389714114012E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994762610286	WITHOUT_CLASSIFICATION	5.237389714114012E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994762610286	WITHOUT_CLASSIFICATION	5.237389714114012E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994762610286	WITHOUT_CLASSIFICATION	5.237389714114012E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994762610286	WITHOUT_CLASSIFICATION	5.237389714114012E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994762610286	WITHOUT_CLASSIFICATION	5.237389714114012E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994762610286	WITHOUT_CLASSIFICATION	5.237389714114012E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994762610286	WITHOUT_CLASSIFICATION	5.237389714114012E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994762610286	WITHOUT_CLASSIFICATION	5.237389714114012E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994762610286	WITHOUT_CLASSIFICATION	5.237389714114012E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994762610286	WITHOUT_CLASSIFICATION	5.237389714114012E-7	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.999968165517486	WITHOUT_CLASSIFICATION	3.183448251400245E-5	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.9996391210559056	WITHOUT_CLASSIFICATION	3.608789440943799E-4	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.999999817910047	WITHOUT_CLASSIFICATION	1.8208995294011432E-7	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.9999995074694971	WITHOUT_CLASSIFICATION	4.925305028106566E-7	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999766866770907	WITHOUT_CLASSIFICATION	2.331332290930942E-5	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.9999977419014061	WITHOUT_CLASSIFICATION	2.258098593885358E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.999999312000536	WITHOUT_CLASSIFICATION	6.879994638421776E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999961680976983	WITHOUT_CLASSIFICATION	3.8319023017146115E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999961680976983	WITHOUT_CLASSIFICATION	3.8319023017146115E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999961680976983	WITHOUT_CLASSIFICATION	3.8319023017146115E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999961680976983	WITHOUT_CLASSIFICATION	3.8319023017146115E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999961680976983	WITHOUT_CLASSIFICATION	3.8319023017146115E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999961680976983	WITHOUT_CLASSIFICATION	3.8319023017146115E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999961680976983	WITHOUT_CLASSIFICATION	3.8319023017146115E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999961680976983	WITHOUT_CLASSIFICATION	3.8319023017146115E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999961680976983	WITHOUT_CLASSIFICATION	3.8319023017146115E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999961680976983	WITHOUT_CLASSIFICATION	3.8319023017146115E-6	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.9999588589446664	WITHOUT_CLASSIFICATION	4.1141055333668635E-5	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999834503256938	WITHOUT_CLASSIFICATION	1.654967430625527E-5	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.9993878906913778	WITHOUT_CLASSIFICATION	6.121093086222053E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998110611517	WITHOUT_CLASSIFICATION	1.889388483196094E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998110611517	WITHOUT_CLASSIFICATION	1.889388483196094E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998110611517	WITHOUT_CLASSIFICATION	1.889388483196094E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998110611517	WITHOUT_CLASSIFICATION	1.889388483196094E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998110611517	WITHOUT_CLASSIFICATION	1.889388483196094E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998110611517	WITHOUT_CLASSIFICATION	1.889388483196094E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998110611517	WITHOUT_CLASSIFICATION	1.889388483196094E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999673273487	WITHOUT_CLASSIFICATION	3.267265116780485E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999673273487	WITHOUT_CLASSIFICATION	3.267265116780485E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999673273487	WITHOUT_CLASSIFICATION	3.267265116780485E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999673273487	WITHOUT_CLASSIFICATION	3.267265116780485E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999673273487	WITHOUT_CLASSIFICATION	3.267265116780485E-8	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.9999987112591681	WITHOUT_CLASSIFICATION	1.28874083195367E-6	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999997677009009	WITHOUT_CLASSIFICATION	2.3229909918762624E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999998517560749	WITHOUT_CLASSIFICATION	1.482439251166309E-7	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.99999589572627	WITHOUT_CLASSIFICATION	4.104273729985889E-6	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9999985894298796	WITHOUT_CLASSIFICATION	1.4105701203988518E-6	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.9999997932362382	WITHOUT_CLASSIFICATION	2.0676376169905244E-7	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.9999784780669085	WITHOUT_CLASSIFICATION	2.152193309141535E-5	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.9999925895789195	WITHOUT_CLASSIFICATION	7.410421080584485E-6	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9999977278603895	WITHOUT_CLASSIFICATION	2.2721396103978363E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999619862223054	WITHOUT_CLASSIFICATION	3.801377769460174E-5	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.9999999995033545	WITHOUT_CLASSIFICATION	4.966454706097093E-10	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.999995269555968	WITHOUT_CLASSIFICATION	4.730444031950331E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.999999554768918	WITHOUT_CLASSIFICATION	4.452310819231569E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.999999554768918	WITHOUT_CLASSIFICATION	4.452310819231569E-7	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999914951792	WITHOUT_CLASSIFICATION	8.504820842674785E-9	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999949140966141	WITHOUT_CLASSIFICATION	5.0859033858811275E-6	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999998695231305	WITHOUT_CLASSIFICATION	1.3047686962556256E-7	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.9999983926938744	WITHOUT_CLASSIFICATION	1.6073061255627436E-6	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.9999971933740956	WITHOUT_CLASSIFICATION	2.806625904368824E-6	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999999493213066	WITHOUT_CLASSIFICATION	5.0678693299144235E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.8831498928285553	WITHOUT_CLASSIFICATION	0.11685010717144477	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.9999999727919414	WITHOUT_CLASSIFICATION	2.7208058616854245E-8	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.9999982266619151	WITHOUT_CLASSIFICATION	1.773338084844933E-6	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999999240091568	WITHOUT_CLASSIFICATION	7.599084320911947E-8	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.9999985069143339	WITHOUT_CLASSIFICATION	1.493085666147622E-6	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999982836183874	WITHOUT_CLASSIFICATION	1.716381612512243E-6	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.99999977485	WITHOUT_CLASSIFICATION	2.2514999995369575E-7	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999986581767579	WITHOUT_CLASSIFICATION	1.341823241996662E-6	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.9999828402098251	WITHOUT_CLASSIFICATION	1.715979017497421E-5	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999974806293905	WITHOUT_CLASSIFICATION	2.5193706093634406E-6	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.9989003952229566	WITHOUT_CLASSIFICATION	0.0010996047770434768	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.999999947332513	WITHOUT_CLASSIFICATION	5.266748707941862E-8	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.9999965190161216	WITHOUT_CLASSIFICATION	3.480983878333914E-6	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.9999967109041499	WITHOUT_CLASSIFICATION	3.2890958500070414E-6	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.9999998244508981	WITHOUT_CLASSIFICATION	1.7554910191898498E-7	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.9999998938040986	WITHOUT_CLASSIFICATION	1.0619590136631612E-7	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999998658981867	WITHOUT_CLASSIFICATION	1.3410181335822932E-7	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999893053583	WITHOUT_CLASSIFICATION	1.0694641763473763E-8	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.9999999524916033	WITHOUT_CLASSIFICATION	4.750839659572703E-8	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.999751594866062	WITHOUT_CLASSIFICATION	2.4840513393799404E-4	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.9999747578354794	WITHOUT_CLASSIFICATION	2.524216452064147E-5	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.9999815122433579	WITHOUT_CLASSIFICATION	1.848775664218682E-5	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.9999998937356644	WITHOUT_CLASSIFICATION	1.0626433555656514E-7	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999999643868	WITHOUT_CLASSIFICATION	3.56130855936343E-11	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999999466038498	WITHOUT_CLASSIFICATION	5.3396150159724406E-8	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.9999792617616795	WITHOUT_CLASSIFICATION	2.073823832041161E-5	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999969232642	WITHOUT_CLASSIFICATION	3.0767357618256004E-9	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999969232642	WITHOUT_CLASSIFICATION	3.0767357618256004E-9	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999932994146707	WITHOUT_CLASSIFICATION	6.700585329297473E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999994616055676	WITHOUT_CLASSIFICATION	5.383944323031531E-7	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999996955772525	WITHOUT_CLASSIFICATION	3.0442274752059363E-7	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999996955772525	WITHOUT_CLASSIFICATION	3.0442274752059363E-7	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.9999987494209379	WITHOUT_CLASSIFICATION	1.2505790620960241E-6	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999358447229	WITHOUT_CLASSIFICATION	6.415527707128781E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999358447229	WITHOUT_CLASSIFICATION	6.415527707128781E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999358447229	WITHOUT_CLASSIFICATION	6.415527707128781E-8	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999994616055676	WITHOUT_CLASSIFICATION	5.383944323031531E-7	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999157971972396	WITHOUT_CLASSIFICATION	8.420280276043124E-5	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999996306026071	WITHOUT_CLASSIFICATION	3.693973928486357E-7	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999994616055676	WITHOUT_CLASSIFICATION	5.383944323031531E-7	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999994616055676	WITHOUT_CLASSIFICATION	5.383944323031531E-7	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999994616055676	WITHOUT_CLASSIFICATION	5.383944323031531E-7	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.9999999836116378	WITHOUT_CLASSIFICATION	1.6388362242527387E-8	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.9999467198259304	WITHOUT_CLASSIFICATION	5.328017406963838E-5	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9997257532582089	WITHOUT_CLASSIFICATION	2.7424674179110306E-4	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999995750855989	WITHOUT_CLASSIFICATION	4.2491440106849377E-7	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.998631895223821	WITHOUT_CLASSIFICATION	0.0013681047761789637	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999994475613873	WITHOUT_CLASSIFICATION	5.524386127598205E-7	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.9999999995648353	WITHOUT_CLASSIFICATION	4.3516465899923585E-10	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999994475613873	WITHOUT_CLASSIFICATION	5.524386127598205E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.985077948684083	WITHOUT_CLASSIFICATION	0.01492205131591691	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999999728088196	WITHOUT_CLASSIFICATION	2.7191180462534738E-8	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999994475613873	WITHOUT_CLASSIFICATION	5.524386127598205E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999994475613873	WITHOUT_CLASSIFICATION	5.524386127598205E-7	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999945294860935	WITHOUT_CLASSIFICATION	5.470513906427145E-6	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999790446663671	WITHOUT_CLASSIFICATION	2.095533363289596E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999987708994984	WITHOUT_CLASSIFICATION	1.2291005017064643E-6	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.9999998302389397	WITHOUT_CLASSIFICATION	1.6976106041071562E-7	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999999944356492	WITHOUT_CLASSIFICATION	5.564350736041275E-9	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.999999929506738	WITHOUT_CLASSIFICATION	7.04932620153593E-8	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999984909801752	WITHOUT_CLASSIFICATION	1.5090198248634304E-6	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.999973632127917	WITHOUT_CLASSIFICATION	2.6367872083084654E-5	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.999973632127917	WITHOUT_CLASSIFICATION	2.6367872083084654E-5	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.9999982003074824	WITHOUT_CLASSIFICATION	1.7996925175114905E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999780821478242	WITHOUT_CLASSIFICATION	2.1917852175717477E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.8867211118243118	WITHOUT_CLASSIFICATION	0.11327888817568815	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999996692446884	WITHOUT_CLASSIFICATION	3.3075531156045186E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999994241089295	WITHOUT_CLASSIFICATION	5.758910704870515E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999994241089295	WITHOUT_CLASSIFICATION	5.758910704870515E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999994241089295	WITHOUT_CLASSIFICATION	5.758910704870515E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999996692446884	WITHOUT_CLASSIFICATION	3.3075531156045186E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999996692446884	WITHOUT_CLASSIFICATION	3.3075531156045186E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999996692446884	WITHOUT_CLASSIFICATION	3.3075531156045186E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999996692446884	WITHOUT_CLASSIFICATION	3.3075531156045186E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999996692446884	WITHOUT_CLASSIFICATION	3.3075531156045186E-7	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.9999995184028926	WITHOUT_CLASSIFICATION	4.815971073982878E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997491740948	WITHOUT_CLASSIFICATION	2.5082590510799993E-7	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999990233891023	WITHOUT_CLASSIFICATION	9.766108977094593E-7	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999990233891023	WITHOUT_CLASSIFICATION	9.766108977094593E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997491740948	WITHOUT_CLASSIFICATION	2.5082590510799993E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997491740948	WITHOUT_CLASSIFICATION	2.5082590510799993E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997491740948	WITHOUT_CLASSIFICATION	2.5082590510799993E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999986083491261	WITHOUT_CLASSIFICATION	1.391650873833101E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999986083491261	WITHOUT_CLASSIFICATION	1.391650873833101E-6	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999986083491261	WITHOUT_CLASSIFICATION	1.391650873833101E-6	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999998354750238	WITHOUT_CLASSIFICATION	1.645249762548567E-7	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.8831498928285553	WITHOUT_CLASSIFICATION	0.11685010717144477	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997491740948	WITHOUT_CLASSIFICATION	2.5082590510799993E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999986083491261	WITHOUT_CLASSIFICATION	1.391650873833101E-6	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999998402086986	WITHOUT_CLASSIFICATION	1.5979130144130262E-7	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.9999936618094423	WITHOUT_CLASSIFICATION	6.3381905576910816E-6	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.999996731742606	WITHOUT_CLASSIFICATION	3.2682573939838225E-6	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.9999996305996083	WITHOUT_CLASSIFICATION	3.694003917622414E-7	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.9999998825585641	WITHOUT_CLASSIFICATION	1.1744143581570456E-7	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.9999993289132035	WITHOUT_CLASSIFICATION	6.710867964364257E-7	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.9999981584669859	WITHOUT_CLASSIFICATION	1.841533014131888E-6	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.9999964792457617	WITHOUT_CLASSIFICATION	3.520754238385129E-6	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999937546622029	WITHOUT_CLASSIFICATION	6.245337797107372E-6	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999999186076617	WITHOUT_CLASSIFICATION	8.13923383091858E-8	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999999186076617	WITHOUT_CLASSIFICATION	8.13923383091858E-8	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999998806698992	WITHOUT_CLASSIFICATION	1.193301007964319E-7	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999998806698992	WITHOUT_CLASSIFICATION	1.193301007964319E-7	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999997859505068	WITHOUT_CLASSIFICATION	2.1404949315188812E-7	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999997859505068	WITHOUT_CLASSIFICATION	2.1404949315188812E-7	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.9999998698387101	WITHOUT_CLASSIFICATION	1.3016128991128258E-7	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.9999816619455482	WITHOUT_CLASSIFICATION	1.8338054451802814E-5	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.9999643193769371	WITHOUT_CLASSIFICATION	3.568062306293258E-5	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.9999961748192747	WITHOUT_CLASSIFICATION	3.82518072523597E-6	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.9999984029740742	WITHOUT_CLASSIFICATION	1.5970259258527284E-6	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.9999971608538097	WITHOUT_CLASSIFICATION	2.839146190232065E-6	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.9999999906597766	WITHOUT_CLASSIFICATION	9.340223452648438E-9	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.9999993120888366	WITHOUT_CLASSIFICATION	6.879111634223589E-7	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.9999999414521109	WITHOUT_CLASSIFICATION	5.854788919680322E-8	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999844552077789	WITHOUT_CLASSIFICATION	1.5544792221084E-5	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999986558717923	WITHOUT_CLASSIFICATION	1.3441282077195584E-6	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999995750855989	WITHOUT_CLASSIFICATION	4.2491440106849377E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999938656881665	WITHOUT_CLASSIFICATION	6.134311833558219E-6	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999987362450352	WITHOUT_CLASSIFICATION	1.2637549648162344E-6	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.9999996915711851	WITHOUT_CLASSIFICATION	3.084288149546148E-7	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999997821813855	WITHOUT_CLASSIFICATION	2.178186144517488E-7	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999997821813855	WITHOUT_CLASSIFICATION	2.178186144517488E-7	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.9999998700169125	WITHOUT_CLASSIFICATION	1.299830875321212E-7	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9999997143812444	WITHOUT_CLASSIFICATION	2.8561875568480456E-7	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.9999994790238433	WITHOUT_CLASSIFICATION	5.209761566271799E-7	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.9999998530103525	WITHOUT_CLASSIFICATION	1.4698964746288136E-7	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.9999911210405086	WITHOUT_CLASSIFICATION	8.878959491395189E-6	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.9999879304674095	WITHOUT_CLASSIFICATION	1.2069532590546847E-5	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.9999900905513086	WITHOUT_CLASSIFICATION	9.909448691484398E-6	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9999980598401299	WITHOUT_CLASSIFICATION	1.9401598700477294E-6	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.9999995881087795	WITHOUT_CLASSIFICATION	4.1189122044082765E-7	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.9998619587622246	WITHOUT_CLASSIFICATION	1.380412377754117E-4	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.9998324651266796	WITHOUT_CLASSIFICATION	1.675348733204534E-4	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999821550793406	WITHOUT_CLASSIFICATION	1.7844920659407557E-5	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999852897920837	WITHOUT_CLASSIFICATION	1.4710207916343538E-5	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999979169589791	WITHOUT_CLASSIFICATION	2.0830410209555577E-6	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9999997910164238	WITHOUT_CLASSIFICATION	2.0898357612047803E-7	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999115880269	WITHOUT_CLASSIFICATION	8.841197306654057E-8	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999115880269	WITHOUT_CLASSIFICATION	8.841197306654057E-8	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999995874798828	WITHOUT_CLASSIFICATION	4.1252011714210253E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999995874798828	WITHOUT_CLASSIFICATION	4.1252011714210253E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.999994467164109	WITHOUT_CLASSIFICATION	5.5328358910322055E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.999994467164109	WITHOUT_CLASSIFICATION	5.5328358910322055E-6	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.9999907307364553	WITHOUT_CLASSIFICATION	9.269263544749728E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999780821478242	WITHOUT_CLASSIFICATION	2.1917852175717477E-5	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9998365625500434	WITHOUT_CLASSIFICATION	1.6343744995658832E-4	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9997754894131003	WITHOUT_CLASSIFICATION	2.245105868995626E-4	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999999045351616	WITHOUT_CLASSIFICATION	9.546483834218229E-8	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999973866467858	WITHOUT_CLASSIFICATION	2.6133532142616156E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999115880269	WITHOUT_CLASSIFICATION	8.841197306654057E-8	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.9999676880182121	WITHOUT_CLASSIFICATION	3.231198178784428E-5	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.999660495098477	WITHOUT_CLASSIFICATION	3.3950490152303344E-4	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.9999999814911921	WITHOUT_CLASSIFICATION	1.850880789841126E-8	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999995464730592	WITHOUT_CLASSIFICATION	4.5352694075254253E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999995874798828	WITHOUT_CLASSIFICATION	4.1252011714210253E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.999994467164109	WITHOUT_CLASSIFICATION	5.5328358910322055E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999780821478242	WITHOUT_CLASSIFICATION	2.1917852175717477E-5	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999998535684778	WITHOUT_CLASSIFICATION	1.464315221865831E-7	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9999999945434156	WITHOUT_CLASSIFICATION	5.456584410724012E-9	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999904516266542	WITHOUT_CLASSIFICATION	9.548373345758938E-6	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.9999999224602997	WITHOUT_CLASSIFICATION	7.753970026362491E-8	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9999999380471116	WITHOUT_CLASSIFICATION	6.195288827591764E-8	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9999999250710015	WITHOUT_CLASSIFICATION	7.492899839044658E-8	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.998821243103885	WITHOUT_CLASSIFICATION	0.0011787568961150613	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.999990001409778	WITHOUT_CLASSIFICATION	9.998590222045276E-6	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.999970007481809	WITHOUT_CLASSIFICATION	2.9992518190950117E-5	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9992231005608586	WITHOUT_CLASSIFICATION	7.768994391414551E-4	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999994594289794	WITHOUT_CLASSIFICATION	5.405710205962447E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999610162695056	WITHOUT_CLASSIFICATION	3.8983730494402126E-5	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999995229444218	WITHOUT_CLASSIFICATION	4.77055578066852E-7	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999995229444218	WITHOUT_CLASSIFICATION	4.77055578066852E-7	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999996222045404	WITHOUT_CLASSIFICATION	3.777954596140969E-7	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999996222045404	WITHOUT_CLASSIFICATION	3.777954596140969E-7	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999975122102557	WITHOUT_CLASSIFICATION	2.4877897443779666E-6	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999975122102557	WITHOUT_CLASSIFICATION	2.4877897443779666E-6	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999831009045069	WITHOUT_CLASSIFICATION	1.6899095493151457E-5	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999060314118704	WITHOUT_CLASSIFICATION	9.396858812966448E-5	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.9996092969485592	WITHOUT_CLASSIFICATION	3.907030514408365E-4	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9999660331226606	WITHOUT_CLASSIFICATION	3.396687733943929E-5	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.9999722859105156	WITHOUT_CLASSIFICATION	2.7714089484479925E-5	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999910702140767	WITHOUT_CLASSIFICATION	8.929785923170719E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999993752768243	WITHOUT_CLASSIFICATION	6.247231757326352E-7	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999993752768243	WITHOUT_CLASSIFICATION	6.247231757326352E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999997707717866	WITHOUT_CLASSIFICATION	2.2922821332597398E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999997707717866	WITHOUT_CLASSIFICATION	2.2922821332597398E-7	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999952476596267	WITHOUT_CLASSIFICATION	4.7523403733901426E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9997385810462237	WITHOUT_CLASSIFICATION	2.6141895377634807E-4	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999725271547586	WITHOUT_CLASSIFICATION	2.74728452413393E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999661438967702	WITHOUT_CLASSIFICATION	3.385610322975793E-5	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.9999866762270629	WITHOUT_CLASSIFICATION	1.3323772937015982E-5	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999977958627486	WITHOUT_CLASSIFICATION	2.2041372512944082E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999977253160282	WITHOUT_CLASSIFICATION	2.274683971889844E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9997385810462237	WITHOUT_CLASSIFICATION	2.6141895377634807E-4	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999725271547586	WITHOUT_CLASSIFICATION	2.74728452413393E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999661438967702	WITHOUT_CLASSIFICATION	3.385610322975793E-5	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.9999999472513031	WITHOUT_CLASSIFICATION	5.2748696883366347E-8	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.9999831837117061	WITHOUT_CLASSIFICATION	1.6816288293859484E-5	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.9999994019712164	WITHOUT_CLASSIFICATION	5.980287836796784E-7	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.9999611736300364	WITHOUT_CLASSIFICATION	3.8826369963620764E-5	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9984567295363579	WITHOUT_CLASSIFICATION	0.0015432704636421705	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.999734640023218	WITHOUT_CLASSIFICATION	2.653599767820038E-4	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.9999415166535637	WITHOUT_CLASSIFICATION	5.848334643629024E-5	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999830609896598	WITHOUT_CLASSIFICATION	1.6939010340207906E-5	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.9999486928091205	WITHOUT_CLASSIFICATION	5.130719087947028E-5	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999805321001902	WITHOUT_CLASSIFICATION	1.9467899809743044E-5	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.9999999568763742	WITHOUT_CLASSIFICATION	4.312362586545206E-8	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.999999956104486	WITHOUT_CLASSIFICATION	4.38955140339203E-8	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.999999956104486	WITHOUT_CLASSIFICATION	4.38955140339203E-8	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.999999539235587	WITHOUT_CLASSIFICATION	4.607644129439758E-7	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.999999539235587	WITHOUT_CLASSIFICATION	4.607644129439758E-7	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9999992943411253	WITHOUT_CLASSIFICATION	7.056588746616732E-7	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.9999999642041449	WITHOUT_CLASSIFICATION	3.579585517451141E-8	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.9999990052199774	WITHOUT_CLASSIFICATION	9.947800225439613E-7	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999998028372029	WITHOUT_CLASSIFICATION	1.9716279702835309E-7	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9999980880365283	WITHOUT_CLASSIFICATION	1.911963471668106E-6	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.9999995985013292	WITHOUT_CLASSIFICATION	4.014986707659696E-7	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.999990001409778	WITHOUT_CLASSIFICATION	9.998590222045276E-6	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.9999972954957478	WITHOUT_CLASSIFICATION	2.704504252330135E-6	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.9999994203780176	WITHOUT_CLASSIFICATION	5.796219823971034E-7	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.9999999030021952	WITHOUT_CLASSIFICATION	9.699780481646985E-8	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9998214247265262	WITHOUT_CLASSIFICATION	1.7857527347372776E-4	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999991633635354	WITHOUT_CLASSIFICATION	8.36636464617927E-7	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999987758467918	WITHOUT_CLASSIFICATION	1.2241532082845719E-6	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999987758467918	WITHOUT_CLASSIFICATION	1.2241532082845719E-6	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999184911230582	WITHOUT_CLASSIFICATION	8.150887694177238E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999983905378097	WITHOUT_CLASSIFICATION	1.6094621901881161E-6	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9998797375328188	WITHOUT_CLASSIFICATION	1.2026246718121184E-4	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999006512054593	WITHOUT_CLASSIFICATION	9.934879454069478E-5	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.9999994265072379	WITHOUT_CLASSIFICATION	5.734927620585987E-7	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.999999298251831	WITHOUT_CLASSIFICATION	7.01748169051241E-7	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.9999953335249123	WITHOUT_CLASSIFICATION	4.666475087594164E-6	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9999938654357688	WITHOUT_CLASSIFICATION	6.134564231204595E-6	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.9999854900672899	WITHOUT_CLASSIFICATION	1.4509932710267417E-5	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.9999995626760471	WITHOUT_CLASSIFICATION	4.373239529859715E-7	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999999728088196	WITHOUT_CLASSIFICATION	2.7191180462534738E-8	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9999682395198146	WITHOUT_CLASSIFICATION	3.176048018537011E-5	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999975498496901	WITHOUT_CLASSIFICATION	2.450150309793348E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999980231303366	WITHOUT_CLASSIFICATION	1.9768696632890913E-6	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.999998873874662	WITHOUT_CLASSIFICATION	1.1261253379552804E-6	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999864655829831	WITHOUT_CLASSIFICATION	1.3534417016974434E-5	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.999998636214412	WITHOUT_CLASSIFICATION	1.363785587994714E-6	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999900453426656	WITHOUT_CLASSIFICATION	9.954657334508195E-6	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.9999998185808575	WITHOUT_CLASSIFICATION	1.8141914256128477E-7	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.9999995805949734	WITHOUT_CLASSIFICATION	4.19405026603136E-7	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9999943377988031	WITHOUT_CLASSIFICATION	5.662201196964712E-6	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.9999973313140044	WITHOUT_CLASSIFICATION	2.6686859955261524E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999980231303366	WITHOUT_CLASSIFICATION	1.9768696632890913E-6	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.9999993424979225	WITHOUT_CLASSIFICATION	6.575020773679679E-7	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.999998873874662	WITHOUT_CLASSIFICATION	1.1261253379552804E-6	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999437697838982	WITHOUT_CLASSIFICATION	5.623021610165706E-5	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999951290805792	WITHOUT_CLASSIFICATION	4.870919420823015E-6	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999864655829831	WITHOUT_CLASSIFICATION	1.3534417016974434E-5	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999900453426656	WITHOUT_CLASSIFICATION	9.954657334508195E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999975950194483	WITHOUT_CLASSIFICATION	2.4049805516325796E-6	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.9999993708819588	WITHOUT_CLASSIFICATION	6.291180412609584E-7	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999999445337786	WITHOUT_CLASSIFICATION	5.5466221407730654E-8	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.9999995710832958	WITHOUT_CLASSIFICATION	4.289167041138407E-7	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.9999876885157356	WITHOUT_CLASSIFICATION	1.2311484264286614E-5	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9999857009986947	WITHOUT_CLASSIFICATION	1.4299001305385213E-5	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.999999291693972	WITHOUT_CLASSIFICATION	7.083060280663584E-7	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999972100053767	WITHOUT_CLASSIFICATION	2.7899946231985014E-6	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.9999878340204837	WITHOUT_CLASSIFICATION	1.2165979516295012E-5	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.9999987922671361	WITHOUT_CLASSIFICATION	1.2077328639146209E-6	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.9999997223304047	WITHOUT_CLASSIFICATION	2.776695953059372E-7	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.9999694297642797	WITHOUT_CLASSIFICATION	3.057023572027339E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999437697838982	WITHOUT_CLASSIFICATION	5.623021610165706E-5	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999975950194483	WITHOUT_CLASSIFICATION	2.4049805516325796E-6	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999972100053767	WITHOUT_CLASSIFICATION	2.7899946231985014E-6	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.9999934805352179	WITHOUT_CLASSIFICATION	6.519464782131549E-6	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999840980794794	WITHOUT_CLASSIFICATION	1.5901920520603206E-5	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999845265220012	WITHOUT_CLASSIFICATION	1.5473477998770037E-5	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.999992123664611	WITHOUT_CLASSIFICATION	7.876335389010822E-6	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.9999694490943678	WITHOUT_CLASSIFICATION	3.0550905632079885E-5	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.9999978951081158	WITHOUT_CLASSIFICATION	2.1048918842706602E-6	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.9999926013917025	WITHOUT_CLASSIFICATION	7.398608297413438E-6	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.9999995609251148	WITHOUT_CLASSIFICATION	4.390748851725188E-7	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.9999998252705168	WITHOUT_CLASSIFICATION	1.7472948321534588E-7	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.9999993638307475	WITHOUT_CLASSIFICATION	6.36169252379477E-7	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999984294422053	WITHOUT_CLASSIFICATION	1.5705577946514296E-6	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.99999884665311	WITHOUT_CLASSIFICATION	1.1533468899598772E-6	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.9999950746045454	WITHOUT_CLASSIFICATION	4.925395454595119E-6	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.9999996824039041	WITHOUT_CLASSIFICATION	3.1759609581399555E-7	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.9999962093157647	WITHOUT_CLASSIFICATION	3.7906842352470936E-6	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.9999937249857618	WITHOUT_CLASSIFICATION	6.275014238104275E-6	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.9999991836357107	WITHOUT_CLASSIFICATION	8.163642892492729E-7	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.9999999319185041	WITHOUT_CLASSIFICATION	6.808149591724015E-8	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.9999478028617708	WITHOUT_CLASSIFICATION	5.219713822916097E-5	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.9999997958973854	WITHOUT_CLASSIFICATION	2.0410261459983735E-7	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.9999998088842004	WITHOUT_CLASSIFICATION	1.9111579959906243E-7	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.994932430259403	WITHOUT_CLASSIFICATION	0.005067569740597069	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.999998729880518	WITHOUT_CLASSIFICATION	1.2701194821184265E-6	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.9999830732458326	WITHOUT_CLASSIFICATION	1.6926754167344982E-5	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999060314118704	WITHOUT_CLASSIFICATION	9.396858812966448E-5	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999952476596267	WITHOUT_CLASSIFICATION	4.7523403733901426E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9997385810462237	WITHOUT_CLASSIFICATION	2.6141895377634807E-4	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.9999612537123631	WITHOUT_CLASSIFICATION	3.874628763695948E-5	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9999993194336143	WITHOUT_CLASSIFICATION	6.805663856628389E-7	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.9999966029512389	WITHOUT_CLASSIFICATION	3.3970487611275915E-6	DEFECT
// days	WITHOUT_CLASSIFICATION	0.9999663826098775	WITHOUT_CLASSIFICATION	3.361739012259866E-5	DEFECT
// months	WITHOUT_CLASSIFICATION	0.999997862933859	WITHOUT_CLASSIFICATION	2.137066141023375E-6	DEFECT
// years	WITHOUT_CLASSIFICATION	0.9999777214263008	WITHOUT_CLASSIFICATION	2.2278573699198183E-5	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.9999996215815474	WITHOUT_CLASSIFICATION	3.784184525619682E-7	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999586171805905	WITHOUT_CLASSIFICATION	4.1382819409410277E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999235938521823	WITHOUT_CLASSIFICATION	7.640614781775329E-5	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.9999684586975547	WITHOUT_CLASSIFICATION	3.154130244534983E-5	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.9996759566435639	WITHOUT_CLASSIFICATION	3.2404335643610176E-4	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.9999790585650482	WITHOUT_CLASSIFICATION	2.0941434951742342E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.999970823446142	WITHOUT_CLASSIFICATION	2.9176553858030477E-5	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9991902895398418	WITHOUT_CLASSIFICATION	8.097104601583187E-4	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9991902895398418	WITHOUT_CLASSIFICATION	8.097104601583187E-4	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999420980251553	WITHOUT_CLASSIFICATION	5.79019748446228E-5	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999420980251553	WITHOUT_CLASSIFICATION	5.79019748446228E-5	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.9986787564449644	WITHOUT_CLASSIFICATION	0.0013212435550356727	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999873181862072	WITHOUT_CLASSIFICATION	1.268181379290303E-5	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.9999998163378873	WITHOUT_CLASSIFICATION	1.8366211280282543E-7	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.9999923354007764	WITHOUT_CLASSIFICATION	7.664599223751825E-6	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999938798642846	WITHOUT_CLASSIFICATION	6.1201357153602E-6	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999760883553369	WITHOUT_CLASSIFICATION	2.3911644663119096E-5	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.999999922085109	WITHOUT_CLASSIFICATION	7.791489100603162E-8	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9999999066087887	WITHOUT_CLASSIFICATION	9.339121140909706E-8	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.9999998369348726	WITHOUT_CLASSIFICATION	1.6306512741305082E-7	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999910702140767	WITHOUT_CLASSIFICATION	8.929785923170719E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999661438967702	WITHOUT_CLASSIFICATION	3.385610322975793E-5	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999805321001902	WITHOUT_CLASSIFICATION	1.9467899809743044E-5	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.9999906558733761	WITHOUT_CLASSIFICATION	9.344126623891633E-6	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.9999955814432354	WITHOUT_CLASSIFICATION	4.418556764640549E-6	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999993579119547	WITHOUT_CLASSIFICATION	6.420880453649534E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996447725904	WITHOUT_CLASSIFICATION	3.552274095138158E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999816855729	WITHOUT_CLASSIFICATION	1.831442710075218E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999744826071	WITHOUT_CLASSIFICATION	2.551739289164303E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994927614576	WITHOUT_CLASSIFICATION	5.072385423463287E-7	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.999999921512181	WITHOUT_CLASSIFICATION	7.84878190126683E-8	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999990789051356	WITHOUT_CLASSIFICATION	9.210948644697133E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999771740494	WITHOUT_CLASSIFICATION	2.282595063169508E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997070874775	WITHOUT_CLASSIFICATION	2.929125224890804E-7	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.9999997749275387	WITHOUT_CLASSIFICATION	2.2507246127501606E-7	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999992666122495	WITHOUT_CLASSIFICATION	7.333877503983015E-7	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999992666122495	WITHOUT_CLASSIFICATION	7.333877503983015E-7	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.9999997700111504	WITHOUT_CLASSIFICATION	2.2998884963767485E-7	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.9999999469145776	WITHOUT_CLASSIFICATION	5.3085422541479335E-8	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.9999996476211277	WITHOUT_CLASSIFICATION	3.523788723794217E-7	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.9999998371588966	WITHOUT_CLASSIFICATION	1.628411033786197E-7	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.9999745044033115	WITHOUT_CLASSIFICATION	2.549559668850785E-5	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.9999939596744452	WITHOUT_CLASSIFICATION	6.040325554938489E-6	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999988442193302	WITHOUT_CLASSIFICATION	1.1557806698369633E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999999519665278	WITHOUT_CLASSIFICATION	4.803347219906755E-8	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999988442193302	WITHOUT_CLASSIFICATION	1.1557806698369633E-6	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.9999982432843674	WITHOUT_CLASSIFICATION	1.756715632628245E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999962767121857	WITHOUT_CLASSIFICATION	3.7232878143217396E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.9999999519665278	WITHOUT_CLASSIFICATION	4.803347219906755E-8	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9998130589817146	WITHOUT_CLASSIFICATION	1.869410182853982E-4	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999917012056	WITHOUT_CLASSIFICATION	8.298794518273466E-9	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.9999996561354969	WITHOUT_CLASSIFICATION	3.438645030269192E-7	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.9999987676157905	WITHOUT_CLASSIFICATION	1.2323842094294536E-6	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.9999864821010921	WITHOUT_CLASSIFICATION	1.3517898907939073E-5	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999793664935762	WITHOUT_CLASSIFICATION	2.063350642382931E-5	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.9999961736958991	WITHOUT_CLASSIFICATION	3.826304100937621E-6	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.9999922202467151	WITHOUT_CLASSIFICATION	7.779753284893094E-6	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999998478058493	WITHOUT_CLASSIFICATION	1.521941508030523E-7	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999999302355151	WITHOUT_CLASSIFICATION	6.97644848317605E-8	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999999302355151	WITHOUT_CLASSIFICATION	6.97644848317605E-8	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.9999992865479671	WITHOUT_CLASSIFICATION	7.134520329216742E-7	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.9999995640156583	WITHOUT_CLASSIFICATION	4.359843417957988E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999510533812077	WITHOUT_CLASSIFICATION	4.894661879220327E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999510533812077	WITHOUT_CLASSIFICATION	4.894661879220327E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999510533812077	WITHOUT_CLASSIFICATION	4.894661879220327E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999482770478039	WITHOUT_CLASSIFICATION	5.1722952196155397E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999482770478039	WITHOUT_CLASSIFICATION	5.1722952196155397E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999482770478039	WITHOUT_CLASSIFICATION	5.1722952196155397E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.999994733798162	WITHOUT_CLASSIFICATION	5.266201838161984E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.999994733798162	WITHOUT_CLASSIFICATION	5.266201838161984E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.999994733798162	WITHOUT_CLASSIFICATION	5.266201838161984E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999421142881391	WITHOUT_CLASSIFICATION	5.788571186093447E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999421142881391	WITHOUT_CLASSIFICATION	5.788571186093447E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999977253160282	WITHOUT_CLASSIFICATION	2.274683971889844E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999977253160282	WITHOUT_CLASSIFICATION	2.274683971889844E-6	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999076930572078	WITHOUT_CLASSIFICATION	9.23069427920901E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.999990001409778	WITHOUT_CLASSIFICATION	9.998590222045276E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.999990001409778	WITHOUT_CLASSIFICATION	9.998590222045276E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.998821243103885	WITHOUT_CLASSIFICATION	0.0011787568961150613	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9992231005608586	WITHOUT_CLASSIFICATION	7.768994391414551E-4	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999060314118704	WITHOUT_CLASSIFICATION	9.396858812966448E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999873181862072	WITHOUT_CLASSIFICATION	1.268181379290303E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999510533812077	WITHOUT_CLASSIFICATION	4.894661879220327E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999482770478039	WITHOUT_CLASSIFICATION	5.1722952196155397E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999482770478039	WITHOUT_CLASSIFICATION	5.1722952196155397E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.999994733798162	WITHOUT_CLASSIFICATION	5.266201838161984E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.999994733798162	WITHOUT_CLASSIFICATION	5.266201838161984E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999421142881391	WITHOUT_CLASSIFICATION	5.788571186093447E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999421142881391	WITHOUT_CLASSIFICATION	5.788571186093447E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999917012056	WITHOUT_CLASSIFICATION	8.298794518273466E-9	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.9999860531663937	WITHOUT_CLASSIFICATION	1.394683360635808E-5	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.99999445158234	WITHOUT_CLASSIFICATION	5.548417659979184E-6	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.9999997654534984	WITHOUT_CLASSIFICATION	2.3454650148966996E-7	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.9999953007164594	WITHOUT_CLASSIFICATION	4.699283540602416E-6	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.9999995771333342	WITHOUT_CLASSIFICATION	4.228666657819912E-7	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.9914372102814115	WITHOUT_CLASSIFICATION	0.008562789718588412	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999615065017	WITHOUT_CLASSIFICATION	3.84934982753746E-8	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9999979765045885	WITHOUT_CLASSIFICATION	2.0234954115231057E-6	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9989834053728303	WITHOUT_CLASSIFICATION	0.001016594627169696	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.9999997623137179	WITHOUT_CLASSIFICATION	2.376862820653952E-7	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9572827305231665	WITHOUT_CLASSIFICATION	0.0427172694768334	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.999999282299019	WITHOUT_CLASSIFICATION	7.177009810208503E-7	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.999999282299019	WITHOUT_CLASSIFICATION	7.177009810208503E-7	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9999916017870735	WITHOUT_CLASSIFICATION	8.398212926572609E-6	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9999916017870735	WITHOUT_CLASSIFICATION	8.398212926572609E-6	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999602833859677	WITHOUT_CLASSIFICATION	3.971661403240256E-5	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999602833859677	WITHOUT_CLASSIFICATION	3.971661403240256E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999917012056	WITHOUT_CLASSIFICATION	8.298794518273466E-9	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.998821243103885	WITHOUT_CLASSIFICATION	0.0011787568961150613	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9992231005608586	WITHOUT_CLASSIFICATION	7.768994391414551E-4	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999831009045069	WITHOUT_CLASSIFICATION	1.6899095493151457E-5	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999910702140767	WITHOUT_CLASSIFICATION	8.929785923170719E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999952476596267	WITHOUT_CLASSIFICATION	4.7523403733901426E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9997385810462237	WITHOUT_CLASSIFICATION	2.6141895377634807E-4	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999586171805905	WITHOUT_CLASSIFICATION	4.1382819409410277E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999586171805905	WITHOUT_CLASSIFICATION	4.1382819409410277E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999235938521823	WITHOUT_CLASSIFICATION	7.640614781775329E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999235938521823	WITHOUT_CLASSIFICATION	7.640614781775329E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999996994262333	WITHOUT_CLASSIFICATION	3.005737665900869E-7	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.9999999832499388	WITHOUT_CLASSIFICATION	1.675006121336882E-8	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999999115510133	WITHOUT_CLASSIFICATION	8.844898660284792E-8	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999949494334507	WITHOUT_CLASSIFICATION	5.050566549274095E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999949494334507	WITHOUT_CLASSIFICATION	5.050566549274095E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999999343558768	WITHOUT_CLASSIFICATION	6.564412332120319E-8	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.999993985548588	WITHOUT_CLASSIFICATION	6.01445141211788E-6	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.9999994157674535	WITHOUT_CLASSIFICATION	5.842325464880089E-7	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999875775804619	WITHOUT_CLASSIFICATION	1.242241953822246E-5	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999956797036906	WITHOUT_CLASSIFICATION	4.320296309289081E-6	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.9999974844019497	WITHOUT_CLASSIFICATION	2.515598050398664E-6	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999994096705137	WITHOUT_CLASSIFICATION	5.903294862356068E-7	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999994096705137	WITHOUT_CLASSIFICATION	5.903294862356068E-7	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.999998302092405	WITHOUT_CLASSIFICATION	1.6979075950884986E-6	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.9999996690538921	WITHOUT_CLASSIFICATION	3.3094610790406674E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999996994262333	WITHOUT_CLASSIFICATION	3.005737665900869E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999996994262333	WITHOUT_CLASSIFICATION	3.005737665900869E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.999979822902982	WITHOUT_CLASSIFICATION	2.0177097017952727E-5	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999949494334507	WITHOUT_CLASSIFICATION	5.050566549274095E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999933553662205	WITHOUT_CLASSIFICATION	6.644633779436497E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999969119553995	WITHOUT_CLASSIFICATION	3.0880446005356813E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999969119553995	WITHOUT_CLASSIFICATION	3.0880446005356813E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999999343558768	WITHOUT_CLASSIFICATION	6.564412332120319E-8	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999875775804619	WITHOUT_CLASSIFICATION	1.242241953822246E-5	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.9999984884971724	WITHOUT_CLASSIFICATION	1.5115028275063716E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999985373062624	WITHOUT_CLASSIFICATION	1.4626937375705938E-6	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.9999730875283556	WITHOUT_CLASSIFICATION	2.6912471644473184E-5	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9999998111026267	WITHOUT_CLASSIFICATION	1.8889737338550963E-7	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.9999995550588636	WITHOUT_CLASSIFICATION	4.449411363665006E-7	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.9999991342461905	WITHOUT_CLASSIFICATION	8.657538095900484E-7	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.9996809951159157	WITHOUT_CLASSIFICATION	3.1900488408430534E-4	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.999968053029301	WITHOUT_CLASSIFICATION	3.1946970698986606E-5	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999962199933587	WITHOUT_CLASSIFICATION	3.7800066412199445E-6	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999998457603794	WITHOUT_CLASSIFICATION	1.5423962060720418E-7	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999997279220978	WITHOUT_CLASSIFICATION	2.7207790223068545E-7	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999851654274278	WITHOUT_CLASSIFICATION	1.4834572572180556E-5	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999962882443052	WITHOUT_CLASSIFICATION	3.7117556947585915E-6	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999999539428771	WITHOUT_CLASSIFICATION	4.6057122910474146E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999996328145853	WITHOUT_CLASSIFICATION	3.6718541484183543E-7	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999858882600218	WITHOUT_CLASSIFICATION	1.411173997835527E-5	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999996730307621	WITHOUT_CLASSIFICATION	3.2696923791268097E-7	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999999518446984	WITHOUT_CLASSIFICATION	4.815530174793601E-8	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999998652500414	WITHOUT_CLASSIFICATION	1.347499585203881E-7	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999642470017	WITHOUT_CLASSIFICATION	3.575299842116187E-8	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999991370156499	WITHOUT_CLASSIFICATION	8.629843501828617E-7	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999974625560548	WITHOUT_CLASSIFICATION	2.5374439452271286E-6	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999823609750517	WITHOUT_CLASSIFICATION	1.7639024948358956E-5	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999823609750517	WITHOUT_CLASSIFICATION	1.7639024948358956E-5	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999823609750517	WITHOUT_CLASSIFICATION	1.7639024948358956E-5	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999433646645388	WITHOUT_CLASSIFICATION	5.663533546105784E-5	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999433646645388	WITHOUT_CLASSIFICATION	5.663533546105784E-5	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.9999998487876524	WITHOUT_CLASSIFICATION	1.5121234765590907E-7	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.9999963470634607	WITHOUT_CLASSIFICATION	3.652936539206159E-6	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.9999993479275108	WITHOUT_CLASSIFICATION	6.520724893112636E-7	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.9999949667051615	WITHOUT_CLASSIFICATION	5.033294838496455E-6	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999991562977092	WITHOUT_CLASSIFICATION	8.437022908395618E-7	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999692586417953	WITHOUT_CLASSIFICATION	3.0741358204769356E-5	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.9999015375617457	WITHOUT_CLASSIFICATION	9.846243825428286E-5	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9999566740179486	WITHOUT_CLASSIFICATION	4.3325982051364426E-5	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999636752033184	WITHOUT_CLASSIFICATION	3.632479668160755E-5	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.9999500978338307	WITHOUT_CLASSIFICATION	4.990216616933363E-5	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.9999870363576235	WITHOUT_CLASSIFICATION	1.2963642376393495E-5	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999801730056509	WITHOUT_CLASSIFICATION	1.98269943490795E-5	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999801730056509	WITHOUT_CLASSIFICATION	1.98269943490795E-5	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999647932225	WITHOUT_CLASSIFICATION	3.52067774157729E-8	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.999970905897686	WITHOUT_CLASSIFICATION	2.9094102313930775E-5	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999104045527	WITHOUT_CLASSIFICATION	8.959544730615316E-8	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999994017532688	WITHOUT_CLASSIFICATION	5.982467311006912E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999994017532688	WITHOUT_CLASSIFICATION	5.982467311006912E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999994017532688	WITHOUT_CLASSIFICATION	5.982467311006912E-7	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999999855230083	WITHOUT_CLASSIFICATION	1.4476991817516792E-8	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999634801595	WITHOUT_CLASSIFICATION	3.65198404426592E-8	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999938186748	WITHOUT_CLASSIFICATION	6.181325226521407E-9	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999926899204334	WITHOUT_CLASSIFICATION	7.3100795665001114E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999852897920837	WITHOUT_CLASSIFICATION	1.4710207916343538E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999979169589791	WITHOUT_CLASSIFICATION	2.0830410209555577E-6	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999851654274278	WITHOUT_CLASSIFICATION	1.4834572572180556E-5	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999962882443052	WITHOUT_CLASSIFICATION	3.7117556947585915E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999999518446984	WITHOUT_CLASSIFICATION	4.815530174793601E-8	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999998652500414	WITHOUT_CLASSIFICATION	1.347499585203881E-7	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999642470017	WITHOUT_CLASSIFICATION	3.575299842116187E-8	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999991370156499	WITHOUT_CLASSIFICATION	8.629843501828617E-7	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999974625560548	WITHOUT_CLASSIFICATION	2.5374439452271286E-6	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999994017532688	WITHOUT_CLASSIFICATION	5.982467311006912E-7	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.9999991187195143	WITHOUT_CLASSIFICATION	8.812804857139761E-7	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999999883770575	WITHOUT_CLASSIFICATION	1.162294244462826E-8	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999974488671378	WITHOUT_CLASSIFICATION	2.551132862123186E-6	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.958971013879441	WITHOUT_CLASSIFICATION	0.04102898612055911	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.999923592679797	WITHOUT_CLASSIFICATION	7.640732020305032E-5	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.9999676303305409	WITHOUT_CLASSIFICATION	3.236966945916649E-5	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999966428454576	WITHOUT_CLASSIFICATION	3.357154542372385E-6	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.999999767578288	WITHOUT_CLASSIFICATION	2.3242171204047592E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999827535638555	WITHOUT_CLASSIFICATION	1.7246436144454757E-5	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999827535638555	WITHOUT_CLASSIFICATION	1.7246436144454757E-5	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999212359273	WITHOUT_CLASSIFICATION	7.87640727888507E-8	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999212359273	WITHOUT_CLASSIFICATION	7.87640727888507E-8	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.9999986509848198	WITHOUT_CLASSIFICATION	1.3490151802544774E-6	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999888322711	WITHOUT_CLASSIFICATION	1.1167728875988595E-8	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.999999974883782	WITHOUT_CLASSIFICATION	2.5116218040517505E-8	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999989188935877	WITHOUT_CLASSIFICATION	1.0811064122861752E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999989188935877	WITHOUT_CLASSIFICATION	1.0811064122861752E-6	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.9999959995512392	WITHOUT_CLASSIFICATION	4.000448760800418E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.999751594866062	WITHOUT_CLASSIFICATION	2.4840513393799404E-4	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999999643868	WITHOUT_CLASSIFICATION	3.56130855936343E-11	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999999539428771	WITHOUT_CLASSIFICATION	4.6057122910474146E-8	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999989188935877	WITHOUT_CLASSIFICATION	1.0811064122861752E-6	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.9999997656687533	WITHOUT_CLASSIFICATION	2.3433124678248912E-7	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.9999958357209872	WITHOUT_CLASSIFICATION	4.164279012876676E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995077726432	WITHOUT_CLASSIFICATION	4.922273567257884E-7	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.9999999245723332	WITHOUT_CLASSIFICATION	7.542766676756787E-8	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.9999999771794413	WITHOUT_CLASSIFICATION	2.282055872181965E-8	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.99999995818164	WITHOUT_CLASSIFICATION	4.1818359990586956E-8	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.9999993419478708	WITHOUT_CLASSIFICATION	6.58052129292382E-7	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.999997859908877	WITHOUT_CLASSIFICATION	2.1400911229986047E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999906729513907	WITHOUT_CLASSIFICATION	9.327048609374039E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999906729513907	WITHOUT_CLASSIFICATION	9.327048609374039E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999798332957809	WITHOUT_CLASSIFICATION	2.016670421907799E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999798332957809	WITHOUT_CLASSIFICATION	2.016670421907799E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999798332957809	WITHOUT_CLASSIFICATION	2.016670421907799E-5	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.9999926859680431	WITHOUT_CLASSIFICATION	7.314031956810812E-6	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999581646807959	WITHOUT_CLASSIFICATION	4.183531920410311E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999581646807959	WITHOUT_CLASSIFICATION	4.183531920410311E-5	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999962355658787	WITHOUT_CLASSIFICATION	3.7644341213615724E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999962355658787	WITHOUT_CLASSIFICATION	3.7644341213615724E-6	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.9999883714182137	WITHOUT_CLASSIFICATION	1.1628581786202792E-5	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.9999949837070533	WITHOUT_CLASSIFICATION	5.016292946679086E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999896547529413	WITHOUT_CLASSIFICATION	1.0345247058572592E-5	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.9999984299506751	WITHOUT_CLASSIFICATION	1.570049324891529E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9995440576960073	WITHOUT_CLASSIFICATION	4.559423039926718E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9956986675601184	WITHOUT_CLASSIFICATION	0.00430133243988169	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.9999889939405184	WITHOUT_CLASSIFICATION	1.1006059481638456E-5	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999638348193417	WITHOUT_CLASSIFICATION	3.616518065827223E-5	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999996528335483	WITHOUT_CLASSIFICATION	3.471664517305163E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999830921539796	WITHOUT_CLASSIFICATION	1.6907846020367704E-5	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999965345883842	WITHOUT_CLASSIFICATION	3.465411615710067E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999935672066738	WITHOUT_CLASSIFICATION	6.432793326224596E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999993892586537	WITHOUT_CLASSIFICATION	6.10741346274682E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999999615119296	WITHOUT_CLASSIFICATION	3.84880703865181E-8	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.9983518922671077	WITHOUT_CLASSIFICATION	0.00164810773289216	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999999689227268	WITHOUT_CLASSIFICATION	3.1077273112619494E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998439302404	WITHOUT_CLASSIFICATION	1.5606975957489838E-7	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.9999896086977861	WITHOUT_CLASSIFICATION	1.0391302213981924E-5	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999997106926389	WITHOUT_CLASSIFICATION	2.893073611388358E-7	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999988084609093	WITHOUT_CLASSIFICATION	1.1915390907970858E-6	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999986823561435	WITHOUT_CLASSIFICATION	1.3176438564386345E-6	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999997664261909	WITHOUT_CLASSIFICATION	2.3357380912042966E-7	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999992379762098	WITHOUT_CLASSIFICATION	7.62023790196244E-7	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999998916603872	WITHOUT_CLASSIFICATION	1.0833961278586688E-7	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999992975315066	WITHOUT_CLASSIFICATION	7.024684934406383E-7	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.9999998902713095	WITHOUT_CLASSIFICATION	1.0972869047597386E-7	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.999993602036193	WITHOUT_CLASSIFICATION	6.397963807067592E-6	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.9999986440364254	WITHOUT_CLASSIFICATION	1.355963574631988E-6	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.999999884641267	WITHOUT_CLASSIFICATION	1.1535873304458221E-7	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.9999948277710645	WITHOUT_CLASSIFICATION	5.172228935409974E-6	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.9999554857272457	WITHOUT_CLASSIFICATION	4.451427275428743E-5	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9999363760429131	WITHOUT_CLASSIFICATION	6.362395708693477E-5	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.9999939357539247	WITHOUT_CLASSIFICATION	6.064246075315277E-6	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.9999945920642113	WITHOUT_CLASSIFICATION	5.407935788686982E-6	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.9999895959547647	WITHOUT_CLASSIFICATION	1.0404045235447895E-5	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.9999981571757642	WITHOUT_CLASSIFICATION	1.8428242357161357E-6	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.9999970527984469	WITHOUT_CLASSIFICATION	2.947201553258789E-6	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.9999950575005352	WITHOUT_CLASSIFICATION	4.9424994648336535E-6	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999910345064904	WITHOUT_CLASSIFICATION	8.965493509572924E-6	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.9999634251894216	WITHOUT_CLASSIFICATION	3.657481057840385E-5	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.9999999261132461	WITHOUT_CLASSIFICATION	7.388675388561467E-8	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999995912945748	WITHOUT_CLASSIFICATION	4.087054250827764E-7	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9999989849098245	WITHOUT_CLASSIFICATION	1.015090175525456E-6	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.9999991838479555	WITHOUT_CLASSIFICATION	8.161520444397967E-7	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.9998705086824682	WITHOUT_CLASSIFICATION	1.294913175317694E-4	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.9999367514182911	WITHOUT_CLASSIFICATION	6.324858170889437E-5	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.9999729552322368	WITHOUT_CLASSIFICATION	2.704476776313266E-5	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.9999995934240337	WITHOUT_CLASSIFICATION	4.0657596636199013E-7	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.999999262709586	WITHOUT_CLASSIFICATION	7.372904141253067E-7	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.9984313087856144	WITHOUT_CLASSIFICATION	0.0015686912143856222	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997359444474	WITHOUT_CLASSIFICATION	2.6405555264885223E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999598362758	WITHOUT_CLASSIFICATION	4.0163724275283616E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999991641796946	WITHOUT_CLASSIFICATION	8.358203054613572E-7	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9998174751118569	WITHOUT_CLASSIFICATION	1.8252488814320562E-4	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9998174751118569	WITHOUT_CLASSIFICATION	1.8252488814320562E-4	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999995751049592	WITHOUT_CLASSIFICATION	4.2489504084876683E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999850741991124	WITHOUT_CLASSIFICATION	1.4925800887659031E-5	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.999982893076476	WITHOUT_CLASSIFICATION	1.7106923523996374E-5	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.9999998475739786	WITHOUT_CLASSIFICATION	1.524260213911819E-7	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.999999995714267	WITHOUT_CLASSIFICATION	4.285732918492341E-9	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.9999130241194499	WITHOUT_CLASSIFICATION	8.69758805500611E-5	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.9996895460005274	WITHOUT_CLASSIFICATION	3.104539994725305E-4	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.9996609650792447	WITHOUT_CLASSIFICATION	3.3903492075522943E-4	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999983419396523	WITHOUT_CLASSIFICATION	1.658060347696339E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999828269854	WITHOUT_CLASSIFICATION	1.717301457315554E-8	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9995440576960073	WITHOUT_CLASSIFICATION	4.559423039926718E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999828269854	WITHOUT_CLASSIFICATION	1.717301457315554E-8	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9963506147469733	WITHOUT_CLASSIFICATION	0.0036493852530266988	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999998346994605	WITHOUT_CLASSIFICATION	1.6530053948267373E-7	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.9999900630032362	WITHOUT_CLASSIFICATION	9.936996763795952E-6	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.9999930949178106	WITHOUT_CLASSIFICATION	6.905082189298393E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999932511235186	WITHOUT_CLASSIFICATION	6.748876481400133E-5	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.9999843749550207	WITHOUT_CLASSIFICATION	1.5625044979303113E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999194558091	WITHOUT_CLASSIFICATION	8.054419090424507E-8	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999999276867605	WITHOUT_CLASSIFICATION	7.231323943764006E-8	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999999341681273	WITHOUT_CLASSIFICATION	6.583187271946093E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999985990590943	WITHOUT_CLASSIFICATION	1.4009409057624688E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998439302404	WITHOUT_CLASSIFICATION	1.5606975957489838E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999651989365	WITHOUT_CLASSIFICATION	3.480106348964135E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999598362758	WITHOUT_CLASSIFICATION	4.0163724275283616E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999991641796946	WITHOUT_CLASSIFICATION	8.358203054613572E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999983419396523	WITHOUT_CLASSIFICATION	1.658060347696339E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999996067671276	WITHOUT_CLASSIFICATION	3.932328723712452E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999932511235186	WITHOUT_CLASSIFICATION	6.748876481400133E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999194558091	WITHOUT_CLASSIFICATION	8.054419090424507E-8	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999999276867605	WITHOUT_CLASSIFICATION	7.231323943764006E-8	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999999341681273	WITHOUT_CLASSIFICATION	6.583187271946093E-8	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.999998514534837	WITHOUT_CLASSIFICATION	1.4854651629878209E-6	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.9999997959475635	WITHOUT_CLASSIFICATION	2.0405243643880505E-7	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.9999995235411753	WITHOUT_CLASSIFICATION	4.7645882471253654E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999102344548711	WITHOUT_CLASSIFICATION	8.976554512880239E-5	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.9999998309977003	WITHOUT_CLASSIFICATION	1.6900229975648178E-7	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999968389755832	WITHOUT_CLASSIFICATION	3.1610244168080965E-6	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.9999179382767919	WITHOUT_CLASSIFICATION	8.206172320810567E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999996836161955	WITHOUT_CLASSIFICATION	3.1638380448666184E-7	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9956986675601184	WITHOUT_CLASSIFICATION	0.00430133243988169	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999996528335483	WITHOUT_CLASSIFICATION	3.471664517305163E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999996528335483	WITHOUT_CLASSIFICATION	3.471664517305163E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999993528163863	WITHOUT_CLASSIFICATION	6.471836135992075E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999830921539796	WITHOUT_CLASSIFICATION	1.6907846020367704E-5	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999965345883842	WITHOUT_CLASSIFICATION	3.465411615710067E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999935672066738	WITHOUT_CLASSIFICATION	6.432793326224596E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999993892586537	WITHOUT_CLASSIFICATION	6.10741346274682E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997359444474	WITHOUT_CLASSIFICATION	2.6405555264885223E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999598362758	WITHOUT_CLASSIFICATION	4.0163724275283616E-8	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999850741991124	WITHOUT_CLASSIFICATION	1.4925800887659031E-5	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999993486064201	WITHOUT_CLASSIFICATION	6.513935798267737E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999971975236983	WITHOUT_CLASSIFICATION	2.8024763016779387E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.999999730272569	WITHOUT_CLASSIFICATION	2.6972743103028785E-7	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.9999965916450133	WITHOUT_CLASSIFICATION	3.408354986689703E-6	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999996380374411	WITHOUT_CLASSIFICATION	3.6196255892556773E-7	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999893488107677	WITHOUT_CLASSIFICATION	1.0651189232251795E-5	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.999986595480218	WITHOUT_CLASSIFICATION	1.3404519782024926E-5	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.999986595480218	WITHOUT_CLASSIFICATION	1.3404519782024926E-5	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.9999961053183798	WITHOUT_CLASSIFICATION	3.894681620210897E-6	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.9999981522699811	WITHOUT_CLASSIFICATION	1.8477300188751156E-6	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999992366727223	WITHOUT_CLASSIFICATION	7.63327277624392E-7	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999863967285499	WITHOUT_CLASSIFICATION	1.3603271449952963E-5	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999993528163863	WITHOUT_CLASSIFICATION	6.471836135992075E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999935672066738	WITHOUT_CLASSIFICATION	6.432793326224596E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999993892586537	WITHOUT_CLASSIFICATION	6.10741346274682E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999999615119296	WITHOUT_CLASSIFICATION	3.84880703865181E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998439302404	WITHOUT_CLASSIFICATION	1.5606975957489838E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997359444474	WITHOUT_CLASSIFICATION	2.6405555264885223E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999598362758	WITHOUT_CLASSIFICATION	4.0163724275283616E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999991641796946	WITHOUT_CLASSIFICATION	8.358203054613572E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999828269854	WITHOUT_CLASSIFICATION	1.717301457315554E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999971975236983	WITHOUT_CLASSIFICATION	2.8024763016779387E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999966482207032	WITHOUT_CLASSIFICATION	3.3517792968653637E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999966482207032	WITHOUT_CLASSIFICATION	3.3517792968653637E-6	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.9994675514317486	WITHOUT_CLASSIFICATION	5.324485682514648E-4	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.9999978583546227	WITHOUT_CLASSIFICATION	2.141645377235218E-6	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999968350295614	WITHOUT_CLASSIFICATION	3.164970438579896E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999993685859655	WITHOUT_CLASSIFICATION	6.314140344297315E-7	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999993532875	WITHOUT_CLASSIFICATION	6.467125698410252E-10	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999993532875	WITHOUT_CLASSIFICATION	6.467125698410252E-10	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.999999992694268	WITHOUT_CLASSIFICATION	7.305732024244876E-9	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.999999992694268	WITHOUT_CLASSIFICATION	7.305732024244876E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999938585754	WITHOUT_CLASSIFICATION	6.141424564569905E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999938585754	WITHOUT_CLASSIFICATION	6.141424564569905E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999938585754	WITHOUT_CLASSIFICATION	6.141424564569905E-9	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999986140271132	WITHOUT_CLASSIFICATION	1.3859728868091766E-6	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992004273279	WITHOUT_CLASSIFICATION	7.995726721230126E-7	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999639652225	WITHOUT_CLASSIFICATION	3.603477745397279E-8	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.9999986706157215	WITHOUT_CLASSIFICATION	1.329384278537424E-6	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.99999782416987	WITHOUT_CLASSIFICATION	2.1758301298891397E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9995440576960073	WITHOUT_CLASSIFICATION	4.559423039926718E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9956986675601184	WITHOUT_CLASSIFICATION	0.00430133243988169	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999996528335483	WITHOUT_CLASSIFICATION	3.471664517305163E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999830921539796	WITHOUT_CLASSIFICATION	1.6907846020367704E-5	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999986823561435	WITHOUT_CLASSIFICATION	1.3176438564386345E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997359444474	WITHOUT_CLASSIFICATION	2.6405555264885223E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999102344548711	WITHOUT_CLASSIFICATION	8.976554512880239E-5	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999863967285499	WITHOUT_CLASSIFICATION	1.3603271449952963E-5	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999992477111764	WITHOUT_CLASSIFICATION	7.522888236113153E-7	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9998873588083874	WITHOUT_CLASSIFICATION	1.1264119161257355E-4	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.9995226239691573	WITHOUT_CLASSIFICATION	4.773760308427489E-4	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9997162703534132	WITHOUT_CLASSIFICATION	2.8372964658688243E-4	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.9999943743772137	WITHOUT_CLASSIFICATION	5.6256227862823705E-6	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.9999001264633088	WITHOUT_CLASSIFICATION	9.987353669123903E-5	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999980838763525	WITHOUT_CLASSIFICATION	1.9161236475894224E-6	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.9999964129123802	WITHOUT_CLASSIFICATION	3.5870876197387347E-6	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999516274721587	WITHOUT_CLASSIFICATION	4.837252784135209E-5	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.9950410164545775	WITHOUT_CLASSIFICATION	0.004958983545422399	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.9998191114309589	WITHOUT_CLASSIFICATION	1.8088856904111827E-4	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.9999988295389873	WITHOUT_CLASSIFICATION	1.1704610127026073E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999985373062624	WITHOUT_CLASSIFICATION	1.4626937375705938E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999935672066738	WITHOUT_CLASSIFICATION	6.432793326224596E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999993892586537	WITHOUT_CLASSIFICATION	6.10741346274682E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997359444474	WITHOUT_CLASSIFICATION	2.6405555264885223E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999598362758	WITHOUT_CLASSIFICATION	4.0163724275283616E-8	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999828269854	WITHOUT_CLASSIFICATION	1.717301457315554E-8	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999971975236983	WITHOUT_CLASSIFICATION	2.8024763016779387E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.999999730272569	WITHOUT_CLASSIFICATION	2.6972743103028785E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999996380374411	WITHOUT_CLASSIFICATION	3.6196255892556773E-7	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999893488107677	WITHOUT_CLASSIFICATION	1.0651189232251795E-5	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999744705504	WITHOUT_CLASSIFICATION	2.5529449488750763E-8	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999260739036	WITHOUT_CLASSIFICATION	7.39260963832244E-8	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.9999606864902066	WITHOUT_CLASSIFICATION	3.931350979342814E-5	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.9999998818681382	WITHOUT_CLASSIFICATION	1.1813186180758079E-7	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.9999999748665106	WITHOUT_CLASSIFICATION	2.5133489407572588E-8	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999594107546539	WITHOUT_CLASSIFICATION	4.058924534611219E-5	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.9994429098087871	WITHOUT_CLASSIFICATION	5.570901912128718E-4	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9999989777670487	WITHOUT_CLASSIFICATION	1.0222329512607065E-6	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.99999279101427	WITHOUT_CLASSIFICATION	7.208985729959933E-6	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.9999445846018664	WITHOUT_CLASSIFICATION	5.541539813344332E-5	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.8798865477449953	WITHOUT_CLASSIFICATION	0.12011345225500468	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9994289158491657	WITHOUT_CLASSIFICATION	5.710841508342926E-4	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9995668130908252	WITHOUT_CLASSIFICATION	4.3318690917475394E-4	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.8091402386282497	DEFECT	0.1908597613717503	WITHOUT_CLASSIFICATION
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.9999988840914631	WITHOUT_CLASSIFICATION	1.1159085368745872E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999905807684822	WITHOUT_CLASSIFICATION	9.419231517732114E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999905807684822	WITHOUT_CLASSIFICATION	9.419231517732114E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999965345883842	WITHOUT_CLASSIFICATION	3.465411615710067E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999991641796946	WITHOUT_CLASSIFICATION	8.358203054613572E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999995751049592	WITHOUT_CLASSIFICATION	4.2489504084876683E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999850741991124	WITHOUT_CLASSIFICATION	1.4925800887659031E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999893488107677	WITHOUT_CLASSIFICATION	1.0651189232251795E-5	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.999998402154833	WITHOUT_CLASSIFICATION	1.597845166952695E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999939121825047	WITHOUT_CLASSIFICATION	6.0878174952960355E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999940317905386	WITHOUT_CLASSIFICATION	5.968209461390794E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999940317905386	WITHOUT_CLASSIFICATION	5.968209461390794E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999998798466779	WITHOUT_CLASSIFICATION	1.2015332211044646E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999998798466779	WITHOUT_CLASSIFICATION	1.2015332211044646E-7	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.9999915713855692	WITHOUT_CLASSIFICATION	8.428614430734467E-6	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.5594700776691183	DEFECT	0.44052992233088173	WITHOUT_CLASSIFICATION
// should be equal...	WITHOUT_CLASSIFICATION	0.9999876477379083	WITHOUT_CLASSIFICATION	1.235226209167665E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999997493889082	WITHOUT_CLASSIFICATION	2.506110917117274E-7	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.9999983346844967	WITHOUT_CLASSIFICATION	1.6653155033277748E-6	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.9999776087985875	WITHOUT_CLASSIFICATION	2.2391201412374222E-5	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999988416758679	WITHOUT_CLASSIFICATION	1.1583241320915595E-6	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.9999694705214611	WITHOUT_CLASSIFICATION	3.052947853883938E-5	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.9999998118630783	WITHOUT_CLASSIFICATION	1.8813692179452444E-7	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.9999998524226977	WITHOUT_CLASSIFICATION	1.4757730227584187E-7	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9876633806996242	WITHOUT_CLASSIFICATION	0.012336619300375861	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.9999988634128634	WITHOUT_CLASSIFICATION	1.1365871365943255E-6	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9999177307012551	WITHOUT_CLASSIFICATION	8.226929874488633E-5	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.9999935718302498	WITHOUT_CLASSIFICATION	6.4281697501681E-6	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.9999785155407762	WITHOUT_CLASSIFICATION	2.1484459223775542E-5	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999965150884838	WITHOUT_CLASSIFICATION	3.4849115161896656E-6	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999986558717923	WITHOUT_CLASSIFICATION	1.3441282077195584E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999545826403	WITHOUT_CLASSIFICATION	4.541735964389921E-8	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9999911327104403	WITHOUT_CLASSIFICATION	8.867289559703338E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.9997116515020207	WITHOUT_CLASSIFICATION	2.883484979792882E-4	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999431031820917	WITHOUT_CLASSIFICATION	5.6896817908221435E-5	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9998542745151966	WITHOUT_CLASSIFICATION	1.4572548480331786E-4	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.9999440710873333	WITHOUT_CLASSIFICATION	5.592891266662037E-5	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999962753324513	WITHOUT_CLASSIFICATION	3.7246675487271364E-6	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999877077585856	WITHOUT_CLASSIFICATION	1.2292241414407506E-5	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999998260922551	WITHOUT_CLASSIFICATION	1.7390774483940422E-7	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999999083017435	WITHOUT_CLASSIFICATION	9.169825642317912E-8	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999997218182065	WITHOUT_CLASSIFICATION	2.7818179351724126E-7	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999961782342592	WITHOUT_CLASSIFICATION	3.821765740745181E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.999925563902095	WITHOUT_CLASSIFICATION	7.443609790497876E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999961062360591	WITHOUT_CLASSIFICATION	3.893763940936128E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999982887354442	WITHOUT_CLASSIFICATION	1.7112645558774144E-6	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.9999961428420322	WITHOUT_CLASSIFICATION	3.85715796780553E-6	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.9999842204822103	WITHOUT_CLASSIFICATION	1.577951778971341E-5	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999941203733654	WITHOUT_CLASSIFICATION	5.8796266346520835E-6	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999999654364132	WITHOUT_CLASSIFICATION	3.4563586765113074E-8	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999986892838898	WITHOUT_CLASSIFICATION	1.3107161101819232E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999815003866217	WITHOUT_CLASSIFICATION	1.8499613378270075E-5	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999997319690462	WITHOUT_CLASSIFICATION	2.680309537685294E-7	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.9999949337195898	WITHOUT_CLASSIFICATION	5.0662804101893356E-6	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.999998170634793	WITHOUT_CLASSIFICATION	1.8293652068944145E-6	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.99999572701342	WITHOUT_CLASSIFICATION	4.272986580026158E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999545826403	WITHOUT_CLASSIFICATION	4.541735964389921E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999991641796946	WITHOUT_CLASSIFICATION	8.358203054613572E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999995751049592	WITHOUT_CLASSIFICATION	4.2489504084876683E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999850741991124	WITHOUT_CLASSIFICATION	1.4925800887659031E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999939121825047	WITHOUT_CLASSIFICATION	6.0878174952960355E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999893488107677	WITHOUT_CLASSIFICATION	1.0651189232251795E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999905807684822	WITHOUT_CLASSIFICATION	9.419231517732114E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999905807684822	WITHOUT_CLASSIFICATION	9.419231517732114E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999926899204334	WITHOUT_CLASSIFICATION	7.3100795665001114E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999940317905386	WITHOUT_CLASSIFICATION	5.968209461390794E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999921867334189	WITHOUT_CLASSIFICATION	7.813266581050076E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999998798466779	WITHOUT_CLASSIFICATION	1.2015332211044646E-7	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999961062360591	WITHOUT_CLASSIFICATION	3.893763940936128E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999982887354442	WITHOUT_CLASSIFICATION	1.7112645558774144E-6	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999984721583095	WITHOUT_CLASSIFICATION	1.5278416904865E-6	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999922966259162	WITHOUT_CLASSIFICATION	7.703374083802138E-6	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.9999994772640476	WITHOUT_CLASSIFICATION	5.227359524284676E-7	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.9999998462753651	WITHOUT_CLASSIFICATION	1.537246348096557E-7	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9997870310671197	WITHOUT_CLASSIFICATION	2.1296893288023358E-4	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.9995738228234791	WITHOUT_CLASSIFICATION	4.2617717652092984E-4	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9977054532422054	WITHOUT_CLASSIFICATION	0.0022945467577946614	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999847361083346	WITHOUT_CLASSIFICATION	1.5263891665381965E-5	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999612892408913	WITHOUT_CLASSIFICATION	3.87107591086496E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999961584682242	WITHOUT_CLASSIFICATION	3.841531775774936E-6	DEFECT
// square	WITHOUT_CLASSIFICATION	0.9999996441027836	WITHOUT_CLASSIFICATION	3.558972163647222E-7	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.9999956505466807	WITHOUT_CLASSIFICATION	4.349453319204936E-6	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.9999998792801669	WITHOUT_CLASSIFICATION	1.207198331339857E-7	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.9999288451879935	WITHOUT_CLASSIFICATION	7.115481200643571E-5	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.9999979688006004	WITHOUT_CLASSIFICATION	2.0311993996627094E-6	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.9999976354977054	WITHOUT_CLASSIFICATION	2.364502294681876E-6	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.9999999673627176	WITHOUT_CLASSIFICATION	3.263728251609319E-8	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999994256065761	WITHOUT_CLASSIFICATION	5.743934239283891E-7	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.9999948103005409	WITHOUT_CLASSIFICATION	5.189699459058381E-6	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.9999994254852388	WITHOUT_CLASSIFICATION	5.74514761232353E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999545826403	WITHOUT_CLASSIFICATION	4.541735964389921E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998439302404	WITHOUT_CLASSIFICATION	1.5606975957489838E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999651989365	WITHOUT_CLASSIFICATION	3.480106348964135E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999598362758	WITHOUT_CLASSIFICATION	4.0163724275283616E-8	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999996380374411	WITHOUT_CLASSIFICATION	3.6196255892556773E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973285785689	WITHOUT_CLASSIFICATION	2.671421431095654E-6	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.9999852309265289	WITHOUT_CLASSIFICATION	1.4769073471076213E-5	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999909912358	WITHOUT_CLASSIFICATION	9.008764153156776E-9	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973285785689	WITHOUT_CLASSIFICATION	2.671421431095654E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973285785689	WITHOUT_CLASSIFICATION	2.671421431095654E-6	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.9999945336979258	WITHOUT_CLASSIFICATION	5.466302074288384E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999909912358	WITHOUT_CLASSIFICATION	9.008764153156776E-9	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999909912358	WITHOUT_CLASSIFICATION	9.008764153156776E-9	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999545826403	WITHOUT_CLASSIFICATION	4.541735964389921E-8	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.9999980187756121	WITHOUT_CLASSIFICATION	1.9812243878489606E-6	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9999967714923816	WITHOUT_CLASSIFICATION	3.2285076184475476E-6	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.999999903417962	WITHOUT_CLASSIFICATION	9.658203803121307E-8	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.9999999118251318	WITHOUT_CLASSIFICATION	8.817486814828204E-8	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.9999937024812394	WITHOUT_CLASSIFICATION	6.297518760561401E-6	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.9999964917639468	WITHOUT_CLASSIFICATION	3.50823605333113E-6	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.9998937854780241	WITHOUT_CLASSIFICATION	1.0621452197579878E-4	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.999945364184713	WITHOUT_CLASSIFICATION	5.4635815286902396E-5	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.9998963789822396	WITHOUT_CLASSIFICATION	1.0362101776033792E-4	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.9999991447334552	WITHOUT_CLASSIFICATION	8.552665448659191E-7	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.7882310075680238	WITHOUT_CLASSIFICATION	0.21176899243197608	DEFECT
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.9999838883066872	WITHOUT_CLASSIFICATION	1.6111693312828486E-5	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.9999991612130413	WITHOUT_CLASSIFICATION	8.387869586839009E-7	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9999026704282878	WITHOUT_CLASSIFICATION	9.732957171227384E-5	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999989855627655	WITHOUT_CLASSIFICATION	1.0144372345978114E-6	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.9999950482527525	WITHOUT_CLASSIFICATION	4.951747247456778E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999545826403	WITHOUT_CLASSIFICATION	4.541735964389921E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998439302404	WITHOUT_CLASSIFICATION	1.5606975957489838E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999991641796946	WITHOUT_CLASSIFICATION	8.358203054613572E-7	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9998174751118569	WITHOUT_CLASSIFICATION	1.8252488814320562E-4	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999995751049592	WITHOUT_CLASSIFICATION	4.2489504084876683E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999850741991124	WITHOUT_CLASSIFICATION	1.4925800887659031E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999939121825047	WITHOUT_CLASSIFICATION	6.0878174952960355E-6	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.999998514534837	WITHOUT_CLASSIFICATION	1.4854651629878209E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999102344548711	WITHOUT_CLASSIFICATION	8.976554512880239E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999893488107677	WITHOUT_CLASSIFICATION	1.0651189232251795E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999905807684822	WITHOUT_CLASSIFICATION	9.419231517732114E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999905807684822	WITHOUT_CLASSIFICATION	9.419231517732114E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999905807684822	WITHOUT_CLASSIFICATION	9.419231517732114E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999940317905386	WITHOUT_CLASSIFICATION	5.968209461390794E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999940317905386	WITHOUT_CLASSIFICATION	5.968209461390794E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999921867334189	WITHOUT_CLASSIFICATION	7.813266581050076E-6	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999997493889082	WITHOUT_CLASSIFICATION	2.506110917117274E-7	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999988416758679	WITHOUT_CLASSIFICATION	1.1583241320915595E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9997870310671197	WITHOUT_CLASSIFICATION	2.1296893288023358E-4	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999999183834711	WITHOUT_CLASSIFICATION	8.161652886663804E-8	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.999727801493728	WITHOUT_CLASSIFICATION	2.721985062720461E-4	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.9999986933294189	WITHOUT_CLASSIFICATION	1.3066705810853926E-6	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.9999978915066154	WITHOUT_CLASSIFICATION	2.1084933845167917E-6	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.9999995296697568	WITHOUT_CLASSIFICATION	4.703302432120866E-7	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.9999873381053241	WITHOUT_CLASSIFICATION	1.2661894675897574E-5	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.9999994576733507	WITHOUT_CLASSIFICATION	5.423266492741744E-7	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.9999999524156143	WITHOUT_CLASSIFICATION	4.758438572584577E-8	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.9999996378470023	WITHOUT_CLASSIFICATION	3.621529976036207E-7	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.9999990490987005	WITHOUT_CLASSIFICATION	9.509012994988103E-7	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.9999997440552839	WITHOUT_CLASSIFICATION	2.559447160531247E-7	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.9999998318827101	WITHOUT_CLASSIFICATION	1.6811728992651011E-7	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9999354443802937	WITHOUT_CLASSIFICATION	6.455561970629664E-5	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.9999999288564606	WITHOUT_CLASSIFICATION	7.114353933438644E-8	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.9999986944850549	WITHOUT_CLASSIFICATION	1.305514945110414E-6	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.999993394280413	WITHOUT_CLASSIFICATION	6.605719586870225E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999998798466779	WITHOUT_CLASSIFICATION	1.2015332211044646E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999998798466779	WITHOUT_CLASSIFICATION	1.2015332211044646E-7	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999431031820917	WITHOUT_CLASSIFICATION	5.6896817908221435E-5	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9998542745151966	WITHOUT_CLASSIFICATION	1.4572548480331786E-4	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999962753324513	WITHOUT_CLASSIFICATION	3.7246675487271364E-6	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999877077585856	WITHOUT_CLASSIFICATION	1.2292241414407506E-5	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999998260922551	WITHOUT_CLASSIFICATION	1.7390774483940422E-7	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999999083017435	WITHOUT_CLASSIFICATION	9.169825642317912E-8	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999997218182065	WITHOUT_CLASSIFICATION	2.7818179351724126E-7	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999961782342592	WITHOUT_CLASSIFICATION	3.821765740745181E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.999925563902095	WITHOUT_CLASSIFICATION	7.443609790497876E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999961062360591	WITHOUT_CLASSIFICATION	3.893763940936128E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999961062360591	WITHOUT_CLASSIFICATION	3.893763940936128E-6	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999847361083346	WITHOUT_CLASSIFICATION	1.5263891665381965E-5	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.9999637083207937	WITHOUT_CLASSIFICATION	3.629167920615023E-5	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.999884466834944	WITHOUT_CLASSIFICATION	1.1553316505595913E-4	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.9999928744567607	WITHOUT_CLASSIFICATION	7.125543239248607E-6	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.9999831626256784	WITHOUT_CLASSIFICATION	1.6837374321599214E-5	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.9999977704859225	WITHOUT_CLASSIFICATION	2.229514077369299E-6	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.9999906776867517	WITHOUT_CLASSIFICATION	9.322313248341147E-6	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.9999994519126241	WITHOUT_CLASSIFICATION	5.480873759806476E-7	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.999998943659892	WITHOUT_CLASSIFICATION	1.0563401080746985E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999977210051442	WITHOUT_CLASSIFICATION	2.2789948558588188E-6	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.9993256553696581	WITHOUT_CLASSIFICATION	6.743446303419813E-4	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999999423837875	WITHOUT_CLASSIFICATION	5.761621241813942E-8	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.9999862938834335	WITHOUT_CLASSIFICATION	1.370611656656889E-5	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.9999762836386141	WITHOUT_CLASSIFICATION	2.371636138583753E-5	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.9999924118533081	WITHOUT_CLASSIFICATION	7.588146691922188E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999993528163863	WITHOUT_CLASSIFICATION	6.471836135992075E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999830921539796	WITHOUT_CLASSIFICATION	1.6907846020367704E-5	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999926899204334	WITHOUT_CLASSIFICATION	7.3100795665001114E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999926899204334	WITHOUT_CLASSIFICATION	7.3100795665001114E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999982887354442	WITHOUT_CLASSIFICATION	1.7112645558774144E-6	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999999654364132	WITHOUT_CLASSIFICATION	3.4563586765113074E-8	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999999654364132	WITHOUT_CLASSIFICATION	3.4563586765113074E-8	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999986892838898	WITHOUT_CLASSIFICATION	1.3107161101819232E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999815003866217	WITHOUT_CLASSIFICATION	1.8499613378270075E-5	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999815003866217	WITHOUT_CLASSIFICATION	1.8499613378270075E-5	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9997870310671197	WITHOUT_CLASSIFICATION	2.1296893288023358E-4	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999961584682242	WITHOUT_CLASSIFICATION	3.841531775774936E-6	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999454706371069	WITHOUT_CLASSIFICATION	5.452936289315654E-5	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9976078825131955	WITHOUT_CLASSIFICATION	0.0023921174868044596	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9976078825131955	WITHOUT_CLASSIFICATION	0.0023921174868044596	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.999998643167171	WITHOUT_CLASSIFICATION	1.356832828947655E-6	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.9999997686170427	WITHOUT_CLASSIFICATION	2.3138295732208404E-7	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.9999988845072708	WITHOUT_CLASSIFICATION	1.115492729098956E-6	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.999997995143734	WITHOUT_CLASSIFICATION	2.0048562660886103E-6	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.9999992259651748	WITHOUT_CLASSIFICATION	7.740348251083784E-7	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.9999915502928532	WITHOUT_CLASSIFICATION	8.449707146700298E-6	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.9999997455889824	WITHOUT_CLASSIFICATION	2.544110175543727E-7	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.9999988240401133	WITHOUT_CLASSIFICATION	1.1759598867687148E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998439302404	WITHOUT_CLASSIFICATION	1.5606975957489838E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999598362758	WITHOUT_CLASSIFICATION	4.0163724275283616E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999991641796946	WITHOUT_CLASSIFICATION	8.358203054613572E-7	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.999998514534837	WITHOUT_CLASSIFICATION	1.4854651629878209E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999968389755832	WITHOUT_CLASSIFICATION	3.1610244168080965E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999400711091101	WITHOUT_CLASSIFICATION	5.9928890889792106E-5	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.9975373538517196	WITHOUT_CLASSIFICATION	0.002462646148280396	DEFECT
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.9999974770977156	WITHOUT_CLASSIFICATION	2.5229022844979485E-6	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999996856680011	WITHOUT_CLASSIFICATION	3.143319987751163E-7	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9998826852909546	WITHOUT_CLASSIFICATION	1.1731470904545625E-4	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.9999974868898643	WITHOUT_CLASSIFICATION	2.513110135720131E-6	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.9999999534140187	WITHOUT_CLASSIFICATION	4.658598134837733E-8	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.9999777305971279	WITHOUT_CLASSIFICATION	2.2269402872094236E-5	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.9999999348889492	WITHOUT_CLASSIFICATION	6.511105069140028E-8	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.9999999688328962	WITHOUT_CLASSIFICATION	3.1167103721756596E-8	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.9999990321734576	WITHOUT_CLASSIFICATION	9.678265423779622E-7	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.9999962666035977	WITHOUT_CLASSIFICATION	3.7333964023689396E-6	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.999974362711322	WITHOUT_CLASSIFICATION	2.563728867798548E-5	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.9999985991566647	WITHOUT_CLASSIFICATION	1.4008433352709863E-6	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.999996868110106	WITHOUT_CLASSIFICATION	3.131889894015388E-6	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.9999997333292938	WITHOUT_CLASSIFICATION	2.666707062287733E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999997778676314	WITHOUT_CLASSIFICATION	2.2213236850512392E-7	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.999972714565048	WITHOUT_CLASSIFICATION	2.728543495198508E-5	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.9999997616139596	WITHOUT_CLASSIFICATION	2.383860402689151E-7	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.9999980432440725	WITHOUT_CLASSIFICATION	1.9567559276399228E-6	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.9999998185035233	WITHOUT_CLASSIFICATION	1.8149647674118809E-7	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.9999997684302421	WITHOUT_CLASSIFICATION	2.315697577896238E-7	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.9999989228665029	WITHOUT_CLASSIFICATION	1.07713349706029E-6	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9999971651738967	WITHOUT_CLASSIFICATION	2.834826103326222E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999991641796946	WITHOUT_CLASSIFICATION	8.358203054613572E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999983419396523	WITHOUT_CLASSIFICATION	1.658060347696339E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973285785689	WITHOUT_CLASSIFICATION	2.671421431095654E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973285785689	WITHOUT_CLASSIFICATION	2.671421431095654E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999909912358	WITHOUT_CLASSIFICATION	9.008764153156776E-9	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.999972714565048	WITHOUT_CLASSIFICATION	2.728543495198508E-5	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.9999983929220109	WITHOUT_CLASSIFICATION	1.6070779891972891E-6	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.9999992530030104	WITHOUT_CLASSIFICATION	7.46996989671485E-7	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.999945815912092	WITHOUT_CLASSIFICATION	5.418408790793422E-5	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.9999996863871539	WITHOUT_CLASSIFICATION	3.1361284606911414E-7	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9999578214835527	WITHOUT_CLASSIFICATION	4.217851644715816E-5	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.9999999305473671	WITHOUT_CLASSIFICATION	6.945263287487073E-8	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999633115277023	WITHOUT_CLASSIFICATION	3.668847229762552E-5	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999806967411028	WITHOUT_CLASSIFICATION	1.9303258897268134E-5	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999994097292466	WITHOUT_CLASSIFICATION	5.902707533617598E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999900973808952	WITHOUT_CLASSIFICATION	9.902619104737563E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999947731824048	WITHOUT_CLASSIFICATION	5.226817595093876E-6	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9999999104235876	WITHOUT_CLASSIFICATION	8.957641239545384E-8	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999998858585477	WITHOUT_CLASSIFICATION	1.1414145227901047E-7	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.9999993333801015	WITHOUT_CLASSIFICATION	6.666198985269477E-7	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.999999997778937	WITHOUT_CLASSIFICATION	2.221062973739838E-9	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999998071130322	WITHOUT_CLASSIFICATION	1.9288696786889128E-7	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.999943282728228	WITHOUT_CLASSIFICATION	5.6717271772001394E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999347415877672	WITHOUT_CLASSIFICATION	6.525841223287187E-5	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999909980415709	WITHOUT_CLASSIFICATION	9.001958429088756E-6	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999740891409942	WITHOUT_CLASSIFICATION	2.5910859005838927E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999937154145	WITHOUT_CLASSIFICATION	6.284585512403115E-9	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973285785689	WITHOUT_CLASSIFICATION	2.671421431095654E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973285785689	WITHOUT_CLASSIFICATION	2.671421431095654E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973285785689	WITHOUT_CLASSIFICATION	2.671421431095654E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973285785689	WITHOUT_CLASSIFICATION	2.671421431095654E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973285785689	WITHOUT_CLASSIFICATION	2.671421431095654E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999973285785689	WITHOUT_CLASSIFICATION	2.671421431095654E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9996630166884994	WITHOUT_CLASSIFICATION	3.3698331150049896E-4	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999937154145	WITHOUT_CLASSIFICATION	6.284585512403115E-9	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999937154145	WITHOUT_CLASSIFICATION	6.284585512403115E-9	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999975498278173	WITHOUT_CLASSIFICATION	2.450172182656996E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999966412510893	WITHOUT_CLASSIFICATION	3.3587489106061604E-6	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999992192246084	WITHOUT_CLASSIFICATION	7.807753914589968E-7	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.9999997443578629	WITHOUT_CLASSIFICATION	2.556421371502976E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999862845217855	WITHOUT_CLASSIFICATION	1.3715478214608947E-5	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.9999999743232776	WITHOUT_CLASSIFICATION	2.5676722364260924E-8	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.9999552767124774	WITHOUT_CLASSIFICATION	4.472328752266276E-5	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.9999999906314718	WITHOUT_CLASSIFICATION	9.368528153442501E-9	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.9999878965439098	WITHOUT_CLASSIFICATION	1.2103456090134846E-5	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999941377510287	WITHOUT_CLASSIFICATION	5.862248971280936E-6	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999842682516534	WITHOUT_CLASSIFICATION	1.5731748346579704E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998905924857515	WITHOUT_CLASSIFICATION	1.0940751424854787E-4	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.9999998924198	WITHOUT_CLASSIFICATION	1.075801999483448E-7	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999480893273501	WITHOUT_CLASSIFICATION	5.191067264974848E-5	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.999999763253894	WITHOUT_CLASSIFICATION	2.3674610611526875E-7	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.9792110958466386	WITHOUT_CLASSIFICATION	0.020788904153361484	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996302415427	WITHOUT_CLASSIFICATION	3.6975845730928493E-7	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998751315707	WITHOUT_CLASSIFICATION	1.2486842924765382E-7	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999993298506337	WITHOUT_CLASSIFICATION	6.701493664097499E-7	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998919252985	WITHOUT_CLASSIFICATION	1.0807470159958124E-7	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999884506231067	WITHOUT_CLASSIFICATION	1.1549376893377741E-5	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999827172891356	WITHOUT_CLASSIFICATION	1.7282710864447884E-5	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9996630166884994	WITHOUT_CLASSIFICATION	3.3698331150049896E-4	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998751315707	WITHOUT_CLASSIFICATION	1.2486842924765382E-7	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.9999999754731955	WITHOUT_CLASSIFICATION	2.452680448139189E-8	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999262205675297	WITHOUT_CLASSIFICATION	7.377943247024274E-5	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999881008928503	WITHOUT_CLASSIFICATION	1.1899107149781514E-5	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999992924278273	WITHOUT_CLASSIFICATION	7.075721727773556E-7	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996543325012	WITHOUT_CLASSIFICATION	3.456674989442397E-7	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998702957523	WITHOUT_CLASSIFICATION	1.2970424774268453E-7	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998387392282	WITHOUT_CLASSIFICATION	1.6126077187284598E-7	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999394903926	WITHOUT_CLASSIFICATION	6.050960752820335E-8	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998977171665	WITHOUT_CLASSIFICATION	1.0228283350141819E-7	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998175722333	WITHOUT_CLASSIFICATION	1.8242776678113666E-7	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999610039827	WITHOUT_CLASSIFICATION	3.8996017308210335E-7	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999121668603	WITHOUT_CLASSIFICATION	8.783313969051851E-8	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.9999145364305743	WITHOUT_CLASSIFICATION	8.546356942568677E-5	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999988414107666	WITHOUT_CLASSIFICATION	1.1585892334523425E-6	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.9999978975755471	WITHOUT_CLASSIFICATION	2.1024244528211435E-6	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.9999999143275607	WITHOUT_CLASSIFICATION	8.567243927402259E-8	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999746283768453	WITHOUT_CLASSIFICATION	2.5371623154808504E-5	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999997034387043	WITHOUT_CLASSIFICATION	2.965612956911336E-6	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.9999990235974238	WITHOUT_CLASSIFICATION	9.764025762130232E-7	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.9999996149280944	WITHOUT_CLASSIFICATION	3.85071905597596E-7	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.999999569827564	WITHOUT_CLASSIFICATION	4.3017243600957194E-7	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.9999986924201635	WITHOUT_CLASSIFICATION	1.307579836514236E-6	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999245765650524	WITHOUT_CLASSIFICATION	7.542343494759634E-5	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999245765650524	WITHOUT_CLASSIFICATION	7.542343494759634E-5	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999999024846822	WITHOUT_CLASSIFICATION	9.751531783128087E-8	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999999024846822	WITHOUT_CLASSIFICATION	9.751531783128087E-8	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.9999780396400193	WITHOUT_CLASSIFICATION	2.1960359980678902E-5	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.9999889737431197	WITHOUT_CLASSIFICATION	1.1026256880243884E-5	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.999993249006509	WITHOUT_CLASSIFICATION	6.750993491083207E-6	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.9999909891136077	WITHOUT_CLASSIFICATION	9.010886392239664E-6	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9999558489544199	WITHOUT_CLASSIFICATION	4.415104558007267E-5	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.9999817791919507	WITHOUT_CLASSIFICATION	1.822080804930928E-5	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.9999991582036675	WITHOUT_CLASSIFICATION	8.417963325643344E-7	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.9999978210993618	WITHOUT_CLASSIFICATION	2.1789006383051267E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.999999702880831	WITHOUT_CLASSIFICATION	2.9711916911602557E-7	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.7228934157451864	DEFECT	0.27710658425481366	WITHOUT_CLASSIFICATION
// handle positive value	WITHOUT_CLASSIFICATION	0.999999952093444	WITHOUT_CLASSIFICATION	4.7906555975442514E-8	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999985900413072	WITHOUT_CLASSIFICATION	1.409958692780697E-6	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999985900413072	WITHOUT_CLASSIFICATION	1.409958692780697E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999857874070555	WITHOUT_CLASSIFICATION	1.4212592944439391E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999857874070555	WITHOUT_CLASSIFICATION	1.4212592944439391E-5	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999999540096369	WITHOUT_CLASSIFICATION	4.599036303093422E-8	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999977830661683	WITHOUT_CLASSIFICATION	2.216933831717265E-6	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.999999733102255	WITHOUT_CLASSIFICATION	2.6689774500669936E-7	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.9999853046107342	WITHOUT_CLASSIFICATION	1.4695389265666026E-5	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999992213628798	WITHOUT_CLASSIFICATION	7.786371201895821E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999986956150595	WITHOUT_CLASSIFICATION	1.3043849404217495E-6	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.999975703688594	WITHOUT_CLASSIFICATION	2.429631140598742E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999258032503613	WITHOUT_CLASSIFICATION	7.419674963868704E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999937154145	WITHOUT_CLASSIFICATION	6.284585512403115E-9	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999514193500625	WITHOUT_CLASSIFICATION	4.85806499375191E-5	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999992213628798	WITHOUT_CLASSIFICATION	7.786371201895821E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999986956150595	WITHOUT_CLASSIFICATION	1.3043849404217495E-6	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999814780599738	WITHOUT_CLASSIFICATION	1.8521940026164444E-5	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.9999997322265317	WITHOUT_CLASSIFICATION	2.677734681987065E-7	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.9999997907408756	WITHOUT_CLASSIFICATION	2.0925912442006914E-7	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999258032503613	WITHOUT_CLASSIFICATION	7.419674963868704E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999996038599426	WITHOUT_CLASSIFICATION	3.961400573532289E-7	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.9999994318994188	WITHOUT_CLASSIFICATION	5.681005811765202E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999804316556836	WITHOUT_CLASSIFICATION	1.9568344316412706E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999804316556836	WITHOUT_CLASSIFICATION	1.9568344316412706E-5	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.9999988035222959	WITHOUT_CLASSIFICATION	1.1964777040964994E-6	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9996056271455154	WITHOUT_CLASSIFICATION	3.943728544846146E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.999919256016682	WITHOUT_CLASSIFICATION	8.07439833179679E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.999919256016682	WITHOUT_CLASSIFICATION	8.07439833179679E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.999994434584421	WITHOUT_CLASSIFICATION	5.565415578888224E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999908196509556	WITHOUT_CLASSIFICATION	9.18034904433214E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999962733091384	WITHOUT_CLASSIFICATION	3.7266908614542557E-6	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.9999999870868244	WITHOUT_CLASSIFICATION	1.2913175619603397E-8	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9998578796413184	WITHOUT_CLASSIFICATION	1.421203586814665E-4	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9998937557233686	WITHOUT_CLASSIFICATION	1.0624427663139216E-4	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999878651492892	WITHOUT_CLASSIFICATION	1.2134850710886519E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999194558091	WITHOUT_CLASSIFICATION	8.054419090424507E-8	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999988414107666	WITHOUT_CLASSIFICATION	1.1585892334523425E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999986956150595	WITHOUT_CLASSIFICATION	1.3043849404217495E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999951339831199	WITHOUT_CLASSIFICATION	4.86601688000641E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999743290360436	WITHOUT_CLASSIFICATION	2.5670963956485224E-5	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.9999904377666491	WITHOUT_CLASSIFICATION	9.562233350786862E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9998917869149118	WITHOUT_CLASSIFICATION	1.0821308508815782E-4	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999859891712933	WITHOUT_CLASSIFICATION	1.4010828706699783E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999940898826402	WITHOUT_CLASSIFICATION	5.91011735982935E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999904798081377	WITHOUT_CLASSIFICATION	9.520191862320606E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999904798081377	WITHOUT_CLASSIFICATION	9.520191862320606E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999798910918	WITHOUT_CLASSIFICATION	2.0108908130805828E-8	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999798910918	WITHOUT_CLASSIFICATION	2.0108908130805828E-8	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.999978506533278	WITHOUT_CLASSIFICATION	2.1493466721971105E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999970135707624	WITHOUT_CLASSIFICATION	2.986429237540626E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999821882118937	WITHOUT_CLASSIFICATION	1.781178810641229E-5	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999983052189403	WITHOUT_CLASSIFICATION	1.6947810597678289E-6	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999995256032009	WITHOUT_CLASSIFICATION	4.7439679909242707E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.999998534266009	WITHOUT_CLASSIFICATION	1.4657339909631974E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999918567865568	WITHOUT_CLASSIFICATION	8.143213443122455E-6	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.9999998164999913	WITHOUT_CLASSIFICATION	1.835000087630485E-7	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999614753738084	WITHOUT_CLASSIFICATION	3.8524626191488764E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9998311190588075	WITHOUT_CLASSIFICATION	1.6888094119256174E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.999998154988317	WITHOUT_CLASSIFICATION	1.845011682947306E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9993925871974125	WITHOUT_CLASSIFICATION	6.074128025875116E-4	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999614753738084	WITHOUT_CLASSIFICATION	3.8524626191488764E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9998311190588075	WITHOUT_CLASSIFICATION	1.6888094119256174E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.999998154988317	WITHOUT_CLASSIFICATION	1.845011682947306E-6	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.9999688449597066	WITHOUT_CLASSIFICATION	3.1155040293475664E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999724585090224	WITHOUT_CLASSIFICATION	2.7541490977608768E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999724585090224	WITHOUT_CLASSIFICATION	2.7541490977608768E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999951339831199	WITHOUT_CLASSIFICATION	4.86601688000641E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999951339831199	WITHOUT_CLASSIFICATION	4.86601688000641E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999963140695807	WITHOUT_CLASSIFICATION	3.6859304192828604E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999963140695807	WITHOUT_CLASSIFICATION	3.6859304192828604E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999930139659329	WITHOUT_CLASSIFICATION	6.986034067034704E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999930139659329	WITHOUT_CLASSIFICATION	6.986034067034704E-6	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999993744129662	WITHOUT_CLASSIFICATION	6.255870337917934E-7	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999993744129662	WITHOUT_CLASSIFICATION	6.255870337917934E-7	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999694206079	WITHOUT_CLASSIFICATION	3.0579392163434714E-8	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9999978426276168	WITHOUT_CLASSIFICATION	2.1573723832290574E-6	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.9999986579419492	WITHOUT_CLASSIFICATION	1.3420580508268137E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999962733091384	WITHOUT_CLASSIFICATION	3.7266908614542557E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999962733091384	WITHOUT_CLASSIFICATION	3.7266908614542557E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999859891712933	WITHOUT_CLASSIFICATION	1.4010828706699783E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.999998154988317	WITHOUT_CLASSIFICATION	1.845011682947306E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999724585090224	WITHOUT_CLASSIFICATION	2.7541490977608768E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999724585090224	WITHOUT_CLASSIFICATION	2.7541490977608768E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999951339831199	WITHOUT_CLASSIFICATION	4.86601688000641E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999963140695807	WITHOUT_CLASSIFICATION	3.6859304192828604E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999930139659329	WITHOUT_CLASSIFICATION	6.986034067034704E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999999415472787	WITHOUT_CLASSIFICATION	5.8452721344799116E-8	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999968241109495	WITHOUT_CLASSIFICATION	3.1758890504685154E-6	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.9999207300496221	WITHOUT_CLASSIFICATION	7.926995037779567E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999184902787569	WITHOUT_CLASSIFICATION	8.150972124302878E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.999990075062575	WITHOUT_CLASSIFICATION	9.924937425055397E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999899076944239	WITHOUT_CLASSIFICATION	1.0092305576072859E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999007389991673	WITHOUT_CLASSIFICATION	9.926100083266813E-5	DEFECT
// X	WITHOUT_CLASSIFICATION	0.9998053287967384	WITHOUT_CLASSIFICATION	1.9467120326153664E-4	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.9999879624684781	WITHOUT_CLASSIFICATION	1.2037531521857352E-5	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.9999925529486885	WITHOUT_CLASSIFICATION	7.447051311401883E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999977830661683	WITHOUT_CLASSIFICATION	2.216933831717265E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999859891712933	WITHOUT_CLASSIFICATION	1.4010828706699783E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999614753738084	WITHOUT_CLASSIFICATION	3.8524626191488764E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9998311190588075	WITHOUT_CLASSIFICATION	1.6888094119256174E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.999998154988317	WITHOUT_CLASSIFICATION	1.845011682947306E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999724585090224	WITHOUT_CLASSIFICATION	2.7541490977608768E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999963140695807	WITHOUT_CLASSIFICATION	3.6859304192828604E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999930139659329	WITHOUT_CLASSIFICATION	6.986034067034704E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999930139659329	WITHOUT_CLASSIFICATION	6.986034067034704E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999184902787569	WITHOUT_CLASSIFICATION	8.150972124302878E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999184902787569	WITHOUT_CLASSIFICATION	8.150972124302878E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999007389991673	WITHOUT_CLASSIFICATION	9.926100083266813E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999007389991673	WITHOUT_CLASSIFICATION	9.926100083266813E-5	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.999998809309059	WITHOUT_CLASSIFICATION	1.190690940892559E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9998019219315344	WITHOUT_CLASSIFICATION	1.9807806846552746E-4	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999797933593195	WITHOUT_CLASSIFICATION	2.0206640680490654E-5	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999996432271248	WITHOUT_CLASSIFICATION	3.567728753156216E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999771256220245	WITHOUT_CLASSIFICATION	2.2874377975555058E-5	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999562186111557	WITHOUT_CLASSIFICATION	4.378138884438171E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999977210051442	WITHOUT_CLASSIFICATION	2.2789948558588188E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999977830661683	WITHOUT_CLASSIFICATION	2.216933831717265E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999986956150595	WITHOUT_CLASSIFICATION	1.3043849404217495E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999986956150595	WITHOUT_CLASSIFICATION	1.3043849404217495E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999962733091384	WITHOUT_CLASSIFICATION	3.7266908614542557E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999962733091384	WITHOUT_CLASSIFICATION	3.7266908614542557E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9998917869149118	WITHOUT_CLASSIFICATION	1.0821308508815782E-4	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999859891712933	WITHOUT_CLASSIFICATION	1.4010828706699783E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999918567865568	WITHOUT_CLASSIFICATION	8.143213443122455E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999918567865568	WITHOUT_CLASSIFICATION	8.143213443122455E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999918567865568	WITHOUT_CLASSIFICATION	8.143213443122455E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999724585090224	WITHOUT_CLASSIFICATION	2.7541490977608768E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999724585090224	WITHOUT_CLASSIFICATION	2.7541490977608768E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999007389991673	WITHOUT_CLASSIFICATION	9.926100083266813E-5	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9998019219315344	WITHOUT_CLASSIFICATION	1.9807806846552746E-4	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999797933593195	WITHOUT_CLASSIFICATION	2.0206640680490654E-5	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999253181204	WITHOUT_CLASSIFICATION	7.468187958983706E-8	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.9999908851229902	WITHOUT_CLASSIFICATION	9.114877009810409E-6	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.9999952669334765	WITHOUT_CLASSIFICATION	4.7330665235059635E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9985433784742754	WITHOUT_CLASSIFICATION	0.0014566215257245411	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.977749225470451	WITHOUT_CLASSIFICATION	0.022250774529549017	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999986956150595	WITHOUT_CLASSIFICATION	1.3043849404217495E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999804316556836	WITHOUT_CLASSIFICATION	1.9568344316412706E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.999919256016682	WITHOUT_CLASSIFICATION	8.07439833179679E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.999919256016682	WITHOUT_CLASSIFICATION	8.07439833179679E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.999994434584421	WITHOUT_CLASSIFICATION	5.565415578888224E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9998019219315344	WITHOUT_CLASSIFICATION	1.9807806846552746E-4	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999997734451774	WITHOUT_CLASSIFICATION	2.2655482262259378E-7	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.9999828756696421	WITHOUT_CLASSIFICATION	1.7124330357942073E-5	DEFECT
// switch x and y	WITHOUT_CLASSIFICATION	0.9999959923499316	WITHOUT_CLASSIFICATION	4.00765006837758E-6	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.9998534555884862	WITHOUT_CLASSIFICATION	1.465444115137961E-4	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.9998307892350515	WITHOUT_CLASSIFICATION	1.6921076494839186E-4	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.9999965875857121	WITHOUT_CLASSIFICATION	3.4124142879535037E-6	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.9999960994896088	WITHOUT_CLASSIFICATION	3.900510391236367E-6	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.9999903480336763	WITHOUT_CLASSIFICATION	9.651966323673978E-6	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.999998875556488	WITHOUT_CLASSIFICATION	1.1244435119484698E-6	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999968797597708	WITHOUT_CLASSIFICATION	3.1202402292451114E-6	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.9999960590607996	WITHOUT_CLASSIFICATION	3.940939200484676E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999997734451774	WITHOUT_CLASSIFICATION	2.2655482262259378E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999997734451774	WITHOUT_CLASSIFICATION	2.2655482262259378E-7	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.999994434584421	WITHOUT_CLASSIFICATION	5.565415578888224E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999908196509556	WITHOUT_CLASSIFICATION	9.18034904433214E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999614753738084	WITHOUT_CLASSIFICATION	3.8524626191488764E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9998311190588075	WITHOUT_CLASSIFICATION	1.6888094119256174E-4	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.999990075062575	WITHOUT_CLASSIFICATION	9.924937425055397E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999899076944239	WITHOUT_CLASSIFICATION	1.0092305576072859E-5	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.999857167988075	WITHOUT_CLASSIFICATION	1.4283201192507173E-4	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999732649577787	WITHOUT_CLASSIFICATION	2.6735042221372192E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999721679345999	WITHOUT_CLASSIFICATION	2.7832065400129943E-5	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.999999258950757	WITHOUT_CLASSIFICATION	7.410492429733949E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.9997648590598202	WITHOUT_CLASSIFICATION	2.3514094017989187E-4	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999928045677878	WITHOUT_CLASSIFICATION	7.195432212201471E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9579924287775824	WITHOUT_CLASSIFICATION	0.042007571222417515	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.799814937282948	WITHOUT_CLASSIFICATION	0.2001850627170522	DEFECT
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999740891409942	WITHOUT_CLASSIFICATION	2.5910859005838927E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998905924857515	WITHOUT_CLASSIFICATION	1.0940751424854787E-4	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999480893273501	WITHOUT_CLASSIFICATION	5.191067264974848E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999940898826402	WITHOUT_CLASSIFICATION	5.91011735982935E-6	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.999978506533278	WITHOUT_CLASSIFICATION	2.1493466721971105E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999930139659329	WITHOUT_CLASSIFICATION	6.986034067034704E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9579924287775824	WITHOUT_CLASSIFICATION	0.042007571222417515	DEFECT
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.9999929018909117	WITHOUT_CLASSIFICATION	7.09810908822657E-6	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9321605422217892	WITHOUT_CLASSIFICATION	0.06783945777821072	DEFECT
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999966537138145	WITHOUT_CLASSIFICATION	3.3462861854285447E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.5010400656506955	WITHOUT_CLASSIFICATION	0.4989599343493044	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.8675311184524609	DEFECT	0.13246888154753914	WITHOUT_CLASSIFICATION
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999987149909224	WITHOUT_CLASSIFICATION	1.2850090776134426E-6	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6370756822378616	WITHOUT_CLASSIFICATION	0.3629243177621383	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7284658943656359	DEFECT	0.271534105634364	WITHOUT_CLASSIFICATION
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999864241593366	WITHOUT_CLASSIFICATION	1.3575840663283982E-5	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9865326452492899	WITHOUT_CLASSIFICATION	0.01346735475071007	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.886336886974521	WITHOUT_CLASSIFICATION	0.11366311302547899	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999837622238	WITHOUT_CLASSIFICATION	1.6237776188447236E-8	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.9907931575054904	WITHOUT_CLASSIFICATION	0.009206842494509588	DEFECT
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.9851426352919257	WITHOUT_CLASSIFICATION	0.014857364708074276	DEFECT
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999903315911707	WITHOUT_CLASSIFICATION	9.668408829357955E-6	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9915481904086146	WITHOUT_CLASSIFICATION	0.008451809591385293	DEFECT
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9581710127259656	WITHOUT_CLASSIFICATION	0.041828987274034404	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999842682516534	WITHOUT_CLASSIFICATION	1.5731748346579704E-5	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9945091935381694	WITHOUT_CLASSIFICATION	0.005490806461830705	DEFECT
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9803965191162031	WITHOUT_CLASSIFICATION	0.019603480883796896	DEFECT
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999974938626074	WITHOUT_CLASSIFICATION	2.506137392604087E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999684469658	WITHOUT_CLASSIFICATION	3.155303415763034E-8	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.9999950612287174	WITHOUT_CLASSIFICATION	4.938771282580048E-6	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999997488840606	WITHOUT_CLASSIFICATION	2.5111593936273125E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999837622238	WITHOUT_CLASSIFICATION	1.6237776188447236E-8	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9996056271455154	WITHOUT_CLASSIFICATION	3.943728544846146E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.999919256016682	WITHOUT_CLASSIFICATION	8.07439833179679E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.999994434584421	WITHOUT_CLASSIFICATION	5.565415578888224E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.999994434584421	WITHOUT_CLASSIFICATION	5.565415578888224E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999908196509556	WITHOUT_CLASSIFICATION	9.18034904433214E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999962733091384	WITHOUT_CLASSIFICATION	3.7266908614542557E-6	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9998578796413184	WITHOUT_CLASSIFICATION	1.421203586814665E-4	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999878651492892	WITHOUT_CLASSIFICATION	1.2134850710886519E-5	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999743290360436	WITHOUT_CLASSIFICATION	2.5670963956485224E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999859891712933	WITHOUT_CLASSIFICATION	1.4010828706699783E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999184902787569	WITHOUT_CLASSIFICATION	8.150972124302878E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999007389991673	WITHOUT_CLASSIFICATION	9.926100083266813E-5	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999998710825736	WITHOUT_CLASSIFICATION	1.2891742630438613E-7	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.999996374638157	WITHOUT_CLASSIFICATION	3.6253618429683098E-6	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.9999998780824126	WITHOUT_CLASSIFICATION	1.2191758731475334E-7	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.9999998495857648	WITHOUT_CLASSIFICATION	1.5041423516416173E-7	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.9999997321435231	WITHOUT_CLASSIFICATION	2.6785647685660605E-7	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.999997865684905	WITHOUT_CLASSIFICATION	2.134315095054354E-6	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.9999907442128043	WITHOUT_CLASSIFICATION	9.255787195690987E-6	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.9999121712134367	WITHOUT_CLASSIFICATION	8.782878656331973E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999804316556836	WITHOUT_CLASSIFICATION	1.9568344316412706E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999918567865568	WITHOUT_CLASSIFICATION	8.143213443122455E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999930139659329	WITHOUT_CLASSIFICATION	6.986034067034704E-6	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.999990075062575	WITHOUT_CLASSIFICATION	9.924937425055397E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999899076944239	WITHOUT_CLASSIFICATION	1.0092305576072859E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999007389991673	WITHOUT_CLASSIFICATION	9.926100083266813E-5	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999732649577787	WITHOUT_CLASSIFICATION	2.6735042221372192E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999721679345999	WITHOUT_CLASSIFICATION	2.7832065400129943E-5	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999992811680557	WITHOUT_CLASSIFICATION	7.1883194424908E-7	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999983027816705	WITHOUT_CLASSIFICATION	1.6972183295853895E-6	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.9999999398047401	WITHOUT_CLASSIFICATION	6.019525978866557E-8	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.9999996899085796	WITHOUT_CLASSIFICATION	3.100914204548354E-7	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.9999993904848298	WITHOUT_CLASSIFICATION	6.095151702510763E-7	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999858696210966	WITHOUT_CLASSIFICATION	1.4130378903476928E-5	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.9999139543379941	WITHOUT_CLASSIFICATION	8.604566200587844E-5	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.9999949851563663	WITHOUT_CLASSIFICATION	5.014843633774407E-6	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999589644821555	WITHOUT_CLASSIFICATION	4.103551784445564E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999921033102701	WITHOUT_CLASSIFICATION	7.896689729947939E-6	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.799814937282948	WITHOUT_CLASSIFICATION	0.2001850627170522	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999858696210966	WITHOUT_CLASSIFICATION	1.4130378903476928E-5	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999589644821555	WITHOUT_CLASSIFICATION	4.103551784445564E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999921033102701	WITHOUT_CLASSIFICATION	7.896689729947939E-6	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9999023625302841	WITHOUT_CLASSIFICATION	9.763746971589876E-5	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.999946083005023	WITHOUT_CLASSIFICATION	5.391699497711397E-5	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999999143578338	WITHOUT_CLASSIFICATION	8.56421662009122E-8	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999999143578338	WITHOUT_CLASSIFICATION	8.56421662009122E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999968570061002	WITHOUT_CLASSIFICATION	3.14299389974852E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999903754187811	WITHOUT_CLASSIFICATION	9.624581218866096E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999903754187811	WITHOUT_CLASSIFICATION	9.624581218866096E-6	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.9999385597195347	WITHOUT_CLASSIFICATION	6.144028046529996E-5	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.999953662228107	WITHOUT_CLASSIFICATION	4.63377718930069E-5	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.9999951041664886	WITHOUT_CLASSIFICATION	4.89583351133792E-6	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.9999575220775302	WITHOUT_CLASSIFICATION	4.2477922469763174E-5	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.9999999090300357	WITHOUT_CLASSIFICATION	9.096996435197492E-8	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999998892934289	WITHOUT_CLASSIFICATION	1.1070657103143308E-7	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.9334017292405978	WITHOUT_CLASSIFICATION	0.06659827075940204	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999999297413269	WITHOUT_CLASSIFICATION	7.025867314035353E-8	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9996994398477975	WITHOUT_CLASSIFICATION	3.0056015220245535E-4	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999997749750861	WITHOUT_CLASSIFICATION	2.2502491385073725E-7	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.9999991202065223	WITHOUT_CLASSIFICATION	8.797934777526897E-7	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999712547641654	WITHOUT_CLASSIFICATION	2.8745235834610423E-5	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999998564068824	WITHOUT_CLASSIFICATION	1.4359311757008143E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999932511235186	WITHOUT_CLASSIFICATION	6.748876481400133E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999184902787569	WITHOUT_CLASSIFICATION	8.150972124302878E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9996994398477975	WITHOUT_CLASSIFICATION	3.0056015220245535E-4	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999998895210558	WITHOUT_CLASSIFICATION	1.1047894426986033E-7	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999904445199025	WITHOUT_CLASSIFICATION	9.55548009753284E-6	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.9999999211156646	WITHOUT_CLASSIFICATION	7.888433538304976E-8	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999990739814497	WITHOUT_CLASSIFICATION	9.260185502921972E-7	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.9999516007420544	WITHOUT_CLASSIFICATION	4.839925794563425E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999981177628808	WITHOUT_CLASSIFICATION	1.8822371192773305E-6	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.9999998948437595	WITHOUT_CLASSIFICATION	1.0515624047644844E-7	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.9999961486782245	WITHOUT_CLASSIFICATION	3.851321775569285E-6	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.9980521918001305	WITHOUT_CLASSIFICATION	0.0019478081998694071	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.9938003744447427	WITHOUT_CLASSIFICATION	0.006199625555257346	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.99998415492109	WITHOUT_CLASSIFICATION	1.5845078910024106E-5	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.9999999491404272	WITHOUT_CLASSIFICATION	5.085957280886763E-8	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.9997224129102661	WITHOUT_CLASSIFICATION	2.7758708973395875E-4	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999925372789756	WITHOUT_CLASSIFICATION	7.462721024333463E-6	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.9999952941327457	WITHOUT_CLASSIFICATION	4.705867254367755E-6	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999930571864758	WITHOUT_CLASSIFICATION	6.942813524213516E-6	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9999995893677687	WITHOUT_CLASSIFICATION	4.106322312707781E-7	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9999999535988876	WITHOUT_CLASSIFICATION	4.640111232840173E-8	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999973261104111	WITHOUT_CLASSIFICATION	2.673889588843243E-6	DEFECT
// state	WITHOUT_CLASSIFICATION	0.9999994636919604	WITHOUT_CLASSIFICATION	5.363080396805437E-7	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.9999998869624824	WITHOUT_CLASSIFICATION	1.1303751763397764E-7	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.9999991790995703	WITHOUT_CLASSIFICATION	8.209004297742837E-7	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.9999825242382393	WITHOUT_CLASSIFICATION	1.7475761760672456E-5	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.9999995292549643	WITHOUT_CLASSIFICATION	4.707450357477886E-7	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999978742798333	WITHOUT_CLASSIFICATION	2.1257201666423224E-6	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999969220461316	WITHOUT_CLASSIFICATION	3.077953868460158E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999998050657735	WITHOUT_CLASSIFICATION	1.9493422647050347E-7	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999991472445137	WITHOUT_CLASSIFICATION	8.527554863519007E-7	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.9999992789641129	WITHOUT_CLASSIFICATION	7.210358872196262E-7	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9782653693809075	WITHOUT_CLASSIFICATION	0.02173463061909249	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.9999904580718537	WITHOUT_CLASSIFICATION	9.541928146287189E-6	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.9999999287480698	WITHOUT_CLASSIFICATION	7.125193027103745E-8	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999998375332544	WITHOUT_CLASSIFICATION	1.6246674557647694E-7	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.9999965048254451	WITHOUT_CLASSIFICATION	3.4951745548412768E-6	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999978956037628	WITHOUT_CLASSIFICATION	2.1043962372255237E-6	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.9999999577287073	WITHOUT_CLASSIFICATION	4.227129266454508E-8	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.9999999196374681	WITHOUT_CLASSIFICATION	8.036253178326495E-8	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.9999996316032236	WITHOUT_CLASSIFICATION	3.6839677633910397E-7	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.9999997275245109	WITHOUT_CLASSIFICATION	2.724754890184681E-7	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.9999980403621812	WITHOUT_CLASSIFICATION	1.959637818802123E-6	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.9999994546890381	WITHOUT_CLASSIFICATION	5.453109620353658E-7	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.9999997528506646	WITHOUT_CLASSIFICATION	2.4714933547747677E-7	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.9999985089923636	WITHOUT_CLASSIFICATION	1.4910076363924909E-6	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.9999993731694078	WITHOUT_CLASSIFICATION	6.268305921363855E-7	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.9999948024870843	WITHOUT_CLASSIFICATION	5.19751291582021E-6	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.999998287866121	WITHOUT_CLASSIFICATION	1.712133879123885E-6	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999974811402581	WITHOUT_CLASSIFICATION	2.518859741992886E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999932511235186	WITHOUT_CLASSIFICATION	6.748876481400133E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999347415877672	WITHOUT_CLASSIFICATION	6.525841223287187E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999908196509556	WITHOUT_CLASSIFICATION	9.18034904433214E-6	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999981177628808	WITHOUT_CLASSIFICATION	1.8822371192773305E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999998050657735	WITHOUT_CLASSIFICATION	1.9493422647050347E-7	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999991472445137	WITHOUT_CLASSIFICATION	8.527554863519007E-7	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.999998287866121	WITHOUT_CLASSIFICATION	1.712133879123885E-6	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999974811402581	WITHOUT_CLASSIFICATION	2.518859741992886E-6	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.9999968151315037	WITHOUT_CLASSIFICATION	3.1848684962724463E-6	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.9999725689277206	WITHOUT_CLASSIFICATION	2.7431072279470483E-5	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.9999999652366979	WITHOUT_CLASSIFICATION	3.4763302144380685E-8	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.999999977794191	WITHOUT_CLASSIFICATION	2.2205808976874835E-8	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999873697497954	WITHOUT_CLASSIFICATION	1.263025020455644E-5	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.9999986504130859	WITHOUT_CLASSIFICATION	1.3495869141750395E-6	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.9999998242927531	WITHOUT_CLASSIFICATION	1.7570724683974258E-7	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999927148907085	WITHOUT_CLASSIFICATION	7.285109291503809E-6	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999650570671466	WITHOUT_CLASSIFICATION	3.494293285341746E-5	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999928045677878	WITHOUT_CLASSIFICATION	7.195432212201471E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.999999702880831	WITHOUT_CLASSIFICATION	2.9711916911602557E-7	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.977749225470451	WITHOUT_CLASSIFICATION	0.022250774529549017	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9321605422217892	WITHOUT_CLASSIFICATION	0.06783945777821072	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999980515504342	WITHOUT_CLASSIFICATION	1.948449565758192E-6	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999997125034626	WITHOUT_CLASSIFICATION	2.8749653733094793E-7	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999968797597708	WITHOUT_CLASSIFICATION	3.1202402292451114E-6	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.999999236984173	WITHOUT_CLASSIFICATION	7.630158269536629E-7	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.9999817139478314	WITHOUT_CLASSIFICATION	1.828605216858369E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9998905924857515	WITHOUT_CLASSIFICATION	1.0940751424854787E-4	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999480893273501	WITHOUT_CLASSIFICATION	5.191067264974848E-5	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999746283768453	WITHOUT_CLASSIFICATION	2.5371623154808504E-5	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999997034387043	WITHOUT_CLASSIFICATION	2.965612956911336E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.5010400656506955	WITHOUT_CLASSIFICATION	0.4989599343493044	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.8675311184524609	DEFECT	0.13246888154753914	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6370756822378616	WITHOUT_CLASSIFICATION	0.3629243177621383	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7284658943656359	DEFECT	0.271534105634364	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9865326452492899	WITHOUT_CLASSIFICATION	0.01346735475071007	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.886336886974521	WITHOUT_CLASSIFICATION	0.11366311302547899	DEFECT
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.9999999152839304	WITHOUT_CLASSIFICATION	8.471606963003407E-8	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999966537138145	WITHOUT_CLASSIFICATION	3.3462861854285447E-6	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999987149909224	WITHOUT_CLASSIFICATION	1.2850090776134426E-6	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999864241593366	WITHOUT_CLASSIFICATION	1.3575840663283982E-5	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999897420249422	WITHOUT_CLASSIFICATION	1.0257975057878873E-5	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999908896486672	WITHOUT_CLASSIFICATION	9.110351332724538E-6	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999919672750256	WITHOUT_CLASSIFICATION	8.03272497446365E-6	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.782776044845823	WITHOUT_CLASSIFICATION	0.217223955154177	DEFECT
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999941377510287	WITHOUT_CLASSIFICATION	5.862248971280936E-6	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999944735075597	WITHOUT_CLASSIFICATION	5.526492440300273E-6	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999887793762415	WITHOUT_CLASSIFICATION	1.1220623758423288E-5	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.9999984903062238	WITHOUT_CLASSIFICATION	1.5096937761758786E-6	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.9999999386460341	WITHOUT_CLASSIFICATION	6.13539658853469E-8	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.9999981875640145	WITHOUT_CLASSIFICATION	1.812435985564448E-6	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.9999966940788337	WITHOUT_CLASSIFICATION	3.3059211664092803E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999619862223054	WITHOUT_CLASSIFICATION	3.801377769460174E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999983419396523	WITHOUT_CLASSIFICATION	1.658060347696339E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999932511235186	WITHOUT_CLASSIFICATION	6.748876481400133E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999804316556836	WITHOUT_CLASSIFICATION	1.9568344316412706E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999997749750861	WITHOUT_CLASSIFICATION	2.2502491385073725E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994610935371	WITHOUT_CLASSIFICATION	5.389064629758677E-7	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.9999982163658555	WITHOUT_CLASSIFICATION	1.783634144490098E-6	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999799312290518	WITHOUT_CLASSIFICATION	2.0068770948161503E-5	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999320441968118	WITHOUT_CLASSIFICATION	6.795580318824601E-5	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.9999990672320568	WITHOUT_CLASSIFICATION	9.327679431238445E-7	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.9999957617787729	WITHOUT_CLASSIFICATION	4.238221227048788E-6	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.9999992869718409	WITHOUT_CLASSIFICATION	7.130281590554903E-7	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999627016103185	WITHOUT_CLASSIFICATION	3.729838968150998E-5	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.9999883629377562	WITHOUT_CLASSIFICATION	1.1637062243753235E-5	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9999995126886759	WITHOUT_CLASSIFICATION	4.873113241010851E-7	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.9998758551269077	WITHOUT_CLASSIFICATION	1.2414487309233652E-4	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999998858585477	WITHOUT_CLASSIFICATION	1.1414145227901047E-7	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999988414107666	WITHOUT_CLASSIFICATION	1.1585892334523425E-6	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999814780599738	WITHOUT_CLASSIFICATION	1.8521940026164444E-5	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.999975703688594	WITHOUT_CLASSIFICATION	2.429631140598742E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999258032503613	WITHOUT_CLASSIFICATION	7.419674963868704E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999804316556836	WITHOUT_CLASSIFICATION	1.9568344316412706E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999184902787569	WITHOUT_CLASSIFICATION	8.150972124302878E-5	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999999297413269	WITHOUT_CLASSIFICATION	7.025867314035353E-8	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999712547641654	WITHOUT_CLASSIFICATION	2.8745235834610423E-5	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999904445199025	WITHOUT_CLASSIFICATION	9.55548009753284E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999990739814497	WITHOUT_CLASSIFICATION	9.260185502921972E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999990739814497	WITHOUT_CLASSIFICATION	9.260185502921972E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996297446353	WITHOUT_CLASSIFICATION	3.7025536462902615E-7	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999969365966199	WITHOUT_CLASSIFICATION	3.0634033800438295E-6	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999991188450272	WITHOUT_CLASSIFICATION	8.811549727362256E-7	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.999774786551657	WITHOUT_CLASSIFICATION	2.252134483430914E-4	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.999995141377425	WITHOUT_CLASSIFICATION	4.858622574983494E-6	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.9999979273501703	WITHOUT_CLASSIFICATION	2.0726498296615455E-6	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.9999984929803478	WITHOUT_CLASSIFICATION	1.5070196521920013E-6	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.999995269555968	WITHOUT_CLASSIFICATION	4.730444031950331E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999983419396523	WITHOUT_CLASSIFICATION	1.658060347696339E-6	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999998346994605	WITHOUT_CLASSIFICATION	1.6530053948267373E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999908196509556	WITHOUT_CLASSIFICATION	9.18034904433214E-6	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999320441968118	WITHOUT_CLASSIFICATION	6.795580318824601E-5	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.9999976913812085	WITHOUT_CLASSIFICATION	2.308618791419718E-6	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.9998816077301397	WITHOUT_CLASSIFICATION	1.1839226986041106E-4	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999987751640368	WITHOUT_CLASSIFICATION	1.2248359631412138E-6	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999982129552923	WITHOUT_CLASSIFICATION	1.7870447077107827E-6	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999985528829098	WITHOUT_CLASSIFICATION	1.4471170902581526E-6	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.9999994438444803	WITHOUT_CLASSIFICATION	5.561555196474176E-7	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.9999998634087698	WITHOUT_CLASSIFICATION	1.3659123020457764E-7	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.9999997585429818	WITHOUT_CLASSIFICATION	2.414570182163146E-7	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.9999997976158953	WITHOUT_CLASSIFICATION	2.0238410464982274E-7	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.9999999922448012	WITHOUT_CLASSIFICATION	7.755198724323791E-9	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.9999998816351152	WITHOUT_CLASSIFICATION	1.1836488476832124E-7	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.9999991862730201	WITHOUT_CLASSIFICATION	8.137269799244302E-7	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.9999979977952264	WITHOUT_CLASSIFICATION	2.0022047736221825E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999194558091	WITHOUT_CLASSIFICATION	8.054419090424507E-8	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999940898826402	WITHOUT_CLASSIFICATION	5.91011735982935E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999904798081377	WITHOUT_CLASSIFICATION	9.520191862320606E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999904798081377	WITHOUT_CLASSIFICATION	9.520191862320606E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999798910918	WITHOUT_CLASSIFICATION	2.0108908130805828E-8	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999798910918	WITHOUT_CLASSIFICATION	2.0108908130805828E-8	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.999978506533278	WITHOUT_CLASSIFICATION	2.1493466721971105E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999970135707624	WITHOUT_CLASSIFICATION	2.986429237540626E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999983052189403	WITHOUT_CLASSIFICATION	1.6947810597678289E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999983052189403	WITHOUT_CLASSIFICATION	1.6947810597678289E-6	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999995256032009	WITHOUT_CLASSIFICATION	4.7439679909242707E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999995256032009	WITHOUT_CLASSIFICATION	4.7439679909242707E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.999998534266009	WITHOUT_CLASSIFICATION	1.4657339909631974E-6	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.999998534266009	WITHOUT_CLASSIFICATION	1.4657339909631974E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9985433784742754	WITHOUT_CLASSIFICATION	0.0014566215257245411	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.99999949719818	WITHOUT_CLASSIFICATION	5.028018199511939E-7	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999996805470247	WITHOUT_CLASSIFICATION	3.194529753595451E-7	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.999977316711586	WITHOUT_CLASSIFICATION	2.268328841405313E-5	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.9999797709793208	WITHOUT_CLASSIFICATION	2.0229020679180725E-5	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9999997399178248	WITHOUT_CLASSIFICATION	2.60082175224542E-7	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.9999996032674471	WITHOUT_CLASSIFICATION	3.9673255282174073E-7	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.9999998715110224	WITHOUT_CLASSIFICATION	1.284889775447327E-7	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.9999833825608779	WITHOUT_CLASSIFICATION	1.661743912210143E-5	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.9999997518488082	WITHOUT_CLASSIFICATION	2.4815119183793474E-7	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.9999999814329159	WITHOUT_CLASSIFICATION	1.856708417055344E-8	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.9999999159419359	WITHOUT_CLASSIFICATION	8.405806399158369E-8	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.9999985101186396	WITHOUT_CLASSIFICATION	1.489881360372423E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999804316556836	WITHOUT_CLASSIFICATION	1.9568344316412706E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999908196509556	WITHOUT_CLASSIFICATION	9.18034904433214E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999184902787569	WITHOUT_CLASSIFICATION	8.150972124302878E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999712547641654	WITHOUT_CLASSIFICATION	2.8745235834610423E-5	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999904445199025	WITHOUT_CLASSIFICATION	9.55548009753284E-6	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999927148907085	WITHOUT_CLASSIFICATION	7.285109291503809E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999969365966199	WITHOUT_CLASSIFICATION	3.0634033800438295E-6	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999839556525685	WITHOUT_CLASSIFICATION	1.6044347431478638E-5	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999999079570655	WITHOUT_CLASSIFICATION	9.204293444306676E-8	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.9999999435418871	WITHOUT_CLASSIFICATION	5.645811279940905E-8	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.9999999803855593	WITHOUT_CLASSIFICATION	1.9614440744126426E-8	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.9999955157332311	WITHOUT_CLASSIFICATION	4.484266768837571E-6	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999967944136078	WITHOUT_CLASSIFICATION	3.2055863922851566E-6	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999973573937153	WITHOUT_CLASSIFICATION	2.642606284688771E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999983419396523	WITHOUT_CLASSIFICATION	1.658060347696339E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999937154145	WITHOUT_CLASSIFICATION	6.284585512403115E-9	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999258032503613	WITHOUT_CLASSIFICATION	7.419674963868704E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999996038599426	WITHOUT_CLASSIFICATION	3.961400573532289E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999930139659329	WITHOUT_CLASSIFICATION	6.986034067034704E-6	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999996432271248	WITHOUT_CLASSIFICATION	3.567728753156216E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999771256220245	WITHOUT_CLASSIFICATION	2.2874377975555058E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999990739814497	WITHOUT_CLASSIFICATION	9.260185502921972E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999981177628808	WITHOUT_CLASSIFICATION	1.8822371192773305E-6	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999997125034626	WITHOUT_CLASSIFICATION	2.8749653733094793E-7	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999999216317746	WITHOUT_CLASSIFICATION	7.836822531318818E-8	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.9996419722691497	WITHOUT_CLASSIFICATION	3.5802773085018036E-4	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.9999999761468803	WITHOUT_CLASSIFICATION	2.38531196584385E-8	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.999998643100657	WITHOUT_CLASSIFICATION	1.356899343052611E-6	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.99999968122649	WITHOUT_CLASSIFICATION	3.1877351011958566E-7	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999994982400046	WITHOUT_CLASSIFICATION	5.017599954419795E-7	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.999995269555968	WITHOUT_CLASSIFICATION	4.730444031950331E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999983419396523	WITHOUT_CLASSIFICATION	1.658060347696339E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999908196509556	WITHOUT_CLASSIFICATION	9.18034904433214E-6	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999998710825736	WITHOUT_CLASSIFICATION	1.2891742630438613E-7	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999712547641654	WITHOUT_CLASSIFICATION	2.8745235834610423E-5	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999987751640368	WITHOUT_CLASSIFICATION	1.2248359631412138E-6	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999985528829098	WITHOUT_CLASSIFICATION	1.4471170902581526E-6	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.9999996425513428	WITHOUT_CLASSIFICATION	3.5744865725428677E-7	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.9999996616242384	WITHOUT_CLASSIFICATION	3.383757615772139E-7	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.999963167789068	WITHOUT_CLASSIFICATION	3.683221093197193E-5	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.9999996219869062	WITHOUT_CLASSIFICATION	3.780130939264588E-7	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999945936795384	WITHOUT_CLASSIFICATION	5.406320461639651E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999989596620411	WITHOUT_CLASSIFICATION	1.0403379589451057E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.999997567676612	WITHOUT_CLASSIFICATION	2.432323388045398E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999932511235186	WITHOUT_CLASSIFICATION	6.748876481400133E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999932511235186	WITHOUT_CLASSIFICATION	6.748876481400133E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999945936795384	WITHOUT_CLASSIFICATION	5.406320461639651E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999351277349332	WITHOUT_CLASSIFICATION	6.487226506678217E-5	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999989596620411	WITHOUT_CLASSIFICATION	1.0403379589451057E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.999997567676612	WITHOUT_CLASSIFICATION	2.432323388045398E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999985872619579	WITHOUT_CLASSIFICATION	1.412738042087261E-6	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999995050608602	WITHOUT_CLASSIFICATION	4.949391398124806E-7	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999995050608602	WITHOUT_CLASSIFICATION	4.949391398124806E-7	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999394939187836	WITHOUT_CLASSIFICATION	6.050608121646654E-5	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.9999932518855613	WITHOUT_CLASSIFICATION	6.748114438729427E-6	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.9999998757586641	WITHOUT_CLASSIFICATION	1.2424133588971198E-7	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.9999995762689015	WITHOUT_CLASSIFICATION	4.2373109851052053E-7	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.9999995337135903	WITHOUT_CLASSIFICATION	4.6628640966180603E-7	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.9999904478761479	WITHOUT_CLASSIFICATION	9.552123852046065E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999619862223054	WITHOUT_CLASSIFICATION	3.801377769460174E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999619862223054	WITHOUT_CLASSIFICATION	3.801377769460174E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999932511235186	WITHOUT_CLASSIFICATION	6.748876481400133E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999712547641654	WITHOUT_CLASSIFICATION	2.8745235834610423E-5	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999394939187836	WITHOUT_CLASSIFICATION	6.050608121646654E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999918744016099	WITHOUT_CLASSIFICATION	8.125598390165127E-6	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999997900618827	WITHOUT_CLASSIFICATION	2.0993811737153553E-7	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.999999997639917	WITHOUT_CLASSIFICATION	2.3600831054201474E-9	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9999789174794349	WITHOUT_CLASSIFICATION	2.1082520565016324E-5	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.9999837575064683	WITHOUT_CLASSIFICATION	1.6242493531750293E-5	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.9999998654632989	WITHOUT_CLASSIFICATION	1.3453670111890274E-7	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.9999998631562379	WITHOUT_CLASSIFICATION	1.3684376218281585E-7	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.9991376514499362	WITHOUT_CLASSIFICATION	8.623485500638033E-4	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.999988539609302	WITHOUT_CLASSIFICATION	1.146039069796583E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999918744016099	WITHOUT_CLASSIFICATION	8.125598390165127E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999918744016099	WITHOUT_CLASSIFICATION	8.125598390165127E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999918744016099	WITHOUT_CLASSIFICATION	8.125598390165127E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999918744016099	WITHOUT_CLASSIFICATION	8.125598390165127E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999804316556836	WITHOUT_CLASSIFICATION	1.9568344316412706E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.999998534266009	WITHOUT_CLASSIFICATION	1.4657339909631974E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999930139659329	WITHOUT_CLASSIFICATION	6.986034067034704E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999684469658	WITHOUT_CLASSIFICATION	3.155303415763034E-8	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999987751640368	WITHOUT_CLASSIFICATION	1.2248359631412138E-6	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999982129552923	WITHOUT_CLASSIFICATION	1.7870447077107827E-6	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999985528829098	WITHOUT_CLASSIFICATION	1.4471170902581526E-6	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.999999836468551	WITHOUT_CLASSIFICATION	1.635314489560289E-7	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.9999155496024035	WITHOUT_CLASSIFICATION	8.445039759650859E-5	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.9988683406899344	WITHOUT_CLASSIFICATION	0.0011316593100656365	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.999997241167422	WITHOUT_CLASSIFICATION	2.7588325780242035E-6	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999999893669608	WITHOUT_CLASSIFICATION	1.0633039199618641E-8	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999999893669608	WITHOUT_CLASSIFICATION	1.0633039199618641E-8	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9999950887906411	WITHOUT_CLASSIFICATION	4.911209358810274E-6	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.9999933868356493	WITHOUT_CLASSIFICATION	6.6131643507191235E-6	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999986167827727	WITHOUT_CLASSIFICATION	1.383217227295655E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999983419396523	WITHOUT_CLASSIFICATION	1.658060347696339E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999932511235186	WITHOUT_CLASSIFICATION	6.748876481400133E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.999999702880831	WITHOUT_CLASSIFICATION	2.9711916911602557E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999804316556836	WITHOUT_CLASSIFICATION	1.9568344316412706E-5	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999694206079	WITHOUT_CLASSIFICATION	3.0579392163434714E-8	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999983027816705	WITHOUT_CLASSIFICATION	1.6972183295853895E-6	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9999988114455584	WITHOUT_CLASSIFICATION	1.1885544416350076E-6	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.9997449290228242	WITHOUT_CLASSIFICATION	2.550709771758546E-4	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.9999980768338483	WITHOUT_CLASSIFICATION	1.923166151740479E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999983419396523	WITHOUT_CLASSIFICATION	1.658060347696339E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999932511235186	WITHOUT_CLASSIFICATION	6.748876481400133E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.999999952093444	WITHOUT_CLASSIFICATION	4.7906555975442514E-8	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999985900413072	WITHOUT_CLASSIFICATION	1.409958692780697E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999857874070555	WITHOUT_CLASSIFICATION	1.4212592944439391E-5	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999857874070555	WITHOUT_CLASSIFICATION	1.4212592944439391E-5	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999999540096369	WITHOUT_CLASSIFICATION	4.599036303093422E-8	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999821882118937	WITHOUT_CLASSIFICATION	1.781178810641229E-5	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999983052189403	WITHOUT_CLASSIFICATION	1.6947810597678289E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9985433784742754	WITHOUT_CLASSIFICATION	0.0014566215257245411	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999627016103185	WITHOUT_CLASSIFICATION	3.729838968150998E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999918744016099	WITHOUT_CLASSIFICATION	8.125598390165127E-6	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.9999990783684092	WITHOUT_CLASSIFICATION	9.216315908155863E-7	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.9999998699589256	WITHOUT_CLASSIFICATION	1.30041074405309E-7	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9999992887848996	WITHOUT_CLASSIFICATION	7.112151002472053E-7	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.99999997598716	WITHOUT_CLASSIFICATION	2.401284005008292E-8	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999918744016099	WITHOUT_CLASSIFICATION	8.125598390165127E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999996306026071	WITHOUT_CLASSIFICATION	3.693973928486357E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.999932511235186	WITHOUT_CLASSIFICATION	6.748876481400133E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999945936795384	WITHOUT_CLASSIFICATION	5.406320461639651E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999989596620411	WITHOUT_CLASSIFICATION	1.0403379589451057E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.999997567676612	WITHOUT_CLASSIFICATION	2.432323388045398E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9782653693809075	WITHOUT_CLASSIFICATION	0.02173463061909249	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.99999165588988	WITHOUT_CLASSIFICATION	8.344110119892355E-6	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.9999989983626514	WITHOUT_CLASSIFICATION	1.0016373486491468E-6	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.9999998835856372	WITHOUT_CLASSIFICATION	1.1641436287408733E-7	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.9999994739367545	WITHOUT_CLASSIFICATION	5.260632455236806E-7	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.9999360931042602	WITHOUT_CLASSIFICATION	6.390689573968496E-5	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.9999995778512741	WITHOUT_CLASSIFICATION	4.221487259173586E-7	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.9999969297845654	WITHOUT_CLASSIFICATION	3.0702154346075426E-6	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.9999982054792902	WITHOUT_CLASSIFICATION	1.794520709809933E-6	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9999901697912459	WITHOUT_CLASSIFICATION	9.830208754109386E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999994786593857	WITHOUT_CLASSIFICATION	5.213406144233034E-7	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999994786593857	WITHOUT_CLASSIFICATION	5.213406144233034E-7	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.9999990076422928	WITHOUT_CLASSIFICATION	9.923577071896018E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.999999836468551	WITHOUT_CLASSIFICATION	1.635314489560289E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999822528798	WITHOUT_CLASSIFICATION	1.774712023086288E-8	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999431381881617	WITHOUT_CLASSIFICATION	5.6861811838222634E-5	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999431381881617	WITHOUT_CLASSIFICATION	5.6861811838222634E-5	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9999802232980871	WITHOUT_CLASSIFICATION	1.977670191288144E-5	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9999983037555861	WITHOUT_CLASSIFICATION	1.6962444139389536E-6	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999998223717119	WITHOUT_CLASSIFICATION	1.7762828813682723E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999822528798	WITHOUT_CLASSIFICATION	1.774712023086288E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999822528798	WITHOUT_CLASSIFICATION	1.774712023086288E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999822528798	WITHOUT_CLASSIFICATION	1.774712023086288E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999615065017	WITHOUT_CLASSIFICATION	3.84934982753746E-8	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999431381881617	WITHOUT_CLASSIFICATION	5.6861811838222634E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999997488840606	WITHOUT_CLASSIFICATION	2.5111593936273125E-7	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.9999791721023759	WITHOUT_CLASSIFICATION	2.082789762415157E-5	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999615073347	WITHOUT_CLASSIFICATION	3.849266522916985E-8	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999997978913602	WITHOUT_CLASSIFICATION	2.021086398099624E-7	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.9999999928191435	WITHOUT_CLASSIFICATION	7.180856432845343E-9	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.9999999813836281	WITHOUT_CLASSIFICATION	1.861637180391354E-8	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9999947654888431	WITHOUT_CLASSIFICATION	5.234511156812003E-6	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9997434706592454	WITHOUT_CLASSIFICATION	2.5652934075462625E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9997434706592454	WITHOUT_CLASSIFICATION	2.5652934075462625E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9997434706592454	WITHOUT_CLASSIFICATION	2.5652934075462625E-4	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.999815076812686	WITHOUT_CLASSIFICATION	1.8492318731413177E-4	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.9999993279082641	WITHOUT_CLASSIFICATION	6.720917359879649E-7	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.9991150521625826	WITHOUT_CLASSIFICATION	8.849478374172936E-4	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.999983437320074	WITHOUT_CLASSIFICATION	1.656267992596739E-5	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999999908228056	WITHOUT_CLASSIFICATION	9.177194365682979E-9	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.9988458369245046	WITHOUT_CLASSIFICATION	0.0011541630754953846	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999885648607029	WITHOUT_CLASSIFICATION	1.1435139297201395E-5	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.9999870748893985	WITHOUT_CLASSIFICATION	1.2925110601586807E-5	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.9999999492480057	WITHOUT_CLASSIFICATION	5.0751994302067316E-8	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.9999999899000964	WITHOUT_CLASSIFICATION	1.0099903672428603E-8	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999998734713935	WITHOUT_CLASSIFICATION	1.265286064036533E-7	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.9999831535999224	WITHOUT_CLASSIFICATION	1.6846400077604066E-5	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999048757489	WITHOUT_CLASSIFICATION	9.512425119726985E-8	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999048757489	WITHOUT_CLASSIFICATION	9.512425119726985E-8	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999994072022761	WITHOUT_CLASSIFICATION	5.927977239882449E-7	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999994072022761	WITHOUT_CLASSIFICATION	5.927977239882449E-7	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9999867916734716	WITHOUT_CLASSIFICATION	1.3208326528352876E-5	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.9999997210076544	WITHOUT_CLASSIFICATION	2.789923455146335E-7	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.9999980504283703	WITHOUT_CLASSIFICATION	1.949571629665503E-6	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.9999999760425955	WITHOUT_CLASSIFICATION	2.3957404444803127E-8	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.9999820934934016	WITHOUT_CLASSIFICATION	1.790650659835139E-5	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999674217120913	WITHOUT_CLASSIFICATION	3.257828790862874E-5	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999837975704751	WITHOUT_CLASSIFICATION	1.6202429524945317E-5	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999985936866143	WITHOUT_CLASSIFICATION	1.4063133857978463E-6	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.9997962567487901	WITHOUT_CLASSIFICATION	2.0374325120983523E-4	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999994942731661	WITHOUT_CLASSIFICATION	5.057268338925185E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999998756365028	WITHOUT_CLASSIFICATION	1.2436349715452405E-7	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999997682942625	WITHOUT_CLASSIFICATION	2.3170573748969337E-6	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9998827208934471	WITHOUT_CLASSIFICATION	1.1727910655284966E-4	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.999994450813618	WITHOUT_CLASSIFICATION	5.549186382055529E-6	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.9999374193900996	WITHOUT_CLASSIFICATION	6.258060990048682E-5	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.999999993613371	WITHOUT_CLASSIFICATION	6.386629015521815E-9	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999960432693339	WITHOUT_CLASSIFICATION	3.956730666039065E-6	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999960432693339	WITHOUT_CLASSIFICATION	3.956730666039065E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999951890421042	WITHOUT_CLASSIFICATION	4.810957895813216E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999951890421042	WITHOUT_CLASSIFICATION	4.810957895813216E-6	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.9999470274402349	WITHOUT_CLASSIFICATION	5.297255976512428E-5	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.9999736664228114	WITHOUT_CLASSIFICATION	2.633357718854131E-5	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.9999512750333257	WITHOUT_CLASSIFICATION	4.872496667444436E-5	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.9999994117528501	WITHOUT_CLASSIFICATION	5.882471497893433E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999951831259	WITHOUT_CLASSIFICATION	4.8168740697761114E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999951831259	WITHOUT_CLASSIFICATION	4.8168740697761114E-9	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9998812786540849	WITHOUT_CLASSIFICATION	1.1872134591509573E-4	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.999969345551381	WITHOUT_CLASSIFICATION	3.065444861897897E-5	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999977478487095	WITHOUT_CLASSIFICATION	2.2521512904309893E-6	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.9999985298891588	WITHOUT_CLASSIFICATION	1.4701108412666948E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999244857295	WITHOUT_CLASSIFICATION	7.551427053915927E-8	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.9999961215647645	WITHOUT_CLASSIFICATION	3.87843523546767E-6	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999804707074393	WITHOUT_CLASSIFICATION	1.9529292560659264E-5	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999804707074393	WITHOUT_CLASSIFICATION	1.9529292560659264E-5	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9999992668193768	WITHOUT_CLASSIFICATION	7.331806232408371E-7	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999985000487795	WITHOUT_CLASSIFICATION	1.4999512204797382E-6	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999985000487795	WITHOUT_CLASSIFICATION	1.4999512204797382E-6	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999995129381047	WITHOUT_CLASSIFICATION	4.870618952684846E-7	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.9999887120316994	WITHOUT_CLASSIFICATION	1.1287968300612444E-5	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.9999999948681544	WITHOUT_CLASSIFICATION	5.131845547982309E-9	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.9999996822140955	WITHOUT_CLASSIFICATION	3.177859045110551E-7	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9999958098664503	WITHOUT_CLASSIFICATION	4.19013354972361E-6	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.9999999867453404	WITHOUT_CLASSIFICATION	1.325465967512803E-8	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.9999994199751046	WITHOUT_CLASSIFICATION	5.800248953594086E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999951831259	WITHOUT_CLASSIFICATION	4.8168740697761114E-9	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999977478487095	WITHOUT_CLASSIFICATION	2.2521512904309893E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999933790343	WITHOUT_CLASSIFICATION	6.620965601983428E-9	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999952504872235	WITHOUT_CLASSIFICATION	4.7495127765233255E-6	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999923480666825	WITHOUT_CLASSIFICATION	7.651933317597701E-6	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999998335481249	WITHOUT_CLASSIFICATION	1.664518750811004E-7	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.9999956173905441	WITHOUT_CLASSIFICATION	4.38260945588523E-6	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999999165963376	WITHOUT_CLASSIFICATION	8.340366246404152E-8	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.9999998877660972	WITHOUT_CLASSIFICATION	1.1223390284668501E-7	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9999858418921869	WITHOUT_CLASSIFICATION	1.4158107813169434E-5	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.9999999390836979	WITHOUT_CLASSIFICATION	6.091630216526657E-8	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.9999411377679581	WITHOUT_CLASSIFICATION	5.886223204192083E-5	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.9999972303722475	WITHOUT_CLASSIFICATION	2.7696277524414486E-6	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.9999994350075603	WITHOUT_CLASSIFICATION	5.649924398450531E-7	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9979726792360907	WITHOUT_CLASSIFICATION	0.002027320763909322	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999233134671	WITHOUT_CLASSIFICATION	7.668653287825294E-8	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999943709160335	WITHOUT_CLASSIFICATION	5.629083966438255E-6	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9999842066167377	WITHOUT_CLASSIFICATION	1.5793383262339016E-5	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999998593668465	WITHOUT_CLASSIFICATION	1.4063315352463838E-7	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.9999630246562966	WITHOUT_CLASSIFICATION	3.697534370333951E-5	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.9999991028543476	WITHOUT_CLASSIFICATION	8.971456525136285E-7	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999997870200588	WITHOUT_CLASSIFICATION	2.1297994123374575E-7	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9999979222290449	WITHOUT_CLASSIFICATION	2.077770955150215E-6	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.9999996989073136	WITHOUT_CLASSIFICATION	3.0109268642913697E-7	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999999344244556	WITHOUT_CLASSIFICATION	6.557554448919022E-8	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.999655904587962	WITHOUT_CLASSIFICATION	3.4409541203798055E-4	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.9999999346437027	WITHOUT_CLASSIFICATION	6.535629732755083E-8	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999762701048	WITHOUT_CLASSIFICATION	2.3729895265080798E-8	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999998384188451	WITHOUT_CLASSIFICATION	1.6158115492475608E-7	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999762701048	WITHOUT_CLASSIFICATION	2.3729895265080798E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998631867684	WITHOUT_CLASSIFICATION	1.3681323157460596E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994867542135	WITHOUT_CLASSIFICATION	5.132457865489841E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996020655316	WITHOUT_CLASSIFICATION	3.9793446834572505E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998444270572	WITHOUT_CLASSIFICATION	1.5557294270335733E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998023884932	WITHOUT_CLASSIFICATION	1.9761150687776073E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991546365045	WITHOUT_CLASSIFICATION	8.453634955429571E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992550206658	WITHOUT_CLASSIFICATION	7.449793341302411E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999933790343	WITHOUT_CLASSIFICATION	6.620965601983428E-9	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999994107324479	WITHOUT_CLASSIFICATION	5.892675521316523E-7	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999994107324479	WITHOUT_CLASSIFICATION	5.892675521316523E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999414640361	WITHOUT_CLASSIFICATION	5.853596378510575E-8	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999414640361	WITHOUT_CLASSIFICATION	5.853596378510575E-8	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999414640361	WITHOUT_CLASSIFICATION	5.853596378510575E-8	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999999637220397	WITHOUT_CLASSIFICATION	3.6277960212367766E-8	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999999637220397	WITHOUT_CLASSIFICATION	3.6277960212367766E-8	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999990500895586	WITHOUT_CLASSIFICATION	9.499104414052301E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999990500895586	WITHOUT_CLASSIFICATION	9.499104414052301E-7	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.9999986465969626	WITHOUT_CLASSIFICATION	1.3534030374332484E-6	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999995350101735	WITHOUT_CLASSIFICATION	4.6498982652177684E-7	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999995350101735	WITHOUT_CLASSIFICATION	4.6498982652177684E-7	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.9999944785913355	WITHOUT_CLASSIFICATION	5.521408664582312E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.999941936577521	WITHOUT_CLASSIFICATION	5.8063422479065264E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.999941936577521	WITHOUT_CLASSIFICATION	5.8063422479065264E-5	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9992431640450873	WITHOUT_CLASSIFICATION	7.568359549126347E-4	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9992431640450873	WITHOUT_CLASSIFICATION	7.568359549126347E-4	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9992431640450873	WITHOUT_CLASSIFICATION	7.568359549126347E-4	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999975194426962	WITHOUT_CLASSIFICATION	2.480557303704408E-6	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.9977561930050376	WITHOUT_CLASSIFICATION	0.002243806994962442	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.9999744096805906	WITHOUT_CLASSIFICATION	2.5590319409509883E-5	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999694206079	WITHOUT_CLASSIFICATION	3.0579392163434714E-8	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999694206079	WITHOUT_CLASSIFICATION	3.0579392163434714E-8	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999992811680557	WITHOUT_CLASSIFICATION	7.1883194424908E-7	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999995129381047	WITHOUT_CLASSIFICATION	4.870618952684846E-7	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999998593668465	WITHOUT_CLASSIFICATION	1.4063315352463838E-7	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999998593668465	WITHOUT_CLASSIFICATION	1.4063315352463838E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994867542135	WITHOUT_CLASSIFICATION	5.132457865489841E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999933790343	WITHOUT_CLASSIFICATION	6.620965601983428E-9	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999975194426962	WITHOUT_CLASSIFICATION	2.480557303704408E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999975194426962	WITHOUT_CLASSIFICATION	2.480557303704408E-6	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.9999966422112497	WITHOUT_CLASSIFICATION	3.3577887502156414E-6	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.9999999544873941	WITHOUT_CLASSIFICATION	4.551260600843156E-8	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.9999999389375592	WITHOUT_CLASSIFICATION	6.106244077185848E-8	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.9999981133782814	WITHOUT_CLASSIFICATION	1.8866217186048043E-6	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.9999998935814338	WITHOUT_CLASSIFICATION	1.0641856619286919E-7	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999984999954393	WITHOUT_CLASSIFICATION	1.500004560658616E-6	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.9999628349301142	WITHOUT_CLASSIFICATION	3.71650698858563E-5	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999999990562257	WITHOUT_CLASSIFICATION	9.437743194027849E-10	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.9999999908100693	WITHOUT_CLASSIFICATION	9.189930715810524E-9	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.9999987990726078	WITHOUT_CLASSIFICATION	1.200927392255096E-6	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.9999995924546252	WITHOUT_CLASSIFICATION	4.075453747796087E-7	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.9999986546824319	WITHOUT_CLASSIFICATION	1.3453175681597742E-6	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999994982400046	WITHOUT_CLASSIFICATION	5.017599954419795E-7	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.9999988418764125	WITHOUT_CLASSIFICATION	1.1581235874545307E-6	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.9999728838145056	WITHOUT_CLASSIFICATION	2.7116185494512893E-5	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999894730675315	WITHOUT_CLASSIFICATION	1.0526932468606182E-5	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.9999987888524697	WITHOUT_CLASSIFICATION	1.2111475302989592E-6	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.9999297217291032	WITHOUT_CLASSIFICATION	7.027827089679654E-5	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.9999870780711552	WITHOUT_CLASSIFICATION	1.2921928844888391E-5	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.9999996434262889	WITHOUT_CLASSIFICATION	3.5657371112687043E-7	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.9999299941048598	WITHOUT_CLASSIFICATION	7.000589514018598E-5	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.9999340378735758	WITHOUT_CLASSIFICATION	6.596212642414634E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999951831259	WITHOUT_CLASSIFICATION	4.8168740697761114E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999951831259	WITHOUT_CLASSIFICATION	4.8168740697761114E-9	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999244857295	WITHOUT_CLASSIFICATION	7.551427053915927E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998631867684	WITHOUT_CLASSIFICATION	1.3681323157460596E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998444270572	WITHOUT_CLASSIFICATION	1.5557294270335733E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998023884932	WITHOUT_CLASSIFICATION	1.9761150687776073E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998023884932	WITHOUT_CLASSIFICATION	1.9761150687776073E-7	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9983638846731894	WITHOUT_CLASSIFICATION	0.0016361153268107018	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.9999935994712331	WITHOUT_CLASSIFICATION	6.4005287668533335E-6	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.9999998393385385	WITHOUT_CLASSIFICATION	1.6066146136189993E-7	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999996888437295	WITHOUT_CLASSIFICATION	3.111562705607664E-7	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.9999996732817845	WITHOUT_CLASSIFICATION	3.2671821541049725E-7	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.9999999922631343	WITHOUT_CLASSIFICATION	7.736865775589517E-9	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.9999985105168913	WITHOUT_CLASSIFICATION	1.4894831086453089E-6	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9999974377477208	WITHOUT_CLASSIFICATION	2.5622522793140707E-6	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.999640098341336	WITHOUT_CLASSIFICATION	3.5990165866390275E-4	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.9999992757100262	WITHOUT_CLASSIFICATION	7.242899738618582E-7	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.9999996945313985	WITHOUT_CLASSIFICATION	3.0546860156094207E-7	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.9999986550362295	WITHOUT_CLASSIFICATION	1.3449637704514424E-6	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.9999985636755753	WITHOUT_CLASSIFICATION	1.4363244246895132E-6	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.9999997292447519	WITHOUT_CLASSIFICATION	2.707552481170364E-7	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.9999998315646335	WITHOUT_CLASSIFICATION	1.6843536643080076E-7	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999969864254	WITHOUT_CLASSIFICATION	3.013574650099122E-9	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.9999981880367568	WITHOUT_CLASSIFICATION	1.811963243159785E-6	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.9999974700307448	WITHOUT_CLASSIFICATION	2.529969255220575E-6	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.9999997421699935	WITHOUT_CLASSIFICATION	2.578300064525653E-7	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.9999997368817412	WITHOUT_CLASSIFICATION	2.63118258772228E-7	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.9999975355996594	WITHOUT_CLASSIFICATION	2.464400340595516E-6	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.9999985975808673	WITHOUT_CLASSIFICATION	1.4024191326983383E-6	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999969864254	WITHOUT_CLASSIFICATION	3.013574650099122E-9	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.999870015518955	WITHOUT_CLASSIFICATION	1.2998448104490357E-4	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999982602387911	WITHOUT_CLASSIFICATION	1.7397612088323208E-6	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999988018397046	WITHOUT_CLASSIFICATION	1.1981602954446947E-6	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.999985393733753	WITHOUT_CLASSIFICATION	1.460626624695946E-5	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.9999999291834593	WITHOUT_CLASSIFICATION	7.0816540780991E-8	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999998384188451	WITHOUT_CLASSIFICATION	1.6158115492475608E-7	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999982602387911	WITHOUT_CLASSIFICATION	1.7397612088323208E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999899456598159	WITHOUT_CLASSIFICATION	1.0054340184040468E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931013918212	WITHOUT_CLASSIFICATION	6.898608178779514E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999460516097517	WITHOUT_CLASSIFICATION	5.394839024841534E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999460516097517	WITHOUT_CLASSIFICATION	5.394839024841534E-5	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.9999899371702482	WITHOUT_CLASSIFICATION	1.0062829751808792E-5	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.999994320361934	WITHOUT_CLASSIFICATION	5.679638065937311E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.999999191953759	WITHOUT_CLASSIFICATION	8.080462410871153E-7	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9525359555125914	WITHOUT_CLASSIFICATION	0.0474640444874086	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.9999989535289046	WITHOUT_CLASSIFICATION	1.0464710954060432E-6	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9999914536415275	WITHOUT_CLASSIFICATION	8.54635847246021E-6	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9991743022354385	WITHOUT_CLASSIFICATION	8.256977645615556E-4	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9991743022354385	WITHOUT_CLASSIFICATION	8.256977645615556E-4	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.9999998793228853	WITHOUT_CLASSIFICATION	1.2067711478793914E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999998756365028	WITHOUT_CLASSIFICATION	1.2436349715452405E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999899456598159	WITHOUT_CLASSIFICATION	1.0054340184040468E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999899456598159	WITHOUT_CLASSIFICATION	1.0054340184040468E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931013918212	WITHOUT_CLASSIFICATION	6.898608178779514E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999460516097517	WITHOUT_CLASSIFICATION	5.394839024841534E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999460516097517	WITHOUT_CLASSIFICATION	5.394839024841534E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.999999191953759	WITHOUT_CLASSIFICATION	8.080462410871153E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.999999191953759	WITHOUT_CLASSIFICATION	8.080462410871153E-7	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.9999999664475002	WITHOUT_CLASSIFICATION	3.355249979980019E-8	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9358363857461414	WITHOUT_CLASSIFICATION	0.06416361425385866	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.9999998679473937	WITHOUT_CLASSIFICATION	1.3205260622714356E-7	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999937953005931	WITHOUT_CLASSIFICATION	6.204699406988277E-6	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999937953005931	WITHOUT_CLASSIFICATION	6.204699406988277E-6	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9999991354390801	WITHOUT_CLASSIFICATION	8.645609198661389E-7	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.9999974076602883	WITHOUT_CLASSIFICATION	2.5923397116710977E-6	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.9999818859479437	WITHOUT_CLASSIFICATION	1.811405205624764E-5	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.999764979256452	WITHOUT_CLASSIFICATION	2.3502074354799733E-4	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999834577933009	WITHOUT_CLASSIFICATION	1.6542206699157768E-5	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.9999983688838175	WITHOUT_CLASSIFICATION	1.6311161823667136E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999891111079992	WITHOUT_CLASSIFICATION	1.0888892000750286E-5	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999969240525981	WITHOUT_CLASSIFICATION	3.0759474019723506E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999816314796353	WITHOUT_CLASSIFICATION	1.8368520364737124E-5	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999518557565467	WITHOUT_CLASSIFICATION	4.814424345340254E-5	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999518557565467	WITHOUT_CLASSIFICATION	4.814424345340254E-5	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9999880510993614	WITHOUT_CLASSIFICATION	1.1948900638641512E-5	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999999657942118	WITHOUT_CLASSIFICATION	3.420578830389413E-8	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999997401982033	WITHOUT_CLASSIFICATION	2.598017967354483E-7	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.9999999949984094	WITHOUT_CLASSIFICATION	5.0015905370153274E-9	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999984043699283	WITHOUT_CLASSIFICATION	1.595630071742462E-6	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999992064634249	WITHOUT_CLASSIFICATION	7.935365750432874E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999899456598159	WITHOUT_CLASSIFICATION	1.0054340184040468E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931013918212	WITHOUT_CLASSIFICATION	6.898608178779514E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931013918212	WITHOUT_CLASSIFICATION	6.898608178779514E-6	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.9999990366028475	WITHOUT_CLASSIFICATION	9.633971524858096E-7	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999864732963806	WITHOUT_CLASSIFICATION	1.352670361948255E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999997834248567	WITHOUT_CLASSIFICATION	2.1657514312444757E-7	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999626901026036	WITHOUT_CLASSIFICATION	3.730989739636027E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999626901026036	WITHOUT_CLASSIFICATION	3.730989739636027E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999998791179867	WITHOUT_CLASSIFICATION	1.2088201328184397E-7	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.9995100570839455	WITHOUT_CLASSIFICATION	4.899429160545575E-4	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.9997937716723798	WITHOUT_CLASSIFICATION	2.0622832762007596E-4	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.999999950373649	WITHOUT_CLASSIFICATION	4.9626350992752693E-8	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.9999998639572957	WITHOUT_CLASSIFICATION	1.3604270433409434E-7	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.9999578316537878	WITHOUT_CLASSIFICATION	4.216834621218913E-5	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.9998422258494775	WITHOUT_CLASSIFICATION	1.5777415052259285E-4	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.9999999739135702	WITHOUT_CLASSIFICATION	2.608642973112962E-8	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.9999999323824562	WITHOUT_CLASSIFICATION	6.761754375970352E-8	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.9999999429554339	WITHOUT_CLASSIFICATION	5.704456597700079E-8	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9999607073803385	WITHOUT_CLASSIFICATION	3.9292619661417246E-5	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.9999999651638016	WITHOUT_CLASSIFICATION	3.4836198310319797E-8	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9999997130739964	WITHOUT_CLASSIFICATION	2.8692600362395247E-7	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.9999959136421344	WITHOUT_CLASSIFICATION	4.086357865623347E-6	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.9999999991541236	WITHOUT_CLASSIFICATION	8.458764089289098E-10	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999997525310519	WITHOUT_CLASSIFICATION	2.4746894813214447E-7	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.9997789946458198	WITHOUT_CLASSIFICATION	2.2100535418017407E-4	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.9999976589201143	WITHOUT_CLASSIFICATION	2.341079885679123E-6	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.999996219540035	WITHOUT_CLASSIFICATION	3.7804599648973832E-6	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.9999341896083961	WITHOUT_CLASSIFICATION	6.581039160389334E-5	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.9997661819143102	WITHOUT_CLASSIFICATION	2.3381808568967126E-4	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.9999880966826723	WITHOUT_CLASSIFICATION	1.1903317327698438E-5	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999999922730327	WITHOUT_CLASSIFICATION	7.726967269673524E-9	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999996141308658	WITHOUT_CLASSIFICATION	3.858691342670914E-7	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999996141308658	WITHOUT_CLASSIFICATION	3.858691342670914E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999049881336134	WITHOUT_CLASSIFICATION	9.501186638668207E-5	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999996444891809	WITHOUT_CLASSIFICATION	3.555108191526031E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999049881336134	WITHOUT_CLASSIFICATION	9.501186638668207E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999049881336134	WITHOUT_CLASSIFICATION	9.501186638668207E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999943709160335	WITHOUT_CLASSIFICATION	5.629083966438255E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999899456598159	WITHOUT_CLASSIFICATION	1.0054340184040468E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931013918212	WITHOUT_CLASSIFICATION	6.898608178779514E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931013918212	WITHOUT_CLASSIFICATION	6.898608178779514E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999460516097517	WITHOUT_CLASSIFICATION	5.394839024841534E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999460516097517	WITHOUT_CLASSIFICATION	5.394839024841534E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.999999191953759	WITHOUT_CLASSIFICATION	8.080462410871153E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.999999191953759	WITHOUT_CLASSIFICATION	8.080462410871153E-7	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999891111079992	WITHOUT_CLASSIFICATION	1.0888892000750286E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999825150147	WITHOUT_CLASSIFICATION	1.7484985397901455E-8	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.9999162988244309	WITHOUT_CLASSIFICATION	8.370117556908037E-5	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.9999993524908523	WITHOUT_CLASSIFICATION	6.475091478632801E-7	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9746636234336956	WITHOUT_CLASSIFICATION	0.025336376566304393	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9947995155009635	WITHOUT_CLASSIFICATION	0.005200484499036523	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.9945218903280723	DEFECT	0.005478109671927716	WITHOUT_CLASSIFICATION
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999963868573821	WITHOUT_CLASSIFICATION	3.613142617823776E-6	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9999992132284373	WITHOUT_CLASSIFICATION	7.867715627501339E-7	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.9999918927940826	WITHOUT_CLASSIFICATION	8.107205917393346E-6	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.9999998260179586	WITHOUT_CLASSIFICATION	1.739820414964773E-7	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999534610451492	WITHOUT_CLASSIFICATION	4.6538954850919457E-5	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.9999021240317439	WITHOUT_CLASSIFICATION	9.787596825603639E-5	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.9999999170188615	WITHOUT_CLASSIFICATION	8.298113861022901E-8	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999997525310519	WITHOUT_CLASSIFICATION	2.4746894813214447E-7	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.999987826968863	WITHOUT_CLASSIFICATION	1.2173031137075028E-5	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999979104627291	WITHOUT_CLASSIFICATION	2.0895372708007976E-6	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999963538921666	WITHOUT_CLASSIFICATION	3.646107833402291E-6	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.9988041735841302	WITHOUT_CLASSIFICATION	0.0011958264158698256	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999825150147	WITHOUT_CLASSIFICATION	1.7484985397901455E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999825150147	WITHOUT_CLASSIFICATION	1.7484985397901455E-8	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9998827208934471	WITHOUT_CLASSIFICATION	1.1727910655284966E-4	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999943709160335	WITHOUT_CLASSIFICATION	5.629083966438255E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9998929569013921	WITHOUT_CLASSIFICATION	1.0704309860788406E-4	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999899456598159	WITHOUT_CLASSIFICATION	1.0054340184040468E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931013918212	WITHOUT_CLASSIFICATION	6.898608178779514E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931013918212	WITHOUT_CLASSIFICATION	6.898608178779514E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931013918212	WITHOUT_CLASSIFICATION	6.898608178779514E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999460516097517	WITHOUT_CLASSIFICATION	5.394839024841534E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999460516097517	WITHOUT_CLASSIFICATION	5.394839024841534E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999460516097517	WITHOUT_CLASSIFICATION	5.394839024841534E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999460516097517	WITHOUT_CLASSIFICATION	5.394839024841534E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999460516097517	WITHOUT_CLASSIFICATION	5.394839024841534E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.999999191953759	WITHOUT_CLASSIFICATION	8.080462410871153E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.999999191953759	WITHOUT_CLASSIFICATION	8.080462410871153E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.999999191953759	WITHOUT_CLASSIFICATION	8.080462410871153E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.999999191953759	WITHOUT_CLASSIFICATION	8.080462410871153E-7	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9525359555125914	WITHOUT_CLASSIFICATION	0.0474640444874086	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999825150147	WITHOUT_CLASSIFICATION	1.7484985397901455E-8	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.9999997389821368	WITHOUT_CLASSIFICATION	2.610178632678963E-7	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999847736659339	WITHOUT_CLASSIFICATION	1.5226334066211212E-5	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999984515901724	WITHOUT_CLASSIFICATION	1.548409827652629E-6	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999984515901724	WITHOUT_CLASSIFICATION	1.548409827652629E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999976984286117	WITHOUT_CLASSIFICATION	2.301571388134598E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999976984286117	WITHOUT_CLASSIFICATION	2.301571388134598E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999976984286117	WITHOUT_CLASSIFICATION	2.301571388134598E-6	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999767718923591	WITHOUT_CLASSIFICATION	2.3228107640877723E-5	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.9999999999895758	WITHOUT_CLASSIFICATION	1.0424259429133889E-11	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.9999998690223452	WITHOUT_CLASSIFICATION	1.3097765492795703E-7	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999823789217448	WITHOUT_CLASSIFICATION	1.7621078255220083E-5	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987727524572	WITHOUT_CLASSIFICATION	1.2272475427567792E-6	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.9999998843579696	WITHOUT_CLASSIFICATION	1.1564203033982279E-7	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.9999995488687926	WITHOUT_CLASSIFICATION	4.5113120735295797E-7	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.9999999295494021	WITHOUT_CLASSIFICATION	7.045059792352225E-8	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.999994520880052	WITHOUT_CLASSIFICATION	5.4791199480242545E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999244857295	WITHOUT_CLASSIFICATION	7.551427053915927E-8	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999233134671	WITHOUT_CLASSIFICATION	7.668653287825294E-8	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999943709160335	WITHOUT_CLASSIFICATION	5.629083966438255E-6	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.999987826968863	WITHOUT_CLASSIFICATION	1.2173031137075028E-5	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999963538921666	WITHOUT_CLASSIFICATION	3.646107833402291E-6	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999845104537476	WITHOUT_CLASSIFICATION	1.5489546252479092E-5	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.9935542895114258	WITHOUT_CLASSIFICATION	0.006445710488574185	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999968524798	WITHOUT_CLASSIFICATION	3.1475201809186472E-9	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999968524798	WITHOUT_CLASSIFICATION	3.1475201809186472E-9	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999845104537476	WITHOUT_CLASSIFICATION	1.5489546252479092E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999557781933	WITHOUT_CLASSIFICATION	4.422180673209581E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999825150147	WITHOUT_CLASSIFICATION	1.7484985397901455E-8	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.999999502287483	WITHOUT_CLASSIFICATION	4.977125170460614E-7	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999658937643	WITHOUT_CLASSIFICATION	3.4106235640179514E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999825150147	WITHOUT_CLASSIFICATION	1.7484985397901455E-8	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9999996304203822	WITHOUT_CLASSIFICATION	3.695796178257191E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999998145221851	WITHOUT_CLASSIFICATION	1.854778148239993E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999825150147	WITHOUT_CLASSIFICATION	1.7484985397901455E-8	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.9999925983119035	WITHOUT_CLASSIFICATION	7.40168809656024E-6	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999825150147	WITHOUT_CLASSIFICATION	1.7484985397901455E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999825150147	WITHOUT_CLASSIFICATION	1.7484985397901455E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999825150147	WITHOUT_CLASSIFICATION	1.7484985397901455E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999615065017	WITHOUT_CLASSIFICATION	3.84934982753746E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999615065017	WITHOUT_CLASSIFICATION	3.84934982753746E-8	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999985936866143	WITHOUT_CLASSIFICATION	1.4063133857978463E-6	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.99999968122649	WITHOUT_CLASSIFICATION	3.1877351011958566E-7	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999994942731661	WITHOUT_CLASSIFICATION	5.057268338925185E-7	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9998827208934471	WITHOUT_CLASSIFICATION	1.1727910655284966E-4	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999244857295	WITHOUT_CLASSIFICATION	7.551427053915927E-8	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999460516097517	WITHOUT_CLASSIFICATION	5.394839024841534E-5	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9525359555125914	WITHOUT_CLASSIFICATION	0.0474640444874086	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9991743022354385	WITHOUT_CLASSIFICATION	8.256977645615556E-4	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999979104627291	WITHOUT_CLASSIFICATION	2.0895372708007976E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999557781933	WITHOUT_CLASSIFICATION	4.422180673209581E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999557781933	WITHOUT_CLASSIFICATION	4.422180673209581E-8	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999845104537476	WITHOUT_CLASSIFICATION	1.5489546252479092E-5	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999658937643	WITHOUT_CLASSIFICATION	3.4106235640179514E-8	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.999999502287483	WITHOUT_CLASSIFICATION	4.977125170460614E-7	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.999999502287483	WITHOUT_CLASSIFICATION	4.977125170460614E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999998145221851	WITHOUT_CLASSIFICATION	1.854778148239993E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999998145221851	WITHOUT_CLASSIFICATION	1.854778148239993E-7	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999993656614972	WITHOUT_CLASSIFICATION	6.343385028788794E-7	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.9999292276876479	WITHOUT_CLASSIFICATION	7.077231235207265E-5	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9999998893214526	WITHOUT_CLASSIFICATION	1.1067854747964369E-7	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.9999871899830817	WITHOUT_CLASSIFICATION	1.281001691836755E-5	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.9978686770993492	WITHOUT_CLASSIFICATION	0.00213132290065075	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999989856540004	WITHOUT_CLASSIFICATION	1.0143459996240935E-6	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9999462563633247	WITHOUT_CLASSIFICATION	5.374363667526481E-5	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999998229049402	WITHOUT_CLASSIFICATION	1.7709505986847142E-7	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999998229049402	WITHOUT_CLASSIFICATION	1.7709505986847142E-7	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.9999817076749024	WITHOUT_CLASSIFICATION	1.829232509762889E-5	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.9997592569353081	WITHOUT_CLASSIFICATION	2.407430646919828E-4	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.9999963623822554	WITHOUT_CLASSIFICATION	3.6376177444515724E-6	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.999993560342518	WITHOUT_CLASSIFICATION	6.439657482071523E-6	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999949140966141	WITHOUT_CLASSIFICATION	5.0859033858811275E-6	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999914951792	WITHOUT_CLASSIFICATION	8.504820842674785E-9	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999999493213066	WITHOUT_CLASSIFICATION	5.0678693299144235E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.8831498928285553	WITHOUT_CLASSIFICATION	0.11685010717144477	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999999240091568	WITHOUT_CLASSIFICATION	7.599084320911947E-8	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999974806293905	WITHOUT_CLASSIFICATION	2.5193706093634406E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.999751594866062	WITHOUT_CLASSIFICATION	2.4840513393799404E-4	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999969232642	WITHOUT_CLASSIFICATION	3.0767357618256004E-9	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999969232642	WITHOUT_CLASSIFICATION	3.0767357618256004E-9	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.999999767578288	WITHOUT_CLASSIFICATION	2.3242171204047592E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999998756365028	WITHOUT_CLASSIFICATION	1.2436349715452405E-7	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999233134671	WITHOUT_CLASSIFICATION	7.668653287825294E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999557781933	WITHOUT_CLASSIFICATION	4.422180673209581E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999557781933	WITHOUT_CLASSIFICATION	4.422180673209581E-8	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999997391347643	WITHOUT_CLASSIFICATION	2.6086523565637473E-7	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.999998610824095	WITHOUT_CLASSIFICATION	1.3891759049695768E-6	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.999998610824095	WITHOUT_CLASSIFICATION	1.3891759049695768E-6	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.9999399116079825	WITHOUT_CLASSIFICATION	6.008839201757747E-5	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.9999992766418005	WITHOUT_CLASSIFICATION	7.233581994180873E-7	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.9999990636865898	WITHOUT_CLASSIFICATION	9.363134101929741E-7	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9999997232066902	WITHOUT_CLASSIFICATION	2.767933098174795E-7	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.9999999601331399	WITHOUT_CLASSIFICATION	3.9866860131855346E-8	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999700494065688	WITHOUT_CLASSIFICATION	2.9950593431314803E-5	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999700494065688	WITHOUT_CLASSIFICATION	2.9950593431314803E-5	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999998605738497	WITHOUT_CLASSIFICATION	1.394261502367544E-7	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.9999970900301893	WITHOUT_CLASSIFICATION	2.909969810633928E-6	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.9999999371469581	WITHOUT_CLASSIFICATION	6.28530419295832E-8	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.9999998765491318	WITHOUT_CLASSIFICATION	1.2345086811400662E-7	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.99999989718309	WITHOUT_CLASSIFICATION	1.028169099999702E-7	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.9999999032479012	WITHOUT_CLASSIFICATION	9.675209881687132E-8	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.9999986224316623	WITHOUT_CLASSIFICATION	1.3775683377765E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999996955772525	WITHOUT_CLASSIFICATION	3.0442274752059363E-7	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.998631895223821	WITHOUT_CLASSIFICATION	0.0013681047761789637	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999987708994984	WITHOUT_CLASSIFICATION	1.2291005017064643E-6	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999996730307621	WITHOUT_CLASSIFICATION	3.2696923791268097E-7	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999997391347643	WITHOUT_CLASSIFICATION	2.6086523565637473E-7	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.9999982706404581	WITHOUT_CLASSIFICATION	1.7293595419167272E-6	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.9999894213582419	WITHOUT_CLASSIFICATION	1.0578641758255335E-5	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.9998999822519173	WITHOUT_CLASSIFICATION	1.0001774808273069E-4	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.9999997399039482	WITHOUT_CLASSIFICATION	2.600960518163049E-7	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.9999915148029068	WITHOUT_CLASSIFICATION	8.485197093287652E-6	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999955908226289	WITHOUT_CLASSIFICATION	4.40917737109725E-6	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999999794347341	WITHOUT_CLASSIFICATION	2.056526586696876E-8	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9998465847664852	WITHOUT_CLASSIFICATION	1.534152335147608E-4	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.9999016963150446	WITHOUT_CLASSIFICATION	9.830368495548394E-5	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.9999879025274809	WITHOUT_CLASSIFICATION	1.2097472519087032E-5	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.9999168253622989	WITHOUT_CLASSIFICATION	8.317463770114272E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999497776372803	WITHOUT_CLASSIFICATION	5.022236271964653E-5	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999984721583095	WITHOUT_CLASSIFICATION	1.5278416904865E-6	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.9999584320671228	WITHOUT_CLASSIFICATION	4.1567932877214886E-5	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.9999950865178105	WITHOUT_CLASSIFICATION	4.913482189414192E-6	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.9998704058955143	WITHOUT_CLASSIFICATION	1.2959410448570323E-4	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.9999862535772401	WITHOUT_CLASSIFICATION	1.3746422759899318E-5	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.9999983535436996	WITHOUT_CLASSIFICATION	1.6464563004959476E-6	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.99999960406744	WITHOUT_CLASSIFICATION	3.959325598907648E-7	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.9999987860702767	WITHOUT_CLASSIFICATION	1.213929723275412E-6	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.9999938079095599	WITHOUT_CLASSIFICATION	6.192090440017815E-6	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.9999881793320661	WITHOUT_CLASSIFICATION	1.1820667933871648E-5	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999765909860595	WITHOUT_CLASSIFICATION	2.3409013940457562E-5	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.9999971591539815	WITHOUT_CLASSIFICATION	2.8408460185745554E-6	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999997305207051	WITHOUT_CLASSIFICATION	2.69479294837275E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999999539753042	WITHOUT_CLASSIFICATION	4.6024695799428454E-8	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.9999869992725972	WITHOUT_CLASSIFICATION	1.3000727402912881E-5	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999433646645388	WITHOUT_CLASSIFICATION	5.663533546105784E-5	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999636752033184	WITHOUT_CLASSIFICATION	3.632479668160755E-5	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999765909860595	WITHOUT_CLASSIFICATION	2.3409013940457562E-5	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999997305207051	WITHOUT_CLASSIFICATION	2.69479294837275E-7	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999997305207051	WITHOUT_CLASSIFICATION	2.69479294837275E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999999539753042	WITHOUT_CLASSIFICATION	4.6024695799428454E-8	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.9999999663825292	WITHOUT_CLASSIFICATION	3.36174708799024E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999998386311011	WITHOUT_CLASSIFICATION	1.6136889878145708E-7	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999998386311011	WITHOUT_CLASSIFICATION	1.6136889878145708E-7	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9999987678788644	WITHOUT_CLASSIFICATION	1.2321211356608989E-6	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999735333008379	WITHOUT_CLASSIFICATION	2.646669916212058E-5	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999735333008379	WITHOUT_CLASSIFICATION	2.646669916212058E-5	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999992560211998	WITHOUT_CLASSIFICATION	7.439788002310545E-7	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.9999997241696804	WITHOUT_CLASSIFICATION	2.758303195702573E-7	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999429098407	WITHOUT_CLASSIFICATION	5.709015936234379E-8	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999429098407	WITHOUT_CLASSIFICATION	5.709015936234379E-8	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999972865244872	WITHOUT_CLASSIFICATION	2.7134755129203623E-6	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.9999994372758216	WITHOUT_CLASSIFICATION	5.627241784749525E-7	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.999999853760964	WITHOUT_CLASSIFICATION	1.462390360763426E-7	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999993748369452	WITHOUT_CLASSIFICATION	6.251630548904494E-7	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.9999957989854534	WITHOUT_CLASSIFICATION	4.201014546537439E-6	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.9999872842475973	WITHOUT_CLASSIFICATION	1.2715752402708443E-5	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.9999991267176012	WITHOUT_CLASSIFICATION	8.732823989343748E-7	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.999997921361709	WITHOUT_CLASSIFICATION	2.0786382911457015E-6	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.999993941640535	WITHOUT_CLASSIFICATION	6.058359464963479E-6	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.9999996165653132	WITHOUT_CLASSIFICATION	3.834346868197975E-7	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.9994970086699323	WITHOUT_CLASSIFICATION	5.02991330067677E-4	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9999563863533188	WITHOUT_CLASSIFICATION	4.361364668119284E-5	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.9999079328555153	WITHOUT_CLASSIFICATION	9.206714448477158E-5	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.9999586937317384	WITHOUT_CLASSIFICATION	4.130626826163582E-5	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999972957201682	WITHOUT_CLASSIFICATION	2.7042798318637948E-6	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.9999776068030912	WITHOUT_CLASSIFICATION	2.2393196908834335E-5	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.999999794457293	WITHOUT_CLASSIFICATION	2.055427069731575E-7	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999966428454576	WITHOUT_CLASSIFICATION	3.357154542372385E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999985373062624	WITHOUT_CLASSIFICATION	1.4626937375705938E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999375294798478	WITHOUT_CLASSIFICATION	6.247052015220149E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999497776372803	WITHOUT_CLASSIFICATION	5.022236271964653E-5	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.9999947985810395	WITHOUT_CLASSIFICATION	5.201418960502069E-6	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999998027103626	WITHOUT_CLASSIFICATION	1.9728963736110817E-7	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999998340511976	WITHOUT_CLASSIFICATION	1.6594880247010376E-7	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.9999762425083272	WITHOUT_CLASSIFICATION	2.3757491672943932E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999809369076816	WITHOUT_CLASSIFICATION	1.9063092318327886E-5	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.9999997266874088	WITHOUT_CLASSIFICATION	2.7331259114929594E-7	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.999999967760617	WITHOUT_CLASSIFICATION	3.223938299057653E-8	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.9999999453549113	WITHOUT_CLASSIFICATION	5.4645088627053944E-8	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999999818145284	WITHOUT_CLASSIFICATION	1.8185471562625262E-8	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.999998787679224	WITHOUT_CLASSIFICATION	1.2123207759865396E-6	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.9999999313035318	WITHOUT_CLASSIFICATION	6.869646817043426E-8	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.9999977736307863	WITHOUT_CLASSIFICATION	2.2263692136145707E-6	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.9999963181002166	WITHOUT_CLASSIFICATION	3.6818997834535802E-6	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.9999911693678405	WITHOUT_CLASSIFICATION	8.830632159477934E-6	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.9999999963400715	WITHOUT_CLASSIFICATION	3.65992844863707E-9	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.9999993645288341	WITHOUT_CLASSIFICATION	6.354711658991997E-7	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.9998386912942434	WITHOUT_CLASSIFICATION	1.6130870575671767E-4	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.9999995342315966	WITHOUT_CLASSIFICATION	4.6576840338121543E-7	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.9999987173547299	WITHOUT_CLASSIFICATION	1.2826452700254274E-6	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.999970345600343	WITHOUT_CLASSIFICATION	2.965439965702875E-5	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.9999996091378679	WITHOUT_CLASSIFICATION	3.9086213212333043E-7	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.9999998773346485	WITHOUT_CLASSIFICATION	1.2266535158791257E-7	DEFECT
// title	WITHOUT_CLASSIFICATION	0.9999896879443656	WITHOUT_CLASSIFICATION	1.0312055634455488E-5	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.999998565470116	WITHOUT_CLASSIFICATION	1.4345298839726222E-6	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9999765195675752	WITHOUT_CLASSIFICATION	2.348043242480365E-5	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999975644761387	WITHOUT_CLASSIFICATION	2.435523861252531E-6	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999992313730818	WITHOUT_CLASSIFICATION	7.686269181487194E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999988158395052	WITHOUT_CLASSIFICATION	1.1841604948237708E-6	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.9999999928118763	WITHOUT_CLASSIFICATION	7.1881235460007224E-9	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999987708994984	WITHOUT_CLASSIFICATION	1.2291005017064643E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999987708994984	WITHOUT_CLASSIFICATION	1.2291005017064643E-6	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999957008080153	WITHOUT_CLASSIFICATION	4.299191984765686E-6	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.9999999999554999	WITHOUT_CLASSIFICATION	4.45000481117775E-11	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999963594708714	WITHOUT_CLASSIFICATION	3.6405291285589946E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999963594708714	WITHOUT_CLASSIFICATION	3.6405291285589946E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999963594708714	WITHOUT_CLASSIFICATION	3.6405291285589946E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999963594708714	WITHOUT_CLASSIFICATION	3.6405291285589946E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999963594708714	WITHOUT_CLASSIFICATION	3.6405291285589946E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999963594708714	WITHOUT_CLASSIFICATION	3.6405291285589946E-6	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999926906666	WITHOUT_CLASSIFICATION	7.3093333477311535E-9	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999992715526008	WITHOUT_CLASSIFICATION	7.284473990520548E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999970796738246	WITHOUT_CLASSIFICATION	2.9203261754287537E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999998427491065	WITHOUT_CLASSIFICATION	1.5725089348510908E-7	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999990857559808	WITHOUT_CLASSIFICATION	9.142440191995529E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999992140545483	WITHOUT_CLASSIFICATION	7.859454517325686E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999986056417611	WITHOUT_CLASSIFICATION	1.3943582388227081E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999998427491065	WITHOUT_CLASSIFICATION	1.5725089348510908E-7	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.9999986191997509	WITHOUT_CLASSIFICATION	1.3808002491213368E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999998427491065	WITHOUT_CLASSIFICATION	1.5725089348510908E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999998427491065	WITHOUT_CLASSIFICATION	1.5725089348510908E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999998427491065	WITHOUT_CLASSIFICATION	1.5725089348510908E-7	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999995284929768	WITHOUT_CLASSIFICATION	4.7150702332891006E-7	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999984147672683	WITHOUT_CLASSIFICATION	1.5852327317832074E-6	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999887949838769	WITHOUT_CLASSIFICATION	1.1205016123047772E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999887949838769	WITHOUT_CLASSIFICATION	1.1205016123047772E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999984147672683	WITHOUT_CLASSIFICATION	1.5852327317832074E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999984147672683	WITHOUT_CLASSIFICATION	1.5852327317832074E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999984147672683	WITHOUT_CLASSIFICATION	1.5852327317832074E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999984147672683	WITHOUT_CLASSIFICATION	1.5852327317832074E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999984147672683	WITHOUT_CLASSIFICATION	1.5852327317832074E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999789125864286	WITHOUT_CLASSIFICATION	2.1087413571487844E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999789125864286	WITHOUT_CLASSIFICATION	2.1087413571487844E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999789125864286	WITHOUT_CLASSIFICATION	2.1087413571487844E-5	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999789125864286	WITHOUT_CLASSIFICATION	2.1087413571487844E-5	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.999965440224972	WITHOUT_CLASSIFICATION	3.4559775027996376E-5	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.9999981061184138	WITHOUT_CLASSIFICATION	1.8938815861412731E-6	DEFECT
// name	WITHOUT_CLASSIFICATION	0.9999982869352299	WITHOUT_CLASSIFICATION	1.7130647701489207E-6	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.9999958263506161	WITHOUT_CLASSIFICATION	4.173649383888555E-6	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.9999970676564952	WITHOUT_CLASSIFICATION	2.9323435047957753E-6	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.9999938696755246	WITHOUT_CLASSIFICATION	6.130324475311166E-6	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.9999979750888386	WITHOUT_CLASSIFICATION	2.0249111614406795E-6	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.9999986210603907	WITHOUT_CLASSIFICATION	1.3789396093345687E-6	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999947739094528	WITHOUT_CLASSIFICATION	5.226090547221579E-6	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999923027399045	WITHOUT_CLASSIFICATION	7.697260095632165E-6	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.9999962215073889	WITHOUT_CLASSIFICATION	3.7784926111848674E-6	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.9999961760684977	WITHOUT_CLASSIFICATION	3.823931502335408E-6	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999968241109495	WITHOUT_CLASSIFICATION	3.1758890504685154E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999963594708714	WITHOUT_CLASSIFICATION	3.6405291285589946E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999962920136442	WITHOUT_CLASSIFICATION	3.7079863558639305E-6	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.9999990114000794	WITHOUT_CLASSIFICATION	9.885999205776668E-7	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.9999994421164979	WITHOUT_CLASSIFICATION	5.578835019410271E-7	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.9999876006684937	WITHOUT_CLASSIFICATION	1.239933150619993E-5	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.9999934004491919	WITHOUT_CLASSIFICATION	6.59955080803928E-6	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.999997258359482	WITHOUT_CLASSIFICATION	2.7416405180099496E-6	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.9999903637014511	WITHOUT_CLASSIFICATION	9.636298548849544E-6	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.9999996864999547	WITHOUT_CLASSIFICATION	3.135000451933634E-7	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.9999727922634787	WITHOUT_CLASSIFICATION	2.7207736521374934E-5	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9999645387746529	WITHOUT_CLASSIFICATION	3.5461225347216186E-5	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.9999674646286383	WITHOUT_CLASSIFICATION	3.2535371361629733E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999994534355885	WITHOUT_CLASSIFICATION	5.465644114730584E-7	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.999999930953521	WITHOUT_CLASSIFICATION	6.904647898437075E-8	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.999999930953521	WITHOUT_CLASSIFICATION	6.904647898437075E-8	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999999064148812	WITHOUT_CLASSIFICATION	9.358511873720741E-8	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999994268521268	WITHOUT_CLASSIFICATION	5.731478732749858E-7	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999994268521268	WITHOUT_CLASSIFICATION	5.731478732749858E-7	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999998016810049	WITHOUT_CLASSIFICATION	1.9831899516760153E-7	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9999154757907689	WITHOUT_CLASSIFICATION	8.452420923114613E-5	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9999154757907689	WITHOUT_CLASSIFICATION	8.452420923114613E-5	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999993358886282	WITHOUT_CLASSIFICATION	6.641113718011361E-7	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999993358886282	WITHOUT_CLASSIFICATION	6.641113718011361E-7	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999998908406776	WITHOUT_CLASSIFICATION	1.0915932232380453E-7	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999686699591619	WITHOUT_CLASSIFICATION	3.133004083807309E-5	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999686699591619	WITHOUT_CLASSIFICATION	3.133004083807309E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999661250562776	WITHOUT_CLASSIFICATION	3.38749437222916E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999665217565453	WITHOUT_CLASSIFICATION	3.347824345461517E-5	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999921401220967	WITHOUT_CLASSIFICATION	7.859877903242177E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999997268319941	WITHOUT_CLASSIFICATION	2.7316800589367984E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999997268319941	WITHOUT_CLASSIFICATION	2.7316800589367984E-6	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.9999975968027905	WITHOUT_CLASSIFICATION	2.4031972094106086E-6	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.9999968586738643	WITHOUT_CLASSIFICATION	3.1413261356507034E-6	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999971594998072	WITHOUT_CLASSIFICATION	2.8405001928402995E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999905784451444	WITHOUT_CLASSIFICATION	9.421554855505036E-6	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.9999950924173964	WITHOUT_CLASSIFICATION	4.907582603548916E-6	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.9999934254870162	WITHOUT_CLASSIFICATION	6.574512983775692E-6	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.999996261867833	WITHOUT_CLASSIFICATION	3.7381321670752413E-6	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.9999940492005494	WITHOUT_CLASSIFICATION	5.9507994506490205E-6	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.9999949357697371	WITHOUT_CLASSIFICATION	5.064230262906317E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999547541623011	WITHOUT_CLASSIFICATION	4.524583769896787E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999992715526008	WITHOUT_CLASSIFICATION	7.284473990520548E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999547541623011	WITHOUT_CLASSIFICATION	4.524583769896787E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
// category	WITHOUT_CLASSIFICATION	0.9999966637076576	WITHOUT_CLASSIFICATION	3.3362923424340223E-6	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.9999985274470901	WITHOUT_CLASSIFICATION	1.4725529099480646E-6	DEFECT
// value	WITHOUT_CLASSIFICATION	0.9999980197832824	WITHOUT_CLASSIFICATION	1.9802167175901445E-6	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.9999799032973686	WITHOUT_CLASSIFICATION	2.009670263134018E-5	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.9999845171887958	WITHOUT_CLASSIFICATION	1.5482811204187362E-5	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.9999927129687336	WITHOUT_CLASSIFICATION	7.287031266423717E-6	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.9999986062647309	WITHOUT_CLASSIFICATION	1.3937352691642107E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999988121650315	WITHOUT_CLASSIFICATION	1.1878349684868803E-6	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.9999808405145393	WITHOUT_CLASSIFICATION	1.9159485460816587E-5	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999991858840199	WITHOUT_CLASSIFICATION	8.141159800073546E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992416478591	WITHOUT_CLASSIFICATION	7.583521409350142E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992416478591	WITHOUT_CLASSIFICATION	7.583521409350142E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992416478591	WITHOUT_CLASSIFICATION	7.583521409350142E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992416478591	WITHOUT_CLASSIFICATION	7.583521409350142E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992416478591	WITHOUT_CLASSIFICATION	7.583521409350142E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992416478591	WITHOUT_CLASSIFICATION	7.583521409350142E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992416478591	WITHOUT_CLASSIFICATION	7.583521409350142E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999992416478591	WITHOUT_CLASSIFICATION	7.583521409350142E-7	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999961151401462	WITHOUT_CLASSIFICATION	3.88485985380183E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999961151401462	WITHOUT_CLASSIFICATION	3.88485985380183E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999961151401462	WITHOUT_CLASSIFICATION	3.88485985380183E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999961151401462	WITHOUT_CLASSIFICATION	3.88485985380183E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999961151401462	WITHOUT_CLASSIFICATION	3.88485985380183E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999961151401462	WITHOUT_CLASSIFICATION	3.88485985380183E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999961151401462	WITHOUT_CLASSIFICATION	3.88485985380183E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999961151401462	WITHOUT_CLASSIFICATION	3.88485985380183E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999979054596897	WITHOUT_CLASSIFICATION	2.094540310324923E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999979054596897	WITHOUT_CLASSIFICATION	2.094540310324923E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999979054596897	WITHOUT_CLASSIFICATION	2.094540310324923E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999979054596897	WITHOUT_CLASSIFICATION	2.094540310324923E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999979054596897	WITHOUT_CLASSIFICATION	2.094540310324923E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999979054596897	WITHOUT_CLASSIFICATION	2.094540310324923E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999979054596897	WITHOUT_CLASSIFICATION	2.094540310324923E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999979054596897	WITHOUT_CLASSIFICATION	2.094540310324923E-6	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999963607893965	WITHOUT_CLASSIFICATION	3.6392106034518652E-6	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999963607893965	WITHOUT_CLASSIFICATION	3.6392106034518652E-6	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999885851533534	WITHOUT_CLASSIFICATION	1.1414846646609618E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.999985776538534	WITHOUT_CLASSIFICATION	1.4223461465980614E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.999985776538534	WITHOUT_CLASSIFICATION	1.4223461465980614E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999885851533534	WITHOUT_CLASSIFICATION	1.1414846646609618E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999962920136442	WITHOUT_CLASSIFICATION	3.7079863558639305E-6	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.9999913756457912	WITHOUT_CLASSIFICATION	8.62435420879321E-6	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.9999996755807498	WITHOUT_CLASSIFICATION	3.244192502544881E-7	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.999928293400836	WITHOUT_CLASSIFICATION	7.17065991639705E-5	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.9999994264434129	WITHOUT_CLASSIFICATION	5.735565871413498E-7	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9999993303021585	WITHOUT_CLASSIFICATION	6.696978415655985E-7	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.9999979783166125	WITHOUT_CLASSIFICATION	2.021683387514101E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999917437868784	WITHOUT_CLASSIFICATION	8.256213121659963E-6	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.9999988452810149	WITHOUT_CLASSIFICATION	1.1547189850557543E-6	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999997456483367	WITHOUT_CLASSIFICATION	2.5435166325383613E-7	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999998606566426	WITHOUT_CLASSIFICATION	1.3934335736834067E-7	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999998865606867	WITHOUT_CLASSIFICATION	1.1343931335440648E-7	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.99999799619798	WITHOUT_CLASSIFICATION	2.0038020199259176E-6	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999998452164485	WITHOUT_CLASSIFICATION	1.547835514105406E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999998452164485	WITHOUT_CLASSIFICATION	1.547835514105406E-7	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999976548283175	WITHOUT_CLASSIFICATION	2.3451716825876647E-6	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999976548283175	WITHOUT_CLASSIFICATION	2.3451716825876647E-6	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999959448613093	WITHOUT_CLASSIFICATION	4.055138690710546E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999988772937888	WITHOUT_CLASSIFICATION	1.1227062112361325E-6	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.9999977979914049	WITHOUT_CLASSIFICATION	2.2020085950892097E-6	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.999999516554337	WITHOUT_CLASSIFICATION	4.834456629023943E-7	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.9999997860438229	WITHOUT_CLASSIFICATION	2.1395617714690248E-7	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.9999997814750743	WITHOUT_CLASSIFICATION	2.1852492580686836E-7	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999997456483367	WITHOUT_CLASSIFICATION	2.5435166325383613E-7	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999998606566426	WITHOUT_CLASSIFICATION	1.3934335736834067E-7	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999998865606867	WITHOUT_CLASSIFICATION	1.1343931335440648E-7	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.999997363570289	WITHOUT_CLASSIFICATION	2.636429711052467E-6	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.9999999017932083	WITHOUT_CLASSIFICATION	9.820679175559813E-8	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.9999994044956481	WITHOUT_CLASSIFICATION	5.955043518940671E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999993203634946	WITHOUT_CLASSIFICATION	6.79636505378912E-7	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.9999991156383321	WITHOUT_CLASSIFICATION	8.84361667804494E-7	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999929817086903	WITHOUT_CLASSIFICATION	7.018291309748931E-6	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9999978388682446	WITHOUT_CLASSIFICATION	2.1611317555041464E-6	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.999997611646226	WITHOUT_CLASSIFICATION	2.3883537739499837E-6	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.9999999610772841	WITHOUT_CLASSIFICATION	3.8922716066045335E-8	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.9999969081754551	WITHOUT_CLASSIFICATION	3.0918245450500865E-6	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.9999926254279822	WITHOUT_CLASSIFICATION	7.374572017811336E-6	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999998282085362	WITHOUT_CLASSIFICATION	1.7179146378190558E-7	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.9999966977888914	WITHOUT_CLASSIFICATION	3.302211108438045E-6	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999982033228859	WITHOUT_CLASSIFICATION	1.7966771140494507E-6	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.9999960950761698	WITHOUT_CLASSIFICATION	3.9049238301880675E-6	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999713073697851	WITHOUT_CLASSIFICATION	2.8692630214969345E-5	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998059814664	WITHOUT_CLASSIFICATION	1.9401853365007742E-7	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998059814664	WITHOUT_CLASSIFICATION	1.9401853365007742E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999988497586819	WITHOUT_CLASSIFICATION	1.1502413181150063E-6	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9999986263937205	WITHOUT_CLASSIFICATION	1.3736062795145482E-6	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.9992901148410366	WITHOUT_CLASSIFICATION	7.098851589635134E-4	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.99993942516663	WITHOUT_CLASSIFICATION	6.05748333699113E-5	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9999493821284597	WITHOUT_CLASSIFICATION	5.061787154023664E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996774099333	WITHOUT_CLASSIFICATION	3.225900666074749E-7	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.999999729459968	WITHOUT_CLASSIFICATION	2.7054003203001657E-7	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9999987108788441	WITHOUT_CLASSIFICATION	1.2891211559864582E-6	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.9999963151188856	WITHOUT_CLASSIFICATION	3.68488111440281E-6	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.9999998442200574	WITHOUT_CLASSIFICATION	1.557799426427789E-7	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.9999998413817008	WITHOUT_CLASSIFICATION	1.5861829925715272E-7	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.9999949794026861	WITHOUT_CLASSIFICATION	5.0205973138558935E-6	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.9999988621047594	WITHOUT_CLASSIFICATION	1.137895240594181E-6	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.9999938577053255	WITHOUT_CLASSIFICATION	6.142294674606287E-6	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.9999756569763746	WITHOUT_CLASSIFICATION	2.4343023625394214E-5	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999990561391898	WITHOUT_CLASSIFICATION	9.438608102202164E-7	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999996639887659	WITHOUT_CLASSIFICATION	3.36011234011611E-7	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.9999999447971886	WITHOUT_CLASSIFICATION	5.520281144951572E-8	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.9999998259979335	WITHOUT_CLASSIFICATION	1.740020665569343E-7	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.9999999561793158	WITHOUT_CLASSIFICATION	4.3820684277921434E-8	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.9999902578878337	WITHOUT_CLASSIFICATION	9.742112166249846E-6	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.9998195668248201	WITHOUT_CLASSIFICATION	1.8043317517984827E-4	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.9999982656781187	WITHOUT_CLASSIFICATION	1.7343218813486071E-6	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999999974291834	WITHOUT_CLASSIFICATION	2.570816660625799E-9	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999999839686349	WITHOUT_CLASSIFICATION	1.6031365185734854E-8	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.9999968445301332	WITHOUT_CLASSIFICATION	3.1554698668123E-6	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999871686310539	WITHOUT_CLASSIFICATION	1.2831368946144264E-5	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.9999984135474943	WITHOUT_CLASSIFICATION	1.5864525057024344E-6	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.9999713597000371	WITHOUT_CLASSIFICATION	2.8640299962844318E-5	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999959448613093	WITHOUT_CLASSIFICATION	4.055138690710546E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999988772937888	WITHOUT_CLASSIFICATION	1.1227062112361325E-6	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.9999997853650937	WITHOUT_CLASSIFICATION	2.1463490632913918E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999998791886949	WITHOUT_CLASSIFICATION	1.2081130511172608E-6	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999999550990716	WITHOUT_CLASSIFICATION	4.490092854521227E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999642529793	WITHOUT_CLASSIFICATION	3.574702069648382E-7	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.9999997834941365	WITHOUT_CLASSIFICATION	2.165058635222442E-7	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.9999996788241344	WITHOUT_CLASSIFICATION	3.211758655505222E-7	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.9999998994521254	WITHOUT_CLASSIFICATION	1.0054787454643788E-7	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999997826405657	WITHOUT_CLASSIFICATION	2.1735943425558716E-7	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.9999913055404185	WITHOUT_CLASSIFICATION	8.694459581541585E-6	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.9999701590630403	WITHOUT_CLASSIFICATION	2.9840936959607068E-5	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.999933708912355	WITHOUT_CLASSIFICATION	6.629108764505673E-5	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.9999703288863868	WITHOUT_CLASSIFICATION	2.9671113613195614E-5	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.9999975651881162	WITHOUT_CLASSIFICATION	2.434811883810143E-6	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.9999935664032845	WITHOUT_CLASSIFICATION	6.433596715433982E-6	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.9999750047885271	WITHOUT_CLASSIFICATION	2.4995211472976778E-5	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.999983999576992	WITHOUT_CLASSIFICATION	1.600042300806107E-5	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.9999982350212953	WITHOUT_CLASSIFICATION	1.7649787047402326E-6	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.9999237947193313	WITHOUT_CLASSIFICATION	7.620528066855444E-5	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.9999974185090069	WITHOUT_CLASSIFICATION	2.581490993018069E-6	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.9999409092599595	WITHOUT_CLASSIFICATION	5.9090740040583506E-5	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.9999774728569935	WITHOUT_CLASSIFICATION	2.252714300646342E-5	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.9999883757236216	WITHOUT_CLASSIFICATION	1.1624276378466885E-5	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.9999525955730353	WITHOUT_CLASSIFICATION	4.7404426964740624E-5	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.9999807218448221	WITHOUT_CLASSIFICATION	1.9278155177848894E-5	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.9996231128022778	WITHOUT_CLASSIFICATION	3.7688719772230393E-4	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.9999068037137483	WITHOUT_CLASSIFICATION	9.319628625171585E-5	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.9999984980687605	WITHOUT_CLASSIFICATION	1.5019312395496129E-6	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.9999980051122574	WITHOUT_CLASSIFICATION	1.994887742501489E-6	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.999998953660537	WITHOUT_CLASSIFICATION	1.046339462860889E-6	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.9999976123466164	WITHOUT_CLASSIFICATION	2.3876533836343574E-6	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.9999976748174406	WITHOUT_CLASSIFICATION	2.3251825593764656E-6	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.9999856998104107	WITHOUT_CLASSIFICATION	1.4300189589348715E-5	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999961416868177	WITHOUT_CLASSIFICATION	3.8583131823229505E-6	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.9999995570569199	WITHOUT_CLASSIFICATION	4.4294308006628734E-7	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.9999970656264205	WITHOUT_CLASSIFICATION	2.934373579511165E-6	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.9999994820463958	WITHOUT_CLASSIFICATION	5.17953604198137E-7	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.9999967130346391	WITHOUT_CLASSIFICATION	3.2869653608110257E-6	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.9999972644325585	WITHOUT_CLASSIFICATION	2.7355674414953606E-6	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9999982233424481	WITHOUT_CLASSIFICATION	1.7766575517451907E-6	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.9999989221823932	WITHOUT_CLASSIFICATION	1.0778176069191557E-6	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.9999934540789983	WITHOUT_CLASSIFICATION	6.545921001641377E-6	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.9999984954210259	WITHOUT_CLASSIFICATION	1.5045789740051819E-6	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.9999960394328626	WITHOUT_CLASSIFICATION	3.960567137333634E-6	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.9999015825640837	WITHOUT_CLASSIFICATION	9.841743591634443E-5	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.9999851969563404	WITHOUT_CLASSIFICATION	1.4803043659661288E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999997268319941	WITHOUT_CLASSIFICATION	2.7316800589367984E-6	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.9999327482193471	WITHOUT_CLASSIFICATION	6.725178065287901E-5	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.9956243133350956	WITHOUT_CLASSIFICATION	0.0043756866649044745	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.9998748905864114	WITHOUT_CLASSIFICATION	1.2510941358852978E-4	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.9985074351443125	WITHOUT_CLASSIFICATION	0.0014925648556874576	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.9992995171684506	WITHOUT_CLASSIFICATION	7.004828315493597E-4	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9998678936132757	WITHOUT_CLASSIFICATION	1.3210638672437358E-4	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9998678936132757	WITHOUT_CLASSIFICATION	1.3210638672437358E-4	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.999996879391885	WITHOUT_CLASSIFICATION	3.1206081150255107E-6	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.999996879391885	WITHOUT_CLASSIFICATION	3.1206081150255107E-6	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.9997170899190561	WITHOUT_CLASSIFICATION	2.829100809438927E-4	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999754243387114	WITHOUT_CLASSIFICATION	2.4575661288551527E-5	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999994050915626	WITHOUT_CLASSIFICATION	5.949084374534988E-7	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999994050915626	WITHOUT_CLASSIFICATION	5.949084374534988E-7	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999667760635517	WITHOUT_CLASSIFICATION	3.322393644830793E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999910457863268	WITHOUT_CLASSIFICATION	8.954213673237538E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999965935139518	WITHOUT_CLASSIFICATION	3.406486048270088E-6	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999771495547336	WITHOUT_CLASSIFICATION	2.285044526642257E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999977139341506	WITHOUT_CLASSIFICATION	2.286065849371511E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999517483296895	WITHOUT_CLASSIFICATION	4.825167031048951E-5	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999843880349915	WITHOUT_CLASSIFICATION	1.5611965008590757E-5	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999928766134215	WITHOUT_CLASSIFICATION	7.123386578457167E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999844860863227	WITHOUT_CLASSIFICATION	1.5513913677269804E-5	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999898315884741	WITHOUT_CLASSIFICATION	1.0168411525954904E-5	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.999986047844438	WITHOUT_CLASSIFICATION	1.3952155562079446E-5	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999901201587632	WITHOUT_CLASSIFICATION	9.879841236784608E-6	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999933443948915	WITHOUT_CLASSIFICATION	6.65560510854439E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999948693306632	WITHOUT_CLASSIFICATION	5.130669336806653E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999962260994152	WITHOUT_CLASSIFICATION	3.7739005848078437E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999995464730592	WITHOUT_CLASSIFICATION	4.5352694075254253E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999910457863268	WITHOUT_CLASSIFICATION	8.954213673237538E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999965935139518	WITHOUT_CLASSIFICATION	3.406486048270088E-6	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999771495547336	WITHOUT_CLASSIFICATION	2.285044526642257E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999977139341506	WITHOUT_CLASSIFICATION	2.286065849371511E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999517483296895	WITHOUT_CLASSIFICATION	4.825167031048951E-5	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999985775504766	WITHOUT_CLASSIFICATION	1.422449523366943E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999955780669442	WITHOUT_CLASSIFICATION	4.421933055829606E-6	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.999999851178935	WITHOUT_CLASSIFICATION	1.4882106507451265E-7	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.999992693519792	WITHOUT_CLASSIFICATION	7.306480207922634E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999954324218453	WITHOUT_CLASSIFICATION	4.5675781547304E-6	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999755161078081	WITHOUT_CLASSIFICATION	2.4483892191920304E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999927820356005	WITHOUT_CLASSIFICATION	7.2179643994663995E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9997887933378047	WITHOUT_CLASSIFICATION	2.1120666219533163E-4	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999917527715622	WITHOUT_CLASSIFICATION	8.247228437834613E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999867530040887	WITHOUT_CLASSIFICATION	1.3246995911274174E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999991878003683	WITHOUT_CLASSIFICATION	8.121996316908507E-7	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999928766134215	WITHOUT_CLASSIFICATION	7.123386578457167E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999989893696342	WITHOUT_CLASSIFICATION	1.010630365850957E-6	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999991330212001	WITHOUT_CLASSIFICATION	8.669787999087095E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999991330212001	WITHOUT_CLASSIFICATION	8.669787999087095E-7	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.9999988745140882	WITHOUT_CLASSIFICATION	1.1254859118193749E-6	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999991328851799	WITHOUT_CLASSIFICATION	8.671148199954672E-7	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999983351908016	WITHOUT_CLASSIFICATION	1.6648091983166311E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999983351908016	WITHOUT_CLASSIFICATION	1.6648091983166311E-6	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.9999924341075324	WITHOUT_CLASSIFICATION	7.565892467704436E-6	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999992967536553	WITHOUT_CLASSIFICATION	7.032463447672309E-7	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.9999952847393434	WITHOUT_CLASSIFICATION	4.715260656618247E-6	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.9999991810707609	WITHOUT_CLASSIFICATION	8.189292389903133E-7	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.9999990240524538	WITHOUT_CLASSIFICATION	9.759475461673019E-7	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.9999995698884971	WITHOUT_CLASSIFICATION	4.3011150283348537E-7	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.9999988915020978	WITHOUT_CLASSIFICATION	1.1084979022877768E-6	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.9999988910533417	WITHOUT_CLASSIFICATION	1.1089466583015168E-6	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.9999994079960929	WITHOUT_CLASSIFICATION	5.920039071266225E-7	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999285504519172	WITHOUT_CLASSIFICATION	7.144954808276899E-5	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999981037590635	WITHOUT_CLASSIFICATION	1.8962409365029963E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999964711443821	WITHOUT_CLASSIFICATION	3.5288556180783967E-6	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999976129728122	WITHOUT_CLASSIFICATION	2.3870271878247736E-6	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.9999999284655249	WITHOUT_CLASSIFICATION	7.153447515450228E-8	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.9999971171557819	WITHOUT_CLASSIFICATION	2.8828442180723305E-6	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.9999999694416887	WITHOUT_CLASSIFICATION	3.055831135845959E-8	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999997516159186	WITHOUT_CLASSIFICATION	2.4838408139145473E-7	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.9999988884798884	WITHOUT_CLASSIFICATION	1.1115201116190029E-6	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999635984175806	WITHOUT_CLASSIFICATION	3.6401582419290184E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999899881646207	WITHOUT_CLASSIFICATION	1.001183537932665E-5	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.9999649155625593	WITHOUT_CLASSIFICATION	3.5084437440695596E-5	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999995558948239	WITHOUT_CLASSIFICATION	4.441051761736509E-7	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999898315884741	WITHOUT_CLASSIFICATION	1.0168411525954904E-5	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.999986047844438	WITHOUT_CLASSIFICATION	1.3952155562079446E-5	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999940841177549	WITHOUT_CLASSIFICATION	5.9158822451279836E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999901201587632	WITHOUT_CLASSIFICATION	9.879841236784608E-6	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999933443948915	WITHOUT_CLASSIFICATION	6.65560510854439E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999948693306632	WITHOUT_CLASSIFICATION	5.130669336806653E-6	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.9990488670480756	WITHOUT_CLASSIFICATION	9.511329519244713E-4	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.999897010861977	WITHOUT_CLASSIFICATION	1.0298913802302659E-4	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999933228960597	WITHOUT_CLASSIFICATION	6.677103940271359E-6	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999992283483039	WITHOUT_CLASSIFICATION	7.716516961121786E-7	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.9999888756983415	WITHOUT_CLASSIFICATION	1.1124301658476912E-5	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9998854920837871	WITHOUT_CLASSIFICATION	1.145079162129116E-4	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999984585736905	WITHOUT_CLASSIFICATION	1.5414263094783873E-6	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999970959304275	WITHOUT_CLASSIFICATION	2.9040695725216173E-6	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.999989643772701	WITHOUT_CLASSIFICATION	1.0356227298931706E-5	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.9999423802928586	WITHOUT_CLASSIFICATION	5.761970714129669E-5	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.9999813719715215	WITHOUT_CLASSIFICATION	1.8628028478418247E-5	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999807646862531	WITHOUT_CLASSIFICATION	1.9235313746976737E-5	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999575917319967	WITHOUT_CLASSIFICATION	4.2408268003316125E-5	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.99999984705027	WITHOUT_CLASSIFICATION	1.5294972993763085E-7	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999809242196376	WITHOUT_CLASSIFICATION	1.9075780362452455E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999995287499506	WITHOUT_CLASSIFICATION	4.7125004944705754E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999141474014	WITHOUT_CLASSIFICATION	8.585259859470762E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999861651421057	WITHOUT_CLASSIFICATION	1.3834857894364272E-5	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999998591494139	WITHOUT_CLASSIFICATION	1.4085058609542147E-7	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999996129765825	WITHOUT_CLASSIFICATION	3.870234174949521E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999996830171862	WITHOUT_CLASSIFICATION	3.1698281371006323E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999920823318337	WITHOUT_CLASSIFICATION	7.917668166278491E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999996045119715	WITHOUT_CLASSIFICATION	3.9548802854170176E-7	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.9999995744384864	WITHOUT_CLASSIFICATION	4.255615136446732E-7	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.999999640910194	WITHOUT_CLASSIFICATION	3.5908980595669947E-7	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.9999906072052198	WITHOUT_CLASSIFICATION	9.392794780153128E-6	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.9999920743265753	WITHOUT_CLASSIFICATION	7.925673424616416E-6	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.9999974265091074	WITHOUT_CLASSIFICATION	2.573490892716791E-6	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.999991977904638	WITHOUT_CLASSIFICATION	8.02209536205447E-6	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.9999863777632536	WITHOUT_CLASSIFICATION	1.3622236746358948E-5	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9999613173113616	WITHOUT_CLASSIFICATION	3.8682688638371214E-5	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.9999847174762153	WITHOUT_CLASSIFICATION	1.528252378472343E-5	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.9999986874930585	WITHOUT_CLASSIFICATION	1.3125069413711963E-6	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999979422704072	WITHOUT_CLASSIFICATION	2.0577295928371464E-6	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999992740170243	WITHOUT_CLASSIFICATION	7.259829757392741E-7	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999851480449876	WITHOUT_CLASSIFICATION	1.4851955012433593E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999996781403888	WITHOUT_CLASSIFICATION	3.218596110983211E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999997066376707	WITHOUT_CLASSIFICATION	2.933623293509698E-7	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9999932110674604	WITHOUT_CLASSIFICATION	6.78893253964439E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999644909703215	WITHOUT_CLASSIFICATION	3.550902967847636E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999644909703215	WITHOUT_CLASSIFICATION	3.550902967847636E-5	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999956241699072	WITHOUT_CLASSIFICATION	4.3758300927896016E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999970796738246	WITHOUT_CLASSIFICATION	2.9203261754287537E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999990857559808	WITHOUT_CLASSIFICATION	9.142440191995529E-7	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999991558380095	WITHOUT_CLASSIFICATION	8.441619904356933E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999990751670511	WITHOUT_CLASSIFICATION	9.248329490401421E-7	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999685502875957	WITHOUT_CLASSIFICATION	3.144971240423419E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999963606907346	WITHOUT_CLASSIFICATION	3.639309265254303E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999963606907346	WITHOUT_CLASSIFICATION	3.639309265254303E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999963606907346	WITHOUT_CLASSIFICATION	3.639309265254303E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999753115477189	WITHOUT_CLASSIFICATION	2.4688452281034637E-5	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9996562132753318	WITHOUT_CLASSIFICATION	3.437867246681665E-4	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999646657154748	WITHOUT_CLASSIFICATION	3.533428452524302E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999646657154748	WITHOUT_CLASSIFICATION	3.533428452524302E-5	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999945854276613	WITHOUT_CLASSIFICATION	5.414572338661127E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999936479021038	WITHOUT_CLASSIFICATION	6.3520978961742335E-6	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.9999998452425924	WITHOUT_CLASSIFICATION	1.5475740756121556E-7	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.9999989495035437	WITHOUT_CLASSIFICATION	1.0504964562769304E-6	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.9999991133862021	WITHOUT_CLASSIFICATION	8.866137979780183E-7	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.9999977522380195	WITHOUT_CLASSIFICATION	2.2477619805246395E-6	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.9999991427490269	WITHOUT_CLASSIFICATION	8.572509729500402E-7	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.999999168106763	WITHOUT_CLASSIFICATION	8.318932368777129E-7	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.9999973111850713	WITHOUT_CLASSIFICATION	2.6888149286260843E-6	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.9999995635303983	WITHOUT_CLASSIFICATION	4.364696016556484E-7	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.9999994600602417	WITHOUT_CLASSIFICATION	5.399397584580485E-7	DEFECT
//key	WITHOUT_CLASSIFICATION	0.9998695756275353	WITHOUT_CLASSIFICATION	1.304243724647127E-4	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.9999882686266471	WITHOUT_CLASSIFICATION	1.1731373352959004E-5	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.9997996314985637	WITHOUT_CLASSIFICATION	2.0036850143645402E-4	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.9999950044647326	WITHOUT_CLASSIFICATION	4.995535267470734E-6	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.9993376247197852	WITHOUT_CLASSIFICATION	6.623752802149062E-4	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.9999665584031008	WITHOUT_CLASSIFICATION	3.344159689929208E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994762610286	WITHOUT_CLASSIFICATION	5.237389714114012E-7	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.9999980498448007	WITHOUT_CLASSIFICATION	1.950155199421179E-6	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.9999997151984064	WITHOUT_CLASSIFICATION	2.8480159372331586E-7	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.999999833376044	WITHOUT_CLASSIFICATION	1.666239559698676E-7	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.9999997363478867	WITHOUT_CLASSIFICATION	2.636521132813365E-7	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.9999936325230049	WITHOUT_CLASSIFICATION	6.367476995085949E-6	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.9999986300656315	WITHOUT_CLASSIFICATION	1.3699343684683912E-6	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.999968660425966	WITHOUT_CLASSIFICATION	3.133957403397091E-5	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.99999989034012	WITHOUT_CLASSIFICATION	1.0965987990530801E-7	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.9999995989056255	WITHOUT_CLASSIFICATION	4.01094374558144E-7	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.9999995250256853	WITHOUT_CLASSIFICATION	4.7497431467553795E-7	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.9999998473779204	WITHOUT_CLASSIFICATION	1.526220795582653E-7	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998242859256	WITHOUT_CLASSIFICATION	1.757140743911058E-7	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999999407773432	WITHOUT_CLASSIFICATION	5.922265682397639E-8	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.99999993313832	WITHOUT_CLASSIFICATION	6.686167993870055E-8	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999883378550055	WITHOUT_CLASSIFICATION	1.166214499448382E-5	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.999995700577831	WITHOUT_CLASSIFICATION	4.299422168939699E-6	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.9999988135061655	WITHOUT_CLASSIFICATION	1.1864938345344459E-6	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999979846965174	WITHOUT_CLASSIFICATION	2.015303482619901E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999992755577005	WITHOUT_CLASSIFICATION	7.244422994015825E-7	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.9999996051063502	WITHOUT_CLASSIFICATION	3.948936497636954E-7	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.9999813911105041	WITHOUT_CLASSIFICATION	1.8608889495913674E-5	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.9999984588208338	WITHOUT_CLASSIFICATION	1.5411791662692332E-6	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.9999994048235172	WITHOUT_CLASSIFICATION	5.951764827082023E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999985373062624	WITHOUT_CLASSIFICATION	1.4626937375705938E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999994097292466	WITHOUT_CLASSIFICATION	5.902707533617598E-7	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999992313730818	WITHOUT_CLASSIFICATION	7.686269181487194E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999988158395052	WITHOUT_CLASSIFICATION	1.1841604948237708E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999992715526008	WITHOUT_CLASSIFICATION	7.284473990520548E-7	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999996781403888	WITHOUT_CLASSIFICATION	3.218596110983211E-7	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.999968660425966	WITHOUT_CLASSIFICATION	3.133957403397091E-5	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.9999993819837213	WITHOUT_CLASSIFICATION	6.1801627870963E-7	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.9999994878989421	WITHOUT_CLASSIFICATION	5.121010578670959E-7	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999992034860034	WITHOUT_CLASSIFICATION	7.965139966334537E-7	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.9999972490792796	WITHOUT_CLASSIFICATION	2.750920720442787E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.999999532833439	WITHOUT_CLASSIFICATION	4.6716656106107726E-7	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.9999945648207056	WITHOUT_CLASSIFICATION	5.43517929438795E-6	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999980878451673	WITHOUT_CLASSIFICATION	1.912154832629192E-6	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.9999708678722983	WITHOUT_CLASSIFICATION	2.91321277017276E-5	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.9999998866381528	WITHOUT_CLASSIFICATION	1.1336184720017495E-7	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999998274939806	WITHOUT_CLASSIFICATION	1.7250601926171175E-7	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.9999995167269509	WITHOUT_CLASSIFICATION	4.832730491046634E-7	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999980878451673	WITHOUT_CLASSIFICATION	1.912154832629192E-6	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999998956435652	WITHOUT_CLASSIFICATION	1.0435643481216138E-7	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.9999997164679039	WITHOUT_CLASSIFICATION	2.835320961482041E-7	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.9999999431124293	WITHOUT_CLASSIFICATION	5.688757074720507E-8	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998600161967	WITHOUT_CLASSIFICATION	1.3998380328134003E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999961680976983	WITHOUT_CLASSIFICATION	3.8319023017146115E-6	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999908442587474	WITHOUT_CLASSIFICATION	9.155741252580171E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999991518731582	WITHOUT_CLASSIFICATION	8.48126841771664E-7	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999991518731582	WITHOUT_CLASSIFICATION	8.48126841771664E-7	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999712197694848	WITHOUT_CLASSIFICATION	2.8780230515198803E-5	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999642835402571	WITHOUT_CLASSIFICATION	3.57164597428604E-5	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999642835402571	WITHOUT_CLASSIFICATION	3.57164597428604E-5	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999982938365	WITHOUT_CLASSIFICATION	1.7061635725098482E-9	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999981886692	WITHOUT_CLASSIFICATION	1.8113308194720372E-9	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.9999999848458518	WITHOUT_CLASSIFICATION	1.5154148237567995E-8	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.9999996856406158	WITHOUT_CLASSIFICATION	3.1435938415792125E-7	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.9999996552988465	WITHOUT_CLASSIFICATION	3.4470115352306906E-7	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.9999999046125673	WITHOUT_CLASSIFICATION	9.538743262680528E-8	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.9999990378975687	WITHOUT_CLASSIFICATION	9.621024312080242E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999033583760866	WITHOUT_CLASSIFICATION	9.664162391349133E-5	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.9999960828771681	WITHOUT_CLASSIFICATION	3.917122831773982E-6	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.9999899396948999	WITHOUT_CLASSIFICATION	1.0060305100149516E-5	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.9999992787773975	WITHOUT_CLASSIFICATION	7.212226024818782E-7	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.9999991859221731	WITHOUT_CLASSIFICATION	8.140778267912219E-7	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.9999980450000583	WITHOUT_CLASSIFICATION	1.9549999416168878E-6	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.9999985831742152	WITHOUT_CLASSIFICATION	1.4168257847844964E-6	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.9999993353294786	WITHOUT_CLASSIFICATION	6.646705214375655E-7	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.9999980354734452	WITHOUT_CLASSIFICATION	1.9645265546402383E-6	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.9999832836624357	WITHOUT_CLASSIFICATION	1.6716337564277868E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999375294798478	WITHOUT_CLASSIFICATION	6.247052015220149E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999375294798478	WITHOUT_CLASSIFICATION	6.247052015220149E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999497776372803	WITHOUT_CLASSIFICATION	5.022236271964653E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999809369076816	WITHOUT_CLASSIFICATION	1.9063092318327886E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999497776372803	WITHOUT_CLASSIFICATION	5.022236271964653E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999497776372803	WITHOUT_CLASSIFICATION	5.022236271964653E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999497776372803	WITHOUT_CLASSIFICATION	5.022236271964653E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999970796738246	WITHOUT_CLASSIFICATION	2.9203261754287537E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999990857559808	WITHOUT_CLASSIFICATION	9.142440191995529E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999999484138272	WITHOUT_CLASSIFICATION	5.158617270888007E-8	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999961416868177	WITHOUT_CLASSIFICATION	3.8583131823229505E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999285504519172	WITHOUT_CLASSIFICATION	7.144954808276899E-5	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999635984175806	WITHOUT_CLASSIFICATION	3.6401582419290184E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999899881646207	WITHOUT_CLASSIFICATION	1.001183537932665E-5	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.999999312000536	WITHOUT_CLASSIFICATION	6.879994638421776E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.999999532833439	WITHOUT_CLASSIFICATION	4.6716656106107726E-7	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999998274939806	WITHOUT_CLASSIFICATION	1.7250601926171175E-7	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.9999998897501392	WITHOUT_CLASSIFICATION	1.1024986087718649E-7	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999977266062319	WITHOUT_CLASSIFICATION	2.2733937682084404E-6	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.9999982464055451	WITHOUT_CLASSIFICATION	1.7535944548736218E-6	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.9999990248947496	WITHOUT_CLASSIFICATION	9.751052504099408E-7	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.9999995953790449	WITHOUT_CLASSIFICATION	4.0462095506614655E-7	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.9999997576696705	WITHOUT_CLASSIFICATION	2.4233032946318425E-7	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.9999995138367692	WITHOUT_CLASSIFICATION	4.861632307367786E-7	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.9999998872854764	WITHOUT_CLASSIFICATION	1.1271452359500509E-7	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.999940605424907	WITHOUT_CLASSIFICATION	5.939457509302346E-5	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.9999816451057465	WITHOUT_CLASSIFICATION	1.835489425353498E-5	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.999998657331123	WITHOUT_CLASSIFICATION	1.3426688770163936E-6	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.9998864149423614	WITHOUT_CLASSIFICATION	1.135850576385797E-4	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.9999994037900048	WITHOUT_CLASSIFICATION	5.962099951229271E-7	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999993676857871	WITHOUT_CLASSIFICATION	6.323142129866304E-7	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.999999692811839	WITHOUT_CLASSIFICATION	3.071881610886973E-7	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.9999911480238403	WITHOUT_CLASSIFICATION	8.851976159827228E-6	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.9999990015304495	WITHOUT_CLASSIFICATION	9.98469550465854E-7	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.9477490600015837	WITHOUT_CLASSIFICATION	0.05225093999841638	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.999999810722885	WITHOUT_CLASSIFICATION	1.8927711508285946E-7	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.999997956495527	WITHOUT_CLASSIFICATION	2.043504472994165E-6	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.9999643957227868	WITHOUT_CLASSIFICATION	3.56042772131361E-5	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.9998505738521675	WITHOUT_CLASSIFICATION	1.4942614783258065E-4	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9995802228675387	WITHOUT_CLASSIFICATION	4.1977713246133544E-4	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.999993638465858	WITHOUT_CLASSIFICATION	6.361534142107245E-6	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.9999892784956561	WITHOUT_CLASSIFICATION	1.0721504343874189E-5	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.9991008391685169	WITHOUT_CLASSIFICATION	8.991608314830389E-4	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9996101523559614	WITHOUT_CLASSIFICATION	3.89847644038636E-4	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9998830423588151	WITHOUT_CLASSIFICATION	1.1695764118493388E-4	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.9999882926376465	WITHOUT_CLASSIFICATION	1.1707362353406613E-5	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999995464730592	WITHOUT_CLASSIFICATION	4.5352694075254253E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999995464730592	WITHOUT_CLASSIFICATION	4.5352694075254253E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999633115277023	WITHOUT_CLASSIFICATION	3.668847229762552E-5	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999285504519172	WITHOUT_CLASSIFICATION	7.144954808276899E-5	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999981037590635	WITHOUT_CLASSIFICATION	1.8962409365029963E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999964711443821	WITHOUT_CLASSIFICATION	3.5288556180783967E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9986635374108381	WITHOUT_CLASSIFICATION	0.001336462589161871	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999976129728122	WITHOUT_CLASSIFICATION	2.3870271878247736E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999809242196376	WITHOUT_CLASSIFICATION	1.9075780362452455E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999995287499506	WITHOUT_CLASSIFICATION	4.7125004944705754E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999141474014	WITHOUT_CLASSIFICATION	8.585259859470762E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999861651421057	WITHOUT_CLASSIFICATION	1.3834857894364272E-5	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999996129765825	WITHOUT_CLASSIFICATION	3.870234174949521E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999996830171862	WITHOUT_CLASSIFICATION	3.1698281371006323E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999920823318337	WITHOUT_CLASSIFICATION	7.917668166278491E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999996045119715	WITHOUT_CLASSIFICATION	3.9548802854170176E-7	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.999991977904638	WITHOUT_CLASSIFICATION	8.02209536205447E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999931296141582	WITHOUT_CLASSIFICATION	6.870385841800775E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999996781403888	WITHOUT_CLASSIFICATION	3.218596110983211E-7	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999644909703215	WITHOUT_CLASSIFICATION	3.550902967847636E-5	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999956241699072	WITHOUT_CLASSIFICATION	4.3758300927896016E-6	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999685502875957	WITHOUT_CLASSIFICATION	3.144971240423419E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999963606907346	WITHOUT_CLASSIFICATION	3.639309265254303E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999963606907346	WITHOUT_CLASSIFICATION	3.639309265254303E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999753115477189	WITHOUT_CLASSIFICATION	2.4688452281034637E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999646657154748	WITHOUT_CLASSIFICATION	3.533428452524302E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999646657154748	WITHOUT_CLASSIFICATION	3.533428452524302E-5	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999945854276613	WITHOUT_CLASSIFICATION	5.414572338661127E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999936479021038	WITHOUT_CLASSIFICATION	6.3520978961742335E-6	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.9999998080386492	WITHOUT_CLASSIFICATION	1.9196135074417173E-7	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.9999953043426281	WITHOUT_CLASSIFICATION	4.695657371926312E-6	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999998706224045	WITHOUT_CLASSIFICATION	1.2937759549375106E-7	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.999999252503151	WITHOUT_CLASSIFICATION	7.474968489941419E-7	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.9999862579495693	WITHOUT_CLASSIFICATION	1.3742050430786281E-5	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.9999990708962054	WITHOUT_CLASSIFICATION	9.291037944475943E-7	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.9999996347727893	WITHOUT_CLASSIFICATION	3.6522721068874646E-7	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9999917464712985	WITHOUT_CLASSIFICATION	8.253528701523944E-6	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.999996563569644	WITHOUT_CLASSIFICATION	3.436430356161039E-6	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.9999959085018499	WITHOUT_CLASSIFICATION	4.091498150092434E-6	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.9999998739147099	WITHOUT_CLASSIFICATION	1.2608529008613825E-7	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.9999999097248413	WITHOUT_CLASSIFICATION	9.027515860379638E-8	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.9999999259196632	WITHOUT_CLASSIFICATION	7.408033673827662E-8	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.999982583189573	WITHOUT_CLASSIFICATION	1.741681042701039E-5	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999998665614442	WITHOUT_CLASSIFICATION	1.334385557939074E-7	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.9999583737911268	WITHOUT_CLASSIFICATION	4.162620887321912E-5	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.9999767747377796	WITHOUT_CLASSIFICATION	2.3225262220496637E-5	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.9993950111211942	WITHOUT_CLASSIFICATION	6.049888788058514E-4	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.999994218312794	WITHOUT_CLASSIFICATION	5.781687206006107E-6	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.999999156206105	WITHOUT_CLASSIFICATION	8.437938951051402E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999633115277023	WITHOUT_CLASSIFICATION	3.668847229762552E-5	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999806967411028	WITHOUT_CLASSIFICATION	1.9303258897268134E-5	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999994097292466	WITHOUT_CLASSIFICATION	5.902707533617598E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999900973808952	WITHOUT_CLASSIFICATION	9.902619104737563E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999947731824048	WITHOUT_CLASSIFICATION	5.226817595093876E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999975644761387	WITHOUT_CLASSIFICATION	2.435523861252531E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999992715526008	WITHOUT_CLASSIFICATION	7.284473990520548E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999921401220967	WITHOUT_CLASSIFICATION	7.859877903242177E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999997268319941	WITHOUT_CLASSIFICATION	2.7316800589367984E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999905784451444	WITHOUT_CLASSIFICATION	9.421554855505036E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999547541623011	WITHOUT_CLASSIFICATION	4.524583769896787E-5	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9993867209855559	WITHOUT_CLASSIFICATION	6.132790144441607E-4	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999990751670511	WITHOUT_CLASSIFICATION	9.248329490401421E-7	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9996562132753318	WITHOUT_CLASSIFICATION	3.437867246681665E-4	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999033583760866	WITHOUT_CLASSIFICATION	9.664162391349133E-5	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.9957261585844933	WITHOUT_CLASSIFICATION	0.004273841415506709	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.9972062621771454	WITHOUT_CLASSIFICATION	0.0027937378228546205	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998110611517	WITHOUT_CLASSIFICATION	1.889388483196094E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999673273487	WITHOUT_CLASSIFICATION	3.267265116780485E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999673273487	WITHOUT_CLASSIFICATION	3.267265116780485E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999673273487	WITHOUT_CLASSIFICATION	3.267265116780485E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999673273487	WITHOUT_CLASSIFICATION	3.267265116780485E-8	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.9999979885119153	WITHOUT_CLASSIFICATION	2.011488084641201E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999984725533593	WITHOUT_CLASSIFICATION	1.527446640706615E-6	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999133562624	WITHOUT_CLASSIFICATION	8.664373769337646E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999133562624	WITHOUT_CLASSIFICATION	8.664373769337646E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999133562624	WITHOUT_CLASSIFICATION	8.664373769337646E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999133562624	WITHOUT_CLASSIFICATION	8.664373769337646E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999133562624	WITHOUT_CLASSIFICATION	8.664373769337646E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999133562624	WITHOUT_CLASSIFICATION	8.664373769337646E-8	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999984725533593	WITHOUT_CLASSIFICATION	1.527446640706615E-6	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999984725533593	WITHOUT_CLASSIFICATION	1.527446640706615E-6	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.9999990516985707	WITHOUT_CLASSIFICATION	9.483014292296049E-7	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.9999981581875527	WITHOUT_CLASSIFICATION	1.8418124473386773E-6	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.999999282867735	WITHOUT_CLASSIFICATION	7.171322649535667E-7	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.9999994613300097	WITHOUT_CLASSIFICATION	5.386699901995849E-7	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9999980215664243	WITHOUT_CLASSIFICATION	1.9784335757934415E-6	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999590656798518	WITHOUT_CLASSIFICATION	4.093432014829087E-5	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999590656798518	WITHOUT_CLASSIFICATION	4.093432014829087E-5	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999986749296952	WITHOUT_CLASSIFICATION	1.3250703047729454E-6	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.9999995096323279	WITHOUT_CLASSIFICATION	4.9036767214184E-7	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.9999995767998109	WITHOUT_CLASSIFICATION	4.2320018905460067E-7	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.9999990968683237	WITHOUT_CLASSIFICATION	9.031316761737836E-7	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.9999987973955856	WITHOUT_CLASSIFICATION	1.2026044144807336E-6	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9999992613821486	WITHOUT_CLASSIFICATION	7.386178515293464E-7	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.9999641238539768	WITHOUT_CLASSIFICATION	3.587614602313268E-5	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999449723562	WITHOUT_CLASSIFICATION	5.5027643794275676E-8	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999998163272309	WITHOUT_CLASSIFICATION	1.8367276903453254E-7	DEFECT
// background	WITHOUT_CLASSIFICATION	0.9999928686016635	WITHOUT_CLASSIFICATION	7.13139833651484E-6	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.9999336887888738	WITHOUT_CLASSIFICATION	6.63112111262463E-5	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9999991138817311	WITHOUT_CLASSIFICATION	8.861182690041556E-7	DEFECT
// view	WITHOUT_CLASSIFICATION	0.9999685292286294	WITHOUT_CLASSIFICATION	3.147077137067259E-5	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.9999891545264049	WITHOUT_CLASSIFICATION	1.0845473595065776E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999992715526008	WITHOUT_CLASSIFICATION	7.284473990520548E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999921401220967	WITHOUT_CLASSIFICATION	7.859877903242177E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999997268319941	WITHOUT_CLASSIFICATION	2.7316800589367984E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999547541623011	WITHOUT_CLASSIFICATION	4.524583769896787E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999993334497966	WITHOUT_CLASSIFICATION	6.665502033470415E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999974511869557	WITHOUT_CLASSIFICATION	2.5488130442342863E-6	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999993203634946	WITHOUT_CLASSIFICATION	6.79636505378912E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999033583760866	WITHOUT_CLASSIFICATION	9.664162391349133E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998110611517	WITHOUT_CLASSIFICATION	1.889388483196094E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999673273487	WITHOUT_CLASSIFICATION	3.267265116780485E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999673273487	WITHOUT_CLASSIFICATION	3.267265116780485E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999133562624	WITHOUT_CLASSIFICATION	8.664373769337646E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999133562624	WITHOUT_CLASSIFICATION	8.664373769337646E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999133562624	WITHOUT_CLASSIFICATION	8.664373769337646E-8	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999984725533593	WITHOUT_CLASSIFICATION	1.527446640706615E-6	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999986749296952	WITHOUT_CLASSIFICATION	1.3250703047729454E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999449723562	WITHOUT_CLASSIFICATION	5.5027643794275676E-8	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999449723562	WITHOUT_CLASSIFICATION	5.5027643794275676E-8	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999998163272309	WITHOUT_CLASSIFICATION	1.8367276903453254E-7	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.9999967295978991	WITHOUT_CLASSIFICATION	3.2704021008137857E-6	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.9999985415176642	WITHOUT_CLASSIFICATION	1.4584823356747308E-6	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.9999990134612015	WITHOUT_CLASSIFICATION	9.865387985236958E-7	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.9999708519275894	WITHOUT_CLASSIFICATION	2.9148072410710677E-5	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.9999991279537005	WITHOUT_CLASSIFICATION	8.720462994431246E-7	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.999999480902298	WITHOUT_CLASSIFICATION	5.190977021097075E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999997677009009	WITHOUT_CLASSIFICATION	2.3229909918762624E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999998517560749	WITHOUT_CLASSIFICATION	1.482439251166309E-7	DEFECT
// label	WITHOUT_CLASSIFICATION	0.9999952535155737	WITHOUT_CLASSIFICATION	4.7464844263211596E-6	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.9999999438824397	WITHOUT_CLASSIFICATION	5.611756026516644E-8	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.9999998529570578	WITHOUT_CLASSIFICATION	1.470429421510333E-7	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.9999913559352704	WITHOUT_CLASSIFICATION	8.644064729611562E-6	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.9999990061856051	WITHOUT_CLASSIFICATION	9.938143948798358E-7	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.9999994236146101	WITHOUT_CLASSIFICATION	5.763853898649672E-7	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.9999997848774684	WITHOUT_CLASSIFICATION	2.1512253155598155E-7	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.9999976699865443	WITHOUT_CLASSIFICATION	2.330013455732884E-6	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.999999111580682	WITHOUT_CLASSIFICATION	8.8841931790811E-7	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.9999997423032114	WITHOUT_CLASSIFICATION	2.576967885352446E-7	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.9999998972814813	WITHOUT_CLASSIFICATION	1.0271851859686062E-7	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.9999998455670969	WITHOUT_CLASSIFICATION	1.5443290311683087E-7	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.9999998919815333	WITHOUT_CLASSIFICATION	1.0801846671087877E-7	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999419481709	WITHOUT_CLASSIFICATION	5.805182898612897E-8	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.999977408054111	WITHOUT_CLASSIFICATION	2.2591945889044913E-5	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.9999787291714788	WITHOUT_CLASSIFICATION	2.127082852121343E-5	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.9999956580994788	WITHOUT_CLASSIFICATION	4.341900521133834E-6	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.9999997784306175	WITHOUT_CLASSIFICATION	2.215693825067429E-7	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.9999998634244232	WITHOUT_CLASSIFICATION	1.3657557684055438E-7	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.999999937499308	WITHOUT_CLASSIFICATION	6.250069204149166E-8	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999999234814126	WITHOUT_CLASSIFICATION	7.651858733212592E-8	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.9999996926694451	WITHOUT_CLASSIFICATION	3.0733055488450466E-7	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.9999998928028874	WITHOUT_CLASSIFICATION	1.0719711270298135E-7	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.9999999180509841	WITHOUT_CLASSIFICATION	8.194901601179563E-8	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.9999999911404834	WITHOUT_CLASSIFICATION	8.859516671442552E-9	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.9999999788555975	WITHOUT_CLASSIFICATION	2.1144402439464803E-8	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999997227043734	WITHOUT_CLASSIFICATION	2.772956266473029E-7	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.999999789256457	WITHOUT_CLASSIFICATION	2.1074354287304793E-7	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.999999905192667	WITHOUT_CLASSIFICATION	9.480733301468669E-8	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999992192246084	WITHOUT_CLASSIFICATION	7.807753914589968E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999862845217855	WITHOUT_CLASSIFICATION	1.3715478214608947E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999419481709	WITHOUT_CLASSIFICATION	5.805182898612897E-8	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999999791533074	WITHOUT_CLASSIFICATION	2.084669257524974E-8	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.9999997319217634	WITHOUT_CLASSIFICATION	2.680782365683205E-7	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.9999999145452078	WITHOUT_CLASSIFICATION	8.545479223874778E-8	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.9999945972287685	WITHOUT_CLASSIFICATION	5.40277123152753E-6	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.9999995991430377	WITHOUT_CLASSIFICATION	4.0085696227687855E-7	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.9999743921855575	WITHOUT_CLASSIFICATION	2.5607814442555715E-5	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.9999994777130005	WITHOUT_CLASSIFICATION	5.222869995641522E-7	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.9999974596126924	WITHOUT_CLASSIFICATION	2.5403873075306624E-6	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.9999976507643834	WITHOUT_CLASSIFICATION	2.3492356165413425E-6	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.9999957204896804	WITHOUT_CLASSIFICATION	4.279510319525953E-6	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.9999887665293311	WITHOUT_CLASSIFICATION	1.123347066893911E-5	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.9999990622617826	WITHOUT_CLASSIFICATION	9.377382174573252E-7	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.999996522726128	WITHOUT_CLASSIFICATION	3.4772738719986403E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999946307891	WITHOUT_CLASSIFICATION	5.369210895585703E-9	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999946307891	WITHOUT_CLASSIFICATION	5.369210895585703E-9	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999946307891	WITHOUT_CLASSIFICATION	5.369210895585703E-9	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.999962492878935	WITHOUT_CLASSIFICATION	3.750712106498027E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.999962492878935	WITHOUT_CLASSIFICATION	3.750712106498027E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.999962492878935	WITHOUT_CLASSIFICATION	3.750712106498027E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999996994262333	WITHOUT_CLASSIFICATION	3.005737665900869E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999996994262333	WITHOUT_CLASSIFICATION	3.005737665900869E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999996328145853	WITHOUT_CLASSIFICATION	3.6718541484183543E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999996328145853	WITHOUT_CLASSIFICATION	3.6718541484183543E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999996328145853	WITHOUT_CLASSIFICATION	3.6718541484183543E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999996328145853	WITHOUT_CLASSIFICATION	3.6718541484183543E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999974488671378	WITHOUT_CLASSIFICATION	2.551132862123186E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999974488671378	WITHOUT_CLASSIFICATION	2.551132862123186E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999974488671378	WITHOUT_CLASSIFICATION	2.551132862123186E-6	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999974488671378	WITHOUT_CLASSIFICATION	2.551132862123186E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999951717153914	WITHOUT_CLASSIFICATION	4.828284608526599E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999951717153914	WITHOUT_CLASSIFICATION	4.828284608526599E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999951717153914	WITHOUT_CLASSIFICATION	4.828284608526599E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999951717153914	WITHOUT_CLASSIFICATION	4.828284608526599E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999951717153914	WITHOUT_CLASSIFICATION	4.828284608526599E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995077726432	WITHOUT_CLASSIFICATION	4.922273567257884E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995077726432	WITHOUT_CLASSIFICATION	4.922273567257884E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995077726432	WITHOUT_CLASSIFICATION	4.922273567257884E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995077726432	WITHOUT_CLASSIFICATION	4.922273567257884E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999985990590943	WITHOUT_CLASSIFICATION	1.4009409057624688E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999985990590943	WITHOUT_CLASSIFICATION	1.4009409057624688E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999996994262333	WITHOUT_CLASSIFICATION	3.005737665900869E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999996328145853	WITHOUT_CLASSIFICATION	3.6718541484183543E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999974488671378	WITHOUT_CLASSIFICATION	2.551132862123186E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999951717153914	WITHOUT_CLASSIFICATION	4.828284608526599E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999995077726432	WITHOUT_CLASSIFICATION	4.922273567257884E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999985990590943	WITHOUT_CLASSIFICATION	1.4009409057624688E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999999291697318	WITHOUT_CLASSIFICATION	7.08302681937495E-8	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999996836161955	WITHOUT_CLASSIFICATION	3.1638380448666184E-7	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.9999974939317064	WITHOUT_CLASSIFICATION	2.5060682935711163E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999876477379083	WITHOUT_CLASSIFICATION	1.235226209167665E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999876477379083	WITHOUT_CLASSIFICATION	1.235226209167665E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999714166322247	WITHOUT_CLASSIFICATION	2.858336777534675E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999714166322247	WITHOUT_CLASSIFICATION	2.858336777534675E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999714166322247	WITHOUT_CLASSIFICATION	2.858336777534675E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999545826403	WITHOUT_CLASSIFICATION	4.541735964389921E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999545826403	WITHOUT_CLASSIFICATION	4.541735964389921E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.9994350147564933	WITHOUT_CLASSIFICATION	5.649852435066822E-4	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.9999998770182129	WITHOUT_CLASSIFICATION	1.2298178708152671E-7	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.9999982364903244	WITHOUT_CLASSIFICATION	1.7635096756305178E-6	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.9999997355760037	WITHOUT_CLASSIFICATION	2.644239961695359E-7	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.9999988740523894	WITHOUT_CLASSIFICATION	1.125947610654182E-6	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.9999992243303367	WITHOUT_CLASSIFICATION	7.756696632347793E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999979846965174	WITHOUT_CLASSIFICATION	2.015303482619901E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999992755577005	WITHOUT_CLASSIFICATION	7.244422994015825E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.999999532833439	WITHOUT_CLASSIFICATION	4.6716656106107726E-7	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999998274939806	WITHOUT_CLASSIFICATION	1.7250601926171175E-7	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999876477379083	WITHOUT_CLASSIFICATION	1.235226209167665E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999714166322247	WITHOUT_CLASSIFICATION	2.858336777534675E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999545826403	WITHOUT_CLASSIFICATION	4.541735964389921E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999545826403	WITHOUT_CLASSIFICATION	4.541735964389921E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999545826403	WITHOUT_CLASSIFICATION	4.541735964389921E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999545826403	WITHOUT_CLASSIFICATION	4.541735964389921E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999992622779965	WITHOUT_CLASSIFICATION	7.377220035283916E-7	DEFECT
// map	WITHOUT_CLASSIFICATION	0.9999844021558544	WITHOUT_CLASSIFICATION	1.5597844145644258E-5	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.9999999474503365	WITHOUT_CLASSIFICATION	5.2549663408592725E-8	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999864034582	WITHOUT_CLASSIFICATION	1.3596541800669454E-8	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.999999954381183	WITHOUT_CLASSIFICATION	4.561881691262389E-8	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.9999999905758115	WITHOUT_CLASSIFICATION	9.424188534076795E-9	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999840881274	WITHOUT_CLASSIFICATION	1.5911872564627536E-8	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.9999999638413742	WITHOUT_CLASSIFICATION	3.615862583873874E-8	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999999901363205	WITHOUT_CLASSIFICATION	9.863679458180604E-9	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999997840865533	WITHOUT_CLASSIFICATION	2.1591344670895436E-7	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999998792487776	WITHOUT_CLASSIFICATION	1.2075122239835756E-7	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999997845237699	WITHOUT_CLASSIFICATION	2.154762301640774E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999943026536747	WITHOUT_CLASSIFICATION	5.697346325273611E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999943026536747	WITHOUT_CLASSIFICATION	5.697346325273611E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999943026536747	WITHOUT_CLASSIFICATION	5.697346325273611E-6	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.999999898343579	WITHOUT_CLASSIFICATION	1.0165642091227992E-7	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.9999996795985999	WITHOUT_CLASSIFICATION	3.2040140004688315E-7	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.9999989255090952	WITHOUT_CLASSIFICATION	1.0744909048736847E-6	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.999997202176411	WITHOUT_CLASSIFICATION	2.79782358903291E-6	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.9999996170386275	WITHOUT_CLASSIFICATION	3.8296137249532844E-7	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999863701043	WITHOUT_CLASSIFICATION	1.3629895570114042E-8	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999979721262647	WITHOUT_CLASSIFICATION	2.027873735325101E-6	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999988314391121	WITHOUT_CLASSIFICATION	1.168560887950851E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999997653772771	WITHOUT_CLASSIFICATION	2.346227229836877E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999978286530463	WITHOUT_CLASSIFICATION	2.1713469537555524E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999979846965174	WITHOUT_CLASSIFICATION	2.015303482619901E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999992755577005	WITHOUT_CLASSIFICATION	7.244422994015825E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999545826403	WITHOUT_CLASSIFICATION	4.541735964389921E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999992622779965	WITHOUT_CLASSIFICATION	7.377220035283916E-7	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999997653772771	WITHOUT_CLASSIFICATION	2.346227229836877E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999978286530463	WITHOUT_CLASSIFICATION	2.1713469537555524E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999994014378123	WITHOUT_CLASSIFICATION	5.985621878142059E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995902734018	WITHOUT_CLASSIFICATION	4.0972659825891203E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995902734018	WITHOUT_CLASSIFICATION	4.0972659825891203E-7	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9997355771161228	WITHOUT_CLASSIFICATION	2.644228838771375E-4	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.9999999272713446	WITHOUT_CLASSIFICATION	7.272865551874997E-8	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.9999984350459759	WITHOUT_CLASSIFICATION	1.5649540241457233E-6	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.9999997924563429	WITHOUT_CLASSIFICATION	2.075436572338799E-7	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.9999999255085139	WITHOUT_CLASSIFICATION	7.449148600593597E-8	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.9999997081297807	WITHOUT_CLASSIFICATION	2.9187021934009096E-7	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.9999995536313093	WITHOUT_CLASSIFICATION	4.4636869075541046E-7	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.9999894400343571	WITHOUT_CLASSIFICATION	1.0559965642880299E-5	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999973212128638	WITHOUT_CLASSIFICATION	2.678787136247256E-6	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.999998456350273	WITHOUT_CLASSIFICATION	1.5436497270312775E-6	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.9999999984578916	WITHOUT_CLASSIFICATION	1.5421084297885664E-9	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.9999974313365072	WITHOUT_CLASSIFICATION	2.568663492694999E-6	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.9999997084576927	WITHOUT_CLASSIFICATION	2.915423072603052E-7	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.9999996322143515	WITHOUT_CLASSIFICATION	3.6778564842840214E-7	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.9999995657598557	WITHOUT_CLASSIFICATION	4.3424014425522145E-7	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.9999937773394352	WITHOUT_CLASSIFICATION	6.222660564806031E-6	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.9999995202170494	WITHOUT_CLASSIFICATION	4.79782950512748E-7	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.9999991697770433	WITHOUT_CLASSIFICATION	8.30222956800715E-7	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.9999997231259791	WITHOUT_CLASSIFICATION	2.7687402101048753E-7	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.9999996858513073	WITHOUT_CLASSIFICATION	3.1414869278144106E-7	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.9999999213967274	WITHOUT_CLASSIFICATION	7.86032725523483E-8	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.9999907960003243	WITHOUT_CLASSIFICATION	9.203999675851889E-6	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999996987836896	WITHOUT_CLASSIFICATION	3.012163104837226E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.999998207373858	WITHOUT_CLASSIFICATION	1.792626141953694E-6	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.9999354836351784	WITHOUT_CLASSIFICATION	6.45163648215948E-5	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.9999749161417659	WITHOUT_CLASSIFICATION	2.508385823401762E-5	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.9999975081733041	WITHOUT_CLASSIFICATION	2.491826695804094E-6	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.9999983967392019	WITHOUT_CLASSIFICATION	1.6032607982203171E-6	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.9998360199932078	WITHOUT_CLASSIFICATION	1.6398000679223289E-4	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.9999999986019835	WITHOUT_CLASSIFICATION	1.3980164680655427E-9	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.9999995088462428	WITHOUT_CLASSIFICATION	4.911537572025888E-7	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.9999908149776421	WITHOUT_CLASSIFICATION	9.185022357886419E-6	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.9999989652867356	WITHOUT_CLASSIFICATION	1.0347132643973388E-6	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.9999993360352879	WITHOUT_CLASSIFICATION	6.639647121210208E-7	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.9999981368220016	WITHOUT_CLASSIFICATION	1.8631779984337084E-6	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.9999997900103386	WITHOUT_CLASSIFICATION	2.099896614039684E-7	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.9999994139923623	WITHOUT_CLASSIFICATION	5.860076377657214E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999975644761387	WITHOUT_CLASSIFICATION	2.435523861252531E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999809369076816	WITHOUT_CLASSIFICATION	1.9063092318327886E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999926906666	WITHOUT_CLASSIFICATION	7.3093333477311535E-9	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999986056417611	WITHOUT_CLASSIFICATION	1.3943582388227081E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999992715526008	WITHOUT_CLASSIFICATION	7.284473990520548E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999992140545483	WITHOUT_CLASSIFICATION	7.859454517325686E-7	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.999997268319941	WITHOUT_CLASSIFICATION	2.7316800589367984E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999914498877363	WITHOUT_CLASSIFICATION	8.550112263742637E-6	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999993334497966	WITHOUT_CLASSIFICATION	6.665502033470415E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999033583760866	WITHOUT_CLASSIFICATION	9.664162391349133E-5	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999993676857871	WITHOUT_CLASSIFICATION	6.323142129866304E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998063195666	WITHOUT_CLASSIFICATION	1.9368043337637362E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999943026536747	WITHOUT_CLASSIFICATION	5.697346325273611E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999943026536747	WITHOUT_CLASSIFICATION	5.697346325273611E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999943026536747	WITHOUT_CLASSIFICATION	5.697346325273611E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995902734018	WITHOUT_CLASSIFICATION	4.0972659825891203E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995902734018	WITHOUT_CLASSIFICATION	4.0972659825891203E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995902734018	WITHOUT_CLASSIFICATION	4.0972659825891203E-7	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999996987836896	WITHOUT_CLASSIFICATION	3.012163104837226E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.999998207373858	WITHOUT_CLASSIFICATION	1.792626141953694E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.998844689797676	WITHOUT_CLASSIFICATION	0.0011553102023238975	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.9999991859976921	WITHOUT_CLASSIFICATION	8.140023077988862E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999999183834711	WITHOUT_CLASSIFICATION	8.161652886663804E-8	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999999183834711	WITHOUT_CLASSIFICATION	8.161652886663804E-8	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.9999999271183702	WITHOUT_CLASSIFICATION	7.288162983428356E-8	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.9999992110822491	WITHOUT_CLASSIFICATION	7.889177509540075E-7	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.9999968898134778	WITHOUT_CLASSIFICATION	3.1101865222630473E-6	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.9999977291405375	WITHOUT_CLASSIFICATION	2.270859462565696E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999997262759044	WITHOUT_CLASSIFICATION	2.737240955803158E-7	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999997262759044	WITHOUT_CLASSIFICATION	2.737240955803158E-7	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.9999995043369078	WITHOUT_CLASSIFICATION	4.956630922570536E-7	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.9999969153015303	WITHOUT_CLASSIFICATION	3.0846984697010304E-6	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.999999767662912	WITHOUT_CLASSIFICATION	2.323370879782263E-7	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.9999993988191174	WITHOUT_CLASSIFICATION	6.011808826444802E-7	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.9999999139782023	WITHOUT_CLASSIFICATION	8.602179762866167E-8	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999545199246	WITHOUT_CLASSIFICATION	4.548007527020688E-8	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.9999912758009069	WITHOUT_CLASSIFICATION	8.724199093222851E-6	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.9999995693921407	WITHOUT_CLASSIFICATION	4.3060785930926357E-7	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.9999997975802022	WITHOUT_CLASSIFICATION	2.0241979784258E-7	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.9999999083047156	WITHOUT_CLASSIFICATION	9.169528426116157E-8	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.99999957901019	WITHOUT_CLASSIFICATION	4.2098981003444196E-7	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.9999995601365673	WITHOUT_CLASSIFICATION	4.3986343265743667E-7	DEFECT
// line	WITHOUT_CLASSIFICATION	0.9999939400546962	WITHOUT_CLASSIFICATION	6.059945303714757E-6	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.9998652814731054	WITHOUT_CLASSIFICATION	1.3471852689469504E-4	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.9999998918441312	WITHOUT_CLASSIFICATION	1.0815586879942063E-7	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.9999913644697219	WITHOUT_CLASSIFICATION	8.635530278102742E-6	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.9999981256324436	WITHOUT_CLASSIFICATION	1.8743675563659064E-6	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.9999955676666717	WITHOUT_CLASSIFICATION	4.432333328262054E-6	DEFECT
// border	WITHOUT_CLASSIFICATION	0.9999988845717702	WITHOUT_CLASSIFICATION	1.1154282297364436E-6	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.9999995222169511	WITHOUT_CLASSIFICATION	4.77783048854278E-7	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999946726759877	WITHOUT_CLASSIFICATION	5.327324012210125E-6	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999999045351616	WITHOUT_CLASSIFICATION	9.546483834218229E-8	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999992967536553	WITHOUT_CLASSIFICATION	7.032463447672309E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999994014378123	WITHOUT_CLASSIFICATION	5.985621878142059E-7	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9993925871974125	WITHOUT_CLASSIFICATION	6.074128025875116E-4	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999946726759877	WITHOUT_CLASSIFICATION	5.327324012210125E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999999415472787	WITHOUT_CLASSIFICATION	5.8452721344799116E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.999995250606567	WITHOUT_CLASSIFICATION	4.749393432960348E-6	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.999995250606567	WITHOUT_CLASSIFICATION	4.749393432960348E-6	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999991373046199	WITHOUT_CLASSIFICATION	8.626953801157443E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999991373046199	WITHOUT_CLASSIFICATION	8.626953801157443E-7	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.999998809309059	WITHOUT_CLASSIFICATION	1.190690940892559E-6	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999253181204	WITHOUT_CLASSIFICATION	7.468187958983706E-8	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.9999996172045568	WITHOUT_CLASSIFICATION	3.8279544326404876E-7	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.9999982835917421	WITHOUT_CLASSIFICATION	1.7164082578638239E-6	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999971892016979	WITHOUT_CLASSIFICATION	2.8107983020908407E-6	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999971892016979	WITHOUT_CLASSIFICATION	2.8107983020908407E-6	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.9998633384444883	WITHOUT_CLASSIFICATION	1.3666155551162888E-4	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999994994783812	WITHOUT_CLASSIFICATION	5.005216189100824E-7	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.999999992983258	WITHOUT_CLASSIFICATION	7.016741945797412E-9	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.9999996375699055	WITHOUT_CLASSIFICATION	3.6243009451244426E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999997734451774	WITHOUT_CLASSIFICATION	2.2655482262259378E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999968570061002	WITHOUT_CLASSIFICATION	3.14299389974852E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999998895210558	WITHOUT_CLASSIFICATION	1.1047894426986033E-7	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999873355281875	WITHOUT_CLASSIFICATION	1.2664471812344511E-5	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999873355281875	WITHOUT_CLASSIFICATION	1.2664471812344511E-5	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999930571864758	WITHOUT_CLASSIFICATION	6.942813524213516E-6	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.9999999874163616	WITHOUT_CLASSIFICATION	1.2583638234510433E-8	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.9999999163349113	WITHOUT_CLASSIFICATION	8.366508864605751E-8	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.9999062142492886	WITHOUT_CLASSIFICATION	9.37857507114203E-5	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.9999815251257351	WITHOUT_CLASSIFICATION	1.847487426486459E-5	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.9999899253078629	WITHOUT_CLASSIFICATION	1.007469213714998E-5	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.9999968850959664	WITHOUT_CLASSIFICATION	3.1149040335319576E-6	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.9999481733802044	WITHOUT_CLASSIFICATION	5.1826619795638676E-5	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.9999862914973259	WITHOUT_CLASSIFICATION	1.370850267406506E-5	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.9999780162928306	WITHOUT_CLASSIFICATION	2.1983707169363743E-5	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.9999997184709332	WITHOUT_CLASSIFICATION	2.8152906685666494E-7	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.9999976987449269	WITHOUT_CLASSIFICATION	2.301255072985636E-6	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.9999910994932991	WITHOUT_CLASSIFICATION	8.900506700803123E-6	DEFECT
// key	WITHOUT_CLASSIFICATION	0.9999916686550276	WITHOUT_CLASSIFICATION	8.33134497228652E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999991835593645	WITHOUT_CLASSIFICATION	8.16440635645369E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994610935371	WITHOUT_CLASSIFICATION	5.389064629758677E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996297446353	WITHOUT_CLASSIFICATION	3.7025536462902615E-7	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.9999986149104156	WITHOUT_CLASSIFICATION	1.3850895843827678E-6	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.999998851713676	WITHOUT_CLASSIFICATION	1.1482863240435271E-6	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.9999865950647059	WITHOUT_CLASSIFICATION	1.3404935294221661E-5	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.999999898707835	WITHOUT_CLASSIFICATION	1.0129216504719135E-7	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999999216317746	WITHOUT_CLASSIFICATION	7.836822531318818E-8	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999973514165809	WITHOUT_CLASSIFICATION	2.6485834191703384E-6	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9999994577176765	WITHOUT_CLASSIFICATION	5.422823233846305E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999994994783812	WITHOUT_CLASSIFICATION	5.005216189100824E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999997734451774	WITHOUT_CLASSIFICATION	2.2655482262259378E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999997734451774	WITHOUT_CLASSIFICATION	2.2655482262259378E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999837622238	WITHOUT_CLASSIFICATION	1.6237776188447236E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999837622238	WITHOUT_CLASSIFICATION	1.6237776188447236E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999837622238	WITHOUT_CLASSIFICATION	1.6237776188447236E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999837622238	WITHOUT_CLASSIFICATION	1.6237776188447236E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999968570061002	WITHOUT_CLASSIFICATION	3.14299389974852E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999968570061002	WITHOUT_CLASSIFICATION	3.14299389974852E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999968570061002	WITHOUT_CLASSIFICATION	3.14299389974852E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999968570061002	WITHOUT_CLASSIFICATION	3.14299389974852E-6	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999973514165809	WITHOUT_CLASSIFICATION	2.6485834191703384E-6	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.992363905842891	WITHOUT_CLASSIFICATION	0.007636094157108995	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.9988564342061861	WITHOUT_CLASSIFICATION	0.0011435657938138985	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.999982238642572	WITHOUT_CLASSIFICATION	1.776135742805887E-5	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.9999995336950087	WITHOUT_CLASSIFICATION	4.6630499127035485E-7	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.9999653719758453	WITHOUT_CLASSIFICATION	3.462802415467769E-5	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.9999968281495734	WITHOUT_CLASSIFICATION	3.171850426618207E-6	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.9999870922552182	WITHOUT_CLASSIFICATION	1.2907744781736531E-5	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.9999995805776128	WITHOUT_CLASSIFICATION	4.194223871470543E-7	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999998395926598	WITHOUT_CLASSIFICATION	1.6040734017230151E-7	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999998395926598	WITHOUT_CLASSIFICATION	1.6040734017230151E-7	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.9999997951319418	WITHOUT_CLASSIFICATION	2.0486805826385688E-7	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.9999978839152294	WITHOUT_CLASSIFICATION	2.1160847706253377E-6	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.9998575739782745	WITHOUT_CLASSIFICATION	1.4242602172552833E-4	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.9998455822190405	WITHOUT_CLASSIFICATION	1.544177809594945E-4	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.9999537914017684	WITHOUT_CLASSIFICATION	4.620859823164577E-5	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9999280198257771	WITHOUT_CLASSIFICATION	7.19801742228817E-5	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.9999817308542035	WITHOUT_CLASSIFICATION	1.8269145796529195E-5	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.9999918739326773	WITHOUT_CLASSIFICATION	8.12606732271123E-6	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.9999934467001759	WITHOUT_CLASSIFICATION	6.553299824182365E-6	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.999998092271133	WITHOUT_CLASSIFICATION	1.9077288668984155E-6	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999998321202753	WITHOUT_CLASSIFICATION	1.6787972470509984E-7	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999998321202753	WITHOUT_CLASSIFICATION	1.6787972470509984E-7	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999876378858227	WITHOUT_CLASSIFICATION	1.2362114177327767E-5	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.9999999379666281	WITHOUT_CLASSIFICATION	6.203337187522118E-8	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.9999994794545154	WITHOUT_CLASSIFICATION	5.20545484534986E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999822528798	WITHOUT_CLASSIFICATION	1.774712023086288E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999822528798	WITHOUT_CLASSIFICATION	1.774712023086288E-8	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.9999996343028523	WITHOUT_CLASSIFICATION	3.6569714761290793E-7	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999928838705372	WITHOUT_CLASSIFICATION	7.116129462762171E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999928838705372	WITHOUT_CLASSIFICATION	7.116129462762171E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999617115594804	WITHOUT_CLASSIFICATION	3.828844051948114E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999617115594804	WITHOUT_CLASSIFICATION	3.828844051948114E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999617115594804	WITHOUT_CLASSIFICATION	3.828844051948114E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999956101410844	WITHOUT_CLASSIFICATION	4.389858915640431E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999996206071544	WITHOUT_CLASSIFICATION	3.793928455489629E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999545826403	WITHOUT_CLASSIFICATION	4.541735964389921E-8	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999918744016099	WITHOUT_CLASSIFICATION	8.125598390165127E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999918744016099	WITHOUT_CLASSIFICATION	8.125598390165127E-6	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999876378858227	WITHOUT_CLASSIFICATION	1.2362114177327767E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999822528798	WITHOUT_CLASSIFICATION	1.774712023086288E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999822528798	WITHOUT_CLASSIFICATION	1.774712023086288E-8	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999617115594804	WITHOUT_CLASSIFICATION	3.828844051948114E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999617115594804	WITHOUT_CLASSIFICATION	3.828844051948114E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999617115594804	WITHOUT_CLASSIFICATION	3.828844051948114E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999956101410844	WITHOUT_CLASSIFICATION	4.389858915640431E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999996206071544	WITHOUT_CLASSIFICATION	3.793928455489629E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999998949596927	WITHOUT_CLASSIFICATION	1.0504030725070118E-7	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999549829774372	WITHOUT_CLASSIFICATION	4.501702256268085E-5	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.9999999075604926	WITHOUT_CLASSIFICATION	9.243950737384291E-8	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.999996576970376	WITHOUT_CLASSIFICATION	3.4230296240220732E-6	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999965627296785	WITHOUT_CLASSIFICATION	3.4372703215382402E-6	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9997047299767913	WITHOUT_CLASSIFICATION	2.952700232087588E-4	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9999220206564626	WITHOUT_CLASSIFICATION	7.797934353741905E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999049881336134	WITHOUT_CLASSIFICATION	9.501186638668207E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999977792870751	WITHOUT_CLASSIFICATION	2.2207129249541526E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999977792870751	WITHOUT_CLASSIFICATION	2.2207129249541526E-6	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.9999999480344147	WITHOUT_CLASSIFICATION	5.19655853001556E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999825150147	WITHOUT_CLASSIFICATION	1.7484985397901455E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999825150147	WITHOUT_CLASSIFICATION	1.7484985397901455E-8	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9999996542552837	WITHOUT_CLASSIFICATION	3.457447163560981E-7	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.9999993988844926	WITHOUT_CLASSIFICATION	6.011155074708704E-7	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.9999995706341608	WITHOUT_CLASSIFICATION	4.293658392430268E-7	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.9999992120873574	WITHOUT_CLASSIFICATION	7.879126427096443E-7	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999998766094258	WITHOUT_CLASSIFICATION	1.233905741854263E-7	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999998766094258	WITHOUT_CLASSIFICATION	1.233905741854263E-7	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999998766094258	WITHOUT_CLASSIFICATION	1.233905741854263E-7	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.9999813088463797	WITHOUT_CLASSIFICATION	1.8691153620281105E-5	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.9999840978606639	WITHOUT_CLASSIFICATION	1.590213933610875E-5	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999993184541593	WITHOUT_CLASSIFICATION	6.815458406748595E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999999343942013	WITHOUT_CLASSIFICATION	6.560579869509388E-8	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.9999987847251766	WITHOUT_CLASSIFICATION	1.2152748234636399E-6	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999998522404275	WITHOUT_CLASSIFICATION	1.4775957245946225E-7	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999999107392327	WITHOUT_CLASSIFICATION	8.926076737175785E-8	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999990935544195	WITHOUT_CLASSIFICATION	9.064455804809238E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999990935544195	WITHOUT_CLASSIFICATION	9.064455804809238E-7	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999993656614972	WITHOUT_CLASSIFICATION	6.343385028788794E-7	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.9999997417211385	WITHOUT_CLASSIFICATION	2.582788615606586E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999994014378123	WITHOUT_CLASSIFICATION	5.985621878142059E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999994014378123	WITHOUT_CLASSIFICATION	5.985621878142059E-7	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999253181204	WITHOUT_CLASSIFICATION	7.468187958983706E-8	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999549829774372	WITHOUT_CLASSIFICATION	4.501702256268085E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999049881336134	WITHOUT_CLASSIFICATION	9.501186638668207E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999977792870751	WITHOUT_CLASSIFICATION	2.2207129249541526E-6	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999999343942013	WITHOUT_CLASSIFICATION	6.560579869509388E-8	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999999343942013	WITHOUT_CLASSIFICATION	6.560579869509388E-8	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999993184541593	WITHOUT_CLASSIFICATION	6.815458406748595E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999998949596927	WITHOUT_CLASSIFICATION	1.0504030725070118E-7	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999999107392327	WITHOUT_CLASSIFICATION	8.926076737175785E-8	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999998522404275	WITHOUT_CLASSIFICATION	1.4775957245946225E-7	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.9999989065805773	WITHOUT_CLASSIFICATION	1.0934194226444425E-6	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.9994220325578401	WITHOUT_CLASSIFICATION	5.779674421598665E-4	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.999999985656609	WITHOUT_CLASSIFICATION	1.4343391122507317E-8	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.999974677263915	WITHOUT_CLASSIFICATION	2.532273608498485E-5	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999995135550344	WITHOUT_CLASSIFICATION	4.864449657164161E-7	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999995135550344	WITHOUT_CLASSIFICATION	4.864449657164161E-7	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999983271462797	WITHOUT_CLASSIFICATION	1.6728537202786496E-6	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999995057447022	WITHOUT_CLASSIFICATION	4.942552977212971E-7	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999994958103668	WITHOUT_CLASSIFICATION	5.041896330720885E-7	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.9999999503536824	WITHOUT_CLASSIFICATION	4.964631755802427E-8	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999997508291597	WITHOUT_CLASSIFICATION	2.4917084022576253E-7	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.9999999724350576	WITHOUT_CLASSIFICATION	2.756494250332573E-8	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.9999998759269566	WITHOUT_CLASSIFICATION	1.240730432894461E-7	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.9999999598798487	WITHOUT_CLASSIFICATION	4.012015117779881E-8	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.9999911872008882	WITHOUT_CLASSIFICATION	8.812799111713185E-6	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.9999901310678523	WITHOUT_CLASSIFICATION	9.868932147725652E-6	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.999992565443479	WITHOUT_CLASSIFICATION	7.434556520916993E-6	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.9999979694445855	WITHOUT_CLASSIFICATION	2.0305554145178865E-6	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.9999997894255425	WITHOUT_CLASSIFICATION	2.1057445748976346E-7	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999971917365466	WITHOUT_CLASSIFICATION	2.8082634534271042E-6	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.9999964989067411	WITHOUT_CLASSIFICATION	3.501093258957772E-6	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.9999979812173498	WITHOUT_CLASSIFICATION	2.0187826501095286E-6	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999962634635655	WITHOUT_CLASSIFICATION	3.73653643447054E-6	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999999369365441	WITHOUT_CLASSIFICATION	6.306345582948778E-8	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999962920136442	WITHOUT_CLASSIFICATION	3.7079863558639305E-6	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9999997189465292	WITHOUT_CLASSIFICATION	2.810534708911711E-7	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.9999986130786561	WITHOUT_CLASSIFICATION	1.386921343832911E-6	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.9999999723959868	WITHOUT_CLASSIFICATION	2.760401319540566E-8	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.9999979139040887	WITHOUT_CLASSIFICATION	2.086095911235844E-6	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.9999999487805389	WITHOUT_CLASSIFICATION	5.121946098654582E-8	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.9999998567126499	WITHOUT_CLASSIFICATION	1.432873501340731E-7	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.9999996381552481	WITHOUT_CLASSIFICATION	3.6184475193391205E-7	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.9999993467127879	WITHOUT_CLASSIFICATION	6.532872120238545E-7	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999996444891809	WITHOUT_CLASSIFICATION	3.555108191526031E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999939121825047	WITHOUT_CLASSIFICATION	6.0878174952960355E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999994014378123	WITHOUT_CLASSIFICATION	5.985621878142059E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999962920136442	WITHOUT_CLASSIFICATION	3.7079863558639305E-6	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.9999991471129477	WITHOUT_CLASSIFICATION	8.528870524071399E-7	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.9999952128833773	WITHOUT_CLASSIFICATION	4.787116622707273E-6	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.9999844990091397	WITHOUT_CLASSIFICATION	1.550099086044322E-5	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.999999414394387	WITHOUT_CLASSIFICATION	5.856056129886975E-7	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.9999999695515596	WITHOUT_CLASSIFICATION	3.044844040086293E-8	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.9999999708304285	WITHOUT_CLASSIFICATION	2.9169571622213646E-8	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999999590270039	WITHOUT_CLASSIFICATION	4.097299604487567E-8	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999999988322039	WITHOUT_CLASSIFICATION	1.1677960933517594E-9	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999971828188522	WITHOUT_CLASSIFICATION	2.8171811477865842E-6	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.9999993630207364	WITHOUT_CLASSIFICATION	6.369792636993957E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.998844689797676	WITHOUT_CLASSIFICATION	0.0011553102023238975	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.9997921158009764	WITHOUT_CLASSIFICATION	2.0788419902360888E-4	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.9999980115304324	WITHOUT_CLASSIFICATION	1.9884695675394934E-6	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9999888723289961	WITHOUT_CLASSIFICATION	1.112767100399443E-5	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.999998429765972	WITHOUT_CLASSIFICATION	1.5702340280856575E-6	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.9996049159863655	WITHOUT_CLASSIFICATION	3.9508401363454925E-4	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.9999999356474384	WITHOUT_CLASSIFICATION	6.435256162468106E-8	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.9999985100378107	WITHOUT_CLASSIFICATION	1.4899621893315728E-6	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.9999841338225406	WITHOUT_CLASSIFICATION	1.5866177459393334E-5	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.9999889214025567	WITHOUT_CLASSIFICATION	1.1078597443213448E-5	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.9999962260349939	WITHOUT_CLASSIFICATION	3.7739650061581822E-6	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.9999999988421706	WITHOUT_CLASSIFICATION	1.1578294742020618E-9	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999993610482005	WITHOUT_CLASSIFICATION	6.38951799451632E-7	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999993610482005	WITHOUT_CLASSIFICATION	6.38951799451632E-7	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9999994153828855	WITHOUT_CLASSIFICATION	5.846171144320153E-7	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.9999836886197936	WITHOUT_CLASSIFICATION	1.631138020646341E-5	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9999948561578419	WITHOUT_CLASSIFICATION	5.143842158106373E-6	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.9999573475776786	WITHOUT_CLASSIFICATION	4.265242232132964E-5	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.9999993874479332	WITHOUT_CLASSIFICATION	6.125520668949211E-7	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999972901295342	WITHOUT_CLASSIFICATION	2.7098704657712493E-6	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.9999998483127843	WITHOUT_CLASSIFICATION	1.5168721559395484E-7	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999994146702761	WITHOUT_CLASSIFICATION	5.853297238235861E-7	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.9999983168698038	WITHOUT_CLASSIFICATION	1.6831301961618043E-6	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.9999928535605799	WITHOUT_CLASSIFICATION	7.14643942014978E-6	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.9998455612716868	WITHOUT_CLASSIFICATION	1.5443872831319276E-4	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.9999994257888323	WITHOUT_CLASSIFICATION	5.742111677405713E-7	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.9999906749963323	WITHOUT_CLASSIFICATION	9.325003667716729E-6	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.9999921690306498	WITHOUT_CLASSIFICATION	7.830969350117371E-6	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9991824307810867	WITHOUT_CLASSIFICATION	8.175692189132821E-4	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.9999999937985076	WITHOUT_CLASSIFICATION	6.201492333294354E-9	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9999999057619156	WITHOUT_CLASSIFICATION	9.423808442684954E-8	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.998056890907064	WITHOUT_CLASSIFICATION	0.0019431090929359607	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.998056890907064	WITHOUT_CLASSIFICATION	0.0019431090929359607	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.998056890907064	WITHOUT_CLASSIFICATION	0.0019431090929359607	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999894960638755	WITHOUT_CLASSIFICATION	1.0503936124562112E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999932917714833	WITHOUT_CLASSIFICATION	6.708228516668513E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999932917714833	WITHOUT_CLASSIFICATION	6.708228516668513E-6	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.9999987991593725	WITHOUT_CLASSIFICATION	1.2008406275506795E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999875502384241	WITHOUT_CLASSIFICATION	1.2449761575990347E-5	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999863350167775	WITHOUT_CLASSIFICATION	1.3664983222537799E-5	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999963963447582	WITHOUT_CLASSIFICATION	3.603655241662035E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999963963447582	WITHOUT_CLASSIFICATION	3.603655241662035E-6	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.9999987329320164	WITHOUT_CLASSIFICATION	1.267067983622461E-6	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.9999980793259414	WITHOUT_CLASSIFICATION	1.920674058593351E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999998830352522	WITHOUT_CLASSIFICATION	1.1696474775137885E-7	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999862083917	WITHOUT_CLASSIFICATION	1.3791608316419879E-8	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.999999186652247	WITHOUT_CLASSIFICATION	8.133477529447953E-7	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999998830352522	WITHOUT_CLASSIFICATION	1.1696474775137885E-7	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999862083917	WITHOUT_CLASSIFICATION	1.3791608316419879E-8	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.9999999579193454	WITHOUT_CLASSIFICATION	4.2080654703034296E-8	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.9999998117076021	WITHOUT_CLASSIFICATION	1.8829239795762756E-7	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999996762271187	WITHOUT_CLASSIFICATION	3.237728813257657E-7	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999996762271187	WITHOUT_CLASSIFICATION	3.237728813257657E-7	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.9999982837345809	WITHOUT_CLASSIFICATION	1.7162654190619298E-6	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.9999965147469955	WITHOUT_CLASSIFICATION	3.4852530046342126E-6	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999962592243454	WITHOUT_CLASSIFICATION	3.7407756544906182E-6	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.9999836979710722	WITHOUT_CLASSIFICATION	1.630202892778232E-5	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.999997311560676	WITHOUT_CLASSIFICATION	2.6884393239661457E-6	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.9999962994511261	WITHOUT_CLASSIFICATION	3.7005488739323958E-6	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.9999148029812034	WITHOUT_CLASSIFICATION	8.51970187966184E-5	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.9999996228684797	WITHOUT_CLASSIFICATION	3.771315204402754E-7	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.9999401999756538	WITHOUT_CLASSIFICATION	5.980002434618344E-5	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.9999886689426635	WITHOUT_CLASSIFICATION	1.133105733642843E-5	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.999735058524708	WITHOUT_CLASSIFICATION	2.6494147529199205E-4	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.9999822964364146	WITHOUT_CLASSIFICATION	1.7703563585409992E-5	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.9999988272907258	WITHOUT_CLASSIFICATION	1.1727092742477787E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999184619707207	WITHOUT_CLASSIFICATION	8.153802927926718E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9997537113155616	WITHOUT_CLASSIFICATION	2.46288684438413E-4	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999999207774739	WITHOUT_CLASSIFICATION	7.922252618936322E-8	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.999999985937338	WITHOUT_CLASSIFICATION	1.406266198881491E-8	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.9999996755858489	WITHOUT_CLASSIFICATION	3.244141511592451E-7	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999981609832628	WITHOUT_CLASSIFICATION	1.8390167373091375E-6	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.9999870468455639	WITHOUT_CLASSIFICATION	1.2953154436072815E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999661250562776	WITHOUT_CLASSIFICATION	3.38749437222916E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999665217565453	WITHOUT_CLASSIFICATION	3.347824345461517E-5	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999929817086903	WITHOUT_CLASSIFICATION	7.018291309748931E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999991835593645	WITHOUT_CLASSIFICATION	8.16440635645369E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999991835593645	WITHOUT_CLASSIFICATION	8.16440635645369E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994610935371	WITHOUT_CLASSIFICATION	5.389064629758677E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994610935371	WITHOUT_CLASSIFICATION	5.389064629758677E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996297446353	WITHOUT_CLASSIFICATION	3.7025536462902615E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996297446353	WITHOUT_CLASSIFICATION	3.7025536462902615E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999049881336134	WITHOUT_CLASSIFICATION	9.501186638668207E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999049881336134	WITHOUT_CLASSIFICATION	9.501186638668207E-5	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999997508291597	WITHOUT_CLASSIFICATION	2.4917084022576253E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.998844689797676	WITHOUT_CLASSIFICATION	0.0011553102023238975	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.998056890907064	WITHOUT_CLASSIFICATION	0.0019431090929359607	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.998056890907064	WITHOUT_CLASSIFICATION	0.0019431090929359607	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999932917714833	WITHOUT_CLASSIFICATION	6.708228516668513E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999932917714833	WITHOUT_CLASSIFICATION	6.708228516668513E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999932917714833	WITHOUT_CLASSIFICATION	6.708228516668513E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999875502384241	WITHOUT_CLASSIFICATION	1.2449761575990347E-5	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999875502384241	WITHOUT_CLASSIFICATION	1.2449761575990347E-5	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999875502384241	WITHOUT_CLASSIFICATION	1.2449761575990347E-5	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999894960638755	WITHOUT_CLASSIFICATION	1.0503936124562112E-5	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999894960638755	WITHOUT_CLASSIFICATION	1.0503936124562112E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999184619707207	WITHOUT_CLASSIFICATION	8.153802927926718E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9997537113155616	WITHOUT_CLASSIFICATION	2.46288684438413E-4	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999998802287867	WITHOUT_CLASSIFICATION	1.1977121325491388E-7	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.9999993859167274	WITHOUT_CLASSIFICATION	6.140832725314146E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999984074759922	WITHOUT_CLASSIFICATION	1.5925240077571748E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999984074759922	WITHOUT_CLASSIFICATION	1.5925240077571748E-6	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.9999933895420299	WITHOUT_CLASSIFICATION	6.610457970125309E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999988045883537	WITHOUT_CLASSIFICATION	1.195411646353986E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999984074759922	WITHOUT_CLASSIFICATION	1.5925240077571748E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999977753026124	WITHOUT_CLASSIFICATION	2.224697387597956E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999986868325319	WITHOUT_CLASSIFICATION	1.3131674681214693E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999986868325319	WITHOUT_CLASSIFICATION	1.3131674681214693E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999986868325319	WITHOUT_CLASSIFICATION	1.3131674681214693E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999996509523564	WITHOUT_CLASSIFICATION	3.4904764351614444E-7	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9999992683616765	WITHOUT_CLASSIFICATION	7.31638323433781E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999991606079003	WITHOUT_CLASSIFICATION	8.393920998112037E-7	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999455456326637	WITHOUT_CLASSIFICATION	5.445436733630111E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999687033176	WITHOUT_CLASSIFICATION	3.129668237571664E-8	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999687033176	WITHOUT_CLASSIFICATION	3.129668237571664E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999986779150405	WITHOUT_CLASSIFICATION	1.3220849595930575E-6	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999628688848478	WITHOUT_CLASSIFICATION	3.713111515220907E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999661250562776	WITHOUT_CLASSIFICATION	3.38749437222916E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999665217565453	WITHOUT_CLASSIFICATION	3.347824345461517E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995902734018	WITHOUT_CLASSIFICATION	4.0972659825891203E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995902734018	WITHOUT_CLASSIFICATION	4.0972659825891203E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999991835593645	WITHOUT_CLASSIFICATION	8.16440635645369E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994610935371	WITHOUT_CLASSIFICATION	5.389064629758677E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996297446353	WITHOUT_CLASSIFICATION	3.7025536462902615E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999049881336134	WITHOUT_CLASSIFICATION	9.501186638668207E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999049881336134	WITHOUT_CLASSIFICATION	9.501186638668207E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999049881336134	WITHOUT_CLASSIFICATION	9.501186638668207E-5	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999977792870751	WITHOUT_CLASSIFICATION	2.2207129249541526E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999977792870751	WITHOUT_CLASSIFICATION	2.2207129249541526E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999997508291597	WITHOUT_CLASSIFICATION	2.4917084022576253E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9997537113155616	WITHOUT_CLASSIFICATION	2.46288684438413E-4	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9997537113155616	WITHOUT_CLASSIFICATION	2.46288684438413E-4	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999981609832628	WITHOUT_CLASSIFICATION	1.8390167373091375E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999984074759922	WITHOUT_CLASSIFICATION	1.5925240077571748E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999986868325319	WITHOUT_CLASSIFICATION	1.3131674681214693E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999988045883537	WITHOUT_CLASSIFICATION	1.195411646353986E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999977753026124	WITHOUT_CLASSIFICATION	2.224697387597956E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999977753026124	WITHOUT_CLASSIFICATION	2.224697387597956E-5	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999996509523564	WITHOUT_CLASSIFICATION	3.4904764351614444E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999687033176	WITHOUT_CLASSIFICATION	3.129668237571664E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999986779150405	WITHOUT_CLASSIFICATION	1.3220849595930575E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999991606079003	WITHOUT_CLASSIFICATION	8.393920998112037E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999991606079003	WITHOUT_CLASSIFICATION	8.393920998112037E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999991606079003	WITHOUT_CLASSIFICATION	8.393920998112037E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.999998836267876	WITHOUT_CLASSIFICATION	1.1637321240615994E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.999998836267876	WITHOUT_CLASSIFICATION	1.1637321240615994E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.999998836267876	WITHOUT_CLASSIFICATION	1.1637321240615994E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999998130636548	WITHOUT_CLASSIFICATION	1.8693634506012413E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999998130636548	WITHOUT_CLASSIFICATION	1.8693634506012413E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999998130636548	WITHOUT_CLASSIFICATION	1.8693634506012413E-7	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.999993938086127	WITHOUT_CLASSIFICATION	6.06191387290141E-6	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.9999994144096915	WITHOUT_CLASSIFICATION	5.855903085622588E-7	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999572259016941	WITHOUT_CLASSIFICATION	4.277409830592451E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999720250705918	WITHOUT_CLASSIFICATION	2.7974929408169515E-5	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.9999997162661995	WITHOUT_CLASSIFICATION	2.837338004754066E-7	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.9999996780594538	WITHOUT_CLASSIFICATION	3.219405462199511E-7	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.9999996992299803	WITHOUT_CLASSIFICATION	3.007700195886772E-7	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.9999296377583021	WITHOUT_CLASSIFICATION	7.036224169786226E-5	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999997279220978	WITHOUT_CLASSIFICATION	2.7207790223068545E-7	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999983655270464	WITHOUT_CLASSIFICATION	1.6344729536421683E-6	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.9999999191787536	WITHOUT_CLASSIFICATION	8.082124632907448E-8	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999977494107025	WITHOUT_CLASSIFICATION	2.2505892974476486E-6	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.9975314177981326	WITHOUT_CLASSIFICATION	0.0024685822018674546	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.9999972519467436	WITHOUT_CLASSIFICATION	2.748053256328475E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999993620050072	WITHOUT_CLASSIFICATION	6.379949928456286E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999661250562776	WITHOUT_CLASSIFICATION	3.38749437222916E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999665217565453	WITHOUT_CLASSIFICATION	3.347824345461517E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999995902734018	WITHOUT_CLASSIFICATION	4.0972659825891203E-7	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999995558948239	WITHOUT_CLASSIFICATION	4.441051761736509E-7	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.9999993032161416	WITHOUT_CLASSIFICATION	6.967838584800723E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999991835593645	WITHOUT_CLASSIFICATION	8.16440635645369E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994610935371	WITHOUT_CLASSIFICATION	5.389064629758677E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999996297446353	WITHOUT_CLASSIFICATION	3.7025536462902615E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999997508291597	WITHOUT_CLASSIFICATION	2.4917084022576253E-7	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.999999631491525	WITHOUT_CLASSIFICATION	3.685084749879683E-7	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9998933791014847	WITHOUT_CLASSIFICATION	1.0662089851533414E-4	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9991824307810867	WITHOUT_CLASSIFICATION	8.175692189132821E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999184619707207	WITHOUT_CLASSIFICATION	8.153802927926718E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9997537113155616	WITHOUT_CLASSIFICATION	2.46288684438413E-4	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999986868325319	WITHOUT_CLASSIFICATION	1.3131674681214693E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999988045883537	WITHOUT_CLASSIFICATION	1.195411646353986E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999977753026124	WITHOUT_CLASSIFICATION	2.224697387597956E-5	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999455456326637	WITHOUT_CLASSIFICATION	5.445436733630111E-5	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999628688848478	WITHOUT_CLASSIFICATION	3.713111515220907E-5	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999572259016941	WITHOUT_CLASSIFICATION	4.277409830592451E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999720250705918	WITHOUT_CLASSIFICATION	2.7974929408169515E-5	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999997898641819	WITHOUT_CLASSIFICATION	2.101358181137013E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999942671452455	WITHOUT_CLASSIFICATION	5.732854754463834E-6	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.9999993364644478	WITHOUT_CLASSIFICATION	6.635355520501595E-7	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.9999999697627288	WITHOUT_CLASSIFICATION	3.02372713176145E-8	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.9999994528863855	WITHOUT_CLASSIFICATION	5.471136144485339E-7	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.9999736417068072	WITHOUT_CLASSIFICATION	2.6358293192685222E-5	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.9999986309503639	WITHOUT_CLASSIFICATION	1.3690496360998163E-6	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.9998772533856984	WITHOUT_CLASSIFICATION	1.2274661430144814E-4	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.9999996464191454	WITHOUT_CLASSIFICATION	3.5358085469308994E-7	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999924413348746	WITHOUT_CLASSIFICATION	7.558665125402962E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999926548610238	WITHOUT_CLASSIFICATION	7.3451389762088895E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999926548610238	WITHOUT_CLASSIFICATION	7.3451389762088895E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999908506898442	WITHOUT_CLASSIFICATION	9.14931015585118E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999908506898442	WITHOUT_CLASSIFICATION	9.14931015585118E-6	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.9999983881359356	WITHOUT_CLASSIFICATION	1.6118640644188951E-6	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.999995314257006	WITHOUT_CLASSIFICATION	4.6857429939466985E-6	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9999953806503445	WITHOUT_CLASSIFICATION	4.6193496554785366E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999858882600218	WITHOUT_CLASSIFICATION	1.411173997835527E-5	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9999976075740141	WITHOUT_CLASSIFICATION	2.392425985838297E-6	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.999979822902982	WITHOUT_CLASSIFICATION	2.0177097017952727E-5	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9982940486922902	WITHOUT_CLASSIFICATION	0.0017059513077097065	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9871293300289239	WITHOUT_CLASSIFICATION	0.01287066997107619	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999997106926389	WITHOUT_CLASSIFICATION	2.893073611388358E-7	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.9999883743035481	WITHOUT_CLASSIFICATION	1.1625696451903408E-5	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999998506009619	WITHOUT_CLASSIFICATION	1.493990381409064E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997359444474	WITHOUT_CLASSIFICATION	2.6405555264885223E-7	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.9999333099945477	WITHOUT_CLASSIFICATION	6.669000545238321E-5	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.9999989726623527	WITHOUT_CLASSIFICATION	1.0273376472166261E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999971975236983	WITHOUT_CLASSIFICATION	2.8024763016779387E-6	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999998790270267	WITHOUT_CLASSIFICATION	1.209729732872991E-7	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9876633806996242	WITHOUT_CLASSIFICATION	0.012336619300375861	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999921867334189	WITHOUT_CLASSIFICATION	7.813266581050076E-6	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999988018397046	WITHOUT_CLASSIFICATION	1.1981602954446947E-6	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.9999991480627881	WITHOUT_CLASSIFICATION	8.51937211736586E-7	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.9995892412765628	WITHOUT_CLASSIFICATION	4.1075872343727916E-4	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.9999998049296714	WITHOUT_CLASSIFICATION	1.9507032859004507E-7	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.9987556232138302	WITHOUT_CLASSIFICATION	0.0012443767861698308	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9996630166884994	WITHOUT_CLASSIFICATION	3.3698331150049896E-4	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.9999997611421522	WITHOUT_CLASSIFICATION	2.38857847846322E-7	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9982940486922902	WITHOUT_CLASSIFICATION	0.0017059513077097065	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9982940486922902	WITHOUT_CLASSIFICATION	0.0017059513077097065	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996020655316	WITHOUT_CLASSIFICATION	3.9793446834572505E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999998710825736	WITHOUT_CLASSIFICATION	1.2891742630438613E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999998710825736	WITHOUT_CLASSIFICATION	1.2891742630438613E-7	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.9999989177795038	WITHOUT_CLASSIFICATION	1.0822204962363542E-6	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9944588300552906	WITHOUT_CLASSIFICATION	0.005541169944709507	DEFECT
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.9999993965280828	WITHOUT_CLASSIFICATION	6.034719173046497E-7	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.9999952698403204	WITHOUT_CLASSIFICATION	4.730159679671358E-6	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.9999999884184843	WITHOUT_CLASSIFICATION	1.1581515666709106E-8	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999631491622355	WITHOUT_CLASSIFICATION	3.685083776455431E-5	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999631491622355	WITHOUT_CLASSIFICATION	3.685083776455431E-5	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.999999807051474	WITHOUT_CLASSIFICATION	1.9294852592165212E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999933790343	WITHOUT_CLASSIFICATION	6.620965601983428E-9	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999931013918212	WITHOUT_CLASSIFICATION	6.898608178779514E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9998929569013921	WITHOUT_CLASSIFICATION	1.0704309860788406E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.9999555736631409	WITHOUT_CLASSIFICATION	4.442633685916441E-5	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.9999970382534323	WITHOUT_CLASSIFICATION	2.961746567748321E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9999023625302841	WITHOUT_CLASSIFICATION	9.763746971589876E-5	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.9999972961781204	WITHOUT_CLASSIFICATION	2.703821879628873E-6	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.9999999523416455	WITHOUT_CLASSIFICATION	4.765835446461755E-8	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.9999879756324987	WITHOUT_CLASSIFICATION	1.2024367501333303E-5	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9999965574828137	WITHOUT_CLASSIFICATION	3.4425171861577573E-6	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999980515504342	WITHOUT_CLASSIFICATION	1.948449565758192E-6	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.9999910786886209	WITHOUT_CLASSIFICATION	8.921311379134734E-6	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999997770759019	WITHOUT_CLASSIFICATION	2.2292409818444937E-7	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.9999995436026422	WITHOUT_CLASSIFICATION	4.5639735781072073E-7	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.9995120992231447	WITHOUT_CLASSIFICATION	4.8790077685544763E-4	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999974051959358	WITHOUT_CLASSIFICATION	2.594804064136596E-6	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.9999831164090854	WITHOUT_CLASSIFICATION	1.6883590914522413E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999537836624	WITHOUT_CLASSIFICATION	4.62163376638833E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999999291697318	WITHOUT_CLASSIFICATION	7.08302681937495E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.99998975669236	WITHOUT_CLASSIFICATION	1.0243307639877186E-5	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.999993233981216	WITHOUT_CLASSIFICATION	6.766018784031706E-6	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999997395658412	WITHOUT_CLASSIFICATION	2.6043415875285686E-7	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.9999999820567262	WITHOUT_CLASSIFICATION	1.7943273819028865E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999988913296158	WITHOUT_CLASSIFICATION	1.1086703842145742E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999961680976983	WITHOUT_CLASSIFICATION	3.8319023017146115E-6	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999998862742213	WITHOUT_CLASSIFICATION	1.1372577873535403E-7	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999998862742213	WITHOUT_CLASSIFICATION	1.1372577873535403E-7	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.9999997353096963	WITHOUT_CLASSIFICATION	2.6469030363967527E-7	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9999999906310358	WITHOUT_CLASSIFICATION	9.36896419313137E-9	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.9900667925401073	WITHOUT_CLASSIFICATION	0.009933207459892726	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.999994926488386	WITHOUT_CLASSIFICATION	5.073511614126869E-6	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.9998478105378703	WITHOUT_CLASSIFICATION	1.5218946212975493E-4	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999972901295342	WITHOUT_CLASSIFICATION	2.7098704657712493E-6	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999994146702761	WITHOUT_CLASSIFICATION	5.853297238235861E-7	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.999999631491525	WITHOUT_CLASSIFICATION	3.685084749879683E-7	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9998933791014847	WITHOUT_CLASSIFICATION	1.0662089851533414E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.998056890907064	WITHOUT_CLASSIFICATION	0.0019431090929359607	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999184619707207	WITHOUT_CLASSIFICATION	8.153802927926718E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999184619707207	WITHOUT_CLASSIFICATION	8.153802927926718E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9997537113155616	WITHOUT_CLASSIFICATION	2.46288684438413E-4	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.999997812022597	WITHOUT_CLASSIFICATION	2.187977403083619E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999981609832628	WITHOUT_CLASSIFICATION	1.8390167373091375E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999981609832628	WITHOUT_CLASSIFICATION	1.8390167373091375E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999984074759922	WITHOUT_CLASSIFICATION	1.5925240077571748E-6	DEFECT
// open	WITHOUT_CLASSIFICATION	0.9999918509408883	WITHOUT_CLASSIFICATION	8.149059111646741E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999988045883537	WITHOUT_CLASSIFICATION	1.195411646353986E-6	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999687033176	WITHOUT_CLASSIFICATION	3.129668237571664E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999986779150405	WITHOUT_CLASSIFICATION	1.3220849595930575E-6	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999986779150405	WITHOUT_CLASSIFICATION	1.3220849595930575E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999991606079003	WITHOUT_CLASSIFICATION	8.393920998112037E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999991606079003	WITHOUT_CLASSIFICATION	8.393920998112037E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999991606079003	WITHOUT_CLASSIFICATION	8.393920998112037E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999991606079003	WITHOUT_CLASSIFICATION	8.393920998112037E-7	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999997898641819	WITHOUT_CLASSIFICATION	2.101358181137013E-7	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999997898641819	WITHOUT_CLASSIFICATION	2.101358181137013E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999942671452455	WITHOUT_CLASSIFICATION	5.732854754463834E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999942671452455	WITHOUT_CLASSIFICATION	5.732854754463834E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999606437025274	WITHOUT_CLASSIFICATION	3.935629747264234E-5	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999938656881665	WITHOUT_CLASSIFICATION	6.134311833558219E-6	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999997893670525	WITHOUT_CLASSIFICATION	2.1063294748047457E-7	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999997893670525	WITHOUT_CLASSIFICATION	2.1063294748047457E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999938656881665	WITHOUT_CLASSIFICATION	6.134311833558219E-6	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.9999966698174555	WITHOUT_CLASSIFICATION	3.3301825446132367E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999606437025274	WITHOUT_CLASSIFICATION	3.935629747264234E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999986011014654	WITHOUT_CLASSIFICATION	1.3988985345589293E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999986011014654	WITHOUT_CLASSIFICATION	1.3988985345589293E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999986011014654	WITHOUT_CLASSIFICATION	1.3988985345589293E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999986011014654	WITHOUT_CLASSIFICATION	1.3988985345589293E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999986011014654	WITHOUT_CLASSIFICATION	1.3988985345589293E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999986011014654	WITHOUT_CLASSIFICATION	1.3988985345589293E-6	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999998621606	WITHOUT_CLASSIFICATION	1.3783940104309657E-10	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999993017084	WITHOUT_CLASSIFICATION	6.982917017240536E-10	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.9999999948801968	WITHOUT_CLASSIFICATION	5.119803286484118E-9	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999986011014654	WITHOUT_CLASSIFICATION	1.3988985345589293E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999986011014654	WITHOUT_CLASSIFICATION	1.3988985345589293E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999986011014654	WITHOUT_CLASSIFICATION	1.3988985345589293E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999986011014654	WITHOUT_CLASSIFICATION	1.3988985345589293E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999986011014654	WITHOUT_CLASSIFICATION	1.3988985345589293E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999993109983563	WITHOUT_CLASSIFICATION	6.890016436783456E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999994464825439	WITHOUT_CLASSIFICATION	5.535174561055252E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999994464825439	WITHOUT_CLASSIFICATION	5.535174561055252E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999994464825439	WITHOUT_CLASSIFICATION	5.535174561055252E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999994464825439	WITHOUT_CLASSIFICATION	5.535174561055252E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999626901026036	WITHOUT_CLASSIFICATION	3.730989739636027E-5	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999513791128555	WITHOUT_CLASSIFICATION	4.862088714446742E-5	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999513791128555	WITHOUT_CLASSIFICATION	4.862088714446742E-5	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.9999973861597634	WITHOUT_CLASSIFICATION	2.6138402366576615E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.999998598165755	WITHOUT_CLASSIFICATION	1.401834244964724E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.999998598165755	WITHOUT_CLASSIFICATION	1.401834244964724E-6	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9998729127908084	WITHOUT_CLASSIFICATION	1.270872091916645E-4	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.999998598165755	WITHOUT_CLASSIFICATION	1.401834244964724E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999820369545	WITHOUT_CLASSIFICATION	1.796304553428391E-8	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999994464825439	WITHOUT_CLASSIFICATION	5.535174561055252E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.999994464825439	WITHOUT_CLASSIFICATION	5.535174561055252E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899974948557	WITHOUT_CLASSIFICATION	1.0002505144366634E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999939121825047	WITHOUT_CLASSIFICATION	6.0878174952960355E-6	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.9921945077088399	WITHOUT_CLASSIFICATION	0.007805492291160126	DEFECT
// todo: not serialized yet	DEFECT	0.9994246372408487	WITHOUT_CLASSIFICATION	5.753627591513617E-4	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.9976847280197592	WITHOUT_CLASSIFICATION	0.0023152719802409195	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.7764576643013799	WITHOUT_CLASSIFICATION	0.22354233569862017	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.7764576643013799	WITHOUT_CLASSIFICATION	0.22354233569862017	DEFECT
// TODO: Check this result...	DEFECT	0.7089199339086489	WITHOUT_CLASSIFICATION	0.2910800660913511	DEFECT
// TODO: Check this result...	DEFECT	0.7089199339086489	WITHOUT_CLASSIFICATION	0.2910800660913511	DEFECT
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9999111544327266	WITHOUT_CLASSIFICATION	8.884556727342616E-5	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.999902471653636	WITHOUT_CLASSIFICATION	9.752834636401858E-5	DEFECT
