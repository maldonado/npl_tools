// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999995902182212	WITHOUT_CLASSIFICATION	4.0978177884289355E-7	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999992910944767	WITHOUT_CLASSIFICATION	7.089055234099172E-7	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999999475773494	WITHOUT_CLASSIFICATION	5.2422650443103277E-8	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999986651357322	WITHOUT_CLASSIFICATION	1.3348642677641872E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.999999124440297	WITHOUT_CLASSIFICATION	8.755597029152903E-7	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999929578327659	WITHOUT_CLASSIFICATION	7.042167234153823E-6	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999993528309491	WITHOUT_CLASSIFICATION	6.471690509671603E-7	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.999982785440226	WITHOUT_CLASSIFICATION	1.721455977394699E-5	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999975972202211	WITHOUT_CLASSIFICATION	2.402779778913624E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999967976197672	WITHOUT_CLASSIFICATION	3.2023802328119034E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.999999490863263	WITHOUT_CLASSIFICATION	5.091367370837509E-7	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999978657715406	WITHOUT_CLASSIFICATION	2.134228459465555E-6	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.9999997088990072	WITHOUT_CLASSIFICATION	2.911009927374053E-7	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999991697571866	WITHOUT_CLASSIFICATION	8.302428133616791E-7	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.9999992373777874	WITHOUT_CLASSIFICATION	7.62622212697881E-7	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.9999982256590505	WITHOUT_CLASSIFICATION	1.7743409494953151E-6	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.9999999341121977	WITHOUT_CLASSIFICATION	6.588780225714796E-8	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.9999999518492956	WITHOUT_CLASSIFICATION	4.8150704489889675E-8	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.9999999614721792	WITHOUT_CLASSIFICATION	3.852782075127611E-8	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999621468796	WITHOUT_CLASSIFICATION	3.7853120448304145E-8	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999999723369981	WITHOUT_CLASSIFICATION	2.766300195986917E-8	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999778654293	WITHOUT_CLASSIFICATION	2.2134570778958737E-8	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999913771569118	WITHOUT_CLASSIFICATION	8.62284308812843E-6	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999939833714955	WITHOUT_CLASSIFICATION	6.016628504567723E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999997107937221	WITHOUT_CLASSIFICATION	2.8920627789348183E-7	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999408618089787	WITHOUT_CLASSIFICATION	5.913819102137668E-5	DEFECT
// high	WITHOUT_CLASSIFICATION	0.9999935168329824	WITHOUT_CLASSIFICATION	6.483167017620297E-6	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9999826539352149	WITHOUT_CLASSIFICATION	1.734606478513378E-5	DEFECT
// close	WITHOUT_CLASSIFICATION	0.9999997845096829	WITHOUT_CLASSIFICATION	2.1549031699842213E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999991005491107	WITHOUT_CLASSIFICATION	8.994508892961513E-6	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.9999983390046993	WITHOUT_CLASSIFICATION	1.6609953007880915E-6	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.9999997805149483	WITHOUT_CLASSIFICATION	2.194850516255662E-7	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.999999682691668	WITHOUT_CLASSIFICATION	3.173083321014558E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999715636835309	WITHOUT_CLASSIFICATION	2.8436316469154824E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999986321884836	WITHOUT_CLASSIFICATION	1.3678115163263736E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999995619430161	WITHOUT_CLASSIFICATION	4.3805698387035315E-7	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999958300993183	WITHOUT_CLASSIFICATION	4.169900681747939E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751254079	WITHOUT_CLASSIFICATION	1.4248745921479799E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632848734	WITHOUT_CLASSIFICATION	1.6336715126615346E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632848734	WITHOUT_CLASSIFICATION	1.6336715126615346E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632848734	WITHOUT_CLASSIFICATION	1.6336715126615346E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632848734	WITHOUT_CLASSIFICATION	1.6336715126615346E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632848734	WITHOUT_CLASSIFICATION	1.6336715126615346E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632848734	WITHOUT_CLASSIFICATION	1.6336715126615346E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632848734	WITHOUT_CLASSIFICATION	1.6336715126615346E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632848734	WITHOUT_CLASSIFICATION	1.6336715126615346E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632848734	WITHOUT_CLASSIFICATION	1.6336715126615346E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632848734	WITHOUT_CLASSIFICATION	1.6336715126615346E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632848734	WITHOUT_CLASSIFICATION	1.6336715126615346E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632848734	WITHOUT_CLASSIFICATION	1.6336715126615346E-5	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.9999996776055664	WITHOUT_CLASSIFICATION	3.2239443351132023E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999529945948	WITHOUT_CLASSIFICATION	4.700540523922612E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999529945948	WITHOUT_CLASSIFICATION	4.700540523922612E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999529945948	WITHOUT_CLASSIFICATION	4.700540523922612E-8	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999955949544754	WITHOUT_CLASSIFICATION	4.405045524563974E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.999999999463159	WITHOUT_CLASSIFICATION	5.368410727966353E-10	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999997735094144	WITHOUT_CLASSIFICATION	2.264905855749821E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999996378840498	WITHOUT_CLASSIFICATION	3.621159502941711E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999996385168908	WITHOUT_CLASSIFICATION	3.614831093102777E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999996385168908	WITHOUT_CLASSIFICATION	3.614831093102777E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999996385168908	WITHOUT_CLASSIFICATION	3.614831093102777E-7	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999999999808268	WITHOUT_CLASSIFICATION	1.91732742617864E-11	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999748063408	WITHOUT_CLASSIFICATION	2.5193659180258965E-8	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999970925498107	WITHOUT_CLASSIFICATION	2.9074501893562233E-6	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.9996983900250053	WITHOUT_CLASSIFICATION	3.016099749946885E-4	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999964570280635	WITHOUT_CLASSIFICATION	3.542971936440269E-6	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999996277436146	WITHOUT_CLASSIFICATION	3.72256385429078E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999964277784038	WITHOUT_CLASSIFICATION	3.5722215962065065E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999996136272716	WITHOUT_CLASSIFICATION	3.8637272841876E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999996136272716	WITHOUT_CLASSIFICATION	3.8637272841876E-7	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.999971743891101	WITHOUT_CLASSIFICATION	2.825610889904779E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9991816952739303	WITHOUT_CLASSIFICATION	8.183047260697064E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9991816952739303	WITHOUT_CLASSIFICATION	8.183047260697064E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9991816952739303	WITHOUT_CLASSIFICATION	8.183047260697064E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9991816952739303	WITHOUT_CLASSIFICATION	8.183047260697064E-4	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999998231976902	WITHOUT_CLASSIFICATION	1.768023097891394E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999905277576501	WITHOUT_CLASSIFICATION	9.472242349977951E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999915411995233	WITHOUT_CLASSIFICATION	8.458800476740078E-6	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9991086939570649	WITHOUT_CLASSIFICATION	8.913060429351587E-4	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999992559956233	WITHOUT_CLASSIFICATION	7.440043766965671E-7	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.9999693192657972	WITHOUT_CLASSIFICATION	3.068073420279319E-5	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999791586173455	WITHOUT_CLASSIFICATION	2.0841382654506093E-5	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.9999969493783842	WITHOUT_CLASSIFICATION	3.0506216156329905E-6	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999982198332679	WITHOUT_CLASSIFICATION	1.780166732167426E-6	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999996606365169	WITHOUT_CLASSIFICATION	3.39363483070076E-7	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999992027854064	WITHOUT_CLASSIFICATION	7.972145936200725E-7	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999997827800307	WITHOUT_CLASSIFICATION	2.1721996934333628E-7	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.9999961160367826	WITHOUT_CLASSIFICATION	3.883963217366887E-6	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.9999995940339466	WITHOUT_CLASSIFICATION	4.059660534111802E-7	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.999998459759945	WITHOUT_CLASSIFICATION	1.5402400551008698E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999996501638989	WITHOUT_CLASSIFICATION	3.498361010755044E-7	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.9999547685520902	WITHOUT_CLASSIFICATION	4.5231447909756676E-5	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999999954382509	WITHOUT_CLASSIFICATION	4.5617490241727735E-9	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9999961668088871	WITHOUT_CLASSIFICATION	3.833191112765692E-6	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9999961668088871	WITHOUT_CLASSIFICATION	3.833191112765692E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.999989893805322	WITHOUT_CLASSIFICATION	1.0106194678034943E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999895440791824	WITHOUT_CLASSIFICATION	1.0455920817677723E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.999989045515066	WITHOUT_CLASSIFICATION	1.095448493415539E-5	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.999999199589479	WITHOUT_CLASSIFICATION	8.004105209992287E-7	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999989096185719	WITHOUT_CLASSIFICATION	1.0903814281053912E-6	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.9999998843374438	WITHOUT_CLASSIFICATION	1.1566255625202332E-7	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.999993897528371	WITHOUT_CLASSIFICATION	6.102471628995228E-6	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.9999999684387766	WITHOUT_CLASSIFICATION	3.1561223312454416E-8	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999183377629995	WITHOUT_CLASSIFICATION	8.166223700042444E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999999558465876	WITHOUT_CLASSIFICATION	4.4153412362389544E-8	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.99997433737566	WITHOUT_CLASSIFICATION	2.566262434002218E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999855440375255	WITHOUT_CLASSIFICATION	1.4455962474645877E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999915725335	WITHOUT_CLASSIFICATION	8.427466479179324E-9	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9997902617431851	WITHOUT_CLASSIFICATION	2.0973825681489916E-4	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999963939970882	WITHOUT_CLASSIFICATION	3.6060029118083756E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999963939970882	WITHOUT_CLASSIFICATION	3.6060029118083756E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.999999997922138	WITHOUT_CLASSIFICATION	2.0778619719301465E-9	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999986911117827	WITHOUT_CLASSIFICATION	1.3088882173633458E-6	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999859855677329	WITHOUT_CLASSIFICATION	1.4014432267228836E-5	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.99984337795278	WITHOUT_CLASSIFICATION	1.5662204722003138E-4	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999955802143562	WITHOUT_CLASSIFICATION	4.419785643739273E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788581	WITHOUT_CLASSIFICATION	1.7821141890616276E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788581	WITHOUT_CLASSIFICATION	1.7821141890616276E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788581	WITHOUT_CLASSIFICATION	1.7821141890616276E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788581	WITHOUT_CLASSIFICATION	1.7821141890616276E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788581	WITHOUT_CLASSIFICATION	1.7821141890616276E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788581	WITHOUT_CLASSIFICATION	1.7821141890616276E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788581	WITHOUT_CLASSIFICATION	1.7821141890616276E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788581	WITHOUT_CLASSIFICATION	1.7821141890616276E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788581	WITHOUT_CLASSIFICATION	1.7821141890616276E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999993566378831	WITHOUT_CLASSIFICATION	6.433621168260919E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999993566378831	WITHOUT_CLASSIFICATION	6.433621168260919E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999997073638578	WITHOUT_CLASSIFICATION	2.926361423121443E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999997073638578	WITHOUT_CLASSIFICATION	2.926361423121443E-7	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.9999999859638421	WITHOUT_CLASSIFICATION	1.403615794694443E-8	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.9999745470691934	WITHOUT_CLASSIFICATION	2.545293080656967E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999813145314153	WITHOUT_CLASSIFICATION	1.8685468584806836E-5	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999990527699711	WITHOUT_CLASSIFICATION	9.47230028752583E-7	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999990527699711	WITHOUT_CLASSIFICATION	9.47230028752583E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.999876629446156	WITHOUT_CLASSIFICATION	1.2337055384395825E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999043244705031	WITHOUT_CLASSIFICATION	9.56755294967989E-5	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999974823163483	WITHOUT_CLASSIFICATION	2.5176836516603453E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999992119980058	WITHOUT_CLASSIFICATION	7.880019942996581E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999992119980058	WITHOUT_CLASSIFICATION	7.880019942996581E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967820161254	WITHOUT_CLASSIFICATION	3.2179838746007997E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967820161254	WITHOUT_CLASSIFICATION	3.2179838746007997E-6	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999939250587	WITHOUT_CLASSIFICATION	6.074941358935098E-9	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999828250412	WITHOUT_CLASSIFICATION	1.717495880715182E-8	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.9999999924714231	WITHOUT_CLASSIFICATION	7.528576869811458E-9	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999999993168135	WITHOUT_CLASSIFICATION	6.831864135784435E-10	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.999999688547203	WITHOUT_CLASSIFICATION	3.1145279699986165E-7	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.9999997523032848	WITHOUT_CLASSIFICATION	2.476967153115429E-7	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.9999894369730886	WITHOUT_CLASSIFICATION	1.0563026911330673E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999990316488397	WITHOUT_CLASSIFICATION	9.683511602796528E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325014085	WITHOUT_CLASSIFICATION	1.067498591567823E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325014085	WITHOUT_CLASSIFICATION	1.067498591567823E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325014085	WITHOUT_CLASSIFICATION	1.067498591567823E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325014085	WITHOUT_CLASSIFICATION	1.067498591567823E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325014085	WITHOUT_CLASSIFICATION	1.067498591567823E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999998232958407	WITHOUT_CLASSIFICATION	1.7670415929301192E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99995718053708	WITHOUT_CLASSIFICATION	4.2819462920016445E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99995718053708	WITHOUT_CLASSIFICATION	4.2819462920016445E-5	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999988070917	WITHOUT_CLASSIFICATION	1.192908351473995E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989188099908	WITHOUT_CLASSIFICATION	1.081190009166955E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989188099908	WITHOUT_CLASSIFICATION	1.081190009166955E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999640535362437	WITHOUT_CLASSIFICATION	3.5946463756297346E-5	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999640535362437	WITHOUT_CLASSIFICATION	3.5946463756297346E-5	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999874894102	WITHOUT_CLASSIFICATION	1.2510589732458978E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999961628094	WITHOUT_CLASSIFICATION	3.837190548525783E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999961628094	WITHOUT_CLASSIFICATION	3.837190548525783E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999961628094	WITHOUT_CLASSIFICATION	3.837190548525783E-9	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999998618951405	WITHOUT_CLASSIFICATION	1.3810485965948106E-7	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999759462129839	WITHOUT_CLASSIFICATION	2.4053787016090954E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760772087	WITHOUT_CLASSIFICATION	2.9239227914640778E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760772087	WITHOUT_CLASSIFICATION	2.9239227914640778E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760772087	WITHOUT_CLASSIFICATION	2.9239227914640778E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760772087	WITHOUT_CLASSIFICATION	2.9239227914640778E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760772087	WITHOUT_CLASSIFICATION	2.9239227914640778E-6	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999998665049608	WITHOUT_CLASSIFICATION	1.3349503925983816E-7	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999759132207163	WITHOUT_CLASSIFICATION	2.4086779283695244E-5	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999759132207163	WITHOUT_CLASSIFICATION	2.4086779283695244E-5	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999948503665871	WITHOUT_CLASSIFICATION	5.149633412896477E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999950968125721	WITHOUT_CLASSIFICATION	4.903187427887817E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999950968125721	WITHOUT_CLASSIFICATION	4.903187427887817E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999999547632325	WITHOUT_CLASSIFICATION	4.523676749925406E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999991698113239	WITHOUT_CLASSIFICATION	8.301886760053793E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999991698113239	WITHOUT_CLASSIFICATION	8.301886760053793E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999991698113239	WITHOUT_CLASSIFICATION	8.301886760053793E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999995873542915	WITHOUT_CLASSIFICATION	4.126457084624808E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999995873542915	WITHOUT_CLASSIFICATION	4.126457084624808E-7	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.9999999925676791	WITHOUT_CLASSIFICATION	7.432320865025597E-9	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999998898499618	WITHOUT_CLASSIFICATION	1.1015003817299754E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999998898499618	WITHOUT_CLASSIFICATION	1.1015003817299754E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999965764475568	WITHOUT_CLASSIFICATION	3.4235524430714804E-6	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.9999996555406184	WITHOUT_CLASSIFICATION	3.444593816322493E-7	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999885085716984	WITHOUT_CLASSIFICATION	1.149142830163248E-5	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999970260741202	WITHOUT_CLASSIFICATION	2.973925879799818E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.999998616841913	WITHOUT_CLASSIFICATION	1.3831580870427343E-6	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.9999999970507588	WITHOUT_CLASSIFICATION	2.949241200624317E-9	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9999954176507698	WITHOUT_CLASSIFICATION	4.582349230206389E-6	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.9999999251862117	WITHOUT_CLASSIFICATION	7.48137883462978E-8	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9999133514813833	WITHOUT_CLASSIFICATION	8.664851861674842E-5	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.9999921910615782	WITHOUT_CLASSIFICATION	7.808938421773007E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999923270773	WITHOUT_CLASSIFICATION	7.672922767035842E-9	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.6151739184874429	DEFECT	0.3848260815125572	WITHOUT_CLASSIFICATION
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999997929977374	WITHOUT_CLASSIFICATION	2.070022625557085E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999976306392359	WITHOUT_CLASSIFICATION	2.36936076415108E-6	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.9999935634948035	WITHOUT_CLASSIFICATION	6.43650519643342E-6	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.999995323130379	WITHOUT_CLASSIFICATION	4.6768696210468315E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351830798	WITHOUT_CLASSIFICATION	6.64816920281586E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351830798	WITHOUT_CLASSIFICATION	6.64816920281586E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351830798	WITHOUT_CLASSIFICATION	6.64816920281586E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351830798	WITHOUT_CLASSIFICATION	6.64816920281586E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351830798	WITHOUT_CLASSIFICATION	6.64816920281586E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351830798	WITHOUT_CLASSIFICATION	6.64816920281586E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351830798	WITHOUT_CLASSIFICATION	6.64816920281586E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351830798	WITHOUT_CLASSIFICATION	6.64816920281586E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351830798	WITHOUT_CLASSIFICATION	6.64816920281586E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559721176	WITHOUT_CLASSIFICATION	1.3044027882471948E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999560665381111	WITHOUT_CLASSIFICATION	4.393346188884846E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999992431725337	WITHOUT_CLASSIFICATION	7.568274662674971E-7	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999992431725337	WITHOUT_CLASSIFICATION	7.568274662674971E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999993717191419	WITHOUT_CLASSIFICATION	6.282808580663632E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329532462	WITHOUT_CLASSIFICATION	2.2367046753940998E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329532462	WITHOUT_CLASSIFICATION	2.2367046753940998E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329532462	WITHOUT_CLASSIFICATION	2.2367046753940998E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999993210446763	WITHOUT_CLASSIFICATION	6.789553236960306E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575185112273	WITHOUT_CLASSIFICATION	4.248148877273972E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575185112273	WITHOUT_CLASSIFICATION	4.248148877273972E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575185112273	WITHOUT_CLASSIFICATION	4.248148877273972E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575185112273	WITHOUT_CLASSIFICATION	4.248148877273972E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575185112273	WITHOUT_CLASSIFICATION	4.248148877273972E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575185112273	WITHOUT_CLASSIFICATION	4.248148877273972E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999747705635247	WITHOUT_CLASSIFICATION	2.522943647530302E-5	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9928627444612199	WITHOUT_CLASSIFICATION	0.007137255538780172	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996213855217	WITHOUT_CLASSIFICATION	3.786144783106635E-6	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.9999999487379249	WITHOUT_CLASSIFICATION	5.126207517251296E-8	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999890648203299	WITHOUT_CLASSIFICATION	1.09351796701232E-5	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.9999999616691857	WITHOUT_CLASSIFICATION	3.833081421018568E-8	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999686804292591	WITHOUT_CLASSIFICATION	3.131957074076993E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999686804292591	WITHOUT_CLASSIFICATION	3.131957074076993E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997354356972	WITHOUT_CLASSIFICATION	2.645643027742905E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997354356972	WITHOUT_CLASSIFICATION	2.645643027742905E-7	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999957468240329	WITHOUT_CLASSIFICATION	4.253175967035004E-6	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.9999999874795223	WITHOUT_CLASSIFICATION	1.2520477738521438E-8	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999998236849611	WITHOUT_CLASSIFICATION	1.7631503895034562E-7	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.9999999453159724	WITHOUT_CLASSIFICATION	5.4684027556576436E-8	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999994200481959	WITHOUT_CLASSIFICATION	5.799518040992058E-6	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.9999473366545804	WITHOUT_CLASSIFICATION	5.2663345419610924E-5	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.9999953744265154	WITHOUT_CLASSIFICATION	4.625573484581391E-6	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.999999994575024	WITHOUT_CLASSIFICATION	5.424975964014343E-9	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999918491269201	WITHOUT_CLASSIFICATION	8.150873079908024E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999995984422295	WITHOUT_CLASSIFICATION	4.0155777047943543E-7	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999998434925537	WITHOUT_CLASSIFICATION	1.5650744628721822E-7	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.999999611438326	WITHOUT_CLASSIFICATION	3.885616739448295E-7	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.995690972797808	WITHOUT_CLASSIFICATION	0.0043090272021919715	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9984810000205162	WITHOUT_CLASSIFICATION	0.0015189999794838543	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9984810000205162	WITHOUT_CLASSIFICATION	0.0015189999794838543	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999999224453292	WITHOUT_CLASSIFICATION	7.75546707780479E-8	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.9999997435545265	WITHOUT_CLASSIFICATION	2.564454735485374E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999952246074	WITHOUT_CLASSIFICATION	4.775392661393179E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999952246074	WITHOUT_CLASSIFICATION	4.775392661393179E-9	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.9999995303842526	WITHOUT_CLASSIFICATION	4.6961574737922244E-7	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9999807679053657	WITHOUT_CLASSIFICATION	1.9232094634282827E-5	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.9999999936806624	WITHOUT_CLASSIFICATION	6.319337592990053E-9	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9899129419946019	WITHOUT_CLASSIFICATION	0.010087058005398018	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999894505260885	WITHOUT_CLASSIFICATION	1.054947391160902E-5	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.9999995719978952	WITHOUT_CLASSIFICATION	4.2800210473811603E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999998316375662	WITHOUT_CLASSIFICATION	1.683624337461112E-7	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999687418154111	WITHOUT_CLASSIFICATION	3.1258184588962514E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999687418154111	WITHOUT_CLASSIFICATION	3.1258184588962514E-5	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999895990232162	WITHOUT_CLASSIFICATION	1.0400976783818352E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597599501	WITHOUT_CLASSIFICATION	1.6402400498410795E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597599501	WITHOUT_CLASSIFICATION	1.6402400498410795E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597599501	WITHOUT_CLASSIFICATION	1.6402400498410795E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597599501	WITHOUT_CLASSIFICATION	1.6402400498410795E-6	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9823545996597077	WITHOUT_CLASSIFICATION	0.017645400340292227	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999973207445177	WITHOUT_CLASSIFICATION	2.6792554822256436E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999973207445177	WITHOUT_CLASSIFICATION	2.6792554822256436E-6	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9999881461173838	WITHOUT_CLASSIFICATION	1.1853882616099625E-5	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999999457929205	WITHOUT_CLASSIFICATION	5.420707941680643E-8	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.999998613251737	WITHOUT_CLASSIFICATION	1.3867482628939627E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999854746178	WITHOUT_CLASSIFICATION	1.4525382311586255E-8	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.9999992106253588	WITHOUT_CLASSIFICATION	7.893746412325777E-7	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999999305282553	WITHOUT_CLASSIFICATION	6.947174467711994E-8	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999429999422128	WITHOUT_CLASSIFICATION	5.700005778718097E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999429999422128	WITHOUT_CLASSIFICATION	5.700005778718097E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999429999422128	WITHOUT_CLASSIFICATION	5.700005778718097E-5	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.9999999859595037	WITHOUT_CLASSIFICATION	1.4040496394696085E-8	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999999949593932	WITHOUT_CLASSIFICATION	5.040606911447032E-9	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999999381312904	WITHOUT_CLASSIFICATION	6.186870959308948E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999109683447	WITHOUT_CLASSIFICATION	8.90316552963332E-8	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.999999997780903	WITHOUT_CLASSIFICATION	2.2190969706647594E-9	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.9999709633989843	WITHOUT_CLASSIFICATION	2.9036601015656406E-5	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.9999997415456775	WITHOUT_CLASSIFICATION	2.584543224827653E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999999113073394	WITHOUT_CLASSIFICATION	8.869266060540708E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999999113073394	WITHOUT_CLASSIFICATION	8.869266060540708E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999999113073394	WITHOUT_CLASSIFICATION	8.869266060540708E-7	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.999995874996092	WITHOUT_CLASSIFICATION	4.125003907961564E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999966273573309	WITHOUT_CLASSIFICATION	3.3726426690629754E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999966273573309	WITHOUT_CLASSIFICATION	3.3726426690629754E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999966273573309	WITHOUT_CLASSIFICATION	3.3726426690629754E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999966273573309	WITHOUT_CLASSIFICATION	3.3726426690629754E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999966273573309	WITHOUT_CLASSIFICATION	3.3726426690629754E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999966273573309	WITHOUT_CLASSIFICATION	3.3726426690629754E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999966273573309	WITHOUT_CLASSIFICATION	3.3726426690629754E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999966273573309	WITHOUT_CLASSIFICATION	3.3726426690629754E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999966273573309	WITHOUT_CLASSIFICATION	3.3726426690629754E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999986321884836	WITHOUT_CLASSIFICATION	1.3678115163263736E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.999999408884471	WITHOUT_CLASSIFICATION	5.911155290654314E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.999999408884471	WITHOUT_CLASSIFICATION	5.911155290654314E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.999999408884471	WITHOUT_CLASSIFICATION	5.911155290654314E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994381758233	WITHOUT_CLASSIFICATION	5.618241766315524E-7	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999854387450083	WITHOUT_CLASSIFICATION	1.4561254991585196E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999854387450083	WITHOUT_CLASSIFICATION	1.4561254991585196E-5	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.9999887283644331	WITHOUT_CLASSIFICATION	1.127163556692738E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999995433825088	WITHOUT_CLASSIFICATION	4.566174910509517E-7	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999999312654819	WITHOUT_CLASSIFICATION	6.873451810962744E-8	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999996972886969	WITHOUT_CLASSIFICATION	3.027113030542993E-7	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999999366094411	WITHOUT_CLASSIFICATION	6.339055888912444E-8	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999959635681654	WITHOUT_CLASSIFICATION	4.0364318345532845E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751254079	WITHOUT_CLASSIFICATION	1.4248745921479799E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751254079	WITHOUT_CLASSIFICATION	1.4248745921479799E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751254079	WITHOUT_CLASSIFICATION	1.4248745921479799E-6	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9999960001594338	WITHOUT_CLASSIFICATION	3.999840566240564E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999715636835309	WITHOUT_CLASSIFICATION	2.8436316469154824E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.9999985199374066	WITHOUT_CLASSIFICATION	1.4800625933963809E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.999999490863263	WITHOUT_CLASSIFICATION	5.091367370837509E-7	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.9998676959073686	WITHOUT_CLASSIFICATION	1.323040926313309E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027761673	WITHOUT_CLASSIFICATION	1.5972238327700815E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027761673	WITHOUT_CLASSIFICATION	1.5972238327700815E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027761673	WITHOUT_CLASSIFICATION	1.5972238327700815E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027761673	WITHOUT_CLASSIFICATION	1.5972238327700815E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027761673	WITHOUT_CLASSIFICATION	1.5972238327700815E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027761673	WITHOUT_CLASSIFICATION	1.5972238327700815E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027761673	WITHOUT_CLASSIFICATION	1.5972238327700815E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027761673	WITHOUT_CLASSIFICATION	1.5972238327700815E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027761673	WITHOUT_CLASSIFICATION	1.5972238327700815E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913312	WITHOUT_CLASSIFICATION	1.6253086688571497E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913312	WITHOUT_CLASSIFICATION	1.6253086688571497E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177280162	WITHOUT_CLASSIFICATION	2.3822719839117943E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177280162	WITHOUT_CLASSIFICATION	2.3822719839117943E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486924791	WITHOUT_CLASSIFICATION	2.551307520831485E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486924791	WITHOUT_CLASSIFICATION	2.551307520831485E-6	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.9999989595635597	WITHOUT_CLASSIFICATION	1.0404364403613513E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999996998652048	WITHOUT_CLASSIFICATION	3.001347951880515E-7	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999996998652048	WITHOUT_CLASSIFICATION	3.001347951880515E-7	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999995002481755	WITHOUT_CLASSIFICATION	4.997518244240031E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999999356106074	WITHOUT_CLASSIFICATION	6.438939261017809E-8	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999999356106074	WITHOUT_CLASSIFICATION	6.438939261017809E-8	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999991081284678	WITHOUT_CLASSIFICATION	8.91871532195007E-7	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.9999998450178128	WITHOUT_CLASSIFICATION	1.549821871471355E-7	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.9999994974548252	WITHOUT_CLASSIFICATION	5.02545174784704E-7	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.9999996364616401	WITHOUT_CLASSIFICATION	3.635383597870355E-7	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9998305853083257	WITHOUT_CLASSIFICATION	1.694146916743322E-4	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9998305853083257	WITHOUT_CLASSIFICATION	1.694146916743322E-4	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.9999999519764322	WITHOUT_CLASSIFICATION	4.802356765921872E-8	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.9997568940386875	WITHOUT_CLASSIFICATION	2.431059613123529E-4	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.9999996400921695	WITHOUT_CLASSIFICATION	3.599078305353469E-7	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999976991674991	WITHOUT_CLASSIFICATION	2.300832500883801E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999979562767	WITHOUT_CLASSIFICATION	2.0437234100944145E-9	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998555834115	WITHOUT_CLASSIFICATION	1.4441658838768473E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999686349439	WITHOUT_CLASSIFICATION	3.136505610544734E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999882700571	WITHOUT_CLASSIFICATION	1.1729942942078778E-8	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999999832786524	WITHOUT_CLASSIFICATION	1.6721347727195612E-8	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999950242189812	WITHOUT_CLASSIFICATION	4.975781018819841E-6	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.999988830390874	WITHOUT_CLASSIFICATION	1.1169609125934042E-5	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9999736787512771	WITHOUT_CLASSIFICATION	2.632124872300452E-5	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.9999982811303038	WITHOUT_CLASSIFICATION	1.7188696962891365E-6	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999999643069365	WITHOUT_CLASSIFICATION	3.569306342919104E-8	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.9999994945427194	WITHOUT_CLASSIFICATION	5.054572805886118E-7	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.9999997808207666	WITHOUT_CLASSIFICATION	2.1917923336137939E-7	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.9999962850864363	WITHOUT_CLASSIFICATION	3.7149135637026854E-6	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.9999999338584538	WITHOUT_CLASSIFICATION	6.614154624838461E-8	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.9999985558062547	WITHOUT_CLASSIFICATION	1.4441937453105339E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999992418931568	WITHOUT_CLASSIFICATION	7.581068432277958E-7	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999992418931568	WITHOUT_CLASSIFICATION	7.581068432277958E-7	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999887604809995	WITHOUT_CLASSIFICATION	1.123951900055246E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.999999657299792	WITHOUT_CLASSIFICATION	3.427002080050027E-7	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999937477901217	WITHOUT_CLASSIFICATION	6.252209878190806E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.999997031272245	WITHOUT_CLASSIFICATION	2.968727755004546E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.999998579970705	WITHOUT_CLASSIFICATION	1.4200292950241777E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999959463444827	WITHOUT_CLASSIFICATION	4.053655517283011E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999998428783807	WITHOUT_CLASSIFICATION	1.5712161925033827E-7	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999994653611644	WITHOUT_CLASSIFICATION	5.34638835691324E-7	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999945150509694	WITHOUT_CLASSIFICATION	5.4849490305950025E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999945150509694	WITHOUT_CLASSIFICATION	5.4849490305950025E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9996398225634187	WITHOUT_CLASSIFICATION	3.6017743658139386E-4	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999982282997263	WITHOUT_CLASSIFICATION	1.771700273638493E-6	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9996976367854125	WITHOUT_CLASSIFICATION	3.023632145875114E-4	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9996745860778914	WITHOUT_CLASSIFICATION	3.254139221085805E-4	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9991301653970344	WITHOUT_CLASSIFICATION	8.698346029655834E-4	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.999999885699458	WITHOUT_CLASSIFICATION	1.143005420838184E-7	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.9999997016738194	WITHOUT_CLASSIFICATION	2.983261806145098E-7	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999999195344174	WITHOUT_CLASSIFICATION	8.046558257127541E-8	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.9999998625248894	WITHOUT_CLASSIFICATION	1.374751107027193E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999998168625297	WITHOUT_CLASSIFICATION	1.8313747032504184E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999998168625297	WITHOUT_CLASSIFICATION	1.8313747032504184E-7	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9995978874446351	WITHOUT_CLASSIFICATION	4.0211255536491897E-4	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999974141185126	WITHOUT_CLASSIFICATION	2.5858814873752042E-6	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999994367383437	WITHOUT_CLASSIFICATION	5.632616562812438E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999996680954768	WITHOUT_CLASSIFICATION	3.319045231476583E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999996680954768	WITHOUT_CLASSIFICATION	3.319045231476583E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999997690896688	WITHOUT_CLASSIFICATION	2.3091033123171164E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999997690896688	WITHOUT_CLASSIFICATION	2.3091033123171164E-7	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999903372026264	WITHOUT_CLASSIFICATION	9.662797373677338E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999952708967166	WITHOUT_CLASSIFICATION	4.72910328344319E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999922087524057	WITHOUT_CLASSIFICATION	7.791247594293951E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999922087524057	WITHOUT_CLASSIFICATION	7.791247594293951E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999980600714816	WITHOUT_CLASSIFICATION	1.9399285183368364E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999978657715406	WITHOUT_CLASSIFICATION	2.134228459465555E-6	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.9999988682576165	WITHOUT_CLASSIFICATION	1.1317423835129543E-6	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.9999982787573871	WITHOUT_CLASSIFICATION	1.7212426129119895E-6	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.9999996636216926	WITHOUT_CLASSIFICATION	3.3637830742843784E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332776017	WITHOUT_CLASSIFICATION	6.667223982946682E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332776017	WITHOUT_CLASSIFICATION	6.667223982946682E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332776017	WITHOUT_CLASSIFICATION	6.667223982946682E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332776017	WITHOUT_CLASSIFICATION	6.667223982946682E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332776017	WITHOUT_CLASSIFICATION	6.667223982946682E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332776017	WITHOUT_CLASSIFICATION	6.667223982946682E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332776017	WITHOUT_CLASSIFICATION	6.667223982946682E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332776017	WITHOUT_CLASSIFICATION	6.667223982946682E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332776017	WITHOUT_CLASSIFICATION	6.667223982946682E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332776017	WITHOUT_CLASSIFICATION	6.667223982946682E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332776017	WITHOUT_CLASSIFICATION	6.667223982946682E-7	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.9999871684425138	WITHOUT_CLASSIFICATION	1.283155748630132E-5	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.9999306746933532	WITHOUT_CLASSIFICATION	6.932530664688065E-5	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.9999998896392228	WITHOUT_CLASSIFICATION	1.1036077719601243E-7	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.9999990151761567	WITHOUT_CLASSIFICATION	9.8482384326431E-7	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999834469840017	WITHOUT_CLASSIFICATION	1.655301599838287E-5	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.9999982389062867	WITHOUT_CLASSIFICATION	1.7610937133294203E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999998699211423	WITHOUT_CLASSIFICATION	1.300788576920693E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999227502282	WITHOUT_CLASSIFICATION	7.724977179360483E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999227502282	WITHOUT_CLASSIFICATION	7.724977179360483E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999227502282	WITHOUT_CLASSIFICATION	7.724977179360483E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999227502282	WITHOUT_CLASSIFICATION	7.724977179360483E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999227502282	WITHOUT_CLASSIFICATION	7.724977179360483E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999227502282	WITHOUT_CLASSIFICATION	7.724977179360483E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999227502282	WITHOUT_CLASSIFICATION	7.724977179360483E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999227502282	WITHOUT_CLASSIFICATION	7.724977179360483E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999227502282	WITHOUT_CLASSIFICATION	7.724977179360483E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999227502282	WITHOUT_CLASSIFICATION	7.724977179360483E-7	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.9999714143623137	WITHOUT_CLASSIFICATION	2.8585637686289808E-5	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999870107743234	WITHOUT_CLASSIFICATION	1.2989225676600912E-5	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.9996907942445454	WITHOUT_CLASSIFICATION	3.0920575545451557E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412253199	WITHOUT_CLASSIFICATION	1.5877468010483742E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412253199	WITHOUT_CLASSIFICATION	1.5877468010483742E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412253199	WITHOUT_CLASSIFICATION	1.5877468010483742E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412253199	WITHOUT_CLASSIFICATION	1.5877468010483742E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412253199	WITHOUT_CLASSIFICATION	1.5877468010483742E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412253199	WITHOUT_CLASSIFICATION	1.5877468010483742E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412253199	WITHOUT_CLASSIFICATION	1.5877468010483742E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208108	WITHOUT_CLASSIFICATION	2.437918919745501E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208108	WITHOUT_CLASSIFICATION	2.437918919745501E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208108	WITHOUT_CLASSIFICATION	2.437918919745501E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208108	WITHOUT_CLASSIFICATION	2.437918919745501E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208108	WITHOUT_CLASSIFICATION	2.437918919745501E-8	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.9999997693795123	WITHOUT_CLASSIFICATION	2.306204876762636E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999996246975998	WITHOUT_CLASSIFICATION	3.753024001708214E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999998399804965	WITHOUT_CLASSIFICATION	1.6001950349071694E-7	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999980437793305	WITHOUT_CLASSIFICATION	1.956220669378067E-6	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9999998558978763	WITHOUT_CLASSIFICATION	1.4410212367460165E-7	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.9999998492353123	WITHOUT_CLASSIFICATION	1.5076468769430353E-7	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.9999997519416572	WITHOUT_CLASSIFICATION	2.4805834279037786E-7	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.9999961897394475	WITHOUT_CLASSIFICATION	3.810260552600579E-6	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9999996452539432	WITHOUT_CLASSIFICATION	3.54746056776964E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632848734	WITHOUT_CLASSIFICATION	1.6336715126615346E-5	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.9999999998831441	WITHOUT_CLASSIFICATION	1.1685581296999617E-10	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999983134670003	WITHOUT_CLASSIFICATION	1.686532999746002E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999529945948	WITHOUT_CLASSIFICATION	4.700540523922612E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999529945948	WITHOUT_CLASSIFICATION	4.700540523922612E-8	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999994504624	WITHOUT_CLASSIFICATION	5.495376754559114E-10	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999981520427922	WITHOUT_CLASSIFICATION	1.8479572078642163E-6	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999998663286643	WITHOUT_CLASSIFICATION	1.3367133575075138E-7	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.9999994096787004	WITHOUT_CLASSIFICATION	5.903212996911915E-7	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.9999943350953923	WITHOUT_CLASSIFICATION	5.664904607716034E-6	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999999853003719	WITHOUT_CLASSIFICATION	1.4699628145067731E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9672841672099802	WITHOUT_CLASSIFICATION	0.03271583279001972	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.9999999722711549	WITHOUT_CLASSIFICATION	2.7728845080558703E-8	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.9999924982351113	WITHOUT_CLASSIFICATION	7.501764888699346E-6	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999999457391483	WITHOUT_CLASSIFICATION	5.426085181588967E-8	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.9999988089533407	WITHOUT_CLASSIFICATION	1.19104665921415E-6	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999955949544754	WITHOUT_CLASSIFICATION	4.405045524563974E-6	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.9999999424746645	WITHOUT_CLASSIFICATION	5.7525335454523364E-8	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.999999828085342	WITHOUT_CLASSIFICATION	1.7191465806395127E-7	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.9999978720178655	WITHOUT_CLASSIFICATION	2.127982134512606E-6	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.999999786626201	WITHOUT_CLASSIFICATION	2.1337379903318365E-7	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.9990956678823266	WITHOUT_CLASSIFICATION	9.043321176734143E-4	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.9999999318009705	WITHOUT_CLASSIFICATION	6.819902953574228E-8	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.9999995081715707	WITHOUT_CLASSIFICATION	4.918284294390108E-7	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.9999788986921596	WITHOUT_CLASSIFICATION	2.1101307840409898E-5	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.999999523643417	WITHOUT_CLASSIFICATION	4.7635658300525087E-7	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999848711187	WITHOUT_CLASSIFICATION	1.5128881304156844E-8	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999999701666852	WITHOUT_CLASSIFICATION	2.9833314849773166E-8	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999994079631	WITHOUT_CLASSIFICATION	5.920369162087245E-10	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.9999999978079737	WITHOUT_CLASSIFICATION	2.1920264416263423E-9	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999908463976627	WITHOUT_CLASSIFICATION	9.153602337430732E-6	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.9999920705137432	WITHOUT_CLASSIFICATION	7.929486256883439E-6	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.9999991128295244	WITHOUT_CLASSIFICATION	8.871704756879794E-7	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.9999999383179701	WITHOUT_CLASSIFICATION	6.16820299301114E-8	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999999297198	WITHOUT_CLASSIFICATION	7.028016176181715E-11	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999999694858324	WITHOUT_CLASSIFICATION	3.0514167612038864E-8	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.999994380668065	WITHOUT_CLASSIFICATION	5.619331934909597E-6	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999799092286	WITHOUT_CLASSIFICATION	2.0090771328475844E-8	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999799092286	WITHOUT_CLASSIFICATION	2.0090771328475844E-8	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999910760400025	WITHOUT_CLASSIFICATION	8.92395999750302E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999969616906975	WITHOUT_CLASSIFICATION	3.0383093024782507E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.999999999463159	WITHOUT_CLASSIFICATION	5.368410727966353E-10	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.999999999463159	WITHOUT_CLASSIFICATION	5.368410727966353E-10	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.9999997245866723	WITHOUT_CLASSIFICATION	2.7541332766395075E-7	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999906176978	WITHOUT_CLASSIFICATION	9.382302065158492E-9	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999906176978	WITHOUT_CLASSIFICATION	9.382302065158492E-9	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999906176978	WITHOUT_CLASSIFICATION	9.382302065158492E-9	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999969616906975	WITHOUT_CLASSIFICATION	3.0383093024782507E-6	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999967834203286	WITHOUT_CLASSIFICATION	3.216579671453014E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.999999645051719	WITHOUT_CLASSIFICATION	3.549482809720529E-7	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999969616906975	WITHOUT_CLASSIFICATION	3.0383093024782507E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999969616906975	WITHOUT_CLASSIFICATION	3.0383093024782507E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999969616906975	WITHOUT_CLASSIFICATION	3.0383093024782507E-6	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.9999999954788473	WITHOUT_CLASSIFICATION	4.521152670200128E-9	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.999997209445631	WITHOUT_CLASSIFICATION	2.790554369055736E-6	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999921894201849	WITHOUT_CLASSIFICATION	7.810579815102846E-6	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999999417031789	WITHOUT_CLASSIFICATION	5.82968210814717E-8	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999950874319078	WITHOUT_CLASSIFICATION	4.912568092243072E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999997735094144	WITHOUT_CLASSIFICATION	2.264905855749821E-7	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.9999999993836031	WITHOUT_CLASSIFICATION	6.16396909757138E-10	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999997735094144	WITHOUT_CLASSIFICATION	2.264905855749821E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.9448252464261656	WITHOUT_CLASSIFICATION	0.05517475357383443	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.999999933669063	WITHOUT_CLASSIFICATION	6.633093694540568E-8	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999997735094144	WITHOUT_CLASSIFICATION	2.264905855749821E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999997735094144	WITHOUT_CLASSIFICATION	2.264905855749821E-7	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999857431133605	WITHOUT_CLASSIFICATION	1.4256886639437488E-5	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999907308120045	WITHOUT_CLASSIFICATION	9.269187995419423E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999996378840498	WITHOUT_CLASSIFICATION	3.621159502941711E-7	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.9999999643657251	WITHOUT_CLASSIFICATION	3.563427482396994E-8	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999999967456947	WITHOUT_CLASSIFICATION	3.254305205926635E-9	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.9999999726752422	WITHOUT_CLASSIFICATION	2.7324757751458448E-8	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999991502721121	WITHOUT_CLASSIFICATION	8.497278878457084E-7	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999876257392927	WITHOUT_CLASSIFICATION	1.2374260707345229E-5	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999876257392927	WITHOUT_CLASSIFICATION	1.2374260707345229E-5	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.9999995646286676	WITHOUT_CLASSIFICATION	4.35371332503095E-7	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999666536783146	WITHOUT_CLASSIFICATION	3.334632168547263E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.9980718927801819	WITHOUT_CLASSIFICATION	0.0019281072198180707	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998011680178	WITHOUT_CLASSIFICATION	1.9883198216698585E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999996385168908	WITHOUT_CLASSIFICATION	3.614831093102777E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999996385168908	WITHOUT_CLASSIFICATION	3.614831093102777E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999996385168908	WITHOUT_CLASSIFICATION	3.614831093102777E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998011680178	WITHOUT_CLASSIFICATION	1.9883198216698585E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998011680178	WITHOUT_CLASSIFICATION	1.9883198216698585E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998011680178	WITHOUT_CLASSIFICATION	1.9883198216698585E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998011680178	WITHOUT_CLASSIFICATION	1.9883198216698585E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999998011680178	WITHOUT_CLASSIFICATION	1.9883198216698585E-7	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.9999997309925107	WITHOUT_CLASSIFICATION	2.690074893062939E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997443534263	WITHOUT_CLASSIFICATION	2.5564657365939895E-7	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999993277402777	WITHOUT_CLASSIFICATION	6.722597222861689E-7	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999993277402777	WITHOUT_CLASSIFICATION	6.722597222861689E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997443534263	WITHOUT_CLASSIFICATION	2.5564657365939895E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997443534263	WITHOUT_CLASSIFICATION	2.5564657365939895E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997443534263	WITHOUT_CLASSIFICATION	2.5564657365939895E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999991281352872	WITHOUT_CLASSIFICATION	8.718647127688487E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999991281352872	WITHOUT_CLASSIFICATION	8.718647127688487E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999991281352872	WITHOUT_CLASSIFICATION	8.718647127688487E-7	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999999239250514	WITHOUT_CLASSIFICATION	7.607494854787425E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9672841672099802	WITHOUT_CLASSIFICATION	0.03271583279001972	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999997443534263	WITHOUT_CLASSIFICATION	2.5564657365939895E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999991281352872	WITHOUT_CLASSIFICATION	8.718647127688487E-7	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999999491216268	WITHOUT_CLASSIFICATION	5.087837313665009E-8	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.999999065133318	WITHOUT_CLASSIFICATION	9.348666819950608E-7	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.9999998095441239	WITHOUT_CLASSIFICATION	1.904558760435213E-7	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.9999999789601595	WITHOUT_CLASSIFICATION	2.1039840519223613E-8	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.9999999780328462	WITHOUT_CLASSIFICATION	2.1967153793634352E-8	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.99999944047382	WITHOUT_CLASSIFICATION	5.595261800392868E-7	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.9999986321340969	WITHOUT_CLASSIFICATION	1.3678659030602875E-6	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.9999896300287603	WITHOUT_CLASSIFICATION	1.0369971239739345E-5	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999998958821122	WITHOUT_CLASSIFICATION	1.0411788778667078E-7	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999999450129864	WITHOUT_CLASSIFICATION	5.498701354431224E-8	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999999450129864	WITHOUT_CLASSIFICATION	5.498701354431224E-8	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999999665327917	WITHOUT_CLASSIFICATION	3.3467208302814614E-8	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999999665327917	WITHOUT_CLASSIFICATION	3.3467208302814614E-8	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999998356635915	WITHOUT_CLASSIFICATION	1.6433640848142718E-7	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999998356635915	WITHOUT_CLASSIFICATION	1.6433640848142718E-7	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.9999999604879806	WITHOUT_CLASSIFICATION	3.951201930541942E-8	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.9999719297167061	WITHOUT_CLASSIFICATION	2.8070283293908444E-5	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.9999428875108288	WITHOUT_CLASSIFICATION	5.711248917127573E-5	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.9999985570583235	WITHOUT_CLASSIFICATION	1.4429416763816635E-6	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.9999991610090555	WITHOUT_CLASSIFICATION	8.389909444086484E-7	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.9999963697017644	WITHOUT_CLASSIFICATION	3.6302982356654658E-6	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.9999999982348903	WITHOUT_CLASSIFICATION	1.7651097875952815E-9	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.9999994889519798	WITHOUT_CLASSIFICATION	5.110480201983465E-7	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.9999999701382767	WITHOUT_CLASSIFICATION	2.986172339059278E-8	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999967590376269	WITHOUT_CLASSIFICATION	3.2409623731928115E-6	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999996652718135	WITHOUT_CLASSIFICATION	3.3472818657956336E-7	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999999417031789	WITHOUT_CLASSIFICATION	5.82968210814717E-8	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999928813422287	WITHOUT_CLASSIFICATION	7.118657771253474E-6	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999996277436146	WITHOUT_CLASSIFICATION	3.72256385429078E-7	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.9999999740326311	WITHOUT_CLASSIFICATION	2.5967368888321246E-8	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999748063408	WITHOUT_CLASSIFICATION	2.5193659180258965E-8	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999748063408	WITHOUT_CLASSIFICATION	2.5193659180258965E-8	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.9999999193494208	WITHOUT_CLASSIFICATION	8.065057928035576E-8	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9999998234127536	WITHOUT_CLASSIFICATION	1.7658724634572646E-7	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.9999997733872278	WITHOUT_CLASSIFICATION	2.2661277213956568E-7	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.999999995713529	WITHOUT_CLASSIFICATION	4.2864709850968274E-9	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.9999978054400841	WITHOUT_CLASSIFICATION	2.1945599158592617E-6	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.9999916379357466	WITHOUT_CLASSIFICATION	8.362064253320828E-6	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.9999993032660552	WITHOUT_CLASSIFICATION	6.967339448595371E-7	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9999958886835885	WITHOUT_CLASSIFICATION	4.11131641152449E-6	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.9999999518019118	WITHOUT_CLASSIFICATION	4.819808816113192E-8	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.9999245586874979	WITHOUT_CLASSIFICATION	7.544131250214247E-5	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.9999820476620562	WITHOUT_CLASSIFICATION	1.7952337943754598E-5	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999964570280635	WITHOUT_CLASSIFICATION	3.542971936440269E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999961796760923	WITHOUT_CLASSIFICATION	3.8203239076371E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999998433053073	WITHOUT_CLASSIFICATION	1.5669469257305493E-7	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9999997494744765	WITHOUT_CLASSIFICATION	2.5052552351015573E-7	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999072876965	WITHOUT_CLASSIFICATION	9.271230345173517E-8	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999072876965	WITHOUT_CLASSIFICATION	9.271230345173517E-8	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999994258213458	WITHOUT_CLASSIFICATION	5.741786541454517E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999994258213458	WITHOUT_CLASSIFICATION	5.741786541454517E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999964277784038	WITHOUT_CLASSIFICATION	3.5722215962065065E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999964277784038	WITHOUT_CLASSIFICATION	3.5722215962065065E-6	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.9999891767455011	WITHOUT_CLASSIFICATION	1.0823254498853382E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999666536783146	WITHOUT_CLASSIFICATION	3.334632168547263E-5	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9994623839358975	WITHOUT_CLASSIFICATION	5.376160641025628E-4	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.998161874157311	WITHOUT_CLASSIFICATION	0.0018381258426890589	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999999441589205	WITHOUT_CLASSIFICATION	5.584107968271108E-8	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999981786295847	WITHOUT_CLASSIFICATION	1.8213704152432033E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999072876965	WITHOUT_CLASSIFICATION	9.271230345173517E-8	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.9999933125294477	WITHOUT_CLASSIFICATION	6.6874705523394635E-6	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.9997789882399555	WITHOUT_CLASSIFICATION	2.2101176004445995E-4	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.9999999898254368	WITHOUT_CLASSIFICATION	1.0174563264203989E-8	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999997335361633	WITHOUT_CLASSIFICATION	2.66463836585579E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999994258213458	WITHOUT_CLASSIFICATION	5.741786541454517E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999964277784038	WITHOUT_CLASSIFICATION	3.5722215962065065E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999666536783146	WITHOUT_CLASSIFICATION	3.334632168547263E-5	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999999723808899	WITHOUT_CLASSIFICATION	2.761911010369565E-8	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9999999994781176	WITHOUT_CLASSIFICATION	5.2188241966266E-10	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999995135876023	WITHOUT_CLASSIFICATION	4.864123977320875E-7	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.9999999063524304	WITHOUT_CLASSIFICATION	9.364756955441401E-8	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9999999919132763	WITHOUT_CLASSIFICATION	8.086723687888586E-9	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9999999767574528	WITHOUT_CLASSIFICATION	2.3242547162804043E-8	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9991816952739303	WITHOUT_CLASSIFICATION	8.183047260697064E-4	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999972981755055	WITHOUT_CLASSIFICATION	2.7018244944431145E-6	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.9999976413204682	WITHOUT_CLASSIFICATION	2.358679531819813E-6	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9995739982496169	WITHOUT_CLASSIFICATION	4.260017503831377E-4	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999998231976902	WITHOUT_CLASSIFICATION	1.768023097891394E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999905277576501	WITHOUT_CLASSIFICATION	9.472242349977951E-6	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999996816350154	WITHOUT_CLASSIFICATION	3.183649845802205E-7	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999996816350154	WITHOUT_CLASSIFICATION	3.183649845802205E-7	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999986113514795	WITHOUT_CLASSIFICATION	1.3886485204451435E-6	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999986113514795	WITHOUT_CLASSIFICATION	1.3886485204451435E-6	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999991861721471	WITHOUT_CLASSIFICATION	8.138278528732146E-7	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999991861721471	WITHOUT_CLASSIFICATION	8.138278528732146E-7	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999971804594973	WITHOUT_CLASSIFICATION	2.819540502750525E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999915411995233	WITHOUT_CLASSIFICATION	8.458800476740078E-6	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.9999127882899104	WITHOUT_CLASSIFICATION	8.721171008955797E-5	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9991086939570649	WITHOUT_CLASSIFICATION	8.913060429351587E-4	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.9999975178327661	WITHOUT_CLASSIFICATION	2.48216723387816E-6	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999987630502467	WITHOUT_CLASSIFICATION	1.2369497532107574E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999997483681259	WITHOUT_CLASSIFICATION	2.5163187403906644E-7	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999997483681259	WITHOUT_CLASSIFICATION	2.5163187403906644E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999999361002324	WITHOUT_CLASSIFICATION	6.389976758165751E-8	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999999361002324	WITHOUT_CLASSIFICATION	6.389976758165751E-8	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999992559956233	WITHOUT_CLASSIFICATION	7.440043766965671E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996003469186784	WITHOUT_CLASSIFICATION	3.996530813216614E-4	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999540420437999	WITHOUT_CLASSIFICATION	4.5957956200145025E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999940168998197	WITHOUT_CLASSIFICATION	5.98310018031929E-6	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.9999376143409701	WITHOUT_CLASSIFICATION	6.238565902997292E-5	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999995656957664	WITHOUT_CLASSIFICATION	4.3430423355610807E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999996136272716	WITHOUT_CLASSIFICATION	3.8637272841876E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996003469186784	WITHOUT_CLASSIFICATION	3.996530813216614E-4	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999540420437999	WITHOUT_CLASSIFICATION	4.5957956200145025E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999940168998197	WITHOUT_CLASSIFICATION	5.98310018031929E-6	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.9999999770091357	WITHOUT_CLASSIFICATION	2.2990864329298316E-8	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.9999940579535864	WITHOUT_CLASSIFICATION	5.942046413608889E-6	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.999999882164425	WITHOUT_CLASSIFICATION	1.1783557499587134E-7	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.9999875184187927	WITHOUT_CLASSIFICATION	1.2481581207217882E-5	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9647677834872663	WITHOUT_CLASSIFICATION	0.03523221651273373	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9931999699927018	WITHOUT_CLASSIFICATION	0.006800030007298205	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.9999444192804208	WITHOUT_CLASSIFICATION	5.5580719579207004E-5	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999791586173455	WITHOUT_CLASSIFICATION	2.0841382654506093E-5	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.9999942090668691	WITHOUT_CLASSIFICATION	5.790933130985664E-6	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999847508372117	WITHOUT_CLASSIFICATION	1.5249162788251323E-5	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.9999998287794156	WITHOUT_CLASSIFICATION	1.712205842377836E-7	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999998723828837	WITHOUT_CLASSIFICATION	1.2761711634966348E-7	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999998723828837	WITHOUT_CLASSIFICATION	1.2761711634966348E-7	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999969541846476	WITHOUT_CLASSIFICATION	3.045815352447523E-6	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999969541846476	WITHOUT_CLASSIFICATION	3.045815352447523E-6	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9999997743059446	WITHOUT_CLASSIFICATION	2.2569405557460793E-7	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.9999999501394428	WITHOUT_CLASSIFICATION	4.98605572212083E-8	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.9999991624910632	WITHOUT_CLASSIFICATION	8.375089367137978E-7	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999996606365169	WITHOUT_CLASSIFICATION	3.39363483070076E-7	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9999934481428862	WITHOUT_CLASSIFICATION	6.551857113864896E-6	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.9999993899743828	WITHOUT_CLASSIFICATION	6.100256171986485E-7	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999972981755055	WITHOUT_CLASSIFICATION	2.7018244944431145E-6	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.9999984528291799	WITHOUT_CLASSIFICATION	1.5471708201827063E-6	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.9999984680219548	WITHOUT_CLASSIFICATION	1.5319780451804542E-6	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.999999700451191	WITHOUT_CLASSIFICATION	2.995488089676011E-7	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999315400717385	WITHOUT_CLASSIFICATION	6.845992826162064E-5	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999982198332679	WITHOUT_CLASSIFICATION	1.780166732167426E-6	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999994101189971	WITHOUT_CLASSIFICATION	5.898810028640984E-7	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999994101189971	WITHOUT_CLASSIFICATION	5.898810028640984E-7	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999637532842442	WITHOUT_CLASSIFICATION	3.624671575582059E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999992027854064	WITHOUT_CLASSIFICATION	7.972145936200725E-7	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999843900194683	WITHOUT_CLASSIFICATION	1.5609980531722967E-5	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999892248485873	WITHOUT_CLASSIFICATION	1.0775151412712088E-5	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.9999998478862486	WITHOUT_CLASSIFICATION	1.521137513722209E-7	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.9999996931954641	WITHOUT_CLASSIFICATION	3.0680453586053323E-7	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.999999417420233	WITHOUT_CLASSIFICATION	5.825797668720157E-7	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9999972702522348	WITHOUT_CLASSIFICATION	2.7297477651591984E-6	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.9999999293933977	WITHOUT_CLASSIFICATION	7.060660233693158E-8	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.9999999646270913	WITHOUT_CLASSIFICATION	3.537290867750337E-8	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.999999933669063	WITHOUT_CLASSIFICATION	6.633093694540568E-8	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9999978644228608	WITHOUT_CLASSIFICATION	2.1355771392666236E-6	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999987149455009	WITHOUT_CLASSIFICATION	1.2850544990895667E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999993179803822	WITHOUT_CLASSIFICATION	6.82019617727855E-7	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999996805650404	WITHOUT_CLASSIFICATION	3.19434959525538E-7	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999990068564052	WITHOUT_CLASSIFICATION	9.931435948338174E-7	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.9999998049739116	WITHOUT_CLASSIFICATION	1.9502608842180424E-7	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999988135007901	WITHOUT_CLASSIFICATION	1.1864992098989355E-6	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.9999971738839889	WITHOUT_CLASSIFICATION	2.826116011006715E-6	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.9999998952610817	WITHOUT_CLASSIFICATION	1.0473891833906134E-7	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9999933604032021	WITHOUT_CLASSIFICATION	6.639596797836645E-6	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.9999987209769365	WITHOUT_CLASSIFICATION	1.279023063439408E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999993179803822	WITHOUT_CLASSIFICATION	6.82019617727855E-7	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.9999991107213262	WITHOUT_CLASSIFICATION	8.89278673852105E-7	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999996805650404	WITHOUT_CLASSIFICATION	3.19434959525538E-7	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999941833622145	WITHOUT_CLASSIFICATION	5.816637785509118E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999996501638989	WITHOUT_CLASSIFICATION	3.498361010755044E-7	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999990068564052	WITHOUT_CLASSIFICATION	9.931435948338174E-7	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999988135007901	WITHOUT_CLASSIFICATION	1.1864992098989355E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999994812794477	WITHOUT_CLASSIFICATION	5.187205522951028E-7	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.9999985865347517	WITHOUT_CLASSIFICATION	1.4134652483018915E-6	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999999670537465	WITHOUT_CLASSIFICATION	3.2946253571890534E-8	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.999999596737428	WITHOUT_CLASSIFICATION	4.032625719365538E-7	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.999998242569504	WITHOUT_CLASSIFICATION	1.7574304961060839E-6	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9999990630587985	WITHOUT_CLASSIFICATION	9.369412014666865E-7	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.9999923080040117	WITHOUT_CLASSIFICATION	7.691995988314497E-6	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999991374891397	WITHOUT_CLASSIFICATION	8.625108601988125E-7	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.9999985884857188	WITHOUT_CLASSIFICATION	1.4115142812167295E-6	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.999990902874638	WITHOUT_CLASSIFICATION	9.097125361883829E-6	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.9999999393078802	WITHOUT_CLASSIFICATION	6.069211983940451E-8	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.9999776280410909	WITHOUT_CLASSIFICATION	2.237195890906815E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999941833622145	WITHOUT_CLASSIFICATION	5.816637785509118E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999994812794477	WITHOUT_CLASSIFICATION	5.187205522951028E-7	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999991374891397	WITHOUT_CLASSIFICATION	8.625108601988125E-7	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.9999983212402773	WITHOUT_CLASSIFICATION	1.6787597227152005E-6	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999818211092775	WITHOUT_CLASSIFICATION	1.817889072245611E-5	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999839184617259	WITHOUT_CLASSIFICATION	1.608153827411615E-5	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.9999948602822035	WITHOUT_CLASSIFICATION	5.139717796512191E-6	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.9999984422758467	WITHOUT_CLASSIFICATION	1.5577241532922973E-6	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.9999976228044081	WITHOUT_CLASSIFICATION	2.3771955918999764E-6	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.9999966102391278	WITHOUT_CLASSIFICATION	3.389760872324254E-6	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.9999999661733996	WITHOUT_CLASSIFICATION	3.382660045548925E-8	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.9999998595352311	WITHOUT_CLASSIFICATION	1.404647688555696E-7	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.9999990328994076	WITHOUT_CLASSIFICATION	9.671005923817673E-7	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999991693080327	WITHOUT_CLASSIFICATION	8.306919674065185E-7	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999994784356641	WITHOUT_CLASSIFICATION	5.215643359434686E-7	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.9999989283227927	WITHOUT_CLASSIFICATION	1.0716772073525354E-6	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.9999998791445011	WITHOUT_CLASSIFICATION	1.2085549902661043E-7	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.999980276821267	WITHOUT_CLASSIFICATION	1.972317873307572E-5	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.9999926050487217	WITHOUT_CLASSIFICATION	7.394951278317007E-6	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.9999998614886763	WITHOUT_CLASSIFICATION	1.3851132373144804E-7	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.9999999883017147	WITHOUT_CLASSIFICATION	1.169828532865171E-8	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.9998870369654002	WITHOUT_CLASSIFICATION	1.1296303459991986E-4	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.9999999556178648	WITHOUT_CLASSIFICATION	4.4382135260868744E-8	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.9999999575844876	WITHOUT_CLASSIFICATION	4.24155124968458E-8	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.9099079347919751	WITHOUT_CLASSIFICATION	0.0900920652080249	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.9999930216020582	WITHOUT_CLASSIFICATION	6.978397941825926E-6	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.9999972526005003	WITHOUT_CLASSIFICATION	2.7473994997648772E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999915411995233	WITHOUT_CLASSIFICATION	8.458800476740078E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999992559956233	WITHOUT_CLASSIFICATION	7.440043766965671E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996003469186784	WITHOUT_CLASSIFICATION	3.996530813216614E-4	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.999992584913813	WITHOUT_CLASSIFICATION	7.415086186958343E-6	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9999996825165797	WITHOUT_CLASSIFICATION	3.174834202147934E-7	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.9999994216678324	WITHOUT_CLASSIFICATION	5.783321675779683E-7	DEFECT
// days	WITHOUT_CLASSIFICATION	0.9999905008453188	WITHOUT_CLASSIFICATION	9.499154681144946E-6	DEFECT
// months	WITHOUT_CLASSIFICATION	0.9999989840694381	WITHOUT_CLASSIFICATION	1.0159305619163045E-6	DEFECT
// years	WITHOUT_CLASSIFICATION	0.9999942126095673	WITHOUT_CLASSIFICATION	5.787390432692244E-6	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.9999997133122445	WITHOUT_CLASSIFICATION	2.86687755474283E-7	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.999989893805322	WITHOUT_CLASSIFICATION	1.0106194678034943E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999707162714441	WITHOUT_CLASSIFICATION	2.9283728555947485E-5	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.9999958508955549	WITHOUT_CLASSIFICATION	4.149104445098524E-6	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.9999611887945591	WITHOUT_CLASSIFICATION	3.881120544097821E-5	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.9999758531202493	WITHOUT_CLASSIFICATION	2.4146879750688188E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999895440791824	WITHOUT_CLASSIFICATION	1.0455920817677723E-5	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9996025272807687	WITHOUT_CLASSIFICATION	3.974727192312383E-4	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9996025272807687	WITHOUT_CLASSIFICATION	3.974727192312383E-4	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.99998076578066	WITHOUT_CLASSIFICATION	1.9234219340006833E-5	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.99998076578066	WITHOUT_CLASSIFICATION	1.9234219340006833E-5	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.9968161632048169	WITHOUT_CLASSIFICATION	0.0031838367951830997	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.999989045515066	WITHOUT_CLASSIFICATION	1.095448493415539E-5	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.9999999326926744	WITHOUT_CLASSIFICATION	6.730732560914469E-8	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.9999994278083819	WITHOUT_CLASSIFICATION	5.721916180965222E-7	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999984181391723	WITHOUT_CLASSIFICATION	1.5818608276939221E-6	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999936208666022	WITHOUT_CLASSIFICATION	6.379133397882656E-6	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.999999988352938	WITHOUT_CLASSIFICATION	1.1647062005459665E-8	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9999999909394504	WITHOUT_CLASSIFICATION	9.060549686601348E-9	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.9999999940703131	WITHOUT_CLASSIFICATION	5.929686824060224E-9	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999987630502467	WITHOUT_CLASSIFICATION	1.2369497532107574E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999940168998197	WITHOUT_CLASSIFICATION	5.98310018031929E-6	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999847508372117	WITHOUT_CLASSIFICATION	1.5249162788251323E-5	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.9999954771680066	WITHOUT_CLASSIFICATION	4.5228319933394125E-6	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.9999975179894701	WITHOUT_CLASSIFICATION	2.4820105298611014E-6	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999987807899566	WITHOUT_CLASSIFICATION	1.2192100433557257E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999460411886	WITHOUT_CLASSIFICATION	5.3958811410658497E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999472765349	WITHOUT_CLASSIFICATION	5.272346511881424E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999907596413	WITHOUT_CLASSIFICATION	9.240358700795999E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999953734617	WITHOUT_CLASSIFICATION	4.6265382917814786E-8	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.9999999454388719	WITHOUT_CLASSIFICATION	5.456112818704917E-8	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999989096185719	WITHOUT_CLASSIFICATION	1.0903814281053912E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999422282447	WITHOUT_CLASSIFICATION	5.777175531101993E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999288692881	WITHOUT_CLASSIFICATION	7.113071187508655E-8	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.9999999576032378	WITHOUT_CLASSIFICATION	4.2396762203628444E-8	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999993285047224	WITHOUT_CLASSIFICATION	6.714952775628668E-7	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999993285047224	WITHOUT_CLASSIFICATION	6.714952775628668E-7	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.9999998933882389	WITHOUT_CLASSIFICATION	1.0661176120375026E-7	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.9999999415964855	WITHOUT_CLASSIFICATION	5.840351444191331E-8	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.9999988174335008	WITHOUT_CLASSIFICATION	1.1825664991809373E-6	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.9999999139422466	WITHOUT_CLASSIFICATION	8.605775340782946E-8	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.9999968846695151	WITHOUT_CLASSIFICATION	3.1153304848736197E-6	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.9999968982378188	WITHOUT_CLASSIFICATION	3.101762181283852E-6	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999995901150659	WITHOUT_CLASSIFICATION	4.098849341210526E-7	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.999999969986415	WITHOUT_CLASSIFICATION	3.0013584922912686E-8	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999995901150659	WITHOUT_CLASSIFICATION	4.098849341210526E-7	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.9999995992278884	WITHOUT_CLASSIFICATION	4.0077211167893025E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999974445627307	WITHOUT_CLASSIFICATION	2.555437269391469E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.999999969986415	WITHOUT_CLASSIFICATION	3.0013584922912686E-8	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.999993897528371	WITHOUT_CLASSIFICATION	6.102471628995228E-6	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999782682376	WITHOUT_CLASSIFICATION	2.1731762469771043E-8	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.9999999473666813	WITHOUT_CLASSIFICATION	5.2633318654910146E-8	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.999998950817294	WITHOUT_CLASSIFICATION	1.0491827060074295E-6	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.9999994030853274	WITHOUT_CLASSIFICATION	5.969146725640918E-7	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999183377629995	WITHOUT_CLASSIFICATION	8.166223700042444E-5	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.9999983035360068	WITHOUT_CLASSIFICATION	1.6964639931445825E-6	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.9999995315313815	WITHOUT_CLASSIFICATION	4.6846861840857415E-7	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999999558465876	WITHOUT_CLASSIFICATION	4.4153412362389544E-8	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999999895055062	WITHOUT_CLASSIFICATION	1.0494493813722297E-8	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999999895055062	WITHOUT_CLASSIFICATION	1.0494493813722297E-8	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.9999999290782571	WITHOUT_CLASSIFICATION	7.092174294958293E-8	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.9999999734088952	WITHOUT_CLASSIFICATION	2.6591104798313498E-8	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.99997433737566	WITHOUT_CLASSIFICATION	2.566262434002218E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.99997433737566	WITHOUT_CLASSIFICATION	2.566262434002218E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.99997433737566	WITHOUT_CLASSIFICATION	2.566262434002218E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998677664181435	WITHOUT_CLASSIFICATION	1.3223358185663413E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998677664181435	WITHOUT_CLASSIFICATION	1.3223358185663413E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998677664181435	WITHOUT_CLASSIFICATION	1.3223358185663413E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999984489303394	WITHOUT_CLASSIFICATION	1.5510696605620374E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999984489303394	WITHOUT_CLASSIFICATION	1.5510696605620374E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999984489303394	WITHOUT_CLASSIFICATION	1.5510696605620374E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999855440375255	WITHOUT_CLASSIFICATION	1.4455962474645877E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999855440375255	WITHOUT_CLASSIFICATION	1.4455962474645877E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999996136272716	WITHOUT_CLASSIFICATION	3.8637272841876E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999996136272716	WITHOUT_CLASSIFICATION	3.8637272841876E-7	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.999971743891101	WITHOUT_CLASSIFICATION	2.825610889904779E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999972981755055	WITHOUT_CLASSIFICATION	2.7018244944431145E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999972981755055	WITHOUT_CLASSIFICATION	2.7018244944431145E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9991816952739303	WITHOUT_CLASSIFICATION	8.183047260697064E-4	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9995739982496169	WITHOUT_CLASSIFICATION	4.260017503831377E-4	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999915411995233	WITHOUT_CLASSIFICATION	8.458800476740078E-6	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.999989045515066	WITHOUT_CLASSIFICATION	1.095448493415539E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.99997433737566	WITHOUT_CLASSIFICATION	2.566262434002218E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998677664181435	WITHOUT_CLASSIFICATION	1.3223358185663413E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998677664181435	WITHOUT_CLASSIFICATION	1.3223358185663413E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999984489303394	WITHOUT_CLASSIFICATION	1.5510696605620374E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999984489303394	WITHOUT_CLASSIFICATION	1.5510696605620374E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999855440375255	WITHOUT_CLASSIFICATION	1.4455962474645877E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999855440375255	WITHOUT_CLASSIFICATION	1.4455962474645877E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999782682376	WITHOUT_CLASSIFICATION	2.1731762469771043E-8	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.9999962813943677	WITHOUT_CLASSIFICATION	3.7186056322680317E-6	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.9999944966761077	WITHOUT_CLASSIFICATION	5.5033238922913465E-6	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.9999999460057937	WITHOUT_CLASSIFICATION	5.3994206321450254E-8	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.9999994729638778	WITHOUT_CLASSIFICATION	5.270361221678059E-7	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.9999999155426328	WITHOUT_CLASSIFICATION	8.44573672262391E-8	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.9921310104896465	WITHOUT_CLASSIFICATION	0.007868989510353449	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999915725335	WITHOUT_CLASSIFICATION	8.427466479179324E-9	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9999993962366364	WITHOUT_CLASSIFICATION	6.037633637355474E-7	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9997902617431851	WITHOUT_CLASSIFICATION	2.0973825681489916E-4	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.999999752390376	WITHOUT_CLASSIFICATION	2.4760962402530944E-7	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9967638557807185	WITHOUT_CLASSIFICATION	0.0032361442192814305	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999999682428461	WITHOUT_CLASSIFICATION	3.175715392978536E-8	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999999682428461	WITHOUT_CLASSIFICATION	3.175715392978536E-8	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.999981927592076	WITHOUT_CLASSIFICATION	1.807240792404359E-5	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.999981927592076	WITHOUT_CLASSIFICATION	1.807240792404359E-5	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999713706322209	WITHOUT_CLASSIFICATION	2.862936777909986E-5	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999713706322209	WITHOUT_CLASSIFICATION	2.862936777909986E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999782682376	WITHOUT_CLASSIFICATION	2.1731762469771043E-8	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9991816952739303	WITHOUT_CLASSIFICATION	8.183047260697064E-4	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9995739982496169	WITHOUT_CLASSIFICATION	4.260017503831377E-4	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999971804594973	WITHOUT_CLASSIFICATION	2.819540502750525E-6	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999987630502467	WITHOUT_CLASSIFICATION	1.2369497532107574E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999992559956233	WITHOUT_CLASSIFICATION	7.440043766965671E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996003469186784	WITHOUT_CLASSIFICATION	3.996530813216614E-4	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.999989893805322	WITHOUT_CLASSIFICATION	1.0106194678034943E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.999989893805322	WITHOUT_CLASSIFICATION	1.0106194678034943E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999707162714441	WITHOUT_CLASSIFICATION	2.9283728555947485E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999707162714441	WITHOUT_CLASSIFICATION	2.9283728555947485E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999395542142	WITHOUT_CLASSIFICATION	6.044578585953243E-8	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.9999999604303244	WITHOUT_CLASSIFICATION	3.956967569792783E-8	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999996042050587	WITHOUT_CLASSIFICATION	3.95794941253801E-7	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.999993638117185	WITHOUT_CLASSIFICATION	6.361882814979441E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.999993638117185	WITHOUT_CLASSIFICATION	6.361882814979441E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999998741650036	WITHOUT_CLASSIFICATION	1.2583499648880943E-7	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999971634714205	WITHOUT_CLASSIFICATION	2.8365285795661508E-6	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.9999998847128617	WITHOUT_CLASSIFICATION	1.1528713825748026E-7	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999948774208521	WITHOUT_CLASSIFICATION	5.12257914787981E-6	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999992755457534	WITHOUT_CLASSIFICATION	7.244542464576967E-7	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.9999998689923805	WITHOUT_CLASSIFICATION	1.310076194647253E-7	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999997798266888	WITHOUT_CLASSIFICATION	2.2017331129118972E-7	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999997798266888	WITHOUT_CLASSIFICATION	2.2017331129118972E-7	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.9999998658608782	WITHOUT_CLASSIFICATION	1.3413912179561262E-7	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.9999999693588928	WITHOUT_CLASSIFICATION	3.06411072008625E-8	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999395542142	WITHOUT_CLASSIFICATION	6.044578585953243E-8	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999395542142	WITHOUT_CLASSIFICATION	6.044578585953243E-8	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999996524392543	WITHOUT_CLASSIFICATION	3.4756074578373584E-7	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.999993638117185	WITHOUT_CLASSIFICATION	6.361882814979441E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999963939970882	WITHOUT_CLASSIFICATION	3.6060029118083756E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999997238597006	WITHOUT_CLASSIFICATION	2.7614029937639424E-7	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999997238597006	WITHOUT_CLASSIFICATION	2.7614029937639424E-7	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999998741650036	WITHOUT_CLASSIFICATION	1.2583499648880943E-7	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999948774208521	WITHOUT_CLASSIFICATION	5.12257914787981E-6	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.9999989874559809	WITHOUT_CLASSIFICATION	1.0125440190666267E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999994860727675	WITHOUT_CLASSIFICATION	5.139272325979988E-7	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.9999892946790047	WITHOUT_CLASSIFICATION	1.0705320995350717E-5	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9999989949356803	WITHOUT_CLASSIFICATION	1.0050643195998107E-6	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.9999961165543355	WITHOUT_CLASSIFICATION	3.883445664443994E-6	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.999999791640973	WITHOUT_CLASSIFICATION	2.083590269517605E-7	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.9999301842762742	WITHOUT_CLASSIFICATION	6.981572372582534E-5	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999986584088703	WITHOUT_CLASSIFICATION	1.3415911298568383E-6	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999994066408308	WITHOUT_CLASSIFICATION	5.933591693502918E-7	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999999797132266	WITHOUT_CLASSIFICATION	2.0286773326049817E-8	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.999999997922138	WITHOUT_CLASSIFICATION	2.0778619719301465E-9	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999980244550402	WITHOUT_CLASSIFICATION	1.9755449597888758E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999992243707769	WITHOUT_CLASSIFICATION	7.75629223068314E-7	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999999770618908	WITHOUT_CLASSIFICATION	2.2938109247362537E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999442347718	WITHOUT_CLASSIFICATION	5.576522834518768E-8	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999986911117827	WITHOUT_CLASSIFICATION	1.3088882173633458E-6	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999994411872318	WITHOUT_CLASSIFICATION	5.588127681284115E-7	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999999951208609	WITHOUT_CLASSIFICATION	4.879139172314798E-9	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999982028747875	WITHOUT_CLASSIFICATION	1.7971252124917612E-6	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999986462904	WITHOUT_CLASSIFICATION	1.3537095725411741E-9	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999993740835411	WITHOUT_CLASSIFICATION	6.259164588260732E-7	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999996854652438	WITHOUT_CLASSIFICATION	3.145347562404435E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.999998861927034	WITHOUT_CLASSIFICATION	1.1380729659871316E-6	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.999998861927034	WITHOUT_CLASSIFICATION	1.1380729659871316E-6	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.999998861927034	WITHOUT_CLASSIFICATION	1.1380729659871316E-6	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9998014181791682	WITHOUT_CLASSIFICATION	1.9858182083174126E-4	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9998014181791682	WITHOUT_CLASSIFICATION	1.9858182083174126E-4	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.9999997271846895	WITHOUT_CLASSIFICATION	2.7281531051990947E-7	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.9999996307766795	WITHOUT_CLASSIFICATION	3.6922332046506174E-7	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.9999991391979665	WITHOUT_CLASSIFICATION	8.608020335036912E-7	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.9999988843067888	WITHOUT_CLASSIFICATION	1.1156932112069926E-6	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999999446937899	WITHOUT_CLASSIFICATION	5.530621006332296E-8	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999859855677329	WITHOUT_CLASSIFICATION	1.4014432267228836E-5	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.9997850257453481	WITHOUT_CLASSIFICATION	2.1497425465192877E-4	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.99984337795278	WITHOUT_CLASSIFICATION	1.5662204722003138E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999933246459977	WITHOUT_CLASSIFICATION	6.675354002441951E-6	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.9999746469235073	WITHOUT_CLASSIFICATION	2.535307649270811E-5	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.9999990473714082	WITHOUT_CLASSIFICATION	9.526285916654422E-7	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999955802143562	WITHOUT_CLASSIFICATION	4.419785643739273E-6	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999955802143562	WITHOUT_CLASSIFICATION	4.419785643739273E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999821788581	WITHOUT_CLASSIFICATION	1.7821141890616276E-8	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.9998714546324401	WITHOUT_CLASSIFICATION	1.2854536755999978E-4	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999942314642	WITHOUT_CLASSIFICATION	5.7685357073602E-9	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999999293400207	WITHOUT_CLASSIFICATION	7.065997930248879E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999999293400207	WITHOUT_CLASSIFICATION	7.065997930248879E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999999293400207	WITHOUT_CLASSIFICATION	7.065997930248879E-7	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999999966931893	WITHOUT_CLASSIFICATION	3.306810723671293E-9	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.999999997868016	WITHOUT_CLASSIFICATION	2.1319841287130045E-9	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999987009678	WITHOUT_CLASSIFICATION	1.2990322001941048E-9	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999965254530203	WITHOUT_CLASSIFICATION	3.474546979712142E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999961796760923	WITHOUT_CLASSIFICATION	3.8203239076371E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999998433053073	WITHOUT_CLASSIFICATION	1.5669469257305493E-7	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999980244550402	WITHOUT_CLASSIFICATION	1.9755449597888758E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999992243707769	WITHOUT_CLASSIFICATION	7.75629223068314E-7	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.9999999951208609	WITHOUT_CLASSIFICATION	4.879139172314798E-9	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999982028747875	WITHOUT_CLASSIFICATION	1.7971252124917612E-6	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999986462904	WITHOUT_CLASSIFICATION	1.3537095725411741E-9	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999993740835411	WITHOUT_CLASSIFICATION	6.259164588260732E-7	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999996854652438	WITHOUT_CLASSIFICATION	3.145347562404435E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.999999293400207	WITHOUT_CLASSIFICATION	7.065997930248879E-7	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.999998274389614	WITHOUT_CLASSIFICATION	1.7256103860642917E-6	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999999871715389	WITHOUT_CLASSIFICATION	1.2828461093598481E-8	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994997844831	WITHOUT_CLASSIFICATION	5.002155169179238E-7	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.9221557870140515	WITHOUT_CLASSIFICATION	0.0778442129859485	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.999934448214798	WITHOUT_CLASSIFICATION	6.555178520196552E-5	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.9999711664286858	WITHOUT_CLASSIFICATION	2.8833571314331957E-5	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999337699056908	WITHOUT_CLASSIFICATION	6.623009430907625E-5	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999999580592931	WITHOUT_CLASSIFICATION	4.194070694155344E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999993566378831	WITHOUT_CLASSIFICATION	6.433621168260919E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999993566378831	WITHOUT_CLASSIFICATION	6.433621168260919E-7	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999906632664	WITHOUT_CLASSIFICATION	9.336733671267558E-9	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999906632664	WITHOUT_CLASSIFICATION	9.336733671267558E-9	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.9999994813559157	WITHOUT_CLASSIFICATION	5.186440843494821E-7	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999992603636	WITHOUT_CLASSIFICATION	7.396363799270428E-10	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999976923761	WITHOUT_CLASSIFICATION	2.307623894114983E-9	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999997073638578	WITHOUT_CLASSIFICATION	2.926361423121443E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999997073638578	WITHOUT_CLASSIFICATION	2.926361423121443E-7	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.9999988742980936	WITHOUT_CLASSIFICATION	1.1257019063558864E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999908463976627	WITHOUT_CLASSIFICATION	9.153602337430732E-6	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999999297198	WITHOUT_CLASSIFICATION	7.028016176181715E-11	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999999770618908	WITHOUT_CLASSIFICATION	2.2938109247362537E-8	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999997073638578	WITHOUT_CLASSIFICATION	2.926361423121443E-7	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.9999999821487621	WITHOUT_CLASSIFICATION	1.7851237933984014E-8	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.9999972086638559	WITHOUT_CLASSIFICATION	2.791336144077587E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999396275988	WITHOUT_CLASSIFICATION	6.037240111858729E-8	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.9999998815633601	WITHOUT_CLASSIFICATION	1.1843663991839693E-7	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.9999999962718389	WITHOUT_CLASSIFICATION	3.728161178915306E-9	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.9999997956755258	WITHOUT_CLASSIFICATION	2.0432447421893697E-7	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.9999991869144212	WITHOUT_CLASSIFICATION	8.130855787585887E-7	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.9999994441139611	WITHOUT_CLASSIFICATION	5.558860389151481E-7	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999983099571428	WITHOUT_CLASSIFICATION	1.6900428572750784E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999983099571428	WITHOUT_CLASSIFICATION	1.6900428572750784E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999813145314153	WITHOUT_CLASSIFICATION	1.8685468584806836E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999813145314153	WITHOUT_CLASSIFICATION	1.8685468584806836E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999813145314153	WITHOUT_CLASSIFICATION	1.8685468584806836E-5	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.9999726492404626	WITHOUT_CLASSIFICATION	2.735075953739868E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999928337907874	WITHOUT_CLASSIFICATION	7.1662092125740165E-6	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999928337907874	WITHOUT_CLASSIFICATION	7.1662092125740165E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999980900619023	WITHOUT_CLASSIFICATION	1.9099380977946005E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999980900619023	WITHOUT_CLASSIFICATION	1.9099380977946005E-6	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.9999973194308824	WITHOUT_CLASSIFICATION	2.680569117497582E-6	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.9999980550541185	WITHOUT_CLASSIFICATION	1.94494588149917E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999990527699711	WITHOUT_CLASSIFICATION	9.47230028752583E-7	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.9999989274174427	WITHOUT_CLASSIFICATION	1.072582557247041E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.999876629446156	WITHOUT_CLASSIFICATION	1.2337055384395825E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999043244705031	WITHOUT_CLASSIFICATION	9.56755294967989E-5	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.9999981362753756	WITHOUT_CLASSIFICATION	1.8637246243636046E-6	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999974823163483	WITHOUT_CLASSIFICATION	2.5176836516603453E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999996619596936	WITHOUT_CLASSIFICATION	3.3804030645962546E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967820161254	WITHOUT_CLASSIFICATION	3.2179838746007997E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999971888774015	WITHOUT_CLASSIFICATION	2.811122598571676E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999997852538537	WITHOUT_CLASSIFICATION	2.1474614620633766E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998250874091	WITHOUT_CLASSIFICATION	1.749125907809105E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999999886950446	WITHOUT_CLASSIFICATION	1.130495542105436E-8	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.99957508299153	WITHOUT_CLASSIFICATION	4.249170084699371E-4	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999999902478524	WITHOUT_CLASSIFICATION	9.752147676606562E-9	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999979935303795	WITHOUT_CLASSIFICATION	2.006469620413724E-6	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.9999982722009283	WITHOUT_CLASSIFICATION	1.7277990716080556E-6	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999999659379284	WITHOUT_CLASSIFICATION	3.406207166306796E-8	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.999999923215072	WITHOUT_CLASSIFICATION	7.678492804638944E-8	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999999392089359	WITHOUT_CLASSIFICATION	6.079106412691977E-8	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999999820789318	WITHOUT_CLASSIFICATION	1.792106816955062E-8	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999998739020932	WITHOUT_CLASSIFICATION	1.260979068979078E-7	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999999022621632	WITHOUT_CLASSIFICATION	9.773783677323598E-8	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999983067774136	WITHOUT_CLASSIFICATION	1.6932225863644954E-6	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.9999997921666512	WITHOUT_CLASSIFICATION	2.0783334873629143E-7	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.9999989712665812	WITHOUT_CLASSIFICATION	1.0287334187503838E-6	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.9999988125860909	WITHOUT_CLASSIFICATION	1.187413909115641E-6	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.999999894497439	WITHOUT_CLASSIFICATION	1.0550256102815611E-7	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.9999970645186383	WITHOUT_CLASSIFICATION	2.9354813616669526E-6	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.9999817227819867	WITHOUT_CLASSIFICATION	1.8277218013295078E-5	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9999460509142568	WITHOUT_CLASSIFICATION	5.394908574319788E-5	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.9999996105581745	WITHOUT_CLASSIFICATION	3.894418254570158E-7	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.9999903329687647	WITHOUT_CLASSIFICATION	9.667031235355591E-6	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.9999982872125234	WITHOUT_CLASSIFICATION	1.7127874765681688E-6	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.9999991837051567	WITHOUT_CLASSIFICATION	8.162948432898404E-7	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.9999981763775357	WITHOUT_CLASSIFICATION	1.8236224643762753E-6	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.9999994479940656	WITHOUT_CLASSIFICATION	5.520059344196671E-7	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999992512454416	WITHOUT_CLASSIFICATION	7.487545582149445E-7	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.9999499728755978	WITHOUT_CLASSIFICATION	5.0027124402255384E-5	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.9999999200149841	WITHOUT_CLASSIFICATION	7.998501588228123E-8	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999995608727592	WITHOUT_CLASSIFICATION	4.391272408090869E-7	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9999974026974792	WITHOUT_CLASSIFICATION	2.5973025208817955E-6	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.9999981342284325	WITHOUT_CLASSIFICATION	1.8657715675447924E-6	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.9999777827127281	WITHOUT_CLASSIFICATION	2.2217287271944982E-5	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.9999878862661381	WITHOUT_CLASSIFICATION	1.2113733861939352E-5	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.9999585886890945	WITHOUT_CLASSIFICATION	4.1411310905525467E-5	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.9999993496502196	WITHOUT_CLASSIFICATION	6.503497803337261E-7	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.9999980486632523	WITHOUT_CLASSIFICATION	1.9513367478044296E-6	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.9999082192355475	WITHOUT_CLASSIFICATION	9.178076445241855E-5	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997459859664	WITHOUT_CLASSIFICATION	2.5401403358344207E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999955671982	WITHOUT_CLASSIFICATION	4.432801765315498E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999175292912	WITHOUT_CLASSIFICATION	8.247070879026922E-8	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999927959243196	WITHOUT_CLASSIFICATION	7.204075680431554E-6	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999927959243196	WITHOUT_CLASSIFICATION	7.204075680431554E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999990316488397	WITHOUT_CLASSIFICATION	9.683511602796528E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.999996468359225	WITHOUT_CLASSIFICATION	3.531640775029973E-6	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.9999979826700848	WITHOUT_CLASSIFICATION	2.0173299152970684E-6	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.9999999724700578	WITHOUT_CLASSIFICATION	2.752994226699927E-8	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.9999999961186682	WITHOUT_CLASSIFICATION	3.881331822393387E-9	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.9999538830731313	WITHOUT_CLASSIFICATION	4.611692686864199E-5	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.9999735808516264	WITHOUT_CLASSIFICATION	2.6419148373639647E-5	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.9999382275294073	WITHOUT_CLASSIFICATION	6.177247059274739E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325014085	WITHOUT_CLASSIFICATION	1.067498591567823E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999988070917	WITHOUT_CLASSIFICATION	1.192908351473995E-9	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.999876629446156	WITHOUT_CLASSIFICATION	1.2337055384395825E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999988070917	WITHOUT_CLASSIFICATION	1.192908351473995E-9	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9998737438936086	WITHOUT_CLASSIFICATION	1.2625610639138926E-4	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999999431629383	WITHOUT_CLASSIFICATION	5.6837061686981345E-8	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.9999680651810775	WITHOUT_CLASSIFICATION	3.193481892245201E-5	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.9999990130481509	WITHOUT_CLASSIFICATION	9.869518492126283E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99995718053708	WITHOUT_CLASSIFICATION	4.2819462920016445E-5	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.999996712338857	WITHOUT_CLASSIFICATION	3.2876611429299246E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999343351422	WITHOUT_CLASSIFICATION	6.566485781372304E-8	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999999221042619	WITHOUT_CLASSIFICATION	7.789573808846759E-8	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999999776556603	WITHOUT_CLASSIFICATION	2.2344339718762086E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999997921413399	WITHOUT_CLASSIFICATION	2.078586601672442E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999979935303795	WITHOUT_CLASSIFICATION	2.006469620413724E-6	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999828250412	WITHOUT_CLASSIFICATION	1.717495880715182E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999955671982	WITHOUT_CLASSIFICATION	4.432801765315498E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999175292912	WITHOUT_CLASSIFICATION	8.247070879026922E-8	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325014085	WITHOUT_CLASSIFICATION	1.067498591567823E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999998232958407	WITHOUT_CLASSIFICATION	1.7670415929301192E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99995718053708	WITHOUT_CLASSIFICATION	4.2819462920016445E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999343351422	WITHOUT_CLASSIFICATION	6.566485781372304E-8	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999999221042619	WITHOUT_CLASSIFICATION	7.789573808846759E-8	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999999776556603	WITHOUT_CLASSIFICATION	2.2344339718762086E-8	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999978007652942	WITHOUT_CLASSIFICATION	2.199234705739962E-6	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.9999999351415896	WITHOUT_CLASSIFICATION	6.485841050278044E-8	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.9999998194791639	WITHOUT_CLASSIFICATION	1.8052083604642867E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.999969943651425	WITHOUT_CLASSIFICATION	3.005634857507564E-5	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.9999998965378202	WITHOUT_CLASSIFICATION	1.0346217979759353E-7	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999883891999339	WITHOUT_CLASSIFICATION	1.1610800066071844E-5	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.9996509473597603	WITHOUT_CLASSIFICATION	3.490526402397499E-4	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999999348170558	WITHOUT_CLASSIFICATION	6.518294415633414E-8	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999043244705031	WITHOUT_CLASSIFICATION	9.56755294967989E-5	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999996619596936	WITHOUT_CLASSIFICATION	3.3804030645962546E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999996619596936	WITHOUT_CLASSIFICATION	3.3804030645962546E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999992119980058	WITHOUT_CLASSIFICATION	7.880019942996581E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967820161254	WITHOUT_CLASSIFICATION	3.2179838746007997E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999971888774015	WITHOUT_CLASSIFICATION	2.811122598571676E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999997852538537	WITHOUT_CLASSIFICATION	2.1474614620633766E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998250874091	WITHOUT_CLASSIFICATION	1.749125907809105E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997459859664	WITHOUT_CLASSIFICATION	2.5401403358344207E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999955671982	WITHOUT_CLASSIFICATION	4.432801765315498E-9	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.999996468359225	WITHOUT_CLASSIFICATION	3.531640775029973E-6	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999984773836765	WITHOUT_CLASSIFICATION	1.5226163235181102E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989188099908	WITHOUT_CLASSIFICATION	1.081190009166955E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999998374496103	WITHOUT_CLASSIFICATION	1.6255038972930023E-7	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.9999998068936957	WITHOUT_CLASSIFICATION	1.931063042936172E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999942598958	WITHOUT_CLASSIFICATION	5.740104152944393E-9	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.999998222347133	WITHOUT_CLASSIFICATION	1.7776528670310084E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999972420024429	WITHOUT_CLASSIFICATION	2.7579975570911272E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999972420024429	WITHOUT_CLASSIFICATION	2.7579975570911272E-6	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.9999899882059367	WITHOUT_CLASSIFICATION	1.0011794063314977E-5	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.9999956151630355	WITHOUT_CLASSIFICATION	4.38483696456941E-6	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999993078959266	WITHOUT_CLASSIFICATION	6.921040733739931E-7	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999947749794612	WITHOUT_CLASSIFICATION	5.225020538834211E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999992119980058	WITHOUT_CLASSIFICATION	7.880019942996581E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999997852538537	WITHOUT_CLASSIFICATION	2.1474614620633766E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998250874091	WITHOUT_CLASSIFICATION	1.749125907809105E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999999886950446	WITHOUT_CLASSIFICATION	1.130495542105436E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999979935303795	WITHOUT_CLASSIFICATION	2.006469620413724E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997459859664	WITHOUT_CLASSIFICATION	2.5401403358344207E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999955671982	WITHOUT_CLASSIFICATION	4.432801765315498E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999175292912	WITHOUT_CLASSIFICATION	8.247070879026922E-8	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999988070917	WITHOUT_CLASSIFICATION	1.192908351473995E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989188099908	WITHOUT_CLASSIFICATION	1.081190009166955E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999987139173304	WITHOUT_CLASSIFICATION	1.2860826696237483E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999987139173304	WITHOUT_CLASSIFICATION	1.2860826696237483E-6	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.9999601500286447	WITHOUT_CLASSIFICATION	3.9849971355221597E-5	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.9999995921365038	WITHOUT_CLASSIFICATION	4.0786349624201545E-7	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997457346337	WITHOUT_CLASSIFICATION	2.5426536626063504E-7	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999640535362437	WITHOUT_CLASSIFICATION	3.5946463756297346E-5	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999988666197	WITHOUT_CLASSIFICATION	1.1333803176982964E-9	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999988666197	WITHOUT_CLASSIFICATION	1.1333803176982964E-9	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999874894102	WITHOUT_CLASSIFICATION	1.2510589732458978E-8	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999999874894102	WITHOUT_CLASSIFICATION	1.2510589732458978E-8	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999961628094	WITHOUT_CLASSIFICATION	3.837190548525783E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999961628094	WITHOUT_CLASSIFICATION	3.837190548525783E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999961628094	WITHOUT_CLASSIFICATION	3.837190548525783E-9	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998691263664	WITHOUT_CLASSIFICATION	1.3087363362634736E-7	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999409501865	WITHOUT_CLASSIFICATION	5.904981347031448E-8	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999552348444	WITHOUT_CLASSIFICATION	4.476515550721639E-8	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.9999998493234181	WITHOUT_CLASSIFICATION	1.506765817455419E-7	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.9999999411799189	WITHOUT_CLASSIFICATION	5.88200810654575E-8	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.999876629446156	WITHOUT_CLASSIFICATION	1.2337055384395825E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9999043244705031	WITHOUT_CLASSIFICATION	9.56755294967989E-5	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.9999996619596936	WITHOUT_CLASSIFICATION	3.3804030645962546E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967820161254	WITHOUT_CLASSIFICATION	3.2179838746007997E-6	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999999392089359	WITHOUT_CLASSIFICATION	6.079106412691977E-8	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997459859664	WITHOUT_CLASSIFICATION	2.5401403358344207E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.999969943651425	WITHOUT_CLASSIFICATION	3.005634857507564E-5	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999947749794612	WITHOUT_CLASSIFICATION	5.225020538834211E-6	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999982824797292	WITHOUT_CLASSIFICATION	1.7175202708065076E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999759462129839	WITHOUT_CLASSIFICATION	2.4053787016090954E-5	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.9996483357877478	WITHOUT_CLASSIFICATION	3.516642122521411E-4	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9999463940350101	WITHOUT_CLASSIFICATION	5.360596499001879E-5	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.9999977923245783	WITHOUT_CLASSIFICATION	2.207675421615193E-6	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.999962304213648	WITHOUT_CLASSIFICATION	3.7695786352149856E-5	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999991618556319	WITHOUT_CLASSIFICATION	8.381443681878274E-7	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.9999949210467672	WITHOUT_CLASSIFICATION	5.078953232784526E-6	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999936601921595	WITHOUT_CLASSIFICATION	6.339807840533759E-6	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.9906361162739381	WITHOUT_CLASSIFICATION	0.009363883726061851	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.999953804520332	WITHOUT_CLASSIFICATION	4.619547966794243E-5	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.9999996871242445	WITHOUT_CLASSIFICATION	3.1287575557312694E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999994860727675	WITHOUT_CLASSIFICATION	5.139272325979988E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999997852538537	WITHOUT_CLASSIFICATION	2.1474614620633766E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998250874091	WITHOUT_CLASSIFICATION	1.749125907809105E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997459859664	WITHOUT_CLASSIFICATION	2.5401403358344207E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999955671982	WITHOUT_CLASSIFICATION	4.432801765315498E-9	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999988070917	WITHOUT_CLASSIFICATION	1.192908351473995E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989188099908	WITHOUT_CLASSIFICATION	1.081190009166955E-6	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999998374496103	WITHOUT_CLASSIFICATION	1.6255038972930023E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999942598958	WITHOUT_CLASSIFICATION	5.740104152944393E-9	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.999998222347133	WITHOUT_CLASSIFICATION	1.7776528670310084E-6	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.999999998843478	WITHOUT_CLASSIFICATION	1.1565219964386097E-9	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999886569547	WITHOUT_CLASSIFICATION	1.1343045269895095E-8	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.9999911881904071	WITHOUT_CLASSIFICATION	8.811809592931891E-6	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.9999999509120153	WITHOUT_CLASSIFICATION	4.9087984714126E-8	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.9999998940736251	WITHOUT_CLASSIFICATION	1.0592637497088617E-7	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999873387265381	WITHOUT_CLASSIFICATION	1.2661273461951301E-5	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.9997123417105162	WITHOUT_CLASSIFICATION	2.876582894839356E-4	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9999995269086602	WITHOUT_CLASSIFICATION	4.73091339728304E-7	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.9999989894413366	WITHOUT_CLASSIFICATION	1.010558663345128E-6	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.999995162526208	WITHOUT_CLASSIFICATION	4.837473791953108E-6	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.9194802327618496	WITHOUT_CLASSIFICATION	0.08051976723815041	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9998977309825775	WITHOUT_CLASSIFICATION	1.0226901742252137E-4	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9998994442125331	WITHOUT_CLASSIFICATION	1.0055578746691764E-4	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.9991840528369638	WITHOUT_CLASSIFICATION	8.159471630361813E-4	DEFECT
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.9999996977606086	WITHOUT_CLASSIFICATION	3.022393914001223E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760772087	WITHOUT_CLASSIFICATION	2.9239227914640778E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760772087	WITHOUT_CLASSIFICATION	2.9239227914640778E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999971888774015	WITHOUT_CLASSIFICATION	2.811122598571676E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999175292912	WITHOUT_CLASSIFICATION	8.247070879026922E-8	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999990316488397	WITHOUT_CLASSIFICATION	9.683511602796528E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.999996468359225	WITHOUT_CLASSIFICATION	3.531640775029973E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.999998222347133	WITHOUT_CLASSIFICATION	1.7776528670310084E-6	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.999999672740948	WITHOUT_CLASSIFICATION	3.2725905193611554E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999980283157158	WITHOUT_CLASSIFICATION	1.971684284131445E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999990816329116	WITHOUT_CLASSIFICATION	9.18367088429185E-7	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999990816329116	WITHOUT_CLASSIFICATION	9.18367088429185E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999939985573	WITHOUT_CLASSIFICATION	6.001442691688426E-9	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999939985573	WITHOUT_CLASSIFICATION	6.001442691688426E-9	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.9999985842276613	WITHOUT_CLASSIFICATION	1.4157723387025328E-6	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.9897157090910242	WITHOUT_CLASSIFICATION	0.010284290908975771	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999884865779906	WITHOUT_CLASSIFICATION	1.1513422009462457E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999991283919152	WITHOUT_CLASSIFICATION	8.716080848823349E-7	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.9999959385844249	WITHOUT_CLASSIFICATION	4.0614155751090505E-6	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.9999489472268719	WITHOUT_CLASSIFICATION	5.1052773128123525E-5	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999973011509545	WITHOUT_CLASSIFICATION	2.6988490455191404E-6	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.9999845870414781	WITHOUT_CLASSIFICATION	1.541295852196583E-5	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.999999984034077	WITHOUT_CLASSIFICATION	1.5965922996315467E-8	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.9999996783379804	WITHOUT_CLASSIFICATION	3.216620195492342E-7	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9992835669838911	WITHOUT_CLASSIFICATION	7.164330161090019E-4	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.9999997371233892	WITHOUT_CLASSIFICATION	2.628766107541186E-7	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9999933363043845	WITHOUT_CLASSIFICATION	6.663695615460251E-6	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.9999956665682614	WITHOUT_CLASSIFICATION	4.333431738560438E-6	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.9999915817655325	WITHOUT_CLASSIFICATION	8.418234467418159E-6	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999987184644276	WITHOUT_CLASSIFICATION	1.2815355725046927E-6	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999996652718135	WITHOUT_CLASSIFICATION	3.3472818657956336E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287681	WITHOUT_CLASSIFICATION	9.037123199943993E-8	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9999970961136972	WITHOUT_CLASSIFICATION	2.9038863028270814E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.999947767991234	WITHOUT_CLASSIFICATION	5.2232008765936284E-5	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.999992486088244	WITHOUT_CLASSIFICATION	7.513911755996122E-6	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.999974392720213	WITHOUT_CLASSIFICATION	2.5607279786953785E-5	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.9999960496933437	WITHOUT_CLASSIFICATION	3.950306656436981E-6	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999852682322979	WITHOUT_CLASSIFICATION	1.47317677020943E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999899020399997	WITHOUT_CLASSIFICATION	1.009796000031085E-5	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.999999933654685	WITHOUT_CLASSIFICATION	6.634531507604362E-8	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999999083582858	WITHOUT_CLASSIFICATION	9.164171421770866E-8	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999998209822621	WITHOUT_CLASSIFICATION	1.790177377315395E-7	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999974368424422	WITHOUT_CLASSIFICATION	2.563157557679942E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.99995423984734	WITHOUT_CLASSIFICATION	4.576015266011681E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999989119820119	WITHOUT_CLASSIFICATION	1.0880179881177111E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999987694518165	WITHOUT_CLASSIFICATION	1.2305481835130806E-6	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.9999988757346124	WITHOUT_CLASSIFICATION	1.1242653874917108E-6	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.9999970127946998	WITHOUT_CLASSIFICATION	2.987205300213273E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999759132207163	WITHOUT_CLASSIFICATION	2.4086779283695244E-5	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999998685576408	WITHOUT_CLASSIFICATION	1.314423591675195E-7	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999998205460965	WITHOUT_CLASSIFICATION	1.794539034718439E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999997306096696	WITHOUT_CLASSIFICATION	2.69390330423665E-7	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999996675396849	WITHOUT_CLASSIFICATION	3.324603150461443E-7	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.9999942014831597	WITHOUT_CLASSIFICATION	5.79851684038267E-6	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.9999997736586097	WITHOUT_CLASSIFICATION	2.2634139026706122E-7	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.9999990798072301	WITHOUT_CLASSIFICATION	9.201927698277789E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287681	WITHOUT_CLASSIFICATION	9.037123199943993E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999175292912	WITHOUT_CLASSIFICATION	8.247070879026922E-8	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999990316488397	WITHOUT_CLASSIFICATION	9.683511602796528E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.999996468359225	WITHOUT_CLASSIFICATION	3.531640775029973E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999980283157158	WITHOUT_CLASSIFICATION	1.971684284131445E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.999998222347133	WITHOUT_CLASSIFICATION	1.7776528670310084E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760772087	WITHOUT_CLASSIFICATION	2.9239227914640778E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760772087	WITHOUT_CLASSIFICATION	2.9239227914640778E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999965254530203	WITHOUT_CLASSIFICATION	3.474546979712142E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999990816329116	WITHOUT_CLASSIFICATION	9.18367088429185E-7	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999397580460724	WITHOUT_CLASSIFICATION	6.024195392767115E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999939985573	WITHOUT_CLASSIFICATION	6.001442691688426E-9	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999989119820119	WITHOUT_CLASSIFICATION	1.0880179881177111E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999987694518165	WITHOUT_CLASSIFICATION	1.2305481835130806E-6	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999994087752629	WITHOUT_CLASSIFICATION	5.912247370650858E-7	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999948503665871	WITHOUT_CLASSIFICATION	5.149633412896477E-6	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.9999998776277812	WITHOUT_CLASSIFICATION	1.223722187649989E-7	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.9999998947513405	WITHOUT_CLASSIFICATION	1.0524865946408917E-7	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999827674180594	WITHOUT_CLASSIFICATION	1.723258194059977E-5	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.9999807307530016	WITHOUT_CLASSIFICATION	1.9269246998377353E-5	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9999186048053748	WITHOUT_CLASSIFICATION	8.139519462525198E-5	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.999990657111072	WITHOUT_CLASSIFICATION	9.342888927875571E-6	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.999965897097782	WITHOUT_CLASSIFICATION	3.4102902217810925E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999979179691106	WITHOUT_CLASSIFICATION	2.0820308892817328E-6	DEFECT
// square	WITHOUT_CLASSIFICATION	0.9999998992980664	WITHOUT_CLASSIFICATION	1.0070193355251736E-7	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.9999990870288283	WITHOUT_CLASSIFICATION	9.129711715757535E-7	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.9999998961192792	WITHOUT_CLASSIFICATION	1.0388072075964208E-7	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.9999606739428989	WITHOUT_CLASSIFICATION	3.9326057101133245E-5	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.9999983639565578	WITHOUT_CLASSIFICATION	1.6360434421118961E-6	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.9999980782998765	WITHOUT_CLASSIFICATION	1.9217001234559967E-6	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.999999987022851	WITHOUT_CLASSIFICATION	1.2977148917163025E-8	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999996759606099	WITHOUT_CLASSIFICATION	3.240393900374099E-7	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.9999988500221894	WITHOUT_CLASSIFICATION	1.1499778105642198E-6	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.9999995618395721	WITHOUT_CLASSIFICATION	4.381604279883698E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287681	WITHOUT_CLASSIFICATION	9.037123199943993E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999979935303795	WITHOUT_CLASSIFICATION	2.006469620413724E-6	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999828250412	WITHOUT_CLASSIFICATION	1.717495880715182E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999955671982	WITHOUT_CLASSIFICATION	4.432801765315498E-9	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999942598958	WITHOUT_CLASSIFICATION	5.740104152944393E-9	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999999547632325	WITHOUT_CLASSIFICATION	4.523676749925406E-7	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.9999978345112496	WITHOUT_CLASSIFICATION	2.165488750484011E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999850895681	WITHOUT_CLASSIFICATION	1.491043188065462E-8	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999999547632325	WITHOUT_CLASSIFICATION	4.523676749925406E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999999547632325	WITHOUT_CLASSIFICATION	4.523676749925406E-7	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989661489176	WITHOUT_CLASSIFICATION	1.0338510824069656E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999850895681	WITHOUT_CLASSIFICATION	1.491043188065462E-8	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999850895681	WITHOUT_CLASSIFICATION	1.491043188065462E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287681	WITHOUT_CLASSIFICATION	9.037123199943993E-8	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.9999999002296214	WITHOUT_CLASSIFICATION	9.977037864702739E-8	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9999995332524796	WITHOUT_CLASSIFICATION	4.6674752038356105E-7	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.9999999569690056	WITHOUT_CLASSIFICATION	4.3030994434975666E-8	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.9999999851334843	WITHOUT_CLASSIFICATION	1.4866515733402975E-8	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.9999982083753829	WITHOUT_CLASSIFICATION	1.7916246170717924E-6	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.9999985842622873	WITHOUT_CLASSIFICATION	1.415737712643427E-6	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.9999948449940488	WITHOUT_CLASSIFICATION	5.155005951237046E-6	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.9999914258099559	WITHOUT_CLASSIFICATION	8.574190044122398E-6	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.9999585641566722	WITHOUT_CLASSIFICATION	4.143584332772816E-5	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.99999992441322	WITHOUT_CLASSIFICATION	7.558677989469969E-8	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.9984370188772355	WITHOUT_CLASSIFICATION	0.0015629811227645329	DEFECT
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.9999953782518806	WITHOUT_CLASSIFICATION	4.6217481193978055E-6	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.9999992069824868	WITHOUT_CLASSIFICATION	7.93017513243586E-7	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9999544866519142	WITHOUT_CLASSIFICATION	4.551334808584036E-5	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999998146570448	WITHOUT_CLASSIFICATION	1.8534295534731918E-7	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.9999988102314951	WITHOUT_CLASSIFICATION	1.1897685049820376E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287681	WITHOUT_CLASSIFICATION	9.037123199943993E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999979935303795	WITHOUT_CLASSIFICATION	2.006469620413724E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999175292912	WITHOUT_CLASSIFICATION	8.247070879026922E-8	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999927959243196	WITHOUT_CLASSIFICATION	7.204075680431554E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999990316488397	WITHOUT_CLASSIFICATION	9.683511602796528E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.999996468359225	WITHOUT_CLASSIFICATION	3.531640775029973E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999980283157158	WITHOUT_CLASSIFICATION	1.971684284131445E-6	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999978007652942	WITHOUT_CLASSIFICATION	2.199234705739962E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.999969943651425	WITHOUT_CLASSIFICATION	3.005634857507564E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.999998222347133	WITHOUT_CLASSIFICATION	1.7776528670310084E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760772087	WITHOUT_CLASSIFICATION	2.9239227914640778E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760772087	WITHOUT_CLASSIFICATION	2.9239227914640778E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999970760772087	WITHOUT_CLASSIFICATION	2.9239227914640778E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999990816329116	WITHOUT_CLASSIFICATION	9.18367088429185E-7	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999990816329116	WITHOUT_CLASSIFICATION	9.18367088429185E-7	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999397580460724	WITHOUT_CLASSIFICATION	6.024195392767115E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999991283919152	WITHOUT_CLASSIFICATION	8.716080848823349E-7	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999973011509545	WITHOUT_CLASSIFICATION	2.6988490455191404E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999827674180594	WITHOUT_CLASSIFICATION	1.723258194059977E-5	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999999313274099	WITHOUT_CLASSIFICATION	6.867259011618209E-8	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.9998131044610753	WITHOUT_CLASSIFICATION	1.868955389247658E-4	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.9999991659130866	WITHOUT_CLASSIFICATION	8.340869134895937E-7	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.9999988506430578	WITHOUT_CLASSIFICATION	1.1493569420784446E-6	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.999998455074903	WITHOUT_CLASSIFICATION	1.5449250970511133E-6	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.9999907603171466	WITHOUT_CLASSIFICATION	9.239682853442008E-6	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.9999998069891088	WITHOUT_CLASSIFICATION	1.9301089125283148E-7	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.9999999522442646	WITHOUT_CLASSIFICATION	4.775573546626452E-8	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.9999999071757883	WITHOUT_CLASSIFICATION	9.282421166405826E-8	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.9999999099803247	WITHOUT_CLASSIFICATION	9.001967522657232E-8	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.9999998209814358	WITHOUT_CLASSIFICATION	1.7901856419831262E-7	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.9999999957574636	WITHOUT_CLASSIFICATION	4.242536426725724E-9	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9999526304731708	WITHOUT_CLASSIFICATION	4.7369526829159236E-5	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.9999999876924278	WITHOUT_CLASSIFICATION	1.2307572277455576E-8	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.9999983837481948	WITHOUT_CLASSIFICATION	1.6162518051781472E-6	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.9999955260500892	WITHOUT_CLASSIFICATION	4.473949910793757E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999939985573	WITHOUT_CLASSIFICATION	6.001442691688426E-9	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999939985573	WITHOUT_CLASSIFICATION	6.001442691688426E-9	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.999992486088244	WITHOUT_CLASSIFICATION	7.513911755996122E-6	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.999974392720213	WITHOUT_CLASSIFICATION	2.5607279786953785E-5	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999852682322979	WITHOUT_CLASSIFICATION	1.47317677020943E-5	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999899020399997	WITHOUT_CLASSIFICATION	1.009796000031085E-5	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.999999933654685	WITHOUT_CLASSIFICATION	6.634531507604362E-8	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999999083582858	WITHOUT_CLASSIFICATION	9.164171421770866E-8	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.9999998209822621	WITHOUT_CLASSIFICATION	1.790177377315395E-7	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999974368424422	WITHOUT_CLASSIFICATION	2.563157557679942E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.99995423984734	WITHOUT_CLASSIFICATION	4.576015266011681E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999989119820119	WITHOUT_CLASSIFICATION	1.0880179881177111E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999989119820119	WITHOUT_CLASSIFICATION	1.0880179881177111E-6	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.999990657111072	WITHOUT_CLASSIFICATION	9.342888927875571E-6	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.9999779752827199	WITHOUT_CLASSIFICATION	2.2024717280101103E-5	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.9999774679769121	WITHOUT_CLASSIFICATION	2.253202308787099E-5	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.9999991744113742	WITHOUT_CLASSIFICATION	8.255886257529406E-7	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.9999926664871038	WITHOUT_CLASSIFICATION	7.333512896050891E-6	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.9999995133017562	WITHOUT_CLASSIFICATION	4.866982437842966E-7	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.9999969546028102	WITHOUT_CLASSIFICATION	3.0453971896470162E-6	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.9999994897931076	WITHOUT_CLASSIFICATION	5.102068924622587E-7	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.9999988247247998	WITHOUT_CLASSIFICATION	1.1752752002259272E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999991698113239	WITHOUT_CLASSIFICATION	8.301886760053793E-7	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.9991064151046818	WITHOUT_CLASSIFICATION	8.935848953182415E-4	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999999014514371	WITHOUT_CLASSIFICATION	9.854856282549638E-8	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.9999974520914545	WITHOUT_CLASSIFICATION	2.5479085454902823E-6	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.9999935528361289	WITHOUT_CLASSIFICATION	6.447163871119136E-6	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.9999991275227803	WITHOUT_CLASSIFICATION	8.724772198067146E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999992119980058	WITHOUT_CLASSIFICATION	7.880019942996581E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999967820161254	WITHOUT_CLASSIFICATION	3.2179838746007997E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999965254530203	WITHOUT_CLASSIFICATION	3.474546979712142E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999965254530203	WITHOUT_CLASSIFICATION	3.474546979712142E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999987694518165	WITHOUT_CLASSIFICATION	1.2305481835130806E-6	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999998685576408	WITHOUT_CLASSIFICATION	1.314423591675195E-7	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999998685576408	WITHOUT_CLASSIFICATION	1.314423591675195E-7	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999998205460965	WITHOUT_CLASSIFICATION	1.794539034718439E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999997306096696	WITHOUT_CLASSIFICATION	2.69390330423665E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999997306096696	WITHOUT_CLASSIFICATION	2.69390330423665E-7	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999827674180594	WITHOUT_CLASSIFICATION	1.723258194059977E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999979179691106	WITHOUT_CLASSIFICATION	2.0820308892817328E-6	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999989768651323	WITHOUT_CLASSIFICATION	1.0231348676894289E-6	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9993313479811389	WITHOUT_CLASSIFICATION	6.686520188610608E-4	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9993313479811389	WITHOUT_CLASSIFICATION	6.686520188610608E-4	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.9999998755156877	WITHOUT_CLASSIFICATION	1.2448431233781962E-7	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.9999999181158498	WITHOUT_CLASSIFICATION	8.188415025094425E-8	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.9999600159567956	WITHOUT_CLASSIFICATION	3.9984043204396185E-5	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.9999931939537695	WITHOUT_CLASSIFICATION	6.806046230441139E-6	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.9999975643348208	WITHOUT_CLASSIFICATION	2.435665179153411E-6	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.9999979703272817	WITHOUT_CLASSIFICATION	2.0296727182879422E-6	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.9999999081659572	WITHOUT_CLASSIFICATION	9.183404281347215E-8	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.9999991513104362	WITHOUT_CLASSIFICATION	8.4868956384636E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999979935303795	WITHOUT_CLASSIFICATION	2.006469620413724E-6	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999955671982	WITHOUT_CLASSIFICATION	4.432801765315498E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999175292912	WITHOUT_CLASSIFICATION	8.247070879026922E-8	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999978007652942	WITHOUT_CLASSIFICATION	2.199234705739962E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999883891999339	WITHOUT_CLASSIFICATION	1.1610800066071844E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999950968125721	WITHOUT_CLASSIFICATION	4.903187427887817E-6	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.9917144601760561	WITHOUT_CLASSIFICATION	0.008285539823943906	DEFECT
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.9999838612270708	WITHOUT_CLASSIFICATION	1.613877292920478E-5	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999995774010968	WITHOUT_CLASSIFICATION	4.2259890330481347E-7	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999955143242186	WITHOUT_CLASSIFICATION	4.485675781423335E-6	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.9999962978770827	WITHOUT_CLASSIFICATION	3.702122917314572E-6	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.9999999423774444	WITHOUT_CLASSIFICATION	5.762255554190369E-8	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.9999957851688268	WITHOUT_CLASSIFICATION	4.214831173215905E-6	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.9999999819436205	WITHOUT_CLASSIFICATION	1.8056379535349203E-8	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.9999999788372903	WITHOUT_CLASSIFICATION	2.1162709692034268E-8	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.9999999370417255	WITHOUT_CLASSIFICATION	6.295827441235373E-8	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.9999988407015612	WITHOUT_CLASSIFICATION	1.1592984387363887E-6	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.9999992896561432	WITHOUT_CLASSIFICATION	7.103438569468902E-7	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.999999326807386	WITHOUT_CLASSIFICATION	6.731926140757098E-7	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.999999515853243	WITHOUT_CLASSIFICATION	4.841467570492592E-7	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.999999818659974	WITHOUT_CLASSIFICATION	1.8134002597511393E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999995873542915	WITHOUT_CLASSIFICATION	4.126457084624808E-7	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999950277182473	WITHOUT_CLASSIFICATION	4.972281752687993E-6	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.9999998954138751	WITHOUT_CLASSIFICATION	1.0458612492305145E-7	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.9999995423778044	WITHOUT_CLASSIFICATION	4.57622195679742E-7	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.9999998157474103	WITHOUT_CLASSIFICATION	1.8425258963087614E-7	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.999999841302939	WITHOUT_CLASSIFICATION	1.5869706110127893E-7	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.9999999082014075	WITHOUT_CLASSIFICATION	9.179859256317322E-8	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9999974939610388	WITHOUT_CLASSIFICATION	2.506038961238332E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999999175292912	WITHOUT_CLASSIFICATION	8.247070879026922E-8	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325014085	WITHOUT_CLASSIFICATION	1.067498591567823E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999999547632325	WITHOUT_CLASSIFICATION	4.523676749925406E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999999547632325	WITHOUT_CLASSIFICATION	4.523676749925406E-7	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999850895681	WITHOUT_CLASSIFICATION	1.491043188065462E-8	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999950277182473	WITHOUT_CLASSIFICATION	4.972281752687993E-6	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.9999993445515807	WITHOUT_CLASSIFICATION	6.554484193291073E-7	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.9999999127381822	WITHOUT_CLASSIFICATION	8.72618177306542E-8	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.9999966942726125	WITHOUT_CLASSIFICATION	3.305727387473851E-6	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.999999927712184	WITHOUT_CLASSIFICATION	7.22878159318166E-8	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9999976408647189	WITHOUT_CLASSIFICATION	2.359135281164516E-6	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.9999999486862045	WITHOUT_CLASSIFICATION	5.13137955925824E-8	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999940093566692	WITHOUT_CLASSIFICATION	5.990643330878735E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999958300993183	WITHOUT_CLASSIFICATION	4.169900681747939E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999998898499618	WITHOUT_CLASSIFICATION	1.1015003817299754E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999965764475568	WITHOUT_CLASSIFICATION	3.4235524430714804E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999983405737168	WITHOUT_CLASSIFICATION	1.6594262830571503E-6	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9999999577091329	WITHOUT_CLASSIFICATION	4.229086717403325E-8	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999999103352119	WITHOUT_CLASSIFICATION	8.966478819288772E-8	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.999999752371928	WITHOUT_CLASSIFICATION	2.4762807206558565E-7	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.9999999816717814	WITHOUT_CLASSIFICATION	1.8328218569052828E-8	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999998990468553	WITHOUT_CLASSIFICATION	1.0095314476432906E-7	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.999977095154805	WITHOUT_CLASSIFICATION	2.2904845195015893E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999885085716984	WITHOUT_CLASSIFICATION	1.149142830163248E-5	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999970260741202	WITHOUT_CLASSIFICATION	2.973925879799818E-6	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999925629886117	WITHOUT_CLASSIFICATION	7.43701138817075E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999956011116	WITHOUT_CLASSIFICATION	4.398888285291302E-9	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999999547632325	WITHOUT_CLASSIFICATION	4.523676749925406E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999999547632325	WITHOUT_CLASSIFICATION	4.523676749925406E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999999547632325	WITHOUT_CLASSIFICATION	4.523676749925406E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999999547632325	WITHOUT_CLASSIFICATION	4.523676749925406E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999999547632325	WITHOUT_CLASSIFICATION	4.523676749925406E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.999999547632325	WITHOUT_CLASSIFICATION	4.523676749925406E-7	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999983942269056	WITHOUT_CLASSIFICATION	1.605773094411673E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999956011116	WITHOUT_CLASSIFICATION	4.398888285291302E-9	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999956011116	WITHOUT_CLASSIFICATION	4.398888285291302E-9	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996105272495	WITHOUT_CLASSIFICATION	3.894727505074341E-7	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.999998616841913	WITHOUT_CLASSIFICATION	1.3831580870427343E-6	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999998249266946	WITHOUT_CLASSIFICATION	1.7507330549689562E-7	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.9999998093725441	WITHOUT_CLASSIFICATION	1.906274559899598E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999950713386409	WITHOUT_CLASSIFICATION	4.9286613592036835E-6	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.9999999818332949	WITHOUT_CLASSIFICATION	1.8166705192721908E-8	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.9999239735246312	WITHOUT_CLASSIFICATION	7.602647536873195E-5	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.9999999908788249	WITHOUT_CLASSIFICATION	9.121175110803373E-9	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.9999995825280019	WITHOUT_CLASSIFICATION	4.1747199813545077E-7	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999983519655019	WITHOUT_CLASSIFICATION	1.6480344980751834E-6	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996213855217	WITHOUT_CLASSIFICATION	3.786144783106635E-6	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999388422649609	WITHOUT_CLASSIFICATION	6.115773503912798E-5	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.9999999118823552	WITHOUT_CLASSIFICATION	8.811764478891279E-8	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999705174632744	WITHOUT_CLASSIFICATION	2.948253672561053E-5	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.999999828106009	WITHOUT_CLASSIFICATION	1.7189399104407402E-7	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.9891505545156877	WITHOUT_CLASSIFICATION	0.010849445484312414	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999667789857	WITHOUT_CLASSIFICATION	3.3221014296474847E-7	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998910142595	WITHOUT_CLASSIFICATION	1.0898574043308427E-7	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999993175080215	WITHOUT_CLASSIFICATION	6.824919783765485E-7	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998484431917	WITHOUT_CLASSIFICATION	1.515568084018189E-7	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999934379587178	WITHOUT_CLASSIFICATION	6.562041282245585E-6	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999885357930699	WITHOUT_CLASSIFICATION	1.1464206930092928E-5	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999983942269056	WITHOUT_CLASSIFICATION	1.605773094411673E-6	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998910142595	WITHOUT_CLASSIFICATION	1.0898574043308427E-7	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.9999999740312068	WITHOUT_CLASSIFICATION	2.5968793320691418E-8	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999417322311328	WITHOUT_CLASSIFICATION	5.82677688671925E-5	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999870602542115	WITHOUT_CLASSIFICATION	1.293974578851824E-5	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996846029878	WITHOUT_CLASSIFICATION	3.1539701217236876E-7	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999860960545	WITHOUT_CLASSIFICATION	1.3903945494833836E-7	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999969562043	WITHOUT_CLASSIFICATION	3.043795703854608E-8	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999179403727	WITHOUT_CLASSIFICATION	8.205962728598996E-8	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999982035838	WITHOUT_CLASSIFICATION	1.7964162040869465E-8	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999677793813	WITHOUT_CLASSIFICATION	3.222061881398177E-8	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999941393551	WITHOUT_CLASSIFICATION	5.860644890103187E-8	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998524363919	WITHOUT_CLASSIFICATION	1.475636081468693E-7	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999808515868	WITHOUT_CLASSIFICATION	1.914841318397048E-8	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.9997474234839132	WITHOUT_CLASSIFICATION	2.525765160867425E-4	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.999999420444037	WITHOUT_CLASSIFICATION	5.795559629254116E-7	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.9998942475746774	WITHOUT_CLASSIFICATION	1.0575242532260502E-4	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.9999999967194849	WITHOUT_CLASSIFICATION	3.280514978793075E-9	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999942473646753	WITHOUT_CLASSIFICATION	5.7526353246261196E-6	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999973268965343	WITHOUT_CLASSIFICATION	2.673103465671607E-6	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.9999998353680386	WITHOUT_CLASSIFICATION	1.6463196145981957E-7	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.9999999406205863	WITHOUT_CLASSIFICATION	5.937941357145761E-8	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.9999999447080875	WITHOUT_CLASSIFICATION	5.529191241576699E-8	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.9999997452288337	WITHOUT_CLASSIFICATION	2.5477116626741115E-7	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.99996061404108	WITHOUT_CLASSIFICATION	3.93859589200593E-5	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.99996061404108	WITHOUT_CLASSIFICATION	3.93859589200593E-5	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.99999998577442	WITHOUT_CLASSIFICATION	1.4225579912303132E-8	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.99999998577442	WITHOUT_CLASSIFICATION	1.4225579912303132E-8	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.9999400249808956	WITHOUT_CLASSIFICATION	5.9975019104410295E-5	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.9999684195384595	WITHOUT_CLASSIFICATION	3.158046154062686E-5	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.999997803210731	WITHOUT_CLASSIFICATION	2.1967892689922185E-6	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.9999995447891346	WITHOUT_CLASSIFICATION	4.5521086537609483E-7	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9999252031383741	WITHOUT_CLASSIFICATION	7.47968616259172E-5	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.9999847125975568	WITHOUT_CLASSIFICATION	1.5287402443163604E-5	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.9999996807165971	WITHOUT_CLASSIFICATION	3.192834029363298E-7	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.9999999480847904	WITHOUT_CLASSIFICATION	5.191520948632143E-8	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999923270773	WITHOUT_CLASSIFICATION	7.672922767035842E-9	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.9118268333491828	DEFECT	0.08817316665081713	WITHOUT_CLASSIFICATION
// handle positive value	WITHOUT_CLASSIFICATION	0.9999997717950595	WITHOUT_CLASSIFICATION	2.2820494051089326E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999997929977374	WITHOUT_CLASSIFICATION	2.070022625557085E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999997929977374	WITHOUT_CLASSIFICATION	2.070022625557085E-7	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999974593389023	WITHOUT_CLASSIFICATION	2.540661097750864E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999974593389023	WITHOUT_CLASSIFICATION	2.540661097750864E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999997606676967	WITHOUT_CLASSIFICATION	2.393323032226825E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999976306392359	WITHOUT_CLASSIFICATION	2.36936076415108E-6	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.9999997972294404	WITHOUT_CLASSIFICATION	2.027705594257684E-7	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.999995363335562	WITHOUT_CLASSIFICATION	4.63666443786531E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999997171870176	WITHOUT_CLASSIFICATION	2.82812982296286E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351830798	WITHOUT_CLASSIFICATION	6.64816920281586E-7	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999930377398798	WITHOUT_CLASSIFICATION	6.962260120092444E-6	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999802781085063	WITHOUT_CLASSIFICATION	1.9721891493579838E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999956011116	WITHOUT_CLASSIFICATION	4.398888285291302E-9	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.999995323130379	WITHOUT_CLASSIFICATION	4.6768696210468315E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999997171870176	WITHOUT_CLASSIFICATION	2.82812982296286E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351830798	WITHOUT_CLASSIFICATION	6.64816920281586E-7	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999967515450852	WITHOUT_CLASSIFICATION	3.2484549149448615E-6	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.9999999030865929	WITHOUT_CLASSIFICATION	9.691340706781782E-8	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.9999996185118184	WITHOUT_CLASSIFICATION	3.814881816171206E-7	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999802781085063	WITHOUT_CLASSIFICATION	1.9721891493579838E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999999658271088	WITHOUT_CLASSIFICATION	3.417289119800521E-8	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.9999998140813675	WITHOUT_CLASSIFICATION	1.8591863242111744E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559721176	WITHOUT_CLASSIFICATION	1.3044027882471948E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559721176	WITHOUT_CLASSIFICATION	1.3044027882471948E-5	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.9999995471683334	WITHOUT_CLASSIFICATION	4.5283166663866625E-7	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9997197829540883	WITHOUT_CLASSIFICATION	2.802170459118116E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999560665381111	WITHOUT_CLASSIFICATION	4.393346188884846E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999560665381111	WITHOUT_CLASSIFICATION	4.393346188884846E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999978163585412	WITHOUT_CLASSIFICATION	2.1836414586605358E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.999999513610938	WITHOUT_CLASSIFICATION	4.863890621110528E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999982828731266	WITHOUT_CLASSIFICATION	1.7171268733353378E-6	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.9999999935872441	WITHOUT_CLASSIFICATION	6.4127559386921135E-9	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999362670942693	WITHOUT_CLASSIFICATION	6.373290573067216E-5	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9999354008862937	WITHOUT_CLASSIFICATION	6.459911370619842E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999990951116337	WITHOUT_CLASSIFICATION	9.04888366366625E-7	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999343351422	WITHOUT_CLASSIFICATION	6.566485781372304E-8	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.999999420444037	WITHOUT_CLASSIFICATION	5.795559629254116E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351830798	WITHOUT_CLASSIFICATION	6.64816920281586E-7	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999921229198964	WITHOUT_CLASSIFICATION	7.877080103651826E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999977489336442	WITHOUT_CLASSIFICATION	2.2510663558394918E-6	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.9999946058029386	WITHOUT_CLASSIFICATION	5.394197061367802E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999475031356433	WITHOUT_CLASSIFICATION	5.249686435669532E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999899539843109	WITHOUT_CLASSIFICATION	1.0046015689131504E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999904913122863	WITHOUT_CLASSIFICATION	9.508687713759225E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999988022158985	WITHOUT_CLASSIFICATION	1.1977841015259908E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999988022158985	WITHOUT_CLASSIFICATION	1.1977841015259908E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999956099775	WITHOUT_CLASSIFICATION	4.390022373257251E-9	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999956099775	WITHOUT_CLASSIFICATION	4.390022373257251E-9	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999802062572086	WITHOUT_CLASSIFICATION	1.9793742791419632E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999954899343655	WITHOUT_CLASSIFICATION	4.510065634498521E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999992431725337	WITHOUT_CLASSIFICATION	7.568274662674971E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999020796498	WITHOUT_CLASSIFICATION	9.792035017954812E-8	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999998443308019	WITHOUT_CLASSIFICATION	1.5566919801544045E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999993717191419	WITHOUT_CLASSIFICATION	6.282808580663632E-7	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999816458721835	WITHOUT_CLASSIFICATION	1.835412781651771E-5	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.9999998558792245	WITHOUT_CLASSIFICATION	1.4412077562198342E-7	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999283224724461	WITHOUT_CLASSIFICATION	7.167752755393937E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9996011026406385	WITHOUT_CLASSIFICATION	3.988973593615302E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999985819066968	WITHOUT_CLASSIFICATION	1.4180933032483306E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9993026061864579	WITHOUT_CLASSIFICATION	6.97393813542071E-4	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999283224724461	WITHOUT_CLASSIFICATION	7.167752755393937E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9996011026406385	WITHOUT_CLASSIFICATION	3.988973593615302E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999985819066968	WITHOUT_CLASSIFICATION	1.4180933032483306E-6	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.9999955331490821	WITHOUT_CLASSIFICATION	4.466850917944847E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329532462	WITHOUT_CLASSIFICATION	2.2367046753940998E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329532462	WITHOUT_CLASSIFICATION	2.2367046753940998E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999921229198964	WITHOUT_CLASSIFICATION	7.877080103651826E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999921229198964	WITHOUT_CLASSIFICATION	7.877080103651826E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999977640583607	WITHOUT_CLASSIFICATION	2.235941639215218E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999977640583607	WITHOUT_CLASSIFICATION	2.235941639215218E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999993210446763	WITHOUT_CLASSIFICATION	6.789553236960306E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999993210446763	WITHOUT_CLASSIFICATION	6.789553236960306E-6	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999998487065829	WITHOUT_CLASSIFICATION	1.512934172184974E-7	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999998487065829	WITHOUT_CLASSIFICATION	1.512934172184974E-7	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999595989013	WITHOUT_CLASSIFICATION	4.040109867942279E-8	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9999985692165664	WITHOUT_CLASSIFICATION	1.4307834335777708E-6	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.9999984661477826	WITHOUT_CLASSIFICATION	1.5338522172880196E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999982828731266	WITHOUT_CLASSIFICATION	1.7171268733353378E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999982828731266	WITHOUT_CLASSIFICATION	1.7171268733353378E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999899539843109	WITHOUT_CLASSIFICATION	1.0046015689131504E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999985819066968	WITHOUT_CLASSIFICATION	1.4180933032483306E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329532462	WITHOUT_CLASSIFICATION	2.2367046753940998E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329532462	WITHOUT_CLASSIFICATION	2.2367046753940998E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999921229198964	WITHOUT_CLASSIFICATION	7.877080103651826E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999977640583607	WITHOUT_CLASSIFICATION	2.235941639215218E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999993210446763	WITHOUT_CLASSIFICATION	6.789553236960306E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999998799332632	WITHOUT_CLASSIFICATION	1.2006673680399307E-7	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999970561800071	WITHOUT_CLASSIFICATION	2.9438199929061124E-6	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.9999306307508705	WITHOUT_CLASSIFICATION	6.936924912945352E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575185112273	WITHOUT_CLASSIFICATION	4.248148877273972E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999970134501212	WITHOUT_CLASSIFICATION	2.986549878784037E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999968924841961	WITHOUT_CLASSIFICATION	3.107515803792417E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997554517453489	WITHOUT_CLASSIFICATION	2.4454825465112606E-4	DEFECT
// X	WITHOUT_CLASSIFICATION	0.9999089107573265	WITHOUT_CLASSIFICATION	9.108924267360884E-5	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.9999962655679063	WITHOUT_CLASSIFICATION	3.734432093629034E-6	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.9999287351991486	WITHOUT_CLASSIFICATION	7.126480085140898E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999976306392359	WITHOUT_CLASSIFICATION	2.36936076415108E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999899539843109	WITHOUT_CLASSIFICATION	1.0046015689131504E-5	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999283224724461	WITHOUT_CLASSIFICATION	7.167752755393937E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9996011026406385	WITHOUT_CLASSIFICATION	3.988973593615302E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999985819066968	WITHOUT_CLASSIFICATION	1.4180933032483306E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329532462	WITHOUT_CLASSIFICATION	2.2367046753940998E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999977640583607	WITHOUT_CLASSIFICATION	2.235941639215218E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999993210446763	WITHOUT_CLASSIFICATION	6.789553236960306E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999993210446763	WITHOUT_CLASSIFICATION	6.789553236960306E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575185112273	WITHOUT_CLASSIFICATION	4.248148877273972E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575185112273	WITHOUT_CLASSIFICATION	4.248148877273972E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997554517453489	WITHOUT_CLASSIFICATION	2.4454825465112606E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997554517453489	WITHOUT_CLASSIFICATION	2.4454825465112606E-4	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999993893035888	WITHOUT_CLASSIFICATION	6.10696411303703E-7	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999908319335816	WITHOUT_CLASSIFICATION	9.16806641846209E-6	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999747705635247	WITHOUT_CLASSIFICATION	2.522943647530302E-5	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999998129856491	WITHOUT_CLASSIFICATION	1.8701435102823279E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.999992760128847	WITHOUT_CLASSIFICATION	7.23987115309891E-6	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999815970735378	WITHOUT_CLASSIFICATION	1.8402926462112107E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999991698113239	WITHOUT_CLASSIFICATION	8.301886760053793E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999976306392359	WITHOUT_CLASSIFICATION	2.36936076415108E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351830798	WITHOUT_CLASSIFICATION	6.64816920281586E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351830798	WITHOUT_CLASSIFICATION	6.64816920281586E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999982828731266	WITHOUT_CLASSIFICATION	1.7171268733353378E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999982828731266	WITHOUT_CLASSIFICATION	1.7171268733353378E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999475031356433	WITHOUT_CLASSIFICATION	5.249686435669532E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999899539843109	WITHOUT_CLASSIFICATION	1.0046015689131504E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999816458721835	WITHOUT_CLASSIFICATION	1.835412781651771E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999816458721835	WITHOUT_CLASSIFICATION	1.835412781651771E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999816458721835	WITHOUT_CLASSIFICATION	1.835412781651771E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329532462	WITHOUT_CLASSIFICATION	2.2367046753940998E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999776329532462	WITHOUT_CLASSIFICATION	2.2367046753940998E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997554517453489	WITHOUT_CLASSIFICATION	2.4454825465112606E-4	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999908319335816	WITHOUT_CLASSIFICATION	9.16806641846209E-6	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999747705635247	WITHOUT_CLASSIFICATION	2.522943647530302E-5	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.999999992025205	WITHOUT_CLASSIFICATION	7.974794982337218E-9	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.9999735129843061	WITHOUT_CLASSIFICATION	2.648701569387256E-5	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.9999991034563672	WITHOUT_CLASSIFICATION	8.965436327539565E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9998860540661189	WITHOUT_CLASSIFICATION	1.1394593388117249E-4	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9019435062576641	WITHOUT_CLASSIFICATION	0.09805649374233594	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999993351830798	WITHOUT_CLASSIFICATION	6.64816920281586E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559721176	WITHOUT_CLASSIFICATION	1.3044027882471948E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999560665381111	WITHOUT_CLASSIFICATION	4.393346188884846E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999560665381111	WITHOUT_CLASSIFICATION	4.393346188884846E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999978163585412	WITHOUT_CLASSIFICATION	2.1836414586605358E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999908319335816	WITHOUT_CLASSIFICATION	9.16806641846209E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.999999537341516	WITHOUT_CLASSIFICATION	4.6265848398173855E-7	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.9999842746157087	WITHOUT_CLASSIFICATION	1.5725384291263527E-5	DEFECT
// switch x and y	WITHOUT_CLASSIFICATION	0.9999993423281615	WITHOUT_CLASSIFICATION	6.57671838606889E-7	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.9999694989365094	WITHOUT_CLASSIFICATION	3.0501063490648497E-5	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.9999626136091506	WITHOUT_CLASSIFICATION	3.738639084937797E-5	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.9999980766112795	WITHOUT_CLASSIFICATION	1.923388720611056E-6	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.9999991884877	WITHOUT_CLASSIFICATION	8.115123000460711E-7	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.999996823709667	WITHOUT_CLASSIFICATION	3.1762903329241105E-6	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.9999997478623319	WITHOUT_CLASSIFICATION	2.5213766802057585E-7	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995613301877	WITHOUT_CLASSIFICATION	4.3866981227563125E-7	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.9999969197239905	WITHOUT_CLASSIFICATION	3.0802760095963884E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.999999537341516	WITHOUT_CLASSIFICATION	4.6265848398173855E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.999999537341516	WITHOUT_CLASSIFICATION	4.6265848398173855E-7	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999978163585412	WITHOUT_CLASSIFICATION	2.1836414586605358E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.999999513610938	WITHOUT_CLASSIFICATION	4.863890621110528E-7	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.9999283224724461	WITHOUT_CLASSIFICATION	7.167752755393937E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9996011026406385	WITHOUT_CLASSIFICATION	3.988973593615302E-4	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999970134501212	WITHOUT_CLASSIFICATION	2.986549878784037E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999968924841961	WITHOUT_CLASSIFICATION	3.107515803792417E-6	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.9999967208562865	WITHOUT_CLASSIFICATION	3.2791437133064626E-6	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999550604980538	WITHOUT_CLASSIFICATION	4.493950194614444E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999695708539317	WITHOUT_CLASSIFICATION	3.042914606841984E-5	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.9999997450764461	WITHOUT_CLASSIFICATION	2.5492355401070405E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.9999967019053904	WITHOUT_CLASSIFICATION	3.2980946097690276E-6	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989496901894	WITHOUT_CLASSIFICATION	1.0503098105976192E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8153170867133903	WITHOUT_CLASSIFICATION	0.18468291328660968	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5140894023710736	WITHOUT_CLASSIFICATION	0.48591059762892647	DEFECT
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999925629886117	WITHOUT_CLASSIFICATION	7.43701138817075E-6	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999388422649609	WITHOUT_CLASSIFICATION	6.115773503912798E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999705174632744	WITHOUT_CLASSIFICATION	2.948253672561053E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999904913122863	WITHOUT_CLASSIFICATION	9.508687713759225E-6	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999802062572086	WITHOUT_CLASSIFICATION	1.9793742791419632E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999993210446763	WITHOUT_CLASSIFICATION	6.789553236960306E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8153170867133903	WITHOUT_CLASSIFICATION	0.18468291328660968	DEFECT
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.9999920782814478	WITHOUT_CLASSIFICATION	7.92171855222047E-6	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7579477148398203	WITHOUT_CLASSIFICATION	0.24205228516017965	DEFECT
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992568329159	WITHOUT_CLASSIFICATION	7.431670841818912E-7	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.8426145725454036	DEFECT	0.15738542745459647	WITHOUT_CLASSIFICATION
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9462574195329163	DEFECT	0.0537425804670836	WITHOUT_CLASSIFICATION
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998248693958	WITHOUT_CLASSIFICATION	1.7513060431475435E-7	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7534729933034577	DEFECT	0.24652700669654226	WITHOUT_CLASSIFICATION
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.8957367223666072	DEFECT	0.10426327763339284	WITHOUT_CLASSIFICATION
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.99999742583617	WITHOUT_CLASSIFICATION	2.5741638298605874E-6	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9497505291662863	WITHOUT_CLASSIFICATION	0.05024947083371367	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.7093688419551103	WITHOUT_CLASSIFICATION	0.29063115804488965	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999485097406	WITHOUT_CLASSIFICATION	5.1490259412939335E-8	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.9988132006130485	WITHOUT_CLASSIFICATION	0.001186799386951566	DEFECT
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.9874365057672809	WITHOUT_CLASSIFICATION	0.012563494232719064	DEFECT
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999972053339209	WITHOUT_CLASSIFICATION	2.7946660790061287E-6	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9877362954351402	WITHOUT_CLASSIFICATION	0.012263704564859734	DEFECT
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9445022613235949	WITHOUT_CLASSIFICATION	0.05549773867640513	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999996213855217	WITHOUT_CLASSIFICATION	3.786144783106635E-6	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9894764875835261	WITHOUT_CLASSIFICATION	0.010523512416473984	DEFECT
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9656678100839634	WITHOUT_CLASSIFICATION	0.03433218991603653	DEFECT
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999916512367972	WITHOUT_CLASSIFICATION	8.348763202787236E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999987110294	WITHOUT_CLASSIFICATION	1.2889705965355535E-9	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.9999938759728184	WITHOUT_CLASSIFICATION	6.124027181633566E-6	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999999700704354	WITHOUT_CLASSIFICATION	2.992956460192904E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999485097406	WITHOUT_CLASSIFICATION	5.1490259412939335E-8	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9997197829540883	WITHOUT_CLASSIFICATION	2.802170459118116E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999560665381111	WITHOUT_CLASSIFICATION	4.393346188884846E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999978163585412	WITHOUT_CLASSIFICATION	2.1836414586605358E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999978163585412	WITHOUT_CLASSIFICATION	2.1836414586605358E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.999999513610938	WITHOUT_CLASSIFICATION	4.863890621110528E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999982828731266	WITHOUT_CLASSIFICATION	1.7171268733353378E-6	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999362670942693	WITHOUT_CLASSIFICATION	6.373290573067216E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999990951116337	WITHOUT_CLASSIFICATION	9.04888366366625E-7	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999977489336442	WITHOUT_CLASSIFICATION	2.2510663558394918E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999899539843109	WITHOUT_CLASSIFICATION	1.0046015689131504E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575185112273	WITHOUT_CLASSIFICATION	4.248148877273972E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997554517453489	WITHOUT_CLASSIFICATION	2.4454825465112606E-4	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999913520226	WITHOUT_CLASSIFICATION	8.6479775152169E-9	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.9999993071462229	WITHOUT_CLASSIFICATION	6.928537772358743E-7	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.999999968910073	WITHOUT_CLASSIFICATION	3.1089926934221243E-8	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.999999887608237	WITHOUT_CLASSIFICATION	1.1239176296570536E-7	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.9999991940136291	WITHOUT_CLASSIFICATION	8.059863708692645E-7	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.9999996310131656	WITHOUT_CLASSIFICATION	3.6898683445253384E-7	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.9999925467015788	WITHOUT_CLASSIFICATION	7.453298421242738E-6	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.9999476766436771	WITHOUT_CLASSIFICATION	5.232335632278636E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559721176	WITHOUT_CLASSIFICATION	1.3044027882471948E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999816458721835	WITHOUT_CLASSIFICATION	1.835412781651771E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999993210446763	WITHOUT_CLASSIFICATION	6.789553236960306E-6	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999970134501212	WITHOUT_CLASSIFICATION	2.986549878784037E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999968924841961	WITHOUT_CLASSIFICATION	3.107515803792417E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997554517453489	WITHOUT_CLASSIFICATION	2.4454825465112606E-4	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999550604980538	WITHOUT_CLASSIFICATION	4.493950194614444E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999695708539317	WITHOUT_CLASSIFICATION	3.042914606841984E-5	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999998172496858	WITHOUT_CLASSIFICATION	1.827503142519816E-7	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999999689315697	WITHOUT_CLASSIFICATION	3.1068430282449015E-8	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.9999997547632384	WITHOUT_CLASSIFICATION	2.4523676159605925E-7	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.999999956022566	WITHOUT_CLASSIFICATION	4.397743401446719E-8	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.9999983592802509	WITHOUT_CLASSIFICATION	1.6407197490729153E-6	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999998193829152	WITHOUT_CLASSIFICATION	1.8061708475695835E-7	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.9999898187477354	WITHOUT_CLASSIFICATION	1.0181252264551773E-5	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.9999964821484042	WITHOUT_CLASSIFICATION	3.5178515956567657E-6	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999751239929806	WITHOUT_CLASSIFICATION	2.487600701943377E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999956326147644	WITHOUT_CLASSIFICATION	4.367385235521238E-6	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5140894023710736	WITHOUT_CLASSIFICATION	0.48591059762892647	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999998193829152	WITHOUT_CLASSIFICATION	1.8061708475695835E-7	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999751239929806	WITHOUT_CLASSIFICATION	2.487600701943377E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999956326147644	WITHOUT_CLASSIFICATION	4.367385235521238E-6	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.999892833249929	WITHOUT_CLASSIFICATION	1.07166750071141E-4	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999890648203299	WITHOUT_CLASSIFICATION	1.09351796701232E-5	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999999828544379	WITHOUT_CLASSIFICATION	1.7145562138444183E-8	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999999828544379	WITHOUT_CLASSIFICATION	1.7145562138444183E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999976640249235	WITHOUT_CLASSIFICATION	2.3359750765884465E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999967562499894	WITHOUT_CLASSIFICATION	3.2437500105301277E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999967562499894	WITHOUT_CLASSIFICATION	3.2437500105301277E-6	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.9999869011074447	WITHOUT_CLASSIFICATION	1.3098892555182693E-5	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.9999452395324069	WITHOUT_CLASSIFICATION	5.476046759320586E-5	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.999999142854036	WITHOUT_CLASSIFICATION	8.571459639676593E-7	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.9999967991664878	WITHOUT_CLASSIFICATION	3.2008335123201526E-6	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.9999999179402284	WITHOUT_CLASSIFICATION	8.20597716400793E-8	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999994926724	WITHOUT_CLASSIFICATION	5.073276753528323E-10	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.9698452048708818	WITHOUT_CLASSIFICATION	0.030154795129118242	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999999833489208	WITHOUT_CLASSIFICATION	1.6651079177975664E-8	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999686804292591	WITHOUT_CLASSIFICATION	3.131957074076993E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999999684021206	WITHOUT_CLASSIFICATION	3.1597879402533695E-8	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.9999993023818383	WITHOUT_CLASSIFICATION	6.976181616738746E-7	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999947189649518	WITHOUT_CLASSIFICATION	5.281035048113137E-6	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999999893576335	WITHOUT_CLASSIFICATION	1.0642366497057222E-8	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99995718053708	WITHOUT_CLASSIFICATION	4.2819462920016445E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575185112273	WITHOUT_CLASSIFICATION	4.248148877273972E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999686804292591	WITHOUT_CLASSIFICATION	3.131957074076993E-5	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999998759701905	WITHOUT_CLASSIFICATION	1.2402980951946633E-7	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999998372667249	WITHOUT_CLASSIFICATION	1.627332750591868E-7	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.9999999921163225	WITHOUT_CLASSIFICATION	7.883677430802573E-9	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997354356972	WITHOUT_CLASSIFICATION	2.645643027742905E-7	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.9999442685846645	WITHOUT_CLASSIFICATION	5.573141533560524E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999996751697527	WITHOUT_CLASSIFICATION	3.2483024735475945E-7	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.9999999626467645	WITHOUT_CLASSIFICATION	3.735323545209332E-8	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.9999980406865984	WITHOUT_CLASSIFICATION	1.9593134016806285E-6	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.9935810244061832	WITHOUT_CLASSIFICATION	0.0064189755938167965	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.9871453231729446	WITHOUT_CLASSIFICATION	0.012854676827055489	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.9999746824855369	WITHOUT_CLASSIFICATION	2.5317514463003314E-5	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.9999999855868137	WITHOUT_CLASSIFICATION	1.441318634285506E-8	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.9997727979774828	WITHOUT_CLASSIFICATION	2.2720202251717692E-4	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.99998773702495	WITHOUT_CLASSIFICATION	1.2262975049919523E-5	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.9999975491533694	WITHOUT_CLASSIFICATION	2.4508466305756515E-6	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999991308775018	WITHOUT_CLASSIFICATION	8.691224982075405E-7	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9999996211748476	WITHOUT_CLASSIFICATION	3.788251523550383E-7	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9999999900498086	WITHOUT_CLASSIFICATION	9.950191415978328E-9	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999986200396408	WITHOUT_CLASSIFICATION	1.3799603592007216E-6	DEFECT
// state	WITHOUT_CLASSIFICATION	0.9999997203280283	WITHOUT_CLASSIFICATION	2.796719716917422E-7	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.9999999139353076	WITHOUT_CLASSIFICATION	8.60646923430049E-8	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.999999971222805	WITHOUT_CLASSIFICATION	2.8777195006463466E-8	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.9999935289459155	WITHOUT_CLASSIFICATION	6.471054084422113E-6	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.9999997738990994	WITHOUT_CLASSIFICATION	2.261009005321042E-7	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999972520200006	WITHOUT_CLASSIFICATION	2.7479799994089384E-6	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.999998218831952	WITHOUT_CLASSIFICATION	1.7811680479898169E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999999413216896	WITHOUT_CLASSIFICATION	5.867831040428759E-8	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999991298068734	WITHOUT_CLASSIFICATION	8.701931266951381E-7	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.9999995955804504	WITHOUT_CLASSIFICATION	4.0441954963146854E-7	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9807385635224695	WITHOUT_CLASSIFICATION	0.019261436477530525	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.9999968675839401	WITHOUT_CLASSIFICATION	3.132416059887463E-6	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.9999998865903746	WITHOUT_CLASSIFICATION	1.1340962533994966E-7	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999998236849611	WITHOUT_CLASSIFICATION	1.7631503895034562E-7	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.99999950159818	WITHOUT_CLASSIFICATION	4.984018200018619E-7	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999996206325955	WITHOUT_CLASSIFICATION	3.7936740451375983E-7	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.9999999728658289	WITHOUT_CLASSIFICATION	2.713417114080551E-8	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.9999999785688028	WITHOUT_CLASSIFICATION	2.1431197133242314E-8	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.9999995783253022	WITHOUT_CLASSIFICATION	4.2167469795369974E-7	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.9999999712807393	WITHOUT_CLASSIFICATION	2.871926083187276E-8	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.9999996124996265	WITHOUT_CLASSIFICATION	3.8750037350678947E-7	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.9999999522144037	WITHOUT_CLASSIFICATION	4.7785596186965965E-8	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.9999998922044875	WITHOUT_CLASSIFICATION	1.0779551261333755E-7	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.9999996926058199	WITHOUT_CLASSIFICATION	3.0739418011707856E-7	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.9999998201336421	WITHOUT_CLASSIFICATION	1.798663578341036E-7	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.9999992205185562	WITHOUT_CLASSIFICATION	7.79481443809444E-7	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999998498073712	WITHOUT_CLASSIFICATION	1.5019262875553563E-7	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999911280107404	WITHOUT_CLASSIFICATION	8.871989259512866E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99995718053708	WITHOUT_CLASSIFICATION	4.2819462920016445E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999885085716984	WITHOUT_CLASSIFICATION	1.149142830163248E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.999999513610938	WITHOUT_CLASSIFICATION	4.863890621110528E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999996751697527	WITHOUT_CLASSIFICATION	3.2483024735475945E-7	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999999413216896	WITHOUT_CLASSIFICATION	5.867831040428759E-8	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999991298068734	WITHOUT_CLASSIFICATION	8.701931266951381E-7	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999998498073712	WITHOUT_CLASSIFICATION	1.5019262875553563E-7	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999911280107404	WITHOUT_CLASSIFICATION	8.871989259512866E-6	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.9999984724701381	WITHOUT_CLASSIFICATION	1.5275298619656654E-6	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.9999955346241503	WITHOUT_CLASSIFICATION	4.4653758497338715E-6	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.9999999678199228	WITHOUT_CLASSIFICATION	3.218007714739896E-8	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.9999999961578784	WITHOUT_CLASSIFICATION	3.842121551614897E-9	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999952408459675	WITHOUT_CLASSIFICATION	4.759154032496766E-6	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.9999996646248187	WITHOUT_CLASSIFICATION	3.353751813559339E-7	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.9999999731254722	WITHOUT_CLASSIFICATION	2.6874527886621314E-8	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999968119348173	WITHOUT_CLASSIFICATION	3.188065182868732E-6	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999958611842691	WITHOUT_CLASSIFICATION	4.138815730913027E-6	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989496901894	WITHOUT_CLASSIFICATION	1.0503098105976192E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999923270773	WITHOUT_CLASSIFICATION	7.672922767035842E-9	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9019435062576641	WITHOUT_CLASSIFICATION	0.09805649374233594	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.7579477148398203	WITHOUT_CLASSIFICATION	0.24205228516017965	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999993182407761	WITHOUT_CLASSIFICATION	6.817592237616995E-7	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999926543934	WITHOUT_CLASSIFICATION	7.3456065535237914E-9	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995613301877	WITHOUT_CLASSIFICATION	4.3866981227563125E-7	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.9999998969761802	WITHOUT_CLASSIFICATION	1.030238197746008E-7	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.9999958555107058	WITHOUT_CLASSIFICATION	4.1444892942103244E-6	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999388422649609	WITHOUT_CLASSIFICATION	6.115773503912798E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999705174632744	WITHOUT_CLASSIFICATION	2.948253672561053E-5	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999942473646753	WITHOUT_CLASSIFICATION	5.7526353246261196E-6	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999973268965343	WITHOUT_CLASSIFICATION	2.673103465671607E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.8426145725454036	DEFECT	0.15738542745459647	WITHOUT_CLASSIFICATION
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9462574195329163	DEFECT	0.0537425804670836	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7534729933034577	DEFECT	0.24652700669654226	WITHOUT_CLASSIFICATION
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.8957367223666072	DEFECT	0.10426327763339284	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9497505291662863	WITHOUT_CLASSIFICATION	0.05024947083371367	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.7093688419551103	WITHOUT_CLASSIFICATION	0.29063115804488965	DEFECT
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.9999999362177754	WITHOUT_CLASSIFICATION	6.378222466737449E-8	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992568329159	WITHOUT_CLASSIFICATION	7.431670841818912E-7	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998248693958	WITHOUT_CLASSIFICATION	1.7513060431475435E-7	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.99999742583617	WITHOUT_CLASSIFICATION	2.5741638298605874E-6	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999512470886	WITHOUT_CLASSIFICATION	4.875291138890315E-7	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999976343021247	WITHOUT_CLASSIFICATION	2.3656978753180444E-6	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999968184157098	WITHOUT_CLASSIFICATION	3.181584290261902E-6	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.7073384805803695	WITHOUT_CLASSIFICATION	0.2926615194196305	DEFECT
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999983519655019	WITHOUT_CLASSIFICATION	1.6480344980751834E-6	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992847283661	WITHOUT_CLASSIFICATION	7.152716339011172E-7	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989486716027	WITHOUT_CLASSIFICATION	1.0513283973513804E-6	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.9999988339218415	WITHOUT_CLASSIFICATION	1.1660781585282725E-6	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.9999999786246877	WITHOUT_CLASSIFICATION	2.137531230460626E-8	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.9999991194050859	WITHOUT_CLASSIFICATION	8.805949142050744E-7	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.9999983886489968	WITHOUT_CLASSIFICATION	1.611351003229116E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632848734	WITHOUT_CLASSIFICATION	1.6336715126615346E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325014085	WITHOUT_CLASSIFICATION	1.067498591567823E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99995718053708	WITHOUT_CLASSIFICATION	4.2819462920016445E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559721176	WITHOUT_CLASSIFICATION	1.3044027882471948E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999999684021206	WITHOUT_CLASSIFICATION	3.1597879402533695E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999601430611	WITHOUT_CLASSIFICATION	3.985693890446E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994362559135	WITHOUT_CLASSIFICATION	5.637440864251352E-7	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.9999994499201023	WITHOUT_CLASSIFICATION	5.500798976883704E-7	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999739759499517	WITHOUT_CLASSIFICATION	2.602405004832541E-5	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999945070996943	WITHOUT_CLASSIFICATION	5.492900305742532E-6	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.9999997731394419	WITHOUT_CLASSIFICATION	2.2686055811993464E-7	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.9999911851678273	WITHOUT_CLASSIFICATION	8.814832172686043E-6	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.9999996770967494	WITHOUT_CLASSIFICATION	3.2290325055076147E-7	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999778614951491	WITHOUT_CLASSIFICATION	2.2138504850915888E-5	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.9999927085802878	WITHOUT_CLASSIFICATION	7.291419712197591E-6	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9999999062663449	WITHOUT_CLASSIFICATION	9.373365516939153E-8	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.999988789581328	WITHOUT_CLASSIFICATION	1.1210418672068812E-5	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999999103352119	WITHOUT_CLASSIFICATION	8.966478819288772E-8	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.999999420444037	WITHOUT_CLASSIFICATION	5.795559629254116E-7	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999967515450852	WITHOUT_CLASSIFICATION	3.2484549149448615E-6	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999930377398798	WITHOUT_CLASSIFICATION	6.962260120092444E-6	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999802781085063	WITHOUT_CLASSIFICATION	1.9721891493579838E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559721176	WITHOUT_CLASSIFICATION	1.3044027882471948E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575185112273	WITHOUT_CLASSIFICATION	4.248148877273972E-5	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999999833489208	WITHOUT_CLASSIFICATION	1.6651079177975664E-8	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999947189649518	WITHOUT_CLASSIFICATION	5.281035048113137E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999998372667249	WITHOUT_CLASSIFICATION	1.627332750591868E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997354356972	WITHOUT_CLASSIFICATION	2.645643027742905E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997354356972	WITHOUT_CLASSIFICATION	2.645643027742905E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998160195718	WITHOUT_CLASSIFICATION	1.8398042833405783E-7	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999998373276879	WITHOUT_CLASSIFICATION	1.626723120015598E-7	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999990566034419	WITHOUT_CLASSIFICATION	9.433965580981075E-7	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.9997896143877186	WITHOUT_CLASSIFICATION	2.1038561228138328E-4	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999993670432654	WITHOUT_CLASSIFICATION	6.329567345930468E-7	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.9999995616549116	WITHOUT_CLASSIFICATION	4.3834508847034705E-7	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.9999994917130012	WITHOUT_CLASSIFICATION	5.082869987941737E-7	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999983134670003	WITHOUT_CLASSIFICATION	1.686532999746002E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325014085	WITHOUT_CLASSIFICATION	1.067498591567823E-6	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999999431629383	WITHOUT_CLASSIFICATION	5.6837061686981345E-8	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.999999513610938	WITHOUT_CLASSIFICATION	4.863890621110528E-7	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999945070996943	WITHOUT_CLASSIFICATION	5.492900305742532E-6	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.9999998897254285	WITHOUT_CLASSIFICATION	1.1027457141707465E-7	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.9999204170907794	WITHOUT_CLASSIFICATION	7.958290922062289E-5	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999991836135252	WITHOUT_CLASSIFICATION	8.163864746637899E-7	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999964690437434	WITHOUT_CLASSIFICATION	3.5309562567237345E-6	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999997326403784	WITHOUT_CLASSIFICATION	2.6735962158849814E-7	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.9999997218855324	WITHOUT_CLASSIFICATION	2.781144675833829E-7	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.9999999305720594	WITHOUT_CLASSIFICATION	6.942794058943491E-8	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.9999994836909817	WITHOUT_CLASSIFICATION	5.16309018279285E-7	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.9999999021892119	WITHOUT_CLASSIFICATION	9.781078810035162E-8	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.9999999996395978	WITHOUT_CLASSIFICATION	3.604020961013548E-10	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.9999997629877683	WITHOUT_CLASSIFICATION	2.3701223183361896E-7	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.999999951025361	WITHOUT_CLASSIFICATION	4.897463900900998E-8	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.9999876719295338	WITHOUT_CLASSIFICATION	1.2328070466224142E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999343351422	WITHOUT_CLASSIFICATION	6.566485781372304E-8	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999904913122863	WITHOUT_CLASSIFICATION	9.508687713759225E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999988022158985	WITHOUT_CLASSIFICATION	1.1977841015259908E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999988022158985	WITHOUT_CLASSIFICATION	1.1977841015259908E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999956099775	WITHOUT_CLASSIFICATION	4.390022373257251E-9	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999956099775	WITHOUT_CLASSIFICATION	4.390022373257251E-9	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999802062572086	WITHOUT_CLASSIFICATION	1.9793742791419632E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999954899343655	WITHOUT_CLASSIFICATION	4.510065634498521E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999020796498	WITHOUT_CLASSIFICATION	9.792035017954812E-8	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999020796498	WITHOUT_CLASSIFICATION	9.792035017954812E-8	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999998443308019	WITHOUT_CLASSIFICATION	1.5566919801544045E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999998443308019	WITHOUT_CLASSIFICATION	1.5566919801544045E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999993717191419	WITHOUT_CLASSIFICATION	6.282808580663632E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999993717191419	WITHOUT_CLASSIFICATION	6.282808580663632E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9998860540661189	WITHOUT_CLASSIFICATION	1.1394593388117249E-4	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.999999766631321	WITHOUT_CLASSIFICATION	2.3336867898419662E-7	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999998603768552	WITHOUT_CLASSIFICATION	1.3962314481195676E-7	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.9999835399178391	WITHOUT_CLASSIFICATION	1.646008216096675E-5	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.9999745245573618	WITHOUT_CLASSIFICATION	2.5475442638274977E-5	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9999998600085422	WITHOUT_CLASSIFICATION	1.3999145773148557E-7	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.9999998495988033	WITHOUT_CLASSIFICATION	1.5040119673312827E-7	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.9999999288608891	WITHOUT_CLASSIFICATION	7.113911089303244E-8	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.9999989485901186	WITHOUT_CLASSIFICATION	1.05140988136843E-6	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.9999998476022839	WITHOUT_CLASSIFICATION	1.523977162379319E-7	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.99999993446825	WITHOUT_CLASSIFICATION	6.553175004290693E-8	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.9999999196957101	WITHOUT_CLASSIFICATION	8.030428987097603E-8	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.9999974853976603	WITHOUT_CLASSIFICATION	2.5146023397550466E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559721176	WITHOUT_CLASSIFICATION	1.3044027882471948E-5	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.999999513610938	WITHOUT_CLASSIFICATION	4.863890621110528E-7	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999575185112273	WITHOUT_CLASSIFICATION	4.248148877273972E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999947189649518	WITHOUT_CLASSIFICATION	5.281035048113137E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999998372667249	WITHOUT_CLASSIFICATION	1.627332750591868E-7	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999968119348173	WITHOUT_CLASSIFICATION	3.188065182868732E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999998373276879	WITHOUT_CLASSIFICATION	1.626723120015598E-7	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999918491269201	WITHOUT_CLASSIFICATION	8.150873079908024E-6	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999999904638708	WITHOUT_CLASSIFICATION	9.536129210625113E-9	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.9999999430163635	WITHOUT_CLASSIFICATION	5.698363642845719E-8	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.999999998162339	WITHOUT_CLASSIFICATION	1.837661070010063E-9	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.9999990909358969	WITHOUT_CLASSIFICATION	9.090641031779168E-7	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999995469544981	WITHOUT_CLASSIFICATION	4.530455018922983E-7	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999980631573476	WITHOUT_CLASSIFICATION	1.9368426524163226E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325014085	WITHOUT_CLASSIFICATION	1.067498591567823E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999956011116	WITHOUT_CLASSIFICATION	4.398888285291302E-9	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999802781085063	WITHOUT_CLASSIFICATION	1.9721891493579838E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999999658271088	WITHOUT_CLASSIFICATION	3.417289119800521E-8	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999993210446763	WITHOUT_CLASSIFICATION	6.789553236960306E-6	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999998129856491	WITHOUT_CLASSIFICATION	1.8701435102823279E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.999992760128847	WITHOUT_CLASSIFICATION	7.23987115309891E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997354356972	WITHOUT_CLASSIFICATION	2.645643027742905E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999996751697527	WITHOUT_CLASSIFICATION	3.2483024735475945E-7	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999926543934	WITHOUT_CLASSIFICATION	7.3456065535237914E-9	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999999935307985	WITHOUT_CLASSIFICATION	6.4692014368015976E-9	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.9997958034084544	WITHOUT_CLASSIFICATION	2.0419659154571033E-4	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.9999999904746278	WITHOUT_CLASSIFICATION	9.525372187799417E-9	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.9999994899205815	WITHOUT_CLASSIFICATION	5.100794184152793E-7	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999999423126568	WITHOUT_CLASSIFICATION	5.768734330107576E-8	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999988646588673	WITHOUT_CLASSIFICATION	1.1353411326170551E-6	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999983134670003	WITHOUT_CLASSIFICATION	1.686532999746002E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325014085	WITHOUT_CLASSIFICATION	1.067498591567823E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.999999513610938	WITHOUT_CLASSIFICATION	4.863890621110528E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999913520226	WITHOUT_CLASSIFICATION	8.6479775152169E-9	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999947189649518	WITHOUT_CLASSIFICATION	5.281035048113137E-6	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999991836135252	WITHOUT_CLASSIFICATION	8.163864746637899E-7	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999997326403784	WITHOUT_CLASSIFICATION	2.6735962158849814E-7	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.9999999318904912	WITHOUT_CLASSIFICATION	6.810950886304831E-8	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.9999999458053108	WITHOUT_CLASSIFICATION	5.419468923446551E-8	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.9999669468612447	WITHOUT_CLASSIFICATION	3.305313875529843E-5	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.9999998476494578	WITHOUT_CLASSIFICATION	1.5235054216557148E-7	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999981564660797	WITHOUT_CLASSIFICATION	1.8435339203497755E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999996763439595	WITHOUT_CLASSIFICATION	3.2365604058853587E-7	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999979782293899	WITHOUT_CLASSIFICATION	2.021770610129035E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99995718053708	WITHOUT_CLASSIFICATION	4.2819462920016445E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99995718053708	WITHOUT_CLASSIFICATION	4.2819462920016445E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999981564660797	WITHOUT_CLASSIFICATION	1.8435339203497755E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999978719846896	WITHOUT_CLASSIFICATION	2.1280153104422436E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999996763439595	WITHOUT_CLASSIFICATION	3.2365604058853587E-7	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999979782293899	WITHOUT_CLASSIFICATION	2.021770610129035E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999995984422295	WITHOUT_CLASSIFICATION	4.0155777047943543E-7	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999998658824689	WITHOUT_CLASSIFICATION	1.3411753103075474E-7	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999998658824689	WITHOUT_CLASSIFICATION	1.3411753103075474E-7	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999314815025429	WITHOUT_CLASSIFICATION	6.85184974571668E-5	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.9999848643815409	WITHOUT_CLASSIFICATION	1.5135618459106574E-5	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.999999990862862	WITHOUT_CLASSIFICATION	9.137138130154876E-9	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.9999999389981258	WITHOUT_CLASSIFICATION	6.100187428255924E-8	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.9999999580841719	WITHOUT_CLASSIFICATION	4.19158280595224E-8	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.9999979273658883	WITHOUT_CLASSIFICATION	2.072634111681917E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632848734	WITHOUT_CLASSIFICATION	1.6336715126615346E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999836632848734	WITHOUT_CLASSIFICATION	1.6336715126615346E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99995718053708	WITHOUT_CLASSIFICATION	4.2819462920016445E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999947189649518	WITHOUT_CLASSIFICATION	5.281035048113137E-6	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999314815025429	WITHOUT_CLASSIFICATION	6.85184974571668E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086909133	WITHOUT_CLASSIFICATION	1.7913090866749394E-6	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999986543905	WITHOUT_CLASSIFICATION	1.3456095309654842E-9	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.9999999996254513	WITHOUT_CLASSIFICATION	3.7454874563259496E-10	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9999941886329327	WITHOUT_CLASSIFICATION	5.8113670673280635E-6	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.9999379363545906	WITHOUT_CLASSIFICATION	6.206364540931661E-5	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.999999959433775	WITHOUT_CLASSIFICATION	4.0566225150140795E-8	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.9999999663401965	WITHOUT_CLASSIFICATION	3.3659803592151494E-8	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.9999146661984903	WITHOUT_CLASSIFICATION	8.533380150967449E-5	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.9999944594816986	WITHOUT_CLASSIFICATION	5.54051830131788E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086909133	WITHOUT_CLASSIFICATION	1.7913090866749394E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086909133	WITHOUT_CLASSIFICATION	1.7913090866749394E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086909133	WITHOUT_CLASSIFICATION	1.7913090866749394E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086909133	WITHOUT_CLASSIFICATION	1.7913090866749394E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559721176	WITHOUT_CLASSIFICATION	1.3044027882471948E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999993717191419	WITHOUT_CLASSIFICATION	6.282808580663632E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.999993210446763	WITHOUT_CLASSIFICATION	6.789553236960306E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999987110294	WITHOUT_CLASSIFICATION	1.2889705965355535E-9	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999991836135252	WITHOUT_CLASSIFICATION	8.163864746637899E-7	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999964690437434	WITHOUT_CLASSIFICATION	3.5309562567237345E-6	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999997326403784	WITHOUT_CLASSIFICATION	2.6735962158849814E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999995486398149	WITHOUT_CLASSIFICATION	4.5136018520801056E-7	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.9999942424174385	WITHOUT_CLASSIFICATION	5.757582561465744E-6	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.9998554040743864	WITHOUT_CLASSIFICATION	1.4459592561351413E-4	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.9999998978066248	WITHOUT_CLASSIFICATION	1.0219337517240722E-7	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999999984391598	WITHOUT_CLASSIFICATION	1.5608402542773696E-9	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999999984391598	WITHOUT_CLASSIFICATION	1.5608402542773696E-9	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9999983794838824	WITHOUT_CLASSIFICATION	1.6205161176321488E-6	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.9999972865531417	WITHOUT_CLASSIFICATION	2.7134468581942167E-6	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999991811628114	WITHOUT_CLASSIFICATION	8.188371885189521E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325014085	WITHOUT_CLASSIFICATION	1.067498591567823E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99995718053708	WITHOUT_CLASSIFICATION	4.2819462920016445E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999923270773	WITHOUT_CLASSIFICATION	7.672922767035842E-9	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999869559721176	WITHOUT_CLASSIFICATION	1.3044027882471948E-5	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999595989013	WITHOUT_CLASSIFICATION	4.040109867942279E-8	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999999689315697	WITHOUT_CLASSIFICATION	3.1068430282449015E-8	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9999963496016314	WITHOUT_CLASSIFICATION	3.650398368616962E-6	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.9999220371281927	WITHOUT_CLASSIFICATION	7.796287180726815E-5	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.9999952136148799	WITHOUT_CLASSIFICATION	4.786385120068202E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999989325014085	WITHOUT_CLASSIFICATION	1.067498591567823E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99995718053708	WITHOUT_CLASSIFICATION	4.2819462920016445E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999997717950595	WITHOUT_CLASSIFICATION	2.2820494051089326E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999997929977374	WITHOUT_CLASSIFICATION	2.070022625557085E-7	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999974593389023	WITHOUT_CLASSIFICATION	2.540661097750864E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999974593389023	WITHOUT_CLASSIFICATION	2.540661097750864E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999997606676967	WITHOUT_CLASSIFICATION	2.393323032226825E-7	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999992431725337	WITHOUT_CLASSIFICATION	7.568274662674971E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999020796498	WITHOUT_CLASSIFICATION	9.792035017954812E-8	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9998860540661189	WITHOUT_CLASSIFICATION	1.1394593388117249E-4	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999778614951491	WITHOUT_CLASSIFICATION	2.2138504850915888E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086909133	WITHOUT_CLASSIFICATION	1.7913090866749394E-6	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.9999716204115268	WITHOUT_CLASSIFICATION	2.837958847329958E-5	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.9999999495175085	WITHOUT_CLASSIFICATION	5.048249153771642E-8	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9999997538548133	WITHOUT_CLASSIFICATION	2.461451866373021E-7	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.9999999936472819	WITHOUT_CLASSIFICATION	6.352718122475778E-9	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086909133	WITHOUT_CLASSIFICATION	1.7913090866749394E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.999999645051719	WITHOUT_CLASSIFICATION	3.549482809720529E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.99995718053708	WITHOUT_CLASSIFICATION	4.2819462920016445E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999981564660797	WITHOUT_CLASSIFICATION	1.8435339203497755E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999996763439595	WITHOUT_CLASSIFICATION	3.2365604058853587E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999979782293899	WITHOUT_CLASSIFICATION	2.021770610129035E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9807385635224695	WITHOUT_CLASSIFICATION	0.019261436477530525	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999990242705649	WITHOUT_CLASSIFICATION	9.757294351335758E-7	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.9999999452469612	WITHOUT_CLASSIFICATION	5.4753038732229185E-8	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.9999999905360883	WITHOUT_CLASSIFICATION	9.46391164835913E-9	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.9999994101794769	WITHOUT_CLASSIFICATION	5.898205230183005E-7	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.9999948409419025	WITHOUT_CLASSIFICATION	5.159058097468081E-6	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.9999996747597248	WITHOUT_CLASSIFICATION	3.252402751724124E-7	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.999998485617934	WITHOUT_CLASSIFICATION	1.5143820660661503E-6	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.9999994981093733	WITHOUT_CLASSIFICATION	5.018906267131349E-7	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9999916494907771	WITHOUT_CLASSIFICATION	8.350509222755513E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999998574123573	WITHOUT_CLASSIFICATION	1.425876426836303E-7	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999998574123573	WITHOUT_CLASSIFICATION	1.425876426836303E-7	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.9999997234225296	WITHOUT_CLASSIFICATION	2.765774703595978E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999995486398149	WITHOUT_CLASSIFICATION	4.5136018520801056E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999888228179	WITHOUT_CLASSIFICATION	1.1177182078375343E-8	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999798525977267	WITHOUT_CLASSIFICATION	2.0147402273377358E-5	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999798525977267	WITHOUT_CLASSIFICATION	2.0147402273377358E-5	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9999978326040019	WITHOUT_CLASSIFICATION	2.1673959981568873E-6	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9999991903229303	WITHOUT_CLASSIFICATION	8.096770697407079E-7	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999993845774858	WITHOUT_CLASSIFICATION	6.154225141569422E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999888228179	WITHOUT_CLASSIFICATION	1.1177182078375343E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999888228179	WITHOUT_CLASSIFICATION	1.1177182078375343E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999888228179	WITHOUT_CLASSIFICATION	1.1177182078375343E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999915725335	WITHOUT_CLASSIFICATION	8.427466479179324E-9	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999798525977267	WITHOUT_CLASSIFICATION	2.0147402273377358E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999999700704354	WITHOUT_CLASSIFICATION	2.992956460192904E-8	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.9999386608752915	WITHOUT_CLASSIFICATION	6.133912470855758E-5	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999854618119	WITHOUT_CLASSIFICATION	1.453818802531196E-8	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999811715634	WITHOUT_CLASSIFICATION	1.8828436561333973E-8	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.999999905834353	WITHOUT_CLASSIFICATION	9.416564700246387E-8	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.9999999980180032	WITHOUT_CLASSIFICATION	1.9819967396555222E-9	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9999973875344768	WITHOUT_CLASSIFICATION	2.612465523208872E-6	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9984810000205162	WITHOUT_CLASSIFICATION	0.0015189999794838543	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9984810000205162	WITHOUT_CLASSIFICATION	0.0015189999794838543	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9984810000205162	WITHOUT_CLASSIFICATION	0.0015189999794838543	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.9999821396258	WITHOUT_CLASSIFICATION	1.7860374200046883E-5	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.9999998263842881	WITHOUT_CLASSIFICATION	1.7361571193394996E-7	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.9998814585939981	WITHOUT_CLASSIFICATION	1.1854140600188907E-4	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.9999834857363091	WITHOUT_CLASSIFICATION	1.6514263690882316E-5	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999999984413218	WITHOUT_CLASSIFICATION	1.5586782043017671E-9	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.9985112664489528	WITHOUT_CLASSIFICATION	0.0014887335510471308	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999970720105508	WITHOUT_CLASSIFICATION	2.927989449252374E-6	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.999985051260498	WITHOUT_CLASSIFICATION	1.4948739501939219E-5	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.9999999776019173	WITHOUT_CLASSIFICATION	2.2398082728132305E-8	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.9999999917547288	WITHOUT_CLASSIFICATION	8.245271260844172E-9	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999999224453292	WITHOUT_CLASSIFICATION	7.75546707780479E-8	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.999996146017522	WITHOUT_CLASSIFICATION	3.853982478044102E-6	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999898929083	WITHOUT_CLASSIFICATION	1.0107091737719703E-8	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999898929083	WITHOUT_CLASSIFICATION	1.0107091737719703E-8	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999997044515168	WITHOUT_CLASSIFICATION	2.955484831320212E-7	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999997044515168	WITHOUT_CLASSIFICATION	2.955484831320212E-7	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9999984031710356	WITHOUT_CLASSIFICATION	1.5968289643149234E-6	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.9999999858585998	WITHOUT_CLASSIFICATION	1.4141400178836352E-8	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.9999993617245589	WITHOUT_CLASSIFICATION	6.38275441005593E-7	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.9999999994717182	WITHOUT_CLASSIFICATION	5.28281810418848E-10	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.9999968901944479	WITHOUT_CLASSIFICATION	3.109805552197718E-6	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999994950123318	WITHOUT_CLASSIFICATION	5.049876681576286E-7	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999998283335135	WITHOUT_CLASSIFICATION	1.7166648650936854E-7	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.999999837794248	WITHOUT_CLASSIFICATION	1.622057520440114E-7	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.9999993504969789	WITHOUT_CLASSIFICATION	6.495030211932724E-7	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.999999870123635	WITHOUT_CLASSIFICATION	1.298763649351851E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999997640900101	WITHOUT_CLASSIFICATION	2.3590998983982267E-7	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999995379637553	WITHOUT_CLASSIFICATION	4.620362446521487E-7	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.999988488248376	WITHOUT_CLASSIFICATION	1.1511751623851495E-5	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999985179837955	WITHOUT_CLASSIFICATION	1.4820162045325435E-6	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.9994365644720101	WITHOUT_CLASSIFICATION	5.634355279898366E-4	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.9999999953728825	WITHOUT_CLASSIFICATION	4.627117458650099E-9	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999968178236466	WITHOUT_CLASSIFICATION	3.1821763533269504E-6	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999968178236466	WITHOUT_CLASSIFICATION	3.1821763533269504E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999991867947774	WITHOUT_CLASSIFICATION	8.132052225428241E-7	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999991867947774	WITHOUT_CLASSIFICATION	8.132052225428241E-7	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.9999475207348655	WITHOUT_CLASSIFICATION	5.247926513455599E-5	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.999978745122335	WITHOUT_CLASSIFICATION	2.12548776650387E-5	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.999978579833503	WITHOUT_CLASSIFICATION	2.142016649696466E-5	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.9999854816830279	WITHOUT_CLASSIFICATION	1.4518316971955831E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999952246074	WITHOUT_CLASSIFICATION	4.775392661393179E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999952246074	WITHOUT_CLASSIFICATION	4.775392661393179E-9	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9996705306109775	WITHOUT_CLASSIFICATION	3.294693890224356E-4	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9998829984075774	WITHOUT_CLASSIFICATION	1.1700159242258516E-4	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999959462103617	WITHOUT_CLASSIFICATION	4.053789638381953E-6	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.9999996444763528	WITHOUT_CLASSIFICATION	3.5552364719468967E-7	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999536049693	WITHOUT_CLASSIFICATION	4.6395030610680866E-8	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.9999949792847868	WITHOUT_CLASSIFICATION	5.020715213194842E-6	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999835220022357	WITHOUT_CLASSIFICATION	1.6477997764283977E-5	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999835220022357	WITHOUT_CLASSIFICATION	1.6477997764283977E-5	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9999807679053657	WITHOUT_CLASSIFICATION	1.9232094634282827E-5	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999987392913208	WITHOUT_CLASSIFICATION	1.2607086791703232E-6	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999987392913208	WITHOUT_CLASSIFICATION	1.2607086791703232E-6	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.999998958133677	WITHOUT_CLASSIFICATION	1.041866323043296E-6	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.9999977990096761	WITHOUT_CLASSIFICATION	2.200990323846341E-6	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.9999999976473624	WITHOUT_CLASSIFICATION	2.3526377389228935E-9	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.9999998925645586	WITHOUT_CLASSIFICATION	1.0743544136415572E-7	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9999998226250014	WITHOUT_CLASSIFICATION	1.7737499860738203E-7	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.9999999979476422	WITHOUT_CLASSIFICATION	2.0523578474001294E-9	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.999999886615792	WITHOUT_CLASSIFICATION	1.1338420797236516E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999952246074	WITHOUT_CLASSIFICATION	4.775392661393179E-9	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999959462103617	WITHOUT_CLASSIFICATION	4.053789638381953E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999998180696	WITHOUT_CLASSIFICATION	1.819302923820963E-10	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.999999579364476	WITHOUT_CLASSIFICATION	4.206355239484745E-7	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999994631204197	WITHOUT_CLASSIFICATION	5.368795804027952E-7	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999999879400913	WITHOUT_CLASSIFICATION	1.205990872375923E-8	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.99999935241148	WITHOUT_CLASSIFICATION	6.475885200090852E-7	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999999739935304	WITHOUT_CLASSIFICATION	2.6006469687545215E-8	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.9999999806824363	WITHOUT_CLASSIFICATION	1.9317563610667425E-8	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9999995081257543	WITHOUT_CLASSIFICATION	4.918742457040387E-7	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.9999999292732029	WITHOUT_CLASSIFICATION	7.07267970241004E-8	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.9999912734406331	WITHOUT_CLASSIFICATION	8.726559366906112E-6	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.9999999062871969	WITHOUT_CLASSIFICATION	9.371280309020156E-8	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.9999978609340294	WITHOUT_CLASSIFICATION	2.139065970593646E-6	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9899129419946019	WITHOUT_CLASSIFICATION	0.010087058005398018	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999579204961	WITHOUT_CLASSIFICATION	4.2079503833178215E-8	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999926523793465	WITHOUT_CLASSIFICATION	7.347620653386798E-6	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9999856261243799	WITHOUT_CLASSIFICATION	1.4373875620202218E-5	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999996816887299	WITHOUT_CLASSIFICATION	3.1831127013357905E-7	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.999868089372232	WITHOUT_CLASSIFICATION	1.3191062776794174E-4	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.9999993786137823	WITHOUT_CLASSIFICATION	6.213862177110085E-7	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999933613409075	WITHOUT_CLASSIFICATION	6.638659092457431E-6	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9999919537104024	WITHOUT_CLASSIFICATION	8.046289597672691E-6	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.9999992559941157	WITHOUT_CLASSIFICATION	7.440058843927527E-7	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999999879908997	WITHOUT_CLASSIFICATION	1.2009100274138025E-8	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.9996310932039553	WITHOUT_CLASSIFICATION	3.689067960447117E-4	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.9999999875204335	WITHOUT_CLASSIFICATION	1.2479566472523284E-8	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999965141259	WITHOUT_CLASSIFICATION	3.4858741232427898E-9	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999992373320475	WITHOUT_CLASSIFICATION	7.626679524569228E-7	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999965141259	WITHOUT_CLASSIFICATION	3.4858741232427898E-9	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999567014068	WITHOUT_CLASSIFICATION	4.3298593194124753E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998723226386	WITHOUT_CLASSIFICATION	1.2767736145864886E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999247169162	WITHOUT_CLASSIFICATION	7.528308379640236E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999810728191	WITHOUT_CLASSIFICATION	1.892718086576409E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999525311336	WITHOUT_CLASSIFICATION	4.7468866364814804E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996131960727	WITHOUT_CLASSIFICATION	3.868039273257883E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997328585224	WITHOUT_CLASSIFICATION	2.6714147759899894E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999998180696	WITHOUT_CLASSIFICATION	1.819302923820963E-10	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999996478080051	WITHOUT_CLASSIFICATION	3.521919948056963E-7	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999996478080051	WITHOUT_CLASSIFICATION	3.521919948056963E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999904690654	WITHOUT_CLASSIFICATION	9.530934630166931E-9	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999904690654	WITHOUT_CLASSIFICATION	9.530934630166931E-9	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999904690654	WITHOUT_CLASSIFICATION	9.530934630166931E-9	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.999999984590271	WITHOUT_CLASSIFICATION	1.540972905408367E-8	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.999999984590271	WITHOUT_CLASSIFICATION	1.540972905408367E-8	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999998316375662	WITHOUT_CLASSIFICATION	1.683624337461112E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999998316375662	WITHOUT_CLASSIFICATION	1.683624337461112E-7	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.9999992793585474	WITHOUT_CLASSIFICATION	7.20641452740255E-7	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999998997364423	WITHOUT_CLASSIFICATION	1.0026355766007517E-7	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999998997364423	WITHOUT_CLASSIFICATION	1.0026355766007517E-7	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.9999981624204931	WITHOUT_CLASSIFICATION	1.837579506978049E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999687418154111	WITHOUT_CLASSIFICATION	3.1258184588962514E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999687418154111	WITHOUT_CLASSIFICATION	3.1258184588962514E-5	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9995977759153444	WITHOUT_CLASSIFICATION	4.0222408465557033E-4	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9995977759153444	WITHOUT_CLASSIFICATION	4.0222408465557033E-4	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9995977759153444	WITHOUT_CLASSIFICATION	4.0222408465557033E-4	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999989953761741	WITHOUT_CLASSIFICATION	1.0046238259449845E-6	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.9997525906447392	WITHOUT_CLASSIFICATION	2.4740935526075905E-4	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.999998195736392	WITHOUT_CLASSIFICATION	1.804263607929443E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999595989013	WITHOUT_CLASSIFICATION	4.040109867942279E-8	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999595989013	WITHOUT_CLASSIFICATION	4.040109867942279E-8	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999998172496858	WITHOUT_CLASSIFICATION	1.827503142519816E-7	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.999998958133677	WITHOUT_CLASSIFICATION	1.041866323043296E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999996816887299	WITHOUT_CLASSIFICATION	3.1831127013357905E-7	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999996816887299	WITHOUT_CLASSIFICATION	3.1831127013357905E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998723226386	WITHOUT_CLASSIFICATION	1.2767736145864886E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999998180696	WITHOUT_CLASSIFICATION	1.819302923820963E-10	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999989953761741	WITHOUT_CLASSIFICATION	1.0046238259449845E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999989953761741	WITHOUT_CLASSIFICATION	1.0046238259449845E-6	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.9999988410794367	WITHOUT_CLASSIFICATION	1.158920563287946E-6	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.9999998814651979	WITHOUT_CLASSIFICATION	1.1853480205545381E-7	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.9999999578328757	WITHOUT_CLASSIFICATION	4.2167124248411744E-8	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.9999997475556465	WITHOUT_CLASSIFICATION	2.524443535829976E-7	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.9999999679022418	WITHOUT_CLASSIFICATION	3.2097758289448525E-8	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999994867273155	WITHOUT_CLASSIFICATION	5.132726843906764E-7	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.9999980175056372	WITHOUT_CLASSIFICATION	1.982494362863522E-6	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999999958819114	WITHOUT_CLASSIFICATION	4.118088638170316E-9	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.999999923075369	WITHOUT_CLASSIFICATION	7.692463099447748E-8	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.9999884434227914	WITHOUT_CLASSIFICATION	1.1556577208664638E-5	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.9999920812106214	WITHOUT_CLASSIFICATION	7.918789378622705E-6	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.9999949949053132	WITHOUT_CLASSIFICATION	5.005094686867427E-6	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999988646588673	WITHOUT_CLASSIFICATION	1.1353411326170551E-6	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.9999993098828827	WITHOUT_CLASSIFICATION	6.901171173255938E-7	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.9999806520264426	WITHOUT_CLASSIFICATION	1.9347973557484022E-5	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999333972176577	WITHOUT_CLASSIFICATION	6.660278234228791E-5	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.9999992711309728	WITHOUT_CLASSIFICATION	7.288690271648725E-7	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.9996055515753692	WITHOUT_CLASSIFICATION	3.944484246307229E-4	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.9999955922550421	WITHOUT_CLASSIFICATION	4.407744957901563E-6	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.9999997571490639	WITHOUT_CLASSIFICATION	2.428509361449629E-7	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.9998913339139784	WITHOUT_CLASSIFICATION	1.0866608602155702E-4	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.9999836193938941	WITHOUT_CLASSIFICATION	1.6380606105827358E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999952246074	WITHOUT_CLASSIFICATION	4.775392661393179E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999952246074	WITHOUT_CLASSIFICATION	4.775392661393179E-9	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999536049693	WITHOUT_CLASSIFICATION	4.6395030610680866E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999567014068	WITHOUT_CLASSIFICATION	4.3298593194124753E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999810728191	WITHOUT_CLASSIFICATION	1.892718086576409E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999525311336	WITHOUT_CLASSIFICATION	4.7468866364814804E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999525311336	WITHOUT_CLASSIFICATION	4.7468866364814804E-8	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9999597370568125	WITHOUT_CLASSIFICATION	4.0262943187524544E-5	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.999989781078068	WITHOUT_CLASSIFICATION	1.0218921931974935E-5	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.9999999078273789	WITHOUT_CLASSIFICATION	9.217262112648672E-8	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999998709573701	WITHOUT_CLASSIFICATION	1.290426299380944E-7	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.9999995021275901	WITHOUT_CLASSIFICATION	4.978724098912355E-7	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.9999999896944489	WITHOUT_CLASSIFICATION	1.03055511433578E-8	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.9999981466059291	WITHOUT_CLASSIFICATION	1.8533940708838035E-6	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9999998577915102	WITHOUT_CLASSIFICATION	1.422084897267458E-7	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.9999800378751024	WITHOUT_CLASSIFICATION	1.9962124897723982E-5	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.9999996332231378	WITHOUT_CLASSIFICATION	3.6677686229040615E-7	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.9999996478195107	WITHOUT_CLASSIFICATION	3.521804892525889E-7	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.999999653133171	WITHOUT_CLASSIFICATION	3.468668290057686E-7	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.9999996971663059	WITHOUT_CLASSIFICATION	3.0283369407815914E-7	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.9999999542358868	WITHOUT_CLASSIFICATION	4.576411307425759E-8	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.9999996536717658	WITHOUT_CLASSIFICATION	3.4632823415975206E-7	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999983874683	WITHOUT_CLASSIFICATION	1.6125316374232038E-9	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.9999999129558845	WITHOUT_CLASSIFICATION	8.70441154139057E-8	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.9999981355765531	WITHOUT_CLASSIFICATION	1.8644234467857743E-6	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.9999998975304862	WITHOUT_CLASSIFICATION	1.0246951380365685E-7	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.9999998035442287	WITHOUT_CLASSIFICATION	1.9645577132526667E-7	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.9999990181415117	WITHOUT_CLASSIFICATION	9.818584883059255E-7	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.9999989977845466	WITHOUT_CLASSIFICATION	1.0022154534328463E-6	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999983874683	WITHOUT_CLASSIFICATION	1.6125316374232038E-9	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.9999996857195259	WITHOUT_CLASSIFICATION	3.14280474029944E-7	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999991484058403	WITHOUT_CLASSIFICATION	8.515941598390715E-7	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999999163240436	WITHOUT_CLASSIFICATION	8.367595636004548E-8	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.9999676106279779	WITHOUT_CLASSIFICATION	3.238937202211477E-5	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.9999999577682396	WITHOUT_CLASSIFICATION	4.22317603688673E-8	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999992373320475	WITHOUT_CLASSIFICATION	7.626679524569228E-7	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999991484058403	WITHOUT_CLASSIFICATION	8.515941598390715E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597599501	WITHOUT_CLASSIFICATION	1.6402400498410795E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481052789	WITHOUT_CLASSIFICATION	1.751894721002088E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166797024	WITHOUT_CLASSIFICATION	1.0083320297563681E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166797024	WITHOUT_CLASSIFICATION	1.0083320297563681E-5	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.9999931058428677	WITHOUT_CLASSIFICATION	6.8941571322616645E-6	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999991947661914	WITHOUT_CLASSIFICATION	8.052338087210843E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558475767	WITHOUT_CLASSIFICATION	3.4441524232018783E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9842642347973427	WITHOUT_CLASSIFICATION	0.015735765202657317	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.9999997269427549	WITHOUT_CLASSIFICATION	2.7305724514315614E-7	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9999988603489075	WITHOUT_CLASSIFICATION	1.1396510925036698E-6	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9998894620453752	WITHOUT_CLASSIFICATION	1.1053795462473469E-4	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9998894620453752	WITHOUT_CLASSIFICATION	1.1053795462473469E-4	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.9999999942379879	WITHOUT_CLASSIFICATION	5.76201209525328E-9	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999997640900101	WITHOUT_CLASSIFICATION	2.3590998983982267E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597599501	WITHOUT_CLASSIFICATION	1.6402400498410795E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597599501	WITHOUT_CLASSIFICATION	1.6402400498410795E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481052789	WITHOUT_CLASSIFICATION	1.751894721002088E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166797024	WITHOUT_CLASSIFICATION	1.0083320297563681E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166797024	WITHOUT_CLASSIFICATION	1.0083320297563681E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558475767	WITHOUT_CLASSIFICATION	3.4441524232018783E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558475767	WITHOUT_CLASSIFICATION	3.4441524232018783E-6	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.9999999991957165	WITHOUT_CLASSIFICATION	8.04283449514468E-10	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9823545996597077	WITHOUT_CLASSIFICATION	0.017645400340292227	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.9999999933324145	WITHOUT_CLASSIFICATION	6.667585455443064E-9	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999992931457261	WITHOUT_CLASSIFICATION	7.068542739082272E-7	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999992931457261	WITHOUT_CLASSIFICATION	7.068542739082272E-7	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9999998307492264	WITHOUT_CLASSIFICATION	1.692507734957246E-7	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.9999988034793443	WITHOUT_CLASSIFICATION	1.1965206557190282E-6	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.9999686427112778	WITHOUT_CLASSIFICATION	3.135728872222975E-5	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.9998145299656133	WITHOUT_CLASSIFICATION	1.854700343868106E-4	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999973581860606	WITHOUT_CLASSIFICATION	2.6418139393854293E-6	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.999999028419224	WITHOUT_CLASSIFICATION	9.71580776063996E-7	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999787679462848	WITHOUT_CLASSIFICATION	2.123205371511967E-5	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999950495188553	WITHOUT_CLASSIFICATION	4.950481144752161E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999973207445177	WITHOUT_CLASSIFICATION	2.6792554822256436E-6	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999885975447428	WITHOUT_CLASSIFICATION	1.1402455257201595E-5	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999885975447428	WITHOUT_CLASSIFICATION	1.1402455257201595E-5	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9999988101661385	WITHOUT_CLASSIFICATION	1.1898338614603966E-6	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999998297522611	WITHOUT_CLASSIFICATION	1.7024773894230987E-7	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999996663644786	WITHOUT_CLASSIFICATION	3.336355214115284E-7	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.9999999961418705	WITHOUT_CLASSIFICATION	3.858129518338381E-9	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999998255622211	WITHOUT_CLASSIFICATION	1.7443777889570725E-7	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999995276794131	WITHOUT_CLASSIFICATION	4.7232058691058984E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597599501	WITHOUT_CLASSIFICATION	1.6402400498410795E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481052789	WITHOUT_CLASSIFICATION	1.751894721002088E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481052789	WITHOUT_CLASSIFICATION	1.751894721002088E-6	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.9999990237656328	WITHOUT_CLASSIFICATION	9.76234367221779E-7	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.999996838799814	WITHOUT_CLASSIFICATION	3.161200185881108E-6	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999995802489843	WITHOUT_CLASSIFICATION	4.1975101578789937E-7	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999830986206226	WITHOUT_CLASSIFICATION	1.6901379377381885E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999830986206226	WITHOUT_CLASSIFICATION	1.6901379377381885E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999999092169859	WITHOUT_CLASSIFICATION	9.078301421512244E-8	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.9999775564320048	WITHOUT_CLASSIFICATION	2.2443567995251837E-5	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.9998834447116115	WITHOUT_CLASSIFICATION	1.1655528838847532E-4	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.9999999401772145	WITHOUT_CLASSIFICATION	5.982278550087318E-8	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.9999977422737619	WITHOUT_CLASSIFICATION	2.2577262381745503E-6	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.9999396645518819	WITHOUT_CLASSIFICATION	6.033544811817015E-5	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.9999665339785385	WITHOUT_CLASSIFICATION	3.346602146151127E-5	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.9999999627891979	WITHOUT_CLASSIFICATION	3.721080210028077E-8	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.9999999360593993	WITHOUT_CLASSIFICATION	6.394060069710974E-8	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.999999998173917	WITHOUT_CLASSIFICATION	1.8260828749576554E-9	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9999592052051975	WITHOUT_CLASSIFICATION	4.079479480253987E-5	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.99999997330941	WITHOUT_CLASSIFICATION	2.6690589906250263E-8	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9999999229965199	WITHOUT_CLASSIFICATION	7.700348003953984E-8	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.9999950239979769	WITHOUT_CLASSIFICATION	4.976002023019418E-6	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.999999999735744	WITHOUT_CLASSIFICATION	2.642559421949086E-10	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999999457929205	WITHOUT_CLASSIFICATION	5.420707941680643E-8	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.9999993894928342	WITHOUT_CLASSIFICATION	6.105071658591826E-7	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.9999977842954073	WITHOUT_CLASSIFICATION	2.2157045927207873E-6	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.9999983206818766	WITHOUT_CLASSIFICATION	1.6793181233744326E-6	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.9999779062087996	WITHOUT_CLASSIFICATION	2.209379120047499E-5	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.9999589456161326	WITHOUT_CLASSIFICATION	4.105438386738867E-5	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.9999975649607422	WITHOUT_CLASSIFICATION	2.43503925778146E-6	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999999981265976	WITHOUT_CLASSIFICATION	1.8734024882739415E-9	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999995908617414	WITHOUT_CLASSIFICATION	4.091382586251469E-7	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999995908617414	WITHOUT_CLASSIFICATION	4.091382586251469E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677107682381	WITHOUT_CLASSIFICATION	1.3228923176189573E-4	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999996717372113	WITHOUT_CLASSIFICATION	3.282627887435063E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677107682381	WITHOUT_CLASSIFICATION	1.3228923176189573E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677107682381	WITHOUT_CLASSIFICATION	1.3228923176189573E-4	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999926523793465	WITHOUT_CLASSIFICATION	7.347620653386798E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597599501	WITHOUT_CLASSIFICATION	1.6402400498410795E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481052789	WITHOUT_CLASSIFICATION	1.751894721002088E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999601430611	WITHOUT_CLASSIFICATION	3.985693890446E-7	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481052789	WITHOUT_CLASSIFICATION	1.751894721002088E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166797024	WITHOUT_CLASSIFICATION	1.0083320297563681E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166797024	WITHOUT_CLASSIFICATION	1.0083320297563681E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558475767	WITHOUT_CLASSIFICATION	3.4441524232018783E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558475767	WITHOUT_CLASSIFICATION	3.4441524232018783E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999787679462848	WITHOUT_CLASSIFICATION	2.123205371511967E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788793	WITHOUT_CLASSIFICATION	7.942112075916794E-8	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.9995694567660246	WITHOUT_CLASSIFICATION	4.3054323397538093E-4	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.9999998587164886	WITHOUT_CLASSIFICATION	1.4128351138355302E-7	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9982302745063186	WITHOUT_CLASSIFICATION	0.0017697254936814286	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9962866539435945	WITHOUT_CLASSIFICATION	0.0037133460564054955	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.7203277831335774	DEFECT	0.2796722168664226	WITHOUT_CLASSIFICATION
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999995277870909	WITHOUT_CLASSIFICATION	4.7221290916358825E-7	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9999992661250889	WITHOUT_CLASSIFICATION	7.338749109460074E-7	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.9999984086476041	WITHOUT_CLASSIFICATION	1.5913523959318315E-6	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.9999995485034094	WITHOUT_CLASSIFICATION	4.514965906057565E-7	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999993440962952	WITHOUT_CLASSIFICATION	6.559037048116921E-6	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.9999850611930351	WITHOUT_CLASSIFICATION	1.4938806964901475E-5	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.9999999945532428	WITHOUT_CLASSIFICATION	5.4467572127236205E-9	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999999457929205	WITHOUT_CLASSIFICATION	5.420707941680643E-8	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.999995469883678	WITHOUT_CLASSIFICATION	4.530116321865057E-6	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999995989952433	WITHOUT_CLASSIFICATION	4.01004756763483E-7	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999993260308705	WITHOUT_CLASSIFICATION	6.739691295195853E-7	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.9998424363237038	WITHOUT_CLASSIFICATION	1.5756367629610833E-4	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788793	WITHOUT_CLASSIFICATION	7.942112075916794E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788793	WITHOUT_CLASSIFICATION	7.942112075916794E-8	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.999988488248376	WITHOUT_CLASSIFICATION	1.1511751623851495E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999926523793465	WITHOUT_CLASSIFICATION	7.347620653386798E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999895990232162	WITHOUT_CLASSIFICATION	1.0400976783818352E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983597599501	WITHOUT_CLASSIFICATION	1.6402400498410795E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481052789	WITHOUT_CLASSIFICATION	1.751894721002088E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481052789	WITHOUT_CLASSIFICATION	1.751894721002088E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481052789	WITHOUT_CLASSIFICATION	1.751894721002088E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166797024	WITHOUT_CLASSIFICATION	1.0083320297563681E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166797024	WITHOUT_CLASSIFICATION	1.0083320297563681E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166797024	WITHOUT_CLASSIFICATION	1.0083320297563681E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166797024	WITHOUT_CLASSIFICATION	1.0083320297563681E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166797024	WITHOUT_CLASSIFICATION	1.0083320297563681E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558475767	WITHOUT_CLASSIFICATION	3.4441524232018783E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558475767	WITHOUT_CLASSIFICATION	3.4441524232018783E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558475767	WITHOUT_CLASSIFICATION	3.4441524232018783E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999965558475767	WITHOUT_CLASSIFICATION	3.4441524232018783E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9842642347973427	WITHOUT_CLASSIFICATION	0.015735765202657317	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788793	WITHOUT_CLASSIFICATION	7.942112075916794E-8	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.9999954939926726	WITHOUT_CLASSIFICATION	4.506007327297311E-6	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999972808858341	WITHOUT_CLASSIFICATION	2.7191141659689845E-6	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999994749371443	WITHOUT_CLASSIFICATION	5.250628557079698E-7	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999994749371443	WITHOUT_CLASSIFICATION	5.250628557079698E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999997197010263	WITHOUT_CLASSIFICATION	2.802989736219284E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999997197010263	WITHOUT_CLASSIFICATION	2.802989736219284E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999997197010263	WITHOUT_CLASSIFICATION	2.802989736219284E-7	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999962162003029	WITHOUT_CLASSIFICATION	3.7837996970991886E-6	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.9999999999988055	WITHOUT_CLASSIFICATION	1.1944725563981747E-12	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.9999997880245493	WITHOUT_CLASSIFICATION	2.119754506806907E-7	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999976902545245	WITHOUT_CLASSIFICATION	2.3097454755367224E-6	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998654683089	WITHOUT_CLASSIFICATION	1.3453169113273175E-7	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.9999994140627755	WITHOUT_CLASSIFICATION	5.859372245237188E-7	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.9999989726798022	WITHOUT_CLASSIFICATION	1.0273201978724753E-6	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.9999999002379965	WITHOUT_CLASSIFICATION	9.976200354569603E-8	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.9999977508795799	WITHOUT_CLASSIFICATION	2.249120420086506E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999536049693	WITHOUT_CLASSIFICATION	4.6395030610680866E-8	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999579204961	WITHOUT_CLASSIFICATION	4.2079503833178215E-8	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999926523793465	WITHOUT_CLASSIFICATION	7.347620653386798E-6	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.999995469883678	WITHOUT_CLASSIFICATION	4.530116321865057E-6	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999993260308705	WITHOUT_CLASSIFICATION	6.739691295195853E-7	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999766320815491	WITHOUT_CLASSIFICATION	2.3367918450936122E-5	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.9908761177931257	WITHOUT_CLASSIFICATION	0.009123882206874363	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999991255802	WITHOUT_CLASSIFICATION	8.744196406120807E-10	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999991255802	WITHOUT_CLASSIFICATION	8.744196406120807E-10	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999766320815491	WITHOUT_CLASSIFICATION	2.3367918450936122E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999854746178	WITHOUT_CLASSIFICATION	1.4525382311586255E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788793	WITHOUT_CLASSIFICATION	7.942112075916794E-8	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999999270608303	WITHOUT_CLASSIFICATION	7.293916966287597E-8	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999961593122	WITHOUT_CLASSIFICATION	3.840687836164164E-9	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788793	WITHOUT_CLASSIFICATION	7.942112075916794E-8	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9999998372948568	WITHOUT_CLASSIFICATION	1.6270514316466984E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999999664890721	WITHOUT_CLASSIFICATION	3.351092794141642E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788793	WITHOUT_CLASSIFICATION	7.942112075916794E-8	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.9999996178795246	WITHOUT_CLASSIFICATION	3.821204753069966E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788793	WITHOUT_CLASSIFICATION	7.942112075916794E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788793	WITHOUT_CLASSIFICATION	7.942112075916794E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788793	WITHOUT_CLASSIFICATION	7.942112075916794E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999915725335	WITHOUT_CLASSIFICATION	8.427466479179324E-9	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999915725335	WITHOUT_CLASSIFICATION	8.427466479179324E-9	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.999999837794248	WITHOUT_CLASSIFICATION	1.622057520440114E-7	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999999423126568	WITHOUT_CLASSIFICATION	5.768734330107576E-8	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.999999870123635	WITHOUT_CLASSIFICATION	1.298763649351851E-7	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.999988488248376	WITHOUT_CLASSIFICATION	1.1511751623851495E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999536049693	WITHOUT_CLASSIFICATION	4.6395030610680866E-8	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999899166797024	WITHOUT_CLASSIFICATION	1.0083320297563681E-5	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9842642347973427	WITHOUT_CLASSIFICATION	0.015735765202657317	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9998894620453752	WITHOUT_CLASSIFICATION	1.1053795462473469E-4	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999995989952433	WITHOUT_CLASSIFICATION	4.01004756763483E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999854746178	WITHOUT_CLASSIFICATION	1.4525382311586255E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999854746178	WITHOUT_CLASSIFICATION	1.4525382311586255E-8	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999766320815491	WITHOUT_CLASSIFICATION	2.3367918450936122E-5	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999961593122	WITHOUT_CLASSIFICATION	3.840687836164164E-9	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999999270608303	WITHOUT_CLASSIFICATION	7.293916966287597E-8	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999999270608303	WITHOUT_CLASSIFICATION	7.293916966287597E-8	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999999664890721	WITHOUT_CLASSIFICATION	3.351092794141642E-8	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999999664890721	WITHOUT_CLASSIFICATION	3.351092794141642E-8	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999998366696534	WITHOUT_CLASSIFICATION	1.6333034659717306E-7	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.9999822967675787	WITHOUT_CLASSIFICATION	1.7703232421385845E-5	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9999999918774624	WITHOUT_CLASSIFICATION	8.122537605768256E-9	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.9999980572100337	WITHOUT_CLASSIFICATION	1.9427899662879324E-6	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.9933986966678743	WITHOUT_CLASSIFICATION	0.0066013033321256935	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998485010998	WITHOUT_CLASSIFICATION	1.5149890019349277E-7	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9998862629623351	WITHOUT_CLASSIFICATION	1.1373703766490026E-4	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999999336166144	WITHOUT_CLASSIFICATION	6.638338557221865E-8	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999999336166144	WITHOUT_CLASSIFICATION	6.638338557221865E-8	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.9999160273315112	WITHOUT_CLASSIFICATION	8.397266848877006E-5	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.999994163582093	WITHOUT_CLASSIFICATION	5.8364179069996624E-6	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.9999993745612001	WITHOUT_CLASSIFICATION	6.254387998695439E-7	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.9999825383400207	WITHOUT_CLASSIFICATION	1.7461659979204538E-5	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999981520427922	WITHOUT_CLASSIFICATION	1.8479572078642163E-6	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999994504624	WITHOUT_CLASSIFICATION	5.495376754559114E-10	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.9999999853003719	WITHOUT_CLASSIFICATION	1.4699628145067731E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9672841672099802	WITHOUT_CLASSIFICATION	0.03271583279001972	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999999457391483	WITHOUT_CLASSIFICATION	5.426085181588967E-8	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.999999786626201	WITHOUT_CLASSIFICATION	2.1337379903318365E-7	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999908463976627	WITHOUT_CLASSIFICATION	9.153602337430732E-6	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999799092286	WITHOUT_CLASSIFICATION	2.0090771328475844E-8	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999799092286	WITHOUT_CLASSIFICATION	2.0090771328475844E-8	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999999580592931	WITHOUT_CLASSIFICATION	4.194070694155344E-8	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999997640900101	WITHOUT_CLASSIFICATION	2.3590998983982267E-7	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999579204961	WITHOUT_CLASSIFICATION	4.2079503833178215E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999854746178	WITHOUT_CLASSIFICATION	1.4525382311586255E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999854746178	WITHOUT_CLASSIFICATION	1.4525382311586255E-8	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.999999828593147	WITHOUT_CLASSIFICATION	1.7140685292374783E-7	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999999054419656	WITHOUT_CLASSIFICATION	9.455803437101182E-8	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999999054419656	WITHOUT_CLASSIFICATION	9.455803437101182E-8	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.9992463137787627	WITHOUT_CLASSIFICATION	7.536862212373792E-4	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.999999639082006	WITHOUT_CLASSIFICATION	3.609179940135181E-7	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.9999994879801671	WITHOUT_CLASSIFICATION	5.120198328931456E-7	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9999999417670461	WITHOUT_CLASSIFICATION	5.82329538928704E-8	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.9999999958412825	WITHOUT_CLASSIFICATION	4.158717480753558E-9	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999842232148441	WITHOUT_CLASSIFICATION	1.5776785155813408E-5	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999842232148441	WITHOUT_CLASSIFICATION	1.5776785155813408E-5	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999999603124506	WITHOUT_CLASSIFICATION	3.96875494039323E-8	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.9999992287496059	WITHOUT_CLASSIFICATION	7.712503940950346E-7	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.9999999668362604	WITHOUT_CLASSIFICATION	3.3163739624402094E-8	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.9999996221903125	WITHOUT_CLASSIFICATION	3.778096874725299E-7	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.9999999540501426	WITHOUT_CLASSIFICATION	4.594985735005571E-8	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.9999999644174544	WITHOUT_CLASSIFICATION	3.558254564863984E-8	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.9999997050773547	WITHOUT_CLASSIFICATION	2.9492264533283764E-7	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.999999999463159	WITHOUT_CLASSIFICATION	5.368410727966353E-10	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999950874319078	WITHOUT_CLASSIFICATION	4.912568092243072E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999996378840498	WITHOUT_CLASSIFICATION	3.621159502941711E-7	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999994411872318	WITHOUT_CLASSIFICATION	5.588127681284115E-7	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.999999828593147	WITHOUT_CLASSIFICATION	1.7140685292374783E-7	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.999999826071472	WITHOUT_CLASSIFICATION	1.7392852812242218E-7	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.99995666112682	WITHOUT_CLASSIFICATION	4.3338873180077E-5	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.9999372627867823	WITHOUT_CLASSIFICATION	6.273721321761935E-5	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.9999999475257482	WITHOUT_CLASSIFICATION	5.2474251777853425E-8	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.9999984058631262	WITHOUT_CLASSIFICATION	1.5941368738133837E-6	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999989007182706	WITHOUT_CLASSIFICATION	1.0992817294342853E-6	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999999972751893	WITHOUT_CLASSIFICATION	2.724810712781718E-9	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9999742102459779	WITHOUT_CLASSIFICATION	2.578975402214293E-5	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.9999722959098355	WITHOUT_CLASSIFICATION	2.7704090164543774E-5	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.9999464041757505	WITHOUT_CLASSIFICATION	5.3595824249392E-5	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.9999760923891374	WITHOUT_CLASSIFICATION	2.3907610862525917E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999657980509656	WITHOUT_CLASSIFICATION	3.4201949034416225E-5	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999994087752629	WITHOUT_CLASSIFICATION	5.912247370650858E-7	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.9999632188922668	WITHOUT_CLASSIFICATION	3.678110773320907E-5	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.999998888932347	WITHOUT_CLASSIFICATION	1.111067653018827E-6	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.9999248183266428	WITHOUT_CLASSIFICATION	7.518167335728344E-5	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.9999884290144149	WITHOUT_CLASSIFICATION	1.1570985585248393E-5	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.9999997516544803	WITHOUT_CLASSIFICATION	2.483455196963023E-7	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.9999993456447145	WITHOUT_CLASSIFICATION	6.543552856544244E-7	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.99999918894417	WITHOUT_CLASSIFICATION	8.110558300277269E-7	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.9999967948757279	WITHOUT_CLASSIFICATION	3.2051242721409793E-6	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.9999994978023492	WITHOUT_CLASSIFICATION	5.02197650844073E-7	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.999991661738426	WITHOUT_CLASSIFICATION	8.338261573920427E-6	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.9999978610449104	WITHOUT_CLASSIFICATION	2.1389550896142384E-6	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999999505181829	WITHOUT_CLASSIFICATION	4.948181709744839E-8	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999999381312904	WITHOUT_CLASSIFICATION	6.186870959308948E-8	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.999998735039535	WITHOUT_CLASSIFICATION	1.2649604650088172E-6	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9998014181791682	WITHOUT_CLASSIFICATION	1.9858182083174126E-4	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999933246459977	WITHOUT_CLASSIFICATION	6.675354002441951E-6	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.999991661738426	WITHOUT_CLASSIFICATION	8.338261573920427E-6	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999999505181829	WITHOUT_CLASSIFICATION	4.948181709744839E-8	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999999505181829	WITHOUT_CLASSIFICATION	4.948181709744839E-8	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999999381312904	WITHOUT_CLASSIFICATION	6.186870959308948E-8	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.999999946807734	WITHOUT_CLASSIFICATION	5.31922660112757E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999109683447	WITHOUT_CLASSIFICATION	8.90316552963332E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999109683447	WITHOUT_CLASSIFICATION	8.90316552963332E-8	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9999992602546331	WITHOUT_CLASSIFICATION	7.397453667278719E-7	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999909059362635	WITHOUT_CLASSIFICATION	9.094063736530066E-6	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999909059362635	WITHOUT_CLASSIFICATION	9.094063736530066E-6	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999998931876135	WITHOUT_CLASSIFICATION	1.0681238645638249E-7	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.9999999732422173	WITHOUT_CLASSIFICATION	2.675778255321097E-8	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999768547875	WITHOUT_CLASSIFICATION	2.314521256761913E-8	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999768547875	WITHOUT_CLASSIFICATION	2.314521256761913E-8	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.999999449586669	WITHOUT_CLASSIFICATION	5.50413331004885E-7	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.9999994840893446	WITHOUT_CLASSIFICATION	5.159106554281887E-7	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999997013660246	WITHOUT_CLASSIFICATION	2.986339754101992E-7	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999990402283035	WITHOUT_CLASSIFICATION	9.597716964694718E-7	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.9999976981327624	WITHOUT_CLASSIFICATION	2.3018672375480375E-6	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.9999964079827891	WITHOUT_CLASSIFICATION	3.5920172109990873E-6	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.9999984142550201	WITHOUT_CLASSIFICATION	1.5857449799738227E-6	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.9999993384455265	WITHOUT_CLASSIFICATION	6.61554473444142E-7	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.99999070013777	WITHOUT_CLASSIFICATION	9.299862230049242E-6	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.999999815765175	WITHOUT_CLASSIFICATION	1.8423482499161197E-7	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.9998591189904883	WITHOUT_CLASSIFICATION	1.4088100951164682E-4	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9999924880402551	WITHOUT_CLASSIFICATION	7.511959744995732E-6	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.9999024324758499	WITHOUT_CLASSIFICATION	9.756752415010485E-5	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.9999915335871168	WITHOUT_CLASSIFICATION	8.466412883255068E-6	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999974397735264	WITHOUT_CLASSIFICATION	2.5602264735741395E-6	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.9999921370404601	WITHOUT_CLASSIFICATION	7.862959539957563E-6	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.9999999645523032	WITHOUT_CLASSIFICATION	3.5447696696051664E-8	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999337699056908	WITHOUT_CLASSIFICATION	6.623009430907625E-5	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999994860727675	WITHOUT_CLASSIFICATION	5.139272325979988E-7	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999429999422128	WITHOUT_CLASSIFICATION	5.700005778718097E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999657980509656	WITHOUT_CLASSIFICATION	3.4201949034416225E-5	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.9999995416566444	WITHOUT_CLASSIFICATION	4.583433556180703E-7	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999999300068259	WITHOUT_CLASSIFICATION	6.999317416754672E-8	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999999297420076	WITHOUT_CLASSIFICATION	7.025799244527376E-8	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.9999988628344022	WITHOUT_CLASSIFICATION	1.1371655977873107E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999941155515005	WITHOUT_CLASSIFICATION	5.884448499469141E-6	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.9999998448533076	WITHOUT_CLASSIFICATION	1.5514669234283733E-7	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.9999999742326239	WITHOUT_CLASSIFICATION	2.576737618267499E-8	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.9999980764124241	WITHOUT_CLASSIFICATION	1.923587575806906E-6	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999999815955634	WITHOUT_CLASSIFICATION	1.840443658312917E-8	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.9999963474651697	WITHOUT_CLASSIFICATION	3.6525348303769586E-6	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.9999999573796984	WITHOUT_CLASSIFICATION	4.2620301667594954E-8	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.9999999327421587	WITHOUT_CLASSIFICATION	6.725784129182151E-8	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.9999984751722647	WITHOUT_CLASSIFICATION	1.5248277354032448E-6	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.9999970081777649	WITHOUT_CLASSIFICATION	2.991822235074526E-6	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.999999952456549	WITHOUT_CLASSIFICATION	4.754345095806293E-8	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.9999982953398271	WITHOUT_CLASSIFICATION	1.7046601729263162E-6	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.999972878595985	WITHOUT_CLASSIFICATION	2.7121404014959644E-5	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.9999998769279662	WITHOUT_CLASSIFICATION	1.2307203372644917E-7	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.9999987126004662	WITHOUT_CLASSIFICATION	1.2873995337849332E-6	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.9999793253039627	WITHOUT_CLASSIFICATION	2.0674696037281054E-5	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.9999998493831698	WITHOUT_CLASSIFICATION	1.5061683022148056E-7	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.9999999111549334	WITHOUT_CLASSIFICATION	8.884506656147904E-8	DEFECT
// title	WITHOUT_CLASSIFICATION	0.9999852944094925	WITHOUT_CLASSIFICATION	1.4705590507455294E-5	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.9999992007691382	WITHOUT_CLASSIFICATION	7.99230861816976E-7	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9999950703458398	WITHOUT_CLASSIFICATION	4.9296541602048136E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999999113073394	WITHOUT_CLASSIFICATION	8.869266060540708E-7	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999994280569972	WITHOUT_CLASSIFICATION	5.719430027276439E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999993687142592	WITHOUT_CLASSIFICATION	6.312857408032022E-7	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.9999999989637516	WITHOUT_CLASSIFICATION	1.0362484201023363E-9	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999996378840498	WITHOUT_CLASSIFICATION	3.621159502941711E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999996378840498	WITHOUT_CLASSIFICATION	3.621159502941711E-7	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.999998851372016	WITHOUT_CLASSIFICATION	1.1486279838612894E-6	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.9999999999047879	WITHOUT_CLASSIFICATION	9.521205155137902E-11	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999966273573309	WITHOUT_CLASSIFICATION	3.3726426690629754E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999966273573309	WITHOUT_CLASSIFICATION	3.3726426690629754E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999966273573309	WITHOUT_CLASSIFICATION	3.3726426690629754E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999966273573309	WITHOUT_CLASSIFICATION	3.3726426690629754E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999966273573309	WITHOUT_CLASSIFICATION	3.3726426690629754E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999966273573309	WITHOUT_CLASSIFICATION	3.3726426690629754E-6	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999800479049	WITHOUT_CLASSIFICATION	1.995209498380428E-8	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994381758233	WITHOUT_CLASSIFICATION	5.618241766315524E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999986321884836	WITHOUT_CLASSIFICATION	1.3678115163263736E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999166607105	WITHOUT_CLASSIFICATION	8.333928957277397E-8	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999995619430161	WITHOUT_CLASSIFICATION	4.3805698387035315E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999991043645904	WITHOUT_CLASSIFICATION	8.956354095757312E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.999999408884471	WITHOUT_CLASSIFICATION	5.911155290654314E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999166607105	WITHOUT_CLASSIFICATION	8.333928957277397E-8	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.999999303643002	WITHOUT_CLASSIFICATION	6.963569979872503E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999166607105	WITHOUT_CLASSIFICATION	8.333928957277397E-8	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999166607105	WITHOUT_CLASSIFICATION	8.333928957277397E-8	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999166607105	WITHOUT_CLASSIFICATION	8.333928957277397E-8	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999999197303286	WITHOUT_CLASSIFICATION	8.026967124879196E-8	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999960099226259	WITHOUT_CLASSIFICATION	3.990077374100834E-6	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999854387450083	WITHOUT_CLASSIFICATION	1.4561254991585196E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999854387450083	WITHOUT_CLASSIFICATION	1.4561254991585196E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999960099226259	WITHOUT_CLASSIFICATION	3.990077374100834E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999960099226259	WITHOUT_CLASSIFICATION	3.990077374100834E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999960099226259	WITHOUT_CLASSIFICATION	3.990077374100834E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999960099226259	WITHOUT_CLASSIFICATION	3.990077374100834E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999960099226259	WITHOUT_CLASSIFICATION	3.990077374100834E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999925638221295	WITHOUT_CLASSIFICATION	7.436177870474135E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999925638221295	WITHOUT_CLASSIFICATION	7.436177870474135E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999925638221295	WITHOUT_CLASSIFICATION	7.436177870474135E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999925638221295	WITHOUT_CLASSIFICATION	7.436177870474135E-6	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.9998245680905407	WITHOUT_CLASSIFICATION	1.754319094593745E-4	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.9999976596296154	WITHOUT_CLASSIFICATION	2.3403703846553975E-6	DEFECT
// name	WITHOUT_CLASSIFICATION	0.999998467803584	WITHOUT_CLASSIFICATION	1.5321964159071608E-6	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.9999987202862032	WITHOUT_CLASSIFICATION	1.2797137967585714E-6	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.9999989776533884	WITHOUT_CLASSIFICATION	1.0223466116009143E-6	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.999997302636576	WITHOUT_CLASSIFICATION	2.6973634240135535E-6	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.9999973145624897	WITHOUT_CLASSIFICATION	2.6854375103078927E-6	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.999998524771648	WITHOUT_CLASSIFICATION	1.4752283520280635E-6	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999974010008599	WITHOUT_CLASSIFICATION	2.5989991400896532E-6	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999909757379601	WITHOUT_CLASSIFICATION	9.024262039952339E-6	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.9999983081308539	WITHOUT_CLASSIFICATION	1.6918691461138522E-6	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.99999952497684	WITHOUT_CLASSIFICATION	4.750231600528296E-7	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999970561800071	WITHOUT_CLASSIFICATION	2.9438199929061124E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999966273573309	WITHOUT_CLASSIFICATION	3.3726426690629754E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999991734588033	WITHOUT_CLASSIFICATION	8.265411967539658E-7	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.9999996551054753	WITHOUT_CLASSIFICATION	3.4489452479371446E-7	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.9999997566275978	WITHOUT_CLASSIFICATION	2.433724021683637E-7	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.9999947283519502	WITHOUT_CLASSIFICATION	5.271648049778302E-6	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.999997885470261	WITHOUT_CLASSIFICATION	2.1145297390755484E-6	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.999998576859414	WITHOUT_CLASSIFICATION	1.4231405860919732E-6	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.9999948506179653	WITHOUT_CLASSIFICATION	5.149382034685497E-6	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.9999997301190328	WITHOUT_CLASSIFICATION	2.698809671627958E-7	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.9999889744294634	WITHOUT_CLASSIFICATION	1.1025570536663665E-5	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9999757635890736	WITHOUT_CLASSIFICATION	2.4236410926443294E-5	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.9999515346367175	WITHOUT_CLASSIFICATION	4.846536328254196E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999995433825088	WITHOUT_CLASSIFICATION	4.566174910509517E-7	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999999233113565	WITHOUT_CLASSIFICATION	7.668864359137463E-8	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999999233113565	WITHOUT_CLASSIFICATION	7.668864359137463E-8	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999999312654819	WITHOUT_CLASSIFICATION	6.873451810962744E-8	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999990887710851	WITHOUT_CLASSIFICATION	9.112289149198074E-7	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999990887710851	WITHOUT_CLASSIFICATION	9.112289149198074E-7	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999996972886969	WITHOUT_CLASSIFICATION	3.027113030542993E-7	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9995774931847978	WITHOUT_CLASSIFICATION	4.225068152021221E-4	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9995774931847978	WITHOUT_CLASSIFICATION	4.225068152021221E-4	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999938669737375	WITHOUT_CLASSIFICATION	6.133026262494288E-6	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999938669737375	WITHOUT_CLASSIFICATION	6.133026262494288E-6	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999999366094411	WITHOUT_CLASSIFICATION	6.339055888912444E-8	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999905099612123	WITHOUT_CLASSIFICATION	9.490038787633311E-6	DEFECT
// text	WITHOUT_CLASSIFICATION	0.9999905099612123	WITHOUT_CLASSIFICATION	9.490038787633311E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999909476071182	WITHOUT_CLASSIFICATION	9.052392881797102E-6	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999902493921247	WITHOUT_CLASSIFICATION	9.750607875423674E-6	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999959635681654	WITHOUT_CLASSIFICATION	4.0364318345532845E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751254079	WITHOUT_CLASSIFICATION	1.4248745921479799E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751254079	WITHOUT_CLASSIFICATION	1.4248745921479799E-6	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.9999988373081685	WITHOUT_CLASSIFICATION	1.1626918314589712E-6	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.9999978057603508	WITHOUT_CLASSIFICATION	2.194239649287932E-6	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999987008388821	WITHOUT_CLASSIFICATION	1.299161117927707E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999975173712784	WITHOUT_CLASSIFICATION	2.4826287215506325E-6	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.9999986286547495	WITHOUT_CLASSIFICATION	1.3713452504413587E-6	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.9999976868911442	WITHOUT_CLASSIFICATION	2.3131088559057204E-6	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.9999980141449358	WITHOUT_CLASSIFICATION	1.9858550641752473E-6	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.9999981314949348	WITHOUT_CLASSIFICATION	1.868505065147168E-6	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.999997350979787	WITHOUT_CLASSIFICATION	2.649020212871544E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999715636835309	WITHOUT_CLASSIFICATION	2.8436316469154824E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994381758233	WITHOUT_CLASSIFICATION	5.618241766315524E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999715636835309	WITHOUT_CLASSIFICATION	2.8436316469154824E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
// category	WITHOUT_CLASSIFICATION	0.9999988735726733	WITHOUT_CLASSIFICATION	1.1264273266958602E-6	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.99999917070593	WITHOUT_CLASSIFICATION	8.292940698988069E-7	DEFECT
// value	WITHOUT_CLASSIFICATION	0.9999982678123126	WITHOUT_CLASSIFICATION	1.7321876874296539E-6	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.9999949449100899	WITHOUT_CLASSIFICATION	5.055089910139494E-6	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.9999960924301816	WITHOUT_CLASSIFICATION	3.907569818323724E-6	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.999995733593631	WITHOUT_CLASSIFICATION	4.266406368964579E-6	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.9999993994929256	WITHOUT_CLASSIFICATION	6.005070744402894E-7	DEFECT
// range	WITHOUT_CLASSIFICATION	0.999999490863263	WITHOUT_CLASSIFICATION	5.091367370837509E-7	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.9998128364237124	WITHOUT_CLASSIFICATION	1.871635762875541E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999984027761673	WITHOUT_CLASSIFICATION	1.5972238327700815E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913312	WITHOUT_CLASSIFICATION	1.6253086688571497E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913312	WITHOUT_CLASSIFICATION	1.6253086688571497E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913312	WITHOUT_CLASSIFICATION	1.6253086688571497E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913312	WITHOUT_CLASSIFICATION	1.6253086688571497E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913312	WITHOUT_CLASSIFICATION	1.6253086688571497E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913312	WITHOUT_CLASSIFICATION	1.6253086688571497E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913312	WITHOUT_CLASSIFICATION	1.6253086688571497E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999983746913312	WITHOUT_CLASSIFICATION	1.6253086688571497E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177280162	WITHOUT_CLASSIFICATION	2.3822719839117943E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177280162	WITHOUT_CLASSIFICATION	2.3822719839117943E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177280162	WITHOUT_CLASSIFICATION	2.3822719839117943E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177280162	WITHOUT_CLASSIFICATION	2.3822719839117943E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177280162	WITHOUT_CLASSIFICATION	2.3822719839117943E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177280162	WITHOUT_CLASSIFICATION	2.3822719839117943E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177280162	WITHOUT_CLASSIFICATION	2.3822719839117943E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.9999976177280162	WITHOUT_CLASSIFICATION	2.3822719839117943E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486924791	WITHOUT_CLASSIFICATION	2.551307520831485E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486924791	WITHOUT_CLASSIFICATION	2.551307520831485E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486924791	WITHOUT_CLASSIFICATION	2.551307520831485E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486924791	WITHOUT_CLASSIFICATION	2.551307520831485E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486924791	WITHOUT_CLASSIFICATION	2.551307520831485E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486924791	WITHOUT_CLASSIFICATION	2.551307520831485E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486924791	WITHOUT_CLASSIFICATION	2.551307520831485E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999974486924791	WITHOUT_CLASSIFICATION	2.551307520831485E-6	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999976594002387	WITHOUT_CLASSIFICATION	2.3405997613785187E-6	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999976594002387	WITHOUT_CLASSIFICATION	2.3405997613785187E-6	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999957934606171	WITHOUT_CLASSIFICATION	4.206539382989534E-6	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999978749982582	WITHOUT_CLASSIFICATION	2.125001741773298E-6	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999978749982582	WITHOUT_CLASSIFICATION	2.125001741773298E-6	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999957934606171	WITHOUT_CLASSIFICATION	4.206539382989534E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999991734588033	WITHOUT_CLASSIFICATION	8.265411967539658E-7	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.9999991778133898	WITHOUT_CLASSIFICATION	8.221866102999632E-7	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.999999874961767	WITHOUT_CLASSIFICATION	1.250382329448002E-7	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.9989219482084802	WITHOUT_CLASSIFICATION	0.0010780517915197929	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.9999997033916234	WITHOUT_CLASSIFICATION	2.9660837669736984E-7	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9999995984527769	WITHOUT_CLASSIFICATION	4.015472230214994E-7	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.9999984296871002	WITHOUT_CLASSIFICATION	1.570312899884229E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999996998652048	WITHOUT_CLASSIFICATION	3.001347951880515E-7	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.999999261093103	WITHOUT_CLASSIFICATION	7.389068970278474E-7	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999992042715098	WITHOUT_CLASSIFICATION	7.957284901683343E-7	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999996015405773	WITHOUT_CLASSIFICATION	3.984594226392269E-7	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999998729048479	WITHOUT_CLASSIFICATION	1.2709515212112286E-7	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999995002481755	WITHOUT_CLASSIFICATION	4.997518244240031E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999999356106074	WITHOUT_CLASSIFICATION	6.438939261017809E-8	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999999356106074	WITHOUT_CLASSIFICATION	6.438939261017809E-8	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999984996183221	WITHOUT_CLASSIFICATION	1.5003816778704907E-6	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999984996183221	WITHOUT_CLASSIFICATION	1.5003816778704907E-6	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999986834656711	WITHOUT_CLASSIFICATION	1.3165343288654907E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999996216413858	WITHOUT_CLASSIFICATION	3.7835861414656847E-7	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.9999991186678725	WITHOUT_CLASSIFICATION	8.813321275535881E-7	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.9999998483839728	WITHOUT_CLASSIFICATION	1.5161602710216013E-7	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.999999888838893	WITHOUT_CLASSIFICATION	1.1116110700108673E-7	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.99999992661791	WITHOUT_CLASSIFICATION	7.338208997741549E-8	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999992042715098	WITHOUT_CLASSIFICATION	7.957284901683343E-7	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999996015405773	WITHOUT_CLASSIFICATION	3.984594226392269E-7	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999998729048479	WITHOUT_CLASSIFICATION	1.2709515212112286E-7	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.9999999105722778	WITHOUT_CLASSIFICATION	8.942772224255201E-8	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.9999999798963983	WITHOUT_CLASSIFICATION	2.0103601700307767E-8	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.9999998962152884	WITHOUT_CLASSIFICATION	1.0378471157089504E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999997566780889	WITHOUT_CLASSIFICATION	2.433219111397608E-7	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.9999996849643187	WITHOUT_CLASSIFICATION	3.150356812812962E-7	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999926742204888	WITHOUT_CLASSIFICATION	7.3257795113096915E-6	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9999971245585134	WITHOUT_CLASSIFICATION	2.875441486636609E-6	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.9999863794295196	WITHOUT_CLASSIFICATION	1.3620570480335562E-5	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.9999998865193545	WITHOUT_CLASSIFICATION	1.1348064546536053E-7	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.9999990885113962	WITHOUT_CLASSIFICATION	9.114886037262028E-7	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.9999979198040942	WITHOUT_CLASSIFICATION	2.080195905797471E-6	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999996320961148	WITHOUT_CLASSIFICATION	3.6790388529499957E-7	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.9999851344603063	WITHOUT_CLASSIFICATION	1.4865539693682955E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9998305853083257	WITHOUT_CLASSIFICATION	1.694146916743322E-4	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.9999989596935814	WITHOUT_CLASSIFICATION	1.0403064186032448E-6	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999454848762217	WITHOUT_CLASSIFICATION	5.4515123778276415E-5	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998555834115	WITHOUT_CLASSIFICATION	1.4441658838768473E-7	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998555834115	WITHOUT_CLASSIFICATION	1.4441658838768473E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998017432618	WITHOUT_CLASSIFICATION	1.9825673819804885E-7	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9999992141418024	WITHOUT_CLASSIFICATION	7.858581975868458E-7	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.9994828158219853	WITHOUT_CLASSIFICATION	5.171841780146912E-4	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.9999817738021046	WITHOUT_CLASSIFICATION	1.8226197895403418E-5	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9999912154649251	WITHOUT_CLASSIFICATION	8.784535074929942E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999604449047	WITHOUT_CLASSIFICATION	3.9555095297179876E-7	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.9999987324252807	WITHOUT_CLASSIFICATION	1.26757471929937E-6	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9999987488201507	WITHOUT_CLASSIFICATION	1.2511798492182751E-6	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.9999954543594439	WITHOUT_CLASSIFICATION	4.545640556174666E-6	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.9999982576298008	WITHOUT_CLASSIFICATION	1.7423701992302554E-6	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.9999999652564934	WITHOUT_CLASSIFICATION	3.47435067016503E-8	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.9999921877638751	WITHOUT_CLASSIFICATION	7.812236124898274E-6	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.9999995368477566	WITHOUT_CLASSIFICATION	4.6315224351458607E-7	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.9999953329981057	WITHOUT_CLASSIFICATION	4.66700189431901E-6	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.999993642241171	WITHOUT_CLASSIFICATION	6.357758828894394E-6	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999989137790855	WITHOUT_CLASSIFICATION	1.0862209145422624E-6	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999998865967112	WITHOUT_CLASSIFICATION	1.1340328865818874E-7	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.9999999086295845	WITHOUT_CLASSIFICATION	9.137041549441205E-8	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.9999999522454751	WITHOUT_CLASSIFICATION	4.775452483298169E-8	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.999999987495049	WITHOUT_CLASSIFICATION	1.2504950869383802E-8	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.999997718497088	WITHOUT_CLASSIFICATION	2.281502912055457E-6	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.9999105168100266	WITHOUT_CLASSIFICATION	8.94831899733507E-5	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.9999979800658597	WITHOUT_CLASSIFICATION	2.019934140258526E-6	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999999952282901	WITHOUT_CLASSIFICATION	4.771709908212699E-9	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999999457687588	WITHOUT_CLASSIFICATION	5.4231241300645185E-8	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.9999988338068514	WITHOUT_CLASSIFICATION	1.1661931485886761E-6	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999950242189812	WITHOUT_CLASSIFICATION	4.975781018819841E-6	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.9999987113258247	WITHOUT_CLASSIFICATION	1.288674175244144E-6	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.9999555834540019	WITHOUT_CLASSIFICATION	4.4416545998052485E-5	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999986834656711	WITHOUT_CLASSIFICATION	1.3165343288654907E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999996216413858	WITHOUT_CLASSIFICATION	3.7835861414656847E-7	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.999999994403281	WITHOUT_CLASSIFICATION	5.596719003973393E-9	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998221068588	WITHOUT_CLASSIFICATION	1.7789314110433577E-7	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999999832786524	WITHOUT_CLASSIFICATION	1.6721347727195612E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999844119803	WITHOUT_CLASSIFICATION	1.5588019703453606E-7	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.999999956241552	WITHOUT_CLASSIFICATION	4.375844807609472E-8	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.9999999244584546	WITHOUT_CLASSIFICATION	7.554154530396602E-8	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.9999999758069938	WITHOUT_CLASSIFICATION	2.4193006148865437E-8	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999290547559	WITHOUT_CLASSIFICATION	7.094524406710277E-8	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.9999946489270625	WITHOUT_CLASSIFICATION	5.351072937561674E-6	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.999992063565038	WITHOUT_CLASSIFICATION	7.936434961976738E-6	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.9999399048014342	WITHOUT_CLASSIFICATION	6.0095198565654336E-5	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.9999833635449497	WITHOUT_CLASSIFICATION	1.663645505041567E-5	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.9999988377435234	WITHOUT_CLASSIFICATION	1.1622564766199385E-6	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.9999924672812166	WITHOUT_CLASSIFICATION	7.5327187833507444E-6	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.9999888463372898	WITHOUT_CLASSIFICATION	1.1153662710333472E-5	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.9999905504480359	WITHOUT_CLASSIFICATION	9.4495519641664E-6	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.9999984488061456	WITHOUT_CLASSIFICATION	1.5511938543337426E-6	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.9999205357185653	WITHOUT_CLASSIFICATION	7.946428143465252E-5	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.9999973454868726	WITHOUT_CLASSIFICATION	2.654513127356696E-6	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.9998953995486308	WITHOUT_CLASSIFICATION	1.0460045136910829E-4	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.9999753313659075	WITHOUT_CLASSIFICATION	2.4668634092368295E-5	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.9999799941785303	WITHOUT_CLASSIFICATION	2.000582146960011E-5	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.9999664841643009	WITHOUT_CLASSIFICATION	3.3515835699060294E-5	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.9999944505110935	WITHOUT_CLASSIFICATION	5.549488906495531E-6	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.9997283239904077	WITHOUT_CLASSIFICATION	2.71676009592361E-4	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.9997560779766481	WITHOUT_CLASSIFICATION	2.4392202335197876E-4	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.9999980026845369	WITHOUT_CLASSIFICATION	1.99731546312824E-6	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.9999964338486416	WITHOUT_CLASSIFICATION	3.5661513584461494E-6	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.9999971025995303	WITHOUT_CLASSIFICATION	2.8974004696012463E-6	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.999992649554688	WITHOUT_CLASSIFICATION	7.350445312004446E-6	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.9999938419204847	WITHOUT_CLASSIFICATION	6.158079515295525E-6	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.99995669463319	WITHOUT_CLASSIFICATION	4.330536681009736E-5	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999978015938829	WITHOUT_CLASSIFICATION	2.1984061171252855E-6	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.9999996691648448	WITHOUT_CLASSIFICATION	3.308351550881277E-7	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.9999983585823314	WITHOUT_CLASSIFICATION	1.6414176685056158E-6	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.999999869324554	WITHOUT_CLASSIFICATION	1.3067544592380028E-7	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.9999973300528265	WITHOUT_CLASSIFICATION	2.6699471733930487E-6	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.9999982785490704	WITHOUT_CLASSIFICATION	1.7214509295076225E-6	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9999998965422391	WITHOUT_CLASSIFICATION	1.0345776087149804E-7	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.9999997222654173	WITHOUT_CLASSIFICATION	2.777345827577011E-7	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.9999834030671951	WITHOUT_CLASSIFICATION	1.6596932804931067E-5	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.9999995947112874	WITHOUT_CLASSIFICATION	4.052887126320711E-7	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.9999989760290645	WITHOUT_CLASSIFICATION	1.023970935486827E-6	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.9999441271617007	WITHOUT_CLASSIFICATION	5.5872838299317193E-5	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.9999960291797364	WITHOUT_CLASSIFICATION	3.9708202636186065E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751254079	WITHOUT_CLASSIFICATION	1.4248745921479799E-6	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.9999873315755763	WITHOUT_CLASSIFICATION	1.2668424423726176E-5	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.9982556589240023	WITHOUT_CLASSIFICATION	0.001744341075997787	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.9999309949843236	WITHOUT_CLASSIFICATION	6.900501567638427E-5	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.9994437887746914	WITHOUT_CLASSIFICATION	5.56211225308535E-4	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.9996475698682681	WITHOUT_CLASSIFICATION	3.524301317318037E-4	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999709328232181	WITHOUT_CLASSIFICATION	2.9067176781903194E-5	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.9999709328232181	WITHOUT_CLASSIFICATION	2.9067176781903194E-5	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.999999697444965	WITHOUT_CLASSIFICATION	3.0255503507560454E-7	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.999999697444965	WITHOUT_CLASSIFICATION	3.0255503507560454E-7	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.9998063690544603	WITHOUT_CLASSIFICATION	1.936309455397295E-4	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999887604809995	WITHOUT_CLASSIFICATION	1.123951900055246E-5	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999999406255204	WITHOUT_CLASSIFICATION	5.937447964890694E-8	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999999406255204	WITHOUT_CLASSIFICATION	5.937447964890694E-8	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999761199267093	WITHOUT_CLASSIFICATION	2.3880073290684074E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.999998905868304	WITHOUT_CLASSIFICATION	1.0941316960172306E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999997692850109	WITHOUT_CLASSIFICATION	2.3071498913056293E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999935024171643	WITHOUT_CLASSIFICATION	6.497582835744321E-6	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999997859031425	WITHOUT_CLASSIFICATION	2.1409685748476323E-7	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999965841958135	WITHOUT_CLASSIFICATION	3.4158041864193564E-6	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999937477901217	WITHOUT_CLASSIFICATION	6.252209878190806E-6	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999982993160287	WITHOUT_CLASSIFICATION	1.7006839713342107E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.999997031272245	WITHOUT_CLASSIFICATION	2.968727755004546E-6	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.999997405558393	WITHOUT_CLASSIFICATION	2.59444160697788E-6	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999967013481362	WITHOUT_CLASSIFICATION	3.2986518637740105E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999977014091049	WITHOUT_CLASSIFICATION	2.2985908951526718E-6	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999983470929014	WITHOUT_CLASSIFICATION	1.6529070986905432E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.99999887570779	WITHOUT_CLASSIFICATION	1.1242922099610506E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999959463444827	WITHOUT_CLASSIFICATION	4.053655517283011E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999997335361633	WITHOUT_CLASSIFICATION	2.66463836585579E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.999998905868304	WITHOUT_CLASSIFICATION	1.0941316960172306E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999997692850109	WITHOUT_CLASSIFICATION	2.3071498913056293E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999935024171643	WITHOUT_CLASSIFICATION	6.497582835744321E-6	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999997859031425	WITHOUT_CLASSIFICATION	2.1409685748476323E-7	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999965841958135	WITHOUT_CLASSIFICATION	3.4158041864193564E-6	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999995902182212	WITHOUT_CLASSIFICATION	4.0978177884289355E-7	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999992910944767	WITHOUT_CLASSIFICATION	7.089055234099172E-7	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999999475773494	WITHOUT_CLASSIFICATION	5.2422650443103277E-8	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999986651357322	WITHOUT_CLASSIFICATION	1.3348642677641872E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.999999124440297	WITHOUT_CLASSIFICATION	8.755597029152903E-7	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999929578327659	WITHOUT_CLASSIFICATION	7.042167234153823E-6	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999993528309491	WITHOUT_CLASSIFICATION	6.471690509671603E-7	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.999982785440226	WITHOUT_CLASSIFICATION	1.721455977394699E-5	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999975972202211	WITHOUT_CLASSIFICATION	2.402779778913624E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999967976197672	WITHOUT_CLASSIFICATION	3.2023802328119034E-6	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.999999657299792	WITHOUT_CLASSIFICATION	3.427002080050027E-7	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999982993160287	WITHOUT_CLASSIFICATION	1.7006839713342107E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.9999998428783807	WITHOUT_CLASSIFICATION	1.5712161925033827E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999998919502449	WITHOUT_CLASSIFICATION	1.0804975506551692E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999998919502449	WITHOUT_CLASSIFICATION	1.0804975506551692E-7	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.9999971903066004	WITHOUT_CLASSIFICATION	2.809693399686872E-6	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999994653611644	WITHOUT_CLASSIFICATION	5.34638835691324E-7	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999945150509694	WITHOUT_CLASSIFICATION	5.4849490305950025E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999945150509694	WITHOUT_CLASSIFICATION	5.4849490305950025E-6	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.999996995020801	WITHOUT_CLASSIFICATION	3.0049791988957803E-6	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999975171478696	WITHOUT_CLASSIFICATION	2.4828521304171038E-6	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.9999970955784575	WITHOUT_CLASSIFICATION	2.9044215424857566E-6	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.9999993855063883	WITHOUT_CLASSIFICATION	6.144936116792338E-7	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.999999264437753	WITHOUT_CLASSIFICATION	7.355622469403144E-7	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.9999997679429643	WITHOUT_CLASSIFICATION	2.32057035681888E-7	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.9999962711574197	WITHOUT_CLASSIFICATION	3.7288425802036463E-6	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.9999969768640093	WITHOUT_CLASSIFICATION	3.023135990698629E-6	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.9999988469193689	WITHOUT_CLASSIFICATION	1.1530806310838223E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9998945780625619	WITHOUT_CLASSIFICATION	1.0542193743818504E-4	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999989539704082	WITHOUT_CLASSIFICATION	1.0460295918384668E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999986210236744	WITHOUT_CLASSIFICATION	1.3789763255916326E-6	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999982486393982	WITHOUT_CLASSIFICATION	1.751360601750509E-6	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.9999999619646223	WITHOUT_CLASSIFICATION	3.803537766672308E-8	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.9999984474950447	WITHOUT_CLASSIFICATION	1.5525049551630145E-6	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.9999999851451401	WITHOUT_CLASSIFICATION	1.4854860019320877E-8	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999989562380306	WITHOUT_CLASSIFICATION	1.0437619693827855E-6	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.9999995025489692	WITHOUT_CLASSIFICATION	4.974510307328463E-7	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.999971450140833	WITHOUT_CLASSIFICATION	2.854985916688779E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999941509628253	WITHOUT_CLASSIFICATION	5.849037174791416E-6	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.9999840994947631	WITHOUT_CLASSIFICATION	1.5900505236917224E-5	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999994976691268	WITHOUT_CLASSIFICATION	5.023308732714274E-7	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.999997405558393	WITHOUT_CLASSIFICATION	2.59444160697788E-6	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999967013481362	WITHOUT_CLASSIFICATION	3.2986518637740105E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.999998579970705	WITHOUT_CLASSIFICATION	1.4200292950241777E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999977014091049	WITHOUT_CLASSIFICATION	2.2985908951526718E-6	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.9999983470929014	WITHOUT_CLASSIFICATION	1.6529070986905432E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.99999887570779	WITHOUT_CLASSIFICATION	1.1242922099610506E-6	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.9994541550447967	WITHOUT_CLASSIFICATION	5.458449552033288E-4	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999405377125928	WITHOUT_CLASSIFICATION	5.946228740717478E-5	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999961693265224	WITHOUT_CLASSIFICATION	3.830673477705085E-6	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999997371240525	WITHOUT_CLASSIFICATION	2.628759474491532E-7	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.9999973842005979	WITHOUT_CLASSIFICATION	2.6157994020991403E-6	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999360034102798	WITHOUT_CLASSIFICATION	6.399658972022133E-5	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999989315988159	WITHOUT_CLASSIFICATION	1.0684011841113692E-6	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999948034586389	WITHOUT_CLASSIFICATION	5.196541361085629E-6	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.999966779642353	WITHOUT_CLASSIFICATION	3.322035764693616E-5	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.9999810166674535	WITHOUT_CLASSIFICATION	1.8983332546460944E-5	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.9999165655077752	WITHOUT_CLASSIFICATION	8.343449222470655E-5	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999740571579657	WITHOUT_CLASSIFICATION	2.594284203423518E-5	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.9998627414797691	WITHOUT_CLASSIFICATION	1.3725852023090712E-4	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.999999885699458	WITHOUT_CLASSIFICATION	1.143005420838184E-7	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999862474697949	WITHOUT_CLASSIFICATION	1.3752530204994077E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999996708499176	WITHOUT_CLASSIFICATION	3.2915008243010976E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999546366698	WITHOUT_CLASSIFICATION	4.53633301788656E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999905347867206	WITHOUT_CLASSIFICATION	9.465213279280611E-6	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999999195344174	WITHOUT_CLASSIFICATION	8.046558257127541E-8	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999996415504556	WITHOUT_CLASSIFICATION	3.5844954439388676E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999996162397842	WITHOUT_CLASSIFICATION	3.8376021576724777E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999910402134365	WITHOUT_CLASSIFICATION	8.959786563435107E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999997537648324	WITHOUT_CLASSIFICATION	2.46235167542371E-7	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.9999999160101776	WITHOUT_CLASSIFICATION	8.398982242819048E-8	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.9999998839791453	WITHOUT_CLASSIFICATION	1.1602085467065127E-7	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.99999778437489	WITHOUT_CLASSIFICATION	2.215625110030571E-6	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.9999969394088177	WITHOUT_CLASSIFICATION	3.0605911822560915E-6	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.9999995075151352	WITHOUT_CLASSIFICATION	4.924848647756602E-7	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999952572059526	WITHOUT_CLASSIFICATION	4.742794047294398E-6	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.9999710525880238	WITHOUT_CLASSIFICATION	2.8947411976284605E-5	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9999868942161091	WITHOUT_CLASSIFICATION	1.3105783891023072E-5	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.9999922863207569	WITHOUT_CLASSIFICATION	7.713679243138732E-6	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.999999451848176	WITHOUT_CLASSIFICATION	5.481518239869954E-7	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999990068695792	WITHOUT_CLASSIFICATION	9.931304208148547E-7	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999995025014237	WITHOUT_CLASSIFICATION	4.974985763555752E-7	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999875645924047	WITHOUT_CLASSIFICATION	1.2435407595367086E-5	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999999528304698	WITHOUT_CLASSIFICATION	4.716953028146451E-8	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999996680954768	WITHOUT_CLASSIFICATION	3.319045231476583E-7	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9999917312171706	WITHOUT_CLASSIFICATION	8.268782829380713E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999952708967166	WITHOUT_CLASSIFICATION	4.72910328344319E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999952708967166	WITHOUT_CLASSIFICATION	4.72910328344319E-6	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999882578578754	WITHOUT_CLASSIFICATION	1.1742142124558115E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999986321884836	WITHOUT_CLASSIFICATION	1.3678115163263736E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999995619430161	WITHOUT_CLASSIFICATION	4.3805698387035315E-7	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999991697571866	WITHOUT_CLASSIFICATION	8.302428133616791E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999922087524057	WITHOUT_CLASSIFICATION	7.791247594293951E-6	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9998579606485039	WITHOUT_CLASSIFICATION	1.4203935149612433E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999980600714816	WITHOUT_CLASSIFICATION	1.9399285183368364E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999980600714816	WITHOUT_CLASSIFICATION	1.9399285183368364E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999980600714816	WITHOUT_CLASSIFICATION	1.9399285183368364E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999970226756789	WITHOUT_CLASSIFICATION	2.977324321149541E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.999984254059075	WITHOUT_CLASSIFICATION	1.5745940924988507E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999996768575559	WITHOUT_CLASSIFICATION	3.23142444039518E-7	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999996768575559	WITHOUT_CLASSIFICATION	3.23142444039518E-7	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999978702320572	WITHOUT_CLASSIFICATION	2.1297679427533675E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999979674810288	WITHOUT_CLASSIFICATION	2.0325189711619725E-6	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.9999999065258524	WITHOUT_CLASSIFICATION	9.347414764817903E-8	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.9999980357591444	WITHOUT_CLASSIFICATION	1.9642408556636777E-6	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.9999993645036869	WITHOUT_CLASSIFICATION	6.354963132332042E-7	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.9999982917721659	WITHOUT_CLASSIFICATION	1.7082278341012587E-6	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.9999996022837596	WITHOUT_CLASSIFICATION	3.977162403783177E-7	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.9999995045697144	WITHOUT_CLASSIFICATION	4.954302856015162E-7	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.9999989645530897	WITHOUT_CLASSIFICATION	1.0354469103570968E-6	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.9999998997596061	WITHOUT_CLASSIFICATION	1.0024039382792984E-7	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.9999996066873652	WITHOUT_CLASSIFICATION	3.933126347388169E-7	DEFECT
//key	WITHOUT_CLASSIFICATION	0.9998536147138084	WITHOUT_CLASSIFICATION	1.4638528619163364E-4	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.999993135228403	WITHOUT_CLASSIFICATION	6.86477159703887E-6	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.999869227188059	WITHOUT_CLASSIFICATION	1.3077281194089345E-4	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.9999969763506029	WITHOUT_CLASSIFICATION	3.023649397117933E-6	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.9997920751708763	WITHOUT_CLASSIFICATION	2.079248291235913E-4	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.9999927996397662	WITHOUT_CLASSIFICATION	7.200360233846805E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999993332776017	WITHOUT_CLASSIFICATION	6.667223982946682E-7	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.9999994616508705	WITHOUT_CLASSIFICATION	5.383491295226445E-7	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.9999998031228151	WITHOUT_CLASSIFICATION	1.968771847536054E-7	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.9999998874919981	WITHOUT_CLASSIFICATION	1.1250800193659602E-7	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.9999997841172944	WITHOUT_CLASSIFICATION	2.158827056330388E-7	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.9999877856914196	WITHOUT_CLASSIFICATION	1.2214308580521657E-5	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.9999998731375418	WITHOUT_CLASSIFICATION	1.268624582166984E-7	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999840743144822	WITHOUT_CLASSIFICATION	1.5925685517743696E-5	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.9999999397768077	WITHOUT_CLASSIFICATION	6.0223192257336E-8	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.9999997875100405	WITHOUT_CLASSIFICATION	2.1248995949592244E-7	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.9999997788472614	WITHOUT_CLASSIFICATION	2.2115273861938471E-7	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.9999998953888183	WITHOUT_CLASSIFICATION	1.0461118172746967E-7	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999997593309182	WITHOUT_CLASSIFICATION	2.406690817137041E-7	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999998241193973	WITHOUT_CLASSIFICATION	1.7588060280827063E-7	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998815159198	WITHOUT_CLASSIFICATION	1.1848408020427846E-7	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999884500291158	WITHOUT_CLASSIFICATION	1.1549970884117931E-5	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999953737132129	WITHOUT_CLASSIFICATION	4.6262867870107E-6	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.9999996634344599	WITHOUT_CLASSIFICATION	3.365655401611449E-7	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999988519060702	WITHOUT_CLASSIFICATION	1.1480939297770364E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999996300427607	WITHOUT_CLASSIFICATION	3.699572393139306E-7	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.9999997389363223	WITHOUT_CLASSIFICATION	2.610636776666665E-7	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.9999794427468319	WITHOUT_CLASSIFICATION	2.055725316802395E-5	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.9999992567136071	WITHOUT_CLASSIFICATION	7.432863928517643E-7	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.9999998082258386	WITHOUT_CLASSIFICATION	1.9177416134535805E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999994860727675	WITHOUT_CLASSIFICATION	5.139272325979988E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999998898499618	WITHOUT_CLASSIFICATION	1.1015003817299754E-7	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999994280569972	WITHOUT_CLASSIFICATION	5.719430027276439E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999993687142592	WITHOUT_CLASSIFICATION	6.312857408032022E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994381758233	WITHOUT_CLASSIFICATION	5.618241766315524E-7	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999999528304698	WITHOUT_CLASSIFICATION	4.716953028146451E-8	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999840743144822	WITHOUT_CLASSIFICATION	1.5925685517743696E-5	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.9999997049069287	WITHOUT_CLASSIFICATION	2.9509307139693065E-7	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.9999998954682704	WITHOUT_CLASSIFICATION	1.045317295805573E-7	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999995849232833	WITHOUT_CLASSIFICATION	4.150767167381822E-7	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.9999994407739853	WITHOUT_CLASSIFICATION	5.592260146062218E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999441421554	WITHOUT_CLASSIFICATION	5.5857844564595416E-8	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.9999989033429926	WITHOUT_CLASSIFICATION	1.0966570074215831E-6	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999989343243343	WITHOUT_CLASSIFICATION	1.0656756657259802E-6	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.9999865995471133	WITHOUT_CLASSIFICATION	1.3400452886753877E-5	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.9999999594866047	WITHOUT_CLASSIFICATION	4.051339527050759E-8	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999601873286	WITHOUT_CLASSIFICATION	3.981267130562845E-8	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.9999998123681818	WITHOUT_CLASSIFICATION	1.8763181824127638E-7	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999989343243343	WITHOUT_CLASSIFICATION	1.0656756657259802E-6	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.999999967376213	WITHOUT_CLASSIFICATION	3.262378700516575E-8	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.9999998553273727	WITHOUT_CLASSIFICATION	1.4467262724056023E-7	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.9999999627334679	WITHOUT_CLASSIFICATION	3.7266532074365187E-8	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999013733144	WITHOUT_CLASSIFICATION	9.862668560143571E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999227502282	WITHOUT_CLASSIFICATION	7.724977179360483E-7	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999966009598775	WITHOUT_CLASSIFICATION	3.3990401224418734E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.999998333678821	WITHOUT_CLASSIFICATION	1.6663211791362274E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.999998333678821	WITHOUT_CLASSIFICATION	1.6663211791362274E-6	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999994777825723	WITHOUT_CLASSIFICATION	5.222174276937084E-7	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999996532714512	WITHOUT_CLASSIFICATION	3.467285487604532E-7	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999996532714512	WITHOUT_CLASSIFICATION	3.467285487604532E-7	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999989063687	WITHOUT_CLASSIFICATION	1.0936312494323132E-9	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999995786932	WITHOUT_CLASSIFICATION	4.213066788084457E-10	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.9999999936625819	WITHOUT_CLASSIFICATION	6.3374181152139674E-9	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.9999998411093732	WITHOUT_CLASSIFICATION	1.5889062674354835E-7	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.9999998698668974	WITHOUT_CLASSIFICATION	1.301331026592911E-7	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.999999880191355	WITHOUT_CLASSIFICATION	1.1980864494534691E-7	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.9999993035931638	WITHOUT_CLASSIFICATION	6.964068362646467E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.999961359049173	WITHOUT_CLASSIFICATION	3.864095082690856E-5	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.9999993542536858	WITHOUT_CLASSIFICATION	6.45746314242843E-7	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.9999982688236528	WITHOUT_CLASSIFICATION	1.7311763471653964E-6	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.9999999068861785	WITHOUT_CLASSIFICATION	9.311382152521246E-8	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.9999936813028373	WITHOUT_CLASSIFICATION	6.318697162763092E-6	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.9999997066474178	WITHOUT_CLASSIFICATION	2.933525822535066E-7	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.9999996483013066	WITHOUT_CLASSIFICATION	3.516986933303287E-7	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.9999993056694373	WITHOUT_CLASSIFICATION	6.943305626874339E-7	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.9999991291754201	WITHOUT_CLASSIFICATION	8.708245799259773E-7	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.9999837065907672	WITHOUT_CLASSIFICATION	1.6293409232790902E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999429999422128	WITHOUT_CLASSIFICATION	5.700005778718097E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999429999422128	WITHOUT_CLASSIFICATION	5.700005778718097E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999657980509656	WITHOUT_CLASSIFICATION	3.4201949034416225E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999941155515005	WITHOUT_CLASSIFICATION	5.884448499469141E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999657980509656	WITHOUT_CLASSIFICATION	3.4201949034416225E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999657980509656	WITHOUT_CLASSIFICATION	3.4201949034416225E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999657980509656	WITHOUT_CLASSIFICATION	3.4201949034416225E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999986321884836	WITHOUT_CLASSIFICATION	1.3678115163263736E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999995619430161	WITHOUT_CLASSIFICATION	4.3805698387035315E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999999643069365	WITHOUT_CLASSIFICATION	3.569306342919104E-8	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999978015938829	WITHOUT_CLASSIFICATION	2.1984061171252855E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9998945780625619	WITHOUT_CLASSIFICATION	1.0542193743818504E-4	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.999971450140833	WITHOUT_CLASSIFICATION	2.854985916688779E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999941509628253	WITHOUT_CLASSIFICATION	5.849037174791416E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999998699211423	WITHOUT_CLASSIFICATION	1.300788576920693E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999441421554	WITHOUT_CLASSIFICATION	5.5857844564595416E-8	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999601873286	WITHOUT_CLASSIFICATION	3.981267130562845E-8	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.9999999566117237	WITHOUT_CLASSIFICATION	4.338827633638426E-8	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999971375824518	WITHOUT_CLASSIFICATION	2.862417548257958E-6	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.9999983982524365	WITHOUT_CLASSIFICATION	1.6017475635029911E-6	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.9999997789739176	WITHOUT_CLASSIFICATION	2.210260824640924E-7	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.9999999608268371	WITHOUT_CLASSIFICATION	3.917316291763952E-8	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.9999999748124841	WITHOUT_CLASSIFICATION	2.5187515818368543E-8	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.9999996328452135	WITHOUT_CLASSIFICATION	3.671547864504368E-7	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.9999998979909825	WITHOUT_CLASSIFICATION	1.02009017461868E-7	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999932311601689	WITHOUT_CLASSIFICATION	6.768839831061143E-6	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.9999975563185748	WITHOUT_CLASSIFICATION	2.443681425090975E-6	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.999998557395468	WITHOUT_CLASSIFICATION	1.4426045320647875E-6	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.9999131027046287	WITHOUT_CLASSIFICATION	8.689729537120873E-5	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.9999993668215706	WITHOUT_CLASSIFICATION	6.331784292615347E-7	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999997777629099	WITHOUT_CLASSIFICATION	2.222370900639147E-7	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.9999996882985427	WITHOUT_CLASSIFICATION	3.1170145737381015E-7	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.9999923304001375	WITHOUT_CLASSIFICATION	7.669599862440203E-6	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.9999992312054754	WITHOUT_CLASSIFICATION	7.687945244883547E-7	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.9672341851128174	WITHOUT_CLASSIFICATION	0.03276581488718263	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.9999999151249176	WITHOUT_CLASSIFICATION	8.487508240844387E-8	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.9999978608899176	WITHOUT_CLASSIFICATION	2.139110082322397E-6	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.9999902097828995	WITHOUT_CLASSIFICATION	9.790217100463083E-6	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.9999685079270597	WITHOUT_CLASSIFICATION	3.149207294028658E-5	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999189433991176	WITHOUT_CLASSIFICATION	8.105660088250981E-5	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.9999984254205069	WITHOUT_CLASSIFICATION	1.5745794930660861E-6	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.9999951711902041	WITHOUT_CLASSIFICATION	4.828809795930127E-6	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.9996788140680842	WITHOUT_CLASSIFICATION	3.211859319158305E-4	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9997663998151897	WITHOUT_CLASSIFICATION	2.3360018481039725E-4	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999600723643622	WITHOUT_CLASSIFICATION	3.992763563779916E-5	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.9999883935966878	WITHOUT_CLASSIFICATION	1.1606403312297601E-5	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999997335361633	WITHOUT_CLASSIFICATION	2.66463836585579E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999997335361633	WITHOUT_CLASSIFICATION	2.66463836585579E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999940093566692	WITHOUT_CLASSIFICATION	5.990643330878735E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9998945780625619	WITHOUT_CLASSIFICATION	1.0542193743818504E-4	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999989539704082	WITHOUT_CLASSIFICATION	1.0460295918384668E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999986210236744	WITHOUT_CLASSIFICATION	1.3789763255916326E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9996398225634187	WITHOUT_CLASSIFICATION	3.6017743658139386E-4	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999982486393982	WITHOUT_CLASSIFICATION	1.751360601750509E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999862474697949	WITHOUT_CLASSIFICATION	1.3752530204994077E-5	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999996708499176	WITHOUT_CLASSIFICATION	3.2915008243010976E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999546366698	WITHOUT_CLASSIFICATION	4.53633301788656E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999905347867206	WITHOUT_CLASSIFICATION	9.465213279280611E-6	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999996415504556	WITHOUT_CLASSIFICATION	3.5844954439388676E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999996162397842	WITHOUT_CLASSIFICATION	3.8376021576724777E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999910402134365	WITHOUT_CLASSIFICATION	8.959786563435107E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999997537648324	WITHOUT_CLASSIFICATION	2.46235167542371E-7	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999952572059526	WITHOUT_CLASSIFICATION	4.742794047294398E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999974141185126	WITHOUT_CLASSIFICATION	2.5858814873752042E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999999528304698	WITHOUT_CLASSIFICATION	4.716953028146451E-8	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999952708967166	WITHOUT_CLASSIFICATION	4.72910328344319E-6	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999882578578754	WITHOUT_CLASSIFICATION	1.1742142124558115E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9998579606485039	WITHOUT_CLASSIFICATION	1.4203935149612433E-4	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999980600714816	WITHOUT_CLASSIFICATION	1.9399285183368364E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999980600714816	WITHOUT_CLASSIFICATION	1.9399285183368364E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999970226756789	WITHOUT_CLASSIFICATION	2.977324321149541E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999996768575559	WITHOUT_CLASSIFICATION	3.23142444039518E-7	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999996768575559	WITHOUT_CLASSIFICATION	3.23142444039518E-7	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999978702320572	WITHOUT_CLASSIFICATION	2.1297679427533675E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999979674810288	WITHOUT_CLASSIFICATION	2.0325189711619725E-6	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.9999998347900008	WITHOUT_CLASSIFICATION	1.6520999929565453E-7	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.9999968281066919	WITHOUT_CLASSIFICATION	3.1718933080881807E-6	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999998821644253	WITHOUT_CLASSIFICATION	1.1783557481811232E-7	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.9999998277400507	WITHOUT_CLASSIFICATION	1.7225994940364742E-7	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.9999939018737974	WITHOUT_CLASSIFICATION	6.098126202599964E-6	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.9999995664890573	WITHOUT_CLASSIFICATION	4.3351094276855344E-7	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.9999998702307636	WITHOUT_CLASSIFICATION	1.297692362594707E-7	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9999989567649763	WITHOUT_CLASSIFICATION	1.0432350236994715E-6	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.9999984628267017	WITHOUT_CLASSIFICATION	1.537173298278233E-6	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.9999888253229282	WITHOUT_CLASSIFICATION	1.117467707177819E-5	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.999999726555575	WITHOUT_CLASSIFICATION	2.7344442490864586E-7	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.9999999298194364	WITHOUT_CLASSIFICATION	7.018056352855305E-8	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.9999998870254521	WITHOUT_CLASSIFICATION	1.1297454795988854E-7	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.9999854500352559	WITHOUT_CLASSIFICATION	1.4549964744210547E-5	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999999467547769	WITHOUT_CLASSIFICATION	5.3245223016224214E-8	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.9999713588904033	WITHOUT_CLASSIFICATION	2.864110959670705E-5	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.999966988852545	WITHOUT_CLASSIFICATION	3.301114745508416E-5	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.9996457112348066	WITHOUT_CLASSIFICATION	3.5428876519344677E-4	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.9999980445752761	WITHOUT_CLASSIFICATION	1.955424723864676E-6	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.9999996536200337	WITHOUT_CLASSIFICATION	3.4637996637121737E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999940093566692	WITHOUT_CLASSIFICATION	5.990643330878735E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999958300993183	WITHOUT_CLASSIFICATION	4.169900681747939E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999998898499618	WITHOUT_CLASSIFICATION	1.1015003817299754E-7	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999965764475568	WITHOUT_CLASSIFICATION	3.4235524430714804E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999983405737168	WITHOUT_CLASSIFICATION	1.6594262830571503E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999999113073394	WITHOUT_CLASSIFICATION	8.869266060540708E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994381758233	WITHOUT_CLASSIFICATION	5.618241766315524E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999959635681654	WITHOUT_CLASSIFICATION	4.0364318345532845E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751254079	WITHOUT_CLASSIFICATION	1.4248745921479799E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999975173712784	WITHOUT_CLASSIFICATION	2.4826287215506325E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999715636835309	WITHOUT_CLASSIFICATION	2.8436316469154824E-5	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999903372026264	WITHOUT_CLASSIFICATION	9.662797373677338E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999922087524057	WITHOUT_CLASSIFICATION	7.791247594293951E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.999984254059075	WITHOUT_CLASSIFICATION	1.5745940924988507E-5	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.999961359049173	WITHOUT_CLASSIFICATION	3.864095082690856E-5	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.9985194372514108	WITHOUT_CLASSIFICATION	0.0014805627485893194	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.990623515503172	WITHOUT_CLASSIFICATION	0.009376484496828024	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412253199	WITHOUT_CLASSIFICATION	1.5877468010483742E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208108	WITHOUT_CLASSIFICATION	2.437918919745501E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208108	WITHOUT_CLASSIFICATION	2.437918919745501E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208108	WITHOUT_CLASSIFICATION	2.437918919745501E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208108	WITHOUT_CLASSIFICATION	2.437918919745501E-8	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.999999403500394	WITHOUT_CLASSIFICATION	5.964996060565049E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999997826194603	WITHOUT_CLASSIFICATION	2.173805396973233E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421846	WITHOUT_CLASSIFICATION	1.1715781538572051E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421846	WITHOUT_CLASSIFICATION	1.1715781538572051E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421846	WITHOUT_CLASSIFICATION	1.1715781538572051E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421846	WITHOUT_CLASSIFICATION	1.1715781538572051E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421846	WITHOUT_CLASSIFICATION	1.1715781538572051E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421846	WITHOUT_CLASSIFICATION	1.1715781538572051E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999997826194603	WITHOUT_CLASSIFICATION	2.173805396973233E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999997826194603	WITHOUT_CLASSIFICATION	2.173805396973233E-7	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.9999996691675666	WITHOUT_CLASSIFICATION	3.308324334689168E-7	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.9999996987803187	WITHOUT_CLASSIFICATION	3.0121968130680836E-7	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.9999998876421082	WITHOUT_CLASSIFICATION	1.1235789173458147E-7	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.999999713188206	WITHOUT_CLASSIFICATION	2.8681179399707293E-7	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9999996414738389	WITHOUT_CLASSIFICATION	3.5852616107756113E-7	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999873350148383	WITHOUT_CLASSIFICATION	1.2664985161712254E-5	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999873350148383	WITHOUT_CLASSIFICATION	1.2664985161712254E-5	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999993414372877	WITHOUT_CLASSIFICATION	6.585627122811701E-7	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.9999998524659236	WITHOUT_CLASSIFICATION	1.4753407629379045E-7	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.999999598225647	WITHOUT_CLASSIFICATION	4.0177435301718264E-7	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.9999994534575272	WITHOUT_CLASSIFICATION	5.465424729386327E-7	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.9999994939594703	WITHOUT_CLASSIFICATION	5.060405296721336E-7	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9999994950866586	WITHOUT_CLASSIFICATION	5.049133414570552E-7	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.9999867224416498	WITHOUT_CLASSIFICATION	1.3277558350201852E-5	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999440844255	WITHOUT_CLASSIFICATION	5.5915574570209285E-8	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999995591064788	WITHOUT_CLASSIFICATION	4.4089352128761304E-7	DEFECT
// background	WITHOUT_CLASSIFICATION	0.9999981223976675	WITHOUT_CLASSIFICATION	1.8776023325435415E-6	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.9999852260876848	WITHOUT_CLASSIFICATION	1.4773912315183108E-5	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9999997122076255	WITHOUT_CLASSIFICATION	2.877923745113512E-7	DEFECT
// view	WITHOUT_CLASSIFICATION	0.9999937352822691	WITHOUT_CLASSIFICATION	6.264717730805355E-6	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.9999947524751378	WITHOUT_CLASSIFICATION	5.247524862220781E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994381758233	WITHOUT_CLASSIFICATION	5.618241766315524E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999959635681654	WITHOUT_CLASSIFICATION	4.0364318345532845E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751254079	WITHOUT_CLASSIFICATION	1.4248745921479799E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999715636835309	WITHOUT_CLASSIFICATION	2.8436316469154824E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.999999682691668	WITHOUT_CLASSIFICATION	3.173083321014558E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999991081284678	WITHOUT_CLASSIFICATION	8.91871532195007E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999997566780889	WITHOUT_CLASSIFICATION	2.433219111397608E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.999961359049173	WITHOUT_CLASSIFICATION	3.864095082690856E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999998412253199	WITHOUT_CLASSIFICATION	1.5877468010483742E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208108	WITHOUT_CLASSIFICATION	2.437918919745501E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999756208108	WITHOUT_CLASSIFICATION	2.437918919745501E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421846	WITHOUT_CLASSIFICATION	1.1715781538572051E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421846	WITHOUT_CLASSIFICATION	1.1715781538572051E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999998828421846	WITHOUT_CLASSIFICATION	1.1715781538572051E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999997826194603	WITHOUT_CLASSIFICATION	2.173805396973233E-7	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999993414372877	WITHOUT_CLASSIFICATION	6.585627122811701E-7	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999440844255	WITHOUT_CLASSIFICATION	5.5915574570209285E-8	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999440844255	WITHOUT_CLASSIFICATION	5.5915574570209285E-8	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999995591064788	WITHOUT_CLASSIFICATION	4.4089352128761304E-7	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.9999977169196773	WITHOUT_CLASSIFICATION	2.283080322699515E-6	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.9999984113386076	WITHOUT_CLASSIFICATION	1.5886613923562524E-6	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.9999995609646996	WITHOUT_CLASSIFICATION	4.3903530038147695E-7	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.999978944065148	WITHOUT_CLASSIFICATION	2.105593485212216E-5	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.9999989888755442	WITHOUT_CLASSIFICATION	1.0111244558043177E-6	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.9999998472127946	WITHOUT_CLASSIFICATION	1.527872054110279E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999996246975998	WITHOUT_CLASSIFICATION	3.753024001708214E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999998399804965	WITHOUT_CLASSIFICATION	1.6001950349071694E-7	DEFECT
// label	WITHOUT_CLASSIFICATION	0.9999980771656778	WITHOUT_CLASSIFICATION	1.92283432218278E-6	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.9999999143505744	WITHOUT_CLASSIFICATION	8.564942563179021E-8	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.9999999001341549	WITHOUT_CLASSIFICATION	9.986584517887121E-8	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.9999986759208929	WITHOUT_CLASSIFICATION	1.3240791071506678E-6	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.9999997695005354	WITHOUT_CLASSIFICATION	2.3049946458977117E-7	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.9999997041526651	WITHOUT_CLASSIFICATION	2.958473348534094E-7	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.9999999089647552	WITHOUT_CLASSIFICATION	9.103524474018535E-8	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.9999983884207125	WITHOUT_CLASSIFICATION	1.6115792873813396E-6	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999992273942429	WITHOUT_CLASSIFICATION	7.726057571004463E-7	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.9999998284786653	WITHOUT_CLASSIFICATION	1.7152133471880347E-7	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.9999999315541689	WITHOUT_CLASSIFICATION	6.844583113329244E-8	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.999999924917337	WITHOUT_CLASSIFICATION	7.508266301341017E-8	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.9999998567061082	WITHOUT_CLASSIFICATION	1.4329389182958893E-7	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.999999967182859	WITHOUT_CLASSIFICATION	3.281714098218465E-8	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.9999860620340275	WITHOUT_CLASSIFICATION	1.3937965972631301E-5	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.9999905899585294	WITHOUT_CLASSIFICATION	9.410041470495184E-6	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.9999979787272618	WITHOUT_CLASSIFICATION	2.021272738240142E-6	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.9999998693439912	WITHOUT_CLASSIFICATION	1.3065600885191104E-7	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.9999999469736952	WITHOUT_CLASSIFICATION	5.302630467636436E-8	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.9999998241426263	WITHOUT_CLASSIFICATION	1.75857373746686E-7	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999999482051729	WITHOUT_CLASSIFICATION	5.179482697937912E-8	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.9999997418082752	WITHOUT_CLASSIFICATION	2.581917247794584E-7	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.9999999767355806	WITHOUT_CLASSIFICATION	2.3264419404698446E-8	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.9999999295597262	WITHOUT_CLASSIFICATION	7.044027384765807E-8	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.9999999759110569	WITHOUT_CLASSIFICATION	2.4088943179058947E-8	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.9999999904742631	WITHOUT_CLASSIFICATION	9.525736882116015E-9	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999999394195059	WITHOUT_CLASSIFICATION	6.058049410106892E-8	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.999999944728385	WITHOUT_CLASSIFICATION	5.5271614935806106E-8	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999999361086487	WITHOUT_CLASSIFICATION	6.389135126097685E-8	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999998249266946	WITHOUT_CLASSIFICATION	1.7507330549689562E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999950713386409	WITHOUT_CLASSIFICATION	4.9286613592036835E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.999999967182859	WITHOUT_CLASSIFICATION	3.281714098218465E-8	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999999633994977	WITHOUT_CLASSIFICATION	3.6600502392263385E-8	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.9999999539102041	WITHOUT_CLASSIFICATION	4.6089795963234157E-8	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.9999999587933739	WITHOUT_CLASSIFICATION	4.1206626112242096E-8	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.9999975868089286	WITHOUT_CLASSIFICATION	2.4131910714195387E-6	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.9999998310511007	WITHOUT_CLASSIFICATION	1.6894889930563844E-7	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.99998427259812	WITHOUT_CLASSIFICATION	1.5727401880006307E-5	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.9999992730569571	WITHOUT_CLASSIFICATION	7.269430427573022E-7	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.9999993940313691	WITHOUT_CLASSIFICATION	6.059686309292949E-7	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.9999983499180426	WITHOUT_CLASSIFICATION	1.6500819574345965E-6	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.9999986793455843	WITHOUT_CLASSIFICATION	1.320654415673146E-6	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.9999945499554368	WITHOUT_CLASSIFICATION	5.450044563205943E-6	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.999998894768035	WITHOUT_CLASSIFICATION	1.1052319649528332E-6	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.9999963983003397	WITHOUT_CLASSIFICATION	3.6016996602839773E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999937642831	WITHOUT_CLASSIFICATION	6.235716979128927E-9	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999937642831	WITHOUT_CLASSIFICATION	6.235716979128927E-9	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999937642831	WITHOUT_CLASSIFICATION	6.235716979128927E-9	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999871499575222	WITHOUT_CLASSIFICATION	1.285004247767702E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999871499575222	WITHOUT_CLASSIFICATION	1.285004247767702E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999871499575222	WITHOUT_CLASSIFICATION	1.285004247767702E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999395542142	WITHOUT_CLASSIFICATION	6.044578585953243E-8	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999395542142	WITHOUT_CLASSIFICATION	6.044578585953243E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999442347718	WITHOUT_CLASSIFICATION	5.576522834518768E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999442347718	WITHOUT_CLASSIFICATION	5.576522834518768E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999442347718	WITHOUT_CLASSIFICATION	5.576522834518768E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999442347718	WITHOUT_CLASSIFICATION	5.576522834518768E-8	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994997844831	WITHOUT_CLASSIFICATION	5.002155169179238E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994997844831	WITHOUT_CLASSIFICATION	5.002155169179238E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994997844831	WITHOUT_CLASSIFICATION	5.002155169179238E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994997844831	WITHOUT_CLASSIFICATION	5.002155169179238E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999991116825172	WITHOUT_CLASSIFICATION	8.883174827897858E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999991116825172	WITHOUT_CLASSIFICATION	8.883174827897858E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999991116825172	WITHOUT_CLASSIFICATION	8.883174827897858E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999991116825172	WITHOUT_CLASSIFICATION	8.883174827897858E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999991116825172	WITHOUT_CLASSIFICATION	8.883174827897858E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999396275988	WITHOUT_CLASSIFICATION	6.037240111858729E-8	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999396275988	WITHOUT_CLASSIFICATION	6.037240111858729E-8	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999396275988	WITHOUT_CLASSIFICATION	6.037240111858729E-8	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999396275988	WITHOUT_CLASSIFICATION	6.037240111858729E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999997921413399	WITHOUT_CLASSIFICATION	2.078586601672442E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999997921413399	WITHOUT_CLASSIFICATION	2.078586601672442E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999395542142	WITHOUT_CLASSIFICATION	6.044578585953243E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999442347718	WITHOUT_CLASSIFICATION	5.576522834518768E-8	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994997844831	WITHOUT_CLASSIFICATION	5.002155169179238E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999991116825172	WITHOUT_CLASSIFICATION	8.883174827897858E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999999396275988	WITHOUT_CLASSIFICATION	6.037240111858729E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999997921413399	WITHOUT_CLASSIFICATION	2.078586601672442E-7	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999999642419453	WITHOUT_CLASSIFICATION	3.575805477372001E-8	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999999348170558	WITHOUT_CLASSIFICATION	6.518294415633414E-8	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.9999989721894513	WITHOUT_CLASSIFICATION	1.027810548649647E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999884865779906	WITHOUT_CLASSIFICATION	1.1513422009462457E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999884865779906	WITHOUT_CLASSIFICATION	1.1513422009462457E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999790761450632	WITHOUT_CLASSIFICATION	2.092385493678996E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999790761450632	WITHOUT_CLASSIFICATION	2.092385493678996E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999790761450632	WITHOUT_CLASSIFICATION	2.092385493678996E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287681	WITHOUT_CLASSIFICATION	9.037123199943993E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287681	WITHOUT_CLASSIFICATION	9.037123199943993E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.9999119616605872	WITHOUT_CLASSIFICATION	8.803833941284839E-5	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.9999999530198777	WITHOUT_CLASSIFICATION	4.698012231383853E-8	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.9999994207951953	WITHOUT_CLASSIFICATION	5.792048047486944E-7	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.9999997954846191	WITHOUT_CLASSIFICATION	2.0451538088733038E-7	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.999998646545645	WITHOUT_CLASSIFICATION	1.3534543550346495E-6	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.9999996285613859	WITHOUT_CLASSIFICATION	3.714386141568301E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999988519060702	WITHOUT_CLASSIFICATION	1.1480939297770364E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999996300427607	WITHOUT_CLASSIFICATION	3.699572393139306E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999441421554	WITHOUT_CLASSIFICATION	5.5857844564595416E-8	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999601873286	WITHOUT_CLASSIFICATION	3.981267130562845E-8	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999884865779906	WITHOUT_CLASSIFICATION	1.1513422009462457E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999790761450632	WITHOUT_CLASSIFICATION	2.092385493678996E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287681	WITHOUT_CLASSIFICATION	9.037123199943993E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287681	WITHOUT_CLASSIFICATION	9.037123199943993E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287681	WITHOUT_CLASSIFICATION	9.037123199943993E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287681	WITHOUT_CLASSIFICATION	9.037123199943993E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999991224490729	WITHOUT_CLASSIFICATION	8.775509272025072E-7	DEFECT
// map	WITHOUT_CLASSIFICATION	0.9999961552609266	WITHOUT_CLASSIFICATION	3.844739073406762E-6	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.9999999850654268	WITHOUT_CLASSIFICATION	1.493457326103499E-8	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999962990783	WITHOUT_CLASSIFICATION	3.70092173787767E-9	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999686075837	WITHOUT_CLASSIFICATION	3.13924163792958E-8	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.9999999931150912	WITHOUT_CLASSIFICATION	6.884908716003693E-9	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999971713803	WITHOUT_CLASSIFICATION	2.828619665041439E-9	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.9999999902264382	WITHOUT_CLASSIFICATION	9.773561803203877E-9	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999999943395076	WITHOUT_CLASSIFICATION	5.660492412099917E-9	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999284326373	WITHOUT_CLASSIFICATION	7.156736262644013E-8	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999491437039	WITHOUT_CLASSIFICATION	5.085629612541215E-8	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999998246158285	WITHOUT_CLASSIFICATION	1.7538417148695105E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999976521508602	WITHOUT_CLASSIFICATION	2.347849139717546E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999976521508602	WITHOUT_CLASSIFICATION	2.347849139717546E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999976521508602	WITHOUT_CLASSIFICATION	2.347849139717546E-6	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.9999999296199094	WITHOUT_CLASSIFICATION	7.038009065859634E-8	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.9999996378179734	WITHOUT_CLASSIFICATION	3.621820265363044E-7	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.9999996404344904	WITHOUT_CLASSIFICATION	3.59565509660449E-7	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.9999994723021028	WITHOUT_CLASSIFICATION	5.276978972838507E-7	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.9999996486528763	WITHOUT_CLASSIFICATION	3.513471237138438E-7	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999853709549	WITHOUT_CLASSIFICATION	1.4629045184849215E-8	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999983981028684	WITHOUT_CLASSIFICATION	1.601897131692088E-6	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.999998654650456	WITHOUT_CLASSIFICATION	1.3453495439505576E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999998776455981	WITHOUT_CLASSIFICATION	1.2235440195666316E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999991318250563	WITHOUT_CLASSIFICATION	8.681749437323558E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999988519060702	WITHOUT_CLASSIFICATION	1.1480939297770364E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999996300427607	WITHOUT_CLASSIFICATION	3.699572393139306E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287681	WITHOUT_CLASSIFICATION	9.037123199943993E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999991224490729	WITHOUT_CLASSIFICATION	8.775509272025072E-7	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999998776455981	WITHOUT_CLASSIFICATION	1.2235440195666316E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999991318250563	WITHOUT_CLASSIFICATION	8.681749437323558E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999996548670989	WITHOUT_CLASSIFICATION	3.451329012042615E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997069521297	WITHOUT_CLASSIFICATION	2.9304787032575685E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997069521297	WITHOUT_CLASSIFICATION	2.9304787032575685E-7	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9996698961733684	WITHOUT_CLASSIFICATION	3.3010382663159585E-4	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.9999999887309551	WITHOUT_CLASSIFICATION	1.1269044964106626E-8	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.9999993765101849	WITHOUT_CLASSIFICATION	6.234898150652033E-7	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.9999998950388901	WITHOUT_CLASSIFICATION	1.0496110996933578E-7	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.999999968030174	WITHOUT_CLASSIFICATION	3.196982594059992E-8	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.9999999133992643	WITHOUT_CLASSIFICATION	8.660073567336914E-8	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.9999998604364551	WITHOUT_CLASSIFICATION	1.3956354502894045E-7	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.9999971199197112	WITHOUT_CLASSIFICATION	2.880080288814656E-6	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999971214813879	WITHOUT_CLASSIFICATION	2.87851861217382E-6	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999975824824094	WITHOUT_CLASSIFICATION	2.417517590422985E-6	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.999999999253879	WITHOUT_CLASSIFICATION	7.461210589028821E-10	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.9999956975216047	WITHOUT_CLASSIFICATION	4.3024783954145315E-6	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.9999993337188553	WITHOUT_CLASSIFICATION	6.662811447235015E-7	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.9999994606149923	WITHOUT_CLASSIFICATION	5.393850076939483E-7	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.9999998149985464	WITHOUT_CLASSIFICATION	1.8500145359862987E-7	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.9999975254855379	WITHOUT_CLASSIFICATION	2.474514462058958E-6	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.9999998928809825	WITHOUT_CLASSIFICATION	1.0711901763455901E-7	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.9999998317522294	WITHOUT_CLASSIFICATION	1.6824777051759242E-7	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.9999999665010166	WITHOUT_CLASSIFICATION	3.3498983401806337E-8	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.999999612415198	WITHOUT_CLASSIFICATION	3.8758480196088284E-7	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.999999947116703	WITHOUT_CLASSIFICATION	5.2883297002804814E-8	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.9999915188381319	WITHOUT_CLASSIFICATION	8.481161868128284E-6	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999990578203718	WITHOUT_CLASSIFICATION	9.421796281043925E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999975207647684	WITHOUT_CLASSIFICATION	2.4792352315036457E-6	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.9999921139483459	WITHOUT_CLASSIFICATION	7.886051654218758E-6	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.9999972468652111	WITHOUT_CLASSIFICATION	2.75313478886247E-6	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.9999977122848306	WITHOUT_CLASSIFICATION	2.287715169427871E-6	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.9999979069945024	WITHOUT_CLASSIFICATION	2.0930054975894782E-6	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.9998338199488962	WITHOUT_CLASSIFICATION	1.6618005110386185E-4	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.9999999865897666	WITHOUT_CLASSIFICATION	1.3410233381440228E-8	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.9999997270717684	WITHOUT_CLASSIFICATION	2.729282316449945E-7	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.9999950033959691	WITHOUT_CLASSIFICATION	4.996604030867637E-6	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.999999788124294	WITHOUT_CLASSIFICATION	2.118757059661044E-7	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.9999995896576543	WITHOUT_CLASSIFICATION	4.1034234562220916E-7	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.999999699447104	WITHOUT_CLASSIFICATION	3.005528959859467E-7	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.9999984920624186	WITHOUT_CLASSIFICATION	1.5079375813848918E-6	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.9999998944194478	WITHOUT_CLASSIFICATION	1.0558055218192174E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.999999113073394	WITHOUT_CLASSIFICATION	8.869266060540708E-7	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999941155515005	WITHOUT_CLASSIFICATION	5.884448499469141E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999800479049	WITHOUT_CLASSIFICATION	1.995209498380428E-8	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.999999408884471	WITHOUT_CLASSIFICATION	5.911155290654314E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999994381758233	WITHOUT_CLASSIFICATION	5.618241766315524E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999991043645904	WITHOUT_CLASSIFICATION	8.956354095757312E-7	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999985751254079	WITHOUT_CLASSIFICATION	1.4248745921479799E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999649662908747	WITHOUT_CLASSIFICATION	3.503370912531977E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.999999682691668	WITHOUT_CLASSIFICATION	3.173083321014558E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.999961359049173	WITHOUT_CLASSIFICATION	3.864095082690856E-5	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999997777629099	WITHOUT_CLASSIFICATION	2.222370900639147E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999998910481552	WITHOUT_CLASSIFICATION	1.0895184476968495E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999976521508602	WITHOUT_CLASSIFICATION	2.347849139717546E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999976521508602	WITHOUT_CLASSIFICATION	2.347849139717546E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999976521508602	WITHOUT_CLASSIFICATION	2.347849139717546E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997069521297	WITHOUT_CLASSIFICATION	2.9304787032575685E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997069521297	WITHOUT_CLASSIFICATION	2.9304787032575685E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997069521297	WITHOUT_CLASSIFICATION	2.9304787032575685E-7	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999990578203718	WITHOUT_CLASSIFICATION	9.421796281043925E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999975207647684	WITHOUT_CLASSIFICATION	2.4792352315036457E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9996877369176537	WITHOUT_CLASSIFICATION	3.122630823462821E-4	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.9999998026096462	WITHOUT_CLASSIFICATION	1.9739035380288896E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999999313274099	WITHOUT_CLASSIFICATION	6.867259011618209E-8	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999999313274099	WITHOUT_CLASSIFICATION	6.867259011618209E-8	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.9999999585804326	WITHOUT_CLASSIFICATION	4.1419567366823236E-8	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.9999994778303382	WITHOUT_CLASSIFICATION	5.221696619013804E-7	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.9999977441767021	WITHOUT_CLASSIFICATION	2.2558232979991776E-6	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.9999987992286068	WITHOUT_CLASSIFICATION	1.2007713931774978E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999998238646111	WITHOUT_CLASSIFICATION	1.7613538893861287E-7	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999998238646111	WITHOUT_CLASSIFICATION	1.7613538893861287E-7	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.9999997293251558	WITHOUT_CLASSIFICATION	2.706748442035145E-7	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.9999993894673866	WITHOUT_CLASSIFICATION	6.105326132996459E-7	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.9999998749710959	WITHOUT_CLASSIFICATION	1.2502890409046296E-7	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.9999999065264272	WITHOUT_CLASSIFICATION	9.347357282732562E-8	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.9999999375579763	WITHOUT_CLASSIFICATION	6.244202360544703E-8	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999862487754	WITHOUT_CLASSIFICATION	1.37512246849684E-8	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.9999951576197624	WITHOUT_CLASSIFICATION	4.8423802375986784E-6	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.9999998491757385	WITHOUT_CLASSIFICATION	1.5082426154712658E-7	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.9999999490588946	WITHOUT_CLASSIFICATION	5.09411055097336E-8	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.999999878944654	WITHOUT_CLASSIFICATION	1.21055345896092E-7	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.9999998583345594	WITHOUT_CLASSIFICATION	1.4166544067655854E-7	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.9999997599926554	WITHOUT_CLASSIFICATION	2.400073445489708E-7	DEFECT
// line	WITHOUT_CLASSIFICATION	0.999995365798803	WITHOUT_CLASSIFICATION	4.63420119697955E-6	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.9998931834624748	WITHOUT_CLASSIFICATION	1.0681653752519104E-4	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.9999999039222784	WITHOUT_CLASSIFICATION	9.607772162704967E-8	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.9999981910450648	WITHOUT_CLASSIFICATION	1.8089549351518523E-6	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.9999977509337812	WITHOUT_CLASSIFICATION	2.249066218861325E-6	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.9999992634962994	WITHOUT_CLASSIFICATION	7.365037006599165E-7	DEFECT
// border	WITHOUT_CLASSIFICATION	0.9999994887280094	WITHOUT_CLASSIFICATION	5.112719905101096E-7	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.9999971664279728	WITHOUT_CLASSIFICATION	2.8335720272242784E-6	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999968218495598	WITHOUT_CLASSIFICATION	3.1781504401417723E-6	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999999441589205	WITHOUT_CLASSIFICATION	5.584107968271108E-8	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999975171478696	WITHOUT_CLASSIFICATION	2.4828521304171038E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999996548670989	WITHOUT_CLASSIFICATION	3.451329012042615E-7	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9993026061864579	WITHOUT_CLASSIFICATION	6.97393813542071E-4	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999968218495598	WITHOUT_CLASSIFICATION	3.1781504401417723E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999998799332632	WITHOUT_CLASSIFICATION	1.2006673680399307E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999963072620734	WITHOUT_CLASSIFICATION	3.6927379264048953E-6	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999963072620734	WITHOUT_CLASSIFICATION	3.6927379264048953E-6	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999996169962246	WITHOUT_CLASSIFICATION	3.830037753224226E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999996169962246	WITHOUT_CLASSIFICATION	3.830037753224226E-7	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999993893035888	WITHOUT_CLASSIFICATION	6.10696411303703E-7	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.999999992025205	WITHOUT_CLASSIFICATION	7.974794982337218E-9	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.9999999402528426	WITHOUT_CLASSIFICATION	5.974715744142336E-8	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.9999994508781146	WITHOUT_CLASSIFICATION	5.491218854425711E-7	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999912390805467	WITHOUT_CLASSIFICATION	8.760919453357774E-6	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999912390805467	WITHOUT_CLASSIFICATION	8.760919453357774E-6	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.9999592813590507	WITHOUT_CLASSIFICATION	4.0718640949321747E-5	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.999999941671216	WITHOUT_CLASSIFICATION	5.8328783906130574E-8	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.9999999893506104	WITHOUT_CLASSIFICATION	1.064938951403447E-8	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.999999724512073	WITHOUT_CLASSIFICATION	2.7548792699169536E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.999999537341516	WITHOUT_CLASSIFICATION	4.6265848398173855E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999976640249235	WITHOUT_CLASSIFICATION	2.3359750765884465E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999998759701905	WITHOUT_CLASSIFICATION	1.2402980951946633E-7	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999881641960211	WITHOUT_CLASSIFICATION	1.183580397888252E-5	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999881641960211	WITHOUT_CLASSIFICATION	1.183580397888252E-5	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999991308775018	WITHOUT_CLASSIFICATION	8.691224982075405E-7	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.9999999867585354	WITHOUT_CLASSIFICATION	1.3241464674981396E-8	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.9999999199653833	WITHOUT_CLASSIFICATION	8.003461672659566E-8	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.9996410655336886	WITHOUT_CLASSIFICATION	3.5893446631148545E-4	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.999972553317725	WITHOUT_CLASSIFICATION	2.7446682274978215E-5	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.9998380114776313	WITHOUT_CLASSIFICATION	1.6198852236868992E-4	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.9999945284126233	WITHOUT_CLASSIFICATION	5.471587376685136E-6	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.999972661648285	WITHOUT_CLASSIFICATION	2.7338351714943372E-5	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.9999938398305928	WITHOUT_CLASSIFICATION	6.160169407287915E-6	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.9999993454263907	WITHOUT_CLASSIFICATION	6.545736092607084E-7	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.9999999567312222	WITHOUT_CLASSIFICATION	4.3268777919305835E-8	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.9999997400150659	WITHOUT_CLASSIFICATION	2.5998493410485985E-7	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.9999972622380165	WITHOUT_CLASSIFICATION	2.7377619834807654E-6	DEFECT
// key	WITHOUT_CLASSIFICATION	0.999988722349842	WITHOUT_CLASSIFICATION	1.1277650157959563E-5	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999998298630188	WITHOUT_CLASSIFICATION	1.7013698105225526E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994362559135	WITHOUT_CLASSIFICATION	5.637440864251352E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998160195718	WITHOUT_CLASSIFICATION	1.8398042833405783E-7	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.9999977845478222	WITHOUT_CLASSIFICATION	2.2154521777786866E-6	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.999997290616725	WITHOUT_CLASSIFICATION	2.7093832749887953E-6	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.9999971203063143	WITHOUT_CLASSIFICATION	2.8796936857910644E-6	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.9999993209022535	WITHOUT_CLASSIFICATION	6.790977463987452E-7	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999999935307985	WITHOUT_CLASSIFICATION	6.4692014368015976E-9	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999995202111522	WITHOUT_CLASSIFICATION	4.797888478129801E-7	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9999999419709548	WITHOUT_CLASSIFICATION	5.802904530882731E-8	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.999999941671216	WITHOUT_CLASSIFICATION	5.8328783906130574E-8	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.999999537341516	WITHOUT_CLASSIFICATION	4.6265848398173855E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.999999537341516	WITHOUT_CLASSIFICATION	4.6265848398173855E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999485097406	WITHOUT_CLASSIFICATION	5.1490259412939335E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999485097406	WITHOUT_CLASSIFICATION	5.1490259412939335E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999485097406	WITHOUT_CLASSIFICATION	5.1490259412939335E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999485097406	WITHOUT_CLASSIFICATION	5.1490259412939335E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999976640249235	WITHOUT_CLASSIFICATION	2.3359750765884465E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999976640249235	WITHOUT_CLASSIFICATION	2.3359750765884465E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999976640249235	WITHOUT_CLASSIFICATION	2.3359750765884465E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999976640249235	WITHOUT_CLASSIFICATION	2.3359750765884465E-6	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999995202111522	WITHOUT_CLASSIFICATION	4.797888478129801E-7	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.9998088269395566	WITHOUT_CLASSIFICATION	1.911730604433574E-4	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.999929708577318	WITHOUT_CLASSIFICATION	7.02914226820642E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.9999914910711554	WITHOUT_CLASSIFICATION	8.508928844748038E-6	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.999999900614815	WITHOUT_CLASSIFICATION	9.938518497982228E-8	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.9999869605125756	WITHOUT_CLASSIFICATION	1.3039487424300278E-5	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.9999918129666108	WITHOUT_CLASSIFICATION	8.187033389273742E-6	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.9999981541967029	WITHOUT_CLASSIFICATION	1.8458032970866406E-6	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.9999998306803857	WITHOUT_CLASSIFICATION	1.693196143134698E-7	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999999342824493	WITHOUT_CLASSIFICATION	6.571755074699951E-8	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999999342824493	WITHOUT_CLASSIFICATION	6.571755074699951E-8	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.9999997679850393	WITHOUT_CLASSIFICATION	2.3201496076829866E-7	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.9999946827505453	WITHOUT_CLASSIFICATION	5.3172494547825895E-6	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.999405041042917	WITHOUT_CLASSIFICATION	5.949589570829439E-4	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.9997954508308422	WITHOUT_CLASSIFICATION	2.045491691576987E-4	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.9999173338627274	WITHOUT_CLASSIFICATION	8.266613727264479E-5	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9999671135117868	WITHOUT_CLASSIFICATION	3.2886488213177015E-5	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.9999394819330301	WITHOUT_CLASSIFICATION	6.051806696987697E-5	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.9999664989241902	WITHOUT_CLASSIFICATION	3.3501075809747704E-5	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.9999919377195476	WITHOUT_CLASSIFICATION	8.062280452362102E-6	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.9999894567648255	WITHOUT_CLASSIFICATION	1.0543235174364072E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999998584983221	WITHOUT_CLASSIFICATION	1.415016779649529E-7	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999998584983221	WITHOUT_CLASSIFICATION	1.415016779649529E-7	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999775472330003	WITHOUT_CLASSIFICATION	2.245276699975461E-5	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.9999999018991973	WITHOUT_CLASSIFICATION	9.810080273711166E-8	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.9999995726538143	WITHOUT_CLASSIFICATION	4.273461856089743E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999888228179	WITHOUT_CLASSIFICATION	1.1177182078375343E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999888228179	WITHOUT_CLASSIFICATION	1.1177182078375343E-8	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.9999997293305987	WITHOUT_CLASSIFICATION	2.706694013956383E-7	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999930011479958	WITHOUT_CLASSIFICATION	6.998852004138996E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999930011479958	WITHOUT_CLASSIFICATION	6.998852004138996E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999870516535019	WITHOUT_CLASSIFICATION	1.2948346498208432E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999870516535019	WITHOUT_CLASSIFICATION	1.2948346498208432E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999870516535019	WITHOUT_CLASSIFICATION	1.2948346498208432E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999989181010205	WITHOUT_CLASSIFICATION	1.0818989794576885E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999999156405688	WITHOUT_CLASSIFICATION	8.435943125300711E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999096287681	WITHOUT_CLASSIFICATION	9.037123199943993E-8	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086909133	WITHOUT_CLASSIFICATION	1.7913090866749394E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999982086909133	WITHOUT_CLASSIFICATION	1.7913090866749394E-6	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999775472330003	WITHOUT_CLASSIFICATION	2.245276699975461E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999888228179	WITHOUT_CLASSIFICATION	1.1177182078375343E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999888228179	WITHOUT_CLASSIFICATION	1.1177182078375343E-8	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999870516535019	WITHOUT_CLASSIFICATION	1.2948346498208432E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999870516535019	WITHOUT_CLASSIFICATION	1.2948346498208432E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999870516535019	WITHOUT_CLASSIFICATION	1.2948346498208432E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999989181010205	WITHOUT_CLASSIFICATION	1.0818989794576885E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999999156405688	WITHOUT_CLASSIFICATION	8.435943125300711E-8	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.999999976148793	WITHOUT_CLASSIFICATION	2.3851206987384833E-8	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999926581787043	WITHOUT_CLASSIFICATION	7.341821295701969E-6	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.9999975035192686	WITHOUT_CLASSIFICATION	2.4964807313457125E-6	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.9999635966897711	WITHOUT_CLASSIFICATION	3.640331022887613E-5	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999821806388847	WITHOUT_CLASSIFICATION	1.7819361115348805E-5	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9995738272269089	WITHOUT_CLASSIFICATION	4.261727730911154E-4	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.999834320947469	WITHOUT_CLASSIFICATION	1.656790525308399E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677107682381	WITHOUT_CLASSIFICATION	1.3228923176189573E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999969296266944	WITHOUT_CLASSIFICATION	3.070373305663311E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999969296266944	WITHOUT_CLASSIFICATION	3.070373305663311E-6	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.9999999276631731	WITHOUT_CLASSIFICATION	7.23368269427384E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788793	WITHOUT_CLASSIFICATION	7.942112075916794E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999205788793	WITHOUT_CLASSIFICATION	7.942112075916794E-8	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9999996569926353	WITHOUT_CLASSIFICATION	3.430073647633954E-7	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.9999997679213781	WITHOUT_CLASSIFICATION	2.3207862194323053E-7	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.999999884031527	WITHOUT_CLASSIFICATION	1.1596847304738296E-7	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.9999998812277269	WITHOUT_CLASSIFICATION	1.1877227309764549E-7	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999999396299526	WITHOUT_CLASSIFICATION	6.037004736813845E-8	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999999396299526	WITHOUT_CLASSIFICATION	6.037004736813845E-8	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999999396299526	WITHOUT_CLASSIFICATION	6.037004736813845E-8	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.9999853525630513	WITHOUT_CLASSIFICATION	1.4647436948698827E-5	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.9999981819679277	WITHOUT_CLASSIFICATION	1.8180320722465229E-6	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999999040047063	WITHOUT_CLASSIFICATION	9.59952936573297E-8	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999999571704515	WITHOUT_CLASSIFICATION	4.2829548385852844E-8	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.9999986283010315	WITHOUT_CLASSIFICATION	1.37169896846502E-6	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999998832461717	WITHOUT_CLASSIFICATION	1.1675382824296387E-7	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999999590469197	WITHOUT_CLASSIFICATION	4.0953080261988146E-8	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999998105390905	WITHOUT_CLASSIFICATION	1.8946090954408433E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999998105390905	WITHOUT_CLASSIFICATION	1.8946090954408433E-7	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999998366696534	WITHOUT_CLASSIFICATION	1.6333034659717306E-7	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.9999999853762118	WITHOUT_CLASSIFICATION	1.4623788139736965E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999996548670989	WITHOUT_CLASSIFICATION	3.451329012042615E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999996548670989	WITHOUT_CLASSIFICATION	3.451329012042615E-7	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.999999992025205	WITHOUT_CLASSIFICATION	7.974794982337218E-9	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999926581787043	WITHOUT_CLASSIFICATION	7.341821295701969E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677107682381	WITHOUT_CLASSIFICATION	1.3228923176189573E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999969296266944	WITHOUT_CLASSIFICATION	3.070373305663311E-6	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999999571704515	WITHOUT_CLASSIFICATION	4.2829548385852844E-8	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999999571704515	WITHOUT_CLASSIFICATION	4.2829548385852844E-8	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999999040047063	WITHOUT_CLASSIFICATION	9.59952936573297E-8	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.999999976148793	WITHOUT_CLASSIFICATION	2.3851206987384833E-8	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999999590469197	WITHOUT_CLASSIFICATION	4.0953080261988146E-8	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999998832461717	WITHOUT_CLASSIFICATION	1.1675382824296387E-7	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.9999996388806125	WITHOUT_CLASSIFICATION	3.6111938749638814E-7	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.9997123648072779	WITHOUT_CLASSIFICATION	2.876351927220348E-4	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.9999999947290138	WITHOUT_CLASSIFICATION	5.270986208274671E-9	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.9999907642979439	WITHOUT_CLASSIFICATION	9.23570205616271E-6	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999994317310548	WITHOUT_CLASSIFICATION	5.682689452906224E-7	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999994317310548	WITHOUT_CLASSIFICATION	5.682689452906224E-7	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999994474176173	WITHOUT_CLASSIFICATION	5.525823827623872E-7	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999994777837653	WITHOUT_CLASSIFICATION	5.222162347946669E-7	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999996855901635	WITHOUT_CLASSIFICATION	3.144098365367699E-7	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.9999997776947087	WITHOUT_CLASSIFICATION	2.223052913048315E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999997107937221	WITHOUT_CLASSIFICATION	2.8920627789348183E-7	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.9999998160741725	WITHOUT_CLASSIFICATION	1.8392582754452213E-7	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.9999999278707418	WITHOUT_CLASSIFICATION	7.21292582940876E-8	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.9999998861070919	WITHOUT_CLASSIFICATION	1.138929080861151E-7	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.9999985924671018	WITHOUT_CLASSIFICATION	1.4075328982608035E-6	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.9999990191698317	WITHOUT_CLASSIFICATION	9.808301682880674E-7	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.9999846594655515	WITHOUT_CLASSIFICATION	1.53405344485046E-5	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.9999875252446996	WITHOUT_CLASSIFICATION	1.2474755300394556E-5	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.9999998862109609	WITHOUT_CLASSIFICATION	1.1378903900419605E-7	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999993611582215	WITHOUT_CLASSIFICATION	6.388417785754433E-7	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.9999985153137899	WITHOUT_CLASSIFICATION	1.4846862100670879E-6	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.9999992814713972	WITHOUT_CLASSIFICATION	7.185286028144686E-7	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999984821522114	WITHOUT_CLASSIFICATION	1.5178477884848813E-6	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999999193668437	WITHOUT_CLASSIFICATION	8.063315623685406E-8	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999991734588033	WITHOUT_CLASSIFICATION	8.265411967539658E-7	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9999999527320269	WITHOUT_CLASSIFICATION	4.726797309282868E-8	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.9999985476831875	WITHOUT_CLASSIFICATION	1.4523168124132585E-6	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.9999999700608622	WITHOUT_CLASSIFICATION	2.993913779764929E-8	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.9999981842812266	WITHOUT_CLASSIFICATION	1.8157187734998899E-6	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.999999907578783	WITHOUT_CLASSIFICATION	9.24212170016343E-8	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.9999999137078914	WITHOUT_CLASSIFICATION	8.629210847701781E-8	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.9999991592745883	WITHOUT_CLASSIFICATION	8.407254116522393E-7	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.999999805701051	WITHOUT_CLASSIFICATION	1.9429894909817852E-7	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999996717372113	WITHOUT_CLASSIFICATION	3.282627887435063E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999980283157158	WITHOUT_CLASSIFICATION	1.971684284131445E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999996548670989	WITHOUT_CLASSIFICATION	3.451329012042615E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999991734588033	WITHOUT_CLASSIFICATION	8.265411967539658E-7	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.9999927937281534	WITHOUT_CLASSIFICATION	7.2062718465419635E-6	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.9999979604602672	WITHOUT_CLASSIFICATION	2.0395397327731368E-6	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.9999967111814209	WITHOUT_CLASSIFICATION	3.2888185790937245E-6	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.9999999134778792	WITHOUT_CLASSIFICATION	8.652212081865187E-8	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.9999999817095263	WITHOUT_CLASSIFICATION	1.829047371798967E-8	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.9999999306791302	WITHOUT_CLASSIFICATION	6.932086974880058E-8	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999999717851097	WITHOUT_CLASSIFICATION	2.8214890333962456E-8	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999999672460902	WITHOUT_CLASSIFICATION	3.275390991799974E-8	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999971999909278	WITHOUT_CLASSIFICATION	2.8000090721416444E-6	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.9999997510264615	WITHOUT_CLASSIFICATION	2.48973538384684E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9996877369176537	WITHOUT_CLASSIFICATION	3.122630823462821E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.9999443100678036	WITHOUT_CLASSIFICATION	5.5689932196397394E-5	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.9999962837096104	WITHOUT_CLASSIFICATION	3.7162903896463726E-6	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9999994428818818	WITHOUT_CLASSIFICATION	5.571181182018451E-7	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.9999992383224313	WITHOUT_CLASSIFICATION	7.616775687018715E-7	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.9999539150268105	WITHOUT_CLASSIFICATION	4.6084973189518034E-5	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.9999998630677152	WITHOUT_CLASSIFICATION	1.3693228485547776E-7	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.9999983954399271	WITHOUT_CLASSIFICATION	1.6045600728901106E-6	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.9999975641989389	WITHOUT_CLASSIFICATION	2.4358010610819428E-6	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.9999906389217844	WITHOUT_CLASSIFICATION	9.361078215581724E-6	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.9999950161076384	WITHOUT_CLASSIFICATION	4.983892361536105E-6	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.9999999981379188	WITHOUT_CLASSIFICATION	1.8620811290425818E-9	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999987297914724	WITHOUT_CLASSIFICATION	1.2702085276413224E-6	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999987297914724	WITHOUT_CLASSIFICATION	1.2702085276413224E-6	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9999996203904572	WITHOUT_CLASSIFICATION	3.796095428428315E-7	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.9999974610496739	WITHOUT_CLASSIFICATION	2.5389503260925474E-6	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9999997822599448	WITHOUT_CLASSIFICATION	2.177400552518162E-7	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.9995555970112768	WITHOUT_CLASSIFICATION	4.444029887232618E-4	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.9999995325219856	WITHOUT_CLASSIFICATION	4.6747801434215763E-7	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999976103231031	WITHOUT_CLASSIFICATION	2.3896768969504415E-6	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.99999993505425	WITHOUT_CLASSIFICATION	6.494574998776769E-8	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999999191390053	WITHOUT_CLASSIFICATION	8.08609946626502E-8	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.9999998152839485	WITHOUT_CLASSIFICATION	1.8471605142284906E-7	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.9999990639258988	WITHOUT_CLASSIFICATION	9.360741011900713E-7	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.9999729473596379	WITHOUT_CLASSIFICATION	2.705264036210639E-5	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.9999998490555685	WITHOUT_CLASSIFICATION	1.5094443153114702E-7	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.999998979168414	WITHOUT_CLASSIFICATION	1.0208315861267937E-6	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.9999974724763935	WITHOUT_CLASSIFICATION	2.52752360648148E-6	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9993812187749911	WITHOUT_CLASSIFICATION	6.18781225008801E-4	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.9999999914622199	WITHOUT_CLASSIFICATION	8.537780063445328E-9	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9999998937753212	WITHOUT_CLASSIFICATION	1.0622467890720054E-7	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.999892226616969	WITHOUT_CLASSIFICATION	1.0777338303091623E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.999892226616969	WITHOUT_CLASSIFICATION	1.0777338303091623E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.999892226616969	WITHOUT_CLASSIFICATION	1.0777338303091623E-4	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999953970512796	WITHOUT_CLASSIFICATION	4.60294872036128E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999962825441087	WITHOUT_CLASSIFICATION	3.7174558914403353E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999962825441087	WITHOUT_CLASSIFICATION	3.7174558914403353E-6	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.9999959381032171	WITHOUT_CLASSIFICATION	4.061896782972051E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999951816272166	WITHOUT_CLASSIFICATION	4.818372783462066E-6	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999974583418904	WITHOUT_CLASSIFICATION	2.541658109653773E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999988012374504	WITHOUT_CLASSIFICATION	1.1987625495798509E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999988012374504	WITHOUT_CLASSIFICATION	1.1987625495798509E-6	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.9999994196262991	WITHOUT_CLASSIFICATION	5.803737009113727E-7	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.999997446155588	WITHOUT_CLASSIFICATION	2.55384441187982E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999998540850468	WITHOUT_CLASSIFICATION	1.4591495324045382E-7	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999792304177	WITHOUT_CLASSIFICATION	2.07695823406634E-8	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.9999978109720983	WITHOUT_CLASSIFICATION	2.189027901702603E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999998540850468	WITHOUT_CLASSIFICATION	1.4591495324045382E-7	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999792304177	WITHOUT_CLASSIFICATION	2.07695823406634E-8	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.9999998570520389	WITHOUT_CLASSIFICATION	1.4294796116812805E-7	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.9999992958297093	WITHOUT_CLASSIFICATION	7.041702907571034E-7	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999998533848306	WITHOUT_CLASSIFICATION	1.466151694666773E-7	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999998533848306	WITHOUT_CLASSIFICATION	1.466151694666773E-7	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.9999957289087237	WITHOUT_CLASSIFICATION	4.271091276423448E-6	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.9999920081096588	WITHOUT_CLASSIFICATION	7.991890341147154E-6	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999947733260602	WITHOUT_CLASSIFICATION	5.226673939764187E-6	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.9999924221509277	WITHOUT_CLASSIFICATION	7.57784907240646E-6	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.9999984719833266	WITHOUT_CLASSIFICATION	1.5280166734432238E-6	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.9999991864840225	WITHOUT_CLASSIFICATION	8.135159774033939E-7	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.9999864835368529	WITHOUT_CLASSIFICATION	1.351646314699195E-5	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.9999997240643368	WITHOUT_CLASSIFICATION	2.759356632665451E-7	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.9999870521510899	WITHOUT_CLASSIFICATION	1.2947848910229574E-5	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.9999989377187739	WITHOUT_CLASSIFICATION	1.0622812260387798E-6	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.9999833675744495	WITHOUT_CLASSIFICATION	1.6632425550472945E-5	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.9999984356446474	WITHOUT_CLASSIFICATION	1.5643553524885377E-6	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.9999995625915168	WITHOUT_CLASSIFICATION	4.374084832064431E-7	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999408618089787	WITHOUT_CLASSIFICATION	5.913819102137668E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.999901777719558	WITHOUT_CLASSIFICATION	9.822228044193226E-5	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999999631671721	WITHOUT_CLASSIFICATION	3.68328279885807E-8	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.9999999922684567	WITHOUT_CLASSIFICATION	7.731543309543794E-9	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.9999991156357404	WITHOUT_CLASSIFICATION	8.843642596534232E-7	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999992729510565	WITHOUT_CLASSIFICATION	7.270489433937641E-7	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.9999979048735754	WITHOUT_CLASSIFICATION	2.095126424537365E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999909476071182	WITHOUT_CLASSIFICATION	9.052392881797102E-6	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999902493921247	WITHOUT_CLASSIFICATION	9.750607875423674E-6	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999926742204888	WITHOUT_CLASSIFICATION	7.3257795113096915E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999998298630188	WITHOUT_CLASSIFICATION	1.7013698105225526E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999998298630188	WITHOUT_CLASSIFICATION	1.7013698105225526E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994362559135	WITHOUT_CLASSIFICATION	5.637440864251352E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994362559135	WITHOUT_CLASSIFICATION	5.637440864251352E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998160195718	WITHOUT_CLASSIFICATION	1.8398042833405783E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998160195718	WITHOUT_CLASSIFICATION	1.8398042833405783E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677107682381	WITHOUT_CLASSIFICATION	1.3228923176189573E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677107682381	WITHOUT_CLASSIFICATION	1.3228923176189573E-4	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999997107937221	WITHOUT_CLASSIFICATION	2.8920627789348183E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9996877369176537	WITHOUT_CLASSIFICATION	3.122630823462821E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.999892226616969	WITHOUT_CLASSIFICATION	1.0777338303091623E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.999892226616969	WITHOUT_CLASSIFICATION	1.0777338303091623E-4	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999962825441087	WITHOUT_CLASSIFICATION	3.7174558914403353E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999962825441087	WITHOUT_CLASSIFICATION	3.7174558914403353E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999962825441087	WITHOUT_CLASSIFICATION	3.7174558914403353E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999951816272166	WITHOUT_CLASSIFICATION	4.818372783462066E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999951816272166	WITHOUT_CLASSIFICATION	4.818372783462066E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999951816272166	WITHOUT_CLASSIFICATION	4.818372783462066E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999953970512796	WITHOUT_CLASSIFICATION	4.60294872036128E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999953970512796	WITHOUT_CLASSIFICATION	4.60294872036128E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999408618089787	WITHOUT_CLASSIFICATION	5.913819102137668E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.999901777719558	WITHOUT_CLASSIFICATION	9.822228044193226E-5	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999934760915	WITHOUT_CLASSIFICATION	6.523908571158851E-9	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.999999873067929	WITHOUT_CLASSIFICATION	1.2693207099891165E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999996839738896	WITHOUT_CLASSIFICATION	3.160261103552193E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999996839738896	WITHOUT_CLASSIFICATION	3.160261103552193E-7	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.999997429189891	WITHOUT_CLASSIFICATION	2.570810109142059E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999998403672391	WITHOUT_CLASSIFICATION	1.596327608580852E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999996839738896	WITHOUT_CLASSIFICATION	3.160261103552193E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999991005491107	WITHOUT_CLASSIFICATION	8.994508892961513E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999965573438616	WITHOUT_CLASSIFICATION	3.4426561383446027E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999965573438616	WITHOUT_CLASSIFICATION	3.4426561383446027E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999965573438616	WITHOUT_CLASSIFICATION	3.4426561383446027E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999998278563308	WITHOUT_CLASSIFICATION	1.7214366927140339E-7	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9999998283144275	WITHOUT_CLASSIFICATION	1.7168557253765258E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999993322559754	WITHOUT_CLASSIFICATION	6.677440247017864E-7	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999843003144937	WITHOUT_CLASSIFICATION	1.5699685506288324E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.99999997836323	WITHOUT_CLASSIFICATION	2.1636770089383284E-8	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.99999997836323	WITHOUT_CLASSIFICATION	2.1636770089383284E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999995802627551	WITHOUT_CLASSIFICATION	4.197372447659917E-7	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999879152598304	WITHOUT_CLASSIFICATION	1.2084740169500735E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999909476071182	WITHOUT_CLASSIFICATION	9.052392881797102E-6	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999902493921247	WITHOUT_CLASSIFICATION	9.750607875423674E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997069521297	WITHOUT_CLASSIFICATION	2.9304787032575685E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997069521297	WITHOUT_CLASSIFICATION	2.9304787032575685E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999998298630188	WITHOUT_CLASSIFICATION	1.7013698105225526E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994362559135	WITHOUT_CLASSIFICATION	5.637440864251352E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998160195718	WITHOUT_CLASSIFICATION	1.8398042833405783E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677107682381	WITHOUT_CLASSIFICATION	1.3228923176189573E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677107682381	WITHOUT_CLASSIFICATION	1.3228923176189573E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9998677107682381	WITHOUT_CLASSIFICATION	1.3228923176189573E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999969296266944	WITHOUT_CLASSIFICATION	3.070373305663311E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.9999969296266944	WITHOUT_CLASSIFICATION	3.070373305663311E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999997107937221	WITHOUT_CLASSIFICATION	2.8920627789348183E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.999901777719558	WITHOUT_CLASSIFICATION	9.822228044193226E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.999901777719558	WITHOUT_CLASSIFICATION	9.822228044193226E-5	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999992729510565	WITHOUT_CLASSIFICATION	7.270489433937641E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999996839738896	WITHOUT_CLASSIFICATION	3.160261103552193E-7	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999965573438616	WITHOUT_CLASSIFICATION	3.4426561383446027E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999998403672391	WITHOUT_CLASSIFICATION	1.596327608580852E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999991005491107	WITHOUT_CLASSIFICATION	8.994508892961513E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999991005491107	WITHOUT_CLASSIFICATION	8.994508892961513E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999998278563308	WITHOUT_CLASSIFICATION	1.7214366927140339E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.99999997836323	WITHOUT_CLASSIFICATION	2.1636770089383284E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999995802627551	WITHOUT_CLASSIFICATION	4.197372447659917E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999993322559754	WITHOUT_CLASSIFICATION	6.677440247017864E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999993322559754	WITHOUT_CLASSIFICATION	6.677440247017864E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999993322559754	WITHOUT_CLASSIFICATION	6.677440247017864E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999996014951504	WITHOUT_CLASSIFICATION	3.985048496654418E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999996014951504	WITHOUT_CLASSIFICATION	3.985048496654418E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999996014951504	WITHOUT_CLASSIFICATION	3.985048496654418E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999995027793378	WITHOUT_CLASSIFICATION	4.972206622145572E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999995027793378	WITHOUT_CLASSIFICATION	4.972206622145572E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999995027793378	WITHOUT_CLASSIFICATION	4.972206622145572E-7	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.9999954205953092	WITHOUT_CLASSIFICATION	4.579404690765234E-6	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.9999991884567974	WITHOUT_CLASSIFICATION	8.115432027434938E-7	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999907831405555	WITHOUT_CLASSIFICATION	9.21685944453542E-6	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999931056771786	WITHOUT_CLASSIFICATION	6.894322821396289E-6	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.9999995458630907	WITHOUT_CLASSIFICATION	4.541369092754621E-7	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.9999969990389539	WITHOUT_CLASSIFICATION	3.0009610461273083E-6	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.9999997668435141	WITHOUT_CLASSIFICATION	2.331564859225897E-7	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.9999656954547236	WITHOUT_CLASSIFICATION	3.430454527633632E-5	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.999999997922138	WITHOUT_CLASSIFICATION	2.0778619719301465E-9	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999986318787503	WITHOUT_CLASSIFICATION	1.368121249728324E-6	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.9999987708187508	WITHOUT_CLASSIFICATION	1.2291812492334513E-6	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999986633847551	WITHOUT_CLASSIFICATION	1.3366152449475432E-6	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.9998133792707071	WITHOUT_CLASSIFICATION	1.866207292929331E-4	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.9999983349748109	WITHOUT_CLASSIFICATION	1.665025189053255E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999991054447224	WITHOUT_CLASSIFICATION	8.945552775230971E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999909476071182	WITHOUT_CLASSIFICATION	9.052392881797102E-6	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999902493921247	WITHOUT_CLASSIFICATION	9.750607875423674E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997069521297	WITHOUT_CLASSIFICATION	2.9304787032575685E-7	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999994976691268	WITHOUT_CLASSIFICATION	5.023308732714274E-7	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.9999999671944444	WITHOUT_CLASSIFICATION	3.280555555810201E-8	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999998298630188	WITHOUT_CLASSIFICATION	1.7013698105225526E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999994362559135	WITHOUT_CLASSIFICATION	5.637440864251352E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998160195718	WITHOUT_CLASSIFICATION	1.8398042833405783E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999997107937221	WITHOUT_CLASSIFICATION	2.8920627789348183E-7	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999984513417773	WITHOUT_CLASSIFICATION	1.5486582226453669E-6	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9997919493756433	WITHOUT_CLASSIFICATION	2.080506243567169E-4	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9993812187749911	WITHOUT_CLASSIFICATION	6.18781225008801E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999408618089787	WITHOUT_CLASSIFICATION	5.913819102137668E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.999901777719558	WITHOUT_CLASSIFICATION	9.822228044193226E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999965573438616	WITHOUT_CLASSIFICATION	3.4426561383446027E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999998403672391	WITHOUT_CLASSIFICATION	1.596327608580852E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.999991005491107	WITHOUT_CLASSIFICATION	8.994508892961513E-6	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999843003144937	WITHOUT_CLASSIFICATION	1.5699685506288324E-5	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999879152598304	WITHOUT_CLASSIFICATION	1.2084740169500735E-5	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999907831405555	WITHOUT_CLASSIFICATION	9.21685944453542E-6	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999931056771786	WITHOUT_CLASSIFICATION	6.894322821396289E-6	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999991852738143	WITHOUT_CLASSIFICATION	8.147261857675531E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999900931813099	WITHOUT_CLASSIFICATION	9.906818690122758E-6	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.9999997215422013	WITHOUT_CLASSIFICATION	2.7845779866865387E-7	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.9999999298952238	WITHOUT_CLASSIFICATION	7.01047761523146E-8	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.9999999314156264	WITHOUT_CLASSIFICATION	6.858437356458812E-8	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.9999909796058569	WITHOUT_CLASSIFICATION	9.02039414320277E-6	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.9999996357931968	WITHOUT_CLASSIFICATION	3.642068031738565E-7	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.9999739927702	WITHOUT_CLASSIFICATION	2.6007229799895787E-5	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.9999998368501144	WITHOUT_CLASSIFICATION	1.6314988559042795E-7	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999975081894521	WITHOUT_CLASSIFICATION	2.491810547931734E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999977164972431	WITHOUT_CLASSIFICATION	2.283502756919821E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999977164972431	WITHOUT_CLASSIFICATION	2.283502756919821E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999978519377574	WITHOUT_CLASSIFICATION	2.1480622426101228E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999978519377574	WITHOUT_CLASSIFICATION	2.1480622426101228E-6	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.99999929279068	WITHOUT_CLASSIFICATION	7.07209320013522E-7	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999970263185762	WITHOUT_CLASSIFICATION	2.9736814238844016E-6	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9999984976931293	WITHOUT_CLASSIFICATION	1.502306870642026E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999986911117827	WITHOUT_CLASSIFICATION	1.3088882173633458E-6	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9999996706818202	WITHOUT_CLASSIFICATION	3.293181798076228E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999996524392543	WITHOUT_CLASSIFICATION	3.4756074578373584E-7	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999087597977006	WITHOUT_CLASSIFICATION	9.124020229951366E-5	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9993913744971628	WITHOUT_CLASSIFICATION	6.086255028373732E-4	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999999659379284	WITHOUT_CLASSIFICATION	3.406207166306796E-8	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.9999990863869661	WITHOUT_CLASSIFICATION	9.136130339203325E-7	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999939250587	WITHOUT_CLASSIFICATION	6.074941358935098E-9	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999997459859664	WITHOUT_CLASSIFICATION	2.5401403358344207E-7	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.9999994565500848	WITHOUT_CLASSIFICATION	5.434499151536142E-7	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.9999996876386971	WITHOUT_CLASSIFICATION	3.1236130287682896E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999989188099908	WITHOUT_CLASSIFICATION	1.081190009166955E-6	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999995196299849	WITHOUT_CLASSIFICATION	4.803700150752703E-7	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9992835669838911	WITHOUT_CLASSIFICATION	7.164330161090019E-4	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999397580460724	WITHOUT_CLASSIFICATION	6.024195392767115E-5	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999999163240436	WITHOUT_CLASSIFICATION	8.367595636004548E-8	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.9999987983293794	WITHOUT_CLASSIFICATION	1.201670620625239E-6	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.9995297224054244	WITHOUT_CLASSIFICATION	4.702775945756102E-4	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.9999998180877266	WITHOUT_CLASSIFICATION	1.819122733780577E-7	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.9997606535030933	WITHOUT_CLASSIFICATION	2.393464969065718E-4	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999983942269056	WITHOUT_CLASSIFICATION	1.605773094411673E-6	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.9999999035863006	WITHOUT_CLASSIFICATION	9.641369935030658E-8	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999087597977006	WITHOUT_CLASSIFICATION	9.124020229951366E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999087597977006	WITHOUT_CLASSIFICATION	9.124020229951366E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999247169162	WITHOUT_CLASSIFICATION	7.528308379640236E-8	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999913520226	WITHOUT_CLASSIFICATION	8.6479775152169E-9	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999913520226	WITHOUT_CLASSIFICATION	8.6479775152169E-9	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.9999999816038815	WITHOUT_CLASSIFICATION	1.839611852429889E-8	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9975584876367264	WITHOUT_CLASSIFICATION	0.002441512363273638	DEFECT
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.9999999340210989	WITHOUT_CLASSIFICATION	6.597890118494105E-8	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.9999861941065735	WITHOUT_CLASSIFICATION	1.3805893426566607E-5	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.9999999948740047	WITHOUT_CLASSIFICATION	5.125995308101225E-9	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.999973874359872	WITHOUT_CLASSIFICATION	2.61256401279979E-5	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.999973874359872	WITHOUT_CLASSIFICATION	2.61256401279979E-5	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999534043573	WITHOUT_CLASSIFICATION	4.659564264530292E-8	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999998180696	WITHOUT_CLASSIFICATION	1.819302923820963E-10	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982481052789	WITHOUT_CLASSIFICATION	1.751894721002088E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999895990232162	WITHOUT_CLASSIFICATION	1.0400976783818352E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.9999345263409755	WITHOUT_CLASSIFICATION	6.547365902455674E-5	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.999997808370136	WITHOUT_CLASSIFICATION	2.1916298640388863E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.999892833249929	WITHOUT_CLASSIFICATION	1.07166750071141E-4	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.9999998173557947	WITHOUT_CLASSIFICATION	1.8264420539141054E-7	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.9999999590039096	WITHOUT_CLASSIFICATION	4.099609035938805E-8	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.999998892396589	WITHOUT_CLASSIFICATION	1.1076034109957354E-6	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9999994226826149	WITHOUT_CLASSIFICATION	5.77317385181973E-7	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999993182407761	WITHOUT_CLASSIFICATION	6.817592237616995E-7	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.9999949366111333	WITHOUT_CLASSIFICATION	5.063388866780823E-6	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999814925834	WITHOUT_CLASSIFICATION	1.850741659550702E-8	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.9999999138814968	WITHOUT_CLASSIFICATION	8.611850323370849E-8	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.9999545651057672	WITHOUT_CLASSIFICATION	4.543489423278925E-5	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999999703305222	WITHOUT_CLASSIFICATION	2.9669477772432465E-8	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.9999925734874582	WITHOUT_CLASSIFICATION	7.426512541852631E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.999999997780903	WITHOUT_CLASSIFICATION	2.2190969706647594E-9	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999999642419453	WITHOUT_CLASSIFICATION	3.575805477372001E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999860648432454	WITHOUT_CLASSIFICATION	1.393515675470665E-5	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.9999994062635789	WITHOUT_CLASSIFICATION	5.937364210599703E-7	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999998866898169	WITHOUT_CLASSIFICATION	1.1331018317005279E-7	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.9999999802742189	WITHOUT_CLASSIFICATION	1.9725781073169883E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998813810073	WITHOUT_CLASSIFICATION	1.1861899268326291E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.999999227502282	WITHOUT_CLASSIFICATION	7.724977179360483E-7	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999961462515764	WITHOUT_CLASSIFICATION	3.85374842361412E-6	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999961462515764	WITHOUT_CLASSIFICATION	3.85374842361412E-6	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.9999999651231329	WITHOUT_CLASSIFICATION	3.4876867002304E-8	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9999999909891341	WITHOUT_CLASSIFICATION	9.010865833227958E-9	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.9923621593547132	WITHOUT_CLASSIFICATION	0.007637840645286811	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.9999942619391885	WITHOUT_CLASSIFICATION	5.738060811522547E-6	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.9999905146128703	WITHOUT_CLASSIFICATION	9.485387129648008E-6	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999976103231031	WITHOUT_CLASSIFICATION	2.3896768969504415E-6	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999999191390053	WITHOUT_CLASSIFICATION	8.08609946626502E-8	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999984513417773	WITHOUT_CLASSIFICATION	1.5486582226453669E-6	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9997919493756433	WITHOUT_CLASSIFICATION	2.080506243567169E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.999892226616969	WITHOUT_CLASSIFICATION	1.0777338303091623E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999408618089787	WITHOUT_CLASSIFICATION	5.913819102137668E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999408618089787	WITHOUT_CLASSIFICATION	5.913819102137668E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.999901777719558	WITHOUT_CLASSIFICATION	9.822228044193226E-5	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.9999958929045962	WITHOUT_CLASSIFICATION	4.107095403780407E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999992729510565	WITHOUT_CLASSIFICATION	7.270489433937641E-7	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999992729510565	WITHOUT_CLASSIFICATION	7.270489433937641E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999996839738896	WITHOUT_CLASSIFICATION	3.160261103552193E-7	DEFECT
// open	WITHOUT_CLASSIFICATION	0.9999958202387424	WITHOUT_CLASSIFICATION	4.179761257591158E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999998403672391	WITHOUT_CLASSIFICATION	1.596327608580852E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.99999997836323	WITHOUT_CLASSIFICATION	2.1636770089383284E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999995802627551	WITHOUT_CLASSIFICATION	4.197372447659917E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999995802627551	WITHOUT_CLASSIFICATION	4.197372447659917E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999993322559754	WITHOUT_CLASSIFICATION	6.677440247017864E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999993322559754	WITHOUT_CLASSIFICATION	6.677440247017864E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999993322559754	WITHOUT_CLASSIFICATION	6.677440247017864E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999993322559754	WITHOUT_CLASSIFICATION	6.677440247017864E-7	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999991852738143	WITHOUT_CLASSIFICATION	8.147261857675531E-7	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999991852738143	WITHOUT_CLASSIFICATION	8.147261857675531E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999900931813099	WITHOUT_CLASSIFICATION	9.906818690122758E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999900931813099	WITHOUT_CLASSIFICATION	9.906818690122758E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999462080625607	WITHOUT_CLASSIFICATION	5.379193743929088E-5	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999928813422287	WITHOUT_CLASSIFICATION	7.118657771253474E-6	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999996553545054	WITHOUT_CLASSIFICATION	3.4464549452894504E-7	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.9999996553545054	WITHOUT_CLASSIFICATION	3.4464549452894504E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999928813422287	WITHOUT_CLASSIFICATION	7.118657771253474E-6	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.9999986419198595	WITHOUT_CLASSIFICATION	1.3580801404003689E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999462080625607	WITHOUT_CLASSIFICATION	5.379193743929088E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774202769	WITHOUT_CLASSIFICATION	4.2257972310683485E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774202769	WITHOUT_CLASSIFICATION	4.2257972310683485E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774202769	WITHOUT_CLASSIFICATION	4.2257972310683485E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774202769	WITHOUT_CLASSIFICATION	4.2257972310683485E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774202769	WITHOUT_CLASSIFICATION	4.2257972310683485E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774202769	WITHOUT_CLASSIFICATION	4.2257972310683485E-7	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.999999999997828	WITHOUT_CLASSIFICATION	2.1719699195799544E-12	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999999869054	WITHOUT_CLASSIFICATION	1.3094711584807997E-11	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.99999999986929	WITHOUT_CLASSIFICATION	1.3070999229091387E-10	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774202769	WITHOUT_CLASSIFICATION	4.2257972310683485E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774202769	WITHOUT_CLASSIFICATION	4.2257972310683485E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774202769	WITHOUT_CLASSIFICATION	4.2257972310683485E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774202769	WITHOUT_CLASSIFICATION	4.2257972310683485E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995774202769	WITHOUT_CLASSIFICATION	4.2257972310683485E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999601430611	WITHOUT_CLASSIFICATION	3.985693890446E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999601430611	WITHOUT_CLASSIFICATION	3.985693890446E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999971243577477	WITHOUT_CLASSIFICATION	2.875642252352813E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999971243577477	WITHOUT_CLASSIFICATION	2.875642252352813E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999971243577477	WITHOUT_CLASSIFICATION	2.875642252352813E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999971243577477	WITHOUT_CLASSIFICATION	2.875642252352813E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999830986206226	WITHOUT_CLASSIFICATION	1.6901379377381885E-5	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999993382419871	WITHOUT_CLASSIFICATION	6.617580128730876E-7	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999993382419871	WITHOUT_CLASSIFICATION	6.617580128730876E-7	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.99999409921622	WITHOUT_CLASSIFICATION	5.90078377997264E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.999994858875911	WITHOUT_CLASSIFICATION	5.141124088996991E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.999994858875911	WITHOUT_CLASSIFICATION	5.141124088996991E-6	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9998406216439722	WITHOUT_CLASSIFICATION	1.5937835602779495E-4	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.999994858875911	WITHOUT_CLASSIFICATION	5.141124088996991E-6	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999904339483	WITHOUT_CLASSIFICATION	9.566051779757042E-9	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999971243577477	WITHOUT_CLASSIFICATION	2.875642252352813E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999971243577477	WITHOUT_CLASSIFICATION	2.875642252352813E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999960175044561	WITHOUT_CLASSIFICATION	3.982495543930767E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999980283157158	WITHOUT_CLASSIFICATION	1.971684284131445E-6	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.9959453621257357	WITHOUT_CLASSIFICATION	0.0040546378742642875	DEFECT
// todo: not serialized yet	DEFECT	0.9997704117241392	WITHOUT_CLASSIFICATION	2.2958827586080352E-4	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.936146127434648	WITHOUT_CLASSIFICATION	0.06385387256535208	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.5552792175009102	WITHOUT_CLASSIFICATION	0.44472078249908975	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.5552792175009102	WITHOUT_CLASSIFICATION	0.44472078249908975	DEFECT
// TODO: Check this result...	DEFECT	0.6424356746277746	WITHOUT_CLASSIFICATION	0.3575643253722253	DEFECT
// TODO: Check this result...	DEFECT	0.6424356746277746	WITHOUT_CLASSIFICATION	0.3575643253722253	DEFECT
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9992766828016109	WITHOUT_CLASSIFICATION	7.233171983891211E-4	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9993139570959934	WITHOUT_CLASSIFICATION	6.860429040066697E-4	DEFECT
