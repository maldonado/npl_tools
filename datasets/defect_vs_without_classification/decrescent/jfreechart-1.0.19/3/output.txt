// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999984511943212	WITHOUT_CLASSIFICATION	1.5488056788559848E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999979603812478	WITHOUT_CLASSIFICATION	2.039618752287763E-6	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999997790428699	WITHOUT_CLASSIFICATION	2.2095713013621913E-7	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999880934351721	WITHOUT_CLASSIFICATION	1.190656482773789E-5	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999971781714503	WITHOUT_CLASSIFICATION	2.821828549693952E-6	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999795364697092	WITHOUT_CLASSIFICATION	2.0463530290862922E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999959746402522	WITHOUT_CLASSIFICATION	4.025359747760293E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9998400001194301	WITHOUT_CLASSIFICATION	1.5999988057000404E-4	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999972485039763	WITHOUT_CLASSIFICATION	2.7514960237153315E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999811872504496	WITHOUT_CLASSIFICATION	1.8812749550385927E-5	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999994398621357	WITHOUT_CLASSIFICATION	5.60137864328269E-7	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999991225727289	WITHOUT_CLASSIFICATION	8.774272710222385E-7	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.9999995483384265	WITHOUT_CLASSIFICATION	4.516615734948364E-7	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999998788832601	WITHOUT_CLASSIFICATION	1.2111673989887297E-7	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.9999995744194313	WITHOUT_CLASSIFICATION	4.255805685757332E-7	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.9999990463830039	WITHOUT_CLASSIFICATION	9.536169961723492E-7	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.9999996749397787	WITHOUT_CLASSIFICATION	3.250602213340168E-7	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.9999998844484458	WITHOUT_CLASSIFICATION	1.1555155424715925E-7	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.9999999091992992	WITHOUT_CLASSIFICATION	9.080070086321403E-8	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998248972789	WITHOUT_CLASSIFICATION	1.7510272114735347E-7	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999999377549503	WITHOUT_CLASSIFICATION	6.224504967993207E-8	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999510876846	WITHOUT_CLASSIFICATION	4.891231544649109E-8	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999971422550229	WITHOUT_CLASSIFICATION	2.8577449770794163E-6	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999986545230315	WITHOUT_CLASSIFICATION	1.345476968461498E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999997770539293	WITHOUT_CLASSIFICATION	2.2294607072886969E-7	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999782135113034	WITHOUT_CLASSIFICATION	2.178648869659905E-5	DEFECT
// high	WITHOUT_CLASSIFICATION	0.9999915523975922	WITHOUT_CLASSIFICATION	8.447602407874144E-6	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9999825410101653	WITHOUT_CLASSIFICATION	1.7458989834783848E-5	DEFECT
// close	WITHOUT_CLASSIFICATION	0.9999997731619592	WITHOUT_CLASSIFICATION	2.2683804089357587E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999704436425706	WITHOUT_CLASSIFICATION	2.9556357429464633E-5	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.9999980294235951	WITHOUT_CLASSIFICATION	1.970576404878276E-6	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.999999765421229	WITHOUT_CLASSIFICATION	2.3457877090935635E-7	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.999999625567147	WITHOUT_CLASSIFICATION	3.744328529486317E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999973197831116	WITHOUT_CLASSIFICATION	2.680216888361694E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999988979811871	WITHOUT_CLASSIFICATION	1.1020188129033315E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999996227108178	WITHOUT_CLASSIFICATION	3.772891821786246E-7	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.999983274080765	WITHOUT_CLASSIFICATION	1.6725919234914814E-5	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999992329460841	WITHOUT_CLASSIFICATION	7.670539159183566E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981218735368	WITHOUT_CLASSIFICATION	1.878126463244239E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981218735368	WITHOUT_CLASSIFICATION	1.878126463244239E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981218735368	WITHOUT_CLASSIFICATION	1.878126463244239E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981218735368	WITHOUT_CLASSIFICATION	1.878126463244239E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981218735368	WITHOUT_CLASSIFICATION	1.878126463244239E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981218735368	WITHOUT_CLASSIFICATION	1.878126463244239E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981218735368	WITHOUT_CLASSIFICATION	1.878126463244239E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981218735368	WITHOUT_CLASSIFICATION	1.878126463244239E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981218735368	WITHOUT_CLASSIFICATION	1.878126463244239E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981218735368	WITHOUT_CLASSIFICATION	1.878126463244239E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981218735368	WITHOUT_CLASSIFICATION	1.878126463244239E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981218735368	WITHOUT_CLASSIFICATION	1.878126463244239E-6	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.9999874744721983	WITHOUT_CLASSIFICATION	1.2525527801801572E-5	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999984947419086	WITHOUT_CLASSIFICATION	1.5052580914366761E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999984947419086	WITHOUT_CLASSIFICATION	1.5052580914366761E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999984947419086	WITHOUT_CLASSIFICATION	1.5052580914366761E-6	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999985792634372	WITHOUT_CLASSIFICATION	1.4207365627764292E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999998848103681	WITHOUT_CLASSIFICATION	1.1518963186912054E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999986698848942	WITHOUT_CLASSIFICATION	1.330115105768251E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999999736534363	WITHOUT_CLASSIFICATION	2.634656372229653E-8	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999999089975166	WITHOUT_CLASSIFICATION	9.100248334595998E-8	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999999089975166	WITHOUT_CLASSIFICATION	9.100248334595998E-8	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999999089975166	WITHOUT_CLASSIFICATION	9.100248334595998E-8	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999999875493419	WITHOUT_CLASSIFICATION	1.2450658004918977E-8	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999994643016246	WITHOUT_CLASSIFICATION	5.356983754541117E-7	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999995400226027	WITHOUT_CLASSIFICATION	4.599773973821576E-7	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.9999533794215015	WITHOUT_CLASSIFICATION	4.6620578498415496E-5	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999278181315422	WITHOUT_CLASSIFICATION	7.218186845782221E-5	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999998498595425	WITHOUT_CLASSIFICATION	1.5014045755769188E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999984164135748	WITHOUT_CLASSIFICATION	1.5835864251038407E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999988114088053	WITHOUT_CLASSIFICATION	1.1885911946452921E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999988114088053	WITHOUT_CLASSIFICATION	1.1885911946452921E-6	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.99998057431015	WITHOUT_CLASSIFICATION	1.9425689849975468E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999850497606805	WITHOUT_CLASSIFICATION	1.4950239319446814E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999850497606805	WITHOUT_CLASSIFICATION	1.4950239319446814E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999850497606805	WITHOUT_CLASSIFICATION	1.4950239319446814E-5	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999850497606805	WITHOUT_CLASSIFICATION	1.4950239319446814E-5	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999998804704748	WITHOUT_CLASSIFICATION	1.1952952514945294E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999870413069489	WITHOUT_CLASSIFICATION	1.2958693051174191E-5	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999814427737965	WITHOUT_CLASSIFICATION	1.855722620351615E-5	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9999999118782077	WITHOUT_CLASSIFICATION	8.812179228294725E-8	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.999999976183402	WITHOUT_CLASSIFICATION	2.3816597944577693E-8	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.9996448735116116	WITHOUT_CLASSIFICATION	3.5512648838838436E-4	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999993250477226	WITHOUT_CLASSIFICATION	6.749522774731023E-7	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.999995777982773	WITHOUT_CLASSIFICATION	4.222017227052536E-6	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999988791009182	WITHOUT_CLASSIFICATION	1.1208990817080853E-6	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999994930743249	WITHOUT_CLASSIFICATION	5.069256751510187E-7	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999979140290688	WITHOUT_CLASSIFICATION	2.085970931163741E-6	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999984674201688	WITHOUT_CLASSIFICATION	1.53257983121749E-6	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.9996203611366509	WITHOUT_CLASSIFICATION	3.79638863349144E-4	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.9999992607527864	WITHOUT_CLASSIFICATION	7.39247213650636E-7	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.9999524550355525	WITHOUT_CLASSIFICATION	4.754496444752735E-5	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999543281450018	WITHOUT_CLASSIFICATION	4.56718549982223E-5	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.9972109695796386	WITHOUT_CLASSIFICATION	0.002789030420361416	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999999904929437	WITHOUT_CLASSIFICATION	9.507056296178067E-9	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9999994716626631	WITHOUT_CLASSIFICATION	5.283373367725192E-7	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9999994716626631	WITHOUT_CLASSIFICATION	5.283373367725192E-7	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999979709274397	WITHOUT_CLASSIFICATION	2.0290725603715508E-6	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999894975909354	WITHOUT_CLASSIFICATION	1.0502409064690426E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999995381967919	WITHOUT_CLASSIFICATION	4.6180320801518694E-7	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.9999910246388661	WITHOUT_CLASSIFICATION	8.975361133795023E-6	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.999999383159113	WITHOUT_CLASSIFICATION	6.16840887029381E-7	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.9999988299692182	WITHOUT_CLASSIFICATION	1.1700307818749691E-6	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9998335332612274	WITHOUT_CLASSIFICATION	1.6646673877273427E-4	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.9999998853500116	WITHOUT_CLASSIFICATION	1.1464998834646302E-7	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999502435490267	WITHOUT_CLASSIFICATION	4.9756450973282734E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999998028819951	WITHOUT_CLASSIFICATION	1.9711800496975317E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999636532943502	WITHOUT_CLASSIFICATION	3.634670564982721E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999854026111462	WITHOUT_CLASSIFICATION	1.4597388853860423E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999632593221	WITHOUT_CLASSIFICATION	3.674067788845873E-8	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9998894811164628	WITHOUT_CLASSIFICATION	1.1051888353718122E-4	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999990577204567	WITHOUT_CLASSIFICATION	9.422795432309491E-7	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999990577204567	WITHOUT_CLASSIFICATION	9.422795432309491E-7	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999987557212445	WITHOUT_CLASSIFICATION	1.24427875546544E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999865017654523	WITHOUT_CLASSIFICATION	1.3498234547726417E-5	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999918666372943	WITHOUT_CLASSIFICATION	8.133362705701053E-6	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9999975720022339	WITHOUT_CLASSIFICATION	2.427997766017578E-6	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999919105655015	WITHOUT_CLASSIFICATION	8.089434498486573E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999610640138	WITHOUT_CLASSIFICATION	3.89359862279377E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999610640138	WITHOUT_CLASSIFICATION	3.89359862279377E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999610640138	WITHOUT_CLASSIFICATION	3.89359862279377E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999610640138	WITHOUT_CLASSIFICATION	3.89359862279377E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999610640138	WITHOUT_CLASSIFICATION	3.89359862279377E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999610640138	WITHOUT_CLASSIFICATION	3.89359862279377E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999610640138	WITHOUT_CLASSIFICATION	3.89359862279377E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999610640138	WITHOUT_CLASSIFICATION	3.89359862279377E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999610640138	WITHOUT_CLASSIFICATION	3.89359862279377E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999936765021469	WITHOUT_CLASSIFICATION	6.323497853042608E-6	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999936765021469	WITHOUT_CLASSIFICATION	6.323497853042608E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999975358299488	WITHOUT_CLASSIFICATION	2.464170051306229E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999975358299488	WITHOUT_CLASSIFICATION	2.464170051306229E-6	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.9999994296871587	WITHOUT_CLASSIFICATION	5.703128413587294E-7	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.999986954181076	WITHOUT_CLASSIFICATION	1.3045818924019605E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999707337304128	WITHOUT_CLASSIFICATION	2.9266269587219695E-5	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999910547108395	WITHOUT_CLASSIFICATION	8.945289160458668E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999910547108395	WITHOUT_CLASSIFICATION	8.945289160458668E-6	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9997940648888572	WITHOUT_CLASSIFICATION	2.059351111428021E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9971403265431712	WITHOUT_CLASSIFICATION	0.002859673456828856	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999804754406953	WITHOUT_CLASSIFICATION	1.9524559304608644E-5	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999997413446454	WITHOUT_CLASSIFICATION	2.58655354503397E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999997413446454	WITHOUT_CLASSIFICATION	2.58655354503397E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999984345787187	WITHOUT_CLASSIFICATION	1.565421281297964E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999984345787187	WITHOUT_CLASSIFICATION	1.565421281297964E-6	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999998657709815	WITHOUT_CLASSIFICATION	1.3422901846283587E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999073325987	WITHOUT_CLASSIFICATION	9.266740136450659E-8	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.9999997297417614	WITHOUT_CLASSIFICATION	2.702582386763101E-7	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999999699101675	WITHOUT_CLASSIFICATION	3.0089832466934376E-8	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.9999998982957949	WITHOUT_CLASSIFICATION	1.0170420517467229E-7	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.99999922891985	WITHOUT_CLASSIFICATION	7.710801499989674E-7	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.9999689481570727	WITHOUT_CLASSIFICATION	3.10518429273171E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999997965025027	WITHOUT_CLASSIFICATION	2.0349749721230922E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999976166540536	WITHOUT_CLASSIFICATION	2.3833459464078863E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999976166540536	WITHOUT_CLASSIFICATION	2.3833459464078863E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999976166540536	WITHOUT_CLASSIFICATION	2.3833459464078863E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999976166540536	WITHOUT_CLASSIFICATION	2.3833459464078863E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999976166540536	WITHOUT_CLASSIFICATION	2.3833459464078863E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.999998285351826	WITHOUT_CLASSIFICATION	1.714648174046476E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999964169330101	WITHOUT_CLASSIFICATION	3.5830669899238254E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999964169330101	WITHOUT_CLASSIFICATION	3.5830669899238254E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999964157305	WITHOUT_CLASSIFICATION	3.584269583966217E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999996379463925	WITHOUT_CLASSIFICATION	3.62053607430019E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999996379463925	WITHOUT_CLASSIFICATION	3.62053607430019E-7	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999988968741963	WITHOUT_CLASSIFICATION	1.1031258036316765E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999988968741963	WITHOUT_CLASSIFICATION	1.1031258036316765E-6	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999998891124622	WITHOUT_CLASSIFICATION	1.1088753779239868E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999962186513	WITHOUT_CLASSIFICATION	3.78134870128721E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999962186513	WITHOUT_CLASSIFICATION	3.78134870128721E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999962186513	WITHOUT_CLASSIFICATION	3.78134870128721E-9	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999965901681079	WITHOUT_CLASSIFICATION	3.409831892110117E-6	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999608281635991	WITHOUT_CLASSIFICATION	3.917183640099144E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999995601655394	WITHOUT_CLASSIFICATION	4.3983446056861996E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999995601655394	WITHOUT_CLASSIFICATION	4.3983446056861996E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999995601655394	WITHOUT_CLASSIFICATION	4.3983446056861996E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999995601655394	WITHOUT_CLASSIFICATION	4.3983446056861996E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999995601655394	WITHOUT_CLASSIFICATION	4.3983446056861996E-7	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999998495010977	WITHOUT_CLASSIFICATION	1.504989023468585E-7	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999957807505185	WITHOUT_CLASSIFICATION	4.219249481530475E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999957807505185	WITHOUT_CLASSIFICATION	4.219249481530475E-6	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999982284635054	WITHOUT_CLASSIFICATION	1.7715364946526399E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999976048570731	WITHOUT_CLASSIFICATION	2.395142926797787E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999976048570731	WITHOUT_CLASSIFICATION	2.395142926797787E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999993358192526	WITHOUT_CLASSIFICATION	6.641807473377909E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999978034815	WITHOUT_CLASSIFICATION	2.196518499899302E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999978034815	WITHOUT_CLASSIFICATION	2.196518499899302E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999978034815	WITHOUT_CLASSIFICATION	2.196518499899302E-6	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999984483394755	WITHOUT_CLASSIFICATION	1.551660524540332E-6	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999984483394755	WITHOUT_CLASSIFICATION	1.551660524540332E-6	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.9999998017021633	WITHOUT_CLASSIFICATION	1.9829783662221763E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999989868848026	WITHOUT_CLASSIFICATION	1.0131151974312862E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999989868848026	WITHOUT_CLASSIFICATION	1.0131151974312862E-6	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999936085111854	WITHOUT_CLASSIFICATION	6.391488814655474E-6	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.9999999096298597	WITHOUT_CLASSIFICATION	9.03701401788414E-8	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.999752879447275	WITHOUT_CLASSIFICATION	2.4712055272499254E-4	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999920049039213	WITHOUT_CLASSIFICATION	7.99509607871774E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.999997297701651	WITHOUT_CLASSIFICATION	2.7022983488887513E-6	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.9999999366282644	WITHOUT_CLASSIFICATION	6.337173556242223E-8	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9999996206116986	WITHOUT_CLASSIFICATION	3.793883014496096E-7	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.9999872790302632	WITHOUT_CLASSIFICATION	1.272096973680195E-5	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.999990801367291	WITHOUT_CLASSIFICATION	9.198632708985897E-6	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.9999953274189418	WITHOUT_CLASSIFICATION	4.672581058110534E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999191525559	WITHOUT_CLASSIFICATION	8.084744404927196E-8	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.7441120851121955	WITHOUT_CLASSIFICATION	0.2558879148878045	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999989373951333	WITHOUT_CLASSIFICATION	1.062604866715228E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999992670462935	WITHOUT_CLASSIFICATION	7.32953706497704E-7	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.9999996742159744	WITHOUT_CLASSIFICATION	3.2578402574092003E-7	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999939832117669	WITHOUT_CLASSIFICATION	6.016788233077694E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999954566919076	WITHOUT_CLASSIFICATION	4.543308092504682E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999954566919076	WITHOUT_CLASSIFICATION	4.543308092504682E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999954566919076	WITHOUT_CLASSIFICATION	4.543308092504682E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999954566919076	WITHOUT_CLASSIFICATION	4.543308092504682E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999954566919076	WITHOUT_CLASSIFICATION	4.543308092504682E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999954566919076	WITHOUT_CLASSIFICATION	4.543308092504682E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999954566919076	WITHOUT_CLASSIFICATION	4.543308092504682E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999954566919076	WITHOUT_CLASSIFICATION	4.543308092504682E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999954566919076	WITHOUT_CLASSIFICATION	4.543308092504682E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999982950701062	WITHOUT_CLASSIFICATION	1.7049298938260582E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999962104480093	WITHOUT_CLASSIFICATION	3.7895519907154026E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999651555333845	WITHOUT_CLASSIFICATION	3.484446661544675E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999651555333845	WITHOUT_CLASSIFICATION	3.484446661544675E-5	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999986987323148	WITHOUT_CLASSIFICATION	1.3012676850838598E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999959006052582	WITHOUT_CLASSIFICATION	4.099394741729137E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999959006052582	WITHOUT_CLASSIFICATION	4.099394741729137E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999959006052582	WITHOUT_CLASSIFICATION	4.099394741729137E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999998606636133	WITHOUT_CLASSIFICATION	1.3933638669834068E-7	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999768004898655	WITHOUT_CLASSIFICATION	2.3199510134535027E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999768004898655	WITHOUT_CLASSIFICATION	2.3199510134535027E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999768004898655	WITHOUT_CLASSIFICATION	2.3199510134535027E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999768004898655	WITHOUT_CLASSIFICATION	2.3199510134535027E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999768004898655	WITHOUT_CLASSIFICATION	2.3199510134535027E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999768004898655	WITHOUT_CLASSIFICATION	2.3199510134535027E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999987054962928	WITHOUT_CLASSIFICATION	1.2945037071932953E-6	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9957054209249824	WITHOUT_CLASSIFICATION	0.004294579075017554	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999990498453069	WITHOUT_CLASSIFICATION	9.501546930980539E-6	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.9999997171776923	WITHOUT_CLASSIFICATION	2.82822307760167E-7	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999967211347398	WITHOUT_CLASSIFICATION	3.2788652602208226E-6	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.9999975863280336	WITHOUT_CLASSIFICATION	2.4136719663904983E-6	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999813383920887	WITHOUT_CLASSIFICATION	1.866160791125979E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999813383920887	WITHOUT_CLASSIFICATION	1.866160791125979E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995124482708	WITHOUT_CLASSIFICATION	4.875517291963053E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995124482708	WITHOUT_CLASSIFICATION	4.875517291963053E-7	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.999993977845555	WITHOUT_CLASSIFICATION	6.022154444995412E-6	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.9999968970523595	WITHOUT_CLASSIFICATION	3.1029476404228003E-6	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999999474526422	WITHOUT_CLASSIFICATION	5.2547357817052426E-8	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.9999998755775353	WITHOUT_CLASSIFICATION	1.244224646679761E-7	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999925073618569	WITHOUT_CLASSIFICATION	7.492638143096298E-6	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.9998066862230038	WITHOUT_CLASSIFICATION	1.9331377699612943E-4	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.9999913118189665	WITHOUT_CLASSIFICATION	8.688181033542461E-6	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.9998735637426105	WITHOUT_CLASSIFICATION	1.26436257389515E-4	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999906525767677	WITHOUT_CLASSIFICATION	9.347423232373647E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999998574531122	WITHOUT_CLASSIFICATION	1.4254688797689003E-7	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999982229311849	WITHOUT_CLASSIFICATION	1.777068815028503E-6	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.999999998947271	WITHOUT_CLASSIFICATION	1.0527289715157827E-9	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.9998436239372538	WITHOUT_CLASSIFICATION	1.563760627463284E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9996879546377323	WITHOUT_CLASSIFICATION	3.1204536226773767E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9996879546377323	WITHOUT_CLASSIFICATION	3.1204536226773767E-4	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.999999480060265	WITHOUT_CLASSIFICATION	5.199397350991418E-7	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.99980038898827	WITHOUT_CLASSIFICATION	1.9961101173008724E-4	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999907058253	WITHOUT_CLASSIFICATION	9.29417468880169E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999907058253	WITHOUT_CLASSIFICATION	9.29417468880169E-9	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.9999989534155259	WITHOUT_CLASSIFICATION	1.0465844741101059E-6	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9999995648517316	WITHOUT_CLASSIFICATION	4.3514826846744555E-7	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.9999998742138247	WITHOUT_CLASSIFICATION	1.2578617526066845E-7	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.999384585713191	WITHOUT_CLASSIFICATION	6.154142868090088E-4	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.999987515972832	WITHOUT_CLASSIFICATION	1.2484027168144698E-5	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.9999982262721246	WITHOUT_CLASSIFICATION	1.7737278753738832E-6	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999958281342339	WITHOUT_CLASSIFICATION	4.17186576615337E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999983085739043	WITHOUT_CLASSIFICATION	1.6914260958580936E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999983085739043	WITHOUT_CLASSIFICATION	1.6914260958580936E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9990427679780346	WITHOUT_CLASSIFICATION	9.572320219654161E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998586776773289	WITHOUT_CLASSIFICATION	1.4132232267115776E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998586776773289	WITHOUT_CLASSIFICATION	1.4132232267115776E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998586776773289	WITHOUT_CLASSIFICATION	1.4132232267115776E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998586776773289	WITHOUT_CLASSIFICATION	1.4132232267115776E-4	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9995601752646943	WITHOUT_CLASSIFICATION	4.398247353056344E-4	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999980580031151	WITHOUT_CLASSIFICATION	1.9419968847559573E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999980580031151	WITHOUT_CLASSIFICATION	1.9419968847559573E-6	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9999325584591207	WITHOUT_CLASSIFICATION	6.744154087931011E-5	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999999688235093	WITHOUT_CLASSIFICATION	3.117649072040094E-8	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.9999984209888245	WITHOUT_CLASSIFICATION	1.5790111754713296E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999862384915	WITHOUT_CLASSIFICATION	1.37615084830802E-8	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.9999999720588763	WITHOUT_CLASSIFICATION	2.794112379319981E-8	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999999829486127	WITHOUT_CLASSIFICATION	1.705138728354813E-8	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999819101367011	WITHOUT_CLASSIFICATION	1.8089863298949193E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999819101367011	WITHOUT_CLASSIFICATION	1.8089863298949193E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999819101367011	WITHOUT_CLASSIFICATION	1.8089863298949193E-5	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.9999999982198513	WITHOUT_CLASSIFICATION	1.780148599502412E-9	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999999993305974	WITHOUT_CLASSIFICATION	6.69402548943491E-10	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.999999363173318	WITHOUT_CLASSIFICATION	6.368266820079853E-7	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999332142994	WITHOUT_CLASSIFICATION	6.678570068545285E-8	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999808552704	WITHOUT_CLASSIFICATION	1.914472951858834E-8	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.9999790243355345	WITHOUT_CLASSIFICATION	2.0975664465487916E-5	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.9999999843592794	WITHOUT_CLASSIFICATION	1.5640720645226564E-8	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999980834372789	WITHOUT_CLASSIFICATION	1.9165627211144187E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999980834372789	WITHOUT_CLASSIFICATION	1.9165627211144187E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999980834372789	WITHOUT_CLASSIFICATION	1.9165627211144187E-6	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.999998066143168	WITHOUT_CLASSIFICATION	1.9338568319691654E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999999839964426	WITHOUT_CLASSIFICATION	1.6003557409922889E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999999839964426	WITHOUT_CLASSIFICATION	1.6003557409922889E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999999839964426	WITHOUT_CLASSIFICATION	1.6003557409922889E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999999839964426	WITHOUT_CLASSIFICATION	1.6003557409922889E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999999839964426	WITHOUT_CLASSIFICATION	1.6003557409922889E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999999839964426	WITHOUT_CLASSIFICATION	1.6003557409922889E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999999839964426	WITHOUT_CLASSIFICATION	1.6003557409922889E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999999839964426	WITHOUT_CLASSIFICATION	1.6003557409922889E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999999839964426	WITHOUT_CLASSIFICATION	1.6003557409922889E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999988979811871	WITHOUT_CLASSIFICATION	1.1020188129033315E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999986664881416	WITHOUT_CLASSIFICATION	1.3335118582796878E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999986664881416	WITHOUT_CLASSIFICATION	1.3335118582796878E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999986664881416	WITHOUT_CLASSIFICATION	1.3335118582796878E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999996830170336	WITHOUT_CLASSIFICATION	3.169829664930631E-7	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999558015689703	WITHOUT_CLASSIFICATION	4.419843102961222E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999558015689703	WITHOUT_CLASSIFICATION	4.419843102961222E-5	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.9999118293863419	WITHOUT_CLASSIFICATION	8.817061365810083E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999998486168781	WITHOUT_CLASSIFICATION	1.5138312193328683E-7	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.999999984601093	WITHOUT_CLASSIFICATION	1.5398907006337214E-8	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999998768431339	WITHOUT_CLASSIFICATION	1.2315686606198122E-7	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999999517463601	WITHOUT_CLASSIFICATION	4.825363997114466E-8	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999919875855979	WITHOUT_CLASSIFICATION	8.012414401980864E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999992329460841	WITHOUT_CLASSIFICATION	7.670539159183566E-7	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999992329460841	WITHOUT_CLASSIFICATION	7.670539159183566E-7	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999992329460841	WITHOUT_CLASSIFICATION	7.670539159183566E-7	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9999952205641899	WITHOUT_CLASSIFICATION	4.779435810162028E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999973197831116	WITHOUT_CLASSIFICATION	2.680216888361694E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.999999226358299	WITHOUT_CLASSIFICATION	7.736417010748925E-7	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999994398621357	WITHOUT_CLASSIFICATION	5.60137864328269E-7	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.999996839905798	WITHOUT_CLASSIFICATION	3.160094202004699E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994233013006	WITHOUT_CLASSIFICATION	5.766986994302E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994233013006	WITHOUT_CLASSIFICATION	5.766986994302E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994233013006	WITHOUT_CLASSIFICATION	5.766986994302E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994233013006	WITHOUT_CLASSIFICATION	5.766986994302E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994233013006	WITHOUT_CLASSIFICATION	5.766986994302E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994233013006	WITHOUT_CLASSIFICATION	5.766986994302E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994233013006	WITHOUT_CLASSIFICATION	5.766986994302E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994233013006	WITHOUT_CLASSIFICATION	5.766986994302E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994233013006	WITHOUT_CLASSIFICATION	5.766986994302E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999995105709603	WITHOUT_CLASSIFICATION	4.894290398011924E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999995105709603	WITHOUT_CLASSIFICATION	4.894290398011924E-7	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999998137547617	WITHOUT_CLASSIFICATION	1.8624523829948932E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999998137547617	WITHOUT_CLASSIFICATION	1.8624523829948932E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978654805061	WITHOUT_CLASSIFICATION	2.1345194939087244E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978654805061	WITHOUT_CLASSIFICATION	2.1345194939087244E-6	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.9999995814262638	WITHOUT_CLASSIFICATION	4.1857373621800936E-7	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.999998744861594	WITHOUT_CLASSIFICATION	1.2551384059694831E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.999998744861594	WITHOUT_CLASSIFICATION	1.2551384059694831E-6	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999883514695801	WITHOUT_CLASSIFICATION	1.1648530419828339E-5	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999995986797031	WITHOUT_CLASSIFICATION	4.013202968305928E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999995986797031	WITHOUT_CLASSIFICATION	4.013202968305928E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999989347039284	WITHOUT_CLASSIFICATION	1.0652960716050443E-6	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.9999999787459839	WITHOUT_CLASSIFICATION	2.1254016168322058E-8	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.9999847986270546	WITHOUT_CLASSIFICATION	1.5201372945381805E-5	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.9999950180595901	WITHOUT_CLASSIFICATION	4.9819404098107385E-6	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999882705638513	WITHOUT_CLASSIFICATION	1.1729436148655344E-5	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999882705638513	WITHOUT_CLASSIFICATION	1.1729436148655344E-5	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.99999993513597	WITHOUT_CLASSIFICATION	6.48640300383797E-8	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.9999609241825588	WITHOUT_CLASSIFICATION	3.907581744133949E-5	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.9999963187244915	WITHOUT_CLASSIFICATION	3.681275508647518E-6	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999795570793114	WITHOUT_CLASSIFICATION	2.044292068858067E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999872979869	WITHOUT_CLASSIFICATION	1.2702013158317619E-8	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999996330066832	WITHOUT_CLASSIFICATION	3.669933168680383E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999995650282078	WITHOUT_CLASSIFICATION	4.349717921974688E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999993786802	WITHOUT_CLASSIFICATION	6.213198006570901E-9	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999999269670288	WITHOUT_CLASSIFICATION	7.303297121076728E-8	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999982850321526	WITHOUT_CLASSIFICATION	1.7149678473429959E-6	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.9999991973759879	WITHOUT_CLASSIFICATION	8.02624012098563E-7	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9999987633256573	WITHOUT_CLASSIFICATION	1.2366743427131897E-6	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.9999993368999707	WITHOUT_CLASSIFICATION	6.631000293262827E-7	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999999534958366	WITHOUT_CLASSIFICATION	4.650416339917409E-8	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.9999994610152476	WITHOUT_CLASSIFICATION	5.389847523766055E-7	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.9999998444147289	WITHOUT_CLASSIFICATION	1.5558527116348753E-7	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.9999972729477299	WITHOUT_CLASSIFICATION	2.7270522700253745E-6	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.9999999651502633	WITHOUT_CLASSIFICATION	3.4849736636652005E-8	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.9999937910148322	WITHOUT_CLASSIFICATION	6.208985167676861E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999954741834001	WITHOUT_CLASSIFICATION	4.525816599943298E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999954741834001	WITHOUT_CLASSIFICATION	4.525816599943298E-6	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999496805228877	WITHOUT_CLASSIFICATION	5.0319477112306535E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999995420307135	WITHOUT_CLASSIFICATION	4.5796928654327017E-7	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999906211650066	WITHOUT_CLASSIFICATION	9.378834993474272E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999685831483787	WITHOUT_CLASSIFICATION	3.141685162135942E-5	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999975368290297	WITHOUT_CLASSIFICATION	2.463170970276853E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.999997746828659	WITHOUT_CLASSIFICATION	2.253171340916773E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.999996413232249	WITHOUT_CLASSIFICATION	3.5867677511027825E-6	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999991053580813	WITHOUT_CLASSIFICATION	8.94641918787033E-7	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999999188975	WITHOUT_CLASSIFICATION	8.110250007303206E-8	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999999188975	WITHOUT_CLASSIFICATION	8.110250007303206E-8	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9999972298030186	WITHOUT_CLASSIFICATION	2.770196981327924E-6	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999998533393318	WITHOUT_CLASSIFICATION	1.466606681176266E-7	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999947897703483	WITHOUT_CLASSIFICATION	5.21022965181143E-6	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.999990222405541	WITHOUT_CLASSIFICATION	9.777594458986257E-6	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999904755107626	WITHOUT_CLASSIFICATION	9.524489237391632E-6	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999591959923	WITHOUT_CLASSIFICATION	4.0804007774798816E-8	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.9999999099447551	WITHOUT_CLASSIFICATION	9.005524498372643E-8	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999998250707758	WITHOUT_CLASSIFICATION	1.7492922414941143E-7	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.9999998490787189	WITHOUT_CLASSIFICATION	1.509212811603047E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999996644557412	WITHOUT_CLASSIFICATION	3.355442588528006E-7	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999996644557412	WITHOUT_CLASSIFICATION	3.355442588528006E-7	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9999972686371978	WITHOUT_CLASSIFICATION	2.7313628021040467E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999956485230916	WITHOUT_CLASSIFICATION	4.351476908278269E-6	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999991365178106	WITHOUT_CLASSIFICATION	8.634821894756037E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999995445141975	WITHOUT_CLASSIFICATION	4.554858025572817E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999995445141975	WITHOUT_CLASSIFICATION	4.554858025572817E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999999142787032	WITHOUT_CLASSIFICATION	8.572129685833965E-8	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999999142787032	WITHOUT_CLASSIFICATION	8.572129685833965E-8	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999915006967236	WITHOUT_CLASSIFICATION	8.499303276293475E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999504764814459	WITHOUT_CLASSIFICATION	4.952351855419224E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999998942584858	WITHOUT_CLASSIFICATION	1.0574151421282303E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999998942584858	WITHOUT_CLASSIFICATION	1.0574151421282303E-7	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999990572443356	WITHOUT_CLASSIFICATION	9.427556644390601E-7	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999991225727289	WITHOUT_CLASSIFICATION	8.774272710222385E-7	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.9999996291233452	WITHOUT_CLASSIFICATION	3.7087665484771114E-7	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.9999985913255127	WITHOUT_CLASSIFICATION	1.4086744872794201E-6	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.9999926668494662	WITHOUT_CLASSIFICATION	7.33315053378307E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999844109	WITHOUT_CLASSIFICATION	1.5589100050039137E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999844109	WITHOUT_CLASSIFICATION	1.5589100050039137E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999844109	WITHOUT_CLASSIFICATION	1.5589100050039137E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999844109	WITHOUT_CLASSIFICATION	1.5589100050039137E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999844109	WITHOUT_CLASSIFICATION	1.5589100050039137E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999844109	WITHOUT_CLASSIFICATION	1.5589100050039137E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999844109	WITHOUT_CLASSIFICATION	1.5589100050039137E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999844109	WITHOUT_CLASSIFICATION	1.5589100050039137E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999844109	WITHOUT_CLASSIFICATION	1.5589100050039137E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999844109	WITHOUT_CLASSIFICATION	1.5589100050039137E-8	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999844109	WITHOUT_CLASSIFICATION	1.5589100050039137E-8	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.99999906814727	WITHOUT_CLASSIFICATION	9.318527300014056E-7	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.9999847769934923	WITHOUT_CLASSIFICATION	1.5223006507734076E-5	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.9999997914497946	WITHOUT_CLASSIFICATION	2.0855020545998193E-7	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.9999994236358939	WITHOUT_CLASSIFICATION	5.76364106175193E-7	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999978071991885	WITHOUT_CLASSIFICATION	2.192800811487615E-6	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.9999990564084625	WITHOUT_CLASSIFICATION	9.435915374393536E-7	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.999999837358825	WITHOUT_CLASSIFICATION	1.6264117497342718E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999994767868767	WITHOUT_CLASSIFICATION	5.232131232992889E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999994767868767	WITHOUT_CLASSIFICATION	5.232131232992889E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999994767868767	WITHOUT_CLASSIFICATION	5.232131232992889E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999994767868767	WITHOUT_CLASSIFICATION	5.232131232992889E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999994767868767	WITHOUT_CLASSIFICATION	5.232131232992889E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999994767868767	WITHOUT_CLASSIFICATION	5.232131232992889E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999994767868767	WITHOUT_CLASSIFICATION	5.232131232992889E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999994767868767	WITHOUT_CLASSIFICATION	5.232131232992889E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999994767868767	WITHOUT_CLASSIFICATION	5.232131232992889E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999994767868767	WITHOUT_CLASSIFICATION	5.232131232992889E-7	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.9999451512408735	WITHOUT_CLASSIFICATION	5.484875912662032E-5	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999986367620034	WITHOUT_CLASSIFICATION	1.3632379965248685E-6	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.9999759612907048	WITHOUT_CLASSIFICATION	2.4038709295177123E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995363337708	WITHOUT_CLASSIFICATION	4.63666229175978E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995363337708	WITHOUT_CLASSIFICATION	4.63666229175978E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995363337708	WITHOUT_CLASSIFICATION	4.63666229175978E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995363337708	WITHOUT_CLASSIFICATION	4.63666229175978E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995363337708	WITHOUT_CLASSIFICATION	4.63666229175978E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995363337708	WITHOUT_CLASSIFICATION	4.63666229175978E-7	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995363337708	WITHOUT_CLASSIFICATION	4.63666229175978E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999928529486	WITHOUT_CLASSIFICATION	7.147051416774768E-9	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999928529486	WITHOUT_CLASSIFICATION	7.147051416774768E-9	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999928529486	WITHOUT_CLASSIFICATION	7.147051416774768E-9	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999928529486	WITHOUT_CLASSIFICATION	7.147051416774768E-9	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999928529486	WITHOUT_CLASSIFICATION	7.147051416774768E-9	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.9999979872824093	WITHOUT_CLASSIFICATION	2.0127175907927808E-6	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999994980359524	WITHOUT_CLASSIFICATION	5.01964047592788E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999992105355398	WITHOUT_CLASSIFICATION	7.894644603442848E-7	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.999997162950835	WITHOUT_CLASSIFICATION	2.8370491651263363E-6	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9999967877118132	WITHOUT_CLASSIFICATION	3.2122881868876565E-6	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.9999997748012553	WITHOUT_CLASSIFICATION	2.2519874467303901E-7	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.9999579244975596	WITHOUT_CLASSIFICATION	4.207550244035341E-5	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.999999621790013	WITHOUT_CLASSIFICATION	3.7820998696810805E-7	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9999935186860722	WITHOUT_CLASSIFICATION	6.4813139277952796E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981218735368	WITHOUT_CLASSIFICATION	1.878126463244239E-6	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.999999934026517	WITHOUT_CLASSIFICATION	6.597348296415882E-8	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999923195091694	WITHOUT_CLASSIFICATION	7.680490830533899E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999984947419086	WITHOUT_CLASSIFICATION	1.5052580914366761E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999984947419086	WITHOUT_CLASSIFICATION	1.5052580914366761E-6	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999791206742	WITHOUT_CLASSIFICATION	2.087932580739395E-8	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999996619828775	WITHOUT_CLASSIFICATION	3.380171225219277E-7	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999999311052343	WITHOUT_CLASSIFICATION	6.889476562014693E-8	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.9999963426854324	WITHOUT_CLASSIFICATION	3.6573145674886462E-6	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.9999961458459075	WITHOUT_CLASSIFICATION	3.854154092607222E-6	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.999999992134339	WITHOUT_CLASSIFICATION	7.86566100706996E-9	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9762376935146803	WITHOUT_CLASSIFICATION	0.02376230648531986	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.9999999738796129	WITHOUT_CLASSIFICATION	2.6120387056830745E-8	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.9999973613060953	WITHOUT_CLASSIFICATION	2.6386939046747445E-6	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999993313839066	WITHOUT_CLASSIFICATION	6.686160933444983E-7	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.9999996354306734	WITHOUT_CLASSIFICATION	3.6456932661518127E-7	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999985792634372	WITHOUT_CLASSIFICATION	1.4207365627764292E-6	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.9999927317254959	WITHOUT_CLASSIFICATION	7.2682745040597245E-6	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999998681861679	WITHOUT_CLASSIFICATION	1.3181383211592884E-7	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.999995303478764	WITHOUT_CLASSIFICATION	4.696521236037309E-6	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.999996871631831	WITHOUT_CLASSIFICATION	3.1283681689768277E-6	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.999482102750768	WITHOUT_CLASSIFICATION	5.178972492320436E-4	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.9999999421218678	WITHOUT_CLASSIFICATION	5.7878132225190564E-8	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.999993195089378	WITHOUT_CLASSIFICATION	6.804910622009261E-6	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.999999191611368	WITHOUT_CLASSIFICATION	8.083886320710668E-7	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.9999998402393692	WITHOUT_CLASSIFICATION	1.59760630813741E-7	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.9999998170741485	WITHOUT_CLASSIFICATION	1.8292585152487307E-7	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999985561215782	WITHOUT_CLASSIFICATION	1.4438784217958074E-6	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999927242939	WITHOUT_CLASSIFICATION	7.2757061840729185E-9	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.9999915307906101	WITHOUT_CLASSIFICATION	8.469209389972747E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999900362799855	WITHOUT_CLASSIFICATION	9.963720014542172E-6	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.9999989483428876	WITHOUT_CLASSIFICATION	1.0516571124020701E-6	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.9999906934585924	WITHOUT_CLASSIFICATION	9.306541407632566E-6	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.9999999369552126	WITHOUT_CLASSIFICATION	6.304478741245804E-8	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999992024309	WITHOUT_CLASSIFICATION	7.975691435151515E-10	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.999999872578439	WITHOUT_CLASSIFICATION	1.2742156101688003E-7	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.9999992624215224	WITHOUT_CLASSIFICATION	7.375784775575967E-7	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999890480448	WITHOUT_CLASSIFICATION	1.0951955209080145E-8	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999890480448	WITHOUT_CLASSIFICATION	1.0951955209080145E-8	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999938699196965	WITHOUT_CLASSIFICATION	6.1300803035447025E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999996803155569	WITHOUT_CLASSIFICATION	3.1968444317218384E-7	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999998848103681	WITHOUT_CLASSIFICATION	1.1518963186912054E-7	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999998848103681	WITHOUT_CLASSIFICATION	1.1518963186912054E-7	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.9999966841802295	WITHOUT_CLASSIFICATION	3.3158197706281567E-6	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999659883646	WITHOUT_CLASSIFICATION	3.401163539974701E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999659883646	WITHOUT_CLASSIFICATION	3.401163539974701E-8	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999659883646	WITHOUT_CLASSIFICATION	3.401163539974701E-8	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999996803155569	WITHOUT_CLASSIFICATION	3.1968444317218384E-7	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999757322874553	WITHOUT_CLASSIFICATION	2.4267712544750742E-5	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999999787268156	WITHOUT_CLASSIFICATION	2.127318442895472E-8	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999996803155569	WITHOUT_CLASSIFICATION	3.1968444317218384E-7	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999996803155569	WITHOUT_CLASSIFICATION	3.1968444317218384E-7	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.9999996803155569	WITHOUT_CLASSIFICATION	3.1968444317218384E-7	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.9999998054636997	WITHOUT_CLASSIFICATION	1.9453630031281927E-7	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.9999987275261755	WITHOUT_CLASSIFICATION	1.2724738245003424E-6	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999474965049043	WITHOUT_CLASSIFICATION	5.250349509567546E-5	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999992364287996	WITHOUT_CLASSIFICATION	7.635712004785363E-7	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9998918717052288	WITHOUT_CLASSIFICATION	1.0812829477116476E-4	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999986698848942	WITHOUT_CLASSIFICATION	1.330115105768251E-6	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.9999999987309091	WITHOUT_CLASSIFICATION	1.2690908914823404E-9	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999986698848942	WITHOUT_CLASSIFICATION	1.330115105768251E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.9975353403510381	WITHOUT_CLASSIFICATION	0.0024646596489620327	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999997763032451	WITHOUT_CLASSIFICATION	2.23696754988834E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999986698848942	WITHOUT_CLASSIFICATION	1.330115105768251E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999986698848942	WITHOUT_CLASSIFICATION	1.330115105768251E-6	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999996006888983	WITHOUT_CLASSIFICATION	3.993111016599265E-7	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999998110225726	WITHOUT_CLASSIFICATION	1.8897742732965638E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999999736534363	WITHOUT_CLASSIFICATION	2.634656372229653E-8	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.9999995758305965	WITHOUT_CLASSIFICATION	4.2416940349774364E-7	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999999996953547	WITHOUT_CLASSIFICATION	3.046453310882388E-10	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.999999927624324	WITHOUT_CLASSIFICATION	7.237567596886627E-8	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999993856418822	WITHOUT_CLASSIFICATION	6.143581177898259E-7	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999883177707766	WITHOUT_CLASSIFICATION	1.1682229223456223E-5	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999883177707766	WITHOUT_CLASSIFICATION	1.1682229223456223E-5	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.9999987963090856	WITHOUT_CLASSIFICATION	1.203690914367072E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999984253517699	WITHOUT_CLASSIFICATION	1.5746482301768937E-6	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.5064831105309147	DEFECT	0.4935168894690854	WITHOUT_CLASSIFICATION
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997977855382	WITHOUT_CLASSIFICATION	2.0221446173093127E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999999089975166	WITHOUT_CLASSIFICATION	9.100248334595998E-8	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999999089975166	WITHOUT_CLASSIFICATION	9.100248334595998E-8	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999999089975166	WITHOUT_CLASSIFICATION	9.100248334595998E-8	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997977855382	WITHOUT_CLASSIFICATION	2.0221446173093127E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997977855382	WITHOUT_CLASSIFICATION	2.0221446173093127E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997977855382	WITHOUT_CLASSIFICATION	2.0221446173093127E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997977855382	WITHOUT_CLASSIFICATION	2.0221446173093127E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997977855382	WITHOUT_CLASSIFICATION	2.0221446173093127E-7	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.9999997742572609	WITHOUT_CLASSIFICATION	2.257427391345507E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999998132519583	WITHOUT_CLASSIFICATION	1.8674804166904622E-7	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999998394858429	WITHOUT_CLASSIFICATION	1.605141570383392E-7	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999998394858429	WITHOUT_CLASSIFICATION	1.605141570383392E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999998132519583	WITHOUT_CLASSIFICATION	1.8674804166904622E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999998132519583	WITHOUT_CLASSIFICATION	1.8674804166904622E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999998132519583	WITHOUT_CLASSIFICATION	1.8674804166904622E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999997280707744	WITHOUT_CLASSIFICATION	2.719292255467086E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999997280707744	WITHOUT_CLASSIFICATION	2.719292255467086E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999997280707744	WITHOUT_CLASSIFICATION	2.719292255467086E-7	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999999439127151	WITHOUT_CLASSIFICATION	5.608728489831756E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9762376935146803	WITHOUT_CLASSIFICATION	0.02376230648531986	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999998132519583	WITHOUT_CLASSIFICATION	1.8674804166904622E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999997280707744	WITHOUT_CLASSIFICATION	2.719292255467086E-7	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999998702403287	WITHOUT_CLASSIFICATION	1.2975967136904277E-7	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.9999908969307099	WITHOUT_CLASSIFICATION	9.103069290071789E-6	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.9999950116944712	WITHOUT_CLASSIFICATION	4.988305528758175E-6	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.9999993658830297	WITHOUT_CLASSIFICATION	6.341169703036556E-7	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.9999998465925445	WITHOUT_CLASSIFICATION	1.5340745563033484E-7	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.999999489388042	WITHOUT_CLASSIFICATION	5.106119580611346E-7	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.999999791250705	WITHOUT_CLASSIFICATION	2.0874929504349485E-7	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.9999980844086253	WITHOUT_CLASSIFICATION	1.915591374813661E-6	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999644702067556	WITHOUT_CLASSIFICATION	3.552979324438058E-5	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999999205774733	WITHOUT_CLASSIFICATION	7.942252671469757E-8	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999999205774733	WITHOUT_CLASSIFICATION	7.942252671469757E-8	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.999999922871328	WITHOUT_CLASSIFICATION	7.712867198846574E-8	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.999999922871328	WITHOUT_CLASSIFICATION	7.712867198846574E-8	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999999117378858	WITHOUT_CLASSIFICATION	8.826211422309517E-8	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999999117378858	WITHOUT_CLASSIFICATION	8.826211422309517E-8	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.9999999119447497	WITHOUT_CLASSIFICATION	8.805525032979051E-8	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.9999972292093654	WITHOUT_CLASSIFICATION	2.770790634563108E-6	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.9999947865513207	WITHOUT_CLASSIFICATION	5.213448679341704E-6	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.9999980889024908	WITHOUT_CLASSIFICATION	1.911097509185251E-6	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.9999988215187908	WITHOUT_CLASSIFICATION	1.1784812091308833E-6	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.9999962903060143	WITHOUT_CLASSIFICATION	3.7096939856599364E-6	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.9999999912295613	WITHOUT_CLASSIFICATION	8.77043870144297E-9	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.9999996634428913	WITHOUT_CLASSIFICATION	3.3655710883461897E-7	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.9999999988989609	WITHOUT_CLASSIFICATION	1.1010390444222114E-9	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999885341684636	WITHOUT_CLASSIFICATION	1.1465831536516087E-5	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999998251982487	WITHOUT_CLASSIFICATION	1.7480175123415713E-7	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999992364287996	WITHOUT_CLASSIFICATION	7.635712004785363E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999997723838454	WITHOUT_CLASSIFICATION	2.2761615471810582E-7	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999998498595425	WITHOUT_CLASSIFICATION	1.5014045755769188E-7	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.9999999727783265	WITHOUT_CLASSIFICATION	2.7221673445715406E-8	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999994643016246	WITHOUT_CLASSIFICATION	5.356983754541117E-7	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999994643016246	WITHOUT_CLASSIFICATION	5.356983754541117E-7	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.9999995065350132	WITHOUT_CLASSIFICATION	4.934649867693565E-7	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9999959826954137	WITHOUT_CLASSIFICATION	4.017304586295019E-6	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.9999995020799957	WITHOUT_CLASSIFICATION	4.979200043503797E-7	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.9999999723262263	WITHOUT_CLASSIFICATION	2.767377366084197E-8	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.9999997163729364	WITHOUT_CLASSIFICATION	2.836270636848244E-7	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.9999993522581281	WITHOUT_CLASSIFICATION	6.477418719156555E-7	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.999998641167824	WITHOUT_CLASSIFICATION	1.3588321759802888E-6	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9999999910462446	WITHOUT_CLASSIFICATION	8.953755401335212E-9	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.9999999263269401	WITHOUT_CLASSIFICATION	7.367305983365511E-8	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.9998819009044745	WITHOUT_CLASSIFICATION	1.1809909552549539E-4	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.9999094838775838	WITHOUT_CLASSIFICATION	9.051612241616186E-5	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999278181315422	WITHOUT_CLASSIFICATION	7.218186845782221E-5	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999922073102057	WITHOUT_CLASSIFICATION	7.79268979437198E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999994776212895	WITHOUT_CLASSIFICATION	5.223787104521657E-7	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9999986104351867	WITHOUT_CLASSIFICATION	1.3895648133779655E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999995153510174	WITHOUT_CLASSIFICATION	4.846489825813847E-7	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999995153510174	WITHOUT_CLASSIFICATION	4.846489825813847E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999998077145432	WITHOUT_CLASSIFICATION	1.9228545673358772E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999998077145432	WITHOUT_CLASSIFICATION	1.9228545673358772E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999984164135748	WITHOUT_CLASSIFICATION	1.5835864251038407E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999984164135748	WITHOUT_CLASSIFICATION	1.5835864251038407E-6	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.99998837369358	WITHOUT_CLASSIFICATION	1.1626306420016393E-5	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999984253517699	WITHOUT_CLASSIFICATION	1.5746482301768937E-6	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9995823136542019	WITHOUT_CLASSIFICATION	4.176863457981102E-4	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9991685901305326	WITHOUT_CLASSIFICATION	8.314098694674405E-4	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999999354378027	WITHOUT_CLASSIFICATION	6.456219727065127E-8	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999996394029697	WITHOUT_CLASSIFICATION	3.605970303973794E-7	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999995153510174	WITHOUT_CLASSIFICATION	4.846489825813847E-7	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.999999163332352	WITHOUT_CLASSIFICATION	8.366676479855309E-7	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.999995578394101	WITHOUT_CLASSIFICATION	4.421605899012278E-6	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.9999999974646165	WITHOUT_CLASSIFICATION	2.5353834509982604E-9	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.99999992590291	WITHOUT_CLASSIFICATION	7.409708999305313E-8	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999998077145432	WITHOUT_CLASSIFICATION	1.9228545673358772E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999984164135748	WITHOUT_CLASSIFICATION	1.5835864251038407E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.9999984253517699	WITHOUT_CLASSIFICATION	1.5746482301768937E-6	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999999262001327	WITHOUT_CLASSIFICATION	7.379986732723822E-8	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9999995663576267	WITHOUT_CLASSIFICATION	4.3364237334039987E-7	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999950232577386	WITHOUT_CLASSIFICATION	4.976742261449973E-6	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.9999999441842788	WITHOUT_CLASSIFICATION	5.581572114879503E-8	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9999997449683249	WITHOUT_CLASSIFICATION	2.550316750361093E-7	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9999995561847648	WITHOUT_CLASSIFICATION	4.4381523524483555E-7	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999850497606805	WITHOUT_CLASSIFICATION	1.4950239319446814E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999987412499779	WITHOUT_CLASSIFICATION	1.2587500221128639E-6	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.9999831962528053	WITHOUT_CLASSIFICATION	1.6803747194687408E-5	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999344192118335	WITHOUT_CLASSIFICATION	6.558078816655267E-5	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999998804704748	WITHOUT_CLASSIFICATION	1.1952952514945294E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999870413069489	WITHOUT_CLASSIFICATION	1.2958693051174191E-5	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999999585404512	WITHOUT_CLASSIFICATION	4.145954881213591E-8	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999999585404512	WITHOUT_CLASSIFICATION	4.145954881213591E-8	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999999262156155	WITHOUT_CLASSIFICATION	7.378438452221847E-8	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999999262156155	WITHOUT_CLASSIFICATION	7.378438452221847E-8	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999994015166634	WITHOUT_CLASSIFICATION	5.984833366117846E-7	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.9999994015166634	WITHOUT_CLASSIFICATION	5.984833366117846E-7	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.99999198285877	WITHOUT_CLASSIFICATION	8.017141230008706E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999814427737965	WITHOUT_CLASSIFICATION	1.855722620351615E-5	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.9999871135862048	WITHOUT_CLASSIFICATION	1.2886413795110202E-5	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.9999999118782077	WITHOUT_CLASSIFICATION	8.812179228294725E-8	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.999983890250021	WITHOUT_CLASSIFICATION	1.6109749979039536E-5	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999993493938564	WITHOUT_CLASSIFICATION	6.506061436414674E-7	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999992179054331	WITHOUT_CLASSIFICATION	7.820945669895734E-7	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999992179054331	WITHOUT_CLASSIFICATION	7.820945669895734E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999998603363519	WITHOUT_CLASSIFICATION	1.3966364806568573E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.9999998603363519	WITHOUT_CLASSIFICATION	1.3966364806568573E-7	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.999999976183402	WITHOUT_CLASSIFICATION	2.3816597944577693E-8	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999988264247266	WITHOUT_CLASSIFICATION	1.1735752733727714E-6	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999994892352083	WITHOUT_CLASSIFICATION	5.107647916552657E-7	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999995127116341	WITHOUT_CLASSIFICATION	4.87288365807101E-7	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.999975883821096	WITHOUT_CLASSIFICATION	2.4116178903999316E-5	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999991341120141	WITHOUT_CLASSIFICATION	8.658879859475245E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999988114088053	WITHOUT_CLASSIFICATION	1.1885911946452921E-6	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999988264247266	WITHOUT_CLASSIFICATION	1.1735752733727714E-6	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.9999994892352083	WITHOUT_CLASSIFICATION	5.107647916552657E-7	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999995127116341	WITHOUT_CLASSIFICATION	4.87288365807101E-7	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.9999999124497285	WITHOUT_CLASSIFICATION	8.755027149593306E-8	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.9999999279314277	WITHOUT_CLASSIFICATION	7.206857235024612E-8	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.999999898768226	WITHOUT_CLASSIFICATION	1.0123177388529033E-7	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.9999812339020953	WITHOUT_CLASSIFICATION	1.8766097904808243E-5	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9999849551222831	WITHOUT_CLASSIFICATION	1.5044877716971153E-5	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9999937236526505	WITHOUT_CLASSIFICATION	6.27634734957639E-6	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.9999772493337183	WITHOUT_CLASSIFICATION	2.2750666281645955E-5	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999993250477226	WITHOUT_CLASSIFICATION	6.749522774731023E-7	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.9999545254467431	WITHOUT_CLASSIFICATION	4.547455325694053E-5	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999995173880046	WITHOUT_CLASSIFICATION	4.826119954040725E-7	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.9999998462688697	WITHOUT_CLASSIFICATION	1.5373113016092412E-7	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999999420766926	WITHOUT_CLASSIFICATION	5.792330728622499E-8	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999999420766926	WITHOUT_CLASSIFICATION	5.792330728622499E-8	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999990351605142	WITHOUT_CLASSIFICATION	9.648394857614716E-7	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999990351605142	WITHOUT_CLASSIFICATION	9.648394857614716E-7	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9999986642075456	WITHOUT_CLASSIFICATION	1.3357924543599904E-6	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.9999998916029603	WITHOUT_CLASSIFICATION	1.083970397539472E-7	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.999998987396644	WITHOUT_CLASSIFICATION	1.0126033559894256E-6	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999994930743249	WITHOUT_CLASSIFICATION	5.069256751510187E-7	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9999988296045662	WITHOUT_CLASSIFICATION	1.1703954337061223E-6	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.9999996663641123	WITHOUT_CLASSIFICATION	3.3363588771049714E-7	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999987412499779	WITHOUT_CLASSIFICATION	1.2587500221128639E-6	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.9999989355154378	WITHOUT_CLASSIFICATION	1.0644845621625154E-6	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.9999982522935036	WITHOUT_CLASSIFICATION	1.7477064963041529E-6	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.9999996816156873	WITHOUT_CLASSIFICATION	3.1838431280444465E-7	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999290764137412	WITHOUT_CLASSIFICATION	7.092358625878684E-5	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999988791009182	WITHOUT_CLASSIFICATION	1.1208990817080853E-6	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999989011343337	WITHOUT_CLASSIFICATION	1.0988656663477995E-6	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999989011343337	WITHOUT_CLASSIFICATION	1.0988656663477995E-6	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999318651073678	WITHOUT_CLASSIFICATION	6.813489263227531E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999979140290688	WITHOUT_CLASSIFICATION	2.085970931163741E-6	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999002587745569	WITHOUT_CLASSIFICATION	9.974122544310878E-5	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999055639472844	WITHOUT_CLASSIFICATION	9.443605271566547E-5	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.9999980111090112	WITHOUT_CLASSIFICATION	1.9888909887322406E-6	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.9999971826659144	WITHOUT_CLASSIFICATION	2.8173340856535164E-6	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.9999626840189156	WITHOUT_CLASSIFICATION	3.731598108445891E-5	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9999956287767543	WITHOUT_CLASSIFICATION	4.371223245643918E-6	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.9999522641588451	WITHOUT_CLASSIFICATION	4.773584115491327E-5	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.999998280217135	WITHOUT_CLASSIFICATION	1.7197828650062192E-6	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999997763032451	WITHOUT_CLASSIFICATION	2.23696754988834E-7	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9998710519037369	WITHOUT_CLASSIFICATION	1.289480962631557E-4	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999967034940701	WITHOUT_CLASSIFICATION	3.296505929744021E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999937007282784	WITHOUT_CLASSIFICATION	6.2992717215318615E-6	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999975467683492	WITHOUT_CLASSIFICATION	2.4532316508103025E-6	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999294074761954	WITHOUT_CLASSIFICATION	7.059252380450113E-5	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.9999986467283349	WITHOUT_CLASSIFICATION	1.3532716649946436E-6	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999772772263045	WITHOUT_CLASSIFICATION	2.2722773695616495E-5	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.9999990353782436	WITHOUT_CLASSIFICATION	9.646217564042198E-7	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.9999989451663481	WITHOUT_CLASSIFICATION	1.0548336519293684E-6	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9999939161449044	WITHOUT_CLASSIFICATION	6.083855095599107E-6	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.9999981550703745	WITHOUT_CLASSIFICATION	1.844929625407004E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999937007282784	WITHOUT_CLASSIFICATION	6.2992717215318615E-6	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.999999276028321	WITHOUT_CLASSIFICATION	7.239716790138626E-7	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999975467683492	WITHOUT_CLASSIFICATION	2.4532316508103025E-6	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999369608122922	WITHOUT_CLASSIFICATION	6.303918770773606E-5	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999543281450018	WITHOUT_CLASSIFICATION	4.56718549982223E-5	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999294074761954	WITHOUT_CLASSIFICATION	7.059252380450113E-5	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.9999772772263045	WITHOUT_CLASSIFICATION	2.2722773695616495E-5	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999994381524262	WITHOUT_CLASSIFICATION	5.618475737739871E-7	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.9999984239224914	WITHOUT_CLASSIFICATION	1.5760775085818244E-6	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999998890705494	WITHOUT_CLASSIFICATION	1.1092945060293772E-7	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.9999947868351735	WITHOUT_CLASSIFICATION	5.213164826439912E-6	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.9999969162571087	WITHOUT_CLASSIFICATION	3.08374289124042E-6	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9999917298717154	WITHOUT_CLASSIFICATION	8.270128284641616E-6	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.9999990625637833	WITHOUT_CLASSIFICATION	9.374362165991532E-7	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.999985826794425	WITHOUT_CLASSIFICATION	1.417320557497145E-5	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.9999559045394385	WITHOUT_CLASSIFICATION	4.4095460561487436E-5	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.9999968930857214	WITHOUT_CLASSIFICATION	3.106914278695904E-6	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.9999993287254191	WITHOUT_CLASSIFICATION	6.712745808005225E-7	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.9999868979070745	WITHOUT_CLASSIFICATION	1.3102092925474432E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999369608122922	WITHOUT_CLASSIFICATION	6.303918770773606E-5	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.9999994381524262	WITHOUT_CLASSIFICATION	5.618475737739871E-7	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.999985826794425	WITHOUT_CLASSIFICATION	1.417320557497145E-5	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.9999946157876811	WITHOUT_CLASSIFICATION	5.384212318805741E-6	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999928619510817	WITHOUT_CLASSIFICATION	7.138048918224185E-6	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999903203420576	WITHOUT_CLASSIFICATION	9.679657942453859E-6	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.9999818023520358	WITHOUT_CLASSIFICATION	1.819764796411629E-5	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.9999819191123833	WITHOUT_CLASSIFICATION	1.8080887616654584E-5	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.9999934782235775	WITHOUT_CLASSIFICATION	6.521776422562829E-6	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.9999887572012914	WITHOUT_CLASSIFICATION	1.1242798708498748E-5	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.9999996013848551	WITHOUT_CLASSIFICATION	3.9861514488846797E-7	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.9999997275404884	WITHOUT_CLASSIFICATION	2.7245951168411306E-7	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.9999992468675101	WITHOUT_CLASSIFICATION	7.531324899235556E-7	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999992882154205	WITHOUT_CLASSIFICATION	7.117845795278629E-7	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999993045058576	WITHOUT_CLASSIFICATION	6.954941424817346E-7	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.9999983243602898	WITHOUT_CLASSIFICATION	1.675639710165694E-6	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.9999993827501369	WITHOUT_CLASSIFICATION	6.172498631212364E-7	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.9999971725289752	WITHOUT_CLASSIFICATION	2.8274710248102954E-6	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.9999986935081473	WITHOUT_CLASSIFICATION	1.3064918527157939E-6	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.9999957842088317	WITHOUT_CLASSIFICATION	4.215791168348407E-6	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.9999999711140231	WITHOUT_CLASSIFICATION	2.8885976955482057E-8	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.999998240098892	WITHOUT_CLASSIFICATION	1.7599011080018633E-6	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.9999999532479144	WITHOUT_CLASSIFICATION	4.67520857141898E-8	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.9999999420455341	WITHOUT_CLASSIFICATION	5.795446589526941E-8	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.9984803952018242	WITHOUT_CLASSIFICATION	0.0015196047981759148	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.9999997105940115	WITHOUT_CLASSIFICATION	2.894059885525641E-7	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.9999982337199435	WITHOUT_CLASSIFICATION	1.7662800565057663E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999814427737965	WITHOUT_CLASSIFICATION	1.855722620351615E-5	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.999999976183402	WITHOUT_CLASSIFICATION	2.3816597944577693E-8	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999988264247266	WITHOUT_CLASSIFICATION	1.1735752733727714E-6	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.9999918738336221	WITHOUT_CLASSIFICATION	8.126166377879535E-6	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9999995268489275	WITHOUT_CLASSIFICATION	4.731510724670855E-7	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.9999983408872607	WITHOUT_CLASSIFICATION	1.6591127392738475E-6	DEFECT
// days	WITHOUT_CLASSIFICATION	0.9999941457462393	WITHOUT_CLASSIFICATION	5.854253760683144E-6	DEFECT
// months	WITHOUT_CLASSIFICATION	0.9999983110625349	WITHOUT_CLASSIFICATION	1.6889374650702935E-6	DEFECT
// years	WITHOUT_CLASSIFICATION	0.999991876335542	WITHOUT_CLASSIFICATION	8.123664458059122E-6	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.9999998741089792	WITHOUT_CLASSIFICATION	1.258910209213907E-7	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999979709274397	WITHOUT_CLASSIFICATION	2.0290725603715508E-6	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999983451666332	WITHOUT_CLASSIFICATION	1.6548333667861801E-6	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.9999338054200071	WITHOUT_CLASSIFICATION	6.619457999287134E-5	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.9999945942008679	WITHOUT_CLASSIFICATION	5.405799132070429E-6	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.9999970274026013	WITHOUT_CLASSIFICATION	2.972597398576464E-6	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.9999894975909354	WITHOUT_CLASSIFICATION	1.0502409064690426E-5	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9999606762321376	WITHOUT_CLASSIFICATION	3.9323767862325335E-5	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9999606762321376	WITHOUT_CLASSIFICATION	3.9323767862325335E-5	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999736314461969	WITHOUT_CLASSIFICATION	2.6368553803105644E-5	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999736314461969	WITHOUT_CLASSIFICATION	2.6368553803105644E-5	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.9996481248884295	WITHOUT_CLASSIFICATION	3.518751115704686E-4	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999995381967919	WITHOUT_CLASSIFICATION	4.6180320801518694E-7	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.9999999777283598	WITHOUT_CLASSIFICATION	2.227164010587225E-8	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.9999949053792687	WITHOUT_CLASSIFICATION	5.094620731203146E-6	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999879189692372	WITHOUT_CLASSIFICATION	1.2081030762867956E-5	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.9999803599147011	WITHOUT_CLASSIFICATION	1.9640085298847804E-5	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.9999999723795486	WITHOUT_CLASSIFICATION	2.762045132961322E-8	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9999999715419278	WITHOUT_CLASSIFICATION	2.8458072196870103E-8	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.99999881796217	WITHOUT_CLASSIFICATION	1.1820378300269431E-6	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999993493938564	WITHOUT_CLASSIFICATION	6.506061436414674E-7	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999995127116341	WITHOUT_CLASSIFICATION	4.87288365807101E-7	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999995173880046	WITHOUT_CLASSIFICATION	4.826119954040725E-7	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.9999699447470879	WITHOUT_CLASSIFICATION	3.005525291202773E-5	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.9999971644687402	WITHOUT_CLASSIFICATION	2.8355312597496815E-6	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999982588119144	WITHOUT_CLASSIFICATION	1.7411880855572348E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996189130527	WITHOUT_CLASSIFICATION	3.810869473990778E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997031253833	WITHOUT_CLASSIFICATION	2.9687461665004506E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999811070791	WITHOUT_CLASSIFICATION	1.8892920906920258E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999419286501	WITHOUT_CLASSIFICATION	5.807134989668329E-7	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.9999998977536354	WITHOUT_CLASSIFICATION	1.0224636460499353E-7	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.999999383159113	WITHOUT_CLASSIFICATION	6.16840887029381E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999901505329	WITHOUT_CLASSIFICATION	9.849467215089397E-9	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999342287212	WITHOUT_CLASSIFICATION	6.577127880272958E-8	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.9999994271581233	WITHOUT_CLASSIFICATION	5.728418767433461E-7	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999997427410525	WITHOUT_CLASSIFICATION	2.5725894740778306E-7	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999997427410525	WITHOUT_CLASSIFICATION	2.5725894740778306E-7	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.99999921986307	WITHOUT_CLASSIFICATION	7.801369298321371E-7	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.9999999880247267	WITHOUT_CLASSIFICATION	1.1975273351427648E-8	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.9999991988706927	WITHOUT_CLASSIFICATION	8.011293074055143E-7	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.9999991011397626	WITHOUT_CLASSIFICATION	8.988602373007871E-7	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.9999803438192775	WITHOUT_CLASSIFICATION	1.965618072253666E-5	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.9999914793104765	WITHOUT_CLASSIFICATION	8.520689523550129E-6	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999991886118486	WITHOUT_CLASSIFICATION	8.113881515125707E-7	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.999999952028184	WITHOUT_CLASSIFICATION	4.79718159246528E-8	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999991886118486	WITHOUT_CLASSIFICATION	8.113881515125707E-7	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.9999982895659286	WITHOUT_CLASSIFICATION	1.7104340713122775E-6	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.9999976124400157	WITHOUT_CLASSIFICATION	2.387559984190028E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.999999952028184	WITHOUT_CLASSIFICATION	4.79718159246528E-8	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9998335332612274	WITHOUT_CLASSIFICATION	1.6646673877273427E-4	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999998624647035	WITHOUT_CLASSIFICATION	1.375352964120852E-7	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.9999993231668631	WITHOUT_CLASSIFICATION	6.768331367862425E-7	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.9999904450250913	WITHOUT_CLASSIFICATION	9.554974908770187E-6	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.999987917504195	WITHOUT_CLASSIFICATION	1.2082495804984946E-5	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999502435490267	WITHOUT_CLASSIFICATION	4.9756450973282734E-5	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.999989576789618	WITHOUT_CLASSIFICATION	1.0423210381997337E-5	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.9999888294795589	WITHOUT_CLASSIFICATION	1.1170520441018426E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999998028819951	WITHOUT_CLASSIFICATION	1.9711800496975317E-7	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999999485552991	WITHOUT_CLASSIFICATION	5.1444700933797886E-8	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999999485552991	WITHOUT_CLASSIFICATION	5.1444700933797886E-8	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.9999999629570583	WITHOUT_CLASSIFICATION	3.7042941809454444E-8	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.9999994475850233	WITHOUT_CLASSIFICATION	5.524149766496943E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999636532943502	WITHOUT_CLASSIFICATION	3.634670564982721E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999636532943502	WITHOUT_CLASSIFICATION	3.634670564982721E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999636532943502	WITHOUT_CLASSIFICATION	3.634670564982721E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999821577639889	WITHOUT_CLASSIFICATION	1.784223601100851E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999821577639889	WITHOUT_CLASSIFICATION	1.784223601100851E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999821577639889	WITHOUT_CLASSIFICATION	1.784223601100851E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.999997332836624	WITHOUT_CLASSIFICATION	2.6671633760547325E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.999997332836624	WITHOUT_CLASSIFICATION	2.6671633760547325E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.999997332836624	WITHOUT_CLASSIFICATION	2.6671633760547325E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999854026111462	WITHOUT_CLASSIFICATION	1.4597388853860423E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999854026111462	WITHOUT_CLASSIFICATION	1.4597388853860423E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999988114088053	WITHOUT_CLASSIFICATION	1.1885911946452921E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999988114088053	WITHOUT_CLASSIFICATION	1.1885911946452921E-6	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.99998057431015	WITHOUT_CLASSIFICATION	1.9425689849975468E-5	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999987412499779	WITHOUT_CLASSIFICATION	1.2587500221128639E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.9999987412499779	WITHOUT_CLASSIFICATION	1.2587500221128639E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999850497606805	WITHOUT_CLASSIFICATION	1.4950239319446814E-5	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999344192118335	WITHOUT_CLASSIFICATION	6.558078816655267E-5	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999814427737965	WITHOUT_CLASSIFICATION	1.855722620351615E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999995381967919	WITHOUT_CLASSIFICATION	4.6180320801518694E-7	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999636532943502	WITHOUT_CLASSIFICATION	3.634670564982721E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999821577639889	WITHOUT_CLASSIFICATION	1.784223601100851E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9999821577639889	WITHOUT_CLASSIFICATION	1.784223601100851E-5	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.999997332836624	WITHOUT_CLASSIFICATION	2.6671633760547325E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.999997332836624	WITHOUT_CLASSIFICATION	2.6671633760547325E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999854026111462	WITHOUT_CLASSIFICATION	1.4597388853860423E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999854026111462	WITHOUT_CLASSIFICATION	1.4597388853860423E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999998624647035	WITHOUT_CLASSIFICATION	1.375352964120852E-7	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.9999972324524378	WITHOUT_CLASSIFICATION	2.767547562203756E-6	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.9999954686497865	WITHOUT_CLASSIFICATION	4.531350213523493E-6	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.999999383887955	WITHOUT_CLASSIFICATION	6.161120450409098E-7	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.9999967476651962	WITHOUT_CLASSIFICATION	3.2523348036613997E-6	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.9999984940937324	WITHOUT_CLASSIFICATION	1.5059062675849603E-6	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.9984716328866083	WITHOUT_CLASSIFICATION	0.0015283671133916156	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999632593221	WITHOUT_CLASSIFICATION	3.674067788845873E-8	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9999996079208259	WITHOUT_CLASSIFICATION	3.9207917404527536E-7	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9998894811164628	WITHOUT_CLASSIFICATION	1.1051888353718122E-4	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.9999996305888273	WITHOUT_CLASSIFICATION	3.694111726889288E-7	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9997931459992834	WITHOUT_CLASSIFICATION	2.0685400071658797E-4	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999990002807035	WITHOUT_CLASSIFICATION	9.997192965184359E-7	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999990002807035	WITHOUT_CLASSIFICATION	9.997192965184359E-7	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9999973628757315	WITHOUT_CLASSIFICATION	2.6371242685898836E-6	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9999973628757315	WITHOUT_CLASSIFICATION	2.6371242685898836E-6	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999665993037625	WITHOUT_CLASSIFICATION	3.34006962373728E-5	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999665993037625	WITHOUT_CLASSIFICATION	3.34006962373728E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999998624647035	WITHOUT_CLASSIFICATION	1.375352964120852E-7	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.9999850497606805	WITHOUT_CLASSIFICATION	1.4950239319446814E-5	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9999344192118335	WITHOUT_CLASSIFICATION	6.558078816655267E-5	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.99999198285877	WITHOUT_CLASSIFICATION	8.017141230008706E-6	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999993493938564	WITHOUT_CLASSIFICATION	6.506061436414674E-7	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.999999976183402	WITHOUT_CLASSIFICATION	2.3816597944577693E-8	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9999988264247266	WITHOUT_CLASSIFICATION	1.1735752733727714E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999979709274397	WITHOUT_CLASSIFICATION	2.0290725603715508E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999979709274397	WITHOUT_CLASSIFICATION	2.0290725603715508E-6	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999983451666332	WITHOUT_CLASSIFICATION	1.6548333667861801E-6	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999983451666332	WITHOUT_CLASSIFICATION	1.6548333667861801E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999995239418474	WITHOUT_CLASSIFICATION	4.760581526019476E-7	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.9999999053141048	WITHOUT_CLASSIFICATION	9.468589521760583E-8	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999999377749273	WITHOUT_CLASSIFICATION	6.222507258733106E-8	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999974053530831	WITHOUT_CLASSIFICATION	2.594646916892979E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999974053530831	WITHOUT_CLASSIFICATION	2.594646916892979E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999998871627309	WITHOUT_CLASSIFICATION	1.1283726896188472E-7	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999995062977249	WITHOUT_CLASSIFICATION	4.937022750568295E-7	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.999998768835855	WITHOUT_CLASSIFICATION	1.2311641449604582E-6	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999861595727635	WITHOUT_CLASSIFICATION	1.3840427236478786E-5	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999963480288607	WITHOUT_CLASSIFICATION	3.651971139301441E-6	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.9999913072511994	WITHOUT_CLASSIFICATION	8.69274880048891E-6	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999972524959879	WITHOUT_CLASSIFICATION	2.7475040120926088E-6	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999972524959879	WITHOUT_CLASSIFICATION	2.7475040120926088E-6	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.9999940509351961	WITHOUT_CLASSIFICATION	5.949064803954889E-6	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.9999959422476247	WITHOUT_CLASSIFICATION	4.057752375349541E-6	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999995239418474	WITHOUT_CLASSIFICATION	4.760581526019476E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999995239418474	WITHOUT_CLASSIFICATION	4.760581526019476E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9997894348680022	WITHOUT_CLASSIFICATION	2.1056513199785282E-4	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999974053530831	WITHOUT_CLASSIFICATION	2.594646916892979E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999990577204567	WITHOUT_CLASSIFICATION	9.422795432309491E-7	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999992336282492	WITHOUT_CLASSIFICATION	7.663717507909252E-7	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.9999992336282492	WITHOUT_CLASSIFICATION	7.663717507909252E-7	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999998871627309	WITHOUT_CLASSIFICATION	1.1283726896188472E-7	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999861595727635	WITHOUT_CLASSIFICATION	1.3840427236478786E-5	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.9999995781072498	WITHOUT_CLASSIFICATION	4.2189275012424676E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999989272871862	WITHOUT_CLASSIFICATION	1.072712813787301E-6	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.9999453487763992	WITHOUT_CLASSIFICATION	5.465122360080684E-5	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9999999440195143	WITHOUT_CLASSIFICATION	5.598048574471889E-8	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.9999996949599581	WITHOUT_CLASSIFICATION	3.050400418746507E-7	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.9999987019265396	WITHOUT_CLASSIFICATION	1.2980734603603172E-6	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.9999645669873788	WITHOUT_CLASSIFICATION	3.543301262116283E-5	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.9996898586542613	WITHOUT_CLASSIFICATION	3.101413457387442E-4	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999992484054013	WITHOUT_CLASSIFICATION	7.515945986744316E-7	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999993019967366	WITHOUT_CLASSIFICATION	6.980032633613789E-7	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999987557212445	WITHOUT_CLASSIFICATION	1.24427875546544E-6	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999937236076605	WITHOUT_CLASSIFICATION	6.276392339550087E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999964117777868	WITHOUT_CLASSIFICATION	3.588222213276775E-6	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999999944371121	WITHOUT_CLASSIFICATION	5.562887882155516E-9	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999995025493134	WITHOUT_CLASSIFICATION	4.974506866865582E-7	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999865017654523	WITHOUT_CLASSIFICATION	1.3498234547726417E-5	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999999756274277	WITHOUT_CLASSIFICATION	2.4372572355387306E-8	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.999999732368739	WITHOUT_CLASSIFICATION	2.676312609854337E-7	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999995271849376	WITHOUT_CLASSIFICATION	4.728150624657156E-7	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.999999879884249	WITHOUT_CLASSIFICATION	1.2011575099769711E-7	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999935193193484	WITHOUT_CLASSIFICATION	6.480680651552299E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999996550883873	WITHOUT_CLASSIFICATION	3.4491161267518426E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999961084361156	WITHOUT_CLASSIFICATION	3.891563884288361E-6	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999961084361156	WITHOUT_CLASSIFICATION	3.891563884288361E-6	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999961084361156	WITHOUT_CLASSIFICATION	3.891563884288361E-6	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999755244329437	WITHOUT_CLASSIFICATION	2.4475567056377808E-5	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999755244329437	WITHOUT_CLASSIFICATION	2.4475567056377808E-5	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.9999999870847651	WITHOUT_CLASSIFICATION	1.2915234817568695E-8	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.9999941141242205	WITHOUT_CLASSIFICATION	5.8858757795809E-6	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.9999997057728903	WITHOUT_CLASSIFICATION	2.9422710966563926E-7	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.9999995018219856	WITHOUT_CLASSIFICATION	4.981780143423349E-7	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999998850437994	WITHOUT_CLASSIFICATION	1.1495620051194455E-7	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999918666372943	WITHOUT_CLASSIFICATION	8.133362705701053E-6	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.999843234709064	WITHOUT_CLASSIFICATION	1.5676529093599918E-4	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9999975720022339	WITHOUT_CLASSIFICATION	2.427997766017578E-6	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999896745374541	WITHOUT_CLASSIFICATION	1.0325462545853036E-5	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.9999872707973264	WITHOUT_CLASSIFICATION	1.2729202673654387E-5	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.9999950694627923	WITHOUT_CLASSIFICATION	4.930537207704895E-6	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999919105655015	WITHOUT_CLASSIFICATION	8.089434498486573E-6	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.9999919105655015	WITHOUT_CLASSIFICATION	8.089434498486573E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.9999999610640138	WITHOUT_CLASSIFICATION	3.89359862279377E-8	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.9999364194294997	WITHOUT_CLASSIFICATION	6.358057050032175E-5	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999638182786	WITHOUT_CLASSIFICATION	3.61817214179556E-8	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999996058936759	WITHOUT_CLASSIFICATION	3.94106324104103E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999996058936759	WITHOUT_CLASSIFICATION	3.94106324104103E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999996058936759	WITHOUT_CLASSIFICATION	3.94106324104103E-7	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999999874742931	WITHOUT_CLASSIFICATION	1.2525706892946095E-8	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999852327853	WITHOUT_CLASSIFICATION	1.4767214704612144E-8	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999983888167	WITHOUT_CLASSIFICATION	1.6111832074118396E-9	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999993322744155	WITHOUT_CLASSIFICATION	6.677255845034285E-7	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999922073102057	WITHOUT_CLASSIFICATION	7.79268979437198E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999994776212895	WITHOUT_CLASSIFICATION	5.223787104521657E-7	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999937236076605	WITHOUT_CLASSIFICATION	6.276392339550087E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999964117777868	WITHOUT_CLASSIFICATION	3.588222213276775E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.999999732368739	WITHOUT_CLASSIFICATION	2.676312609854337E-7	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999995271849376	WITHOUT_CLASSIFICATION	4.728150624657156E-7	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.999999879884249	WITHOUT_CLASSIFICATION	1.2011575099769711E-7	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999935193193484	WITHOUT_CLASSIFICATION	6.480680651552299E-6	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999996550883873	WITHOUT_CLASSIFICATION	3.4491161267518426E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999996058936759	WITHOUT_CLASSIFICATION	3.94106324104103E-7	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.9999992980292378	WITHOUT_CLASSIFICATION	7.019707621260265E-7	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999999839607633	WITHOUT_CLASSIFICATION	1.6039236725094492E-8	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999992535479072	WITHOUT_CLASSIFICATION	7.464520928497237E-7	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.9675497365749237	WITHOUT_CLASSIFICATION	0.032450263425076314	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.9998991259961562	WITHOUT_CLASSIFICATION	1.0087400384388452E-4	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.9999982742988348	WITHOUT_CLASSIFICATION	1.7257011652512551E-6	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999981652933252	WITHOUT_CLASSIFICATION	1.8347066748277795E-6	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999999330483861	WITHOUT_CLASSIFICATION	6.695161397351952E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999936765021469	WITHOUT_CLASSIFICATION	6.323497853042608E-6	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999936765021469	WITHOUT_CLASSIFICATION	6.323497853042608E-6	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.99999945400547	WITHOUT_CLASSIFICATION	5.459945300516802E-7	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.99999945400547	WITHOUT_CLASSIFICATION	5.459945300516802E-7	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.9999998105977987	WITHOUT_CLASSIFICATION	1.8940220117884638E-7	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999753167358	WITHOUT_CLASSIFICATION	2.468326420275872E-8	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999721146741	WITHOUT_CLASSIFICATION	2.788532599901214E-8	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999975358299488	WITHOUT_CLASSIFICATION	2.464170051306229E-6	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999975358299488	WITHOUT_CLASSIFICATION	2.464170051306229E-6	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.9999966510300861	WITHOUT_CLASSIFICATION	3.3489699139410312E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999900362799855	WITHOUT_CLASSIFICATION	9.963720014542172E-6	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999992024309	WITHOUT_CLASSIFICATION	7.975691435151515E-10	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999999944371121	WITHOUT_CLASSIFICATION	5.562887882155516E-9	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999975358299488	WITHOUT_CLASSIFICATION	2.464170051306229E-6	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.9999970354790013	WITHOUT_CLASSIFICATION	2.964520998572422E-6	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.9999980542216308	WITHOUT_CLASSIFICATION	1.945778369197496E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999990723297809	WITHOUT_CLASSIFICATION	9.276702191087674E-7	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.999999909072011	WITHOUT_CLASSIFICATION	9.09279890445062E-8	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.9999989476144953	WITHOUT_CLASSIFICATION	1.0523855047084374E-6	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.9999984423829553	WITHOUT_CLASSIFICATION	1.5576170447890194E-6	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.9999973387239426	WITHOUT_CLASSIFICATION	2.6612760573590777E-6	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.9999981152216048	WITHOUT_CLASSIFICATION	1.8847783952173756E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999927593527	WITHOUT_CLASSIFICATION	7.240647299909362E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999927593527	WITHOUT_CLASSIFICATION	7.240647299909362E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999707337304128	WITHOUT_CLASSIFICATION	2.9266269587219695E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999707337304128	WITHOUT_CLASSIFICATION	2.9266269587219695E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999707337304128	WITHOUT_CLASSIFICATION	2.9266269587219695E-5	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.9999818323592352	WITHOUT_CLASSIFICATION	1.8167640764828022E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999430113218866	WITHOUT_CLASSIFICATION	5.6988678113559077E-5	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999430113218866	WITHOUT_CLASSIFICATION	5.6988678113559077E-5	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999953338895483	WITHOUT_CLASSIFICATION	4.6661104516917515E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999953338895483	WITHOUT_CLASSIFICATION	4.6661104516917515E-6	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.9999914100834151	WITHOUT_CLASSIFICATION	8.589916584887095E-6	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.9999958559036578	WITHOUT_CLASSIFICATION	4.144096342118567E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999910547108395	WITHOUT_CLASSIFICATION	8.945289160458668E-6	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.9999991616490802	WITHOUT_CLASSIFICATION	8.383509198529577E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9997940648888572	WITHOUT_CLASSIFICATION	2.059351111428021E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9971403265431712	WITHOUT_CLASSIFICATION	0.002859673456828856	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.9999890153995215	WITHOUT_CLASSIFICATION	1.0984600478462887E-5	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999804754406953	WITHOUT_CLASSIFICATION	1.9524559304608644E-5	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.999999758141712	WITHOUT_CLASSIFICATION	2.4185828797709317E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999984345787187	WITHOUT_CLASSIFICATION	1.565421281297964E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.999999346594118	WITHOUT_CLASSIFICATION	6.534058819417258E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999938193514057	WITHOUT_CLASSIFICATION	6.180648594153289E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998999952792	WITHOUT_CLASSIFICATION	1.0000472089113227E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999999916543117	WITHOUT_CLASSIFICATION	8.34568829265221E-9	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.999779947151192	WITHOUT_CLASSIFICATION	2.2005284880796262E-4	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999998764481554	WITHOUT_CLASSIFICATION	1.2355184465410323E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998912091481	WITHOUT_CLASSIFICATION	1.0879085191511648E-7	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.9999948649960009	WITHOUT_CLASSIFICATION	5.135003999111462E-6	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999992515529379	WITHOUT_CLASSIFICATION	7.484470622008102E-7	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999943790617338	WITHOUT_CLASSIFICATION	5.62093826627411E-6	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999936319776553	WITHOUT_CLASSIFICATION	6.368022344610039E-6	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999987750302992	WITHOUT_CLASSIFICATION	1.22496970079188E-6	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999997697037929	WITHOUT_CLASSIFICATION	2.3029620707377596E-7	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999997783411291	WITHOUT_CLASSIFICATION	2.2165887095395536E-7	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999992358636073	WITHOUT_CLASSIFICATION	7.641363927924604E-7	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.9999998797430033	WITHOUT_CLASSIFICATION	1.202569967203945E-7	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.9999948302983525	WITHOUT_CLASSIFICATION	5.169701647514058E-6	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.9999973153612104	WITHOUT_CLASSIFICATION	2.6846387896113787E-6	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.9999998695366495	WITHOUT_CLASSIFICATION	1.3046335051711223E-7	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.9999991321437794	WITHOUT_CLASSIFICATION	8.678562206485186E-7	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.9999713316871596	WITHOUT_CLASSIFICATION	2.8668312840465746E-5	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9999765046012561	WITHOUT_CLASSIFICATION	2.3495398743940845E-5	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.9999997018251057	WITHOUT_CLASSIFICATION	2.981748943248842E-7	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.9999979315850007	WITHOUT_CLASSIFICATION	2.068414999174874E-6	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.999999894776204	WITHOUT_CLASSIFICATION	1.0522379600207129E-7	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.9999954163185724	WITHOUT_CLASSIFICATION	4.583681427699812E-6	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.999999342961848	WITHOUT_CLASSIFICATION	6.570381520298954E-7	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.999993979169495	WITHOUT_CLASSIFICATION	6.020830505062225E-6	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.999998957185027	WITHOUT_CLASSIFICATION	1.0428149731084907E-6	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.9999920914922582	WITHOUT_CLASSIFICATION	7.908507741829253E-6	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.9999997336795025	WITHOUT_CLASSIFICATION	2.663204975905165E-7	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999974936298885	WITHOUT_CLASSIFICATION	2.5063701113656416E-6	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9999993397730259	WITHOUT_CLASSIFICATION	6.602269740877795E-7	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.9999988947499997	WITHOUT_CLASSIFICATION	1.1052500003990695E-6	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.999335687434812	WITHOUT_CLASSIFICATION	6.643125651878966E-4	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.9999930180011485	WITHOUT_CLASSIFICATION	6.981998851512693E-6	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.9999766274897399	WITHOUT_CLASSIFICATION	2.3372510260070266E-5	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.9999996741851703	WITHOUT_CLASSIFICATION	3.258148297834517E-7	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.9999989556478515	WITHOUT_CLASSIFICATION	1.0443521485635248E-6	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.9996888781289941	WITHOUT_CLASSIFICATION	3.111218710059345E-4	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999998007073773	WITHOUT_CLASSIFICATION	1.9929262276590478E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999988592227	WITHOUT_CLASSIFICATION	1.1407772141165934E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999996796004086	WITHOUT_CLASSIFICATION	3.203995914131029E-7	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999851374075829	WITHOUT_CLASSIFICATION	1.48625924169626E-5	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999851374075829	WITHOUT_CLASSIFICATION	1.48625924169626E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999997965025027	WITHOUT_CLASSIFICATION	2.0349749721230922E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999982918362802	WITHOUT_CLASSIFICATION	1.7081637197097164E-6	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.9999945754614765	WITHOUT_CLASSIFICATION	5.424538523499203E-6	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.9999998650180986	WITHOUT_CLASSIFICATION	1.3498190140960634E-7	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.9999999936419933	WITHOUT_CLASSIFICATION	6.358006606413566E-9	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.9999989593073346	WITHOUT_CLASSIFICATION	1.0406926653180162E-6	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.9999760795488795	WITHOUT_CLASSIFICATION	2.3920451120523215E-5	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.9999771679059027	WITHOUT_CLASSIFICATION	2.283209409732299E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999976166540536	WITHOUT_CLASSIFICATION	2.3833459464078863E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999964157305	WITHOUT_CLASSIFICATION	3.584269583966217E-9	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9997940648888572	WITHOUT_CLASSIFICATION	2.059351111428021E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999964157305	WITHOUT_CLASSIFICATION	3.584269583966217E-9	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9999093184007982	WITHOUT_CLASSIFICATION	9.068159920180102E-5	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999998194727311	WITHOUT_CLASSIFICATION	1.8052726888879792E-7	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.9999907340885393	WITHOUT_CLASSIFICATION	9.265911460657561E-6	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.9999867767678005	WITHOUT_CLASSIFICATION	1.3223232199591837E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999964169330101	WITHOUT_CLASSIFICATION	3.5830669899238254E-6	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.9999895304916288	WITHOUT_CLASSIFICATION	1.0469508371124542E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999997777973901	WITHOUT_CLASSIFICATION	2.2220260988226796E-7	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999999417155918	WITHOUT_CLASSIFICATION	5.82844081680564E-8	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999999297887052	WITHOUT_CLASSIFICATION	7.021129474932669E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999983111700832	WITHOUT_CLASSIFICATION	1.688829916896922E-6	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998912091481	WITHOUT_CLASSIFICATION	1.0879085191511648E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999073325987	WITHOUT_CLASSIFICATION	9.266740136450659E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999988592227	WITHOUT_CLASSIFICATION	1.1407772141165934E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999996796004086	WITHOUT_CLASSIFICATION	3.203995914131029E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999976166540536	WITHOUT_CLASSIFICATION	2.3833459464078863E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.999998285351826	WITHOUT_CLASSIFICATION	1.714648174046476E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999964169330101	WITHOUT_CLASSIFICATION	3.5830669899238254E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999997777973901	WITHOUT_CLASSIFICATION	2.2220260988226796E-7	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999999417155918	WITHOUT_CLASSIFICATION	5.82844081680564E-8	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999999297887052	WITHOUT_CLASSIFICATION	7.021129474932669E-8	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999996273157533	WITHOUT_CLASSIFICATION	3.726842467065815E-7	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.9999991605002188	WITHOUT_CLASSIFICATION	8.394997812893964E-7	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.9999982914684288	WITHOUT_CLASSIFICATION	1.7085315712268552E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999884279795984	WITHOUT_CLASSIFICATION	1.1572020401570085E-5	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.9999996818403867	WITHOUT_CLASSIFICATION	3.1815961325543005E-7	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999976144776385	WITHOUT_CLASSIFICATION	2.3855223616360374E-6	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.999951831733372	WITHOUT_CLASSIFICATION	4.816826662802257E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999984543825704	WITHOUT_CLASSIFICATION	1.5456174296352293E-6	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9971403265431712	WITHOUT_CLASSIFICATION	0.002859673456828856	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.999999758141712	WITHOUT_CLASSIFICATION	2.4185828797709317E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.999999758141712	WITHOUT_CLASSIFICATION	2.4185828797709317E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999997413446454	WITHOUT_CLASSIFICATION	2.58655354503397E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999984345787187	WITHOUT_CLASSIFICATION	1.565421281297964E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.999999346594118	WITHOUT_CLASSIFICATION	6.534058819417258E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999938193514057	WITHOUT_CLASSIFICATION	6.180648594153289E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998999952792	WITHOUT_CLASSIFICATION	1.0000472089113227E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999998007073773	WITHOUT_CLASSIFICATION	1.9929262276590478E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999988592227	WITHOUT_CLASSIFICATION	1.1407772141165934E-9	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999982918362802	WITHOUT_CLASSIFICATION	1.7081637197097164E-6	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999998124946576	WITHOUT_CLASSIFICATION	1.8750534232861089E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999996379463925	WITHOUT_CLASSIFICATION	3.62053607430019E-7	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999999043591533	WITHOUT_CLASSIFICATION	9.564084668735195E-8	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.9999851422222464	WITHOUT_CLASSIFICATION	1.4857777753614982E-5	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999995034522962	WITHOUT_CLASSIFICATION	4.96547703776084E-7	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999991741138703	WITHOUT_CLASSIFICATION	8.258861295917697E-7	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999946330609114	WITHOUT_CLASSIFICATION	5.36693908854489E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999946330609114	WITHOUT_CLASSIFICATION	5.36693908854489E-6	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.9999987010993027	WITHOUT_CLASSIFICATION	1.2989006973304183E-6	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.9999992495550466	WITHOUT_CLASSIFICATION	7.504449533526729E-7	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999997129917033	WITHOUT_CLASSIFICATION	2.8700829673458963E-7	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999940320103323	WITHOUT_CLASSIFICATION	5.967989667582508E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999997413446454	WITHOUT_CLASSIFICATION	2.58655354503397E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999938193514057	WITHOUT_CLASSIFICATION	6.180648594153289E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998999952792	WITHOUT_CLASSIFICATION	1.0000472089113227E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999999916543117	WITHOUT_CLASSIFICATION	8.34568829265221E-9	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998912091481	WITHOUT_CLASSIFICATION	1.0879085191511648E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999998007073773	WITHOUT_CLASSIFICATION	1.9929262276590478E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999988592227	WITHOUT_CLASSIFICATION	1.1407772141165934E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999996796004086	WITHOUT_CLASSIFICATION	3.203995914131029E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999964157305	WITHOUT_CLASSIFICATION	3.584269583966217E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999996379463925	WITHOUT_CLASSIFICATION	3.62053607430019E-7	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999907355769787	WITHOUT_CLASSIFICATION	9.264423021196732E-6	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999907355769787	WITHOUT_CLASSIFICATION	9.264423021196732E-6	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.9993665663424476	WITHOUT_CLASSIFICATION	6.334336575524092E-4	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.9999778530186227	WITHOUT_CLASSIFICATION	2.214698137725708E-5	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999943578697159	WITHOUT_CLASSIFICATION	5.64213028417099E-6	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999988968741963	WITHOUT_CLASSIFICATION	1.1031258036316765E-6	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999923053187	WITHOUT_CLASSIFICATION	7.694681386688136E-9	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999923053187	WITHOUT_CLASSIFICATION	7.694681386688136E-9	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999998891124622	WITHOUT_CLASSIFICATION	1.1088753779239868E-7	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.9999998891124622	WITHOUT_CLASSIFICATION	1.1088753779239868E-7	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999962186513	WITHOUT_CLASSIFICATION	3.78134870128721E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999962186513	WITHOUT_CLASSIFICATION	3.78134870128721E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999962186513	WITHOUT_CLASSIFICATION	3.78134870128721E-9	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999981167215838	WITHOUT_CLASSIFICATION	1.8832784161558878E-6	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989929910249	WITHOUT_CLASSIFICATION	1.007008975166737E-6	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999767040552	WITHOUT_CLASSIFICATION	2.3295944841540638E-8	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.9999989709823269	WITHOUT_CLASSIFICATION	1.0290176730368085E-6	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.9999994208082247	WITHOUT_CLASSIFICATION	5.791917752604875E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9997940648888572	WITHOUT_CLASSIFICATION	2.059351111428021E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9971403265431712	WITHOUT_CLASSIFICATION	0.002859673456828856	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.999999758141712	WITHOUT_CLASSIFICATION	2.4185828797709317E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999984345787187	WITHOUT_CLASSIFICATION	1.565421281297964E-6	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999936319776553	WITHOUT_CLASSIFICATION	6.368022344610039E-6	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999998007073773	WITHOUT_CLASSIFICATION	1.9929262276590478E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999884279795984	WITHOUT_CLASSIFICATION	1.1572020401570085E-5	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.9999940320103323	WITHOUT_CLASSIFICATION	5.967989667582508E-6	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999997995251949	WITHOUT_CLASSIFICATION	2.0047480508413846E-7	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.9999608281635991	WITHOUT_CLASSIFICATION	3.917183640099144E-5	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.9999776092429941	WITHOUT_CLASSIFICATION	2.239075700587153E-5	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9999781383949211	WITHOUT_CLASSIFICATION	2.186160507889063E-5	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.9999997272857448	WITHOUT_CLASSIFICATION	2.7271425518682237E-7	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.9999880370615408	WITHOUT_CLASSIFICATION	1.1962938459077708E-5	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999991036173403	WITHOUT_CLASSIFICATION	8.963826595244325E-7	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.9999991401313012	WITHOUT_CLASSIFICATION	8.598686989004502E-7	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999994938354533	WITHOUT_CLASSIFICATION	5.061645467385548E-7	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.9997926947298482	WITHOUT_CLASSIFICATION	2.0730527015175028E-4	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.9999326921586608	WITHOUT_CLASSIFICATION	6.730784133923974E-5	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.9999992233465156	WITHOUT_CLASSIFICATION	7.766534843860768E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999989272871862	WITHOUT_CLASSIFICATION	1.072712813787301E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999938193514057	WITHOUT_CLASSIFICATION	6.180648594153289E-6	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998999952792	WITHOUT_CLASSIFICATION	1.0000472089113227E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999998007073773	WITHOUT_CLASSIFICATION	1.9929262276590478E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999988592227	WITHOUT_CLASSIFICATION	1.1407772141165934E-9	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999964157305	WITHOUT_CLASSIFICATION	3.584269583966217E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999996379463925	WITHOUT_CLASSIFICATION	3.62053607430019E-7	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.9999999043591533	WITHOUT_CLASSIFICATION	9.564084668735195E-8	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999995034522962	WITHOUT_CLASSIFICATION	4.96547703776084E-7	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999991741138703	WITHOUT_CLASSIFICATION	8.258861295917697E-7	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999964434255	WITHOUT_CLASSIFICATION	3.5565744036551573E-9	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999274178428	WITHOUT_CLASSIFICATION	7.258215719393232E-8	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.9999946721693739	WITHOUT_CLASSIFICATION	5.327830626126409E-6	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.9999997843950311	WITHOUT_CLASSIFICATION	2.1560496891934756E-7	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.9999999874055394	WITHOUT_CLASSIFICATION	1.2594460618011163E-8	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999941469530945	WITHOUT_CLASSIFICATION	5.853046905396038E-6	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.9999861035457965	WITHOUT_CLASSIFICATION	1.3896454203489395E-5	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9999980370515461	WITHOUT_CLASSIFICATION	1.9629484539160477E-6	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.9999770477857174	WITHOUT_CLASSIFICATION	2.2952214282646934E-5	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.9999900952009585	WITHOUT_CLASSIFICATION	9.90479904145979E-6	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.9980722331516175	WITHOUT_CLASSIFICATION	0.0019277668483824578	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9999171321353741	WITHOUT_CLASSIFICATION	8.286786462585143E-5	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9999317871889348	WITHOUT_CLASSIFICATION	6.821281106513883E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.9127742800155704	WITHOUT_CLASSIFICATION	0.08722571998442963	DEFECT
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.9999976469074264	WITHOUT_CLASSIFICATION	2.353092573588102E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999995601655394	WITHOUT_CLASSIFICATION	4.3983446056861996E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999995601655394	WITHOUT_CLASSIFICATION	4.3983446056861996E-7	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.999999346594118	WITHOUT_CLASSIFICATION	6.534058819417258E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999996796004086	WITHOUT_CLASSIFICATION	3.203995914131029E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999997965025027	WITHOUT_CLASSIFICATION	2.0349749721230922E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999982918362802	WITHOUT_CLASSIFICATION	1.7081637197097164E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999991741138703	WITHOUT_CLASSIFICATION	8.258861295917697E-7	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.9999991083100296	WITHOUT_CLASSIFICATION	8.916899705066099E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999970002556283	WITHOUT_CLASSIFICATION	2.9997443715940458E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999983664607153	WITHOUT_CLASSIFICATION	1.6335392846319392E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999983664607153	WITHOUT_CLASSIFICATION	1.6335392846319392E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999993674581861	WITHOUT_CLASSIFICATION	6.325418138896258E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999993674581861	WITHOUT_CLASSIFICATION	6.325418138896258E-7	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.9999994587564348	WITHOUT_CLASSIFICATION	5.412435651669331E-7	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.9928996949133798	WITHOUT_CLASSIFICATION	0.007100305086620215	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999966321445045	WITHOUT_CLASSIFICATION	3.367855495411158E-6	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999999604899894	WITHOUT_CLASSIFICATION	3.951001067561812E-8	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.9999994472822622	WITHOUT_CLASSIFICATION	5.527177378710761E-7	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.9999843047187121	WITHOUT_CLASSIFICATION	1.569528128780592E-5	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999998652169405	WITHOUT_CLASSIFICATION	1.3478305953990227E-7	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.9999980719578239	WITHOUT_CLASSIFICATION	1.928042176175054E-6	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.9999993966757055	WITHOUT_CLASSIFICATION	6.033242944524052E-7	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.999999810807527	WITHOUT_CLASSIFICATION	1.891924731156152E-7	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9994810887622473	WITHOUT_CLASSIFICATION	5.189112377526874E-4	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.9999984393898932	WITHOUT_CLASSIFICATION	1.5606101067044036E-6	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9999696432679702	WITHOUT_CLASSIFICATION	3.0356732029825115E-5	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.9999993657563495	WITHOUT_CLASSIFICATION	6.342436505097965E-7	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.9999920687151037	WITHOUT_CLASSIFICATION	7.931284896227795E-6	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999998330361585	WITHOUT_CLASSIFICATION	1.6696384165776224E-7	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999998251982487	WITHOUT_CLASSIFICATION	1.7480175123415713E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999497118304	WITHOUT_CLASSIFICATION	5.028816966351023E-8	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9999976583880854	WITHOUT_CLASSIFICATION	2.341611914569559E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.999993921473725	WITHOUT_CLASSIFICATION	6.078526275011001E-6	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999966492666894	WITHOUT_CLASSIFICATION	3.3507333106781086E-6	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999953463322251	WITHOUT_CLASSIFICATION	4.653667774967382E-6	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.9999982960599545	WITHOUT_CLASSIFICATION	1.7039400454564972E-6	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999981387532376	WITHOUT_CLASSIFICATION	1.8612467622684958E-6	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999967380343306	WITHOUT_CLASSIFICATION	3.2619656692241526E-6	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999999384099086	WITHOUT_CLASSIFICATION	6.159009139324638E-8	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999998877990026	WITHOUT_CLASSIFICATION	1.1220099736808849E-7	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.999999908428471	WITHOUT_CLASSIFICATION	9.157152906757262E-8	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999982236680945	WITHOUT_CLASSIFICATION	1.7763319054542505E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999982158436808	WITHOUT_CLASSIFICATION	1.7841563191587107E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999981115930753	WITHOUT_CLASSIFICATION	1.8884069246298134E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999962562152557	WITHOUT_CLASSIFICATION	3.7437847442247913E-6	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.9999976977718876	WITHOUT_CLASSIFICATION	2.30222811234443E-6	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.9999725130927982	WITHOUT_CLASSIFICATION	2.7486907201745384E-5	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.9999957807505185	WITHOUT_CLASSIFICATION	4.219249481530475E-6	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999999533350422	WITHOUT_CLASSIFICATION	4.6664957715891724E-8	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999986827532754	WITHOUT_CLASSIFICATION	1.3172467245398365E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999998405458554	WITHOUT_CLASSIFICATION	1.5945414465406422E-7	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999988348442479	WITHOUT_CLASSIFICATION	1.1651557520013297E-6	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.9999968801426842	WITHOUT_CLASSIFICATION	3.11985731581958E-6	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.9999998513291931	WITHOUT_CLASSIFICATION	1.4867080694930882E-7	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.9999996821369934	WITHOUT_CLASSIFICATION	3.178630065919464E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999497118304	WITHOUT_CLASSIFICATION	5.028816966351023E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999996796004086	WITHOUT_CLASSIFICATION	3.203995914131029E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999997965025027	WITHOUT_CLASSIFICATION	2.0349749721230922E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999982918362802	WITHOUT_CLASSIFICATION	1.7081637197097164E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999970002556283	WITHOUT_CLASSIFICATION	2.9997443715940458E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999991741138703	WITHOUT_CLASSIFICATION	8.258861295917697E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999995601655394	WITHOUT_CLASSIFICATION	4.3983446056861996E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999995601655394	WITHOUT_CLASSIFICATION	4.3983446056861996E-7	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999993322744155	WITHOUT_CLASSIFICATION	6.677255845034285E-7	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999983664607153	WITHOUT_CLASSIFICATION	1.6335392846319392E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999789667150843	WITHOUT_CLASSIFICATION	2.1033284915674512E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999993674581861	WITHOUT_CLASSIFICATION	6.325418138896258E-7	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999981115930753	WITHOUT_CLASSIFICATION	1.8884069246298134E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999962562152557	WITHOUT_CLASSIFICATION	3.7437847442247913E-6	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999999132955408	WITHOUT_CLASSIFICATION	8.670445914887801E-8	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999982284635054	WITHOUT_CLASSIFICATION	1.7715364946526399E-6	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.9999998781872292	WITHOUT_CLASSIFICATION	1.2181277072993164E-7	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.9999998685245678	WITHOUT_CLASSIFICATION	1.31475432152987E-7	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999952060540318	WITHOUT_CLASSIFICATION	4.793945968166787E-6	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.9999910386003894	WITHOUT_CLASSIFICATION	8.961399610553045E-6	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9999622267527638	WITHOUT_CLASSIFICATION	3.7773247236127735E-5	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999995122340779	WITHOUT_CLASSIFICATION	4.877659222226614E-7	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999989182176546	WITHOUT_CLASSIFICATION	1.0817823454144017E-6	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999994447537898	WITHOUT_CLASSIFICATION	5.552462102905386E-7	DEFECT
// square	WITHOUT_CLASSIFICATION	0.9999996584613887	WITHOUT_CLASSIFICATION	3.41538611335391E-7	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.99999856732761	WITHOUT_CLASSIFICATION	1.432672389919702E-6	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.9999997137756571	WITHOUT_CLASSIFICATION	2.862243429536985E-7	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.9999935499970533	WITHOUT_CLASSIFICATION	6.450002946813218E-6	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.9999967736229971	WITHOUT_CLASSIFICATION	3.2263770028888844E-6	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.9999973997087394	WITHOUT_CLASSIFICATION	2.6002912606163456E-6	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.9999999472907486	WITHOUT_CLASSIFICATION	5.270925128638395E-8	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999983731759646	WITHOUT_CLASSIFICATION	1.6268240353206912E-6	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.9999929918212022	WITHOUT_CLASSIFICATION	7.008178797836541E-6	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.9999990558991101	WITHOUT_CLASSIFICATION	9.441008900402769E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999497118304	WITHOUT_CLASSIFICATION	5.028816966351023E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998912091481	WITHOUT_CLASSIFICATION	1.0879085191511648E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.9999999073325987	WITHOUT_CLASSIFICATION	9.266740136450659E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999988592227	WITHOUT_CLASSIFICATION	1.1407772141165934E-9	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999995034522962	WITHOUT_CLASSIFICATION	4.96547703776084E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999993358192526	WITHOUT_CLASSIFICATION	6.641807473377909E-7	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.9999849795866655	WITHOUT_CLASSIFICATION	1.502041333446662E-5	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.999999991887143	WITHOUT_CLASSIFICATION	8.112857020150658E-9	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999993358192526	WITHOUT_CLASSIFICATION	6.641807473377909E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999993358192526	WITHOUT_CLASSIFICATION	6.641807473377909E-7	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.999995129865384	WITHOUT_CLASSIFICATION	4.870134615997041E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.999999991887143	WITHOUT_CLASSIFICATION	8.112857020150658E-9	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.999999991887143	WITHOUT_CLASSIFICATION	8.112857020150658E-9	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999497118304	WITHOUT_CLASSIFICATION	5.028816966351023E-8	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.9999873133660081	WITHOUT_CLASSIFICATION	1.2686633991807776E-5	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9999971007826391	WITHOUT_CLASSIFICATION	2.8992173608077395E-6	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.9999999679670859	WITHOUT_CLASSIFICATION	3.203291413471875E-8	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.999999890445169	WITHOUT_CLASSIFICATION	1.0955483094225268E-7	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.9999992630248563	WITHOUT_CLASSIFICATION	7.369751437039958E-7	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.9999983773467032	WITHOUT_CLASSIFICATION	1.6226532968267183E-6	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.9998796252236984	WITHOUT_CLASSIFICATION	1.2037477630148301E-4	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.9999977297698363	WITHOUT_CLASSIFICATION	2.2702301638480216E-6	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.9999785581571079	WITHOUT_CLASSIFICATION	2.144184289210127E-5	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.9999987449118127	WITHOUT_CLASSIFICATION	1.255088187195895E-6	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.9130329774812979	WITHOUT_CLASSIFICATION	0.08696702251870217	DEFECT
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.9999948452140004	WITHOUT_CLASSIFICATION	5.154785999598341E-6	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.9999994562027686	WITHOUT_CLASSIFICATION	5.437972312780003E-7	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9999469285907159	WITHOUT_CLASSIFICATION	5.3071409284219154E-5	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.999999462690083	WITHOUT_CLASSIFICATION	5.373099169955635E-7	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.9999988439992535	WITHOUT_CLASSIFICATION	1.1560007464243989E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999497118304	WITHOUT_CLASSIFICATION	5.028816966351023E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998912091481	WITHOUT_CLASSIFICATION	1.0879085191511648E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999996796004086	WITHOUT_CLASSIFICATION	3.203995914131029E-7	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999851374075829	WITHOUT_CLASSIFICATION	1.48625924169626E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999997965025027	WITHOUT_CLASSIFICATION	2.0349749721230922E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999982918362802	WITHOUT_CLASSIFICATION	1.7081637197097164E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999970002556283	WITHOUT_CLASSIFICATION	2.9997443715940458E-6	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999996273157533	WITHOUT_CLASSIFICATION	3.726842467065815E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999884279795984	WITHOUT_CLASSIFICATION	1.1572020401570085E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999991741138703	WITHOUT_CLASSIFICATION	8.258861295917697E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999995601655394	WITHOUT_CLASSIFICATION	4.3983446056861996E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999995601655394	WITHOUT_CLASSIFICATION	4.3983446056861996E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999995601655394	WITHOUT_CLASSIFICATION	4.3983446056861996E-7	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999983664607153	WITHOUT_CLASSIFICATION	1.6335392846319392E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999983664607153	WITHOUT_CLASSIFICATION	1.6335392846319392E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999789667150843	WITHOUT_CLASSIFICATION	2.1033284915674512E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999999604899894	WITHOUT_CLASSIFICATION	3.951001067561812E-8	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999998652169405	WITHOUT_CLASSIFICATION	1.3478305953990227E-7	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999952060540318	WITHOUT_CLASSIFICATION	4.793945968166787E-6	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999999784532597	WITHOUT_CLASSIFICATION	2.154674023605071E-8	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.999789751939856	WITHOUT_CLASSIFICATION	2.1024806014415228E-4	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.9999963180130473	WITHOUT_CLASSIFICATION	3.6819869527196593E-6	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.9999961777032998	WITHOUT_CLASSIFICATION	3.822296700150328E-6	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.9999989203715866	WITHOUT_CLASSIFICATION	1.0796284133864055E-6	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.99999420180015	WITHOUT_CLASSIFICATION	5.798199850042188E-6	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.9999993540693963	WITHOUT_CLASSIFICATION	6.459306036768406E-7	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.9999998807003305	WITHOUT_CLASSIFICATION	1.1929966952181095E-7	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.9999996246359787	WITHOUT_CLASSIFICATION	3.753640212744212E-7	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.9999993855998046	WITHOUT_CLASSIFICATION	6.144001954040255E-7	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.9999994511731044	WITHOUT_CLASSIFICATION	5.488268956138378E-7	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.9999999208705661	WITHOUT_CLASSIFICATION	7.912943383902871E-8	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9999023972275523	WITHOUT_CLASSIFICATION	9.760277244763748E-5	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.9999998618246118	WITHOUT_CLASSIFICATION	1.3817538835037842E-7	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.999999461286903	WITHOUT_CLASSIFICATION	5.387130970312005E-7	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.9999985178574768	WITHOUT_CLASSIFICATION	1.4821425230747995E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999993674581861	WITHOUT_CLASSIFICATION	6.325418138896258E-7	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999993674581861	WITHOUT_CLASSIFICATION	6.325418138896258E-7	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999966492666894	WITHOUT_CLASSIFICATION	3.3507333106781086E-6	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999953463322251	WITHOUT_CLASSIFICATION	4.653667774967382E-6	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999981387532376	WITHOUT_CLASSIFICATION	1.8612467622684958E-6	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999967380343306	WITHOUT_CLASSIFICATION	3.2619656692241526E-6	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999999384099086	WITHOUT_CLASSIFICATION	6.159009139324638E-8	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999998877990026	WITHOUT_CLASSIFICATION	1.1220099736808849E-7	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.999999908428471	WITHOUT_CLASSIFICATION	9.157152906757262E-8	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.9999982236680945	WITHOUT_CLASSIFICATION	1.7763319054542505E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999982158436808	WITHOUT_CLASSIFICATION	1.7841563191587107E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999981115930753	WITHOUT_CLASSIFICATION	1.8884069246298134E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999981115930753	WITHOUT_CLASSIFICATION	1.8884069246298134E-6	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999995122340779	WITHOUT_CLASSIFICATION	4.877659222226614E-7	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.999998516777602	WITHOUT_CLASSIFICATION	1.4832223979970758E-6	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.9999655142837505	WITHOUT_CLASSIFICATION	3.448571624945169E-5	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.9999988874722099	WITHOUT_CLASSIFICATION	1.112527790073958E-6	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.99999577853904	WITHOUT_CLASSIFICATION	4.221460960085418E-6	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.999999277106048	WITHOUT_CLASSIFICATION	7.228939519305398E-7	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.9999963632539857	WITHOUT_CLASSIFICATION	3.6367460143661415E-6	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.9999991354519269	WITHOUT_CLASSIFICATION	8.645480732102386E-7	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.9999977302604756	WITHOUT_CLASSIFICATION	2.2697395243881108E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999978034815	WITHOUT_CLASSIFICATION	2.196518499899302E-6	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.9998120330236038	WITHOUT_CLASSIFICATION	1.879669763961284E-4	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999997709198676	WITHOUT_CLASSIFICATION	2.2908013250742444E-7	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.999975426382586	WITHOUT_CLASSIFICATION	2.4573617414042947E-5	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.9999526168843448	WITHOUT_CLASSIFICATION	4.738311565513992E-5	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.9999994697223668	WITHOUT_CLASSIFICATION	5.302776332894469E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999997413446454	WITHOUT_CLASSIFICATION	2.58655354503397E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999984345787187	WITHOUT_CLASSIFICATION	1.565421281297964E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999993322744155	WITHOUT_CLASSIFICATION	6.677255845034285E-7	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999993322744155	WITHOUT_CLASSIFICATION	6.677255845034285E-7	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999962562152557	WITHOUT_CLASSIFICATION	3.7437847442247913E-6	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999999533350422	WITHOUT_CLASSIFICATION	4.6664957715891724E-8	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999999533350422	WITHOUT_CLASSIFICATION	4.6664957715891724E-8	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999986827532754	WITHOUT_CLASSIFICATION	1.3172467245398365E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999998405458554	WITHOUT_CLASSIFICATION	1.5945414465406422E-7	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999998405458554	WITHOUT_CLASSIFICATION	1.5945414465406422E-7	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999952060540318	WITHOUT_CLASSIFICATION	4.793945968166787E-6	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999994447537898	WITHOUT_CLASSIFICATION	5.552462102905386E-7	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999967283036315	WITHOUT_CLASSIFICATION	3.271696368522538E-6	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9999606146075899	WITHOUT_CLASSIFICATION	3.9385392410038935E-5	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9999606146075899	WITHOUT_CLASSIFICATION	3.9385392410038935E-5	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.9999990887424931	WITHOUT_CLASSIFICATION	9.112575069541892E-7	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.9999999283320982	WITHOUT_CLASSIFICATION	7.166790177814458E-8	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.9999993079730755	WITHOUT_CLASSIFICATION	6.920269244631392E-7	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.9999995687852551	WITHOUT_CLASSIFICATION	4.312147448701721E-7	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.9999961233369964	WITHOUT_CLASSIFICATION	3.8766630035785144E-6	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.9999993254389334	WITHOUT_CLASSIFICATION	6.74561066665984E-7	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.9999996155356529	WITHOUT_CLASSIFICATION	3.8446434721139114E-7	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.9999995951729278	WITHOUT_CLASSIFICATION	4.0482707215729007E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999998912091481	WITHOUT_CLASSIFICATION	1.0879085191511648E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.9999999988592227	WITHOUT_CLASSIFICATION	1.1407772141165934E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999996796004086	WITHOUT_CLASSIFICATION	3.203995914131029E-7	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.9999996273157533	WITHOUT_CLASSIFICATION	3.726842467065815E-7	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999976144776385	WITHOUT_CLASSIFICATION	2.3855223616360374E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999976048570731	WITHOUT_CLASSIFICATION	2.395142926797787E-6	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.9390765949108639	WITHOUT_CLASSIFICATION	0.06092340508913618	DEFECT
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.9999974405318905	WITHOUT_CLASSIFICATION	2.5594681093823283E-6	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999997733553094	WITHOUT_CLASSIFICATION	2.2664469054713835E-7	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999958918233461	WITHOUT_CLASSIFICATION	4.1081766538789346E-6	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.9999994759278477	WITHOUT_CLASSIFICATION	5.240721523344155E-7	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.9999995978911764	WITHOUT_CLASSIFICATION	4.021088236040372E-7	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.999998669196249	WITHOUT_CLASSIFICATION	1.3308037509787625E-6	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.9999998692948072	WITHOUT_CLASSIFICATION	1.3070519273471515E-7	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.9999999349638561	WITHOUT_CLASSIFICATION	6.503614393227225E-8	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.9999990887807233	WITHOUT_CLASSIFICATION	9.112192765612891E-7	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.9999996120972662	WITHOUT_CLASSIFICATION	3.8790273380420515E-7	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.9999437719445265	WITHOUT_CLASSIFICATION	5.622805547358637E-5	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.9999994464782981	WITHOUT_CLASSIFICATION	5.535217019792257E-7	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.9999993986727241	WITHOUT_CLASSIFICATION	6.013272758284437E-7	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.9999998031842683	WITHOUT_CLASSIFICATION	1.9681573171356243E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999984483394755	WITHOUT_CLASSIFICATION	1.551660524540332E-6	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999472517548667	WITHOUT_CLASSIFICATION	5.274824513332485E-5	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.9999998589131696	WITHOUT_CLASSIFICATION	1.4108683048009792E-7	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.9999981361710427	WITHOUT_CLASSIFICATION	1.8638289572337027E-6	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.9999999678479197	WITHOUT_CLASSIFICATION	3.215208035711782E-8	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.9999998813741167	WITHOUT_CLASSIFICATION	1.1862588330722713E-7	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.9999954714377213	WITHOUT_CLASSIFICATION	4.528562278670502E-6	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9999989232972032	WITHOUT_CLASSIFICATION	1.076702796765156E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999996796004086	WITHOUT_CLASSIFICATION	3.203995914131029E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999976166540536	WITHOUT_CLASSIFICATION	2.3833459464078863E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999993358192526	WITHOUT_CLASSIFICATION	6.641807473377909E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999993358192526	WITHOUT_CLASSIFICATION	6.641807473377909E-7	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.999999991887143	WITHOUT_CLASSIFICATION	8.112857020150658E-9	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999472517548667	WITHOUT_CLASSIFICATION	5.274824513332485E-5	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.9999984207701277	WITHOUT_CLASSIFICATION	1.579229872333428E-6	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.9999994799908278	WITHOUT_CLASSIFICATION	5.200091722224777E-7	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.9999960400975509	WITHOUT_CLASSIFICATION	3.959902448996187E-6	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.9999999011582841	WITHOUT_CLASSIFICATION	9.884171585747745E-8	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9999991114679831	WITHOUT_CLASSIFICATION	8.885320169585488E-7	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.9999999683579438	WITHOUT_CLASSIFICATION	3.164205614790133E-8	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999745158322276	WITHOUT_CLASSIFICATION	2.5484167772302424E-5	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.999983274080765	WITHOUT_CLASSIFICATION	1.6725919234914814E-5	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999989868848026	WITHOUT_CLASSIFICATION	1.0131151974312862E-6	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999936085111854	WITHOUT_CLASSIFICATION	6.391488814655474E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999986900633423	WITHOUT_CLASSIFICATION	1.30993665767874E-6	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9999999168034347	WITHOUT_CLASSIFICATION	8.319656530475429E-8	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999996548342772	WITHOUT_CLASSIFICATION	3.4516572278396516E-7	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.9999995465031425	WITHOUT_CLASSIFICATION	4.5349685745244494E-7	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.9999999891114544	WITHOUT_CLASSIFICATION	1.0888545554026423E-8	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999999553442084	WITHOUT_CLASSIFICATION	4.465579154422319E-8	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9998546031842745	WITHOUT_CLASSIFICATION	1.4539681572550068E-4	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.999752879447275	WITHOUT_CLASSIFICATION	2.4712055272499254E-4	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999920049039213	WITHOUT_CLASSIFICATION	7.99509607871774E-6	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999970603429105	WITHOUT_CLASSIFICATION	2.9396570894868557E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999935996275	WITHOUT_CLASSIFICATION	6.400372338654229E-9	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999993358192526	WITHOUT_CLASSIFICATION	6.641807473377909E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999993358192526	WITHOUT_CLASSIFICATION	6.641807473377909E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999993358192526	WITHOUT_CLASSIFICATION	6.641807473377909E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999993358192526	WITHOUT_CLASSIFICATION	6.641807473377909E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999993358192526	WITHOUT_CLASSIFICATION	6.641807473377909E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999993358192526	WITHOUT_CLASSIFICATION	6.641807473377909E-7	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999962618579475	WITHOUT_CLASSIFICATION	3.7381420524390154E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999935996275	WITHOUT_CLASSIFICATION	6.400372338654229E-9	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999935996275	WITHOUT_CLASSIFICATION	6.400372338654229E-9	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999980184457733	WITHOUT_CLASSIFICATION	1.9815542266303564E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.999997297701651	WITHOUT_CLASSIFICATION	2.7022983488887513E-6	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.99999908903259	WITHOUT_CLASSIFICATION	9.109674100642011E-7	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.999999975091069	WITHOUT_CLASSIFICATION	2.4908930962817953E-8	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999923893018869	WITHOUT_CLASSIFICATION	7.610698113007974E-6	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.999999986579031	WITHOUT_CLASSIFICATION	1.342096899139075E-8	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.9999948781301816	WITHOUT_CLASSIFICATION	5.121869818395827E-6	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.999999989683975	WITHOUT_CLASSIFICATION	1.0316025017719877E-8	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.9999780784454597	WITHOUT_CLASSIFICATION	2.192155454018712E-5	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999953442999119	WITHOUT_CLASSIFICATION	4.655700088109436E-6	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999990498453069	WITHOUT_CLASSIFICATION	9.501546930980539E-6	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999844199635484	WITHOUT_CLASSIFICATION	1.5580036451602638E-5	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.9999999232170587	WITHOUT_CLASSIFICATION	7.678294125895301E-8	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999929145175511	WITHOUT_CLASSIFICATION	7.085482448766516E-6	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.9999998529878246	WITHOUT_CLASSIFICATION	1.470121754824026E-7	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.9990037041248248	WITHOUT_CLASSIFICATION	9.962958751752863E-4	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999992543293202	WITHOUT_CLASSIFICATION	7.45670679861274E-7	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997161559145	WITHOUT_CLASSIFICATION	2.8384408540248637E-7	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999991917155445	WITHOUT_CLASSIFICATION	8.082844555382719E-7	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998143461776	WITHOUT_CLASSIFICATION	1.8565382229639238E-7	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999984844256526	WITHOUT_CLASSIFICATION	1.515574347340923E-6	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999979649378727	WITHOUT_CLASSIFICATION	2.0350621272654057E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999962618579475	WITHOUT_CLASSIFICATION	3.7381420524390154E-6	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997161559145	WITHOUT_CLASSIFICATION	2.8384408540248637E-7	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.9999999482000909	WITHOUT_CLASSIFICATION	5.179990915920719E-8	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999946227423271	WITHOUT_CLASSIFICATION	5.377257672864243E-6	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999998764900219	WITHOUT_CLASSIFICATION	1.235099781015017E-6	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996294618896	WITHOUT_CLASSIFICATION	3.705381103944889E-7	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999995267617248	WITHOUT_CLASSIFICATION	4.732382753037203E-7	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997352806375	WITHOUT_CLASSIFICATION	2.6471936256816706E-7	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997863928376	WITHOUT_CLASSIFICATION	2.1360716232371537E-7	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998805127388	WITHOUT_CLASSIFICATION	1.194872611376039E-7	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996805289982	WITHOUT_CLASSIFICATION	3.1947100170081555E-7	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999995257714631	WITHOUT_CLASSIFICATION	4.7422853678373906E-7	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999991208408331	WITHOUT_CLASSIFICATION	8.79159166979614E-7	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999997538496573	WITHOUT_CLASSIFICATION	2.461503426799638E-7	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.9999978664931566	WITHOUT_CLASSIFICATION	2.1335068434573257E-6	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999971125021033	WITHOUT_CLASSIFICATION	2.887497896710003E-6	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.9999891348099256	WITHOUT_CLASSIFICATION	1.0865190074487794E-5	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.9999998226536714	WITHOUT_CLASSIFICATION	1.7734632865960788E-7	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999467340359569	WITHOUT_CLASSIFICATION	5.326596404311613E-5	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999959664411522	WITHOUT_CLASSIFICATION	4.033558847829103E-6	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.9999991057650084	WITHOUT_CLASSIFICATION	8.942349917165013E-7	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.999997348580158	WITHOUT_CLASSIFICATION	2.651419842027012E-6	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.9999975848396409	WITHOUT_CLASSIFICATION	2.4151603590223317E-6	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.999995398712653	WITHOUT_CLASSIFICATION	4.60128734708351E-6	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999689688887339	WITHOUT_CLASSIFICATION	3.1031111266083866E-5	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999689688887339	WITHOUT_CLASSIFICATION	3.1031111266083866E-5	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999998454194803	WITHOUT_CLASSIFICATION	1.5458051966210284E-7	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999998454194803	WITHOUT_CLASSIFICATION	1.5458051966210284E-7	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.9999311801023009	WITHOUT_CLASSIFICATION	6.881989769919581E-5	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.9999335719827875	WITHOUT_CLASSIFICATION	6.642801721250662E-5	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.9999993500245071	WITHOUT_CLASSIFICATION	6.499754929034332E-7	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.9999975968118022	WITHOUT_CLASSIFICATION	2.403188197870536E-6	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9999845555107035	WITHOUT_CLASSIFICATION	1.544448929650592E-5	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.999984921990245	WITHOUT_CLASSIFICATION	1.5078009754926994E-5	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.9999998288944515	WITHOUT_CLASSIFICATION	1.711055485178622E-7	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.9999987681421301	WITHOUT_CLASSIFICATION	1.2318578699536386E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999191525559	WITHOUT_CLASSIFICATION	8.084744404927196E-8	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.8524295354225875	DEFECT	0.14757046457741252	WITHOUT_CLASSIFICATION
// handle positive value	WITHOUT_CLASSIFICATION	0.9999999317464661	WITHOUT_CLASSIFICATION	6.825353395856188E-8	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999989373951333	WITHOUT_CLASSIFICATION	1.062604866715228E-6	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999989373951333	WITHOUT_CLASSIFICATION	1.062604866715228E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.999995651673155	WITHOUT_CLASSIFICATION	4.348326845040771E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.999995651673155	WITHOUT_CLASSIFICATION	4.348326845040771E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999999239946253	WITHOUT_CLASSIFICATION	7.600537457624531E-8	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999992670462935	WITHOUT_CLASSIFICATION	7.32953706497704E-7	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.9999992620689375	WITHOUT_CLASSIFICATION	7.379310625761409E-7	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.9999996680001547	WITHOUT_CLASSIFICATION	3.31999845271352E-7	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999998970950379	WITHOUT_CLASSIFICATION	1.0290496212238747E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999954566919076	WITHOUT_CLASSIFICATION	4.543308092504682E-6	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999845680483248	WITHOUT_CLASSIFICATION	1.543195167518591E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999507097946162	WITHOUT_CLASSIFICATION	4.9290205383768095E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999935996275	WITHOUT_CLASSIFICATION	6.400372338654229E-9	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999939832117669	WITHOUT_CLASSIFICATION	6.016788233077694E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999998970950379	WITHOUT_CLASSIFICATION	1.0290496212238747E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999954566919076	WITHOUT_CLASSIFICATION	4.543308092504682E-6	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999894766831253	WITHOUT_CLASSIFICATION	1.052331687464962E-5	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.9999986898209412	WITHOUT_CLASSIFICATION	1.3101790587949083E-6	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.9999999228019237	WITHOUT_CLASSIFICATION	7.719807631843664E-8	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999507097946162	WITHOUT_CLASSIFICATION	4.9290205383768095E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999998786146448	WITHOUT_CLASSIFICATION	1.213853552013558E-7	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.9999996680046895	WITHOUT_CLASSIFICATION	3.319953104678938E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999982950701062	WITHOUT_CLASSIFICATION	1.7049298938260582E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999982950701062	WITHOUT_CLASSIFICATION	1.7049298938260582E-6	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.9999999595288263	WITHOUT_CLASSIFICATION	4.047117365443332E-8	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9999662654454143	WITHOUT_CLASSIFICATION	3.373455458574744E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999962104480093	WITHOUT_CLASSIFICATION	3.7895519907154026E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999962104480093	WITHOUT_CLASSIFICATION	3.7895519907154026E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999994680002915	WITHOUT_CLASSIFICATION	5.319997084432429E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999994037921932	WITHOUT_CLASSIFICATION	5.96207806775281E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999960061123293	WITHOUT_CLASSIFICATION	3.993887670719667E-6	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.9999999879453347	WITHOUT_CLASSIFICATION	1.2054665284874637E-8	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.999989665202305	WITHOUT_CLASSIFICATION	1.0334797694988212E-5	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9999849637468821	WITHOUT_CLASSIFICATION	1.5036253117831783E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999987880198974	WITHOUT_CLASSIFICATION	1.211980102674233E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999997777973901	WITHOUT_CLASSIFICATION	2.2220260988226796E-7	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999971125021033	WITHOUT_CLASSIFICATION	2.887497896710003E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999954566919076	WITHOUT_CLASSIFICATION	4.543308092504682E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999986983093596	WITHOUT_CLASSIFICATION	1.301690640393603E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.999997295941891	WITHOUT_CLASSIFICATION	2.704058109062338E-6	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.999999625681612	WITHOUT_CLASSIFICATION	3.743183879981871E-7	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999934102970873	WITHOUT_CLASSIFICATION	6.589702912595757E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999996965612372	WITHOUT_CLASSIFICATION	3.034387627441E-7	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.999994115153053	WITHOUT_CLASSIFICATION	5.884846946939277E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.999998213291754	WITHOUT_CLASSIFICATION	1.7867082460122725E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.999998213291754	WITHOUT_CLASSIFICATION	1.7867082460122725E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.999999992736378	WITHOUT_CLASSIFICATION	7.263622031624851E-9	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.999999992736378	WITHOUT_CLASSIFICATION	7.263622031624851E-9	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999485785150664	WITHOUT_CLASSIFICATION	5.142148493368101E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999958752004002	WITHOUT_CLASSIFICATION	4.124799599754144E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999651555333845	WITHOUT_CLASSIFICATION	3.484446661544675E-5	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999927506611188	WITHOUT_CLASSIFICATION	7.249338881134566E-6	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999999744331611	WITHOUT_CLASSIFICATION	2.5566838931239144E-8	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999986987323148	WITHOUT_CLASSIFICATION	1.3012676850838598E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999993261937858	WITHOUT_CLASSIFICATION	6.738062141091446E-7	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.9999999554624996	WITHOUT_CLASSIFICATION	4.453750030005431E-8	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.999990258941808	WITHOUT_CLASSIFICATION	9.741058191961189E-6	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999670771436019	WITHOUT_CLASSIFICATION	3.292285639807811E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999995784736732	WITHOUT_CLASSIFICATION	4.2152632687070837E-7	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9993418352441267	WITHOUT_CLASSIFICATION	6.581647558733065E-4	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.999990258941808	WITHOUT_CLASSIFICATION	9.741058191961189E-6	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999670771436019	WITHOUT_CLASSIFICATION	3.292285639807811E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999995784736732	WITHOUT_CLASSIFICATION	4.2152632687070837E-7	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.9999997711675657	WITHOUT_CLASSIFICATION	2.2883243440086843E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999959006052582	WITHOUT_CLASSIFICATION	4.099394741729137E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999959006052582	WITHOUT_CLASSIFICATION	4.099394741729137E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999986983093596	WITHOUT_CLASSIFICATION	1.301690640393603E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999986983093596	WITHOUT_CLASSIFICATION	1.301690640393603E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999994433557444	WITHOUT_CLASSIFICATION	5.566442555749665E-7	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999994433557444	WITHOUT_CLASSIFICATION	5.566442555749665E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999998606636133	WITHOUT_CLASSIFICATION	1.3933638669834068E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999998606636133	WITHOUT_CLASSIFICATION	1.3933638669834068E-7	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999967170099191	WITHOUT_CLASSIFICATION	3.2829900808364545E-6	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.9999967170099191	WITHOUT_CLASSIFICATION	3.2829900808364545E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999715465335	WITHOUT_CLASSIFICATION	2.845346651706425E-8	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9999992669217972	WITHOUT_CLASSIFICATION	7.330782027843356E-7	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.99999972561683	WITHOUT_CLASSIFICATION	2.7438316992546037E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999960061123293	WITHOUT_CLASSIFICATION	3.993887670719667E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999960061123293	WITHOUT_CLASSIFICATION	3.993887670719667E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999996965612372	WITHOUT_CLASSIFICATION	3.034387627441E-7	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999995784736732	WITHOUT_CLASSIFICATION	4.2152632687070837E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999959006052582	WITHOUT_CLASSIFICATION	4.099394741729137E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999959006052582	WITHOUT_CLASSIFICATION	4.099394741729137E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999986983093596	WITHOUT_CLASSIFICATION	1.301690640393603E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999994433557444	WITHOUT_CLASSIFICATION	5.566442555749665E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999998606636133	WITHOUT_CLASSIFICATION	1.3933638669834068E-7	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999995028938011	WITHOUT_CLASSIFICATION	4.971061989747917E-7	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999988474761063	WITHOUT_CLASSIFICATION	1.1525238935866664E-6	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.9999899343530089	WITHOUT_CLASSIFICATION	1.0065646991115488E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999768004898655	WITHOUT_CLASSIFICATION	2.3199510134535027E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999964033016288	WITHOUT_CLASSIFICATION	3.596698371345915E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999951714599743	WITHOUT_CLASSIFICATION	4.828540025710594E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999829020416519	WITHOUT_CLASSIFICATION	1.709795834815464E-5	DEFECT
// X	WITHOUT_CLASSIFICATION	0.9999437017147318	WITHOUT_CLASSIFICATION	5.629828526816331E-5	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.9999948902320774	WITHOUT_CLASSIFICATION	5.109767922513284E-6	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.9999968487245091	WITHOUT_CLASSIFICATION	3.151275490920086E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999992670462935	WITHOUT_CLASSIFICATION	7.32953706497704E-7	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999996965612372	WITHOUT_CLASSIFICATION	3.034387627441E-7	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.999990258941808	WITHOUT_CLASSIFICATION	9.741058191961189E-6	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999670771436019	WITHOUT_CLASSIFICATION	3.292285639807811E-5	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.9999995784736732	WITHOUT_CLASSIFICATION	4.2152632687070837E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999959006052582	WITHOUT_CLASSIFICATION	4.099394741729137E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999994433557444	WITHOUT_CLASSIFICATION	5.566442555749665E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999998606636133	WITHOUT_CLASSIFICATION	1.3933638669834068E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999998606636133	WITHOUT_CLASSIFICATION	1.3933638669834068E-7	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999768004898655	WITHOUT_CLASSIFICATION	2.3199510134535027E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999768004898655	WITHOUT_CLASSIFICATION	2.3199510134535027E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999829020416519	WITHOUT_CLASSIFICATION	1.709795834815464E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999829020416519	WITHOUT_CLASSIFICATION	1.709795834815464E-5	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999989856650758	WITHOUT_CLASSIFICATION	1.0143349242171672E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999976546020207	WITHOUT_CLASSIFICATION	2.345397979278811E-6	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999987054962928	WITHOUT_CLASSIFICATION	1.2945037071932953E-6	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999988222643831	WITHOUT_CLASSIFICATION	1.1777356168585263E-6	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999961092952951	WITHOUT_CLASSIFICATION	3.89070470476764E-6	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999508347222769	WITHOUT_CLASSIFICATION	4.916527772318275E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999978034815	WITHOUT_CLASSIFICATION	2.196518499899302E-6	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999992670462935	WITHOUT_CLASSIFICATION	7.32953706497704E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999954566919076	WITHOUT_CLASSIFICATION	4.543308092504682E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999954566919076	WITHOUT_CLASSIFICATION	4.543308092504682E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999960061123293	WITHOUT_CLASSIFICATION	3.993887670719667E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999960061123293	WITHOUT_CLASSIFICATION	3.993887670719667E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999934102970873	WITHOUT_CLASSIFICATION	6.589702912595757E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999996965612372	WITHOUT_CLASSIFICATION	3.034387627441E-7	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999993261937858	WITHOUT_CLASSIFICATION	6.738062141091446E-7	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999993261937858	WITHOUT_CLASSIFICATION	6.738062141091446E-7	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999993261937858	WITHOUT_CLASSIFICATION	6.738062141091446E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999959006052582	WITHOUT_CLASSIFICATION	4.099394741729137E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.9999959006052582	WITHOUT_CLASSIFICATION	4.099394741729137E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999829020416519	WITHOUT_CLASSIFICATION	1.709795834815464E-5	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999976546020207	WITHOUT_CLASSIFICATION	2.345397979278811E-6	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999987054962928	WITHOUT_CLASSIFICATION	1.2945037071932953E-6	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999998014799083	WITHOUT_CLASSIFICATION	1.9852009171941642E-7	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.9999996171761599	WITHOUT_CLASSIFICATION	3.828238400041709E-7	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.9999967678486481	WITHOUT_CLASSIFICATION	3.2321513518099646E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9999251334363626	WITHOUT_CLASSIFICATION	7.486656363740981E-5	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9912659045861981	WITHOUT_CLASSIFICATION	0.008734095413801948	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999954566919076	WITHOUT_CLASSIFICATION	4.543308092504682E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999982950701062	WITHOUT_CLASSIFICATION	1.7049298938260582E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999962104480093	WITHOUT_CLASSIFICATION	3.7895519907154026E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999962104480093	WITHOUT_CLASSIFICATION	3.7895519907154026E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999994680002915	WITHOUT_CLASSIFICATION	5.319997084432429E-7	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999976546020207	WITHOUT_CLASSIFICATION	2.345397979278811E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999996345176246	WITHOUT_CLASSIFICATION	3.654823754197519E-7	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.9998998756390307	WITHOUT_CLASSIFICATION	1.0012436096922286E-4	DEFECT
// switch x and y	WITHOUT_CLASSIFICATION	0.999996964455529	WITHOUT_CLASSIFICATION	3.0355444709854967E-6	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.9999641139736547	WITHOUT_CLASSIFICATION	3.5886026345335386E-5	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.9999675035012078	WITHOUT_CLASSIFICATION	3.249649879226875E-5	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.9999992492655213	WITHOUT_CLASSIFICATION	7.507344788076933E-7	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.9999981962373072	WITHOUT_CLASSIFICATION	1.8037626927882713E-6	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.9999974939969836	WITHOUT_CLASSIFICATION	2.5060030164273833E-6	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.9999945287766313	WITHOUT_CLASSIFICATION	5.471223368775234E-6	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999970330965549	WITHOUT_CLASSIFICATION	2.9669034452878464E-6	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.9999950688307682	WITHOUT_CLASSIFICATION	4.931169231838243E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999996345176246	WITHOUT_CLASSIFICATION	3.654823754197519E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999996345176246	WITHOUT_CLASSIFICATION	3.654823754197519E-7	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999994680002915	WITHOUT_CLASSIFICATION	5.319997084432429E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999994037921932	WITHOUT_CLASSIFICATION	5.96207806775281E-7	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.999990258941808	WITHOUT_CLASSIFICATION	9.741058191961189E-6	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9999670771436019	WITHOUT_CLASSIFICATION	3.292285639807811E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999964033016288	WITHOUT_CLASSIFICATION	3.596698371345915E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999951714599743	WITHOUT_CLASSIFICATION	4.828540025710594E-6	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.9999976774557776	WITHOUT_CLASSIFICATION	2.3225442224537466E-6	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999848235152335	WITHOUT_CLASSIFICATION	1.5176484766387614E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999829226960809	WITHOUT_CLASSIFICATION	1.7077303919107192E-5	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.9999996333064803	WITHOUT_CLASSIFICATION	3.6669351959758727E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.9999954661086397	WITHOUT_CLASSIFICATION	4.533891360389688E-6	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999923328235946	WITHOUT_CLASSIFICATION	7.667176405378775E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9860509954744237	WITHOUT_CLASSIFICATION	0.013949004525576328	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9662792009029569	WITHOUT_CLASSIFICATION	0.03372079909704303	DEFECT
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999970603429105	WITHOUT_CLASSIFICATION	2.9396570894868557E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999844199635484	WITHOUT_CLASSIFICATION	1.5580036451602638E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999929145175511	WITHOUT_CLASSIFICATION	7.085482448766516E-6	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.999994115153053	WITHOUT_CLASSIFICATION	5.884846946939277E-6	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999485785150664	WITHOUT_CLASSIFICATION	5.142148493368101E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999998606636133	WITHOUT_CLASSIFICATION	1.3933638669834068E-7	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9860509954744237	WITHOUT_CLASSIFICATION	0.013949004525576328	DEFECT
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.9999961138620362	WITHOUT_CLASSIFICATION	3.886137963740167E-6	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9806382742938838	WITHOUT_CLASSIFICATION	0.019361725706116134	DEFECT
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999997158744088	WITHOUT_CLASSIFICATION	2.841255912026621E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9499511745221552	WITHOUT_CLASSIFICATION	0.05004882547784488	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.919936287829947	WITHOUT_CLASSIFICATION	0.08006371217005302	DEFECT
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999998777324827	WITHOUT_CLASSIFICATION	1.2226751729944676E-6	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9630032832255854	WITHOUT_CLASSIFICATION	0.03699671677441466	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9463683671147076	WITHOUT_CLASSIFICATION	0.05363163288529244	DEFECT
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999920052736977	WITHOUT_CLASSIFICATION	7.994726302348442E-6	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9914710655383592	WITHOUT_CLASSIFICATION	0.00852893446164076	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9774087815572634	WITHOUT_CLASSIFICATION	0.02259121844273652	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999696171104	WITHOUT_CLASSIFICATION	3.038288974137018E-8	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.9943962479239232	WITHOUT_CLASSIFICATION	0.0056037520760767985	DEFECT
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.9956096428957141	WITHOUT_CLASSIFICATION	0.004390357104285928	DEFECT
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999919768054549	WITHOUT_CLASSIFICATION	8.023194545025732E-6	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9944180131737482	WITHOUT_CLASSIFICATION	0.005581986826251817	DEFECT
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9877674904427421	WITHOUT_CLASSIFICATION	0.01223250955725782	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999990498453069	WITHOUT_CLASSIFICATION	9.501546930980539E-6	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9980723046890377	WITHOUT_CLASSIFICATION	0.0019276953109622855	DEFECT
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9954648167410379	WITHOUT_CLASSIFICATION	0.0045351832589620505	DEFECT
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999970585114347	WITHOUT_CLASSIFICATION	2.9414885651932714E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999471570977	WITHOUT_CLASSIFICATION	5.284290220341221E-8	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.999964116776015	WITHOUT_CLASSIFICATION	3.5883223985027E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999983277542405	WITHOUT_CLASSIFICATION	1.6722457594211568E-6	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999696171104	WITHOUT_CLASSIFICATION	3.038288974137018E-8	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9999662654454143	WITHOUT_CLASSIFICATION	3.373455458574744E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999962104480093	WITHOUT_CLASSIFICATION	3.7895519907154026E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999994680002915	WITHOUT_CLASSIFICATION	5.319997084432429E-7	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999994680002915	WITHOUT_CLASSIFICATION	5.319997084432429E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999994037921932	WITHOUT_CLASSIFICATION	5.96207806775281E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999960061123293	WITHOUT_CLASSIFICATION	3.993887670719667E-6	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.999989665202305	WITHOUT_CLASSIFICATION	1.0334797694988212E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999987880198974	WITHOUT_CLASSIFICATION	1.211980102674233E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.999997295941891	WITHOUT_CLASSIFICATION	2.704058109062338E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.9999996965612372	WITHOUT_CLASSIFICATION	3.034387627441E-7	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999768004898655	WITHOUT_CLASSIFICATION	2.3199510134535027E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999829020416519	WITHOUT_CLASSIFICATION	1.709795834815464E-5	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999071756087	WITHOUT_CLASSIFICATION	9.282439128227783E-8	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.9999988313517928	WITHOUT_CLASSIFICATION	1.1686482072954188E-6	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.9999999516463478	WITHOUT_CLASSIFICATION	4.8353652329767296E-8	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.9999999132953482	WITHOUT_CLASSIFICATION	8.670465179782762E-8	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.9999997903455128	WITHOUT_CLASSIFICATION	2.0965448713830277E-7	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.999996458106935	WITHOUT_CLASSIFICATION	3.5418930649175863E-6	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.9999961084858804	WITHOUT_CLASSIFICATION	3.891514119581539E-6	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.9999844836200743	WITHOUT_CLASSIFICATION	1.5516379925708686E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999982950701062	WITHOUT_CLASSIFICATION	1.7049298938260582E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999993261937858	WITHOUT_CLASSIFICATION	6.738062141091446E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999998606636133	WITHOUT_CLASSIFICATION	1.3933638669834068E-7	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999964033016288	WITHOUT_CLASSIFICATION	3.596698371345915E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999951714599743	WITHOUT_CLASSIFICATION	4.828540025710594E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9999829020416519	WITHOUT_CLASSIFICATION	1.709795834815464E-5	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999848235152335	WITHOUT_CLASSIFICATION	1.5176484766387614E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999829226960809	WITHOUT_CLASSIFICATION	1.7077303919107192E-5	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999991494024516	WITHOUT_CLASSIFICATION	8.505975484809864E-7	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999996905260302	WITHOUT_CLASSIFICATION	3.0947396978092984E-7	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.99999986316049	WITHOUT_CLASSIFICATION	1.3683950990955736E-7	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.9999990730720322	WITHOUT_CLASSIFICATION	9.269279678779561E-7	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.9999992685633271	WITHOUT_CLASSIFICATION	7.314366728414543E-7	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9998809969723377	WITHOUT_CLASSIFICATION	1.1900302766225457E-4	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.9998645380049838	WITHOUT_CLASSIFICATION	1.3546199501614624E-4	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.9999997870874825	WITHOUT_CLASSIFICATION	2.1291251745269516E-7	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999971225756686	WITHOUT_CLASSIFICATION	2.87742433137182E-6	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999994829512526	WITHOUT_CLASSIFICATION	5.170487474326055E-7	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9662792009029569	WITHOUT_CLASSIFICATION	0.03372079909704303	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9998809969723377	WITHOUT_CLASSIFICATION	1.1900302766225457E-4	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999971225756686	WITHOUT_CLASSIFICATION	2.87742433137182E-6	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999994829512526	WITHOUT_CLASSIFICATION	5.170487474326055E-7	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9999997222166241	WITHOUT_CLASSIFICATION	2.7778337593390825E-7	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999967211347398	WITHOUT_CLASSIFICATION	3.2788652602208226E-6	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999999140191086	WITHOUT_CLASSIFICATION	8.59808914805587E-8	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.9999999140191086	WITHOUT_CLASSIFICATION	8.59808914805587E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999972660380376	WITHOUT_CLASSIFICATION	2.73396196231224E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999998366017884	WITHOUT_CLASSIFICATION	1.6339821155267242E-7	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999998366017884	WITHOUT_CLASSIFICATION	1.6339821155267242E-7	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.9999065729776256	WITHOUT_CLASSIFICATION	9.342702237440806E-5	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.9999992458083324	WITHOUT_CLASSIFICATION	7.54191667579061E-7	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.9999989246142111	WITHOUT_CLASSIFICATION	1.0753857889688028E-6	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.9999934511976755	WITHOUT_CLASSIFICATION	6.548802324513991E-6	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.9999989604739216	WITHOUT_CLASSIFICATION	1.03952607848729E-6	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.999999805537101	WITHOUT_CLASSIFICATION	1.944628990413808E-7	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.9997230586456851	WITHOUT_CLASSIFICATION	2.769413543149276E-4	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999995516433295	WITHOUT_CLASSIFICATION	4.483566703619839E-7	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999813383920887	WITHOUT_CLASSIFICATION	1.866160791125979E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999995687699963	WITHOUT_CLASSIFICATION	4.312300037533851E-7	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.999997009131739	WITHOUT_CLASSIFICATION	2.9908682610629146E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.999998169124479	WITHOUT_CLASSIFICATION	1.8308755208949545E-6	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999991794137868	WITHOUT_CLASSIFICATION	8.205862133237779E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999964169330101	WITHOUT_CLASSIFICATION	3.5830669899238254E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999768004898655	WITHOUT_CLASSIFICATION	2.3199510134535027E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999813383920887	WITHOUT_CLASSIFICATION	1.866160791125979E-5	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999998360781721	WITHOUT_CLASSIFICATION	1.6392182790239853E-7	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999834358978394	WITHOUT_CLASSIFICATION	1.6564102160533355E-5	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.9999998048502422	WITHOUT_CLASSIFICATION	1.9514975789184132E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995124482708	WITHOUT_CLASSIFICATION	4.875517291963053E-7	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.9999550538189945	WITHOUT_CLASSIFICATION	4.494618100542448E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.999999343707908	WITHOUT_CLASSIFICATION	6.562920920592684E-7	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.999999727523238	WITHOUT_CLASSIFICATION	2.7247676204108446E-7	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.9999996104716109	WITHOUT_CLASSIFICATION	3.8952838911524953E-7	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.9917494992725145	WITHOUT_CLASSIFICATION	0.008250500727485394	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.9841842940733353	WITHOUT_CLASSIFICATION	0.01581570592666479	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.999994285085015	WITHOUT_CLASSIFICATION	5.714914985030573E-6	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.9999999778160868	WITHOUT_CLASSIFICATION	2.2183913183841633E-8	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.9999967497546567	WITHOUT_CLASSIFICATION	3.2502453433001166E-6	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.999991679594825	WITHOUT_CLASSIFICATION	8.320405175049287E-6	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.9999941636875473	WITHOUT_CLASSIFICATION	5.836312452698756E-6	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9998715558647392	WITHOUT_CLASSIFICATION	1.2844413526077891E-4	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9999998250764206	WITHOUT_CLASSIFICATION	1.7492357940190686E-7	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9999999462560464	WITHOUT_CLASSIFICATION	5.374395352807303E-8	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999986227775071	WITHOUT_CLASSIFICATION	1.3772224928952382E-6	DEFECT
// state	WITHOUT_CLASSIFICATION	0.9999990929625199	WITHOUT_CLASSIFICATION	9.070374801691166E-7	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.9999999309258218	WITHOUT_CLASSIFICATION	6.907417816371156E-8	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.9999997381070718	WITHOUT_CLASSIFICATION	2.618929282326073E-7	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.9999599788691387	WITHOUT_CLASSIFICATION	4.002113086138904E-5	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.999999580586577	WITHOUT_CLASSIFICATION	4.1941342299466316E-7	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999970116789051	WITHOUT_CLASSIFICATION	2.9883210948529752E-6	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999965978783533	WITHOUT_CLASSIFICATION	3.4021216468773766E-6	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999999104568683	WITHOUT_CLASSIFICATION	8.954313167729273E-8	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999993658648435	WITHOUT_CLASSIFICATION	6.341351565969605E-7	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.9999971168035207	WITHOUT_CLASSIFICATION	2.8831964793260173E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9991183438876051	WITHOUT_CLASSIFICATION	8.816561123948689E-4	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.99999571265225	WITHOUT_CLASSIFICATION	4.287347750053894E-6	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.9999997059521616	WITHOUT_CLASSIFICATION	2.940478384321162E-7	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999999474526422	WITHOUT_CLASSIFICATION	5.2547357817052426E-8	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.999998505516123	WITHOUT_CLASSIFICATION	1.4944838770224723E-6	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999995092388064	WITHOUT_CLASSIFICATION	4.907611935283199E-7	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.9999999544530228	WITHOUT_CLASSIFICATION	4.554697706717649E-8	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.9999998667643314	WITHOUT_CLASSIFICATION	1.3323566855435194E-7	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.9999993710345785	WITHOUT_CLASSIFICATION	6.289654214540447E-7	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.9999992110573784	WITHOUT_CLASSIFICATION	7.88942621605843E-7	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.9999990166927317	WITHOUT_CLASSIFICATION	9.833072683069345E-7	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.9999986191082408	WITHOUT_CLASSIFICATION	1.3808917590977716E-6	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.9999996886737507	WITHOUT_CLASSIFICATION	3.113262493446482E-7	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.9999918261275724	WITHOUT_CLASSIFICATION	8.173872427684392E-6	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.9999997182282923	WITHOUT_CLASSIFICATION	2.8177170773711323E-7	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.9999950162848624	WITHOUT_CLASSIFICATION	4.983715137643879E-6	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999935437408525	WITHOUT_CLASSIFICATION	6.456259147516822E-6	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999977136538911	WITHOUT_CLASSIFICATION	2.2863461088764246E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999964169330101	WITHOUT_CLASSIFICATION	3.5830669899238254E-6	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.999752879447275	WITHOUT_CLASSIFICATION	2.4712055272499254E-4	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999994037921932	WITHOUT_CLASSIFICATION	5.96207806775281E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.999999343707908	WITHOUT_CLASSIFICATION	6.562920920592684E-7	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999999104568683	WITHOUT_CLASSIFICATION	8.954313167729273E-8	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999993658648435	WITHOUT_CLASSIFICATION	6.341351565969605E-7	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999935437408525	WITHOUT_CLASSIFICATION	6.456259147516822E-6	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.9999977136538911	WITHOUT_CLASSIFICATION	2.2863461088764246E-6	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.9999915837686721	WITHOUT_CLASSIFICATION	8.416231327933819E-6	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.9999718710629485	WITHOUT_CLASSIFICATION	2.8128937051591586E-5	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.9999999626823486	WITHOUT_CLASSIFICATION	3.7317651417840276E-8	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.9999999752651029	WITHOUT_CLASSIFICATION	2.4734897101311758E-8	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999823795131811	WITHOUT_CLASSIFICATION	1.7620486818844945E-5	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.9999990140547008	WITHOUT_CLASSIFICATION	9.859452992541447E-7	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.9999999558675231	WITHOUT_CLASSIFICATION	4.4132476884172874E-8	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999957281834009	WITHOUT_CLASSIFICATION	4.27181659908806E-6	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999858100121504	WITHOUT_CLASSIFICATION	1.41899878495384E-5	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999923328235946	WITHOUT_CLASSIFICATION	7.667176405378775E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999191525559	WITHOUT_CLASSIFICATION	8.084744404927196E-8	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9912659045861981	WITHOUT_CLASSIFICATION	0.008734095413801948	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9806382742938838	WITHOUT_CLASSIFICATION	0.019361725706116134	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999984548451352	WITHOUT_CLASSIFICATION	1.5451548648654034E-6	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999988113556291	WITHOUT_CLASSIFICATION	1.1886443709835977E-6	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999970330965549	WITHOUT_CLASSIFICATION	2.9669034452878464E-6	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.9999992356351979	WITHOUT_CLASSIFICATION	7.64364802151342E-7	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.9999914919454769	WITHOUT_CLASSIFICATION	8.508054523079747E-6	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999844199635484	WITHOUT_CLASSIFICATION	1.5580036451602638E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999929145175511	WITHOUT_CLASSIFICATION	7.085482448766516E-6	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999467340359569	WITHOUT_CLASSIFICATION	5.326596404311613E-5	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999959664411522	WITHOUT_CLASSIFICATION	4.033558847829103E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9499511745221552	WITHOUT_CLASSIFICATION	0.05004882547784488	DEFECT
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.919936287829947	WITHOUT_CLASSIFICATION	0.08006371217005302	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9630032832255854	WITHOUT_CLASSIFICATION	0.03699671677441466	DEFECT
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9463683671147076	WITHOUT_CLASSIFICATION	0.05363163288529244	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9914710655383592	WITHOUT_CLASSIFICATION	0.00852893446164076	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9774087815572634	WITHOUT_CLASSIFICATION	0.02259121844273652	DEFECT
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.9999998920110292	WITHOUT_CLASSIFICATION	1.0798897080002211E-7	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999997158744088	WITHOUT_CLASSIFICATION	2.841255912026621E-6	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999998777324827	WITHOUT_CLASSIFICATION	1.2226751729944676E-6	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999920052736977	WITHOUT_CLASSIFICATION	7.994726302348442E-6	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999883250475384	WITHOUT_CLASSIFICATION	1.1674952461485899E-5	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999837653356417	WITHOUT_CLASSIFICATION	1.623466435826473E-5	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999991886248185	WITHOUT_CLASSIFICATION	8.113751815050836E-6	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.8022385056840983	WITHOUT_CLASSIFICATION	0.1977614943159017	DEFECT
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999953442999119	WITHOUT_CLASSIFICATION	4.655700088109436E-6	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999916785065107	WITHOUT_CLASSIFICATION	8.321493489250944E-6	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999886100314301	WITHOUT_CLASSIFICATION	1.1389968569876649E-5	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.9999964790587295	WITHOUT_CLASSIFICATION	3.5209412704115323E-6	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.9999999191938617	WITHOUT_CLASSIFICATION	8.080613823381799E-8	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.9999995668323819	WITHOUT_CLASSIFICATION	4.331676180016958E-7	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.99999477963041	WITHOUT_CLASSIFICATION	5.220369590043771E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981218735368	WITHOUT_CLASSIFICATION	1.878126463244239E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999976166540536	WITHOUT_CLASSIFICATION	2.3833459464078863E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999964169330101	WITHOUT_CLASSIFICATION	3.5830669899238254E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999982950701062	WITHOUT_CLASSIFICATION	1.7049298938260582E-6	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999995687699963	WITHOUT_CLASSIFICATION	4.312300037533851E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999998444532165	WITHOUT_CLASSIFICATION	1.5554678346794326E-7	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.9999962939830064	WITHOUT_CLASSIFICATION	3.7060169935113782E-6	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999991685026298	WITHOUT_CLASSIFICATION	8.314973700726313E-7	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999974294951827	WITHOUT_CLASSIFICATION	2.570504817433501E-6	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.9999994656114857	WITHOUT_CLASSIFICATION	5.343885143579039E-7	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.9999880405563586	WITHOUT_CLASSIFICATION	1.195944364136035E-5	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.9999997979701303	WITHOUT_CLASSIFICATION	2.0202986966636838E-7	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999983242283552	WITHOUT_CLASSIFICATION	1.6757716446866368E-6	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.9999983552663086	WITHOUT_CLASSIFICATION	1.6447336913859654E-6	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9999969905297994	WITHOUT_CLASSIFICATION	3.009470200586984E-6	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.9998739213580671	WITHOUT_CLASSIFICATION	1.2607864193298077E-4	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999996548342772	WITHOUT_CLASSIFICATION	3.4516572278396516E-7	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999971125021033	WITHOUT_CLASSIFICATION	2.887497896710003E-6	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999894766831253	WITHOUT_CLASSIFICATION	1.052331687464962E-5	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999845680483248	WITHOUT_CLASSIFICATION	1.543195167518591E-5	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999507097946162	WITHOUT_CLASSIFICATION	4.9290205383768095E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999982950701062	WITHOUT_CLASSIFICATION	1.7049298938260582E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999768004898655	WITHOUT_CLASSIFICATION	2.3199510134535027E-5	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.9999995516433295	WITHOUT_CLASSIFICATION	4.483566703619839E-7	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.999998169124479	WITHOUT_CLASSIFICATION	1.8308755208949545E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999834358978394	WITHOUT_CLASSIFICATION	1.6564102160533355E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995124482708	WITHOUT_CLASSIFICATION	4.875517291963053E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995124482708	WITHOUT_CLASSIFICATION	4.875517291963053E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999999796813042	WITHOUT_CLASSIFICATION	2.0318695805130805E-7	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999901295600668	WITHOUT_CLASSIFICATION	9.870439933284931E-6	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999967194225824	WITHOUT_CLASSIFICATION	3.2805774175357523E-6	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.9999157427182996	WITHOUT_CLASSIFICATION	8.425728170030394E-5	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999965550227754	WITHOUT_CLASSIFICATION	3.444977224711788E-6	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.999996946672307	WITHOUT_CLASSIFICATION	3.053327693091604E-6	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.9999990096929672	WITHOUT_CLASSIFICATION	9.903070327796436E-7	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999923195091694	WITHOUT_CLASSIFICATION	7.680490830533899E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999976166540536	WITHOUT_CLASSIFICATION	2.3833459464078863E-6	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999998194727311	WITHOUT_CLASSIFICATION	1.8052726888879792E-7	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999994037921932	WITHOUT_CLASSIFICATION	5.96207806775281E-7	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999974294951827	WITHOUT_CLASSIFICATION	2.570504817433501E-6	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.9999376242097371	WITHOUT_CLASSIFICATION	6.237579026287701E-5	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.9999449695582093	WITHOUT_CLASSIFICATION	5.503044179070704E-5	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.999997459568234	WITHOUT_CLASSIFICATION	2.540431765975768E-6	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999997850570674	WITHOUT_CLASSIFICATION	2.1494293250837532E-7	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999997094603421	WITHOUT_CLASSIFICATION	2.905396579006216E-7	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.9999994550662499	WITHOUT_CLASSIFICATION	5.449337502065257E-7	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.999999963542371	WITHOUT_CLASSIFICATION	3.6457629033071566E-8	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.9999999303685474	WITHOUT_CLASSIFICATION	6.963145260991111E-8	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.9999999208845669	WITHOUT_CLASSIFICATION	7.911543303434602E-8	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.9999999677791301	WITHOUT_CLASSIFICATION	3.222086987790018E-8	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.9999996723958189	WITHOUT_CLASSIFICATION	3.276041811579397E-7	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.9999996894853386	WITHOUT_CLASSIFICATION	3.105146613480869E-7	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.9999967261351557	WITHOUT_CLASSIFICATION	3.273864844402837E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999997777973901	WITHOUT_CLASSIFICATION	2.2220260988226796E-7	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.999994115153053	WITHOUT_CLASSIFICATION	5.884846946939277E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.999998213291754	WITHOUT_CLASSIFICATION	1.7867082460122725E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.999998213291754	WITHOUT_CLASSIFICATION	1.7867082460122725E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.999999992736378	WITHOUT_CLASSIFICATION	7.263622031624851E-9	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.999999992736378	WITHOUT_CLASSIFICATION	7.263622031624851E-9	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999485785150664	WITHOUT_CLASSIFICATION	5.142148493368101E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999958752004002	WITHOUT_CLASSIFICATION	4.124799599754144E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999927506611188	WITHOUT_CLASSIFICATION	7.249338881134566E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999927506611188	WITHOUT_CLASSIFICATION	7.249338881134566E-6	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999999744331611	WITHOUT_CLASSIFICATION	2.5566838931239144E-8	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999999744331611	WITHOUT_CLASSIFICATION	2.5566838931239144E-8	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999986987323148	WITHOUT_CLASSIFICATION	1.3012676850838598E-6	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999986987323148	WITHOUT_CLASSIFICATION	1.3012676850838598E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9999251334363626	WITHOUT_CLASSIFICATION	7.486656363740981E-5	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.999999477641686	WITHOUT_CLASSIFICATION	5.223583140203664E-7	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999996171243406	WITHOUT_CLASSIFICATION	3.8287565934980425E-7	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.9999989681650882	WITHOUT_CLASSIFICATION	1.0318349119037845E-6	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.9999995924143306	WITHOUT_CLASSIFICATION	4.0758566945176266E-7	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9999989573143413	WITHOUT_CLASSIFICATION	1.0426856586782483E-6	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.9999987745535742	WITHOUT_CLASSIFICATION	1.2254464257612068E-6	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.9999998388048023	WITHOUT_CLASSIFICATION	1.6119519776840167E-7	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.9999675948148155	WITHOUT_CLASSIFICATION	3.2405185184504E-5	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.9999976218871117	WITHOUT_CLASSIFICATION	2.378112888230454E-6	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.9999999685975209	WITHOUT_CLASSIFICATION	3.1402478971172E-8	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.9999999111529798	WITHOUT_CLASSIFICATION	8.884702013865627E-8	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.9999997985688824	WITHOUT_CLASSIFICATION	2.014311174957867E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999982950701062	WITHOUT_CLASSIFICATION	1.7049298938260582E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999994037921932	WITHOUT_CLASSIFICATION	5.96207806775281E-7	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999768004898655	WITHOUT_CLASSIFICATION	2.3199510134535027E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.999998169124479	WITHOUT_CLASSIFICATION	1.8308755208949545E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.9999834358978394	WITHOUT_CLASSIFICATION	1.6564102160533355E-5	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999957281834009	WITHOUT_CLASSIFICATION	4.27181659908806E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999901295600668	WITHOUT_CLASSIFICATION	9.870439933284931E-6	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999906525767677	WITHOUT_CLASSIFICATION	9.347423232373647E-6	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999994648619305	WITHOUT_CLASSIFICATION	5.351380695205362E-7	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.9999999258955568	WITHOUT_CLASSIFICATION	7.410444328398767E-8	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.9999997062339402	WITHOUT_CLASSIFICATION	2.9376605978073485E-7	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.9999960566423489	WITHOUT_CLASSIFICATION	3.943357651133558E-6	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999975744529547	WITHOUT_CLASSIFICATION	2.4255470452290426E-6	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999970177801076	WITHOUT_CLASSIFICATION	2.9822198924017746E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999976166540536	WITHOUT_CLASSIFICATION	2.3833459464078863E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999935996275	WITHOUT_CLASSIFICATION	6.400372338654229E-9	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999507097946162	WITHOUT_CLASSIFICATION	4.9290205383768095E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999998786146448	WITHOUT_CLASSIFICATION	1.213853552013558E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999998606636133	WITHOUT_CLASSIFICATION	1.3933638669834068E-7	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999988222643831	WITHOUT_CLASSIFICATION	1.1777356168585263E-6	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999961092952951	WITHOUT_CLASSIFICATION	3.89070470476764E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999995124482708	WITHOUT_CLASSIFICATION	4.875517291963053E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.999999343707908	WITHOUT_CLASSIFICATION	6.562920920592684E-7	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999988113556291	WITHOUT_CLASSIFICATION	1.1886443709835977E-6	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999999595566247	WITHOUT_CLASSIFICATION	4.044337540969028E-8	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.9999794457575927	WITHOUT_CLASSIFICATION	2.055424240740719E-5	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.9999999783813078	WITHOUT_CLASSIFICATION	2.161869211250724E-8	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.999996300584746	WITHOUT_CLASSIFICATION	3.699415254092868E-6	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999993870000581	WITHOUT_CLASSIFICATION	6.129999418471451E-7	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999997466264346	WITHOUT_CLASSIFICATION	2.5337356536935296E-7	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.9999923195091694	WITHOUT_CLASSIFICATION	7.680490830533899E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999976166540536	WITHOUT_CLASSIFICATION	2.3833459464078863E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999994037921932	WITHOUT_CLASSIFICATION	5.96207806775281E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999071756087	WITHOUT_CLASSIFICATION	9.282439128227783E-8	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.999998169124479	WITHOUT_CLASSIFICATION	1.8308755208949545E-6	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.999997459568234	WITHOUT_CLASSIFICATION	2.540431765975768E-6	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999997094603421	WITHOUT_CLASSIFICATION	2.905396579006216E-7	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.999999310455119	WITHOUT_CLASSIFICATION	6.895448810009522E-7	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.9999989369391007	WITHOUT_CLASSIFICATION	1.0630608992660763E-6	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.9999955095556483	WITHOUT_CLASSIFICATION	4.490444351718515E-6	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.999998334620959	WITHOUT_CLASSIFICATION	1.6653790409790434E-6	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999978908152144	WITHOUT_CLASSIFICATION	2.1091847855474423E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.999999620997622	WITHOUT_CLASSIFICATION	3.790023780369819E-7	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999993442078758	WITHOUT_CLASSIFICATION	6.557921241008864E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999964169330101	WITHOUT_CLASSIFICATION	3.5830669899238254E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999964169330101	WITHOUT_CLASSIFICATION	3.5830669899238254E-6	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999978908152144	WITHOUT_CLASSIFICATION	2.1091847855474423E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9993731950645498	WITHOUT_CLASSIFICATION	6.268049354501722E-4	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.999999620997622	WITHOUT_CLASSIFICATION	3.790023780369819E-7	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999993442078758	WITHOUT_CLASSIFICATION	6.557921241008864E-7	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.9999998574531122	WITHOUT_CLASSIFICATION	1.4254688797689003E-7	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999993891508161	WITHOUT_CLASSIFICATION	6.108491838081696E-7	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999993891508161	WITHOUT_CLASSIFICATION	6.108491838081696E-7	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999998427739141	WITHOUT_CLASSIFICATION	1.5722608600835304E-7	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.999998109424943	WITHOUT_CLASSIFICATION	1.890575056920151E-6	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.9999997087421231	WITHOUT_CLASSIFICATION	2.912578769864501E-7	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.9999997815524619	WITHOUT_CLASSIFICATION	2.184475381628315E-7	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.9999998318286469	WITHOUT_CLASSIFICATION	1.681713531255121E-7	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.9999976774246694	WITHOUT_CLASSIFICATION	2.322575330576098E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981218735368	WITHOUT_CLASSIFICATION	1.878126463244239E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999981218735368	WITHOUT_CLASSIFICATION	1.878126463244239E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999964169330101	WITHOUT_CLASSIFICATION	3.5830669899238254E-6	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.999998169124479	WITHOUT_CLASSIFICATION	1.8308755208949545E-6	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999998427739141	WITHOUT_CLASSIFICATION	1.5722608600835304E-7	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999903492794752	WITHOUT_CLASSIFICATION	9.650720524783628E-6	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999995076315795	WITHOUT_CLASSIFICATION	4.923684204248006E-7	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.9999999379518236	WITHOUT_CLASSIFICATION	6.204817639584727E-8	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9999959455199611	WITHOUT_CLASSIFICATION	4.054480038882733E-6	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.9999960838703112	WITHOUT_CLASSIFICATION	3.91612968877232E-6	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.9999998969432583	WITHOUT_CLASSIFICATION	1.0305674169256476E-7	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.999999706366907	WITHOUT_CLASSIFICATION	2.936330930339824E-7	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.9997857904660105	WITHOUT_CLASSIFICATION	2.1420953398959864E-4	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.9999989056642545	WITHOUT_CLASSIFICATION	1.0943357455190402E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999903492794752	WITHOUT_CLASSIFICATION	9.650720524783628E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999903492794752	WITHOUT_CLASSIFICATION	9.650720524783628E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999903492794752	WITHOUT_CLASSIFICATION	9.650720524783628E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999903492794752	WITHOUT_CLASSIFICATION	9.650720524783628E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999982950701062	WITHOUT_CLASSIFICATION	1.7049298938260582E-6	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999986987323148	WITHOUT_CLASSIFICATION	1.3012676850838598E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999998606636133	WITHOUT_CLASSIFICATION	1.3933638669834068E-7	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999471570977	WITHOUT_CLASSIFICATION	5.284290220341221E-8	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.999997459568234	WITHOUT_CLASSIFICATION	2.540431765975768E-6	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999997850570674	WITHOUT_CLASSIFICATION	2.1494293250837532E-7	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999997094603421	WITHOUT_CLASSIFICATION	2.905396579006216E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999998756813289	WITHOUT_CLASSIFICATION	1.2431867117010866E-7	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.999915357749891	WITHOUT_CLASSIFICATION	8.464225010894136E-5	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.9992093397490543	WITHOUT_CLASSIFICATION	7.906602509456202E-4	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.9999997407344288	WITHOUT_CLASSIFICATION	2.5926557122654107E-7	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.99999993652698	WITHOUT_CLASSIFICATION	6.347302001403155E-8	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.99999993652698	WITHOUT_CLASSIFICATION	6.347302001403155E-8	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9999983763936732	WITHOUT_CLASSIFICATION	1.6236063268856865E-6	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.9999972841300944	WITHOUT_CLASSIFICATION	2.7158699056896234E-6	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999975114662973	WITHOUT_CLASSIFICATION	2.4885337027086803E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999976166540536	WITHOUT_CLASSIFICATION	2.3833459464078863E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999964169330101	WITHOUT_CLASSIFICATION	3.5830669899238254E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999191525559	WITHOUT_CLASSIFICATION	8.084744404927196E-8	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999982950701062	WITHOUT_CLASSIFICATION	1.7049298938260582E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999715465335	WITHOUT_CLASSIFICATION	2.845346651706425E-8	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999996905260302	WITHOUT_CLASSIFICATION	3.0947396978092984E-7	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9999996434004647	WITHOUT_CLASSIFICATION	3.5659953536350986E-7	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.9999661374491754	WITHOUT_CLASSIFICATION	3.3862550824619513E-5	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.9999987709831146	WITHOUT_CLASSIFICATION	1.2290168852927453E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999976166540536	WITHOUT_CLASSIFICATION	2.3833459464078863E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999964169330101	WITHOUT_CLASSIFICATION	3.5830669899238254E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999999317464661	WITHOUT_CLASSIFICATION	6.825353395856188E-8	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999989373951333	WITHOUT_CLASSIFICATION	1.062604866715228E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.999995651673155	WITHOUT_CLASSIFICATION	4.348326845040771E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.999995651673155	WITHOUT_CLASSIFICATION	4.348326845040771E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999999239946253	WITHOUT_CLASSIFICATION	7.600537457624531E-8	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999651555333845	WITHOUT_CLASSIFICATION	3.484446661544675E-5	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999927506611188	WITHOUT_CLASSIFICATION	7.249338881134566E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9999251334363626	WITHOUT_CLASSIFICATION	7.486656363740981E-5	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999983242283552	WITHOUT_CLASSIFICATION	1.6757716446866368E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999903492794752	WITHOUT_CLASSIFICATION	9.650720524783628E-6	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.9999962846603814	WITHOUT_CLASSIFICATION	3.7153396186790826E-6	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.9999998970748959	WITHOUT_CLASSIFICATION	1.0292510415036979E-7	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9999992442226899	WITHOUT_CLASSIFICATION	7.55777310102726E-7	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.9999999805341213	WITHOUT_CLASSIFICATION	1.9465878713626682E-8	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999903492794752	WITHOUT_CLASSIFICATION	9.650720524783628E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999999787268156	WITHOUT_CLASSIFICATION	2.127318442895472E-8	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999964169330101	WITHOUT_CLASSIFICATION	3.5830669899238254E-6	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999978908152144	WITHOUT_CLASSIFICATION	2.1091847855474423E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.999999620997622	WITHOUT_CLASSIFICATION	3.790023780369819E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999993442078758	WITHOUT_CLASSIFICATION	6.557921241008864E-7	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9991183438876051	WITHOUT_CLASSIFICATION	8.816561123948689E-4	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999875290420019	WITHOUT_CLASSIFICATION	1.2470957998049803E-5	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.9999998094281478	WITHOUT_CLASSIFICATION	1.9057185218367188E-7	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.9999989441899004	WITHOUT_CLASSIFICATION	1.055810099538168E-6	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.9999996821970599	WITHOUT_CLASSIFICATION	3.1780294000935714E-7	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.9999001527410151	WITHOUT_CLASSIFICATION	9.98472589848908E-5	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.9999997315960442	WITHOUT_CLASSIFICATION	2.6840395592048055E-7	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.999997997947136	WITHOUT_CLASSIFICATION	2.0020528640913482E-6	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.9999988283092416	WITHOUT_CLASSIFICATION	1.171690758410728E-6	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9999960727711512	WITHOUT_CLASSIFICATION	3.927228848788594E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999984860145077	WITHOUT_CLASSIFICATION	1.513985492254177E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999984860145077	WITHOUT_CLASSIFICATION	1.513985492254177E-6	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.9999996826362745	WITHOUT_CLASSIFICATION	3.173637254195577E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.9999998756813289	WITHOUT_CLASSIFICATION	1.2431867117010866E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999604218685	WITHOUT_CLASSIFICATION	3.957813140801723E-8	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999598241837684	WITHOUT_CLASSIFICATION	4.017581623168747E-5	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999598241837684	WITHOUT_CLASSIFICATION	4.017581623168747E-5	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9999986254525625	WITHOUT_CLASSIFICATION	1.374547437478485E-6	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9999883969624263	WITHOUT_CLASSIFICATION	1.1603037573823002E-5	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.999999941946362	WITHOUT_CLASSIFICATION	5.805363802717686E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999604218685	WITHOUT_CLASSIFICATION	3.957813140801723E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999604218685	WITHOUT_CLASSIFICATION	3.957813140801723E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999604218685	WITHOUT_CLASSIFICATION	3.957813140801723E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999632593221	WITHOUT_CLASSIFICATION	3.674067788845873E-8	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999598241837684	WITHOUT_CLASSIFICATION	4.017581623168747E-5	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999983277542405	WITHOUT_CLASSIFICATION	1.6722457594211568E-6	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.9999958126248328	WITHOUT_CLASSIFICATION	4.187375167163897E-6	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999998810656407	WITHOUT_CLASSIFICATION	1.1893435926350264E-7	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999996184143347	WITHOUT_CLASSIFICATION	3.8158566529136447E-7	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.9999999942189736	WITHOUT_CLASSIFICATION	5.781026441862064E-9	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.9999999189308589	WITHOUT_CLASSIFICATION	8.106914110216944E-8	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9999990625758088	WITHOUT_CLASSIFICATION	9.374241911239615E-7	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9996879546377323	WITHOUT_CLASSIFICATION	3.1204536226773767E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9996879546377323	WITHOUT_CLASSIFICATION	3.1204536226773767E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9996879546377323	WITHOUT_CLASSIFICATION	3.1204536226773767E-4	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.9989539734445992	WITHOUT_CLASSIFICATION	0.0010460265554007421	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.9999998566679484	WITHOUT_CLASSIFICATION	1.433320514762654E-7	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.999891739881035	WITHOUT_CLASSIFICATION	1.0826011896510653E-4	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.999998115006801	WITHOUT_CLASSIFICATION	1.884993198926966E-6	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999999824913874	WITHOUT_CLASSIFICATION	1.7508612569288124E-8	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.9996540160277805	WITHOUT_CLASSIFICATION	3.4598397221951964E-4	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999786118421083	WITHOUT_CLASSIFICATION	2.1388157891697756E-5	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.9999914979038597	WITHOUT_CLASSIFICATION	8.502096140317904E-6	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.9999999540008804	WITHOUT_CLASSIFICATION	4.5999119577889435E-8	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.9999999534453965	WITHOUT_CLASSIFICATION	4.6554603519266916E-8	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.999999480060265	WITHOUT_CLASSIFICATION	5.199397350991418E-7	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.9999985644145711	WITHOUT_CLASSIFICATION	1.4355854288911328E-6	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999995454459373	WITHOUT_CLASSIFICATION	4.545540626337486E-7	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999995454459373	WITHOUT_CLASSIFICATION	4.545540626337486E-7	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999998037917118	WITHOUT_CLASSIFICATION	1.962082880702312E-7	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999998037917118	WITHOUT_CLASSIFICATION	1.962082880702312E-7	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9999989520895959	WITHOUT_CLASSIFICATION	1.04791040413477E-6	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.9999998052601802	WITHOUT_CLASSIFICATION	1.9473981986792596E-7	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.9999950510517254	WITHOUT_CLASSIFICATION	4.94894827468539E-6	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.9999997496243961	WITHOUT_CLASSIFICATION	2.503756039017816E-7	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.9999352483561121	WITHOUT_CLASSIFICATION	6.475164388785271E-5	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9998962150529122	WITHOUT_CLASSIFICATION	1.0378494708795943E-4	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9998958841127715	WITHOUT_CLASSIFICATION	1.0411588722846259E-4	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.999999334729983	WITHOUT_CLASSIFICATION	6.652700168958092E-7	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.9988671069517435	WITHOUT_CLASSIFICATION	0.0011328930482564696	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999954908218324	WITHOUT_CLASSIFICATION	4.509178167674832E-6	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999993747447258	WITHOUT_CLASSIFICATION	6.252552741904535E-7	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999485135983757	WITHOUT_CLASSIFICATION	5.148640162426655E-5	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9997746726566347	WITHOUT_CLASSIFICATION	2.2532734336533735E-4	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999975136059044	WITHOUT_CLASSIFICATION	2.4863940957183656E-6	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.9998934455948497	WITHOUT_CLASSIFICATION	1.0655440515031804E-4	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.9999999832643243	WITHOUT_CLASSIFICATION	1.6735675790284252E-8	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999979155411857	WITHOUT_CLASSIFICATION	2.0844588142954303E-6	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999979155411857	WITHOUT_CLASSIFICATION	2.0844588142954303E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.999994615385024	WITHOUT_CLASSIFICATION	5.384614976047042E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.999994615385024	WITHOUT_CLASSIFICATION	5.384614976047042E-6	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.9996323564056528	WITHOUT_CLASSIFICATION	3.6764359434709646E-4	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.9999923055853757	WITHOUT_CLASSIFICATION	7.694414624345365E-6	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.9998017543168664	WITHOUT_CLASSIFICATION	1.982456831336095E-4	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.999998686166811	WITHOUT_CLASSIFICATION	1.3138331889151786E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999907058253	WITHOUT_CLASSIFICATION	9.29417468880169E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999907058253	WITHOUT_CLASSIFICATION	9.29417468880169E-9	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9999246174517208	WITHOUT_CLASSIFICATION	7.538254827919625E-5	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9999244646637401	WITHOUT_CLASSIFICATION	7.553533625994165E-5	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999960305710067	WITHOUT_CLASSIFICATION	3.969428993294826E-6	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.9999996412462087	WITHOUT_CLASSIFICATION	3.5875379131531664E-7	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999754777563	WITHOUT_CLASSIFICATION	2.4522243632046444E-8	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.9999998516008569	WITHOUT_CLASSIFICATION	1.4839914312876798E-7	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999910998069221	WITHOUT_CLASSIFICATION	8.90019307792681E-6	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999910998069221	WITHOUT_CLASSIFICATION	8.90019307792681E-6	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9999995648517316	WITHOUT_CLASSIFICATION	4.3514826846744555E-7	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999997689325114	WITHOUT_CLASSIFICATION	2.3106748865841481E-7	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999997689325114	WITHOUT_CLASSIFICATION	2.3106748865841481E-7	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999998503165048	WITHOUT_CLASSIFICATION	1.4968349512017743E-7	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.9999940587366919	WITHOUT_CLASSIFICATION	5.941263308185114E-6	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.9999999934000593	WITHOUT_CLASSIFICATION	6.599940660489727E-9	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.9999998976786701	WITHOUT_CLASSIFICATION	1.0232132983986809E-7	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9999959183339908	WITHOUT_CLASSIFICATION	4.081666009191024E-6	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.9999996156712754	WITHOUT_CLASSIFICATION	3.8432872465019544E-7	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.9999987123607158	WITHOUT_CLASSIFICATION	1.287639284193188E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999907058253	WITHOUT_CLASSIFICATION	9.29417468880169E-9	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999960305710067	WITHOUT_CLASSIFICATION	3.969428993294826E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999061405099	WITHOUT_CLASSIFICATION	9.385949001551735E-8	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999988863427162	WITHOUT_CLASSIFICATION	1.1136572839216351E-6	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999980167299903	WITHOUT_CLASSIFICATION	1.9832700097010905E-6	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999984871070824	WITHOUT_CLASSIFICATION	1.512892917578818E-6	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.9999891420428542	WITHOUT_CLASSIFICATION	1.0857957145822754E-5	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999995745480023	WITHOUT_CLASSIFICATION	4.254519977892711E-7	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.9999996737018488	WITHOUT_CLASSIFICATION	3.262981511788537E-7	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9999078028558537	WITHOUT_CLASSIFICATION	9.219714414637073E-5	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.9999998511532157	WITHOUT_CLASSIFICATION	1.4884678442981882E-7	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.999946380723253	WITHOUT_CLASSIFICATION	5.361927674705027E-5	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.9999971886626702	WITHOUT_CLASSIFICATION	2.8113373298801886E-6	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.9999998647131864	WITHOUT_CLASSIFICATION	1.3528681359093018E-7	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.999384585713191	WITHOUT_CLASSIFICATION	6.154142868090088E-4	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999908953332	WITHOUT_CLASSIFICATION	9.10466687032921E-9	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999925957100254	WITHOUT_CLASSIFICATION	7.4042899745988445E-6	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9999948643904046	WITHOUT_CLASSIFICATION	5.135609595324693E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999996919680569	WITHOUT_CLASSIFICATION	3.08031943166248E-7	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.9999801487112182	WITHOUT_CLASSIFICATION	1.9851288781745902E-5	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.9999983684598901	WITHOUT_CLASSIFICATION	1.6315401100062536E-6	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999969016084833	WITHOUT_CLASSIFICATION	3.0983915166988767E-6	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9999960810445938	WITHOUT_CLASSIFICATION	3.918955406237243E-6	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.9999984470145674	WITHOUT_CLASSIFICATION	1.5529854325733677E-6	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999996953403908	WITHOUT_CLASSIFICATION	3.0465960920223085E-7	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.9999817493426948	WITHOUT_CLASSIFICATION	1.8250657305274425E-5	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.9999993412162621	WITHOUT_CLASSIFICATION	6.587837378197228E-7	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999997483616248	WITHOUT_CLASSIFICATION	2.516383752150611E-7	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.99999993608856	WITHOUT_CLASSIFICATION	6.391144005647418E-8	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999997483616248	WITHOUT_CLASSIFICATION	2.516383752150611E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993680984264	WITHOUT_CLASSIFICATION	6.319015736980701E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999257844764	WITHOUT_CLASSIFICATION	7.421552359327937E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991689843422	WITHOUT_CLASSIFICATION	8.310156578969226E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995578398421	WITHOUT_CLASSIFICATION	4.421601578695621E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997519625713	WITHOUT_CLASSIFICATION	2.4803742871834035E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995969922945	WITHOUT_CLASSIFICATION	4.030077055449964E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998957900357	WITHOUT_CLASSIFICATION	1.0420996433269402E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999061405099	WITHOUT_CLASSIFICATION	9.385949001551735E-8	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999992882200521	WITHOUT_CLASSIFICATION	7.117799479248851E-7	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999992882200521	WITHOUT_CLASSIFICATION	7.117799479248851E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999997740831288	WITHOUT_CLASSIFICATION	2.2591687122740464E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999997740831288	WITHOUT_CLASSIFICATION	2.2591687122740464E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999997740831288	WITHOUT_CLASSIFICATION	2.2591687122740464E-7	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999999127169322	WITHOUT_CLASSIFICATION	8.728306766457434E-8	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999999127169322	WITHOUT_CLASSIFICATION	8.728306766457434E-8	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999958281342339	WITHOUT_CLASSIFICATION	4.17186576615337E-6	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999958281342339	WITHOUT_CLASSIFICATION	4.17186576615337E-6	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.999996976754835	WITHOUT_CLASSIFICATION	3.0232451648739547E-6	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999954853495328	WITHOUT_CLASSIFICATION	4.514650467175317E-6	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999954853495328	WITHOUT_CLASSIFICATION	4.514650467175317E-6	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.999999795067028	WITHOUT_CLASSIFICATION	2.0493297213381975E-7	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999983085739043	WITHOUT_CLASSIFICATION	1.6914260958580936E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999983085739043	WITHOUT_CLASSIFICATION	1.6914260958580936E-6	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.999964864510303	WITHOUT_CLASSIFICATION	3.513548969703587E-5	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.999964864510303	WITHOUT_CLASSIFICATION	3.513548969703587E-5	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.999964864510303	WITHOUT_CLASSIFICATION	3.513548969703587E-5	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999988337964142	WITHOUT_CLASSIFICATION	1.1662035857869524E-6	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.9997563107975821	WITHOUT_CLASSIFICATION	2.4368920241785576E-4	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.9999967946911565	WITHOUT_CLASSIFICATION	3.205308843407445E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999715465335	WITHOUT_CLASSIFICATION	2.845346651706425E-8	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999715465335	WITHOUT_CLASSIFICATION	2.845346651706425E-8	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999991494024516	WITHOUT_CLASSIFICATION	8.505975484809864E-7	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999998503165048	WITHOUT_CLASSIFICATION	1.4968349512017743E-7	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999996919680569	WITHOUT_CLASSIFICATION	3.08031943166248E-7	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999996919680569	WITHOUT_CLASSIFICATION	3.08031943166248E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999257844764	WITHOUT_CLASSIFICATION	7.421552359327937E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999061405099	WITHOUT_CLASSIFICATION	9.385949001551735E-8	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999988337964142	WITHOUT_CLASSIFICATION	1.1662035857869524E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.9999988337964142	WITHOUT_CLASSIFICATION	1.1662035857869524E-6	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.9999940308120104	WITHOUT_CLASSIFICATION	5.969187989540462E-6	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.9999999752640366	WITHOUT_CLASSIFICATION	2.473596334162057E-8	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.9999999101032785	WITHOUT_CLASSIFICATION	8.989672142218724E-8	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.9999955623966069	WITHOUT_CLASSIFICATION	4.437603393049578E-6	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.999999833094085	WITHOUT_CLASSIFICATION	1.6690591502446364E-7	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999994982318606	WITHOUT_CLASSIFICATION	5.017681394267406E-7	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.9999832527281433	WITHOUT_CLASSIFICATION	1.674727185675225E-5	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999999951607088	WITHOUT_CLASSIFICATION	4.8392913036116275E-9	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.999999994792513	WITHOUT_CLASSIFICATION	5.207487025985707E-9	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.9999985785119102	WITHOUT_CLASSIFICATION	1.4214880898898271E-6	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.9999981777292505	WITHOUT_CLASSIFICATION	1.8222707495557944E-6	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.9999984791452319	WITHOUT_CLASSIFICATION	1.5208547680332907E-6	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999997466264346	WITHOUT_CLASSIFICATION	2.5337356536935296E-7	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.9999994492449646	WITHOUT_CLASSIFICATION	5.507550352423571E-7	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.999966208743772	WITHOUT_CLASSIFICATION	3.3791256227979354E-5	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999974293662284	WITHOUT_CLASSIFICATION	2.5706337717552343E-6	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.9999981780203429	WITHOUT_CLASSIFICATION	1.8219796571455885E-6	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.9998933928934344	WITHOUT_CLASSIFICATION	1.0660710656553506E-4	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.9998611331911229	WITHOUT_CLASSIFICATION	1.3886680887701232E-4	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.999999301251067	WITHOUT_CLASSIFICATION	6.987489329534867E-7	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.9999984712523547	WITHOUT_CLASSIFICATION	1.5287476451838953E-6	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.9998455115487389	WITHOUT_CLASSIFICATION	1.5448845126102954E-4	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999907058253	WITHOUT_CLASSIFICATION	9.29417468880169E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999907058253	WITHOUT_CLASSIFICATION	9.29417468880169E-9	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999754777563	WITHOUT_CLASSIFICATION	2.4522243632046444E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993680984264	WITHOUT_CLASSIFICATION	6.319015736980701E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995578398421	WITHOUT_CLASSIFICATION	4.421601578695621E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997519625713	WITHOUT_CLASSIFICATION	2.4803742871834035E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997519625713	WITHOUT_CLASSIFICATION	2.4803742871834035E-7	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9999821782703705	WITHOUT_CLASSIFICATION	1.7821729629492394E-5	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.9999972260366347	WITHOUT_CLASSIFICATION	2.773963365437703E-6	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.9999988837479888	WITHOUT_CLASSIFICATION	1.116252011203249E-6	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999989130420929	WITHOUT_CLASSIFICATION	1.0869579071425601E-6	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.9999993648148882	WITHOUT_CLASSIFICATION	6.351851119330616E-7	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.9999999976693722	WITHOUT_CLASSIFICATION	2.3306278072248978E-9	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.9999995669467725	WITHOUT_CLASSIFICATION	4.330532275613202E-7	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9999991545515725	WITHOUT_CLASSIFICATION	8.454484274319715E-7	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.9999557627819264	WITHOUT_CLASSIFICATION	4.423721807348991E-5	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.9999997039862151	WITHOUT_CLASSIFICATION	2.9601378484887204E-7	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.9999998748594768	WITHOUT_CLASSIFICATION	1.251405231875491E-7	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.9999997617895456	WITHOUT_CLASSIFICATION	2.3821045437622466E-7	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.9999997768534928	WITHOUT_CLASSIFICATION	2.2314650712401993E-7	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.9999997841169259	WITHOUT_CLASSIFICATION	2.158830741396001E-7	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.9999999107293316	WITHOUT_CLASSIFICATION	8.927066833692285E-8	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999958825367	WITHOUT_CLASSIFICATION	4.117463264141911E-9	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.9999988064382677	WITHOUT_CLASSIFICATION	1.1935617322531752E-6	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.9999995631778692	WITHOUT_CLASSIFICATION	4.3682213081200667E-7	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.9999995535217515	WITHOUT_CLASSIFICATION	4.4647824853243534E-7	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.9999995853058357	WITHOUT_CLASSIFICATION	4.146941643682858E-7	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.9999948935904124	WITHOUT_CLASSIFICATION	5.106409587586428E-6	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.9999977199322937	WITHOUT_CLASSIFICATION	2.2800677063076584E-6	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999958825367	WITHOUT_CLASSIFICATION	4.117463264141911E-9	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.9979558245235477	WITHOUT_CLASSIFICATION	0.0020441754764523186	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999995739353035	WITHOUT_CLASSIFICATION	4.260646964929347E-7	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999995747974811	WITHOUT_CLASSIFICATION	4.252025188852971E-7	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.9999056568017647	WITHOUT_CLASSIFICATION	9.434319823541605E-5	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.9999999782551883	WITHOUT_CLASSIFICATION	2.1744811781240828E-8	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.99999993608856	WITHOUT_CLASSIFICATION	6.391144005647418E-8	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999995739353035	WITHOUT_CLASSIFICATION	4.260646964929347E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998586776773289	WITHOUT_CLASSIFICATION	1.4132232267115776E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999099510189425	WITHOUT_CLASSIFICATION	9.004898105752781E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999937406959619	WITHOUT_CLASSIFICATION	6.259304038078816E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999937406959619	WITHOUT_CLASSIFICATION	6.259304038078816E-6	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.9999997402589833	WITHOUT_CLASSIFICATION	2.597410167602884E-7	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9998966449724199	WITHOUT_CLASSIFICATION	1.03355027580107E-4	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999997430960782	WITHOUT_CLASSIFICATION	2.569039217865089E-7	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9998193164205942	WITHOUT_CLASSIFICATION	1.8068357940577605E-4	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.9999988908462861	WITHOUT_CLASSIFICATION	1.1091537138693961E-6	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9999997050969704	WITHOUT_CLASSIFICATION	2.949030295914802E-7	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999961756707222	WITHOUT_CLASSIFICATION	3.824329277704007E-6	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999961756707222	WITHOUT_CLASSIFICATION	3.824329277704007E-6	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.9999988385387579	WITHOUT_CLASSIFICATION	1.1614612420063534E-6	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999993747447258	WITHOUT_CLASSIFICATION	6.252552741904535E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998586776773289	WITHOUT_CLASSIFICATION	1.4132232267115776E-4	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998586776773289	WITHOUT_CLASSIFICATION	1.4132232267115776E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999099510189425	WITHOUT_CLASSIFICATION	9.004898105752781E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999937406959619	WITHOUT_CLASSIFICATION	6.259304038078816E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999937406959619	WITHOUT_CLASSIFICATION	6.259304038078816E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999997430960782	WITHOUT_CLASSIFICATION	2.569039217865089E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999997430960782	WITHOUT_CLASSIFICATION	2.569039217865089E-7	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.9999999864075925	WITHOUT_CLASSIFICATION	1.3592407684321693E-8	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9995601752646943	WITHOUT_CLASSIFICATION	4.398247353056344E-4	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.999997364838295	WITHOUT_CLASSIFICATION	2.6351617048467977E-6	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999991443779089	WITHOUT_CLASSIFICATION	8.556220910208438E-7	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999991443779089	WITHOUT_CLASSIFICATION	8.556220910208438E-7	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9999940759333651	WITHOUT_CLASSIFICATION	5.92406663491578E-6	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.999997675394214	WITHOUT_CLASSIFICATION	2.3246057859046806E-6	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.9999976819386116	WITHOUT_CLASSIFICATION	2.3180613883491504E-6	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.9999954024965642	WITHOUT_CLASSIFICATION	4.597503435871513E-6	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9997595473912956	WITHOUT_CLASSIFICATION	2.4045260870443107E-4	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.9999996871767937	WITHOUT_CLASSIFICATION	3.128232062846761E-7	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999996041010836	WITHOUT_CLASSIFICATION	3.958989164387604E-7	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999995753699399	WITHOUT_CLASSIFICATION	4.246300600846584E-7	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999980580031151	WITHOUT_CLASSIFICATION	1.9419968847559573E-6	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999462997787202	WITHOUT_CLASSIFICATION	5.370022127976415E-5	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999462997787202	WITHOUT_CLASSIFICATION	5.370022127976415E-5	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9999323352672883	WITHOUT_CLASSIFICATION	6.766473271167795E-5	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999999625642083	WITHOUT_CLASSIFICATION	3.74357917189341E-8	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999998418651812	WITHOUT_CLASSIFICATION	1.5813481874112038E-7	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.9999999989510758	WITHOUT_CLASSIFICATION	1.048924073266973E-9	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999985877144567	WITHOUT_CLASSIFICATION	1.412285543302195E-6	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999981929732377	WITHOUT_CLASSIFICATION	1.8070267624201465E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998586776773289	WITHOUT_CLASSIFICATION	1.4132232267115776E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999099510189425	WITHOUT_CLASSIFICATION	9.004898105752781E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999099510189425	WITHOUT_CLASSIFICATION	9.004898105752781E-5	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.9999986254378797	WITHOUT_CLASSIFICATION	1.3745621203573003E-6	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9997666690759447	WITHOUT_CLASSIFICATION	2.3333092405529484E-4	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999990706140863	WITHOUT_CLASSIFICATION	9.293859137152088E-7	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998762911526053	WITHOUT_CLASSIFICATION	1.2370884739454902E-4	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998762911526053	WITHOUT_CLASSIFICATION	1.2370884739454902E-4	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999990056205517	WITHOUT_CLASSIFICATION	9.94379448301055E-7	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.9996556549817015	WITHOUT_CLASSIFICATION	3.4434501829842026E-4	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.9999788702119773	WITHOUT_CLASSIFICATION	2.11297880226739E-5	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.9999986796195672	WITHOUT_CLASSIFICATION	1.3203804327552705E-6	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.9999999444581475	WITHOUT_CLASSIFICATION	5.554185246495973E-8	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.9998832515761782	WITHOUT_CLASSIFICATION	1.167484238218713E-4	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.9996784376180612	WITHOUT_CLASSIFICATION	3.21562381938788E-4	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.9999999485792903	WITHOUT_CLASSIFICATION	5.14207095960022E-8	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.9999998994416962	WITHOUT_CLASSIFICATION	1.0055830377804313E-7	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.9999999097554526	WITHOUT_CLASSIFICATION	9.024454729118617E-8	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9999750575055802	WITHOUT_CLASSIFICATION	2.4942494419665327E-5	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.9999999512220749	WITHOUT_CLASSIFICATION	4.8777925059095816E-8	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9999994041235059	WITHOUT_CLASSIFICATION	5.958764941658976E-7	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.999993601733182	WITHOUT_CLASSIFICATION	6.398266817941445E-6	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.9999999609996387	WITHOUT_CLASSIFICATION	3.90003612979089E-8	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999999688235093	WITHOUT_CLASSIFICATION	3.117649072040094E-8	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.9997561107790104	WITHOUT_CLASSIFICATION	2.4388922098968638E-4	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.9999976552466114	WITHOUT_CLASSIFICATION	2.344753388431583E-6	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.9999856760779602	WITHOUT_CLASSIFICATION	1.4323922039824008E-5	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.9999851931501295	WITHOUT_CLASSIFICATION	1.4806849870607205E-5	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.9998724125611459	WITHOUT_CLASSIFICATION	1.2758743885407105E-4	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.999971860848592	WITHOUT_CLASSIFICATION	2.813915140790011E-5	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999999956246975	WITHOUT_CLASSIFICATION	4.375302428056854E-9	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999995088636168	WITHOUT_CLASSIFICATION	4.911363832481057E-7	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.9999995088636168	WITHOUT_CLASSIFICATION	4.911363832481057E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999995921199845	WITHOUT_CLASSIFICATION	4.0788001552249987E-7	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999998371840795	WITHOUT_CLASSIFICATION	1.6281592047814856E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999995921199845	WITHOUT_CLASSIFICATION	4.0788001552249987E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999995921199845	WITHOUT_CLASSIFICATION	4.0788001552249987E-7	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999925957100254	WITHOUT_CLASSIFICATION	7.4042899745988445E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998586776773289	WITHOUT_CLASSIFICATION	1.4132232267115776E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999099510189425	WITHOUT_CLASSIFICATION	9.004898105752781E-5	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999099510189425	WITHOUT_CLASSIFICATION	9.004898105752781E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999937406959619	WITHOUT_CLASSIFICATION	6.259304038078816E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999937406959619	WITHOUT_CLASSIFICATION	6.259304038078816E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999997430960782	WITHOUT_CLASSIFICATION	2.569039217865089E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999997430960782	WITHOUT_CLASSIFICATION	2.569039217865089E-7	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999996041010836	WITHOUT_CLASSIFICATION	3.958989164387604E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999457347805	WITHOUT_CLASSIFICATION	5.426521957280358E-8	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.9995151799942029	WITHOUT_CLASSIFICATION	4.8482000579709003E-4	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.999999700634345	WITHOUT_CLASSIFICATION	2.993656549462124E-7	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9986169795504944	WITHOUT_CLASSIFICATION	0.001383020449505538	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9999901412545421	WITHOUT_CLASSIFICATION	9.858745457837841E-6	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.9050990638560856	DEFECT	0.09490093614391437	WITHOUT_CLASSIFICATION
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999284439386966	WITHOUT_CLASSIFICATION	7.155606130346554E-5	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9999992985144239	WITHOUT_CLASSIFICATION	7.014855761069994E-7	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.9999980184287678	WITHOUT_CLASSIFICATION	1.9815712322254396E-6	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.9999998651368812	WITHOUT_CLASSIFICATION	1.3486311882715135E-7	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999381280193375	WITHOUT_CLASSIFICATION	6.187198066253065E-5	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.9986170111929386	WITHOUT_CLASSIFICATION	0.0013829888070614217	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.9999999562428544	WITHOUT_CLASSIFICATION	4.375714571159838E-8	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.9999999688235093	WITHOUT_CLASSIFICATION	3.117649072040094E-8	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999541277582401	WITHOUT_CLASSIFICATION	4.587224175991703E-5	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999991254345928	WITHOUT_CLASSIFICATION	8.745654073343664E-7	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999842077909161	WITHOUT_CLASSIFICATION	1.5792209083830206E-5	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.9993593701792615	WITHOUT_CLASSIFICATION	6.406298207384909E-4	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999457347805	WITHOUT_CLASSIFICATION	5.426521957280358E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999457347805	WITHOUT_CLASSIFICATION	5.426521957280358E-8	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9997746726566347	WITHOUT_CLASSIFICATION	2.2532734336533735E-4	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999925957100254	WITHOUT_CLASSIFICATION	7.4042899745988445E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9990427679780346	WITHOUT_CLASSIFICATION	9.572320219654161E-4	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9998586776773289	WITHOUT_CLASSIFICATION	1.4132232267115776E-4	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999099510189425	WITHOUT_CLASSIFICATION	9.004898105752781E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999099510189425	WITHOUT_CLASSIFICATION	9.004898105752781E-5	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999099510189425	WITHOUT_CLASSIFICATION	9.004898105752781E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999937406959619	WITHOUT_CLASSIFICATION	6.259304038078816E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999937406959619	WITHOUT_CLASSIFICATION	6.259304038078816E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999937406959619	WITHOUT_CLASSIFICATION	6.259304038078816E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999937406959619	WITHOUT_CLASSIFICATION	6.259304038078816E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999937406959619	WITHOUT_CLASSIFICATION	6.259304038078816E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999997430960782	WITHOUT_CLASSIFICATION	2.569039217865089E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999997430960782	WITHOUT_CLASSIFICATION	2.569039217865089E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999997430960782	WITHOUT_CLASSIFICATION	2.569039217865089E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999997430960782	WITHOUT_CLASSIFICATION	2.569039217865089E-7	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9998193164205942	WITHOUT_CLASSIFICATION	1.8068357940577605E-4	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999457347805	WITHOUT_CLASSIFICATION	5.426521957280358E-8	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.9999990816151394	WITHOUT_CLASSIFICATION	9.183848605834167E-7	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9998469794320769	WITHOUT_CLASSIFICATION	1.530205679230532E-4	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999974201685737	WITHOUT_CLASSIFICATION	2.579831426267484E-6	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999974201685737	WITHOUT_CLASSIFICATION	2.579831426267484E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.999998728209864	WITHOUT_CLASSIFICATION	1.2717901360152543E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.999998728209864	WITHOUT_CLASSIFICATION	1.2717901360152543E-6	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.999998728209864	WITHOUT_CLASSIFICATION	1.2717901360152543E-6	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9994710936698378	WITHOUT_CLASSIFICATION	5.28906330162226E-4	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.9999999998536153	WITHOUT_CLASSIFICATION	1.463846082460288E-10	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.9999980353216297	WITHOUT_CLASSIFICATION	1.9646783703777162E-6	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999687158255356	WITHOUT_CLASSIFICATION	3.128417446446977E-5	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999416568636945	WITHOUT_CLASSIFICATION	5.834313630555915E-5	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.9999999526422269	WITHOUT_CLASSIFICATION	4.7357773064508755E-8	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.9999987462784848	WITHOUT_CLASSIFICATION	1.2537215152425718E-6	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.9999991340669699	WITHOUT_CLASSIFICATION	8.659330300530016E-7	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.9999776517072196	WITHOUT_CLASSIFICATION	2.234829278027437E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999754777563	WITHOUT_CLASSIFICATION	2.4522243632046444E-8	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999908953332	WITHOUT_CLASSIFICATION	9.10466687032921E-9	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999925957100254	WITHOUT_CLASSIFICATION	7.4042899745988445E-6	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999541277582401	WITHOUT_CLASSIFICATION	4.587224175991703E-5	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999842077909161	WITHOUT_CLASSIFICATION	1.5792209083830206E-5	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999854359157109	WITHOUT_CLASSIFICATION	1.4564084289051184E-5	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.9997909941288969	WITHOUT_CLASSIFICATION	2.0900587110306371E-4	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999944759987	WITHOUT_CLASSIFICATION	5.524001216375031E-9	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999944759987	WITHOUT_CLASSIFICATION	5.524001216375031E-9	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999854359157109	WITHOUT_CLASSIFICATION	1.4564084289051184E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999862384915	WITHOUT_CLASSIFICATION	1.37615084830802E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999457347805	WITHOUT_CLASSIFICATION	5.426521957280358E-8	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999998960470062	WITHOUT_CLASSIFICATION	1.0395299381781324E-7	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999998845019041	WITHOUT_CLASSIFICATION	1.1549809589591766E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999457347805	WITHOUT_CLASSIFICATION	5.426521957280358E-8	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9999993636375338	WITHOUT_CLASSIFICATION	6.363624661866567E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999998650160296	WITHOUT_CLASSIFICATION	1.349839703809416E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999457347805	WITHOUT_CLASSIFICATION	5.426521957280358E-8	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.9999650968585013	WITHOUT_CLASSIFICATION	3.4903141498638254E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999457347805	WITHOUT_CLASSIFICATION	5.426521957280358E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999457347805	WITHOUT_CLASSIFICATION	5.426521957280358E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999457347805	WITHOUT_CLASSIFICATION	5.426521957280358E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999632593221	WITHOUT_CLASSIFICATION	3.674067788845873E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999632593221	WITHOUT_CLASSIFICATION	3.674067788845873E-8	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.999999334729983	WITHOUT_CLASSIFICATION	6.652700168958092E-7	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999993870000581	WITHOUT_CLASSIFICATION	6.129999418471451E-7	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999954908218324	WITHOUT_CLASSIFICATION	4.509178167674832E-6	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9997746726566347	WITHOUT_CLASSIFICATION	2.2532734336533735E-4	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999754777563	WITHOUT_CLASSIFICATION	2.4522243632046444E-8	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999937406959619	WITHOUT_CLASSIFICATION	6.259304038078816E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9998193164205942	WITHOUT_CLASSIFICATION	1.8068357940577605E-4	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999961756707222	WITHOUT_CLASSIFICATION	3.824329277704007E-6	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999991254345928	WITHOUT_CLASSIFICATION	8.745654073343664E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999862384915	WITHOUT_CLASSIFICATION	1.37615084830802E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999862384915	WITHOUT_CLASSIFICATION	1.37615084830802E-8	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999854359157109	WITHOUT_CLASSIFICATION	1.4564084289051184E-5	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999998845019041	WITHOUT_CLASSIFICATION	1.1549809589591766E-7	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999998960470062	WITHOUT_CLASSIFICATION	1.0395299381781324E-7	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999998960470062	WITHOUT_CLASSIFICATION	1.0395299381781324E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999998650160296	WITHOUT_CLASSIFICATION	1.349839703809416E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999998650160296	WITHOUT_CLASSIFICATION	1.349839703809416E-7	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999991449165183	WITHOUT_CLASSIFICATION	8.550834817796561E-7	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.9999425171851648	WITHOUT_CLASSIFICATION	5.7482814835221035E-5	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9999997047676915	WITHOUT_CLASSIFICATION	2.952323085103695E-7	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.9999807751863314	WITHOUT_CLASSIFICATION	1.922481366849248E-5	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.999690202693894	WITHOUT_CLASSIFICATION	3.0979730610596545E-4	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999585338077166	WITHOUT_CLASSIFICATION	4.146619228346066E-5	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9999402417934891	WITHOUT_CLASSIFICATION	5.9758206511091755E-5	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999976497849316	WITHOUT_CLASSIFICATION	2.3502150684553594E-6	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999976497849316	WITHOUT_CLASSIFICATION	2.3502150684553594E-6	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.9999928784571545	WITHOUT_CLASSIFICATION	7.121542845558356E-6	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.9996989075657009	WITHOUT_CLASSIFICATION	3.0109243429912995E-4	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.9999991845214388	WITHOUT_CLASSIFICATION	8.154785612038942E-7	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.9999995156807994	WITHOUT_CLASSIFICATION	4.843192007369281E-7	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999996619828775	WITHOUT_CLASSIFICATION	3.380171225219277E-7	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999791206742	WITHOUT_CLASSIFICATION	2.087932580739395E-8	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.999999992134339	WITHOUT_CLASSIFICATION	7.86566100706996E-9	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9762376935146803	WITHOUT_CLASSIFICATION	0.02376230648531986	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999993313839066	WITHOUT_CLASSIFICATION	6.686160933444983E-7	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.999996871631831	WITHOUT_CLASSIFICATION	3.1283681689768277E-6	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999900362799855	WITHOUT_CLASSIFICATION	9.963720014542172E-6	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999890480448	WITHOUT_CLASSIFICATION	1.0951955209080145E-8	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999890480448	WITHOUT_CLASSIFICATION	1.0951955209080145E-8	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999999330483861	WITHOUT_CLASSIFICATION	6.695161397351952E-8	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999993747447258	WITHOUT_CLASSIFICATION	6.252552741904535E-7	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999908953332	WITHOUT_CLASSIFICATION	9.10466687032921E-9	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999862384915	WITHOUT_CLASSIFICATION	1.37615084830802E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999862384915	WITHOUT_CLASSIFICATION	1.37615084830802E-8	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999997656711157	WITHOUT_CLASSIFICATION	2.3432888421498573E-7	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999966718599137	WITHOUT_CLASSIFICATION	3.3281400862934367E-6	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999966718599137	WITHOUT_CLASSIFICATION	3.3281400862934367E-6	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.9999287978932567	WITHOUT_CLASSIFICATION	7.120210674321503E-5	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.9999998909175131	WITHOUT_CLASSIFICATION	1.0908248701546608E-7	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.9999994573530369	WITHOUT_CLASSIFICATION	5.426469631096969E-7	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9999996455953867	WITHOUT_CLASSIFICATION	3.5440461333536025E-7	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.9999999729831117	WITHOUT_CLASSIFICATION	2.7016888213726E-8	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999797740775714	WITHOUT_CLASSIFICATION	2.0225922428519375E-5	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.9999797740775714	WITHOUT_CLASSIFICATION	2.0225922428519375E-5	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999998920911163	WITHOUT_CLASSIFICATION	1.0790888369378392E-7	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.999995398282412	WITHOUT_CLASSIFICATION	4.601717587920449E-6	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.9999999518656613	WITHOUT_CLASSIFICATION	4.813433882565816E-8	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.9999995251832462	WITHOUT_CLASSIFICATION	4.748167538706359E-7	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.9999998762267439	WITHOUT_CLASSIFICATION	1.2377325607708747E-7	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.9999998710481495	WITHOUT_CLASSIFICATION	1.2895185061126192E-7	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.9999977310637375	WITHOUT_CLASSIFICATION	2.2689362624575782E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999998848103681	WITHOUT_CLASSIFICATION	1.1518963186912054E-7	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9998918717052288	WITHOUT_CLASSIFICATION	1.0812829477116476E-4	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999999736534363	WITHOUT_CLASSIFICATION	2.634656372229653E-8	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999999756274277	WITHOUT_CLASSIFICATION	2.4372572355387306E-8	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999997656711157	WITHOUT_CLASSIFICATION	2.3432888421498573E-7	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.9999986083564775	WITHOUT_CLASSIFICATION	1.3916435225123963E-6	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.9999895769540061	WITHOUT_CLASSIFICATION	1.0423045993900828E-5	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.9999804857510293	WITHOUT_CLASSIFICATION	1.9514248970619972E-5	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.9999995536026234	WITHOUT_CLASSIFICATION	4.4639737652151023E-7	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.9999969842809113	WITHOUT_CLASSIFICATION	3.01571908868725E-6	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999997930176328	WITHOUT_CLASSIFICATION	2.0698236712976526E-7	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999999973282334	WITHOUT_CLASSIFICATION	2.6717665941601954E-9	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9999316807913362	WITHOUT_CLASSIFICATION	6.831920866373182E-5	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.9999452312023615	WITHOUT_CLASSIFICATION	5.476879763855595E-5	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.9999850118120017	WITHOUT_CLASSIFICATION	1.4988187998181826E-5	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.9999570939973327	WITHOUT_CLASSIFICATION	4.290600266732842E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999832682086401	WITHOUT_CLASSIFICATION	1.6731791359937916E-5	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999999132955408	WITHOUT_CLASSIFICATION	8.670445914887801E-8	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.9999771962030718	WITHOUT_CLASSIFICATION	2.280379692821296E-5	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.9999983059682772	WITHOUT_CLASSIFICATION	1.69403172270538E-6	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.9999693146002417	WITHOUT_CLASSIFICATION	3.068539975831513E-5	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.9999991007922714	WITHOUT_CLASSIFICATION	8.992077287418404E-7	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.9999967985406225	WITHOUT_CLASSIFICATION	3.2014593775089725E-6	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.9999999128584013	WITHOUT_CLASSIFICATION	8.714159876819911E-8	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.9999945969712523	WITHOUT_CLASSIFICATION	5.403028747759256E-6	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.9999921778545147	WITHOUT_CLASSIFICATION	7.82214548529791E-6	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.9999891216714468	WITHOUT_CLASSIFICATION	1.0878328553144087E-5	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999879317550318	WITHOUT_CLASSIFICATION	1.206824496819344E-5	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.9999986280260138	WITHOUT_CLASSIFICATION	1.3719739862408786E-6	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999998704699573	WITHOUT_CLASSIFICATION	1.2953004263815009E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.999999363173318	WITHOUT_CLASSIFICATION	6.368266820079853E-7	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.9999874384787548	WITHOUT_CLASSIFICATION	1.2561521245067827E-5	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999755244329437	WITHOUT_CLASSIFICATION	2.4475567056377808E-5	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999896745374541	WITHOUT_CLASSIFICATION	1.0325462545853036E-5	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.9999879317550318	WITHOUT_CLASSIFICATION	1.206824496819344E-5	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999998704699573	WITHOUT_CLASSIFICATION	1.2953004263815009E-7	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999998704699573	WITHOUT_CLASSIFICATION	1.2953004263815009E-7	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.999999363173318	WITHOUT_CLASSIFICATION	6.368266820079853E-7	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.9999999817600261	WITHOUT_CLASSIFICATION	1.8239973928343476E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999332142994	WITHOUT_CLASSIFICATION	6.678570068545285E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999332142994	WITHOUT_CLASSIFICATION	6.678570068545285E-8	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9999979375346605	WITHOUT_CLASSIFICATION	2.0624653395109166E-6	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999859500267139	WITHOUT_CLASSIFICATION	1.4049973286030172E-5	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999859500267139	WITHOUT_CLASSIFICATION	1.4049973286030172E-5	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999993676336474	WITHOUT_CLASSIFICATION	6.323663526945936E-7	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.9999997919357294	WITHOUT_CLASSIFICATION	2.0806427060538448E-7	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999117895583	WITHOUT_CLASSIFICATION	8.82104417804436E-8	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999117895583	WITHOUT_CLASSIFICATION	8.82104417804436E-8	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999975726933612	WITHOUT_CLASSIFICATION	2.4273066388219216E-6	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.999999658991659	WITHOUT_CLASSIFICATION	3.410083410190753E-7	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999997017595438	WITHOUT_CLASSIFICATION	2.9824045619840827E-7	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999987962582346	WITHOUT_CLASSIFICATION	1.2037417653813537E-6	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.9999961872792497	WITHOUT_CLASSIFICATION	3.812720750388371E-6	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.9999824580927108	WITHOUT_CLASSIFICATION	1.7541907289205232E-5	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.9999960148627457	WITHOUT_CLASSIFICATION	3.985137254394863E-6	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.9999947283581311	WITHOUT_CLASSIFICATION	5.271641869023587E-6	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.9999654474438513	WITHOUT_CLASSIFICATION	3.455255614859718E-5	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.9999994844018418	WITHOUT_CLASSIFICATION	5.155981581547543E-7	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.9999633974904341	WITHOUT_CLASSIFICATION	3.660250956583033E-5	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9999717384955256	WITHOUT_CLASSIFICATION	2.826150447446241E-5	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.9999495879337479	WITHOUT_CLASSIFICATION	5.0412066252169045E-5	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.9999824737301383	WITHOUT_CLASSIFICATION	1.7526269861742495E-5	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999982785928556	WITHOUT_CLASSIFICATION	1.7214071443661817E-6	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.9999889933155313	WITHOUT_CLASSIFICATION	1.1006684468679197E-5	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.9999987730828404	WITHOUT_CLASSIFICATION	1.2269171596187236E-6	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999981652933252	WITHOUT_CLASSIFICATION	1.8347066748277795E-6	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999989272871862	WITHOUT_CLASSIFICATION	1.072712813787301E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999819101367011	WITHOUT_CLASSIFICATION	1.8089863298949193E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999832682086401	WITHOUT_CLASSIFICATION	1.6731791359937916E-5	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.9999777265916482	WITHOUT_CLASSIFICATION	2.2273408351733058E-5	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999995257640559	WITHOUT_CLASSIFICATION	4.742359440335012E-7	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999999368878779	WITHOUT_CLASSIFICATION	6.311212215377682E-8	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.9999953211778814	WITHOUT_CLASSIFICATION	4.678822118693512E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.999996855636902	WITHOUT_CLASSIFICATION	3.1443630980674476E-6	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.9999997210773596	WITHOUT_CLASSIFICATION	2.7892264041930593E-7	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.9999999521390657	WITHOUT_CLASSIFICATION	4.786093446229038E-8	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.9999998039479262	WITHOUT_CLASSIFICATION	1.9605207380655222E-7	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999998895414418	WITHOUT_CLASSIFICATION	1.1045855812987186E-7	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.9999846403251286	WITHOUT_CLASSIFICATION	1.5359674871411403E-5	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.9999996809657212	WITHOUT_CLASSIFICATION	3.1903427880397294E-7	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.9999960119738422	WITHOUT_CLASSIFICATION	3.988026157851512E-6	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.9999935262410494	WITHOUT_CLASSIFICATION	6.473758950554047E-6	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.9999816902317084	WITHOUT_CLASSIFICATION	1.830976829167118E-5	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.9999999945990274	WITHOUT_CLASSIFICATION	5.400972520241184E-9	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.9999997920783165	WITHOUT_CLASSIFICATION	2.079216834539493E-7	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.9999498017771775	WITHOUT_CLASSIFICATION	5.019822282257501E-5	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.9999985767781516	WITHOUT_CLASSIFICATION	1.423221848399504E-6	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.9999992475992628	WITHOUT_CLASSIFICATION	7.524007372320367E-7	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.9999960000310304	WITHOUT_CLASSIFICATION	3.999968969669489E-6	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.9999995813960848	WITHOUT_CLASSIFICATION	4.186039152430354E-7	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.9999997611919077	WITHOUT_CLASSIFICATION	2.388080923463081E-7	DEFECT
// title	WITHOUT_CLASSIFICATION	0.9999972638122677	WITHOUT_CLASSIFICATION	2.736187732306303E-6	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.9999988506473942	WITHOUT_CLASSIFICATION	1.1493526057821552E-6	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9999949693767914	WITHOUT_CLASSIFICATION	5.030623208545576E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999980834372789	WITHOUT_CLASSIFICATION	1.9165627211144187E-6	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999990814157783	WITHOUT_CLASSIFICATION	9.185842216705421E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999990723603799	WITHOUT_CLASSIFICATION	9.276396200659123E-7	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.9999998797561664	WITHOUT_CLASSIFICATION	1.2024383345136618E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999999736534363	WITHOUT_CLASSIFICATION	2.634656372229653E-8	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999999736534363	WITHOUT_CLASSIFICATION	2.634656372229653E-8	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999967562115584	WITHOUT_CLASSIFICATION	3.2437884416870226E-6	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.999999999904519	WITHOUT_CLASSIFICATION	9.548086695662819E-11	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999999839964426	WITHOUT_CLASSIFICATION	1.6003557409922889E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999999839964426	WITHOUT_CLASSIFICATION	1.6003557409922889E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999999839964426	WITHOUT_CLASSIFICATION	1.6003557409922889E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999999839964426	WITHOUT_CLASSIFICATION	1.6003557409922889E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999999839964426	WITHOUT_CLASSIFICATION	1.6003557409922889E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999999839964426	WITHOUT_CLASSIFICATION	1.6003557409922889E-7	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999747970443	WITHOUT_CLASSIFICATION	2.520295571485198E-8	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999996830170336	WITHOUT_CLASSIFICATION	3.169829664930631E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999988979811871	WITHOUT_CLASSIFICATION	1.1020188129033315E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999466719286	WITHOUT_CLASSIFICATION	5.3328071413250215E-8	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999996227108178	WITHOUT_CLASSIFICATION	3.772891821786246E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999996109665141	WITHOUT_CLASSIFICATION	3.8903348588788384E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999986664881416	WITHOUT_CLASSIFICATION	1.3335118582796878E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999466719286	WITHOUT_CLASSIFICATION	5.3328071413250215E-8	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.9999982193345329	WITHOUT_CLASSIFICATION	1.7806654671508423E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999466719286	WITHOUT_CLASSIFICATION	5.3328071413250215E-8	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999466719286	WITHOUT_CLASSIFICATION	5.3328071413250215E-8	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999466719286	WITHOUT_CLASSIFICATION	5.3328071413250215E-8	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999999058858091	WITHOUT_CLASSIFICATION	9.41141908843453E-8	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999992779396808	WITHOUT_CLASSIFICATION	7.220603191567629E-7	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999558015689703	WITHOUT_CLASSIFICATION	4.419843102961222E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999558015689703	WITHOUT_CLASSIFICATION	4.419843102961222E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999992779396808	WITHOUT_CLASSIFICATION	7.220603191567629E-7	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999992779396808	WITHOUT_CLASSIFICATION	7.220603191567629E-7	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999992779396808	WITHOUT_CLASSIFICATION	7.220603191567629E-7	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999992779396808	WITHOUT_CLASSIFICATION	7.220603191567629E-7	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.9999992779396808	WITHOUT_CLASSIFICATION	7.220603191567629E-7	DEFECT
// data	WITHOUT_CLASSIFICATION	0.999992059865026	WITHOUT_CLASSIFICATION	7.940134973943758E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.999992059865026	WITHOUT_CLASSIFICATION	7.940134973943758E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.999992059865026	WITHOUT_CLASSIFICATION	7.940134973943758E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.999992059865026	WITHOUT_CLASSIFICATION	7.940134973943758E-6	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.9999094906254806	WITHOUT_CLASSIFICATION	9.050937451939173E-5	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.9999998013633222	WITHOUT_CLASSIFICATION	1.986366777049622E-7	DEFECT
// name	WITHOUT_CLASSIFICATION	0.9999988770588417	WITHOUT_CLASSIFICATION	1.1229411583078337E-6	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.999995624962839	WITHOUT_CLASSIFICATION	4.375037160913041E-6	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.9999957667019106	WITHOUT_CLASSIFICATION	4.233298089345566E-6	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.9999898306193804	WITHOUT_CLASSIFICATION	1.0169380619553762E-5	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.9999983054840322	WITHOUT_CLASSIFICATION	1.6945159678752045E-6	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.9999986757662197	WITHOUT_CLASSIFICATION	1.3242337802130827E-6	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999906111686226	WITHOUT_CLASSIFICATION	9.388831377294567E-6	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999905111738556	WITHOUT_CLASSIFICATION	9.488826144358174E-6	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.9999949476456371	WITHOUT_CLASSIFICATION	5.052354362880965E-6	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.9999956354142169	WITHOUT_CLASSIFICATION	4.364585783084629E-6	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999988474761063	WITHOUT_CLASSIFICATION	1.1525238935866664E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.999999839964426	WITHOUT_CLASSIFICATION	1.6003557409922889E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999934146118916	WITHOUT_CLASSIFICATION	6.585388108454514E-6	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.9999986130575816	WITHOUT_CLASSIFICATION	1.386942418457405E-6	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.9999994057929769	WITHOUT_CLASSIFICATION	5.942070230727398E-7	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.9999871634261807	WITHOUT_CLASSIFICATION	1.2836573819358197E-5	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.9999839871743345	WITHOUT_CLASSIFICATION	1.601282566551538E-5	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.9999955191642484	WITHOUT_CLASSIFICATION	4.480835751446858E-6	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.9999772813863442	WITHOUT_CLASSIFICATION	2.2718613655819988E-5	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.9999984986153592	WITHOUT_CLASSIFICATION	1.501384640786367E-6	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.9999713062686253	WITHOUT_CLASSIFICATION	2.8693731374720197E-5	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9999576774064483	WITHOUT_CLASSIFICATION	4.232259355166513E-5	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.9998957317193491	WITHOUT_CLASSIFICATION	1.0426828065086842E-4	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999998486168781	WITHOUT_CLASSIFICATION	1.5138312193328683E-7	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999999894360547	WITHOUT_CLASSIFICATION	1.0563945212146324E-8	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999999894360547	WITHOUT_CLASSIFICATION	1.0563945212146324E-8	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.999999984601093	WITHOUT_CLASSIFICATION	1.5398907006337214E-8	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999998394282879	WITHOUT_CLASSIFICATION	1.6057171211021133E-7	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.9999998394282879	WITHOUT_CLASSIFICATION	1.6057171211021133E-7	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999998768431339	WITHOUT_CLASSIFICATION	1.2315686606198122E-7	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.999998878115937	WITHOUT_CLASSIFICATION	1.121884062944085E-6	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.999998878115937	WITHOUT_CLASSIFICATION	1.121884062944085E-6	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999998344514434	WITHOUT_CLASSIFICATION	1.6554855658816623E-7	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999998344514434	WITHOUT_CLASSIFICATION	1.6554855658816623E-7	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999999517463601	WITHOUT_CLASSIFICATION	4.825363997114466E-8	DEFECT
// text	WITHOUT_CLASSIFICATION	0.999987381875013	WITHOUT_CLASSIFICATION	1.2618124986948568E-5	DEFECT
// text	WITHOUT_CLASSIFICATION	0.999987381875013	WITHOUT_CLASSIFICATION	1.2618124986948568E-5	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999869071380552	WITHOUT_CLASSIFICATION	1.3092861944773512E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999841354311112	WITHOUT_CLASSIFICATION	1.5864568888822483E-5	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999919875855979	WITHOUT_CLASSIFICATION	8.012414401980864E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999992329460841	WITHOUT_CLASSIFICATION	7.670539159183566E-7	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999992329460841	WITHOUT_CLASSIFICATION	7.670539159183566E-7	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.9999972127355525	WITHOUT_CLASSIFICATION	2.7872644474845366E-6	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.9999970995040759	WITHOUT_CLASSIFICATION	2.9004959241456893E-6	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999986452138947	WITHOUT_CLASSIFICATION	1.3547861053660716E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999954102733694	WITHOUT_CLASSIFICATION	4.58972663065554E-6	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.9999956448991775	WITHOUT_CLASSIFICATION	4.355100822580375E-6	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.9999946418654343	WITHOUT_CLASSIFICATION	5.35813456575605E-6	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.9999988857869988	WITHOUT_CLASSIFICATION	1.1142130012443206E-6	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.999998556104831	WITHOUT_CLASSIFICATION	1.4438951689948725E-6	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.9999984074612636	WITHOUT_CLASSIFICATION	1.5925387363749858E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999973197831116	WITHOUT_CLASSIFICATION	2.680216888361694E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999996830170336	WITHOUT_CLASSIFICATION	3.169829664930631E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999973197831116	WITHOUT_CLASSIFICATION	2.680216888361694E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
// category	WITHOUT_CLASSIFICATION	0.9999986818198449	WITHOUT_CLASSIFICATION	1.3181801551235072E-6	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.9999991883086498	WITHOUT_CLASSIFICATION	8.116913502825309E-7	DEFECT
// value	WITHOUT_CLASSIFICATION	0.9999991603956871	WITHOUT_CLASSIFICATION	8.396043127908218E-7	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.9999930366123094	WITHOUT_CLASSIFICATION	6.963387690607739E-6	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.9999953021937625	WITHOUT_CLASSIFICATION	4.697806237491095E-6	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.9999978173412651	WITHOUT_CLASSIFICATION	2.1826587348505396E-6	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.9999993301952584	WITHOUT_CLASSIFICATION	6.69804741516591E-7	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999994398621357	WITHOUT_CLASSIFICATION	5.60137864328269E-7	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.9999990352163199	WITHOUT_CLASSIFICATION	9.647836800243013E-7	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999994233013006	WITHOUT_CLASSIFICATION	5.766986994302E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999995105709603	WITHOUT_CLASSIFICATION	4.894290398011924E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999995105709603	WITHOUT_CLASSIFICATION	4.894290398011924E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999995105709603	WITHOUT_CLASSIFICATION	4.894290398011924E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999995105709603	WITHOUT_CLASSIFICATION	4.894290398011924E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999995105709603	WITHOUT_CLASSIFICATION	4.894290398011924E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999995105709603	WITHOUT_CLASSIFICATION	4.894290398011924E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999995105709603	WITHOUT_CLASSIFICATION	4.894290398011924E-7	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999995105709603	WITHOUT_CLASSIFICATION	4.894290398011924E-7	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999998137547617	WITHOUT_CLASSIFICATION	1.8624523829948932E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999998137547617	WITHOUT_CLASSIFICATION	1.8624523829948932E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999998137547617	WITHOUT_CLASSIFICATION	1.8624523829948932E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999998137547617	WITHOUT_CLASSIFICATION	1.8624523829948932E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999998137547617	WITHOUT_CLASSIFICATION	1.8624523829948932E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999998137547617	WITHOUT_CLASSIFICATION	1.8624523829948932E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999998137547617	WITHOUT_CLASSIFICATION	1.8624523829948932E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999998137547617	WITHOUT_CLASSIFICATION	1.8624523829948932E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978654805061	WITHOUT_CLASSIFICATION	2.1345194939087244E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978654805061	WITHOUT_CLASSIFICATION	2.1345194939087244E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978654805061	WITHOUT_CLASSIFICATION	2.1345194939087244E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978654805061	WITHOUT_CLASSIFICATION	2.1345194939087244E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978654805061	WITHOUT_CLASSIFICATION	2.1345194939087244E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978654805061	WITHOUT_CLASSIFICATION	2.1345194939087244E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978654805061	WITHOUT_CLASSIFICATION	2.1345194939087244E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999978654805061	WITHOUT_CLASSIFICATION	2.1345194939087244E-6	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999967766896974	WITHOUT_CLASSIFICATION	3.2233103025268956E-6	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999967766896974	WITHOUT_CLASSIFICATION	3.2233103025268956E-6	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999862314278575	WITHOUT_CLASSIFICATION	1.376857214254218E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999897278616432	WITHOUT_CLASSIFICATION	1.0272138356926301E-5	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.9999897278616432	WITHOUT_CLASSIFICATION	1.0272138356926301E-5	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999862314278575	WITHOUT_CLASSIFICATION	1.376857214254218E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999934146118916	WITHOUT_CLASSIFICATION	6.585388108454514E-6	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.9999829137616395	WITHOUT_CLASSIFICATION	1.7086238360392715E-5	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.9999997502015069	WITHOUT_CLASSIFICATION	2.4979849313787596E-7	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.999621962358807	WITHOUT_CLASSIFICATION	3.7803764119297015E-4	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.9999997792952471	WITHOUT_CLASSIFICATION	2.207047528643032E-7	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9999998223587155	WITHOUT_CLASSIFICATION	1.7764128440334914E-7	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.9999990695854601	WITHOUT_CLASSIFICATION	9.304145397552213E-7	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.999998744861594	WITHOUT_CLASSIFICATION	1.2551384059694831E-6	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.9999990106612795	WITHOUT_CLASSIFICATION	9.893387204918992E-7	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999996152886662	WITHOUT_CLASSIFICATION	3.847113337741825E-7	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999999133781062	WITHOUT_CLASSIFICATION	8.662189374261914E-8	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.999999936124215	WITHOUT_CLASSIFICATION	6.387578497006224E-8	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999883514695801	WITHOUT_CLASSIFICATION	1.1648530419828339E-5	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999995986797031	WITHOUT_CLASSIFICATION	4.013202968305928E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.9999995986797031	WITHOUT_CLASSIFICATION	4.013202968305928E-7	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999939615144835	WITHOUT_CLASSIFICATION	6.038485516485104E-6	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999939615144835	WITHOUT_CLASSIFICATION	6.038485516485104E-6	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999981231006886	WITHOUT_CLASSIFICATION	1.8768993113585096E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999989243078847	WITHOUT_CLASSIFICATION	1.0756921152317321E-6	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.999999071860128	WITHOUT_CLASSIFICATION	9.281398718281547E-7	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.9999995858393501	WITHOUT_CLASSIFICATION	4.141606498689101E-7	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.9999998090657077	WITHOUT_CLASSIFICATION	1.9093429221417483E-7	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.9999999622855563	WITHOUT_CLASSIFICATION	3.7714443671030746E-8	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999996152886662	WITHOUT_CLASSIFICATION	3.847113337741825E-7	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999999133781062	WITHOUT_CLASSIFICATION	8.662189374261914E-8	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.999999936124215	WITHOUT_CLASSIFICATION	6.387578497006224E-8	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.9999998211113077	WITHOUT_CLASSIFICATION	1.7888869220239334E-7	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.9999999383731912	WITHOUT_CLASSIFICATION	6.162680874640238E-8	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.9999998440875029	WITHOUT_CLASSIFICATION	1.5591249706441527E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999997162293859	WITHOUT_CLASSIFICATION	2.8377061411671273E-7	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.999999673345958	WITHOUT_CLASSIFICATION	3.2665404205420865E-7	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999972396708553	WITHOUT_CLASSIFICATION	2.760329144687154E-6	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9999979027825773	WITHOUT_CLASSIFICATION	2.0972174227165203E-6	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.9999999122609807	WITHOUT_CLASSIFICATION	8.773901928394608E-8	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.9999999870382467	WITHOUT_CLASSIFICATION	1.2961753254690014E-8	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.9999973144474721	WITHOUT_CLASSIFICATION	2.6855525279811716E-6	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.9999992967811585	WITHOUT_CLASSIFICATION	7.032188415680393E-7	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999998757135113	WITHOUT_CLASSIFICATION	1.2428648864061586E-7	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.9999964587614567	WITHOUT_CLASSIFICATION	3.5412385432326387E-6	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9999882705638513	WITHOUT_CLASSIFICATION	1.1729436148655344E-5	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.9999826780906573	WITHOUT_CLASSIFICATION	1.732190934257922E-5	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.999985857119872	WITHOUT_CLASSIFICATION	1.4142880127960805E-5	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999996330066832	WITHOUT_CLASSIFICATION	3.669933168680383E-7	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999996330066832	WITHOUT_CLASSIFICATION	3.669933168680383E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999164407806	WITHOUT_CLASSIFICATION	8.355921938983064E-8	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9999996315908479	WITHOUT_CLASSIFICATION	3.6840915211235113E-7	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.9999326012696135	WITHOUT_CLASSIFICATION	6.739873038652979E-5	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.9999893003951053	WITHOUT_CLASSIFICATION	1.069960489479182E-5	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9999850074772618	WITHOUT_CLASSIFICATION	1.499252273823199E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996940294754	WITHOUT_CLASSIFICATION	3.0597052456968554E-7	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.9999994848081422	WITHOUT_CLASSIFICATION	5.151918578963444E-7	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9999977360961947	WITHOUT_CLASSIFICATION	2.263903805256374E-6	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.999997139650951	WITHOUT_CLASSIFICATION	2.8603490488241614E-6	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.9999997236609082	WITHOUT_CLASSIFICATION	2.7633909176892813E-7	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.9999985017378753	WITHOUT_CLASSIFICATION	1.4982621245994778E-6	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.999998319183632	WITHOUT_CLASSIFICATION	1.6808163679133008E-6	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.9999996868148825	WITHOUT_CLASSIFICATION	3.131851175795058E-7	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.9999819427439932	WITHOUT_CLASSIFICATION	1.8057256006738767E-5	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.9999604102434508	WITHOUT_CLASSIFICATION	3.958975654915592E-5	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999993331870015	WITHOUT_CLASSIFICATION	6.668129985647182E-7	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999994859921493	WITHOUT_CLASSIFICATION	5.140078506356421E-7	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.9999999451138575	WITHOUT_CLASSIFICATION	5.4886142516892696E-8	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.9999999222385803	WITHOUT_CLASSIFICATION	7.776141979381055E-8	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.9999999709790217	WITHOUT_CLASSIFICATION	2.9020978304254375E-8	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.9999728306308222	WITHOUT_CLASSIFICATION	2.7169369177762617E-5	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.9999459328631015	WITHOUT_CLASSIFICATION	5.406713689841154E-5	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.9999994404407743	WITHOUT_CLASSIFICATION	5.595592257372315E-7	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999999991561771	WITHOUT_CLASSIFICATION	8.438229622675422E-10	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999999931121757	WITHOUT_CLASSIFICATION	6.887824233397232E-9	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.9999995343813906	WITHOUT_CLASSIFICATION	4.6561860950361825E-7	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999982850321526	WITHOUT_CLASSIFICATION	1.7149678473429959E-6	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.9999987693778519	WITHOUT_CLASSIFICATION	1.2306221481418916E-6	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.999999010088975	WITHOUT_CLASSIFICATION	9.89911024978365E-7	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999981231006886	WITHOUT_CLASSIFICATION	1.8768993113585096E-6	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999989243078847	WITHOUT_CLASSIFICATION	1.0756921152317321E-6	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.9999985352010737	WITHOUT_CLASSIFICATION	1.464798926283939E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993370850939	WITHOUT_CLASSIFICATION	6.629149060667457E-7	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999999269670288	WITHOUT_CLASSIFICATION	7.303297121076728E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997534949778	WITHOUT_CLASSIFICATION	2.465050221132424E-7	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.9999996133087963	WITHOUT_CLASSIFICATION	3.8669120380577784E-7	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.9999995527553359	WITHOUT_CLASSIFICATION	4.4724466415590754E-7	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.9999998468805624	WITHOUT_CLASSIFICATION	1.5311943765105581E-7	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999997228612085	WITHOUT_CLASSIFICATION	2.771387914388512E-7	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.9999996390041356	WITHOUT_CLASSIFICATION	3.6099586440518514E-7	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.9999986015294295	WITHOUT_CLASSIFICATION	1.3984705704085333E-6	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.9999981974434227	WITHOUT_CLASSIFICATION	1.8025565773633117E-6	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.9999995091734255	WITHOUT_CLASSIFICATION	4.908265745632415E-7	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.9999995934854784	WITHOUT_CLASSIFICATION	4.0651452167903454E-7	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.9999990910221275	WITHOUT_CLASSIFICATION	9.089778725674403E-7	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.9999992317544997	WITHOUT_CLASSIFICATION	7.682455002615871E-7	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.9999985530306342	WITHOUT_CLASSIFICATION	1.446969365711749E-6	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.9999999641546374	WITHOUT_CLASSIFICATION	3.584536257473143E-8	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.9999996069969357	WITHOUT_CLASSIFICATION	3.930030643234978E-7	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.9999999175338059	WITHOUT_CLASSIFICATION	8.246619401218672E-8	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.99999795432864	WITHOUT_CLASSIFICATION	2.045671359963916E-6	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.9999995666020185	WITHOUT_CLASSIFICATION	4.333979815523185E-7	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.9999996989252959	WITHOUT_CLASSIFICATION	3.010747039925719E-7	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.9999988150212622	WITHOUT_CLASSIFICATION	1.1849787377447126E-6	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.9999991247072633	WITHOUT_CLASSIFICATION	8.752927367585724E-7	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.9999983318606485	WITHOUT_CLASSIFICATION	1.6681393514753338E-6	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.9999914827992449	WITHOUT_CLASSIFICATION	8.517200755147017E-6	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.9999999167043078	WITHOUT_CLASSIFICATION	8.329569222358336E-8	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.9999989222945125	WITHOUT_CLASSIFICATION	1.0777054874544236E-6	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.9999996692521005	WITHOUT_CLASSIFICATION	3.3074789960366426E-7	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.9999993347110739	WITHOUT_CLASSIFICATION	6.652889260297772E-7	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.999999447370686	WITHOUT_CLASSIFICATION	5.526293140597836E-7	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.9999949440342757	WITHOUT_CLASSIFICATION	5.0559657243473014E-6	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999998021853455	WITHOUT_CLASSIFICATION	1.9781465457658538E-7	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.9999991933706166	WITHOUT_CLASSIFICATION	8.066293833213821E-7	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.9999985399464457	WITHOUT_CLASSIFICATION	1.4600535542807375E-6	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.9999995411913466	WITHOUT_CLASSIFICATION	4.5880865334957495E-7	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.9999987125768696	WITHOUT_CLASSIFICATION	1.2874231304534119E-6	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.9999990816967679	WITHOUT_CLASSIFICATION	9.183032320339626E-7	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9999997186318347	WITHOUT_CLASSIFICATION	2.8136816534403683E-7	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.9999988572834402	WITHOUT_CLASSIFICATION	1.1427165598779095E-6	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.9999975996279972	WITHOUT_CLASSIFICATION	2.400372002852839E-6	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.9999988035268729	WITHOUT_CLASSIFICATION	1.1964731271036668E-6	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.9999977321139916	WITHOUT_CLASSIFICATION	2.2678860083241913E-6	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.9998867655914335	WITHOUT_CLASSIFICATION	1.1323440856652273E-4	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.9999953874440392	WITHOUT_CLASSIFICATION	4.61255596086207E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999992329460841	WITHOUT_CLASSIFICATION	7.670539159183566E-7	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.9999839144783118	WITHOUT_CLASSIFICATION	1.6085521688279103E-5	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.9984801795609163	WITHOUT_CLASSIFICATION	0.0015198204390837104	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.9998154842568309	WITHOUT_CLASSIFICATION	1.8451574316918323E-4	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.9987818857682133	WITHOUT_CLASSIFICATION	0.0012181142317867657	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.9992832536441234	WITHOUT_CLASSIFICATION	7.1674635587664E-4	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.999808588170149	WITHOUT_CLASSIFICATION	1.9141182985098375E-4	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.999808588170149	WITHOUT_CLASSIFICATION	1.9141182985098375E-4	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.999999000606389	WITHOUT_CLASSIFICATION	9.993936109635584E-7	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.999999000606389	WITHOUT_CLASSIFICATION	9.993936109635584E-7	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.9997780439373339	WITHOUT_CLASSIFICATION	2.2195606266600098E-4	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999496805228877	WITHOUT_CLASSIFICATION	5.0319477112306535E-5	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999997869088995	WITHOUT_CLASSIFICATION	2.1309110047133175E-7	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999997869088995	WITHOUT_CLASSIFICATION	2.1309110047133175E-7	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999781193923918	WITHOUT_CLASSIFICATION	2.1880607608186645E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999949081424083	WITHOUT_CLASSIFICATION	5.091857591575294E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999992085337989	WITHOUT_CLASSIFICATION	7.914662012425611E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999489566386307	WITHOUT_CLASSIFICATION	5.104336136925167E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999957909464389	WITHOUT_CLASSIFICATION	4.209053561074964E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.999797653157226	WITHOUT_CLASSIFICATION	2.023468427740126E-4	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999906211650066	WITHOUT_CLASSIFICATION	9.378834993474272E-6	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999970330341938	WITHOUT_CLASSIFICATION	2.9669658061156488E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999685831483787	WITHOUT_CLASSIFICATION	3.141685162135942E-5	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999966664909977	WITHOUT_CLASSIFICATION	3.3335090023242355E-6	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999852691961769	WITHOUT_CLASSIFICATION	1.4730803823068021E-5	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999969460433955	WITHOUT_CLASSIFICATION	3.0539566045388396E-6	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.999997221447061	WITHOUT_CLASSIFICATION	2.778552938931488E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999979932952032	WITHOUT_CLASSIFICATION	2.0067047968124865E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.999997746828659	WITHOUT_CLASSIFICATION	2.253171340916773E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.99999992590291	WITHOUT_CLASSIFICATION	7.409708999305313E-8	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999949081424083	WITHOUT_CLASSIFICATION	5.091857591575294E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999992085337989	WITHOUT_CLASSIFICATION	7.914662012425611E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999489566386307	WITHOUT_CLASSIFICATION	5.104336136925167E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999957909464389	WITHOUT_CLASSIFICATION	4.209053561074964E-6	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.999797653157226	WITHOUT_CLASSIFICATION	2.023468427740126E-4	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999984511943212	WITHOUT_CLASSIFICATION	1.5488056788559848E-6	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999979603812478	WITHOUT_CLASSIFICATION	2.039618752287763E-6	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999997790428699	WITHOUT_CLASSIFICATION	2.2095713013621913E-7	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999880934351721	WITHOUT_CLASSIFICATION	1.190656482773789E-5	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999971781714503	WITHOUT_CLASSIFICATION	2.821828549693952E-6	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999795364697092	WITHOUT_CLASSIFICATION	2.0463530290862922E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.9999959746402522	WITHOUT_CLASSIFICATION	4.025359747760293E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9998400001194301	WITHOUT_CLASSIFICATION	1.5999988057000404E-4	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999972485039763	WITHOUT_CLASSIFICATION	2.7514960237153315E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999811872504496	WITHOUT_CLASSIFICATION	1.8812749550385927E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999995420307135	WITHOUT_CLASSIFICATION	4.5796928654327017E-7	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999970330341938	WITHOUT_CLASSIFICATION	2.9669658061156488E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.999996413232249	WITHOUT_CLASSIFICATION	3.5867677511027825E-6	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999990974368157	WITHOUT_CLASSIFICATION	9.02563184322263E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999990974368157	WITHOUT_CLASSIFICATION	9.02563184322263E-7	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.9999994307296773	WITHOUT_CLASSIFICATION	5.692703225595279E-7	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999991053580813	WITHOUT_CLASSIFICATION	8.94641918787033E-7	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999999188975	WITHOUT_CLASSIFICATION	8.110250007303206E-8	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999999188975	WITHOUT_CLASSIFICATION	8.110250007303206E-8	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.9999997856307118	WITHOUT_CLASSIFICATION	2.1436928810356033E-7	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999998018666583	WITHOUT_CLASSIFICATION	1.9813334176395655E-7	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.9999996059434458	WITHOUT_CLASSIFICATION	3.940565541457507E-7	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.9999979421216277	WITHOUT_CLASSIFICATION	2.0578783722583062E-6	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.999997061705574	WITHOUT_CLASSIFICATION	2.9382944259192475E-6	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.9999989354056221	WITHOUT_CLASSIFICATION	1.064594377871049E-6	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.999998732755418	WITHOUT_CLASSIFICATION	1.267244582030907E-6	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.9999983758351273	WITHOUT_CLASSIFICATION	1.6241648728030278E-6	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.9999993483849383	WITHOUT_CLASSIFICATION	6.516150616093267E-7	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999943926614423	WITHOUT_CLASSIFICATION	5.6073385577051715E-6	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999998248689682	WITHOUT_CLASSIFICATION	1.7513103191150982E-7	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999997040580828	WITHOUT_CLASSIFICATION	2.959419172064558E-7	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999996766809516	WITHOUT_CLASSIFICATION	3.2331904851930304E-7	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.9999999520904137	WITHOUT_CLASSIFICATION	4.790958620714393E-8	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.9999997794844991	WITHOUT_CLASSIFICATION	2.205155009189263E-7	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.9999999623334651	WITHOUT_CLASSIFICATION	3.7666534907941676E-8	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999997778707399	WITHOUT_CLASSIFICATION	2.2212926002852278E-7	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.9999983918602828	WITHOUT_CLASSIFICATION	1.6081397171111376E-6	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999982060249645	WITHOUT_CLASSIFICATION	1.7939750354690609E-6	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999991149432487	WITHOUT_CLASSIFICATION	8.850567513207207E-7	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.9999952989712817	WITHOUT_CLASSIFICATION	4.701028718229896E-6	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.999999724534126	WITHOUT_CLASSIFICATION	2.754658740437869E-7	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999966664909977	WITHOUT_CLASSIFICATION	3.3335090023242355E-6	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999852691961769	WITHOUT_CLASSIFICATION	1.4730803823068021E-5	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999975368290297	WITHOUT_CLASSIFICATION	2.463170970276853E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999969460433955	WITHOUT_CLASSIFICATION	3.0539566045388396E-6	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.999997221447061	WITHOUT_CLASSIFICATION	2.778552938931488E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999979932952032	WITHOUT_CLASSIFICATION	2.0067047968124865E-6	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.9999597112315822	WITHOUT_CLASSIFICATION	4.028876841778721E-5	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999981241398824	WITHOUT_CLASSIFICATION	1.8758601175964943E-6	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999994630235787	WITHOUT_CLASSIFICATION	5.369764213885029E-7	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999999045981507	WITHOUT_CLASSIFICATION	9.540184923018794E-8	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.999996585108286	WITHOUT_CLASSIFICATION	3.4148917139314703E-6	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.999996479722713	WITHOUT_CLASSIFICATION	3.520277286979708E-6	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999997290083168	WITHOUT_CLASSIFICATION	2.709916832347459E-7	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999995044657501	WITHOUT_CLASSIFICATION	4.955342498530498E-7	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999991354048245	WITHOUT_CLASSIFICATION	8.645951753463067E-7	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.999990858108664	WITHOUT_CLASSIFICATION	9.141891336108735E-6	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.999996120692311	WITHOUT_CLASSIFICATION	3.879307688940377E-6	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999948870334997	WITHOUT_CLASSIFICATION	5.112966500349883E-6	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999906088332218	WITHOUT_CLASSIFICATION	9.39116677817581E-6	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999591959923	WITHOUT_CLASSIFICATION	4.0804007774798816E-8	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999994318049116	WITHOUT_CLASSIFICATION	5.68195088435112E-7	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999998188428348	WITHOUT_CLASSIFICATION	1.8115716502266552E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999291589897	WITHOUT_CLASSIFICATION	7.084101027981063E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.999998922897457	WITHOUT_CLASSIFICATION	1.0771025430424379E-6	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999998250707758	WITHOUT_CLASSIFICATION	1.7492922414941143E-7	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999997240784194	WITHOUT_CLASSIFICATION	2.759215805069523E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.999999442877143	WITHOUT_CLASSIFICATION	5.571228570608293E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999990255721131	WITHOUT_CLASSIFICATION	9.744278868709386E-7	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999994003856538	WITHOUT_CLASSIFICATION	5.996143462795704E-7	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.9999992905870754	WITHOUT_CLASSIFICATION	7.09412924611962E-7	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.999999608091383	WITHOUT_CLASSIFICATION	3.919086170623998E-7	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.9999950399689256	WITHOUT_CLASSIFICATION	4.9600310744231444E-6	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.999997259871438	WITHOUT_CLASSIFICATION	2.7401285620480245E-6	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.9999990024448889	WITHOUT_CLASSIFICATION	9.9755511102672E-7	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.999988445161086	WITHOUT_CLASSIFICATION	1.1554838913970604E-5	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.9999985661249733	WITHOUT_CLASSIFICATION	1.433875026733499E-6	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9999975060002237	WITHOUT_CLASSIFICATION	2.493999776269581E-6	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.9999925488049826	WITHOUT_CLASSIFICATION	7.45119501739959E-6	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.9999977958311562	WITHOUT_CLASSIFICATION	2.2041688437509804E-6	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999985525499814	WITHOUT_CLASSIFICATION	1.4474500186622047E-6	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999997767743833	WITHOUT_CLASSIFICATION	2.2322561660991746E-7	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999992116698719	WITHOUT_CLASSIFICATION	7.883301280974371E-7	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.999999665915606	WITHOUT_CLASSIFICATION	3.3408439409553234E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999995445141975	WITHOUT_CLASSIFICATION	4.554858025572817E-7	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9999905868358526	WITHOUT_CLASSIFICATION	9.413164147332008E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999504764814459	WITHOUT_CLASSIFICATION	4.952351855419224E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999504764814459	WITHOUT_CLASSIFICATION	4.952351855419224E-5	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999899455221806	WITHOUT_CLASSIFICATION	1.0054477819430695E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999988979811871	WITHOUT_CLASSIFICATION	1.1020188129033315E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999996227108178	WITHOUT_CLASSIFICATION	3.772891821786246E-7	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999998788832601	WITHOUT_CLASSIFICATION	1.2111673989887297E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999998942584858	WITHOUT_CLASSIFICATION	1.0574151421282303E-7	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999465220427185	WITHOUT_CLASSIFICATION	5.347795728146678E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999990572443356	WITHOUT_CLASSIFICATION	9.427556644390601E-7	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999990572443356	WITHOUT_CLASSIFICATION	9.427556644390601E-7	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999990572443356	WITHOUT_CLASSIFICATION	9.427556644390601E-7	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999653483462052	WITHOUT_CLASSIFICATION	3.4651653794788176E-5	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999849018204986	WITHOUT_CLASSIFICATION	1.5098179501544174E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999839980334173	WITHOUT_CLASSIFICATION	1.600196658268459E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999839980334173	WITHOUT_CLASSIFICATION	1.600196658268459E-5	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999996730125795	WITHOUT_CLASSIFICATION	3.2698742044301983E-7	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999996923631049	WITHOUT_CLASSIFICATION	3.076368950914807E-7	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.9999998846505956	WITHOUT_CLASSIFICATION	1.1534940432723774E-7	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.9999987774845942	WITHOUT_CLASSIFICATION	1.2225154058020667E-6	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.999999512603369	WITHOUT_CLASSIFICATION	4.873966310321533E-7	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.9999983773225468	WITHOUT_CLASSIFICATION	1.6226774531191549E-6	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.999999656075241	WITHOUT_CLASSIFICATION	3.439247590438581E-7	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.9999994098912293	WITHOUT_CLASSIFICATION	5.901087706932881E-7	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.9999990300626527	WITHOUT_CLASSIFICATION	9.699373473035263E-7	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.9999998043087517	WITHOUT_CLASSIFICATION	1.956912481759652E-7	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.9999994799452752	WITHOUT_CLASSIFICATION	5.200547248598191E-7	DEFECT
//key	WITHOUT_CLASSIFICATION	0.9998825283737613	WITHOUT_CLASSIFICATION	1.1747162623859397E-4	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.9999843703849054	WITHOUT_CLASSIFICATION	1.5629615094653873E-5	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.9999783683967375	WITHOUT_CLASSIFICATION	2.1631603262527548E-5	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.9999938134465355	WITHOUT_CLASSIFICATION	6.186553464594194E-6	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.9999361223083181	WITHOUT_CLASSIFICATION	6.387769168192372E-5	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.999970864157266	WITHOUT_CLASSIFICATION	2.9135842734056565E-5	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999999844109	WITHOUT_CLASSIFICATION	1.5589100050039137E-8	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.9999992326216409	WITHOUT_CLASSIFICATION	7.673783589832469E-7	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.9999997900879596	WITHOUT_CLASSIFICATION	2.0991204033827345E-7	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.9999998272334735	WITHOUT_CLASSIFICATION	1.7276652658226186E-7	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.9999997711237097	WITHOUT_CLASSIFICATION	2.2887629018088506E-7	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.9999993091473159	WITHOUT_CLASSIFICATION	6.908526841151933E-7	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.9999994096407974	WITHOUT_CLASSIFICATION	5.903592025204724E-7	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999929285589381	WITHOUT_CLASSIFICATION	7.071441061895111E-6	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.9999999400501217	WITHOUT_CLASSIFICATION	5.994987826402841E-8	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.9999995643886472	WITHOUT_CLASSIFICATION	4.356113527243708E-7	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.9999995829611026	WITHOUT_CLASSIFICATION	4.170388974086009E-7	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.9999998803146242	WITHOUT_CLASSIFICATION	1.1968537578093954E-7	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999997876391065	WITHOUT_CLASSIFICATION	2.1236089359756633E-7	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999999245105125	WITHOUT_CLASSIFICATION	7.548948755830713E-8	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999416532901	WITHOUT_CLASSIFICATION	5.8346709922069925E-8	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999989675908895	WITHOUT_CLASSIFICATION	1.0324091106019468E-6	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999997414317853	WITHOUT_CLASSIFICATION	2.5856821466563766E-7	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.9999980490186773	WITHOUT_CLASSIFICATION	1.950981322698815E-6	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999930994962513	WITHOUT_CLASSIFICATION	6.900503748771847E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999971571047649	WITHOUT_CLASSIFICATION	2.8428952351488496E-6	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.9999997832292596	WITHOUT_CLASSIFICATION	2.1677074035031238E-7	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.9999992962961125	WITHOUT_CLASSIFICATION	7.037038875157748E-7	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.9999990742188326	WITHOUT_CLASSIFICATION	9.2578116738336E-7	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.9999997020196877	WITHOUT_CLASSIFICATION	2.9798031239398985E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999989272871862	WITHOUT_CLASSIFICATION	1.072712813787301E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999989868848026	WITHOUT_CLASSIFICATION	1.0131151974312862E-6	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999990814157783	WITHOUT_CLASSIFICATION	9.185842216705421E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999990723603799	WITHOUT_CLASSIFICATION	9.276396200659123E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999996830170336	WITHOUT_CLASSIFICATION	3.169829664930631E-7	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.999999665915606	WITHOUT_CLASSIFICATION	3.3408439409553234E-7	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999929285589381	WITHOUT_CLASSIFICATION	7.071441061895111E-6	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.9999998859594491	WITHOUT_CLASSIFICATION	1.1404055090733227E-7	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.9999988841353684	WITHOUT_CLASSIFICATION	1.1158646315219473E-6	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999998993650318	WITHOUT_CLASSIFICATION	1.0063496825940441E-7	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.9999994255916689	WITHOUT_CLASSIFICATION	5.744083311423644E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.999999776231983	WITHOUT_CLASSIFICATION	2.237680170499302E-7	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.9999989227873393	WITHOUT_CLASSIFICATION	1.0772126608135233E-6	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999995939747021	WITHOUT_CLASSIFICATION	4.060252978990523E-7	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.9999995763441384	WITHOUT_CLASSIFICATION	4.2365586153231006E-7	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.9999998083177963	WITHOUT_CLASSIFICATION	1.916822035429062E-7	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999105265506	WITHOUT_CLASSIFICATION	8.947344933874776E-8	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.9999998718486098	WITHOUT_CLASSIFICATION	1.2815139013925879E-7	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999995939747021	WITHOUT_CLASSIFICATION	4.060252978990523E-7	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999556721698	WITHOUT_CLASSIFICATION	4.432783017877961E-8	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.9999999336260362	WITHOUT_CLASSIFICATION	6.63739637501527E-8	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.9999999143991614	WITHOUT_CLASSIFICATION	8.560083862518335E-8	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998676276577	WITHOUT_CLASSIFICATION	1.3237234230215797E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999994767868767	WITHOUT_CLASSIFICATION	5.232131232992889E-7	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999994606447565	WITHOUT_CLASSIFICATION	5.393552433800431E-7	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999999883081004	WITHOUT_CLASSIFICATION	1.1691899497175202E-8	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999999883081004	WITHOUT_CLASSIFICATION	1.1691899497175202E-8	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.999985497422732	WITHOUT_CLASSIFICATION	1.4502577268038426E-5	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999824840870969	WITHOUT_CLASSIFICATION	1.7515912903148147E-5	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999824840870969	WITHOUT_CLASSIFICATION	1.7515912903148147E-5	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999960935738	WITHOUT_CLASSIFICATION	3.906426146344318E-9	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999924788009	WITHOUT_CLASSIFICATION	7.52119914345276E-9	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.9999999907265207	WITHOUT_CLASSIFICATION	9.273479251762606E-9	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.9999993561834936	WITHOUT_CLASSIFICATION	6.438165064927203E-7	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.9999991052873974	WITHOUT_CLASSIFICATION	8.94712602583335E-7	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.9999997205696731	WITHOUT_CLASSIFICATION	2.7943032689818836E-7	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.9999996037778667	WITHOUT_CLASSIFICATION	3.96222133280825E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.999996726893468	WITHOUT_CLASSIFICATION	3.27310653198965E-6	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.9999970674272415	WITHOUT_CLASSIFICATION	2.9325727585669053E-6	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.9999961742987135	WITHOUT_CLASSIFICATION	3.8257012865759785E-6	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.9999998419546332	WITHOUT_CLASSIFICATION	1.580453667811964E-7	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.9999997168443299	WITHOUT_CLASSIFICATION	2.831556701341036E-7	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.9999984451097829	WITHOUT_CLASSIFICATION	1.5548902171491522E-6	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.9999995638923318	WITHOUT_CLASSIFICATION	4.3610766824070857E-7	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.9999993436507407	WITHOUT_CLASSIFICATION	6.563492592479664E-7	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.999998152280473	WITHOUT_CLASSIFICATION	1.8477195271540197E-6	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.9999925405605425	WITHOUT_CLASSIFICATION	7.459439457361112E-6	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999819101367011	WITHOUT_CLASSIFICATION	1.8089863298949193E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999819101367011	WITHOUT_CLASSIFICATION	1.8089863298949193E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999832682086401	WITHOUT_CLASSIFICATION	1.6731791359937916E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.999996855636902	WITHOUT_CLASSIFICATION	3.1443630980674476E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999832682086401	WITHOUT_CLASSIFICATION	1.6731791359937916E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999832682086401	WITHOUT_CLASSIFICATION	1.6731791359937916E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999832682086401	WITHOUT_CLASSIFICATION	1.6731791359937916E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.9999988979811871	WITHOUT_CLASSIFICATION	1.1020188129033315E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999996227108178	WITHOUT_CLASSIFICATION	3.772891821786246E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999999534958366	WITHOUT_CLASSIFICATION	4.650416339917409E-8	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999998021853455	WITHOUT_CLASSIFICATION	1.9781465457658538E-7	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999943926614423	WITHOUT_CLASSIFICATION	5.6073385577051715E-6	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999982060249645	WITHOUT_CLASSIFICATION	1.7939750354690609E-6	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999991149432487	WITHOUT_CLASSIFICATION	8.850567513207207E-7	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.999999837358825	WITHOUT_CLASSIFICATION	1.6264117497342718E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.999999776231983	WITHOUT_CLASSIFICATION	2.237680170499302E-7	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999105265506	WITHOUT_CLASSIFICATION	8.947344933874776E-8	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.999999905300105	WITHOUT_CLASSIFICATION	9.469989501632899E-8	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999996574032907	WITHOUT_CLASSIFICATION	3.4259670938486174E-7	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.9999988060365864	WITHOUT_CLASSIFICATION	1.193963413596801E-6	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.9999990210528414	WITHOUT_CLASSIFICATION	9.789471586259798E-7	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.9999997453232335	WITHOUT_CLASSIFICATION	2.5467676644813895E-7	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.9999998835801328	WITHOUT_CLASSIFICATION	1.16419867189902E-7	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.9999994465487593	WITHOUT_CLASSIFICATION	5.534512408075511E-7	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.9999999848251584	WITHOUT_CLASSIFICATION	1.517484164924264E-8	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999902769236572	WITHOUT_CLASSIFICATION	9.723076342776666E-6	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.9999986849620596	WITHOUT_CLASSIFICATION	1.3150379404209236E-6	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.9999993922896953	WITHOUT_CLASSIFICATION	6.077103048200914E-7	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.999991216400786	WITHOUT_CLASSIFICATION	8.783599214095913E-6	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.9999995523044085	WITHOUT_CLASSIFICATION	4.476955914772013E-7	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999996621779674	WITHOUT_CLASSIFICATION	3.3782203260134877E-7	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.9999994995854704	WITHOUT_CLASSIFICATION	5.004145295328365E-7	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.9999992577811391	WITHOUT_CLASSIFICATION	7.42218860916159E-7	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.9999994401263296	WITHOUT_CLASSIFICATION	5.598736704178077E-7	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.996243986750906	WITHOUT_CLASSIFICATION	0.0037560132490939936	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.9999998043763396	WITHOUT_CLASSIFICATION	1.956236604686259E-7	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.999999625430185	WITHOUT_CLASSIFICATION	3.7456981514465667E-7	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.9999963385027821	WITHOUT_CLASSIFICATION	3.661497217789761E-6	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.99993983077464	WITHOUT_CLASSIFICATION	6.016922535992408E-5	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999835289910805	WITHOUT_CLASSIFICATION	1.6471008919504928E-5	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.9999983076805924	WITHOUT_CLASSIFICATION	1.6923194075897057E-6	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.9999959772030634	WITHOUT_CLASSIFICATION	4.0227969364810865E-6	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.9999206956021311	WITHOUT_CLASSIFICATION	7.930439786879719E-5	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999632346975079	WITHOUT_CLASSIFICATION	3.676530249212898E-5	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999791627623289	WITHOUT_CLASSIFICATION	2.083723767111534E-5	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.9999949911938787	WITHOUT_CLASSIFICATION	5.008806121280834E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.99999992590291	WITHOUT_CLASSIFICATION	7.409708999305313E-8	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.99999992590291	WITHOUT_CLASSIFICATION	7.409708999305313E-8	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999745158322276	WITHOUT_CLASSIFICATION	2.5484167772302424E-5	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.9999943926614423	WITHOUT_CLASSIFICATION	5.6073385577051715E-6	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999998248689682	WITHOUT_CLASSIFICATION	1.7513103191150982E-7	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999997040580828	WITHOUT_CLASSIFICATION	2.959419172064558E-7	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9999972298030186	WITHOUT_CLASSIFICATION	2.770196981327924E-6	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.9999996766809516	WITHOUT_CLASSIFICATION	3.2331904851930304E-7	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999994318049116	WITHOUT_CLASSIFICATION	5.68195088435112E-7	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999998188428348	WITHOUT_CLASSIFICATION	1.8115716502266552E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999291589897	WITHOUT_CLASSIFICATION	7.084101027981063E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.999998922897457	WITHOUT_CLASSIFICATION	1.0771025430424379E-6	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999997240784194	WITHOUT_CLASSIFICATION	2.759215805069523E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.999999442877143	WITHOUT_CLASSIFICATION	5.571228570608293E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999990255721131	WITHOUT_CLASSIFICATION	9.744278868709386E-7	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999994003856538	WITHOUT_CLASSIFICATION	5.996143462795704E-7	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.999988445161086	WITHOUT_CLASSIFICATION	1.1554838913970604E-5	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999956485230916	WITHOUT_CLASSIFICATION	4.351476908278269E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.999999665915606	WITHOUT_CLASSIFICATION	3.3408439409553234E-7	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999504764814459	WITHOUT_CLASSIFICATION	4.952351855419224E-5	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999899455221806	WITHOUT_CLASSIFICATION	1.0054477819430695E-5	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999465220427185	WITHOUT_CLASSIFICATION	5.347795728146678E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999990572443356	WITHOUT_CLASSIFICATION	9.427556644390601E-7	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999990572443356	WITHOUT_CLASSIFICATION	9.427556644390601E-7	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999653483462052	WITHOUT_CLASSIFICATION	3.4651653794788176E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999839980334173	WITHOUT_CLASSIFICATION	1.600196658268459E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999839980334173	WITHOUT_CLASSIFICATION	1.600196658268459E-5	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999996730125795	WITHOUT_CLASSIFICATION	3.2698742044301983E-7	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.9999996923631049	WITHOUT_CLASSIFICATION	3.076368950914807E-7	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.9999998869640292	WITHOUT_CLASSIFICATION	1.1303597070902432E-7	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.9999995771027074	WITHOUT_CLASSIFICATION	4.2289729259057676E-7	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999998632184619	WITHOUT_CLASSIFICATION	1.3678153815704778E-7	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.9999995899503309	WITHOUT_CLASSIFICATION	4.100496689967633E-7	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.9999898275918003	WITHOUT_CLASSIFICATION	1.0172408199600507E-5	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.9999965059661603	WITHOUT_CLASSIFICATION	3.494033839747395E-6	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.9999994034587025	WITHOUT_CLASSIFICATION	5.965412973879806E-7	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9999955887155669	WITHOUT_CLASSIFICATION	4.4112844331329005E-6	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.9999981091801264	WITHOUT_CLASSIFICATION	1.890819873501021E-6	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.9999976537963929	WITHOUT_CLASSIFICATION	2.3462036069714602E-6	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.9999999659383467	WITHOUT_CLASSIFICATION	3.4061653285570563E-8	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.9999999585004137	WITHOUT_CLASSIFICATION	4.1499586249982645E-8	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.9999999809823761	WITHOUT_CLASSIFICATION	1.901762390993376E-8	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.9999992923172313	WITHOUT_CLASSIFICATION	7.076827686225683E-7	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999998832232989	WITHOUT_CLASSIFICATION	1.1677670100482764E-7	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.9999820714755994	WITHOUT_CLASSIFICATION	1.792852440072055E-5	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.9999921662412191	WITHOUT_CLASSIFICATION	7.833758780864701E-6	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.9999879069727994	WITHOUT_CLASSIFICATION	1.2093027200642008E-5	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.9999972906454967	WITHOUT_CLASSIFICATION	2.7093545032262693E-6	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.9999998767464412	WITHOUT_CLASSIFICATION	1.2325355875062306E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999745158322276	WITHOUT_CLASSIFICATION	2.5484167772302424E-5	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.999983274080765	WITHOUT_CLASSIFICATION	1.6725919234914814E-5	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999989868848026	WITHOUT_CLASSIFICATION	1.0131151974312862E-6	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999936085111854	WITHOUT_CLASSIFICATION	6.391488814655474E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999986900633423	WITHOUT_CLASSIFICATION	1.30993665767874E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999980834372789	WITHOUT_CLASSIFICATION	1.9165627211144187E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999996830170336	WITHOUT_CLASSIFICATION	3.169829664930631E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999919875855979	WITHOUT_CLASSIFICATION	8.012414401980864E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999992329460841	WITHOUT_CLASSIFICATION	7.670539159183566E-7	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999954102733694	WITHOUT_CLASSIFICATION	4.58972663065554E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999973197831116	WITHOUT_CLASSIFICATION	2.680216888361694E-6	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999915006967236	WITHOUT_CLASSIFICATION	8.499303276293475E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999998942584858	WITHOUT_CLASSIFICATION	1.0574151421282303E-7	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999849018204986	WITHOUT_CLASSIFICATION	1.5098179501544174E-5	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.999996726893468	WITHOUT_CLASSIFICATION	3.27310653198965E-6	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.9994171370342733	WITHOUT_CLASSIFICATION	5.828629657266719E-4	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.9999626818279251	WITHOUT_CLASSIFICATION	3.7318172074966415E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995363337708	WITHOUT_CLASSIFICATION	4.63666229175978E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999928529486	WITHOUT_CLASSIFICATION	7.147051416774768E-9	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999928529486	WITHOUT_CLASSIFICATION	7.147051416774768E-9	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999928529486	WITHOUT_CLASSIFICATION	7.147051416774768E-9	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999928529486	WITHOUT_CLASSIFICATION	7.147051416774768E-9	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.9999995187443648	WITHOUT_CLASSIFICATION	4.812556351422022E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999993672666228	WITHOUT_CLASSIFICATION	6.327333772787964E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997108518779	WITHOUT_CLASSIFICATION	2.8914812216393384E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997108518779	WITHOUT_CLASSIFICATION	2.8914812216393384E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997108518779	WITHOUT_CLASSIFICATION	2.8914812216393384E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997108518779	WITHOUT_CLASSIFICATION	2.8914812216393384E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997108518779	WITHOUT_CLASSIFICATION	2.8914812216393384E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997108518779	WITHOUT_CLASSIFICATION	2.8914812216393384E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999993672666228	WITHOUT_CLASSIFICATION	6.327333772787964E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999993672666228	WITHOUT_CLASSIFICATION	6.327333772787964E-7	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.9999985308688003	WITHOUT_CLASSIFICATION	1.4691311997391098E-6	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.9999986946251512	WITHOUT_CLASSIFICATION	1.3053748487645409E-6	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.9999989993718323	WITHOUT_CLASSIFICATION	1.00062816776618E-6	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.9999995145249906	WITHOUT_CLASSIFICATION	4.854750094216464E-7	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9999991085310336	WITHOUT_CLASSIFICATION	8.914689665246939E-7	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999773576547104	WITHOUT_CLASSIFICATION	2.2642345289568928E-5	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999773576547104	WITHOUT_CLASSIFICATION	2.2642345289568928E-5	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999995068933744	WITHOUT_CLASSIFICATION	4.931066256691851E-7	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.9999996388794153	WITHOUT_CLASSIFICATION	3.611205847646774E-7	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.9999997575029254	WITHOUT_CLASSIFICATION	2.4249707464578224E-7	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.999999524245954	WITHOUT_CLASSIFICATION	4.7575404601739395E-7	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.999998951425018	WITHOUT_CLASSIFICATION	1.048574981944956E-6	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9999998168743804	WITHOUT_CLASSIFICATION	1.831256194515672E-7	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.999998921291896	WITHOUT_CLASSIFICATION	1.0787081040161062E-6	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999994556091938	WITHOUT_CLASSIFICATION	5.443908061328917E-7	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999977400007225	WITHOUT_CLASSIFICATION	2.2599992776013013E-6	DEFECT
// background	WITHOUT_CLASSIFICATION	0.999996609736913	WITHOUT_CLASSIFICATION	3.3902630869290576E-6	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.9999964267575796	WITHOUT_CLASSIFICATION	3.5732424205017375E-6	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9999995176773245	WITHOUT_CLASSIFICATION	4.823226753911136E-7	DEFECT
// view	WITHOUT_CLASSIFICATION	0.9999964260820887	WITHOUT_CLASSIFICATION	3.5739179112054623E-6	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.9999971577657191	WITHOUT_CLASSIFICATION	2.842234281014368E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999996830170336	WITHOUT_CLASSIFICATION	3.169829664930631E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999919875855979	WITHOUT_CLASSIFICATION	8.012414401980864E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999992329460841	WITHOUT_CLASSIFICATION	7.670539159183566E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999973197831116	WITHOUT_CLASSIFICATION	2.680216888361694E-6	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.999999625567147	WITHOUT_CLASSIFICATION	3.744328529486317E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999989347039284	WITHOUT_CLASSIFICATION	1.0652960716050443E-6	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999997162293859	WITHOUT_CLASSIFICATION	2.8377061411671273E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.999996726893468	WITHOUT_CLASSIFICATION	3.27310653198965E-6	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999995363337708	WITHOUT_CLASSIFICATION	4.63666229175978E-7	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999928529486	WITHOUT_CLASSIFICATION	7.147051416774768E-9	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999928529486	WITHOUT_CLASSIFICATION	7.147051416774768E-9	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997108518779	WITHOUT_CLASSIFICATION	2.8914812216393384E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997108518779	WITHOUT_CLASSIFICATION	2.8914812216393384E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999997108518779	WITHOUT_CLASSIFICATION	2.8914812216393384E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999993672666228	WITHOUT_CLASSIFICATION	6.327333772787964E-7	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999995068933744	WITHOUT_CLASSIFICATION	4.931066256691851E-7	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999994556091938	WITHOUT_CLASSIFICATION	5.443908061328917E-7	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999994556091938	WITHOUT_CLASSIFICATION	5.443908061328917E-7	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999977400007225	WITHOUT_CLASSIFICATION	2.2599992776013013E-6	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.9999979648351718	WITHOUT_CLASSIFICATION	2.035164828105048E-6	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.9999992269361735	WITHOUT_CLASSIFICATION	7.730638265216159E-7	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.9999993038046364	WITHOUT_CLASSIFICATION	6.961953635193951E-7	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.9999979223599393	WITHOUT_CLASSIFICATION	2.0776400607294337E-6	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.9999995233647458	WITHOUT_CLASSIFICATION	4.766352541171808E-7	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.999999381861464	WITHOUT_CLASSIFICATION	6.181385359812428E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999994980359524	WITHOUT_CLASSIFICATION	5.01964047592788E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999992105355398	WITHOUT_CLASSIFICATION	7.894644603442848E-7	DEFECT
// label	WITHOUT_CLASSIFICATION	0.9999989368606713	WITHOUT_CLASSIFICATION	1.0631393286790523E-6	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.9999999485964034	WITHOUT_CLASSIFICATION	5.1403596522429294E-8	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.9999993925928781	WITHOUT_CLASSIFICATION	6.074071219041115E-7	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.9999965788387609	WITHOUT_CLASSIFICATION	3.421161239151547E-6	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.9999989045593798	WITHOUT_CLASSIFICATION	1.09544062015278E-6	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.9999993129134633	WITHOUT_CLASSIFICATION	6.870865367071976E-7	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.9999998609265399	WITHOUT_CLASSIFICATION	1.3907346005276347E-7	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.9999978599690211	WITHOUT_CLASSIFICATION	2.140030978908126E-6	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999996398172238	WITHOUT_CLASSIFICATION	3.601827761382308E-7	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.9999998908890685	WITHOUT_CLASSIFICATION	1.0911093149339863E-7	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.9999999058576682	WITHOUT_CLASSIFICATION	9.414233181770792E-8	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.9999999098578459	WITHOUT_CLASSIFICATION	9.014215402414407E-8	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.9999999464690881	WITHOUT_CLASSIFICATION	5.353091191804552E-8	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999417492161	WITHOUT_CLASSIFICATION	5.825078373336312E-8	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.999998271372914	WITHOUT_CLASSIFICATION	1.728627086023435E-6	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.999999267900494	WITHOUT_CLASSIFICATION	7.320995059562885E-7	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.9999997522187826	WITHOUT_CLASSIFICATION	2.4778121743035513E-7	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.9999997662598451	WITHOUT_CLASSIFICATION	2.3374015491777558E-7	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.9999999225874776	WITHOUT_CLASSIFICATION	7.74125223821086E-8	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.9999999626216637	WITHOUT_CLASSIFICATION	3.737833640430759E-8	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.999999948948596	WITHOUT_CLASSIFICATION	5.1051403986638116E-8	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.9999997480826187	WITHOUT_CLASSIFICATION	2.519173812789288E-7	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.9999999095881609	WITHOUT_CLASSIFICATION	9.041183908245245E-8	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.9999999328949865	WITHOUT_CLASSIFICATION	6.710501356433913E-8	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.9999999882251558	WITHOUT_CLASSIFICATION	1.1774844293096587E-8	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.9999999763771021	WITHOUT_CLASSIFICATION	2.362289780596553E-8	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999999015893242	WITHOUT_CLASSIFICATION	9.841067586155554E-8	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999999274886638	WITHOUT_CLASSIFICATION	7.251133621946087E-8	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999999260459529	WITHOUT_CLASSIFICATION	7.395404706647935E-8	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.99999908903259	WITHOUT_CLASSIFICATION	9.109674100642011E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.9999923893018869	WITHOUT_CLASSIFICATION	7.610698113007974E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999417492161	WITHOUT_CLASSIFICATION	5.825078373336312E-8	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999999346075866	WITHOUT_CLASSIFICATION	6.539241339761864E-8	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.9999998230253376	WITHOUT_CLASSIFICATION	1.7697466227877035E-7	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.999999934000046	WITHOUT_CLASSIFICATION	6.59999539703198E-8	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.9999992848652168	WITHOUT_CLASSIFICATION	7.151347832179957E-7	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.9999998727812746	WITHOUT_CLASSIFICATION	1.2721872538409308E-7	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.9999927278144863	WITHOUT_CLASSIFICATION	7.272185513569635E-6	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.9999996275079823	WITHOUT_CLASSIFICATION	3.7249201773751104E-7	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.9999974311854436	WITHOUT_CLASSIFICATION	2.5688145564886967E-6	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.9999980173893893	WITHOUT_CLASSIFICATION	1.9826106105770637E-6	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.9999962966349912	WITHOUT_CLASSIFICATION	3.7033650087921936E-6	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.9999900533968087	WITHOUT_CLASSIFICATION	9.946603191366033E-6	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.999998126606677	WITHOUT_CLASSIFICATION	1.873393322996836E-6	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.999997808817064	WITHOUT_CLASSIFICATION	2.19118293590025E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999748593692	WITHOUT_CLASSIFICATION	2.514063076095895E-8	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999748593692	WITHOUT_CLASSIFICATION	2.514063076095895E-8	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999748593692	WITHOUT_CLASSIFICATION	2.514063076095895E-8	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999727016204876	WITHOUT_CLASSIFICATION	2.7298379512358428E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999727016204876	WITHOUT_CLASSIFICATION	2.7298379512358428E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999727016204876	WITHOUT_CLASSIFICATION	2.7298379512358428E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999995239418474	WITHOUT_CLASSIFICATION	4.760581526019476E-7	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999995239418474	WITHOUT_CLASSIFICATION	4.760581526019476E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999995025493134	WITHOUT_CLASSIFICATION	4.974506866865582E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999995025493134	WITHOUT_CLASSIFICATION	4.974506866865582E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999995025493134	WITHOUT_CLASSIFICATION	4.974506866865582E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999995025493134	WITHOUT_CLASSIFICATION	4.974506866865582E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999992535479072	WITHOUT_CLASSIFICATION	7.464520928497237E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999992535479072	WITHOUT_CLASSIFICATION	7.464520928497237E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999992535479072	WITHOUT_CLASSIFICATION	7.464520928497237E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999992535479072	WITHOUT_CLASSIFICATION	7.464520928497237E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999954132856362	WITHOUT_CLASSIFICATION	4.586714363801645E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999954132856362	WITHOUT_CLASSIFICATION	4.586714363801645E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999954132856362	WITHOUT_CLASSIFICATION	4.586714363801645E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999954132856362	WITHOUT_CLASSIFICATION	4.586714363801645E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999954132856362	WITHOUT_CLASSIFICATION	4.586714363801645E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999990723297809	WITHOUT_CLASSIFICATION	9.276702191087674E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999990723297809	WITHOUT_CLASSIFICATION	9.276702191087674E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999990723297809	WITHOUT_CLASSIFICATION	9.276702191087674E-7	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999990723297809	WITHOUT_CLASSIFICATION	9.276702191087674E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999983111700832	WITHOUT_CLASSIFICATION	1.688829916896922E-6	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999983111700832	WITHOUT_CLASSIFICATION	1.688829916896922E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999995239418474	WITHOUT_CLASSIFICATION	4.760581526019476E-7	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999995025493134	WITHOUT_CLASSIFICATION	4.974506866865582E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999992535479072	WITHOUT_CLASSIFICATION	7.464520928497237E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999954132856362	WITHOUT_CLASSIFICATION	4.586714363801645E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.9999990723297809	WITHOUT_CLASSIFICATION	9.276702191087674E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.9999983111700832	WITHOUT_CLASSIFICATION	1.688829916896922E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999995491146871	WITHOUT_CLASSIFICATION	4.5088531284798054E-7	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.9999984543825704	WITHOUT_CLASSIFICATION	1.5456174296352293E-6	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.9999986175173969	WITHOUT_CLASSIFICATION	1.3824826030722564E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999966321445045	WITHOUT_CLASSIFICATION	3.367855495411158E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999966321445045	WITHOUT_CLASSIFICATION	3.367855495411158E-6	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999987167488101	WITHOUT_CLASSIFICATION	1.283251189834171E-6	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999987167488101	WITHOUT_CLASSIFICATION	1.283251189834171E-6	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999987167488101	WITHOUT_CLASSIFICATION	1.283251189834171E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999497118304	WITHOUT_CLASSIFICATION	5.028816966351023E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999497118304	WITHOUT_CLASSIFICATION	5.028816966351023E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.999684894718638	WITHOUT_CLASSIFICATION	3.151052813620828E-4	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.9999998018336415	WITHOUT_CLASSIFICATION	1.9816635859999164E-7	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.9999996778125565	WITHOUT_CLASSIFICATION	3.2218744356563626E-7	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.9999998914063131	WITHOUT_CLASSIFICATION	1.0859368690446349E-7	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.9999995839020835	WITHOUT_CLASSIFICATION	4.1609791647261806E-7	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.9999972675484625	WITHOUT_CLASSIFICATION	2.7324515373727254E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999930994962513	WITHOUT_CLASSIFICATION	6.900503748771847E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999971571047649	WITHOUT_CLASSIFICATION	2.8428952351488496E-6	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.999999776231983	WITHOUT_CLASSIFICATION	2.237680170499302E-7	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999105265506	WITHOUT_CLASSIFICATION	8.947344933874776E-8	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999966321445045	WITHOUT_CLASSIFICATION	3.367855495411158E-6	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999987167488101	WITHOUT_CLASSIFICATION	1.283251189834171E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999497118304	WITHOUT_CLASSIFICATION	5.028816966351023E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999497118304	WITHOUT_CLASSIFICATION	5.028816966351023E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999497118304	WITHOUT_CLASSIFICATION	5.028816966351023E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999497118304	WITHOUT_CLASSIFICATION	5.028816966351023E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999995360841631	WITHOUT_CLASSIFICATION	4.6391583678687124E-7	DEFECT
// map	WITHOUT_CLASSIFICATION	0.9999957837655195	WITHOUT_CLASSIFICATION	4.216234480529715E-6	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.9999999632379959	WITHOUT_CLASSIFICATION	3.676200415192983E-8	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.999999988252173	WITHOUT_CLASSIFICATION	1.1747827153994375E-8	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999716258979	WITHOUT_CLASSIFICATION	2.8374102011241275E-8	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.9999999916841015	WITHOUT_CLASSIFICATION	8.315898504129912E-9	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999898166837	WITHOUT_CLASSIFICATION	1.01833163097856E-8	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.9999999752451237	WITHOUT_CLASSIFICATION	2.4754876234102472E-8	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999999948556206	WITHOUT_CLASSIFICATION	5.144379418835094E-9	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.999999930142141	WITHOUT_CLASSIFICATION	6.98578590775084E-8	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.999999943704482	WITHOUT_CLASSIFICATION	5.6295517930087246E-8	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999999518221178	WITHOUT_CLASSIFICATION	4.817788219425679E-8	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999999060408981	WITHOUT_CLASSIFICATION	9.395910194071582E-8	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999999060408981	WITHOUT_CLASSIFICATION	9.395910194071582E-8	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999999060408981	WITHOUT_CLASSIFICATION	9.395910194071582E-8	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.9999999253821443	WITHOUT_CLASSIFICATION	7.46178556563862E-8	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.9999997343068667	WITHOUT_CLASSIFICATION	2.656931332430296E-7	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.9999996396332539	WITHOUT_CLASSIFICATION	3.60366746036861E-7	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.9999951130049499	WITHOUT_CLASSIFICATION	4.886995050053295E-6	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.9999996966002617	WITHOUT_CLASSIFICATION	3.0339973837575057E-7	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999732781063	WITHOUT_CLASSIFICATION	2.6721893755724157E-8	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999995709603452	WITHOUT_CLASSIFICATION	4.29039654828976E-7	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999994342886251	WITHOUT_CLASSIFICATION	5.657113749496079E-7	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999998343611561	WITHOUT_CLASSIFICATION	1.6563884388367E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.99999774757881	WITHOUT_CLASSIFICATION	2.252421190032817E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999930994962513	WITHOUT_CLASSIFICATION	6.900503748771847E-6	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999971571047649	WITHOUT_CLASSIFICATION	2.8428952351488496E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999497118304	WITHOUT_CLASSIFICATION	5.028816966351023E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999995360841631	WITHOUT_CLASSIFICATION	4.6391583678687124E-7	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999998343611561	WITHOUT_CLASSIFICATION	1.6563884388367E-7	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.99999774757881	WITHOUT_CLASSIFICATION	2.252421190032817E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999997010367273	WITHOUT_CLASSIFICATION	2.9896327264408934E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999994976990921	WITHOUT_CLASSIFICATION	5.023009079128348E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999994976990921	WITHOUT_CLASSIFICATION	5.023009079128348E-7	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9999998430306668	WITHOUT_CLASSIFICATION	1.5696933312593418E-7	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.9999998994250602	WITHOUT_CLASSIFICATION	1.0057493979831007E-7	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.9999988883861478	WITHOUT_CLASSIFICATION	1.111613852178365E-6	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.9999997452447044	WITHOUT_CLASSIFICATION	2.547552956319722E-7	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.9999999018114679	WITHOUT_CLASSIFICATION	9.818853203476054E-8	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.9999996707319245	WITHOUT_CLASSIFICATION	3.292680754821078E-7	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.9999997044622676	WITHOUT_CLASSIFICATION	2.9553773241601705E-7	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.9999987251304862	WITHOUT_CLASSIFICATION	1.274869513888408E-6	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999994273883522	WITHOUT_CLASSIFICATION	5.72611647657005E-7	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999992449814276	WITHOUT_CLASSIFICATION	7.550185724025364E-7	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.999999978389896	WITHOUT_CLASSIFICATION	2.1610104000725943E-8	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.9999999648958018	WITHOUT_CLASSIFICATION	3.510419820649786E-8	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.9999998794732533	WITHOUT_CLASSIFICATION	1.2052674675058375E-7	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.9999997557456866	WITHOUT_CLASSIFICATION	2.442543134117504E-7	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.9999997883264677	WITHOUT_CLASSIFICATION	2.1167353227748197E-7	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.9999985164179154	WITHOUT_CLASSIFICATION	1.4835820846504062E-6	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.9999993520022381	WITHOUT_CLASSIFICATION	6.479977618063146E-7	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.9999998893914231	WITHOUT_CLASSIFICATION	1.1060857693068937E-7	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.9999999208089068	WITHOUT_CLASSIFICATION	7.919109319357536E-8	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.999999845672915	WITHOUT_CLASSIFICATION	1.5432708501179832E-7	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.9999999566494481	WITHOUT_CLASSIFICATION	4.3350551806929075E-8	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.9999965577365507	WITHOUT_CLASSIFICATION	3.4422634492505806E-6	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999996385699894	WITHOUT_CLASSIFICATION	3.614300105581908E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999985564426505	WITHOUT_CLASSIFICATION	1.4435573495833336E-6	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.9999934054557214	WITHOUT_CLASSIFICATION	6.594544278731673E-6	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.9999970682624778	WITHOUT_CLASSIFICATION	2.9317375222113993E-6	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.9999994222528051	WITHOUT_CLASSIFICATION	5.777471948201576E-7	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.999997512644848	WITHOUT_CLASSIFICATION	2.4873551519286502E-6	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.9999789564159091	WITHOUT_CLASSIFICATION	2.1043584090902518E-5	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.9999999969227686	WITHOUT_CLASSIFICATION	3.077231359073988E-9	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.9999996969896654	WITHOUT_CLASSIFICATION	3.0301033454394275E-7	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.9999965173067319	WITHOUT_CLASSIFICATION	3.482693268046195E-6	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.9999996080829797	WITHOUT_CLASSIFICATION	3.9191702027018606E-7	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.999999346585543	WITHOUT_CLASSIFICATION	6.534144571123859E-7	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.999998260411254	WITHOUT_CLASSIFICATION	1.7395887460790422E-6	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.9999993538257386	WITHOUT_CLASSIFICATION	6.461742613421647E-7	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.9999991435679448	WITHOUT_CLASSIFICATION	8.564320551672608E-7	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999980834372789	WITHOUT_CLASSIFICATION	1.9165627211144187E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.999996855636902	WITHOUT_CLASSIFICATION	3.1443630980674476E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999747970443	WITHOUT_CLASSIFICATION	2.520295571485198E-8	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999986664881416	WITHOUT_CLASSIFICATION	1.3335118582796878E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999996830170336	WITHOUT_CLASSIFICATION	3.169829664930631E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999996109665141	WITHOUT_CLASSIFICATION	3.8903348588788384E-7	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999992329460841	WITHOUT_CLASSIFICATION	7.670539159183566E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999680960950914	WITHOUT_CLASSIFICATION	3.190390490865374E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.999999625567147	WITHOUT_CLASSIFICATION	3.744328529486317E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.999996726893468	WITHOUT_CLASSIFICATION	3.27310653198965E-6	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999996621779674	WITHOUT_CLASSIFICATION	3.3782203260134877E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.999999448868605	WITHOUT_CLASSIFICATION	5.511313949999483E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999999060408981	WITHOUT_CLASSIFICATION	9.395910194071582E-8	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999999060408981	WITHOUT_CLASSIFICATION	9.395910194071582E-8	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999999060408981	WITHOUT_CLASSIFICATION	9.395910194071582E-8	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999994976990921	WITHOUT_CLASSIFICATION	5.023009079128348E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999994976990921	WITHOUT_CLASSIFICATION	5.023009079128348E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999994976990921	WITHOUT_CLASSIFICATION	5.023009079128348E-7	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999996385699894	WITHOUT_CLASSIFICATION	3.614300105581908E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999985564426505	WITHOUT_CLASSIFICATION	1.4435573495833336E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.999994619702359	WITHOUT_CLASSIFICATION	5.380297641002339E-6	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.9999988325830377	WITHOUT_CLASSIFICATION	1.167416962395619E-6	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999999784532597	WITHOUT_CLASSIFICATION	2.154674023605071E-8	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.9999999784532597	WITHOUT_CLASSIFICATION	2.154674023605071E-8	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.9999998379766764	WITHOUT_CLASSIFICATION	1.6202332359246823E-7	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.9999968419271758	WITHOUT_CLASSIFICATION	3.158072824157785E-6	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.9999960408815665	WITHOUT_CLASSIFICATION	3.959118433500957E-6	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.9999968873458842	WITHOUT_CLASSIFICATION	3.1126541157445767E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999998650480917	WITHOUT_CLASSIFICATION	1.3495190834990125E-7	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999998650480917	WITHOUT_CLASSIFICATION	1.3495190834990125E-7	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.999999588888961	WITHOUT_CLASSIFICATION	4.1111103893268035E-7	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.9999991166436359	WITHOUT_CLASSIFICATION	8.833563640522341E-7	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.999999455935538	WITHOUT_CLASSIFICATION	5.440644620054318E-7	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.9999990536887883	WITHOUT_CLASSIFICATION	9.463112117478089E-7	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.9999999068745973	WITHOUT_CLASSIFICATION	9.31254027878415E-8	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999536233619	WITHOUT_CLASSIFICATION	4.6376638095271397E-8	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.9999992111826453	WITHOUT_CLASSIFICATION	7.888173546522017E-7	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.9999997811913146	WITHOUT_CLASSIFICATION	2.1880868534455308E-7	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.9999998585828352	WITHOUT_CLASSIFICATION	1.4141716485591656E-7	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.999999908849264	WITHOUT_CLASSIFICATION	9.115073594362072E-8	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.999999734830276	WITHOUT_CLASSIFICATION	2.651697239144487E-7	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.9999997410337006	WITHOUT_CLASSIFICATION	2.58966299364134E-7	DEFECT
// line	WITHOUT_CLASSIFICATION	0.9999978719041124	WITHOUT_CLASSIFICATION	2.1280958876777356E-6	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.9999956137982147	WITHOUT_CLASSIFICATION	4.386201785344341E-6	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.9999996620248363	WITHOUT_CLASSIFICATION	3.379751637332056E-7	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.9999902469077391	WITHOUT_CLASSIFICATION	9.753092260947518E-6	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.9999992349529914	WITHOUT_CLASSIFICATION	7.650470085686838E-7	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.9999984730165785	WITHOUT_CLASSIFICATION	1.5269834215468945E-6	DEFECT
// border	WITHOUT_CLASSIFICATION	0.9999987425363212	WITHOUT_CLASSIFICATION	1.2574636788376662E-6	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.9999993402434263	WITHOUT_CLASSIFICATION	6.597565737428027E-7	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999794257965888	WITHOUT_CLASSIFICATION	2.0574203411095506E-5	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.9999999354378027	WITHOUT_CLASSIFICATION	6.456219727065127E-8	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999998018666583	WITHOUT_CLASSIFICATION	1.9813334176395655E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999997010367273	WITHOUT_CLASSIFICATION	2.9896327264408934E-7	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9993418352441267	WITHOUT_CLASSIFICATION	6.581647558733065E-4	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999794257965888	WITHOUT_CLASSIFICATION	2.0574203411095506E-5	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999995028938011	WITHOUT_CLASSIFICATION	4.971061989747917E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999991289704759	WITHOUT_CLASSIFICATION	8.710295241138493E-7	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.9999991289704759	WITHOUT_CLASSIFICATION	8.710295241138493E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999959999627479	WITHOUT_CLASSIFICATION	4.0000372520220405E-6	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999959999627479	WITHOUT_CLASSIFICATION	4.0000372520220405E-6	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999989856650758	WITHOUT_CLASSIFICATION	1.0143349242171672E-6	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999998014799083	WITHOUT_CLASSIFICATION	1.9852009171941642E-7	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.9999996149379389	WITHOUT_CLASSIFICATION	3.8506206111698287E-7	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.999999445465683	WITHOUT_CLASSIFICATION	5.545343169954473E-7	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999987168419817	WITHOUT_CLASSIFICATION	1.2831580182761637E-6	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999987168419817	WITHOUT_CLASSIFICATION	1.2831580182761637E-6	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.9998814338897307	WITHOUT_CLASSIFICATION	1.1856611026927791E-4	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999994380048254	WITHOUT_CLASSIFICATION	5.619951747136367E-7	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.9999999932300673	WITHOUT_CLASSIFICATION	6.769932797963379E-9	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.9999993008363975	WITHOUT_CLASSIFICATION	6.991636024102755E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999996345176246	WITHOUT_CLASSIFICATION	3.654823754197519E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999972660380376	WITHOUT_CLASSIFICATION	2.73396196231224E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999998360781721	WITHOUT_CLASSIFICATION	1.6392182790239853E-7	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999507820336753	WITHOUT_CLASSIFICATION	4.921796632472405E-5	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999507820336753	WITHOUT_CLASSIFICATION	4.921796632472405E-5	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9998715558647392	WITHOUT_CLASSIFICATION	1.2844413526077891E-4	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.999999990913568	WITHOUT_CLASSIFICATION	9.08643197245136E-9	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.9999999551313036	WITHOUT_CLASSIFICATION	4.486869646686567E-8	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.9997269591878873	WITHOUT_CLASSIFICATION	2.730408121126685E-4	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.9999973316262286	WITHOUT_CLASSIFICATION	2.668373771297556E-6	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.9999942027109349	WITHOUT_CLASSIFICATION	5.797289065111236E-6	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.9999931785353955	WITHOUT_CLASSIFICATION	6.821464604511597E-6	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.9999718247323225	WITHOUT_CLASSIFICATION	2.8175267677591552E-5	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.9999677662700168	WITHOUT_CLASSIFICATION	3.22337299832933E-5	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.9998916638684524	WITHOUT_CLASSIFICATION	1.0833613154760172E-4	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.9999988090225469	WITHOUT_CLASSIFICATION	1.1909774531274555E-6	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.9999897983155223	WITHOUT_CLASSIFICATION	1.0201684477779219E-5	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.9999824132381748	WITHOUT_CLASSIFICATION	1.758676182512451E-5	DEFECT
// key	WITHOUT_CLASSIFICATION	0.9999960408505061	WITHOUT_CLASSIFICATION	3.95914949384352E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999989040082792	WITHOUT_CLASSIFICATION	1.0959917207667916E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999998444532165	WITHOUT_CLASSIFICATION	1.5554678346794326E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999999796813042	WITHOUT_CLASSIFICATION	2.0318695805130805E-7	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.9999992388304303	WITHOUT_CLASSIFICATION	7.611695696048103E-7	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.9999985372092868	WITHOUT_CLASSIFICATION	1.4627907131993647E-6	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.9999961834095652	WITHOUT_CLASSIFICATION	3.81659043487574E-6	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.9999998646065815	WITHOUT_CLASSIFICATION	1.3539341839528617E-7	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.9999999595566247	WITHOUT_CLASSIFICATION	4.044337540969028E-8	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999991379735863	WITHOUT_CLASSIFICATION	8.62026413618002E-7	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9999869680596619	WITHOUT_CLASSIFICATION	1.3031940337976963E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999994380048254	WITHOUT_CLASSIFICATION	5.619951747136367E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999996345176246	WITHOUT_CLASSIFICATION	3.654823754197519E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999996345176246	WITHOUT_CLASSIFICATION	3.654823754197519E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999696171104	WITHOUT_CLASSIFICATION	3.038288974137018E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999696171104	WITHOUT_CLASSIFICATION	3.038288974137018E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999696171104	WITHOUT_CLASSIFICATION	3.038288974137018E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999696171104	WITHOUT_CLASSIFICATION	3.038288974137018E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999972660380376	WITHOUT_CLASSIFICATION	2.73396196231224E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999972660380376	WITHOUT_CLASSIFICATION	2.73396196231224E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999972660380376	WITHOUT_CLASSIFICATION	2.73396196231224E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999972660380376	WITHOUT_CLASSIFICATION	2.73396196231224E-6	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.9999991379735863	WITHOUT_CLASSIFICATION	8.62026413618002E-7	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.9999110772076482	WITHOUT_CLASSIFICATION	8.892279235183112E-5	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.9999899759441331	WITHOUT_CLASSIFICATION	1.0024055866949053E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.9999880376539241	WITHOUT_CLASSIFICATION	1.1962346075875078E-5	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.9999991718234792	WITHOUT_CLASSIFICATION	8.281765208980552E-7	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.9999860806545652	WITHOUT_CLASSIFICATION	1.3919345434800476E-5	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.9999996827161778	WITHOUT_CLASSIFICATION	3.172838221501275E-7	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.9999757129099647	WITHOUT_CLASSIFICATION	2.4287090035306416E-5	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.9999994795631981	WITHOUT_CLASSIFICATION	5.20436801825747E-7	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999999681144641	WITHOUT_CLASSIFICATION	3.188553586756603E-8	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999999681144641	WITHOUT_CLASSIFICATION	3.188553586756603E-8	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.999999369438124	WITHOUT_CLASSIFICATION	6.305618759799122E-7	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.9999992333914813	WITHOUT_CLASSIFICATION	7.666085186486787E-7	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.999911340000252	WITHOUT_CLASSIFICATION	8.865999974809448E-5	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.9998427963178369	WITHOUT_CLASSIFICATION	1.572036821630846E-4	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.9999648785379986	WITHOUT_CLASSIFICATION	3.512146200128063E-5	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9997404653951504	WITHOUT_CLASSIFICATION	2.595346048496266E-4	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.9999965060753534	WITHOUT_CLASSIFICATION	3.4939246467037797E-6	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.9999952236801457	WITHOUT_CLASSIFICATION	4.776319854322177E-6	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.9999984059712412	WITHOUT_CLASSIFICATION	1.5940287587794908E-6	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.9999983375025666	WITHOUT_CLASSIFICATION	1.6624974333562405E-6	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999998794289333	WITHOUT_CLASSIFICATION	1.2057106671385274E-7	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999998794289333	WITHOUT_CLASSIFICATION	1.2057106671385274E-7	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999943441357912	WITHOUT_CLASSIFICATION	5.655864208679945E-6	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.9999987344893927	WITHOUT_CLASSIFICATION	1.2655106074065439E-6	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.9999993443224254	WITHOUT_CLASSIFICATION	6.55677574620934E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999604218685	WITHOUT_CLASSIFICATION	3.957813140801723E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999604218685	WITHOUT_CLASSIFICATION	3.957813140801723E-8	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.9999999377475574	WITHOUT_CLASSIFICATION	6.225244263395839E-8	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999850536807562	WITHOUT_CLASSIFICATION	1.4946319243893959E-5	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999850536807562	WITHOUT_CLASSIFICATION	1.4946319243893959E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999401615855507	WITHOUT_CLASSIFICATION	5.9838414449236884E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999401615855507	WITHOUT_CLASSIFICATION	5.9838414449236884E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999401615855507	WITHOUT_CLASSIFICATION	5.9838414449236884E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999553010933601	WITHOUT_CLASSIFICATION	4.469890663996608E-5	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999998471941198	WITHOUT_CLASSIFICATION	1.5280588004530865E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.9999999497118304	WITHOUT_CLASSIFICATION	5.028816966351023E-8	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999903492794752	WITHOUT_CLASSIFICATION	9.650720524783628E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.9999903492794752	WITHOUT_CLASSIFICATION	9.650720524783628E-6	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999943441357912	WITHOUT_CLASSIFICATION	5.655864208679945E-6	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999604218685	WITHOUT_CLASSIFICATION	3.957813140801723E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999604218685	WITHOUT_CLASSIFICATION	3.957813140801723E-8	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999401615855507	WITHOUT_CLASSIFICATION	5.9838414449236884E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999401615855507	WITHOUT_CLASSIFICATION	5.9838414449236884E-5	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999401615855507	WITHOUT_CLASSIFICATION	5.9838414449236884E-5	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999553010933601	WITHOUT_CLASSIFICATION	4.469890663996608E-5	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999998471941198	WITHOUT_CLASSIFICATION	1.5280588004530865E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999998725384727	WITHOUT_CLASSIFICATION	1.274615272444268E-7	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999678913194945	WITHOUT_CLASSIFICATION	3.210868050557586E-5	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.999999922021974	WITHOUT_CLASSIFICATION	7.797802609595593E-8	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.9999989770788059	WITHOUT_CLASSIFICATION	1.0229211941192203E-6	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999987026553259	WITHOUT_CLASSIFICATION	1.297344674142281E-6	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9999779130800303	WITHOUT_CLASSIFICATION	2.2086919969719783E-5	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9999780104656436	WITHOUT_CLASSIFICATION	2.1989534356386653E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999995921199845	WITHOUT_CLASSIFICATION	4.0788001552249987E-7	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999999944404729	WITHOUT_CLASSIFICATION	5.559527101153232E-8	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999999944404729	WITHOUT_CLASSIFICATION	5.559527101153232E-8	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.9999999663942983	WITHOUT_CLASSIFICATION	3.3605701667657095E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999457347805	WITHOUT_CLASSIFICATION	5.426521957280358E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999457347805	WITHOUT_CLASSIFICATION	5.426521957280358E-8	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9999998170365418	WITHOUT_CLASSIFICATION	1.8296345821092633E-7	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.9999928458764008	WITHOUT_CLASSIFICATION	7.154123599164318E-6	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.9999998033422931	WITHOUT_CLASSIFICATION	1.9665770686247457E-7	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.9999976219027227	WITHOUT_CLASSIFICATION	2.3780972773086164E-6	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999997967032479	WITHOUT_CLASSIFICATION	2.032967522024353E-7	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999997967032479	WITHOUT_CLASSIFICATION	2.032967522024353E-7	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999997967032479	WITHOUT_CLASSIFICATION	2.032967522024353E-7	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.9999600409392195	WITHOUT_CLASSIFICATION	3.995906078040338E-5	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.9999866915208617	WITHOUT_CLASSIFICATION	1.3308479138189375E-5	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999996863955039	WITHOUT_CLASSIFICATION	3.1360449607680557E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999998460746378	WITHOUT_CLASSIFICATION	1.5392536215531939E-7	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.9999977688533317	WITHOUT_CLASSIFICATION	2.2311466683771156E-6	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999993063864479	WITHOUT_CLASSIFICATION	6.936135521659639E-7	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999997850515939	WITHOUT_CLASSIFICATION	2.149484060177718E-7	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999977447559272	WITHOUT_CLASSIFICATION	2.255244072827289E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999977447559272	WITHOUT_CLASSIFICATION	2.255244072827289E-6	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999991449165183	WITHOUT_CLASSIFICATION	8.550834817796561E-7	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.9999998917390308	WITHOUT_CLASSIFICATION	1.0826096918930637E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999997010367273	WITHOUT_CLASSIFICATION	2.9896327264408934E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999997010367273	WITHOUT_CLASSIFICATION	2.9896327264408934E-7	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999998014799083	WITHOUT_CLASSIFICATION	1.9852009171941642E-7	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999678913194945	WITHOUT_CLASSIFICATION	3.210868050557586E-5	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999995921199845	WITHOUT_CLASSIFICATION	4.0788001552249987E-7	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999999944404729	WITHOUT_CLASSIFICATION	5.559527101153232E-8	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999998460746378	WITHOUT_CLASSIFICATION	1.5392536215531939E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999998460746378	WITHOUT_CLASSIFICATION	1.5392536215531939E-7	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999996863955039	WITHOUT_CLASSIFICATION	3.1360449607680557E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999998725384727	WITHOUT_CLASSIFICATION	1.274615272444268E-7	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999997850515939	WITHOUT_CLASSIFICATION	2.149484060177718E-7	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999993063864479	WITHOUT_CLASSIFICATION	6.936135521659639E-7	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.9999998012913001	WITHOUT_CLASSIFICATION	1.9870869987483784E-7	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.9996378565935184	WITHOUT_CLASSIFICATION	3.6214340648152584E-4	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.9999999629338033	WITHOUT_CLASSIFICATION	3.706619666868462E-8	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.9999940908193619	WITHOUT_CLASSIFICATION	5.909180638191369E-6	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999996602603146	WITHOUT_CLASSIFICATION	3.3973968534236624E-7	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999996602603146	WITHOUT_CLASSIFICATION	3.3973968534236624E-7	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999926238712187	WITHOUT_CLASSIFICATION	7.376128781318629E-6	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999972885650515	WITHOUT_CLASSIFICATION	2.711434948488697E-6	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999965643232289	WITHOUT_CLASSIFICATION	3.4356767710395883E-6	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.9999999292303912	WITHOUT_CLASSIFICATION	7.076960888834629E-8	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999997770539293	WITHOUT_CLASSIFICATION	2.2294607072886969E-7	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.999999990948098	WITHOUT_CLASSIFICATION	9.05190202962933E-9	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.9999999427100675	WITHOUT_CLASSIFICATION	5.728993234961304E-8	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.9999999312430402	WITHOUT_CLASSIFICATION	6.875695985240607E-8	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.9999980162627793	WITHOUT_CLASSIFICATION	1.9837372206694403E-6	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.9999967880318232	WITHOUT_CLASSIFICATION	3.211968176865629E-6	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.9999988426771225	WITHOUT_CLASSIFICATION	1.1573228775171594E-6	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.9999998730502596	WITHOUT_CLASSIFICATION	1.2694974032997616E-7	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.9999997398976175	WITHOUT_CLASSIFICATION	2.601023824705418E-7	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999944624713256	WITHOUT_CLASSIFICATION	5.5375286744342E-6	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.9999985524133093	WITHOUT_CLASSIFICATION	1.4475866906876441E-6	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.9999992696368715	WITHOUT_CLASSIFICATION	7.303631285547041E-7	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999963024329896	WITHOUT_CLASSIFICATION	3.6975670102585754E-6	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999999573732847	WITHOUT_CLASSIFICATION	4.2626715278006226E-8	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999934146118916	WITHOUT_CLASSIFICATION	6.585388108454514E-6	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9999989977182228	WITHOUT_CLASSIFICATION	1.0022817772089806E-6	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.9999991966583687	WITHOUT_CLASSIFICATION	8.033416312557459E-7	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.9999999440891113	WITHOUT_CLASSIFICATION	5.591088864563735E-8	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.99999922145363	WITHOUT_CLASSIFICATION	7.785463699948891E-7	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.9999999386466614	WITHOUT_CLASSIFICATION	6.135333856572453E-8	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.9999995494232915	WITHOUT_CLASSIFICATION	4.5057670849590605E-7	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.9999993967397449	WITHOUT_CLASSIFICATION	6.03260255048291E-7	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.9999986586000305	WITHOUT_CLASSIFICATION	1.341399969434084E-6	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999998371840795	WITHOUT_CLASSIFICATION	1.6281592047814856E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999970002556283	WITHOUT_CLASSIFICATION	2.9997443715940458E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.9999997010367273	WITHOUT_CLASSIFICATION	2.9896327264408934E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999934146118916	WITHOUT_CLASSIFICATION	6.585388108454514E-6	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.9999994422303234	WITHOUT_CLASSIFICATION	5.577696766206254E-7	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.9999849880344902	WITHOUT_CLASSIFICATION	1.5011965509707787E-5	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.9999906320902536	WITHOUT_CLASSIFICATION	9.367909746322883E-6	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.999997324929208	WITHOUT_CLASSIFICATION	2.675070792003351E-6	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.9999999808335891	WITHOUT_CLASSIFICATION	1.9166410868076074E-8	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.9999999770737712	WITHOUT_CLASSIFICATION	2.292622880785923E-8	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999999590987532	WITHOUT_CLASSIFICATION	4.0901246813745865E-8	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999999966369211	WITHOUT_CLASSIFICATION	3.363078833058864E-9	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999985707520009	WITHOUT_CLASSIFICATION	1.429247999066592E-6	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.9999995849568849	WITHOUT_CLASSIFICATION	4.1504311519056326E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.999994619702359	WITHOUT_CLASSIFICATION	5.380297641002339E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.9999984444624076	WITHOUT_CLASSIFICATION	1.5555375924231001E-6	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.9999980187371071	WITHOUT_CLASSIFICATION	1.9812628928103E-6	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9999842963689667	WITHOUT_CLASSIFICATION	1.5703631033381465E-5	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.99999407192265	WITHOUT_CLASSIFICATION	5.92807734999225E-6	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.9999830148911982	WITHOUT_CLASSIFICATION	1.6985108801755468E-5	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.9999999535779351	WITHOUT_CLASSIFICATION	4.642206493841677E-8	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.9999996756552421	WITHOUT_CLASSIFICATION	3.243447578579545E-7	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.9999981266560287	WITHOUT_CLASSIFICATION	1.8733439712752225E-6	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.9999996486849901	WITHOUT_CLASSIFICATION	3.5131500983537814E-7	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.9999997490196657	WITHOUT_CLASSIFICATION	2.5098033432486544E-7	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.9999999957644243	WITHOUT_CLASSIFICATION	4.235575664545868E-9	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999987722040603	WITHOUT_CLASSIFICATION	1.2277959397217512E-6	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999987722040603	WITHOUT_CLASSIFICATION	1.2277959397217512E-6	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9999976115748491	WITHOUT_CLASSIFICATION	2.388425150931246E-6	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.9999976467557705	WITHOUT_CLASSIFICATION	2.353244229509519E-6	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9999950287149982	WITHOUT_CLASSIFICATION	4.97128500176044E-6	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.9999909689161814	WITHOUT_CLASSIFICATION	9.031083818475434E-6	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.9999947408151334	WITHOUT_CLASSIFICATION	5.259184866570331E-6	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999904509394086	WITHOUT_CLASSIFICATION	9.54906059141615E-6	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.9999992502640103	WITHOUT_CLASSIFICATION	7.497359896698961E-7	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999990555729183	WITHOUT_CLASSIFICATION	9.444270817249684E-7	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.9999983825996637	WITHOUT_CLASSIFICATION	1.6174003362817294E-6	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.9999981887034016	WITHOUT_CLASSIFICATION	1.8112965983779961E-6	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.9999957668610686	WITHOUT_CLASSIFICATION	4.233138931386511E-6	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.9999985853240543	WITHOUT_CLASSIFICATION	1.414675945658835E-6	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.9999960426426582	WITHOUT_CLASSIFICATION	3.957357341900351E-6	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.9999819645065525	WITHOUT_CLASSIFICATION	1.8035493447484034E-5	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.999729120884075	WITHOUT_CLASSIFICATION	2.708791159250226E-4	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.999999991125094	WITHOUT_CLASSIFICATION	8.874906091201673E-9	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9999995572719528	WITHOUT_CLASSIFICATION	4.4272804725777733E-7	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999277719578685	WITHOUT_CLASSIFICATION	7.222804213154492E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999277719578685	WITHOUT_CLASSIFICATION	7.222804213154492E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999277719578685	WITHOUT_CLASSIFICATION	7.222804213154492E-5	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999981579746933	WITHOUT_CLASSIFICATION	1.8420253066813938E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999988700075131	WITHOUT_CLASSIFICATION	1.1299924869446455E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999988700075131	WITHOUT_CLASSIFICATION	1.1299924869446455E-6	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.9999992673116131	WITHOUT_CLASSIFICATION	7.326883868363588E-7	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999981204407473	WITHOUT_CLASSIFICATION	1.8795592527246724E-6	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999528138382605	WITHOUT_CLASSIFICATION	4.7186161739427236E-5	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.999989554832839	WITHOUT_CLASSIFICATION	1.0445167160976539E-5	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.999989554832839	WITHOUT_CLASSIFICATION	1.0445167160976539E-5	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.9999990496181766	WITHOUT_CLASSIFICATION	9.503818234614742E-7	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.999999168582323	WITHOUT_CLASSIFICATION	8.314176770790514E-7	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999998638719285	WITHOUT_CLASSIFICATION	1.361280715856102E-7	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999677470168	WITHOUT_CLASSIFICATION	3.2252983256196195E-8	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.9999989471318017	WITHOUT_CLASSIFICATION	1.0528681983039169E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999998638719285	WITHOUT_CLASSIFICATION	1.361280715856102E-7	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999677470168	WITHOUT_CLASSIFICATION	3.2252983256196195E-8	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.9999999757555922	WITHOUT_CLASSIFICATION	2.424440778325027E-8	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.9999999412077686	WITHOUT_CLASSIFICATION	5.879223139064392E-8	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999999433578692	WITHOUT_CLASSIFICATION	5.664213086014358E-8	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999999433578692	WITHOUT_CLASSIFICATION	5.664213086014358E-8	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.9999807716133821	WITHOUT_CLASSIFICATION	1.9228386617931425E-5	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.999979952302951	WITHOUT_CLASSIFICATION	2.0047697048947964E-5	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999977977306794	WITHOUT_CLASSIFICATION	2.2022693205683296E-6	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.9999501010073923	WITHOUT_CLASSIFICATION	4.989899260764949E-5	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.9999936901729093	WITHOUT_CLASSIFICATION	6.309827090688388E-6	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.9999964662539513	WITHOUT_CLASSIFICATION	3.5337460487725524E-6	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.9998566271187095	WITHOUT_CLASSIFICATION	1.433728812906213E-4	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.9999922241615862	WITHOUT_CLASSIFICATION	7.775838413843491E-6	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.9998752206983749	WITHOUT_CLASSIFICATION	1.2477930162507482E-4	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.9999699717238034	WITHOUT_CLASSIFICATION	3.0028276196483156E-5	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.9999498794236764	WITHOUT_CLASSIFICATION	5.0120576323660996E-5	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.9999936740661699	WITHOUT_CLASSIFICATION	6.325933830056045E-6	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.99999693200998	WITHOUT_CLASSIFICATION	3.0679900200212295E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999782135113034	WITHOUT_CLASSIFICATION	2.178648869659905E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998306099929128	WITHOUT_CLASSIFICATION	1.693900070871526E-4	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999997538763785	WITHOUT_CLASSIFICATION	2.4612362139804364E-7	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.9999999398266102	WITHOUT_CLASSIFICATION	6.017338979707929E-8	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.9999996609027624	WITHOUT_CLASSIFICATION	3.390972376991723E-7	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.999998997591099	WITHOUT_CLASSIFICATION	1.0024089009979484E-6	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.9999921498006435	WITHOUT_CLASSIFICATION	7.850199356396745E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999869071380552	WITHOUT_CLASSIFICATION	1.3092861944773512E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999841354311112	WITHOUT_CLASSIFICATION	1.5864568888822483E-5	DEFECT
// period	WITHOUT_CLASSIFICATION	0.9999972396708553	WITHOUT_CLASSIFICATION	2.760329144687154E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999989040082792	WITHOUT_CLASSIFICATION	1.0959917207667916E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999989040082792	WITHOUT_CLASSIFICATION	1.0959917207667916E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999998444532165	WITHOUT_CLASSIFICATION	1.5554678346794326E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999998444532165	WITHOUT_CLASSIFICATION	1.5554678346794326E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999999796813042	WITHOUT_CLASSIFICATION	2.0318695805130805E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999999796813042	WITHOUT_CLASSIFICATION	2.0318695805130805E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999995921199845	WITHOUT_CLASSIFICATION	4.0788001552249987E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999995921199845	WITHOUT_CLASSIFICATION	4.0788001552249987E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999997770539293	WITHOUT_CLASSIFICATION	2.2294607072886969E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.999994619702359	WITHOUT_CLASSIFICATION	5.380297641002339E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999277719578685	WITHOUT_CLASSIFICATION	7.222804213154492E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999277719578685	WITHOUT_CLASSIFICATION	7.222804213154492E-5	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999988700075131	WITHOUT_CLASSIFICATION	1.1299924869446455E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999988700075131	WITHOUT_CLASSIFICATION	1.1299924869446455E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999988700075131	WITHOUT_CLASSIFICATION	1.1299924869446455E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999981204407473	WITHOUT_CLASSIFICATION	1.8795592527246724E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999981204407473	WITHOUT_CLASSIFICATION	1.8795592527246724E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999981204407473	WITHOUT_CLASSIFICATION	1.8795592527246724E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999981579746933	WITHOUT_CLASSIFICATION	1.8420253066813938E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999981579746933	WITHOUT_CLASSIFICATION	1.8420253066813938E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999782135113034	WITHOUT_CLASSIFICATION	2.178648869659905E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998306099929128	WITHOUT_CLASSIFICATION	1.693900070871526E-4	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999994777387134	WITHOUT_CLASSIFICATION	5.22261286537663E-7	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.9999989331321113	WITHOUT_CLASSIFICATION	1.0668678887682346E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999957284040526	WITHOUT_CLASSIFICATION	4.271595947441595E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999957284040526	WITHOUT_CLASSIFICATION	4.271595947441595E-6	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.9999916267685283	WITHOUT_CLASSIFICATION	8.37323147170152E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999995632821446	WITHOUT_CLASSIFICATION	4.367178553831394E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999957284040526	WITHOUT_CLASSIFICATION	4.271595947441595E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999704436425706	WITHOUT_CLASSIFICATION	2.9556357429464633E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999995813943647	WITHOUT_CLASSIFICATION	4.1860563521324765E-7	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999995813943647	WITHOUT_CLASSIFICATION	4.1860563521324765E-7	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999995813943647	WITHOUT_CLASSIFICATION	4.1860563521324765E-7	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999997708639027	WITHOUT_CLASSIFICATION	2.2913609724206664E-7	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9999987022720447	WITHOUT_CLASSIFICATION	1.2977279552374987E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999986838435164	WITHOUT_CLASSIFICATION	1.3161564836582482E-6	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999777743891274	WITHOUT_CLASSIFICATION	2.222561087266177E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999568459348	WITHOUT_CLASSIFICATION	4.315406518479594E-8	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999568459348	WITHOUT_CLASSIFICATION	4.315406518479594E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999886192540234	WITHOUT_CLASSIFICATION	1.1380745976605902E-5	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999782923397478	WITHOUT_CLASSIFICATION	2.1707660252154122E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999869071380552	WITHOUT_CLASSIFICATION	1.3092861944773512E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999841354311112	WITHOUT_CLASSIFICATION	1.5864568888822483E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999994976990921	WITHOUT_CLASSIFICATION	5.023009079128348E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999994976990921	WITHOUT_CLASSIFICATION	5.023009079128348E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999989040082792	WITHOUT_CLASSIFICATION	1.0959917207667916E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999998444532165	WITHOUT_CLASSIFICATION	1.5554678346794326E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999999796813042	WITHOUT_CLASSIFICATION	2.0318695805130805E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999995921199845	WITHOUT_CLASSIFICATION	4.0788001552249987E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999995921199845	WITHOUT_CLASSIFICATION	4.0788001552249987E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9999995921199845	WITHOUT_CLASSIFICATION	4.0788001552249987E-7	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999999944404729	WITHOUT_CLASSIFICATION	5.559527101153232E-8	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999999944404729	WITHOUT_CLASSIFICATION	5.559527101153232E-8	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999997770539293	WITHOUT_CLASSIFICATION	2.2294607072886969E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998306099929128	WITHOUT_CLASSIFICATION	1.693900070871526E-4	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998306099929128	WITHOUT_CLASSIFICATION	1.693900070871526E-4	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.999998997591099	WITHOUT_CLASSIFICATION	1.0024089009979484E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999957284040526	WITHOUT_CLASSIFICATION	4.271595947441595E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999995813943647	WITHOUT_CLASSIFICATION	4.1860563521324765E-7	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999995632821446	WITHOUT_CLASSIFICATION	4.367178553831394E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999704436425706	WITHOUT_CLASSIFICATION	2.9556357429464633E-5	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999704436425706	WITHOUT_CLASSIFICATION	2.9556357429464633E-5	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999997708639027	WITHOUT_CLASSIFICATION	2.2913609724206664E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999568459348	WITHOUT_CLASSIFICATION	4.315406518479594E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999886192540234	WITHOUT_CLASSIFICATION	1.1380745976605902E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999986838435164	WITHOUT_CLASSIFICATION	1.3161564836582482E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999986838435164	WITHOUT_CLASSIFICATION	1.3161564836582482E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999986838435164	WITHOUT_CLASSIFICATION	1.3161564836582482E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999992490298137	WITHOUT_CLASSIFICATION	7.509701862623238E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999992490298137	WITHOUT_CLASSIFICATION	7.509701862623238E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999992490298137	WITHOUT_CLASSIFICATION	7.509701862623238E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999998816027112	WITHOUT_CLASSIFICATION	1.183972887380261E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999998816027112	WITHOUT_CLASSIFICATION	1.183972887380261E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999998816027112	WITHOUT_CLASSIFICATION	1.183972887380261E-7	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.9999678201383359	WITHOUT_CLASSIFICATION	3.217986166410881E-5	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.9999997584980088	WITHOUT_CLASSIFICATION	2.4150199112734474E-7	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999846960219101	WITHOUT_CLASSIFICATION	1.5303978089910075E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999855168564877	WITHOUT_CLASSIFICATION	1.4483143512228555E-5	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.9999993743066765	WITHOUT_CLASSIFICATION	6.256933234398246E-7	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.9999998821653799	WITHOUT_CLASSIFICATION	1.1783462012971653E-7	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.9999991093667604	WITHOUT_CLASSIFICATION	8.906332395163856E-7	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.9999355597974702	WITHOUT_CLASSIFICATION	6.444020252982212E-5	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.9999987557212445	WITHOUT_CLASSIFICATION	1.24427875546544E-6	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999997051600215	WITHOUT_CLASSIFICATION	2.9483997855952025E-7	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.9999991328134535	WITHOUT_CLASSIFICATION	8.671865464264367E-7	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999987623856575	WITHOUT_CLASSIFICATION	1.2376143424063706E-6	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.9917983161025793	WITHOUT_CLASSIFICATION	0.008201683897420691	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.9999948180720614	WITHOUT_CLASSIFICATION	5.181927938630351E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994417397048	WITHOUT_CLASSIFICATION	5.582602951697337E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999869071380552	WITHOUT_CLASSIFICATION	1.3092861944773512E-5	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999841354311112	WITHOUT_CLASSIFICATION	1.5864568888822483E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999994976990921	WITHOUT_CLASSIFICATION	5.023009079128348E-7	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.999999724534126	WITHOUT_CLASSIFICATION	2.754658740437869E-7	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.9999983569767287	WITHOUT_CLASSIFICATION	1.643023271399892E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999989040082792	WITHOUT_CLASSIFICATION	1.0959917207667916E-6	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999998444532165	WITHOUT_CLASSIFICATION	1.5554678346794326E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.999999796813042	WITHOUT_CLASSIFICATION	2.0318695805130805E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999997770539293	WITHOUT_CLASSIFICATION	2.2294607072886969E-7	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999987183258664	WITHOUT_CLASSIFICATION	1.2816741335884393E-6	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9999959165930118	WITHOUT_CLASSIFICATION	4.083406988122457E-6	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.999729120884075	WITHOUT_CLASSIFICATION	2.708791159250226E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999782135113034	WITHOUT_CLASSIFICATION	2.178648869659905E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998306099929128	WITHOUT_CLASSIFICATION	1.693900070871526E-4	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999995813943647	WITHOUT_CLASSIFICATION	4.1860563521324765E-7	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999995632821446	WITHOUT_CLASSIFICATION	4.367178553831394E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999704436425706	WITHOUT_CLASSIFICATION	2.9556357429464633E-5	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999777743891274	WITHOUT_CLASSIFICATION	2.222561087266177E-5	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999782923397478	WITHOUT_CLASSIFICATION	2.1707660252154122E-5	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999846960219101	WITHOUT_CLASSIFICATION	1.5303978089910075E-5	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999855168564877	WITHOUT_CLASSIFICATION	1.4483143512228555E-5	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999998136226224	WITHOUT_CLASSIFICATION	1.8637737768064226E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999976346153328	WITHOUT_CLASSIFICATION	2.365384667288827E-6	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.9999234045176153	WITHOUT_CLASSIFICATION	7.659548238472415E-5	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.9999999751199893	WITHOUT_CLASSIFICATION	2.4880010722934122E-8	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.9999986683471601	WITHOUT_CLASSIFICATION	1.3316528397996506E-6	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.9999875828977859	WITHOUT_CLASSIFICATION	1.241710221408734E-5	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.9999993319487943	WITHOUT_CLASSIFICATION	6.680512056473193E-7	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.9999954309853735	WITHOUT_CLASSIFICATION	4.569014626552782E-6	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.999999747364072	WITHOUT_CLASSIFICATION	2.5263592796147976E-7	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.999989521374271	WITHOUT_CLASSIFICATION	1.0478625729113713E-5	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999947367623173	WITHOUT_CLASSIFICATION	5.263237682663653E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999947367623173	WITHOUT_CLASSIFICATION	5.263237682663653E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999944936490495	WITHOUT_CLASSIFICATION	5.506350950462959E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999944936490495	WITHOUT_CLASSIFICATION	5.506350950462959E-6	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.9999998469694233	WITHOUT_CLASSIFICATION	1.530305767449391E-7	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999915787456217	WITHOUT_CLASSIFICATION	8.421254378312706E-6	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9999970434318078	WITHOUT_CLASSIFICATION	2.9565681921461263E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999865017654523	WITHOUT_CLASSIFICATION	1.3498234547726417E-5	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9999994137754981	WITHOUT_CLASSIFICATION	5.862245020311261E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9997894348680022	WITHOUT_CLASSIFICATION	2.1056513199785282E-4	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9996959573196039	WITHOUT_CLASSIFICATION	3.040426803960295E-4	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9733436101072421	WITHOUT_CLASSIFICATION	0.026656389892757874	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999992515529379	WITHOUT_CLASSIFICATION	7.484470622008102E-7	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.9999996103376059	WITHOUT_CLASSIFICATION	3.8966239412430284E-7	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999998657709815	WITHOUT_CLASSIFICATION	1.3422901846283587E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.9999998007073773	WITHOUT_CLASSIFICATION	1.9929262276590478E-7	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.9999276962039856	WITHOUT_CLASSIFICATION	7.23037960143572E-5	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.9999986710854508	WITHOUT_CLASSIFICATION	1.3289145492661234E-6	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999996379463925	WITHOUT_CLASSIFICATION	3.62053607430019E-7	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.999999933345799	WITHOUT_CLASSIFICATION	6.665420101960473E-8	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.9994810887622473	WITHOUT_CLASSIFICATION	5.189112377526874E-4	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999789667150843	WITHOUT_CLASSIFICATION	2.1033284915674512E-5	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999995747974811	WITHOUT_CLASSIFICATION	4.252025188852971E-7	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.9999941209767758	WITHOUT_CLASSIFICATION	5.87902322428744E-6	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.9999986768018594	WITHOUT_CLASSIFICATION	1.3231981405492248E-6	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.9999984615356147	WITHOUT_CLASSIFICATION	1.5384643853491851E-6	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.9999738333684431	WITHOUT_CLASSIFICATION	2.6166631556891914E-5	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999962618579475	WITHOUT_CLASSIFICATION	3.7381420524390154E-6	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.9999994766136755	WITHOUT_CLASSIFICATION	5.233863244050575E-7	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9996959573196039	WITHOUT_CLASSIFICATION	3.040426803960295E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9996959573196039	WITHOUT_CLASSIFICATION	3.040426803960295E-4	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991689843422	WITHOUT_CLASSIFICATION	8.310156578969226E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999071756087	WITHOUT_CLASSIFICATION	9.282439128227783E-8	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999071756087	WITHOUT_CLASSIFICATION	9.282439128227783E-8	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.9999971619360051	WITHOUT_CLASSIFICATION	2.8380639950178782E-6	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9973988004844033	WITHOUT_CLASSIFICATION	0.0026011995155967717	DEFECT
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.9999997903397048	WITHOUT_CLASSIFICATION	2.0966029517657434E-7	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.999948321672746	WITHOUT_CLASSIFICATION	5.1678327253944526E-5	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.9999978352762262	WITHOUT_CLASSIFICATION	2.1647237737363037E-6	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999988154578199	WITHOUT_CLASSIFICATION	1.184542180032634E-6	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999988154578199	WITHOUT_CLASSIFICATION	1.184542180032634E-6	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999708828701	WITHOUT_CLASSIFICATION	2.9117129896778835E-8	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999061405099	WITHOUT_CLASSIFICATION	9.385949001551735E-8	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999099510189425	WITHOUT_CLASSIFICATION	9.004898105752781E-5	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9990427679780346	WITHOUT_CLASSIFICATION	9.572320219654161E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.9996707320033517	WITHOUT_CLASSIFICATION	3.2926799664830843E-4	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.9999978191756873	WITHOUT_CLASSIFICATION	2.180824312826282E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9999997222166241	WITHOUT_CLASSIFICATION	2.7778337593390825E-7	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.9999996491889919	WITHOUT_CLASSIFICATION	3.5081100820826804E-7	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.9999998826098313	WITHOUT_CLASSIFICATION	1.1739016872125489E-7	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.9999978559944037	WITHOUT_CLASSIFICATION	2.1440055963491937E-6	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9999964447337625	WITHOUT_CLASSIFICATION	3.55526623761295E-6	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999984548451352	WITHOUT_CLASSIFICATION	1.5451548648654034E-6	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.999996465554539	WITHOUT_CLASSIFICATION	3.534445460995768E-6	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999982430177385	WITHOUT_CLASSIFICATION	1.7569822614298751E-6	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.9999992359987202	WITHOUT_CLASSIFICATION	7.640012798627292E-7	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.9999817607187306	WITHOUT_CLASSIFICATION	1.8239281269368862E-5	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999777119949842	WITHOUT_CLASSIFICATION	2.2288005015764592E-5	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.999984556576353	WITHOUT_CLASSIFICATION	1.5443423646999027E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999808552704	WITHOUT_CLASSIFICATION	1.914472951858834E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999995491146871	WITHOUT_CLASSIFICATION	4.5088531284798054E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.9999975778021568	WITHOUT_CLASSIFICATION	2.4221978431617835E-6	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.9999921888584593	WITHOUT_CLASSIFICATION	7.811141540687645E-6	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999999114390569	WITHOUT_CLASSIFICATION	8.856094318218466E-8	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.999999806256933	WITHOUT_CLASSIFICATION	1.937430669482846E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999986476425767	WITHOUT_CLASSIFICATION	1.3523574232882508E-6	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999994767868767	WITHOUT_CLASSIFICATION	5.232131232992889E-7	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999999587736266	WITHOUT_CLASSIFICATION	4.1226373318033354E-8	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999999587736266	WITHOUT_CLASSIFICATION	4.1226373318033354E-8	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.9999997256544592	WITHOUT_CLASSIFICATION	2.743455409042658E-7	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9999999994448753	WITHOUT_CLASSIFICATION	5.551246616052476E-10	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.9606952568867109	WITHOUT_CLASSIFICATION	0.03930474311328922	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.9999989558945661	WITHOUT_CLASSIFICATION	1.0441054339838912E-6	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.9999764332461134	WITHOUT_CLASSIFICATION	2.3566753886622695E-5	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999904509394086	WITHOUT_CLASSIFICATION	9.54906059141615E-6	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999990555729183	WITHOUT_CLASSIFICATION	9.444270817249684E-7	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999987183258664	WITHOUT_CLASSIFICATION	1.2816741335884393E-6	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9999959165930118	WITHOUT_CLASSIFICATION	4.083406988122457E-6	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9999277719578685	WITHOUT_CLASSIFICATION	7.222804213154492E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999782135113034	WITHOUT_CLASSIFICATION	2.178648869659905E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999782135113034	WITHOUT_CLASSIFICATION	2.178648869659905E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9998306099929128	WITHOUT_CLASSIFICATION	1.693900070871526E-4	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.999999241920472	WITHOUT_CLASSIFICATION	7.580795279659659E-7	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.999998997591099	WITHOUT_CLASSIFICATION	1.0024089009979484E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.999998997591099	WITHOUT_CLASSIFICATION	1.0024089009979484E-6	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999957284040526	WITHOUT_CLASSIFICATION	4.271595947441595E-6	DEFECT
// open	WITHOUT_CLASSIFICATION	0.999998174475791	WITHOUT_CLASSIFICATION	1.8255242089376986E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999995632821446	WITHOUT_CLASSIFICATION	4.367178553831394E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.9999999568459348	WITHOUT_CLASSIFICATION	4.315406518479594E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999886192540234	WITHOUT_CLASSIFICATION	1.1380745976605902E-5	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999886192540234	WITHOUT_CLASSIFICATION	1.1380745976605902E-5	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999986838435164	WITHOUT_CLASSIFICATION	1.3161564836582482E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999986838435164	WITHOUT_CLASSIFICATION	1.3161564836582482E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999986838435164	WITHOUT_CLASSIFICATION	1.3161564836582482E-6	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999986838435164	WITHOUT_CLASSIFICATION	1.3161564836582482E-6	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999998136226224	WITHOUT_CLASSIFICATION	1.8637737768064226E-7	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999998136226224	WITHOUT_CLASSIFICATION	1.8637737768064226E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999976346153328	WITHOUT_CLASSIFICATION	2.365384667288827E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999976346153328	WITHOUT_CLASSIFICATION	2.365384667288827E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999998136463876	WITHOUT_CLASSIFICATION	1.863536124467414E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999997723838454	WITHOUT_CLASSIFICATION	2.2761615471810582E-7	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.999999639015075	WITHOUT_CLASSIFICATION	3.609849250424239E-7	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.999999639015075	WITHOUT_CLASSIFICATION	3.609849250424239E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999997723838454	WITHOUT_CLASSIFICATION	2.2761615471810582E-7	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.9999976363776755	WITHOUT_CLASSIFICATION	2.363622324485535E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.9999998136463876	WITHOUT_CLASSIFICATION	1.863536124467414E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999974821151862	WITHOUT_CLASSIFICATION	2.5178848136396504E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999974821151862	WITHOUT_CLASSIFICATION	2.5178848136396504E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999974821151862	WITHOUT_CLASSIFICATION	2.5178848136396504E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999974821151862	WITHOUT_CLASSIFICATION	2.5178848136396504E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999974821151862	WITHOUT_CLASSIFICATION	2.5178848136396504E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999974821151862	WITHOUT_CLASSIFICATION	2.5178848136396504E-6	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999997066586	WITHOUT_CLASSIFICATION	2.93341253780775E-10	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999987090825	WITHOUT_CLASSIFICATION	1.2909174968987416E-9	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.999999996118987	WITHOUT_CLASSIFICATION	3.881012921141436E-9	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999974821151862	WITHOUT_CLASSIFICATION	2.5178848136396504E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999974821151862	WITHOUT_CLASSIFICATION	2.5178848136396504E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999974821151862	WITHOUT_CLASSIFICATION	2.5178848136396504E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999974821151862	WITHOUT_CLASSIFICATION	2.5178848136396504E-6	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999974821151862	WITHOUT_CLASSIFICATION	2.5178848136396504E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.9999995389915087	WITHOUT_CLASSIFICATION	4.610084913251877E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999972491189572	WITHOUT_CLASSIFICATION	2.7508810429410966E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999972491189572	WITHOUT_CLASSIFICATION	2.7508810429410966E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999972491189572	WITHOUT_CLASSIFICATION	2.7508810429410966E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999972491189572	WITHOUT_CLASSIFICATION	2.7508810429410966E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9998762911526053	WITHOUT_CLASSIFICATION	1.2370884739454902E-4	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999944042431804	WITHOUT_CLASSIFICATION	5.59575681963509E-6	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999944042431804	WITHOUT_CLASSIFICATION	5.59575681963509E-6	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.9999977469704832	WITHOUT_CLASSIFICATION	2.2530295168678604E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999993684089077	WITHOUT_CLASSIFICATION	6.315910923816012E-7	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999993684089077	WITHOUT_CLASSIFICATION	6.315910923816012E-7	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9999491014403087	WITHOUT_CLASSIFICATION	5.0898559691387637E-5	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999993684089077	WITHOUT_CLASSIFICATION	6.315910923816012E-7	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999852951743	WITHOUT_CLASSIFICATION	1.4704825741897753E-8	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999972491189572	WITHOUT_CLASSIFICATION	2.7508810429410966E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999972491189572	WITHOUT_CLASSIFICATION	2.7508810429410966E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999630508778669	WITHOUT_CLASSIFICATION	3.6949122133075546E-5	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999970002556283	WITHOUT_CLASSIFICATION	2.9997443715940458E-6	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.998992550973177	WITHOUT_CLASSIFICATION	0.0010074490268230688	DEFECT
// todo: not serialized yet	DEFECT	0.9990543135714971	WITHOUT_CLASSIFICATION	9.456864285028476E-4	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.9991162521917836	WITHOUT_CLASSIFICATION	8.837478082163932E-4	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.7512973780890883	WITHOUT_CLASSIFICATION	0.2487026219109118	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.7512973780890883	WITHOUT_CLASSIFICATION	0.2487026219109118	DEFECT
// TODO: Check this result...	DEFECT	0.9822332687646211	WITHOUT_CLASSIFICATION	0.01776673123537888	DEFECT
// TODO: Check this result...	DEFECT	0.9822332687646211	WITHOUT_CLASSIFICATION	0.01776673123537888	DEFECT
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9999840784951674	WITHOUT_CLASSIFICATION	1.5921504832672396E-5	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9999812089961413	WITHOUT_CLASSIFICATION	1.8791003858683714E-5	DEFECT
