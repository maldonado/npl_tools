// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999995046848774	WITHOUT_CLASSIFICATION	4.953151226136277E-7	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999986191733145	WITHOUT_CLASSIFICATION	1.3808266856020718E-6	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999999113053561	WITHOUT_CLASSIFICATION	8.869464378665724E-8	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999982312177241	WITHOUT_CLASSIFICATION	1.7687822758770745E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999985308731881	WITHOUT_CLASSIFICATION	1.469126811922651E-6	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999874172117535	WITHOUT_CLASSIFICATION	1.2582788246387657E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.999998183567493	WITHOUT_CLASSIFICATION	1.8164325069931276E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9999566803005315	WITHOUT_CLASSIFICATION	4.331969946854138E-5	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999964258067701	WITHOUT_CLASSIFICATION	3.5741932299628617E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999929972103353	WITHOUT_CLASSIFICATION	7.002789664799122E-6	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999997152279352	WITHOUT_CLASSIFICATION	2.847720648283081E-7	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999990544682004	WITHOUT_CLASSIFICATION	9.455317996862137E-7	DEFECT
// interval	WITHOUT_CLASSIFICATION	0.9999999158534962	WITHOUT_CLASSIFICATION	8.414650383146916E-8	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999993112973049	WITHOUT_CLASSIFICATION	6.887026950648966E-7	DEFECT
// dial shape	WITHOUT_CLASSIFICATION	0.9999990846957487	WITHOUT_CLASSIFICATION	9.153042512413856E-7	DEFECT
// dial background paint	WITHOUT_CLASSIFICATION	0.9999982359816145	WITHOUT_CLASSIFICATION	1.7640183855130888E-6	DEFECT
// seriesPaint	WITHOUT_CLASSIFICATION	0.9999999405997633	WITHOUT_CLASSIFICATION	5.940023684583463E-8	DEFECT
// seriesPaintList	WITHOUT_CLASSIFICATION	0.9999999591834062	WITHOUT_CLASSIFICATION	4.0816593870863915E-8	DEFECT
// baseSeriesPaint	WITHOUT_CLASSIFICATION	0.9999999766886838	WITHOUT_CLASSIFICATION	2.33113161895334E-8	DEFECT
// seriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999756550402	WITHOUT_CLASSIFICATION	2.4344959795303445E-8	DEFECT
// seriesOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999999832714753	WITHOUT_CLASSIFICATION	1.672852464289821E-8	DEFECT
// baseSeriesOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999904459466	WITHOUT_CLASSIFICATION	9.554053543520379E-9	DEFECT
// seriesOutlineStroke	WITHOUT_CLASSIFICATION	0.9999961463021363	WITHOUT_CLASSIFICATION	3.853697863748178E-6	DEFECT
// seriesOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999974574178008	WITHOUT_CLASSIFICATION	2.542582199208775E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999999247812197	WITHOUT_CLASSIFICATION	7.521878032585702E-8	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999445651539899	WITHOUT_CLASSIFICATION	5.543484601006439E-5	DEFECT
// high	WITHOUT_CLASSIFICATION	0.9999951706342056	WITHOUT_CLASSIFICATION	4.8293657943372564E-6	DEFECT
// low	WITHOUT_CLASSIFICATION	0.9999857483201425	WITHOUT_CLASSIFICATION	1.4251679857342208E-5	DEFECT
// close	WITHOUT_CLASSIFICATION	0.9999997908408546	WITHOUT_CLASSIFICATION	2.0915914535386966E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999942259752833	WITHOUT_CLASSIFICATION	5.7740247167683855E-6	DEFECT
// there should be no change event when clearing an empty series	WITHOUT_CLASSIFICATION	0.9999990008126252	WITHOUT_CLASSIFICATION	9.991873748482311E-7	DEFECT
// clean up	WITHOUT_CLASSIFICATION	0.9999997711231923	WITHOUT_CLASSIFICATION	2.288768077876975E-7	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999997482662608	WITHOUT_CLASSIFICATION	2.5173373913092107E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999826501744082	WITHOUT_CLASSIFICATION	1.73498255917082E-5	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.999998541800435	WITHOUT_CLASSIFICATION	1.4581995650623468E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999995576283854	WITHOUT_CLASSIFICATION	4.423716145998964E-7	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999959501442448	WITHOUT_CLASSIFICATION	4.049855755135943E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999988218102566	WITHOUT_CLASSIFICATION	1.178189743475941E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999810846812403	WITHOUT_CLASSIFICATION	1.891531875965499E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999810846812403	WITHOUT_CLASSIFICATION	1.891531875965499E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999810846812403	WITHOUT_CLASSIFICATION	1.891531875965499E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999810846812403	WITHOUT_CLASSIFICATION	1.891531875965499E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999810846812403	WITHOUT_CLASSIFICATION	1.891531875965499E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999810846812403	WITHOUT_CLASSIFICATION	1.891531875965499E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999810846812403	WITHOUT_CLASSIFICATION	1.891531875965499E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999810846812403	WITHOUT_CLASSIFICATION	1.891531875965499E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999810846812403	WITHOUT_CLASSIFICATION	1.891531875965499E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999810846812403	WITHOUT_CLASSIFICATION	1.891531875965499E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999810846812403	WITHOUT_CLASSIFICATION	1.891531875965499E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999810846812403	WITHOUT_CLASSIFICATION	1.891531875965499E-5	DEFECT
// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);	WITHOUT_CLASSIFICATION	0.9999998380863571	WITHOUT_CLASSIFICATION	1.619136429356714E-7	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999566495005	WITHOUT_CLASSIFICATION	4.3350499476771716E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999566495005	WITHOUT_CLASSIFICATION	4.3350499476771716E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999566495005	WITHOUT_CLASSIFICATION	4.3350499476771716E-8	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999987469975068	WITHOUT_CLASSIFICATION	1.2530024932773414E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999986998669	WITHOUT_CLASSIFICATION	1.3001330687494048E-9	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999998897842401	WITHOUT_CLASSIFICATION	1.1021575988712725E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999995336838802	WITHOUT_CLASSIFICATION	4.663161198635123E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999996564482568	WITHOUT_CLASSIFICATION	3.435517431409492E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999996564482568	WITHOUT_CLASSIFICATION	3.435517431409492E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999996564482568	WITHOUT_CLASSIFICATION	3.435517431409492E-7	DEFECT
// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...	WITHOUT_CLASSIFICATION	0.9999999999336002	WITHOUT_CLASSIFICATION	6.639971116215059E-11	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999492039446	WITHOUT_CLASSIFICATION	5.07960552913806E-8	DEFECT
// create a legend, if requested...	WITHOUT_CLASSIFICATION	0.9999948537878395	WITHOUT_CLASSIFICATION	5.146212160524292E-6	DEFECT
// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...	WITHOUT_CLASSIFICATION	0.9991694342936773	WITHOUT_CLASSIFICATION	8.305657063227134E-4	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999964715827435	WITHOUT_CLASSIFICATION	3.528417256577153E-6	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999996040880706	WITHOUT_CLASSIFICATION	3.959119293550602E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999963186796512	WITHOUT_CLASSIFICATION	3.681320348847142E-6	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999994461920594	WITHOUT_CLASSIFICATION	5.538079406389657E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999994461920594	WITHOUT_CLASSIFICATION	5.538079406389657E-7	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999947700312374	WITHOUT_CLASSIFICATION	5.229968762622238E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999542880280139	WITHOUT_CLASSIFICATION	4.5711971986094415E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999542880280139	WITHOUT_CLASSIFICATION	4.5711971986094415E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999542880280139	WITHOUT_CLASSIFICATION	4.5711971986094415E-4	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999542880280139	WITHOUT_CLASSIFICATION	4.5711971986094415E-4	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999997725782344	WITHOUT_CLASSIFICATION	2.2742176566028993E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999966306469694	WITHOUT_CLASSIFICATION	3.3693530305288276E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999916454256905	WITHOUT_CLASSIFICATION	8.354574309516995E-6	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.999740193538585	WITHOUT_CLASSIFICATION	2.598064614150461E-4	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999993199165539	WITHOUT_CLASSIFICATION	6.800834459963862E-7	DEFECT
// work out the number of periods to skip for labelling	WITHOUT_CLASSIFICATION	0.9999572953709699	WITHOUT_CLASSIFICATION	4.27046290301837E-5	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999862060985085	WITHOUT_CLASSIFICATION	1.3793901491504308E-5	DEFECT
// set flag true if negative values not allowed and the // lower bound is between 0 and 10:	WITHOUT_CLASSIFICATION	0.999991493292241	WITHOUT_CLASSIFICATION	8.506707758968333E-6	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999975528718426	WITHOUT_CLASSIFICATION	2.447128157421562E-6	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999997051417323	WITHOUT_CLASSIFICATION	2.9485826766196683E-7	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999988205463951	WITHOUT_CLASSIFICATION	1.1794536048472002E-6	DEFECT
//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:	WITHOUT_CLASSIFICATION	0.9999996957825948	WITHOUT_CLASSIFICATION	3.042174051033685E-7	DEFECT
//negatives not allowed and lower range bound is zero //use data range bound instead	WITHOUT_CLASSIFICATION	0.999995501868708	WITHOUT_CLASSIFICATION	4.49813129197471E-6	DEFECT
//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:	WITHOUT_CLASSIFICATION	0.9999996526580386	WITHOUT_CLASSIFICATION	3.473419614042525E-7	DEFECT
//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int	WITHOUT_CLASSIFICATION	0.9999971955290016	WITHOUT_CLASSIFICATION	2.804470998473561E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999996085406417	WITHOUT_CLASSIFICATION	3.914593581699392E-7	DEFECT
//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):	WITHOUT_CLASSIFICATION	0.9998822863029546	WITHOUT_CLASSIFICATION	1.177136970453603E-4	DEFECT
//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999999820859131	WITHOUT_CLASSIFICATION	1.7914086811085073E-8	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9999951970391185	WITHOUT_CLASSIFICATION	4.802960881456352E-6	DEFECT
// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...	WITHOUT_CLASSIFICATION	0.9999951970391185	WITHOUT_CLASSIFICATION	4.802960881456352E-6	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999861000375414	WITHOUT_CLASSIFICATION	1.389996245856986E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.999985397221489	WITHOUT_CLASSIFICATION	1.460277851090255E-5	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999933894030784	WITHOUT_CLASSIFICATION	6.610596921693389E-6	DEFECT
// we call refresh ticks just to get the maximum width or height	WITHOUT_CLASSIFICATION	0.9999992705050339	WITHOUT_CLASSIFICATION	7.294949660378451E-7	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999981409856482	WITHOUT_CLASSIFICATION	1.8590143517589887E-6	DEFECT
// cycle through all the segments contained in the BaseTimeline // exception segment	WITHOUT_CLASSIFICATION	0.9999995274311358	WITHOUT_CLASSIFICATION	4.7256886417292E-7	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9999890634322195	WITHOUT_CLASSIFICATION	1.0936567780583344E-5	DEFECT
// first test for equality (contains or contained)	WITHOUT_CLASSIFICATION	0.999999980844402	WITHOUT_CLASSIFICATION	1.9155597948001273E-8	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999255253207341	WITHOUT_CLASSIFICATION	7.447467926585569E-5	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999999494866926	WITHOUT_CLASSIFICATION	5.051330752144358E-8	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999722272371478	WITHOUT_CLASSIFICATION	2.777276285213295E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999854257198313	WITHOUT_CLASSIFICATION	1.4574280168784644E-5	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999904967831	WITHOUT_CLASSIFICATION	9.50321674925792E-9	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9998930747691284	WITHOUT_CLASSIFICATION	1.0692523087173789E-4	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999982479696707	WITHOUT_CLASSIFICATION	1.7520303293146091E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999982479696707	WITHOUT_CLASSIFICATION	1.7520303293146091E-6	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.999999989673017	WITHOUT_CLASSIFICATION	1.032698305601724E-8	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999977812532204	WITHOUT_CLASSIFICATION	2.2187467795995947E-6	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999821576079202	WITHOUT_CLASSIFICATION	1.784239207976234E-5	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9999117610667337	WITHOUT_CLASSIFICATION	8.823893326627602E-5	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999995888982143	WITHOUT_CLASSIFICATION	4.111017856970509E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.999999988342058	WITHOUT_CLASSIFICATION	1.1657941924636839E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.999999988342058	WITHOUT_CLASSIFICATION	1.1657941924636839E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.999999988342058	WITHOUT_CLASSIFICATION	1.1657941924636839E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.999999988342058	WITHOUT_CLASSIFICATION	1.1657941924636839E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.999999988342058	WITHOUT_CLASSIFICATION	1.1657941924636839E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.999999988342058	WITHOUT_CLASSIFICATION	1.1657941924636839E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.999999988342058	WITHOUT_CLASSIFICATION	1.1657941924636839E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.999999988342058	WITHOUT_CLASSIFICATION	1.1657941924636839E-8	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.999999988342058	WITHOUT_CLASSIFICATION	1.1657941924636839E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999992525002558	WITHOUT_CLASSIFICATION	7.474997442751839E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999992525002558	WITHOUT_CLASSIFICATION	7.474997442751839E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999997788079206	WITHOUT_CLASSIFICATION	2.211920794306443E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999997788079206	WITHOUT_CLASSIFICATION	2.211920794306443E-7	DEFECT
//no initial zoom rectangle exists but the handler is set //as life handler unregister	WITHOUT_CLASSIFICATION	0.9999999767775704	WITHOUT_CLASSIFICATION	2.3222429605425073E-8	DEFECT
//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));	WITHOUT_CLASSIFICATION	0.9999667518181958	WITHOUT_CLASSIFICATION	3.3248181804212775E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999830796832974	WITHOUT_CLASSIFICATION	1.692031670263018E-5	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999990135598107	WITHOUT_CLASSIFICATION	9.864401893641138E-7	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999990135598107	WITHOUT_CLASSIFICATION	9.864401893641138E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9997309012773812	WITHOUT_CLASSIFICATION	2.690987226187626E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9998813516244363	WITHOUT_CLASSIFICATION	1.1864837556373752E-4	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999979497381746	WITHOUT_CLASSIFICATION	2.0502618254048004E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999992607047246	WITHOUT_CLASSIFICATION	7.392952755011006E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999992607047246	WITHOUT_CLASSIFICATION	7.392952755011006E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999969272207743	WITHOUT_CLASSIFICATION	3.0727792257898476E-6	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999969272207743	WITHOUT_CLASSIFICATION	3.0727792257898476E-6	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999891705282	WITHOUT_CLASSIFICATION	1.082947174930796E-8	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.999999974223637	WITHOUT_CLASSIFICATION	2.577636302204387E-8	DEFECT
// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.	WITHOUT_CLASSIFICATION	0.9999999981194009	WITHOUT_CLASSIFICATION	1.880599046098352E-9	DEFECT
// establish the coordinates of the top left corner of the drawing area	WITHOUT_CLASSIFICATION	0.9999999984115345	WITHOUT_CLASSIFICATION	1.5884654398402031E-9	DEFECT
// draw the sections at the top of the pie (and set up tooltips)...	WITHOUT_CLASSIFICATION	0.9999996107359613	WITHOUT_CLASSIFICATION	3.8926403867712535E-7	DEFECT
// the pie sections are arranged ANTICLOCKWISE	WITHOUT_CLASSIFICATION	0.9999998790000715	WITHOUT_CLASSIFICATION	1.2099992854250942E-7	DEFECT
// starts at the back and finishes at the front // (wrapping the left side)	WITHOUT_CLASSIFICATION	0.9999934595513048	WITHOUT_CLASSIFICATION	6.540448695238301E-6	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999998451163858	WITHOUT_CLASSIFICATION	1.5488361414288914E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987313898762	WITHOUT_CLASSIFICATION	1.2686101238737316E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987313898762	WITHOUT_CLASSIFICATION	1.2686101238737316E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987313898762	WITHOUT_CLASSIFICATION	1.2686101238737316E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987313898762	WITHOUT_CLASSIFICATION	1.2686101238737316E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987313898762	WITHOUT_CLASSIFICATION	1.2686101238737316E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999998402404687	WITHOUT_CLASSIFICATION	1.5975953133051418E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999732495717075	WITHOUT_CLASSIFICATION	2.6750428292413867E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999732495717075	WITHOUT_CLASSIFICATION	2.6750428292413867E-5	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.999999998299638	WITHOUT_CLASSIFICATION	1.7003619420516297E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999997158250995	WITHOUT_CLASSIFICATION	2.8417490047046473E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999997158250995	WITHOUT_CLASSIFICATION	2.8417490047046473E-7	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999995294776393	WITHOUT_CLASSIFICATION	4.705223606444777E-7	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999995294776393	WITHOUT_CLASSIFICATION	4.705223606444777E-7	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.999999991185955	WITHOUT_CLASSIFICATION	8.814045079953653E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999938829212	WITHOUT_CLASSIFICATION	6.117078838472788E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999938829212	WITHOUT_CLASSIFICATION	6.117078838472788E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999938829212	WITHOUT_CLASSIFICATION	6.117078838472788E-9	DEFECT
// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.	WITHOUT_CLASSIFICATION	0.999999946434106	WITHOUT_CLASSIFICATION	5.3565894104918805E-8	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.999976016902639	WITHOUT_CLASSIFICATION	2.3983097360881527E-5	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999953360754207	WITHOUT_CLASSIFICATION	4.663924579383592E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999953360754207	WITHOUT_CLASSIFICATION	4.663924579383592E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999953360754207	WITHOUT_CLASSIFICATION	4.663924579383592E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999953360754207	WITHOUT_CLASSIFICATION	4.663924579383592E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999953360754207	WITHOUT_CLASSIFICATION	4.663924579383592E-6	DEFECT
// no axis, no gridlines...	WITHOUT_CLASSIFICATION	0.9999998931857925	WITHOUT_CLASSIFICATION	1.0681420737158577E-7	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.999979445530675	WITHOUT_CLASSIFICATION	2.055446932500412E-5	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.999979445530675	WITHOUT_CLASSIFICATION	2.055446932500412E-5	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999897500705578	WITHOUT_CLASSIFICATION	1.0249929442192868E-5	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999918551746829	WITHOUT_CLASSIFICATION	8.144825317130245E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999918551746829	WITHOUT_CLASSIFICATION	8.144825317130245E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999994630219063	WITHOUT_CLASSIFICATION	5.369780936755522E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999995970336729	WITHOUT_CLASSIFICATION	4.029663270817952E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999995970336729	WITHOUT_CLASSIFICATION	4.029663270817952E-7	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999995970336729	WITHOUT_CLASSIFICATION	4.029663270817952E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999997048353637	WITHOUT_CLASSIFICATION	2.9516463635483797E-7	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999997048353637	WITHOUT_CLASSIFICATION	2.9516463635483797E-7	DEFECT
// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value	WITHOUT_CLASSIFICATION	0.9999999835594934	WITHOUT_CLASSIFICATION	1.6440506588758195E-8	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999999089801688	WITHOUT_CLASSIFICATION	9.101983127025436E-8	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999999089801688	WITHOUT_CLASSIFICATION	9.101983127025436E-8	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999970960298308	WITHOUT_CLASSIFICATION	2.903970169171595E-6	DEFECT
// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible	WITHOUT_CLASSIFICATION	0.9999996701104117	WITHOUT_CLASSIFICATION	3.2988958831818617E-7	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999901288926928	WITHOUT_CLASSIFICATION	9.871107307267968E-6	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999979507841522	WITHOUT_CLASSIFICATION	2.0492158478297427E-6	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999990360211112	WITHOUT_CLASSIFICATION	9.639788888191546E-7	DEFECT
// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities	WITHOUT_CLASSIFICATION	0.9999999986997935	WITHOUT_CLASSIFICATION	1.3002065727302254E-9	DEFECT
// for value in bounds, do the lookup...	WITHOUT_CLASSIFICATION	0.9999944811451373	WITHOUT_CLASSIFICATION	5.5188548627237005E-6	DEFECT
// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow	WITHOUT_CLASSIFICATION	0.9999999190606851	WITHOUT_CLASSIFICATION	8.09393149461964E-8	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9998754603770488	WITHOUT_CLASSIFICATION	1.245396229513241E-4	DEFECT
// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.	WITHOUT_CLASSIFICATION	0.9999862392925379	WITHOUT_CLASSIFICATION	1.3760707462090396E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999723756837	WITHOUT_CLASSIFICATION	2.7624316308315686E-8	DEFECT
// FIXME: calculate xx0	WITHOUT_CLASSIFICATION	0.6712193285535955	DEFECT	0.32878067144640455	WITHOUT_CLASSIFICATION
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999998018678471	WITHOUT_CLASSIFICATION	1.9813215303947503E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999984697795774	WITHOUT_CLASSIFICATION	1.530220422582565E-6	DEFECT
// wait till we are at the last item for the row then draw the // whole stack at once	WITHOUT_CLASSIFICATION	0.99999385499118	WITHOUT_CLASSIFICATION	6.145008819983881E-6	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999904944779143	WITHOUT_CLASSIFICATION	9.505522085603946E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999995388540664	WITHOUT_CLASSIFICATION	4.611459335093984E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999995388540664	WITHOUT_CLASSIFICATION	4.611459335093984E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999995388540664	WITHOUT_CLASSIFICATION	4.611459335093984E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999995388540664	WITHOUT_CLASSIFICATION	4.611459335093984E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999995388540664	WITHOUT_CLASSIFICATION	4.611459335093984E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999995388540664	WITHOUT_CLASSIFICATION	4.611459335093984E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999995388540664	WITHOUT_CLASSIFICATION	4.611459335093984E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999995388540664	WITHOUT_CLASSIFICATION	4.611459335093984E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999995388540664	WITHOUT_CLASSIFICATION	4.611459335093984E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999907032881535	WITHOUT_CLASSIFICATION	9.296711846552585E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999593596507309	WITHOUT_CLASSIFICATION	4.064034926907433E-5	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999993883436263	WITHOUT_CLASSIFICATION	6.116563736422363E-7	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999993883436263	WITHOUT_CLASSIFICATION	6.116563736422363E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999996376893211	WITHOUT_CLASSIFICATION	3.623106788607906E-7	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999988797993476	WITHOUT_CLASSIFICATION	1.1202006524097195E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999988797993476	WITHOUT_CLASSIFICATION	1.1202006524097195E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999988797993476	WITHOUT_CLASSIFICATION	1.1202006524097195E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953747617119	WITHOUT_CLASSIFICATION	4.625238288133324E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999527996375367	WITHOUT_CLASSIFICATION	4.720036246338537E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999527996375367	WITHOUT_CLASSIFICATION	4.720036246338537E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999527996375367	WITHOUT_CLASSIFICATION	4.720036246338537E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999527996375367	WITHOUT_CLASSIFICATION	4.720036246338537E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999527996375367	WITHOUT_CLASSIFICATION	4.720036246338537E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999527996375367	WITHOUT_CLASSIFICATION	4.720036246338537E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999816988621365	WITHOUT_CLASSIFICATION	1.830113786351977E-5	DEFECT
// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.98692470373424	WITHOUT_CLASSIFICATION	0.013075296265760063	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999951654162416	WITHOUT_CLASSIFICATION	4.83458375838804E-6	DEFECT
// last series, so we are ready to draw the min and max	WITHOUT_CLASSIFICATION	0.9999998992314607	WITHOUT_CLASSIFICATION	1.007685393384282E-7	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999941026443429	WITHOUT_CLASSIFICATION	5.897355657184463E-6	DEFECT
// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection	WITHOUT_CLASSIFICATION	0.9999999159320095	WITHOUT_CLASSIFICATION	8.406799049247188E-8	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999331926291029	WITHOUT_CLASSIFICATION	6.680737089723132E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999331926291029	WITHOUT_CLASSIFICATION	6.680737089723132E-5	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997667886439	WITHOUT_CLASSIFICATION	2.3321135620045318E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997667886439	WITHOUT_CLASSIFICATION	2.3321135620045318E-7	DEFECT
// check if initial polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999954112800766	WITHOUT_CLASSIFICATION	4.588719923407227E-6	DEFECT
// never updated the subtrahend if it is implied to be zero	WITHOUT_CLASSIFICATION	0.9999999759304705	WITHOUT_CLASSIFICATION	2.406952944681109E-8	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999998070792505	WITHOUT_CLASSIFICATION	1.929207495723187E-7	DEFECT
// clear the point vectors	WITHOUT_CLASSIFICATION	0.9999999609833125	WITHOUT_CLASSIFICATION	3.901668754246284E-8	DEFECT
//// ITEM LABELS VISIBLE //////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.99999413653937	WITHOUT_CLASSIFICATION	5.863460629973454E-6	DEFECT
// we don't need the sign	WITHOUT_CLASSIFICATION	0.9999598691049572	WITHOUT_CLASSIFICATION	4.013089504282521E-5	DEFECT
// fillType == TO_UPPER_BOUND	WITHOUT_CLASSIFICATION	0.9999962433578757	WITHOUT_CLASSIFICATION	3.756642124350841E-6	DEFECT
/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */	WITHOUT_CLASSIFICATION	0.9999999907347545	WITHOUT_CLASSIFICATION	9.265245476759055E-9	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999928537350823	WITHOUT_CLASSIFICATION	7.146264917728506E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.999999677128368	WITHOUT_CLASSIFICATION	3.228716319500674E-7	DEFECT
//  Check that the graph being served was created by the current user //  or that it begins with "public"	WITHOUT_CLASSIFICATION	0.9999997488614938	WITHOUT_CLASSIFICATION	2.511385061262171E-7	DEFECT
// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...	WITHOUT_CLASSIFICATION	0.999999123452873	WITHOUT_CLASSIFICATION	8.765471270647002E-7	DEFECT
// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null	WITHOUT_CLASSIFICATION	0.9997624466278048	WITHOUT_CLASSIFICATION	2.37553372195265E-4	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9980039518164178	WITHOUT_CLASSIFICATION	0.001996048183582285	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9980039518164178	WITHOUT_CLASSIFICATION	0.001996048183582285	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999999647582845	WITHOUT_CLASSIFICATION	3.524171547327273E-8	DEFECT
// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure	WITHOUT_CLASSIFICATION	0.9999994547665626	WITHOUT_CLASSIFICATION	5.452334373930138E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999956230607	WITHOUT_CLASSIFICATION	4.376939246422475E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999956230607	WITHOUT_CLASSIFICATION	4.376939246422475E-9	DEFECT
// set up the series names...	WITHOUT_CLASSIFICATION	0.9999996608792904	WITHOUT_CLASSIFICATION	3.3912070965861874E-7	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9999991408711905	WITHOUT_CLASSIFICATION	8.591288095276883E-7	DEFECT
//create a temporary vector // set x to some arbitary value (used below)	WITHOUT_CLASSIFICATION	0.9999999882543891	WITHOUT_CLASSIFICATION	1.1745610943351143E-8	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9841202686537388	WITHOUT_CLASSIFICATION	0.015879731346261146	DEFECT
//  Iterate and find all keys below threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999822848762632	WITHOUT_CLASSIFICATION	1.771512373679529E-5	DEFECT
// handle special case of BoxAndWhiskerDataset	WITHOUT_CLASSIFICATION	0.9999995582169967	WITHOUT_CLASSIFICATION	4.4178300329117416E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999997008107252	WITHOUT_CLASSIFICATION	2.9918927485304893E-7	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999540116298651	WITHOUT_CLASSIFICATION	4.5988370134848444E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999540116298651	WITHOUT_CLASSIFICATION	4.5988370134848444E-5	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999950998682756	WITHOUT_CLASSIFICATION	4.9001317244181685E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987825825934	WITHOUT_CLASSIFICATION	1.2174174065657424E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987825825934	WITHOUT_CLASSIFICATION	1.2174174065657424E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987825825934	WITHOUT_CLASSIFICATION	1.2174174065657424E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987825825934	WITHOUT_CLASSIFICATION	1.2174174065657424E-6	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9450393917616594	WITHOUT_CLASSIFICATION	0.054960608238340626	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999965875914315	WITHOUT_CLASSIFICATION	3.412408568457573E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999965875914315	WITHOUT_CLASSIFICATION	3.412408568457573E-6	DEFECT
// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //	WITHOUT_CLASSIFICATION	0.9999300454295655	WITHOUT_CLASSIFICATION	6.995457043437607E-5	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.999999919888508	WITHOUT_CLASSIFICATION	8.01114920415993E-8	DEFECT
// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...	WITHOUT_CLASSIFICATION	0.999998764655972	WITHOUT_CLASSIFICATION	1.2353440279375583E-6	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999804168603	WITHOUT_CLASSIFICATION	1.9583139688362397E-8	DEFECT
// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...	WITHOUT_CLASSIFICATION	0.9999997124094183	WITHOUT_CLASSIFICATION	2.875905816674196E-7	DEFECT
// pass mouse move event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999999297987868	WITHOUT_CLASSIFICATION	7.020121310387655E-8	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999497517231014	WITHOUT_CLASSIFICATION	5.02482768986322E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999497517231014	WITHOUT_CLASSIFICATION	5.02482768986322E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999497517231014	WITHOUT_CLASSIFICATION	5.02482768986322E-5	DEFECT
// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?	WITHOUT_CLASSIFICATION	0.9999999970529683	WITHOUT_CLASSIFICATION	2.947031674522971E-9	DEFECT
// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...	WITHOUT_CLASSIFICATION	0.9999999866298889	WITHOUT_CLASSIFICATION	1.337011125279335E-8	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999999060420883	WITHOUT_CLASSIFICATION	9.395791168329758E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999303997894	WITHOUT_CLASSIFICATION	6.960021066995822E-8	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999959915519	WITHOUT_CLASSIFICATION	4.008448106495802E-9	DEFECT
// row 2: outline color	WITHOUT_CLASSIFICATION	0.9999701268875625	WITHOUT_CLASSIFICATION	2.987311243746712E-5	DEFECT
// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.	WITHOUT_CLASSIFICATION	0.999999907986983	WITHOUT_CLASSIFICATION	9.20130169270028E-8	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999988096232734	WITHOUT_CLASSIFICATION	1.190376726602188E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999988096232734	WITHOUT_CLASSIFICATION	1.190376726602188E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999988096232734	WITHOUT_CLASSIFICATION	1.190376726602188E-6	DEFECT
// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999935037977014	WITHOUT_CLASSIFICATION	6.496202298652963E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999964013485371	WITHOUT_CLASSIFICATION	3.5986514630327583E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999964013485371	WITHOUT_CLASSIFICATION	3.5986514630327583E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999964013485371	WITHOUT_CLASSIFICATION	3.5986514630327583E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999964013485371	WITHOUT_CLASSIFICATION	3.5986514630327583E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999964013485371	WITHOUT_CLASSIFICATION	3.5986514630327583E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999964013485371	WITHOUT_CLASSIFICATION	3.5986514630327583E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999964013485371	WITHOUT_CLASSIFICATION	3.5986514630327583E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999964013485371	WITHOUT_CLASSIFICATION	3.5986514630327583E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999964013485371	WITHOUT_CLASSIFICATION	3.5986514630327583E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.999998541800435	WITHOUT_CLASSIFICATION	1.4581995650623468E-6	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999993204129125	WITHOUT_CLASSIFICATION	6.795870873942166E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999993204129125	WITHOUT_CLASSIFICATION	6.795870873942166E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999993204129125	WITHOUT_CLASSIFICATION	6.795870873942166E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999995469877823	WITHOUT_CLASSIFICATION	4.530122176953993E-7	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999767815617324	WITHOUT_CLASSIFICATION	2.3218438267591493E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999767815617324	WITHOUT_CLASSIFICATION	2.3218438267591493E-5	DEFECT
//gridBandPaint	WITHOUT_CLASSIFICATION	0.9999847065056263	WITHOUT_CLASSIFICATION	1.5293494373675156E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999996351992743	WITHOUT_CLASSIFICATION	3.6480072579066494E-7	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999999323987978	WITHOUT_CLASSIFICATION	6.760120219033217E-8	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999998322220669	WITHOUT_CLASSIFICATION	1.6777793304346058E-7	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999999481801853	WITHOUT_CLASSIFICATION	5.181981458575236E-8	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999962189111663	WITHOUT_CLASSIFICATION	3.7810888337489352E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999988218102566	WITHOUT_CLASSIFICATION	1.178189743475941E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999988218102566	WITHOUT_CLASSIFICATION	1.178189743475941E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999988218102566	WITHOUT_CLASSIFICATION	1.178189743475941E-6	DEFECT
// ok, exception is expected	WITHOUT_CLASSIFICATION	0.9999968256164993	WITHOUT_CLASSIFICATION	3.1743835006788392E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999826501744082	WITHOUT_CLASSIFICATION	1.73498255917082E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
// dateFormatOverride	WITHOUT_CLASSIFICATION	0.9999994714844557	WITHOUT_CLASSIFICATION	5.285155444016092E-7	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999997152279352	WITHOUT_CLASSIFICATION	2.847720648283081E-7	DEFECT
// check that setting the max date to something on or before the // current min date works...	WITHOUT_CLASSIFICATION	0.9998320733109713	WITHOUT_CLASSIFICATION	1.6792668902854385E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999988928621667	WITHOUT_CLASSIFICATION	1.1071378333651657E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999988928621667	WITHOUT_CLASSIFICATION	1.1071378333651657E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999988928621667	WITHOUT_CLASSIFICATION	1.1071378333651657E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999988928621667	WITHOUT_CLASSIFICATION	1.1071378333651657E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999988928621667	WITHOUT_CLASSIFICATION	1.1071378333651657E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999988928621667	WITHOUT_CLASSIFICATION	1.1071378333651657E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999988928621667	WITHOUT_CLASSIFICATION	1.1071378333651657E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999988928621667	WITHOUT_CLASSIFICATION	1.1071378333651657E-6	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999988928621667	WITHOUT_CLASSIFICATION	1.1071378333651657E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999988470480329	WITHOUT_CLASSIFICATION	1.1529519671167444E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999988470480329	WITHOUT_CLASSIFICATION	1.1529519671167444E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999997900723675	WITHOUT_CLASSIFICATION	2.0992763248755077E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999997900723675	WITHOUT_CLASSIFICATION	2.0992763248755077E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999990106844029	WITHOUT_CLASSIFICATION	9.893155971013665E-7	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999990106844029	WITHOUT_CLASSIFICATION	9.893155971013665E-7	DEFECT
//private boolean autoRangeStickyZero;	WITHOUT_CLASSIFICATION	0.9999990190067889	WITHOUT_CLASSIFICATION	9.809932110820183E-7	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999994635909294	WITHOUT_CLASSIFICATION	5.364090705905177E-7	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999994635909294	WITHOUT_CLASSIFICATION	5.364090705905177E-7	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999992390776259	WITHOUT_CLASSIFICATION	7.60922374226528E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.999999937307013	WITHOUT_CLASSIFICATION	6.269298704121135E-8	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.999999937307013	WITHOUT_CLASSIFICATION	6.269298704121135E-8	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999987194560574	WITHOUT_CLASSIFICATION	1.2805439425251378E-6	DEFECT
// advance line Paint	WITHOUT_CLASSIFICATION	0.999999863997778	WITHOUT_CLASSIFICATION	1.3600222202288277E-7	DEFECT
// Add exception in included segments	WITHOUT_CLASSIFICATION	0.9999992540331302	WITHOUT_CLASSIFICATION	7.459668697782438E-7	DEFECT
// Saturday and Sundays are non business hours	WITHOUT_CLASSIFICATION	0.999999628372876	WITHOUT_CLASSIFICATION	3.7162712393128625E-7	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9997751567299915	WITHOUT_CLASSIFICATION	2.2484327000841663E-4	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9997751567299915	WITHOUT_CLASSIFICATION	2.2484327000841663E-4	DEFECT
// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //	WITHOUT_CLASSIFICATION	0.999999877526336	WITHOUT_CLASSIFICATION	1.2247366394536655E-7	DEFECT
// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //	WITHOUT_CLASSIFICATION	0.9985989113353768	WITHOUT_CLASSIFICATION	0.0014010886646232687	DEFECT
// test monday though friday timeline	WITHOUT_CLASSIFICATION	0.9999995886180698	WITHOUT_CLASSIFICATION	4.1138193029848026E-7	DEFECT
// find first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999971530306434	WITHOUT_CLASSIFICATION	2.8469693565080883E-6	DEFECT
////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999971699469	WITHOUT_CLASSIFICATION	2.83005304750299E-9	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998515111587	WITHOUT_CLASSIFICATION	1.4848884129502486E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992776062203	WITHOUT_CLASSIFICATION	7.223937797504934E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999801727554	WITHOUT_CLASSIFICATION	1.9827244655744417E-8	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999999659558831	WITHOUT_CLASSIFICATION	3.404411692529644E-8	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999940661931883	WITHOUT_CLASSIFICATION	5.93380681170653E-6	DEFECT
// tick label insets...	WITHOUT_CLASSIFICATION	0.9999956262257341	WITHOUT_CLASSIFICATION	4.373774265878705E-6	DEFECT
// tick mark paint...	WITHOUT_CLASSIFICATION	0.9999743366452893	WITHOUT_CLASSIFICATION	2.5663354710690594E-5	DEFECT
// negativeArrowVisible;	WITHOUT_CLASSIFICATION	0.9999994101131766	WITHOUT_CLASSIFICATION	5.898868234677723E-7	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999999682322939	WITHOUT_CLASSIFICATION	3.1767706139906354E-8	DEFECT
// autoRange	WITHOUT_CLASSIFICATION	0.9999996458517229	WITHOUT_CLASSIFICATION	3.541482771942061E-7	DEFECT
// autoRangeMinimumSize	WITHOUT_CLASSIFICATION	0.999999936343002	WITHOUT_CLASSIFICATION	6.365699801039703E-8	DEFECT
//private double fixedAutoRange;	WITHOUT_CLASSIFICATION	0.99999633488542	WITHOUT_CLASSIFICATION	3.665114580038782E-6	DEFECT
//private boolean autoTickUnitSelection;	WITHOUT_CLASSIFICATION	0.999999960815465	WITHOUT_CLASSIFICATION	3.9184534902654405E-8	DEFECT
//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;	WITHOUT_CLASSIFICATION	0.9999988092251926	WITHOUT_CLASSIFICATION	1.1907748074628223E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999985555702923	WITHOUT_CLASSIFICATION	1.444429707676411E-6	DEFECT
// TBLRC // 00001 - center item only	WITHOUT_CLASSIFICATION	0.9999985555702923	WITHOUT_CLASSIFICATION	1.444429707676411E-6	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999799072841262	WITHOUT_CLASSIFICATION	2.0092715873759994E-5	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999993384865538	WITHOUT_CLASSIFICATION	6.615134462760238E-7	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999918243005774	WITHOUT_CLASSIFICATION	8.175699422616939E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999933910461032	WITHOUT_CLASSIFICATION	6.60895389685265E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999976866608681	WITHOUT_CLASSIFICATION	2.3133391319445384E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999956691918568	WITHOUT_CLASSIFICATION	4.330808143246447E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.999999875185369	WITHOUT_CLASSIFICATION	1.2481463104191633E-7	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999995589771932	WITHOUT_CLASSIFICATION	4.410228067481807E-7	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999941036439668	WITHOUT_CLASSIFICATION	5.896356033203464E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999941036439668	WITHOUT_CLASSIFICATION	5.896356033203464E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9995197697335886	WITHOUT_CLASSIFICATION	4.802302664114482E-4	DEFECT
// innerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999997422585111	WITHOUT_CLASSIFICATION	2.577414888871374E-7	DEFECT
// domainAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9994543721168794	WITHOUT_CLASSIFICATION	5.456278831206138E-4	DEFECT
// rangeAxis - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9995596168824225	WITHOUT_CLASSIFICATION	4.40383117577613E-4	DEFECT
// renderer - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9985460731695874	WITHOUT_CLASSIFICATION	0.0014539268304126162	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999251728674	WITHOUT_CLASSIFICATION	7.482713259296863E-8	DEFECT
// domainGridlinePosition	WITHOUT_CLASSIFICATION	0.9999998013769293	WITHOUT_CLASSIFICATION	1.9862307065745314E-7	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999999547159657	WITHOUT_CLASSIFICATION	4.528403436504616E-8	DEFECT
// anchorValue	WITHOUT_CLASSIFICATION	0.9999999151306278	WITHOUT_CLASSIFICATION	8.486937222836576E-8	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999999282292588	WITHOUT_CLASSIFICATION	7.17707412243977E-8	DEFECT
// rangeCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999999282292588	WITHOUT_CLASSIFICATION	7.17707412243977E-8	DEFECT
// range markers - no longer separate fields but test anyway...	WITHOUT_CLASSIFICATION	0.9994850669130786	WITHOUT_CLASSIFICATION	5.149330869213399E-4	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999981050347904	WITHOUT_CLASSIFICATION	1.894965209684877E-6	DEFECT
// domainCrosshairPaint	WITHOUT_CLASSIFICATION	0.9999995983401571	WITHOUT_CLASSIFICATION	4.016598430227719E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999997862212112	WITHOUT_CLASSIFICATION	2.1377878874994206E-7	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999997862212112	WITHOUT_CLASSIFICATION	2.1377878874994206E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999996536214203	WITHOUT_CLASSIFICATION	3.4637857969146374E-7	DEFECT
// now check that the chart is usable...	WITHOUT_CLASSIFICATION	0.9999996536214203	WITHOUT_CLASSIFICATION	3.4637857969146374E-7	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999847015116402	WITHOUT_CLASSIFICATION	1.5298488359721398E-5	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999949459203451	WITHOUT_CLASSIFICATION	5.054079654879179E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999974540575698	WITHOUT_CLASSIFICATION	2.545942430091946E-6	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999974540575698	WITHOUT_CLASSIFICATION	2.545942430091946E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999986426210968	WITHOUT_CLASSIFICATION	1.3573789032139785E-6	DEFECT
// units	WITHOUT_CLASSIFICATION	0.9999990544682004	WITHOUT_CLASSIFICATION	9.455317996862137E-7	DEFECT
// tick labels visible	WITHOUT_CLASSIFICATION	0.9999990346043275	WITHOUT_CLASSIFICATION	9.653956725735608E-7	DEFECT
// tick size	WITHOUT_CLASSIFICATION	0.9999984513075376	WITHOUT_CLASSIFICATION	1.5486924623295732E-6	DEFECT
// the clone and the original share a reference to the SAME dataset	WITHOUT_CLASSIFICATION	0.9999995263156879	WITHOUT_CLASSIFICATION	4.736843121532598E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994171753589	WITHOUT_CLASSIFICATION	5.828246410305201E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994171753589	WITHOUT_CLASSIFICATION	5.828246410305201E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994171753589	WITHOUT_CLASSIFICATION	5.828246410305201E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994171753589	WITHOUT_CLASSIFICATION	5.828246410305201E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994171753589	WITHOUT_CLASSIFICATION	5.828246410305201E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994171753589	WITHOUT_CLASSIFICATION	5.828246410305201E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994171753589	WITHOUT_CLASSIFICATION	5.828246410305201E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994171753589	WITHOUT_CLASSIFICATION	5.828246410305201E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994171753589	WITHOUT_CLASSIFICATION	5.828246410305201E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994171753589	WITHOUT_CLASSIFICATION	5.828246410305201E-7	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994171753589	WITHOUT_CLASSIFICATION	5.828246410305201E-7	DEFECT
// labelType...	WITHOUT_CLASSIFICATION	0.9999801858234321	WITHOUT_CLASSIFICATION	1.9814176567960574E-5	DEFECT
// pieIndex...	WITHOUT_CLASSIFICATION	0.9999346332656854	WITHOUT_CLASSIFICATION	6.53667343145792E-5	DEFECT
// ignoreZeroValues	WITHOUT_CLASSIFICATION	0.9999999714602797	WITHOUT_CLASSIFICATION	2.8539720220733613E-8	DEFECT
// sectionOutlinesVisible	WITHOUT_CLASSIFICATION	0.9999993941072535	WITHOUT_CLASSIFICATION	6.058927465041456E-7	DEFECT
// sectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999926120111662	WITHOUT_CLASSIFICATION	7.387988833863947E-6	DEFECT
// labelBackgroundPaint	WITHOUT_CLASSIFICATION	0.9999982274479298	WITHOUT_CLASSIFICATION	1.7725520702116383E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999998780964412	WITHOUT_CLASSIFICATION	1.2190355876632968E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996324277104	WITHOUT_CLASSIFICATION	3.6757228949745344E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996324277104	WITHOUT_CLASSIFICATION	3.6757228949745344E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996324277104	WITHOUT_CLASSIFICATION	3.6757228949745344E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996324277104	WITHOUT_CLASSIFICATION	3.6757228949745344E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996324277104	WITHOUT_CLASSIFICATION	3.6757228949745344E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996324277104	WITHOUT_CLASSIFICATION	3.6757228949745344E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996324277104	WITHOUT_CLASSIFICATION	3.6757228949745344E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996324277104	WITHOUT_CLASSIFICATION	3.6757228949745344E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996324277104	WITHOUT_CLASSIFICATION	3.6757228949745344E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996324277104	WITHOUT_CLASSIFICATION	3.6757228949745344E-7	DEFECT
// verify independence of fixed legend item collection	WITHOUT_CLASSIFICATION	0.99995943583232	WITHOUT_CLASSIFICATION	4.0564167679992504E-5	DEFECT
// stroke sequence	WITHOUT_CLASSIFICATION	0.9999869006948348	WITHOUT_CLASSIFICATION	1.309930516516517E-5	DEFECT
// stroke index	WITHOUT_CLASSIFICATION	0.9998243873366004	WITHOUT_CLASSIFICATION	1.7561266339959257E-4	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999999302184381	WITHOUT_CLASSIFICATION	6.978156185833735E-8	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999999302184381	WITHOUT_CLASSIFICATION	6.978156185833735E-8	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999999302184381	WITHOUT_CLASSIFICATION	6.978156185833735E-8	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999999302184381	WITHOUT_CLASSIFICATION	6.978156185833735E-8	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999999302184381	WITHOUT_CLASSIFICATION	6.978156185833735E-8	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999999302184381	WITHOUT_CLASSIFICATION	6.978156185833735E-8	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999999302184381	WITHOUT_CLASSIFICATION	6.978156185833735E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999828032429	WITHOUT_CLASSIFICATION	1.719675707585223E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999828032429	WITHOUT_CLASSIFICATION	1.719675707585223E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999828032429	WITHOUT_CLASSIFICATION	1.719675707585223E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999828032429	WITHOUT_CLASSIFICATION	1.719675707585223E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999828032429	WITHOUT_CLASSIFICATION	1.719675707585223E-8	DEFECT
// minorTickCount	WITHOUT_CLASSIFICATION	0.9999997975987732	WITHOUT_CLASSIFICATION	2.0240122686881627E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999996002313839	WITHOUT_CLASSIFICATION	3.997686161055188E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999998661919892	WITHOUT_CLASSIFICATION	1.338080107664525E-7	DEFECT
// seriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.99999827383972	WITHOUT_CLASSIFICATION	1.7261602801413766E-6	DEFECT
//upper bound and margin OK; get log10 of upper bound	WITHOUT_CLASSIFICATION	0.9999997799219263	WITHOUT_CLASSIFICATION	2.2007807369406962E-7	DEFECT
// fillPaintList	WITHOUT_CLASSIFICATION	0.9999998401840487	WITHOUT_CLASSIFICATION	1.598159512356065E-7	DEFECT
//apply upper margin by increasing upper bound:	WITHOUT_CLASSIFICATION	0.999999466760046	WITHOUT_CLASSIFICATION	5.332399538679154E-7	DEFECT
// baseStroke	WITHOUT_CLASSIFICATION	0.9999977037565025	WITHOUT_CLASSIFICATION	2.296243497401421E-6	DEFECT
// Reference: http://www.antigrain.com/research/bezier_interpolation/	WITHOUT_CLASSIFICATION	0.9999991280159659	WITHOUT_CLASSIFICATION	8.719840340978491E-7	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999810846812403	WITHOUT_CLASSIFICATION	1.891531875965499E-5	DEFECT
// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()	WITHOUT_CLASSIFICATION	0.999999999951654	WITHOUT_CLASSIFICATION	4.8345951663724484E-11	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.999997815548061	WITHOUT_CLASSIFICATION	2.184451939018476E-6	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999566495005	WITHOUT_CLASSIFICATION	4.3350499476771716E-8	DEFECT
// properties // save // print // zoom // tooltips	WITHOUT_CLASSIFICATION	0.9999999566495005	WITHOUT_CLASSIFICATION	4.3350499476771716E-8	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999994239651	WITHOUT_CLASSIFICATION	5.760348380922384E-10	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999978431740056	WITHOUT_CLASSIFICATION	2.1568259944696936E-6	DEFECT
// itemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999999618957023	WITHOUT_CLASSIFICATION	3.8104297645076424E-8	DEFECT
// make the background of the buffer clear and transparent	WITHOUT_CLASSIFICATION	0.999999095929264	WITHOUT_CLASSIFICATION	9.040707361069752E-7	DEFECT
// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html	WITHOUT_CLASSIFICATION	0.9999888359469816	WITHOUT_CLASSIFICATION	1.1164053018369265E-5	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.999999982704709	WITHOUT_CLASSIFICATION	1.7295290968354208E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9663651716845311	WITHOUT_CLASSIFICATION	0.03363482831546893	DEFECT
// first determine the size of the chart rendering area...	WITHOUT_CLASSIFICATION	0.9999999649382134	WITHOUT_CLASSIFICATION	3.506178661584374E-8	DEFECT
// do we need to resize the buffer?	WITHOUT_CLASSIFICATION	0.9999979570995904	WITHOUT_CLASSIFICATION	2.04290040955186E-6	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999999885000496	WITHOUT_CLASSIFICATION	1.149995043312227E-8	DEFECT
// clear the flag	WITHOUT_CLASSIFICATION	0.9999988226853856	WITHOUT_CLASSIFICATION	1.1773146142550935E-6	DEFECT
// do we need to redraw the buffer?	WITHOUT_CLASSIFICATION	0.9999987469975068	WITHOUT_CLASSIFICATION	1.2530024932773414E-6	DEFECT
// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart	WITHOUT_CLASSIFICATION	0.9999999113063663	WITHOUT_CLASSIFICATION	8.869363366274513E-8	DEFECT
// redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.9999996689679911	WITHOUT_CLASSIFICATION	3.3103200891932377E-7	DEFECT
// zap the buffer onto the panel...	WITHOUT_CLASSIFICATION	0.9999977279820943	WITHOUT_CLASSIFICATION	2.2720179056903527E-6	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999998054852812	WITHOUT_CLASSIFICATION	1.945147187389143E-7	DEFECT
// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...	WITHOUT_CLASSIFICATION	0.997256881216724	WITHOUT_CLASSIFICATION	0.0027431187832760166	DEFECT
// itemLabelFontList	WITHOUT_CLASSIFICATION	0.9999999789343306	WITHOUT_CLASSIFICATION	2.1065669530551857E-8	DEFECT
// restore original tooltip dealys	WITHOUT_CLASSIFICATION	0.999999114764223	WITHOUT_CLASSIFICATION	8.852357769136092E-7	DEFECT
// can we pan this plot?	WITHOUT_CLASSIFICATION	0.9999917467154164	WITHOUT_CLASSIFICATION	8.253284583584292E-6	DEFECT
// the actual panning occurs later in the mouseDragged()  // method	WITHOUT_CLASSIFICATION	0.9999993253713	WITHOUT_CLASSIFICATION	6.746286998973782E-7	DEFECT
// if the popup menu has already been triggered, then ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999678072806	WITHOUT_CLASSIFICATION	3.219271933554381E-8	DEFECT
// handle panning if we have a start point	WITHOUT_CLASSIFICATION	0.9999999647938097	WITHOUT_CLASSIFICATION	3.520619033080499E-8	DEFECT
// if no initial zoom point was set, ignore dragging...	WITHOUT_CLASSIFICATION	0.9999999989439156	WITHOUT_CLASSIFICATION	1.0560844813535721E-9	DEFECT
// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)	WITHOUT_CLASSIFICATION	0.9999999950980524	WITHOUT_CLASSIFICATION	4.901947681362486E-9	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999913996397982	WITHOUT_CLASSIFICATION	8.60036020179066E-6	DEFECT
// Draw the new zoom rectangle...	WITHOUT_CLASSIFICATION	0.9999869386966931	WITHOUT_CLASSIFICATION	1.3061303306850273E-5	DEFECT
// with no buffer, we use XOR to draw the rectangle "over" the // chart...	WITHOUT_CLASSIFICATION	0.999998784504601	WITHOUT_CLASSIFICATION	1.2154953990198896E-6	DEFECT
// if we've been panning, we need to reset now that the mouse is  // released...	WITHOUT_CLASSIFICATION	0.9999999653591743	WITHOUT_CLASSIFICATION	3.464082556181086E-8	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999999456447	WITHOUT_CLASSIFICATION	5.4355230088486515E-11	DEFECT
// erase the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999999815383276	WITHOUT_CLASSIFICATION	1.8461672424972786E-8	DEFECT
// force a redraw // new entity code...	WITHOUT_CLASSIFICATION	0.999985184888168	WITHOUT_CLASSIFICATION	1.4815111832112909E-5	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999830482651	WITHOUT_CLASSIFICATION	1.6951734970520276E-8	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999830482651	WITHOUT_CLASSIFICATION	1.6951734970520276E-8	DEFECT
// Set XOR mode to draw the zoom rectangle	WITHOUT_CLASSIFICATION	0.9999935939411964	WITHOUT_CLASSIFICATION	6.406058803668434E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.99999844870456	WITHOUT_CLASSIFICATION	1.5512954400407152E-6	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999986998669	WITHOUT_CLASSIFICATION	1.3001330687494048E-9	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999986998669	WITHOUT_CLASSIFICATION	1.3001330687494048E-9	DEFECT
// use reflection to get the SVG string	WITHOUT_CLASSIFICATION	0.9999998179059619	WITHOUT_CLASSIFICATION	1.8209403811604878E-7	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999909220053	WITHOUT_CLASSIFICATION	9.07799468396884E-9	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999909220053	WITHOUT_CLASSIFICATION	9.07799468396884E-9	DEFECT
// Reset to the default 'overwrite' mode	WITHOUT_CLASSIFICATION	0.9999999909220053	WITHOUT_CLASSIFICATION	9.07799468396884E-9	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.99999844870456	WITHOUT_CLASSIFICATION	1.5512954400407152E-6	DEFECT
// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999994729820975	WITHOUT_CLASSIFICATION	5.270179025498299E-7	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999995723466563	WITHOUT_CLASSIFICATION	4.276533438035388E-7	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.99999844870456	WITHOUT_CLASSIFICATION	1.5512954400407152E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.99999844870456	WITHOUT_CLASSIFICATION	1.5512954400407152E-6	DEFECT
// null will be returned	WITHOUT_CLASSIFICATION	0.99999844870456	WITHOUT_CLASSIFICATION	1.5512954400407152E-6	DEFECT
// fetch listeners from local storage	WITHOUT_CLASSIFICATION	0.999999995167967	WITHOUT_CLASSIFICATION	4.832033053626495E-9	DEFECT
// here we need to update the UI for the popup menu, if the panel // has one...	WITHOUT_CLASSIFICATION	0.9999944343348824	WITHOUT_CLASSIFICATION	5.5656651175487405E-6	DEFECT
// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...	WITHOUT_CLASSIFICATION	0.9999979330030274	WITHOUT_CLASSIFICATION	2.0669969725728385E-6	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999999760650689	WITHOUT_CLASSIFICATION	2.3934931214668808E-8	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999905411988165	WITHOUT_CLASSIFICATION	9.458801183594926E-6	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999998897842401	WITHOUT_CLASSIFICATION	1.1021575988712725E-7	DEFECT
// we create a new but empty chartMouseListeners list	WITHOUT_CLASSIFICATION	0.9999999992409231	WITHOUT_CLASSIFICATION	7.590768827699248E-10	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999998897842401	WITHOUT_CLASSIFICATION	1.1021575988712725E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */	WITHOUT_CLASSIFICATION	0.9931664803493213	WITHOUT_CLASSIFICATION	0.00683351965067862	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999998740825294	WITHOUT_CLASSIFICATION	1.2591747056609492E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999998897842401	WITHOUT_CLASSIFICATION	1.1021575988712725E-7	DEFECT
// suppresses compiler warning	WITHOUT_CLASSIFICATION	0.9999998897842401	WITHOUT_CLASSIFICATION	1.1021575988712725E-7	DEFECT
// create the renderer...	WITHOUT_CLASSIFICATION	0.9999894293783848	WITHOUT_CLASSIFICATION	1.0570621615245216E-5	DEFECT
// create the plot...	WITHOUT_CLASSIFICATION	0.9999893578031391	WITHOUT_CLASSIFICATION	1.064219686075464E-5	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999995336838802	WITHOUT_CLASSIFICATION	4.663161198635123E-7	DEFECT
// forces recalculation of the axis range	WITHOUT_CLASSIFICATION	0.9999999628246231	WITHOUT_CLASSIFICATION	3.7175376953554806E-8	DEFECT
// reduce the default margins	WITHOUT_CLASSIFICATION	0.9999999972530111	WITHOUT_CLASSIFICATION	2.74698896090491E-9	DEFECT
// override default	WITHOUT_CLASSIFICATION	0.9999999792505937	WITHOUT_CLASSIFICATION	2.0749406305720015E-8	DEFECT
// get desired width and height from somewhere then...	WITHOUT_CLASSIFICATION	0.9999991841380983	WITHOUT_CLASSIFICATION	8.15861901591551E-7	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999927764949667	WITHOUT_CLASSIFICATION	7.2235050333914E-6	DEFECT
// change rendering order to ensure that bar overlapping is the // right way around	WITHOUT_CLASSIFICATION	0.9999927764949667	WITHOUT_CLASSIFICATION	7.2235050333914E-6	DEFECT
// no need to instantiate this    	WITHOUT_CLASSIFICATION	0.9999996211332667	WITHOUT_CLASSIFICATION	3.7886673327483176E-7	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.999981656355731	WITHOUT_CLASSIFICATION	1.8343644268973102E-5	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */	WITHOUT_CLASSIFICATION	0.9987259144283894	WITHOUT_CLASSIFICATION	0.0012740855716105999	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997375702552	WITHOUT_CLASSIFICATION	2.6242974477019893E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999996564482568	WITHOUT_CLASSIFICATION	3.435517431409492E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999996564482568	WITHOUT_CLASSIFICATION	3.435517431409492E-7	DEFECT
/* shape visible = */	WITHOUT_CLASSIFICATION	0.9999996564482568	WITHOUT_CLASSIFICATION	3.435517431409492E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997375702552	WITHOUT_CLASSIFICATION	2.6242974477019893E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997375702552	WITHOUT_CLASSIFICATION	2.6242974477019893E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997375702552	WITHOUT_CLASSIFICATION	2.6242974477019893E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997375702552	WITHOUT_CLASSIFICATION	2.6242974477019893E-7	DEFECT
/* shape filled = */	WITHOUT_CLASSIFICATION	0.9999997375702552	WITHOUT_CLASSIFICATION	2.6242974477019893E-7	DEFECT
/* shape outlined */	WITHOUT_CLASSIFICATION	0.9999996699832613	WITHOUT_CLASSIFICATION	3.300167386396748E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999998004362948	WITHOUT_CLASSIFICATION	1.9956370526378606E-7	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999992117743829	WITHOUT_CLASSIFICATION	7.882256172099534E-7	DEFECT
/* line visible */	WITHOUT_CLASSIFICATION	0.9999992117743829	WITHOUT_CLASSIFICATION	7.882256172099534E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999998004362948	WITHOUT_CLASSIFICATION	1.9956370526378606E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999998004362948	WITHOUT_CLASSIFICATION	1.9956370526378606E-7	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999998004362948	WITHOUT_CLASSIFICATION	1.9956370526378606E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999990544951531	WITHOUT_CLASSIFICATION	9.455048468568091E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999990544951531	WITHOUT_CLASSIFICATION	9.455048468568091E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999990544951531	WITHOUT_CLASSIFICATION	9.455048468568091E-7	DEFECT
// positiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999999373294911	WITHOUT_CLASSIFICATION	6.267050897704073E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9663651716845311	WITHOUT_CLASSIFICATION	0.03363482831546893	DEFECT
/* shape outlined = */	WITHOUT_CLASSIFICATION	0.9999998004362948	WITHOUT_CLASSIFICATION	1.9956370526378606E-7	DEFECT
/* line visible = */	WITHOUT_CLASSIFICATION	0.9999990544951531	WITHOUT_CLASSIFICATION	9.455048468568091E-7	DEFECT
// negativeItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999999254699214	WITHOUT_CLASSIFICATION	7.453007849939997E-8	DEFECT
// ----------------- // --- Constants --- // -----------------	WITHOUT_CLASSIFICATION	0.9999992531888129	WITHOUT_CLASSIFICATION	7.468111870929179E-7	DEFECT
// ------------------------ // --- Member Variables --- // ------------------------	WITHOUT_CLASSIFICATION	0.9999998572974798	WITHOUT_CLASSIFICATION	1.4270252029783855E-7	DEFECT
// -------------------- // --- Constructors --- // --------------------	WITHOUT_CLASSIFICATION	0.99999997791683	WITHOUT_CLASSIFICATION	2.2083169993926183E-8	DEFECT
// -------------------------- // --- ChartPanel Methods --- // --------------------------	WITHOUT_CLASSIFICATION	0.9999999741737793	WITHOUT_CLASSIFICATION	2.5826220759032924E-8	DEFECT
// ---------------------- // --- Public Methods --- // ----------------------	WITHOUT_CLASSIFICATION	0.9999994114667025	WITHOUT_CLASSIFICATION	5.885332975163584E-7	DEFECT
// ----------------------- // --- Private Methods --- // -----------------------	WITHOUT_CLASSIFICATION	0.9999986100955464	WITHOUT_CLASSIFICATION	1.3899044536533809E-6	DEFECT
// do nothing at all	WITHOUT_CLASSIFICATION	0.9999921510330938	WITHOUT_CLASSIFICATION	7.84896690614808E-6	DEFECT
// now process the plot if there is one	WITHOUT_CLASSIFICATION	0.9999998824967776	WITHOUT_CLASSIFICATION	1.175032223590571E-7	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999999559592441	WITHOUT_CLASSIFICATION	4.404075603475734E-8	DEFECT
// process all domain axes	WITHOUT_CLASSIFICATION	0.9999999559592441	WITHOUT_CLASSIFICATION	4.404075603475734E-8	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999999797368107	WITHOUT_CLASSIFICATION	2.0263189374056855E-8	DEFECT
// process all range axes	WITHOUT_CLASSIFICATION	0.9999999797368107	WITHOUT_CLASSIFICATION	2.0263189374056855E-8	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999998809029463	WITHOUT_CLASSIFICATION	1.1909705373794848E-7	DEFECT
// process all renderers	WITHOUT_CLASSIFICATION	0.9999998809029463	WITHOUT_CLASSIFICATION	1.1909705373794848E-7	DEFECT
// process all annotations	WITHOUT_CLASSIFICATION	0.9999999827672097	WITHOUT_CLASSIFICATION	1.7232790329983498E-8	DEFECT
// BarRenderer	WITHOUT_CLASSIFICATION	0.9999629319667116	WITHOUT_CLASSIFICATION	3.706803328835316E-5	DEFECT
// BarRenderer3D	WITHOUT_CLASSIFICATION	0.9999251518172557	WITHOUT_CLASSIFICATION	7.484818274421558E-5	DEFECT
// LineRenderer3D	WITHOUT_CLASSIFICATION	0.999998479610494	WITHOUT_CLASSIFICATION	1.5203895060571185E-6	DEFECT
//  StatisticalBarRenderer	WITHOUT_CLASSIFICATION	0.9999994953441814	WITHOUT_CLASSIFICATION	5.046558185005033E-7	DEFECT
// MinMaxCategoryRenderer	WITHOUT_CLASSIFICATION	0.9999976552861809	WITHOUT_CLASSIFICATION	2.344713819109122E-6	DEFECT
// handle GradientPaint as a special case	WITHOUT_CLASSIFICATION	0.9999999967237309	WITHOUT_CLASSIFICATION	3.276269149973161E-9	DEFECT
// create storage for listeners...	WITHOUT_CLASSIFICATION	0.9999992388607061	WITHOUT_CLASSIFICATION	7.611392938043144E-7	DEFECT
// add the chart title, if one has been specified...	WITHOUT_CLASSIFICATION	0.9999999646937051	WITHOUT_CLASSIFICATION	3.530629499705443E-8	DEFECT
// this fires a ChartChangeEvent	WITHOUT_CLASSIFICATION	0.9999967644440267	WITHOUT_CLASSIFICATION	3.2355559732180295E-6	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999997257787185	WITHOUT_CLASSIFICATION	2.742212814788275E-7	DEFECT
// register as a listener with sub-components...	WITHOUT_CLASSIFICATION	0.9999999760650689	WITHOUT_CLASSIFICATION	2.3934931214668808E-8	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999961937673023	WITHOUT_CLASSIFICATION	3.8062326976753605E-6	DEFECT
// draw the label	WITHOUT_CLASSIFICATION	0.9999996040880706	WITHOUT_CLASSIFICATION	3.959119293550602E-7	DEFECT
// clear the section attributes so that the theme's DrawingSupplier // will be used	WITHOUT_CLASSIFICATION	0.9999999726854368	WITHOUT_CLASSIFICATION	2.7314563213131654E-8	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999492039446	WITHOUT_CLASSIFICATION	5.07960552913806E-8	DEFECT
// for efficiency, we just use the first, last and middle items to // compute a hashCode...	WITHOUT_CLASSIFICATION	0.9999999492039446	WITHOUT_CLASSIFICATION	5.07960552913806E-8	DEFECT
// default is to notify listeners when the // chart changes	WITHOUT_CLASSIFICATION	0.9999999560640755	WITHOUT_CLASSIFICATION	4.3935924491779844E-8	DEFECT
// added the following hint because of  // http://stackoverflow.com/questions/7785082/	WITHOUT_CLASSIFICATION	0.9999998238199076	WITHOUT_CLASSIFICATION	1.7618009230518785E-7	DEFECT
// record the chart area, if info is requested...	WITHOUT_CLASSIFICATION	0.9999995395897363	WITHOUT_CLASSIFICATION	4.604102637199555E-7	DEFECT
// ensure no drawing occurs outside chart area...	WITHOUT_CLASSIFICATION	0.9999999957058143	WITHOUT_CLASSIFICATION	4.294185656097337E-9	DEFECT
// draw the chart background...	WITHOUT_CLASSIFICATION	0.9999972437513984	WITHOUT_CLASSIFICATION	2.756248601587519E-6	DEFECT
// draw the title and subtitles...	WITHOUT_CLASSIFICATION	0.9999944568755659	WITHOUT_CLASSIFICATION	5.543124434098801E-6	DEFECT
// draw the plot (axes and data visualisation)	WITHOUT_CLASSIFICATION	0.9999995802054514	WITHOUT_CLASSIFICATION	4.197945484773116E-7	DEFECT
// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;	WITHOUT_CLASSIFICATION	0.9999976165657276	WITHOUT_CLASSIFICATION	2.3834342724122663E-6	DEFECT
// get a locale-specific resource bundle...	WITHOUT_CLASSIFICATION	0.9999998655850434	WITHOUT_CLASSIFICATION	1.344149566020095E-7	DEFECT
// load only when required	WITHOUT_CLASSIFICATION	0.9999487761591828	WITHOUT_CLASSIFICATION	5.122384081717644E-5	DEFECT
// use ImageIcon because it waits for the image to load...	WITHOUT_CLASSIFICATION	0.999987273500215	WITHOUT_CLASSIFICATION	1.272649978514439E-5	DEFECT
// don't zoom unless the mouse pointer is in the plot's data area	WITHOUT_CLASSIFICATION	0.9999964715827435	WITHOUT_CLASSIFICATION	3.528417256577153E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999962511583169	WITHOUT_CLASSIFICATION	3.748841683032645E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999998363001846	WITHOUT_CLASSIFICATION	1.6369981534031823E-7	DEFECT
// if we don't have at least 2 (x, y) coordinates, just return	WITHOUT_CLASSIFICATION	0.9999999107748826	WITHOUT_CLASSIFICATION	8.922511736825409E-8	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999385208156	WITHOUT_CLASSIFICATION	6.147918435301665E-8	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999385208156	WITHOUT_CLASSIFICATION	6.147918435301665E-8	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999997291656184	WITHOUT_CLASSIFICATION	2.7083438154214837E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999997291656184	WITHOUT_CLASSIFICATION	2.7083438154214837E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999963186796512	WITHOUT_CLASSIFICATION	3.681320348847142E-6	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999963186796512	WITHOUT_CLASSIFICATION	3.681320348847142E-6	DEFECT
/* Rectangle2D hotspot = */	WITHOUT_CLASSIFICATION	0.9999927921760717	WITHOUT_CLASSIFICATION	7.207823928276808E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.999981656355731	WITHOUT_CLASSIFICATION	1.8343644268973102E-5	DEFECT
// FIXME //SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9996143734434895	WITHOUT_CLASSIFICATION	3.856265565104766E-4	DEFECT
// FIXME //this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9986684506541421	WITHOUT_CLASSIFICATION	0.0013315493458578504	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.999999913310962	WITHOUT_CLASSIFICATION	8.668903796650695E-8	DEFECT
// by default the outline and background won't be visible	WITHOUT_CLASSIFICATION	0.9999976614576348	WITHOUT_CLASSIFICATION	2.3385423651015927E-6	DEFECT
// now try to reject equality	WITHOUT_CLASSIFICATION	0.9999999385208156	WITHOUT_CLASSIFICATION	6.147918435301665E-8	DEFECT
// create plot ...	WITHOUT_CLASSIFICATION	0.9999899530943479	WITHOUT_CLASSIFICATION	1.0046905652055923E-5	DEFECT
// add a second dataset and renderer...	WITHOUT_CLASSIFICATION	0.9998074242764847	WITHOUT_CLASSIFICATION	1.925757235152084E-4	DEFECT
// return a new chart containing the overlaid plot...	WITHOUT_CLASSIFICATION	0.9999999883016306	WITHOUT_CLASSIFICATION	1.169836943102821E-8	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999997693344819	WITHOUT_CLASSIFICATION	2.3066551802473488E-7	DEFECT
// seem to be the same	WITHOUT_CLASSIFICATION	0.9999997291656184	WITHOUT_CLASSIFICATION	2.7083438154214837E-7	DEFECT
// now try to reject equality...	WITHOUT_CLASSIFICATION	0.9999963186796512	WITHOUT_CLASSIFICATION	3.681320348847142E-6	DEFECT
// seems to be the same...	WITHOUT_CLASSIFICATION	0.999981656355731	WITHOUT_CLASSIFICATION	1.8343644268973102E-5	DEFECT
// baseNegativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999999570170918	WITHOUT_CLASSIFICATION	4.2982908163137506E-8	DEFECT
// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored	WITHOUT_CLASSIFICATION	0.9999999989500774	WITHOUT_CLASSIFICATION	1.0499226355326438E-9	DEFECT
// compute transform matrix elements via sample points. Assume no // rotation or shear.	WITHOUT_CLASSIFICATION	0.9999995494957973	WITHOUT_CLASSIFICATION	4.505042027295331E-7	DEFECT
//  create transform & transform shape	WITHOUT_CLASSIFICATION	0.9999998734487868	WITHOUT_CLASSIFICATION	1.265512131482576E-7	DEFECT
//SerialUtilities.writeImage(this.image, stream);	WITHOUT_CLASSIFICATION	0.9999999945863413	WITHOUT_CLASSIFICATION	5.413658731730617E-9	DEFECT
//this.image = SerialUtilities.readImage(stream);	WITHOUT_CLASSIFICATION	0.9999999845440926	WITHOUT_CLASSIFICATION	1.5455907391143602E-8	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999542880280139	WITHOUT_CLASSIFICATION	4.5711971986094415E-4	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.999998487862725	WITHOUT_CLASSIFICATION	1.5121372750644358E-6	DEFECT
// apply the margins - these should apply to the exponent range	WITHOUT_CLASSIFICATION	0.9999975881783919	WITHOUT_CLASSIFICATION	2.4118216080510002E-6	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9989958411585323	WITHOUT_CLASSIFICATION	0.0010041588414676768	DEFECT
// add minor ticks (for gridlines)	WITHOUT_CLASSIFICATION	0.9999997725782344	WITHOUT_CLASSIFICATION	2.2742176566028993E-7	DEFECT
// select a tick unit that is the next one bigger than the current // (log) range divided by 50	WITHOUT_CLASSIFICATION	0.9999966306469694	WITHOUT_CLASSIFICATION	3.3693530305288276E-6	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999997182297459	WITHOUT_CLASSIFICATION	2.817702540969211E-7	DEFECT
// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label	WITHOUT_CLASSIFICATION	0.9999997182297459	WITHOUT_CLASSIFICATION	2.817702540969211E-7	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999994219746411	WITHOUT_CLASSIFICATION	5.780253589138374E-7	DEFECT
// what is the available space for one unit?	WITHOUT_CLASSIFICATION	0.9999994219746411	WITHOUT_CLASSIFICATION	5.780253589138374E-7	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.999999268003364	WITHOUT_CLASSIFICATION	7.319966359171429E-7	DEFECT
// there are no more candidates	WITHOUT_CLASSIFICATION	0.999999268003364	WITHOUT_CLASSIFICATION	7.319966359171429E-7	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999959968033525	WITHOUT_CLASSIFICATION	4.003196647539524E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999916454256905	WITHOUT_CLASSIFICATION	8.354574309516995E-6	DEFECT
// no need to create entity if we can't save it anyways...	WITHOUT_CLASSIFICATION	0.9998386030072165	WITHOUT_CLASSIFICATION	1.6139699278346848E-4	DEFECT
// it is unlikely that 'state' will be null, but check anyway...	WITHOUT_CLASSIFICATION	0.999740193538585	WITHOUT_CLASSIFICATION	2.598064614150461E-4	DEFECT
// It's up to the plot which clones up to restore the correct references	WITHOUT_CLASSIFICATION	0.9999941554974957	WITHOUT_CLASSIFICATION	5.844502504301121E-6	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999985390510724	WITHOUT_CLASSIFICATION	1.4609489276689726E-6	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999998568132477	WITHOUT_CLASSIFICATION	1.4318675238724628E-7	DEFECT
// regular number axis	WITHOUT_CLASSIFICATION	0.9999998568132477	WITHOUT_CLASSIFICATION	1.4318675238724628E-7	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.999999941604003	WITHOUT_CLASSIFICATION	5.8395997125472365E-8	DEFECT
// displayStart > displayEnd, need to handle split	WITHOUT_CLASSIFICATION	0.999999941604003	WITHOUT_CLASSIFICATION	5.8395997125472365E-8	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999993199165539	WITHOUT_CLASSIFICATION	6.800834459963862E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996879104323902	WITHOUT_CLASSIFICATION	3.1208956760980805E-4	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.999971470098887	WITHOUT_CLASSIFICATION	2.8529901112999266E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999835300560548	WITHOUT_CLASSIFICATION	1.6469943945167173E-5	DEFECT
//negative values not allowed	WITHOUT_CLASSIFICATION	0.999938353661021	WITHOUT_CLASSIFICATION	6.164633897903497E-5	DEFECT
// no plot, no data.	WITHOUT_CLASSIFICATION	0.9999994220130823	WITHOUT_CLASSIFICATION	5.779869175684718E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999994461920594	WITHOUT_CLASSIFICATION	5.538079406389657E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996879104323902	WITHOUT_CLASSIFICATION	3.1208956760980805E-4	DEFECT
// if the axis has a fixed dimension, return it...	WITHOUT_CLASSIFICATION	0.999971470098887	WITHOUT_CLASSIFICATION	2.8529901112999266E-5	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999835300560548	WITHOUT_CLASSIFICATION	1.6469943945167173E-5	DEFECT
// baseCreateEntities;	WITHOUT_CLASSIFICATION	0.9999999854642438	WITHOUT_CLASSIFICATION	1.453575625872124E-8	DEFECT
// add space for the outer tick labels, if any...	WITHOUT_CLASSIFICATION	0.999993198124494	WITHOUT_CLASSIFICATION	6.80187550591406E-6	DEFECT
// draw minor tick marks	WITHOUT_CLASSIFICATION	0.9999999065807997	WITHOUT_CLASSIFICATION	9.341920025492871E-8	DEFECT
// work out the initial gap	WITHOUT_CLASSIFICATION	0.9999915552435029	WITHOUT_CLASSIFICATION	8.444756496989482E-6	DEFECT
// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.9727025881985412	WITHOUT_CLASSIFICATION	0.027297411801458813	DEFECT
// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...	WITHOUT_CLASSIFICATION	0.993278383017202	WITHOUT_CLASSIFICATION	0.0067216169827981065	DEFECT
// work out the trailing gap	WITHOUT_CLASSIFICATION	0.9999587051585316	WITHOUT_CLASSIFICATION	4.129484146837147E-5	DEFECT
// draw the arrow...	WITHOUT_CLASSIFICATION	0.9999862060985085	WITHOUT_CLASSIFICATION	1.3793901491504308E-5	DEFECT
// need to work out the space used by the tick labels... // so we can update the cursor...	WITHOUT_CLASSIFICATION	0.9999853916496875	WITHOUT_CLASSIFICATION	1.4608350312559329E-5	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999808470413782	WITHOUT_CLASSIFICATION	1.9152958621776918E-5	DEFECT
// if autoRange is true, then the current range is irrelevant	WITHOUT_CLASSIFICATION	0.9999999446076662	WITHOUT_CLASSIFICATION	5.53923338974595E-8	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999999317535178	WITHOUT_CLASSIFICATION	6.82464822268721E-8	DEFECT
//setup number formatter obj	WITHOUT_CLASSIFICATION	0.9999999317535178	WITHOUT_CLASSIFICATION	6.82464822268721E-8	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999991209568752	WITHOUT_CLASSIFICATION	8.790431248473197E-7	DEFECT
// if negative then set flag and make positive	WITHOUT_CLASSIFICATION	0.9999991209568752	WITHOUT_CLASSIFICATION	8.790431248473197E-7	DEFECT
//return value; negate if original value was negative:	WITHOUT_CLASSIFICATION	0.9999995742366462	WITHOUT_CLASSIFICATION	4.2576335370530105E-7	DEFECT
//invert adjustLog10	WITHOUT_CLASSIFICATION	0.9999999705525389	WITHOUT_CLASSIFICATION	2.9447461123525432E-8	DEFECT
//calculate floor using negative value:	WITHOUT_CLASSIFICATION	0.9999985260929672	WITHOUT_CLASSIFICATION	1.473907032634389E-6	DEFECT
//calculate power using positive value; then negate	WITHOUT_CLASSIFICATION	0.9999997051417323	WITHOUT_CLASSIFICATION	2.9485826766196683E-7	DEFECT
//negative values are allowed	WITHOUT_CLASSIFICATION	0.9999942804078634	WITHOUT_CLASSIFICATION	5.719592136654347E-6	DEFECT
//calculate ceil using negative value:	WITHOUT_CLASSIFICATION	0.9999990675468114	WITHOUT_CLASSIFICATION	9.324531886130009E-7	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.999998487862725	WITHOUT_CLASSIFICATION	1.5121372750644358E-6	DEFECT
// legendTextPaint	WITHOUT_CLASSIFICATION	0.9999983427413449	WITHOUT_CLASSIFICATION	1.6572586550722935E-6	DEFECT
//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:	WITHOUT_CLASSIFICATION	0.9999968203757706	WITHOUT_CLASSIFICATION	3.179624229380042E-6	DEFECT
// if < 10 then //increase so 0 translates to 0	WITHOUT_CLASSIFICATION	0.9999998329094228	WITHOUT_CLASSIFICATION	1.670905772210124E-7	DEFECT
//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9998981205938315	WITHOUT_CLASSIFICATION	1.0187940616838636E-4	DEFECT
//parameter value is < -10 //calculate log using positive value:	WITHOUT_CLASSIFICATION	0.9999975528718426	WITHOUT_CLASSIFICATION	2.447128157421562E-6	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999990253786206	WITHOUT_CLASSIFICATION	9.746213793671622E-7	DEFECT
//parameter value is -10 > val < 10 //use as-is	WITHOUT_CLASSIFICATION	0.9999990253786206	WITHOUT_CLASSIFICATION	9.746213793671622E-7	DEFECT
//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999405090160841	WITHOUT_CLASSIFICATION	5.9490983915953135E-5	DEFECT
//parameter value is <= 0 //use as-is	WITHOUT_CLASSIFICATION	0.9999988205463951	WITHOUT_CLASSIFICATION	1.1794536048472002E-6	DEFECT
//parameter value is > 10 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.999966266363692	WITHOUT_CLASSIFICATION	3.373363630792858E-5	DEFECT
//parameter value is > 0 // The Math.log() function is based on e not 10.	WITHOUT_CLASSIFICATION	0.9999762890215518	WITHOUT_CLASSIFICATION	2.3710978448332164E-5	DEFECT
//no real data present	WITHOUT_CLASSIFICATION	0.9999998468615023	WITHOUT_CLASSIFICATION	1.531384976779776E-7	DEFECT
//get lower bound value	WITHOUT_CLASSIFICATION	0.999999745730395	WITHOUT_CLASSIFICATION	2.5426960512383967E-7	DEFECT
//actual data is present //get lower bound value	WITHOUT_CLASSIFICATION	0.9999991004670311	WITHOUT_CLASSIFICATION	8.995329689278341E-7	DEFECT
//strict flag set, allow-negatives not set and values <= 0	WITHOUT_CLASSIFICATION	0.9999969286568243	WITHOUT_CLASSIFICATION	3.0713431756408157E-6	DEFECT
//apply lower margin by decreasing lower bound:	WITHOUT_CLASSIFICATION	0.999999844362381	WITHOUT_CLASSIFICATION	1.5563761893992046E-7	DEFECT
//lower bound and margin OK; get log10 of lower bound	WITHOUT_CLASSIFICATION	0.9999999556443517	WITHOUT_CLASSIFICATION	4.4355648242075416E-8	DEFECT
//get absolute value of log10 value	WITHOUT_CLASSIFICATION	0.9999998740825294	WITHOUT_CLASSIFICATION	1.2591747056609492E-7	DEFECT
//need to account for case where upper==0.0	WITHOUT_CLASSIFICATION	0.9999962314049446	WITHOUT_CLASSIFICATION	3.768595055407899E-6	DEFECT
//setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999982657839621	WITHOUT_CLASSIFICATION	1.7342160378616994E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999993929448254	WITHOUT_CLASSIFICATION	6.070551746490036E-7	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999996551683111	WITHOUT_CLASSIFICATION	3.448316888227418E-7	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999986402556151	WITHOUT_CLASSIFICATION	1.3597443848961288E-6	DEFECT
//for each power of 10 value; create ten ticks	WITHOUT_CLASSIFICATION	0.99999943973648	WITHOUT_CLASSIFICATION	5.602635200689739E-7	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.99999813738851	WITHOUT_CLASSIFICATION	1.8626114901243787E-6	DEFECT
//small log values in use; create numeric value for tick	WITHOUT_CLASSIFICATION	0.9999944265173946	WITHOUT_CLASSIFICATION	5.5734826053303975E-6	DEFECT
//create tick label (force use of fmt obj):	WITHOUT_CLASSIFICATION	0.999999853602379	WITHOUT_CLASSIFICATION	1.4639762094343327E-7	DEFECT
//no tick label to be shown	WITHOUT_CLASSIFICATION	0.9999953610822482	WITHOUT_CLASSIFICATION	4.638917751797995E-6	DEFECT
//create tick label:	WITHOUT_CLASSIFICATION	0.9999982446324694	WITHOUT_CLASSIFICATION	1.7553675304938987E-6	DEFECT
//get lower bound value:	WITHOUT_CLASSIFICATION	0.9999993929448254	WITHOUT_CLASSIFICATION	6.070551746490036E-7	DEFECT
//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):	WITHOUT_CLASSIFICATION	0.999999701817191	WITHOUT_CLASSIFICATION	2.981828090373479E-7	DEFECT
//get upper bound value	WITHOUT_CLASSIFICATION	0.9999996551683111	WITHOUT_CLASSIFICATION	3.448316888227418E-7	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999919858362409	WITHOUT_CLASSIFICATION	8.014163759137625E-6	DEFECT
//get log10 version of lower bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999996085406417	WITHOUT_CLASSIFICATION	3.914593581699392E-7	DEFECT
//get log10 version of upper bound and round to integer:	WITHOUT_CLASSIFICATION	0.9999986402556151	WITHOUT_CLASSIFICATION	1.3597443848961288E-6	DEFECT
//for each tick to be displayed	WITHOUT_CLASSIFICATION	0.99999813738851	WITHOUT_CLASSIFICATION	1.8626114901243787E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.999999454500498	WITHOUT_CLASSIFICATION	5.454995020817564E-7	DEFECT
//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer	WITHOUT_CLASSIFICATION	0.9999973799818412	WITHOUT_CLASSIFICATION	2.620018158717583E-6	DEFECT
//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:	WITHOUT_CLASSIFICATION	0.9999998387655433	WITHOUT_CLASSIFICATION	1.612344565756571E-7	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:	WITHOUT_CLASSIFICATION	0.99999928468178	WITHOUT_CLASSIFICATION	7.153182200885421E-7	DEFECT
// did not do zero tick last iteration	WITHOUT_CLASSIFICATION	0.9999986186588878	WITHOUT_CLASSIFICATION	1.3813411121993304E-6	DEFECT
//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick	WITHOUT_CLASSIFICATION	0.9999989334642656	WITHOUT_CLASSIFICATION	1.066535734419592E-6	DEFECT
// if past highest data value then exit // method	WITHOUT_CLASSIFICATION	0.9999971674334178	WITHOUT_CLASSIFICATION	2.832566582250502E-6	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999986139676035	WITHOUT_CLASSIFICATION	1.3860323965652119E-6	DEFECT
//for each tick with a label to be displayed	WITHOUT_CLASSIFICATION	0.9999977333359437	WITHOUT_CLASSIFICATION	2.266664056278446E-6	DEFECT
//small log values in use	WITHOUT_CLASSIFICATION	0.9999933813905635	WITHOUT_CLASSIFICATION	6.618609436543073E-6	DEFECT
//first tick of group; create label text	WITHOUT_CLASSIFICATION	0.9999998769245203	WITHOUT_CLASSIFICATION	1.23075479623915E-7	DEFECT
//not "log10"-type label	WITHOUT_CLASSIFICATION	0.9999618399902164	WITHOUT_CLASSIFICATION	3.8160009783686326E-5	DEFECT
//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):	WITHOUT_CLASSIFICATION	0.9999919858362409	WITHOUT_CLASSIFICATION	8.014163759137625E-6	DEFECT
//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks	WITHOUT_CLASSIFICATION	0.999999454500498	WITHOUT_CLASSIFICATION	5.454995020817564E-7	DEFECT
//tick value not below lowest data value	WITHOUT_CLASSIFICATION	0.9999986139676035	WITHOUT_CLASSIFICATION	1.3860323965652119E-6	DEFECT
// ITEM_LABEL_PAINT	WITHOUT_CLASSIFICATION	0.9999984030379585	WITHOUT_CLASSIFICATION	1.5969620414638397E-6	DEFECT
//if flag then //create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999586663621381	WITHOUT_CLASSIFICATION	4.133363786183049E-5	DEFECT
//if flag then //create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999659832393476	WITHOUT_CLASSIFICATION	3.4016760652412016E-5	DEFECT
//not "1e#"-type label // if positive exponent then // make integer	WITHOUT_CLASSIFICATION	0.9999966602403696	WITHOUT_CLASSIFICATION	3.3397596304889613E-6	DEFECT
//negative exponent; create fractional value //set exact number of fractional digits to // be shown:	WITHOUT_CLASSIFICATION	0.9999971161602551	WITHOUT_CLASSIFICATION	2.883839744958206E-6	DEFECT
//not small log values in use; allow for values <= 0 //if did zero tick last iter then	WITHOUT_CLASSIFICATION	0.9999975493591419	WITHOUT_CLASSIFICATION	2.450640858172155E-6	DEFECT
//decrement to do 1.0 tick now	WITHOUT_CLASSIFICATION	0.9999969640149068	WITHOUT_CLASSIFICATION	3.0359850932876535E-6	DEFECT
//first tick of group // did not do zero tick last // iteration	WITHOUT_CLASSIFICATION	0.9999999710859427	WITHOUT_CLASSIFICATION	2.8914057178364633E-8	DEFECT
// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick	WITHOUT_CLASSIFICATION	0.9999999400037389	WITHOUT_CLASSIFICATION	5.999626106347462E-8	DEFECT
//first or last tick on graph or value is 1.0 //create label for tick:	WITHOUT_CLASSIFICATION	0.9999971514509216	WITHOUT_CLASSIFICATION	2.8485490784350872E-6	DEFECT
//create "log10"-type label	WITHOUT_CLASSIFICATION	0.9999983215638504	WITHOUT_CLASSIFICATION	1.6784361495988242E-6	DEFECT
//create "1e#"-type label	WITHOUT_CLASSIFICATION	0.9999990666216435	WITHOUT_CLASSIFICATION	9.333783565420894E-7	DEFECT
// did zero tick last iteration //no label //clear flag	WITHOUT_CLASSIFICATION	0.9999989205636057	WITHOUT_CLASSIFICATION	1.079436394305482E-6	DEFECT
// not first tick of group //no label //make sure flag cleared	WITHOUT_CLASSIFICATION	0.9999998165231013	WITHOUT_CLASSIFICATION	1.8347689858986935E-7	DEFECT
//if past highest data value then exit method	WITHOUT_CLASSIFICATION	0.9999730930038471	WITHOUT_CLASSIFICATION	2.690699615303678E-5	DEFECT
//create tick object and add to list:	WITHOUT_CLASSIFICATION	0.9999914841295559	WITHOUT_CLASSIFICATION	8.515870444220568E-6	DEFECT
//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):	WITHOUT_CLASSIFICATION	0.9999999305537155	WITHOUT_CLASSIFICATION	6.944628455447924E-8	DEFECT
// populate deprecated fields	WITHOUT_CLASSIFICATION	0.9999999893715967	WITHOUT_CLASSIFICATION	1.0628403215904955E-8	DEFECT
// usually the range will be a DateRange, but if it isn't do a // conversion...	WITHOUT_CLASSIFICATION	0.9999203247101022	WITHOUT_CLASSIFICATION	7.967528989791272E-5	DEFECT
// check the new minimum date relative to the current maximum date	WITHOUT_CLASSIFICATION	0.9999999621620445	WITHOUT_CLASSIFICATION	3.7837955519318666E-8	DEFECT
// check the new maximum date relative to the current minimum date	WITHOUT_CLASSIFICATION	0.9999999646312833	WITHOUT_CLASSIFICATION	3.5368716772847194E-8	DEFECT
// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3	WITHOUT_CLASSIFICATION	0.981826522951192	WITHOUT_CLASSIFICATION	0.018173477048807955	DEFECT
// date formatters	WITHOUT_CLASSIFICATION	0.9999958299200752	WITHOUT_CLASSIFICATION	4.170079924896652E-6	DEFECT
// milliseconds	WITHOUT_CLASSIFICATION	0.9999975281600485	WITHOUT_CLASSIFICATION	2.47183995149503E-6	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999916454256905	WITHOUT_CLASSIFICATION	8.354574309516995E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999993199165539	WITHOUT_CLASSIFICATION	6.800834459963862E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996879104323902	WITHOUT_CLASSIFICATION	3.1208956760980805E-4	DEFECT
// seconds	WITHOUT_CLASSIFICATION	0.9999935239607749	WITHOUT_CLASSIFICATION	6.4760392250881564E-6	DEFECT
// minutes	WITHOUT_CLASSIFICATION	0.9999998064759336	WITHOUT_CLASSIFICATION	1.935240665118692E-7	DEFECT
// hours	WITHOUT_CLASSIFICATION	0.9999995736070781	WITHOUT_CLASSIFICATION	4.263929218877262E-7	DEFECT
// days	WITHOUT_CLASSIFICATION	0.9999909055423729	WITHOUT_CLASSIFICATION	9.094457627173335E-6	DEFECT
// months	WITHOUT_CLASSIFICATION	0.9999993501641407	WITHOUT_CLASSIFICATION	6.498358592258193E-7	DEFECT
// years	WITHOUT_CLASSIFICATION	0.9999961313459389	WITHOUT_CLASSIFICATION	3.868654061056538E-6	DEFECT
//Timeline hasn't method getStartTime()	WITHOUT_CLASSIFICATION	0.9999995719182235	WITHOUT_CLASSIFICATION	4.2808177638572143E-7	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999861000375414	WITHOUT_CLASSIFICATION	1.389996245856986E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999718881760302	WITHOUT_CLASSIFICATION	2.8111823969801666E-5	DEFECT
// start with a unit that is at least 1/10th of the axis length	WITHOUT_CLASSIFICATION	0.9999936290342673	WITHOUT_CLASSIFICATION	6.370965732700149E-6	DEFECT
// now extrapolate based on label height and unit height...	WITHOUT_CLASSIFICATION	0.9998967549217117	WITHOUT_CLASSIFICATION	1.0324507828838214E-4	DEFECT
// make final selection...	WITHOUT_CLASSIFICATION	0.9999718555312036	WITHOUT_CLASSIFICATION	2.814446879644454E-5	DEFECT
// all tick labels have the same width (equal to the height of // the font)...	WITHOUT_CLASSIFICATION	0.999985397221489	WITHOUT_CLASSIFICATION	1.460277851090255E-5	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9993515083444183	WITHOUT_CLASSIFICATION	6.484916555817609E-4	DEFECT
// could add a flag to make the following correction optional...	WITHOUT_CLASSIFICATION	0.9993515083444183	WITHOUT_CLASSIFICATION	6.484916555817609E-4	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999670952766581	WITHOUT_CLASSIFICATION	3.2904723341941705E-5	DEFECT
// work out the value, label and position	WITHOUT_CLASSIFICATION	0.9999670952766581	WITHOUT_CLASSIFICATION	3.2904723341941705E-5	DEFECT
// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...	WITHOUT_CLASSIFICATION	0.9831807409843613	WITHOUT_CLASSIFICATION	0.016819259015638768	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999933894030784	WITHOUT_CLASSIFICATION	6.610596921693389E-6	DEFECT
// draw the axis label (note that 'state' is passed in *and* // returned)...	WITHOUT_CLASSIFICATION	0.9999999219604824	WITHOUT_CLASSIFICATION	7.80395176514408E-8	DEFECT
// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:	WITHOUT_CLASSIFICATION	0.999998107111494	WITHOUT_CLASSIFICATION	1.8928885060752167E-6	DEFECT
// 'dateTickUnit' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.999998906917656	WITHOUT_CLASSIFICATION	1.093082344006943E-6	DEFECT
// 'tickMarkPosition' is immutable : no need to clone	WITHOUT_CLASSIFICATION	0.999995029346948	WITHOUT_CLASSIFICATION	4.970653052029772E-6	DEFECT
// if there is no specific font, use the general one...	WITHOUT_CLASSIFICATION	0.9999999887003675	WITHOUT_CLASSIFICATION	1.1299632515113123E-8	DEFECT
// if there is no specific paint, use the general one...	WITHOUT_CLASSIFICATION	0.9999999904995737	WITHOUT_CLASSIFICATION	9.500426301322413E-9	DEFECT
// find first excluded base segment starting fromDomainValue	WITHOUT_CLASSIFICATION	0.9999999838403205	WITHOUT_CLASSIFICATION	1.6159679466338758E-8	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999985390510724	WITHOUT_CLASSIFICATION	1.4609489276689726E-6	DEFECT
// get the axis label size and update the space object...	WITHOUT_CLASSIFICATION	0.9999835300560548	WITHOUT_CLASSIFICATION	1.6469943945167173E-5	DEFECT
// calculate the max size of the tick labels (if visible)...	WITHOUT_CLASSIFICATION	0.9999808470413782	WITHOUT_CLASSIFICATION	1.9152958621776918E-5	DEFECT
// nothing required	WITHOUT_CLASSIFICATION	0.9999964320124242	WITHOUT_CLASSIFICATION	3.5679875758073494E-6	DEFECT
// sanity check for data area...	WITHOUT_CLASSIFICATION	0.9999963296288902	WITHOUT_CLASSIFICATION	3.670371109756583E-6	DEFECT
// step down in size until the current size is too small or there are  // no more units	WITHOUT_CLASSIFICATION	0.9999996326775007	WITHOUT_CLASSIFICATION	3.6732249932878595E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998911775484	WITHOUT_CLASSIFICATION	1.0882245150871673E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999546199658	WITHOUT_CLASSIFICATION	4.538003419927486E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998678101648	WITHOUT_CLASSIFICATION	1.3218983515500645E-7	DEFECT
//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999204741826	WITHOUT_CLASSIFICATION	7.952581742883571E-8	DEFECT
// make a time zone with no DST for our Calendar calculations	WITHOUT_CLASSIFICATION	0.9999999740215688	WITHOUT_CLASSIFICATION	2.597843109825299E-8	DEFECT
// calculate midnight of first monday after 1/1/1900 relative to // current locale	WITHOUT_CLASSIFICATION	0.9999981409856482	WITHOUT_CLASSIFICATION	1.8590143517589887E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999551132819	WITHOUT_CLASSIFICATION	4.488671807931255E-8	DEFECT
//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998961654915	WITHOUT_CLASSIFICATION	1.0383450847795276E-7	DEFECT
// verify that baseTimeline is compatible with us	WITHOUT_CLASSIFICATION	0.9999999722217697	WITHOUT_CLASSIFICATION	2.7778230251179927E-8	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999995040540769	WITHOUT_CLASSIFICATION	4.959459231919115E-7	DEFECT
// - partialTimeInException;	WITHOUT_CLASSIFICATION	0.9999995040540769	WITHOUT_CLASSIFICATION	4.959459231919115E-7	DEFECT
//return toTimelineValue(dateDomainValue.getTime());	WITHOUT_CLASSIFICATION	0.9999998514019801	WITHOUT_CLASSIFICATION	1.4859801992051417E-7	DEFECT
// calculate the result as if no exceptions	WITHOUT_CLASSIFICATION	0.9999998756294607	WITHOUT_CLASSIFICATION	1.243705394108822E-7	DEFECT
// adjust result for any exceptions in the result calculated	WITHOUT_CLASSIFICATION	0.9999981341737059	WITHOUT_CLASSIFICATION	1.8658262941312718E-6	DEFECT
// skip all whole exception segments in the range	WITHOUT_CLASSIFICATION	0.9999998633708171	WITHOUT_CLASSIFICATION	1.366291829125279E-7	DEFECT
// skip exception or excluded segments we may fall on	WITHOUT_CLASSIFICATION	0.9999869970069343	WITHOUT_CLASSIFICATION	1.3002993065841135E-5	DEFECT
//addException(exceptionDate.getTime());	WITHOUT_CLASSIFICATION	0.9999935216004447	WITHOUT_CLASSIFICATION	6.478399555251476E-6	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999996356835611	WITHOUT_CLASSIFICATION	3.6431643891996907E-7	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.99999998044293	WITHOUT_CLASSIFICATION	1.9557069991944833E-8	DEFECT
// find all consecutive included segments	WITHOUT_CLASSIFICATION	0.9999996356835611	WITHOUT_CLASSIFICATION	3.6431643891996907E-7	DEFECT
// move forward exceptionSegmentCount segments skipping // excluded segments	WITHOUT_CLASSIFICATION	0.9999993337021317	WITHOUT_CLASSIFICATION	6.662978683964992E-7	DEFECT
// empty	WITHOUT_CLASSIFICATION	0.999997801039036	WITHOUT_CLASSIFICATION	2.198960964050566E-6	DEFECT
// add the interval as an exception	WITHOUT_CLASSIFICATION	0.99999998044293	WITHOUT_CLASSIFICATION	1.9557069991944833E-8	DEFECT
// this is not one of our included segment, skip it	WITHOUT_CLASSIFICATION	0.9999890634322195	WITHOUT_CLASSIFICATION	1.0936567780583344E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999819310811	WITHOUT_CLASSIFICATION	1.8068918940527714E-8	DEFECT
// cycle over all the base segments groups in the range	WITHOUT_CLASSIFICATION	0.9999999196515253	WITHOUT_CLASSIFICATION	8.034847466942203E-8	DEFECT
// cycle through all the segments contained in the base exclusion // area	WITHOUT_CLASSIFICATION	0.9999968745294432	WITHOUT_CLASSIFICATION	3.1254705568537867E-6	DEFECT
// go to next base segment group	WITHOUT_CLASSIFICATION	0.9999991265073516	WITHOUT_CLASSIFICATION	8.734926484091852E-7	DEFECT
// key not found	WITHOUT_CLASSIFICATION	0.9999255253207341	WITHOUT_CLASSIFICATION	7.447467926585569E-5	DEFECT
// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();	WITHOUT_CLASSIFICATION	0.99999772606173	WITHOUT_CLASSIFICATION	2.273938269978678E-6	DEFECT
// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);	WITHOUT_CLASSIFICATION	0.9999997699048618	WITHOUT_CLASSIFICATION	2.3009513819663358E-7	DEFECT
// Compute number of labels	WITHOUT_CLASSIFICATION	0.9999999494866926	WITHOUT_CLASSIFICATION	5.051330752144358E-8	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999999865821974	WITHOUT_CLASSIFICATION	1.3417802699861672E-8	DEFECT
// Cycle when necessary	WITHOUT_CLASSIFICATION	0.9999999865821974	WITHOUT_CLASSIFICATION	1.3417802699861672E-8	DEFECT
// If tick overlap when cycling, update last tick too	WITHOUT_CLASSIFICATION	0.999999804884558	WITHOUT_CLASSIFICATION	1.951154419449159E-7	DEFECT
// continue and separate the labels only if necessary	WITHOUT_CLASSIFICATION	0.9999999289931771	WITHOUT_CLASSIFICATION	7.100682290100304E-8	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999722272371478	WITHOUT_CLASSIFICATION	2.777276285213295E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999722272371478	WITHOUT_CLASSIFICATION	2.777276285213295E-5	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999722272371478	WITHOUT_CLASSIFICATION	2.777276285213295E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998923855009226	WITHOUT_CLASSIFICATION	1.0761449907747111E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998923855009226	WITHOUT_CLASSIFICATION	1.0761449907747111E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998923855009226	WITHOUT_CLASSIFICATION	1.0761449907747111E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999986737556946	WITHOUT_CLASSIFICATION	1.3262443052664725E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999986737556946	WITHOUT_CLASSIFICATION	1.3262443052664725E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999986737556946	WITHOUT_CLASSIFICATION	1.3262443052664725E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999854257198313	WITHOUT_CLASSIFICATION	1.4574280168784644E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999854257198313	WITHOUT_CLASSIFICATION	1.4574280168784644E-5	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999994461920594	WITHOUT_CLASSIFICATION	5.538079406389657E-7	DEFECT
// no plot, no data	WITHOUT_CLASSIFICATION	0.9999994461920594	WITHOUT_CLASSIFICATION	5.538079406389657E-7	DEFECT
// if fixed auto range, then derive lower bound...	WITHOUT_CLASSIFICATION	0.9999947700312374	WITHOUT_CLASSIFICATION	5.229968762622238E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.999998487862725	WITHOUT_CLASSIFICATION	1.5121372750644358E-6	DEFECT
// ensure the autorange is at least <minRange> in size...	WITHOUT_CLASSIFICATION	0.999998487862725	WITHOUT_CLASSIFICATION	1.5121372750644358E-6	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999542880280139	WITHOUT_CLASSIFICATION	4.5711971986094415E-4	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9989958411585323	WITHOUT_CLASSIFICATION	0.0010041588414676768	DEFECT
// look at lower and upper bounds...	WITHOUT_CLASSIFICATION	0.9999916454256905	WITHOUT_CLASSIFICATION	8.354574309516995E-6	DEFECT
// draw the tick marks and labels...	WITHOUT_CLASSIFICATION	0.9999933894030784	WITHOUT_CLASSIFICATION	6.610596921693389E-6	DEFECT
// TOP	WITHOUT_CLASSIFICATION	0.9999722272371478	WITHOUT_CLASSIFICATION	2.777276285213295E-5	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998923855009226	WITHOUT_CLASSIFICATION	1.0761449907747111E-4	DEFECT
// BOTTOM	WITHOUT_CLASSIFICATION	0.9998923855009226	WITHOUT_CLASSIFICATION	1.0761449907747111E-4	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999986737556946	WITHOUT_CLASSIFICATION	1.3262443052664725E-6	DEFECT
// LEFT	WITHOUT_CLASSIFICATION	0.9999986737556946	WITHOUT_CLASSIFICATION	1.3262443052664725E-6	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999854257198313	WITHOUT_CLASSIFICATION	1.4574280168784644E-5	DEFECT
// RIGHT	WITHOUT_CLASSIFICATION	0.9999854257198313	WITHOUT_CLASSIFICATION	1.4574280168784644E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999819310811	WITHOUT_CLASSIFICATION	1.8068918940527714E-8	DEFECT
// default make height of plotArea	WITHOUT_CLASSIFICATION	0.9999944795737551	WITHOUT_CLASSIFICATION	5.520426244893074E-6	DEFECT
// allow fixed thickness	WITHOUT_CLASSIFICATION	0.9999972260503209	WITHOUT_CLASSIFICATION	2.7739496790315466E-6	DEFECT
// update, but dont draw tick marks (needed for stepped colors)	WITHOUT_CLASSIFICATION	0.9999999469060596	WITHOUT_CLASSIFICATION	5.309394036317372E-8	DEFECT
// suppresses compiler warnings	WITHOUT_CLASSIFICATION	0.9999995637744203	WITHOUT_CLASSIFICATION	4.3622557967290916E-7	DEFECT
// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());	WITHOUT_CLASSIFICATION	0.9999998678049052	WITHOUT_CLASSIFICATION	1.3219509478735E-7	DEFECT
// calculate the adjusted data area taking into account the 3D effect...	WITHOUT_CLASSIFICATION	0.9952794709632451	WITHOUT_CLASSIFICATION	0.004720529036754857	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999904967831	WITHOUT_CLASSIFICATION	9.50321674925792E-9	DEFECT
// transparent	WITHOUT_CLASSIFICATION	0.9999993372384609	WITHOUT_CLASSIFICATION	6.627615392023275E-7	DEFECT
//gets the outline stroke width of the plot	WITHOUT_CLASSIFICATION	0.9998930747691284	WITHOUT_CLASSIFICATION	1.0692523087173789E-4	DEFECT
// ensure that all the symbols are displayed	WITHOUT_CLASSIFICATION	0.9999995456299008	WITHOUT_CLASSIFICATION	4.5437009914822425E-7	DEFECT
// this ensure that the grid bands will be displayed correctly.	WITHOUT_CLASSIFICATION	0.9901585818359098	WITHOUT_CLASSIFICATION	0.009841418164090168	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999999665039483	WITHOUT_CLASSIFICATION	3.349605164622541E-8	DEFECT
// avoid to draw overlapping tick labels	WITHOUT_CLASSIFICATION	0.9999999665039483	WITHOUT_CLASSIFICATION	3.349605164622541E-8	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9999955123786298	WITHOUT_CLASSIFICATION	4.487621370089047E-6	DEFECT
// don't draw this tick label	WITHOUT_CLASSIFICATION	0.9999955123786298	WITHOUT_CLASSIFICATION	4.487621370089047E-6	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999654905074258	WITHOUT_CLASSIFICATION	3.4509492574211194E-5	DEFECT
// remember these values for next comparison	WITHOUT_CLASSIFICATION	0.9999654905074258	WITHOUT_CLASSIFICATION	3.4509492574211194E-5	DEFECT
// first check that autoPopulate==false works as expected	WITHOUT_CLASSIFICATION	0.9999999819310811	WITHOUT_CLASSIFICATION	1.8068918940527714E-8	DEFECT
// if the axis is not visible, don't draw it...	WITHOUT_CLASSIFICATION	0.999542880280139	WITHOUT_CLASSIFICATION	4.5711971986094415E-4	DEFECT
// even though the axis is not visible, we need ticks for the // gridlines...	WITHOUT_CLASSIFICATION	0.9989958411585323	WITHOUT_CLASSIFICATION	0.0010041588414676768	DEFECT
// all tick labels have the same width (equal to the height of the // font)...	WITHOUT_CLASSIFICATION	0.9999959968033525	WITHOUT_CLASSIFICATION	4.003196647539524E-6	DEFECT
// draw the category labels and axis label	WITHOUT_CLASSIFICATION	0.9999985390510724	WITHOUT_CLASSIFICATION	1.4609489276689726E-6	DEFECT
// create a new space object if one wasn't supplied...	WITHOUT_CLASSIFICATION	0.9999993199165539	WITHOUT_CLASSIFICATION	6.800834459963862E-7	DEFECT
// if the axis is not visible, no additional space is required...	WITHOUT_CLASSIFICATION	0.9996879104323902	WITHOUT_CLASSIFICATION	3.1208956760980805E-4	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999861000375414	WITHOUT_CLASSIFICATION	1.389996245856986E-5	DEFECT
// start with the current tick unit...	WITHOUT_CLASSIFICATION	0.9999861000375414	WITHOUT_CLASSIFICATION	1.389996245856986E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999718881760302	WITHOUT_CLASSIFICATION	2.8111823969801666E-5	DEFECT
// then extrapolate...	WITHOUT_CLASSIFICATION	0.9999718881760302	WITHOUT_CLASSIFICATION	2.8111823969801666E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999352754392	WITHOUT_CLASSIFICATION	6.472456083419349E-8	DEFECT
// must be top or bottom	WITHOUT_CLASSIFICATION	0.9999999925086912	WITHOUT_CLASSIFICATION	7.491308841879766E-9	DEFECT
// catches null also	WITHOUT_CLASSIFICATION	0.9999996317006435	WITHOUT_CLASSIFICATION	3.682993564851454E-7	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999956715464128	WITHOUT_CLASSIFICATION	4.328453587238554E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999956715464128	WITHOUT_CLASSIFICATION	4.328453587238554E-6	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999999416197911	WITHOUT_CLASSIFICATION	5.838020878604265E-8	DEFECT
// place in this row (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999970610154795	WITHOUT_CLASSIFICATION	2.938984520534055E-6	DEFECT
// start new row	WITHOUT_CLASSIFICATION	0.9999999019564889	WITHOUT_CLASSIFICATION	9.804351107060973E-8	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999973307924066	WITHOUT_CLASSIFICATION	2.6692075933398865E-6	DEFECT
// can safely ignore	WITHOUT_CLASSIFICATION	0.9999990197323276	WITHOUT_CLASSIFICATION	9.80267672358378E-7	DEFECT
// find optimum height, then map to range	WITHOUT_CLASSIFICATION	0.9999999408356866	WITHOUT_CLASSIFICATION	5.916431333342271E-8	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999998869380503	WITHOUT_CLASSIFICATION	1.1306194970354592E-7	DEFECT
// find optimum height	WITHOUT_CLASSIFICATION	0.9999998869380503	WITHOUT_CLASSIFICATION	1.1306194970354592E-7	DEFECT
// find optimum height and map to range	WITHOUT_CLASSIFICATION	0.9999999288795309	WITHOUT_CLASSIFICATION	7.112046910208854E-8	DEFECT
// find optimum width and map to range	WITHOUT_CLASSIFICATION	0.999999986372411	WITHOUT_CLASSIFICATION	1.3627588932319777E-8	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999352754392	WITHOUT_CLASSIFICATION	6.472456083419349E-8	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999352754392	WITHOUT_CLASSIFICATION	6.472456083419349E-8	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999989723577207	WITHOUT_CLASSIFICATION	1.0276422792297268E-6	DEFECT
// no action required.	WITHOUT_CLASSIFICATION	0.9999956715464128	WITHOUT_CLASSIFICATION	4.328453587238554E-6	DEFECT
// first arrange without constraints, and see if this fits within // the required ranges...	WITHOUT_CLASSIFICATION	0.9999982479696707	WITHOUT_CLASSIFICATION	1.7520303293146091E-6	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.999999798646751	WITHOUT_CLASSIFICATION	2.01353249005115E-7	DEFECT
// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width	WITHOUT_CLASSIFICATION	0.999999798646751	WITHOUT_CLASSIFICATION	2.01353249005115E-7	DEFECT
// check if we need to collect chart entities from the container	WITHOUT_CLASSIFICATION	0.9999999416197911	WITHOUT_CLASSIFICATION	5.838020878604265E-8	DEFECT
//Block b = (Block) blocks.get(i);	WITHOUT_CLASSIFICATION	0.9999973307924066	WITHOUT_CLASSIFICATION	2.6692075933398865E-6	DEFECT
// this default implementation will just fill the available // border space with a single color	WITHOUT_CLASSIFICATION	0.9999997098826908	WITHOUT_CLASSIFICATION	2.901173091892182E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999994597823176	WITHOUT_CLASSIFICATION	5.402176822848442E-7	DEFECT
// fixed width	WITHOUT_CLASSIFICATION	0.9999925667522166	WITHOUT_CLASSIFICATION	7.433247783359873E-6	DEFECT
// width is OK, but height must be constrained	WITHOUT_CLASSIFICATION	0.9999996895030848	WITHOUT_CLASSIFICATION	3.104969151993822E-7	DEFECT
// height is OK, but width must be constrained	WITHOUT_CLASSIFICATION	0.9999988755699277	WITHOUT_CLASSIFICATION	1.1244300722242719E-6	DEFECT
// nothing to clear	WITHOUT_CLASSIFICATION	0.9999998337430869	WITHOUT_CLASSIFICATION	1.662569130872616E-7	DEFECT
// if the area has zero height or width, we shouldn't draw anything	WITHOUT_CLASSIFICATION	0.9999541894398241	WITHOUT_CLASSIFICATION	4.581056017588423E-5	DEFECT
// since the flow layout is relatively straightforward, no information // needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999966016898834	WITHOUT_CLASSIFICATION	3.398310116712583E-6	DEFECT
// place in this column (truncated) anyway	WITHOUT_CLASSIFICATION	0.9999993938945051	WITHOUT_CLASSIFICATION	6.061054948517476E-7	DEFECT
// start new column	WITHOUT_CLASSIFICATION	0.9999999794640017	WITHOUT_CLASSIFICATION	2.0535998281830866E-8	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.999999989673017	WITHOUT_CLASSIFICATION	1.032698305601724E-8	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999965445461068	WITHOUT_CLASSIFICATION	3.4554538932899133E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999987696946694	WITHOUT_CLASSIFICATION	1.2303053306921392E-6	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999999636928859	WITHOUT_CLASSIFICATION	3.6307114030073215E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999265829701	WITHOUT_CLASSIFICATION	7.341702990558634E-8	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999977812532204	WITHOUT_CLASSIFICATION	2.2187467795995947E-6	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999991509379824	WITHOUT_CLASSIFICATION	8.490620176036168E-7	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.999999994512814	WITHOUT_CLASSIFICATION	5.487186031768445E-9	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999990656264186	WITHOUT_CLASSIFICATION	9.343735814851446E-7	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999991340831	WITHOUT_CLASSIFICATION	8.659168324403169E-10	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999995175384365	WITHOUT_CLASSIFICATION	4.824615633924427E-7	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999996608951186	WITHOUT_CLASSIFICATION	3.391048814219547E-7	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999987913591952	WITHOUT_CLASSIFICATION	1.2086408047528397E-6	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999987913591952	WITHOUT_CLASSIFICATION	1.2086408047528397E-6	DEFECT
// pass to the super-class for handling	WITHOUT_CLASSIFICATION	0.9999987913591952	WITHOUT_CLASSIFICATION	1.2086408047528397E-6	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999260400074192	WITHOUT_CLASSIFICATION	7.395999258083107E-5	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999260400074192	WITHOUT_CLASSIFICATION	7.395999258083107E-5	DEFECT
//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;	WITHOUT_CLASSIFICATION	0.9999997855383088	WITHOUT_CLASSIFICATION	2.1446169115650344E-7	DEFECT
// figure out what type of axis we have and instantiate the // appropriate panel	WITHOUT_CLASSIFICATION	0.9999986860485421	WITHOUT_CLASSIFICATION	1.3139514579037905E-6	DEFECT
// Insets values	WITHOUT_CLASSIFICATION	0.9999990241955918	WITHOUT_CLASSIFICATION	9.758044082647011E-7	DEFECT
// axis.setTickMarkStroke(getTickMarkStroke());	WITHOUT_CLASSIFICATION	0.9999994546936881	WITHOUT_CLASSIFICATION	5.453063119797847E-7	DEFECT
// create a panel for the settings...	WITHOUT_CLASSIFICATION	0.9999999032858315	WITHOUT_CLASSIFICATION	9.671416837473504E-8	DEFECT
//dmo: added this panel for colorbar control. (start dmo additions)	WITHOUT_CLASSIFICATION	0.9999821576079202	WITHOUT_CLASSIFICATION	1.784239207976234E-5	DEFECT
//      end fix by rfuller	WITHOUT_CLASSIFICATION	0.9999372563125368	WITHOUT_CLASSIFICATION	6.274368746325431E-5	DEFECT
//dmo: (end dmo additions)	WITHOUT_CLASSIFICATION	0.9999117610667337	WITHOUT_CLASSIFICATION	8.823893326627602E-5	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999956389442388	WITHOUT_CLASSIFICATION	4.361055761135365E-6	DEFECT
// then the axis properties...	WITHOUT_CLASSIFICATION	0.9999825902933024	WITHOUT_CLASSIFICATION	1.7409706697632033E-5	DEFECT
// pass to super-class for handling	WITHOUT_CLASSIFICATION	0.9999991483746099	WITHOUT_CLASSIFICATION	8.516253900160485E-7	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999995888982143	WITHOUT_CLASSIFICATION	4.111017856970509E-6	DEFECT
//  No op	WITHOUT_CLASSIFICATION	0.999995888982143	WITHOUT_CLASSIFICATION	4.111017856970509E-6	DEFECT
// defer argument checks...	WITHOUT_CLASSIFICATION	0.999999988342058	WITHOUT_CLASSIFICATION	1.1657941924636839E-8	DEFECT
//      fix by rfuller	WITHOUT_CLASSIFICATION	0.9999679718470389	WITHOUT_CLASSIFICATION	3.202815296113183E-5	DEFECT
// populate the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999925966044	WITHOUT_CLASSIFICATION	7.403395558967636E-9	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999995058049822	WITHOUT_CLASSIFICATION	4.941950177577204E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999995058049822	WITHOUT_CLASSIFICATION	4.941950177577204E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999995058049822	WITHOUT_CLASSIFICATION	4.941950177577204E-7	DEFECT
// update the deprecated field	WITHOUT_CLASSIFICATION	0.9999999976387678	WITHOUT_CLASSIFICATION	2.361232147083274E-9	DEFECT
// update the deprecated fields	WITHOUT_CLASSIFICATION	0.999999997656974	WITHOUT_CLASSIFICATION	2.3430260159264014E-9	DEFECT
// check the deprecated fields	WITHOUT_CLASSIFICATION	0.9999999991373317	WITHOUT_CLASSIFICATION	8.626683472722367E-10	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999938986906869	WITHOUT_CLASSIFICATION	6.101309313089583E-6	DEFECT
// do not notify while zooming each axis	WITHOUT_CLASSIFICATION	0.9999962511583169	WITHOUT_CLASSIFICATION	3.748841683032645E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// this generates the change event too	WITHOUT_CLASSIFICATION	0.9999998363001846	WITHOUT_CLASSIFICATION	1.6369981534031823E-7	DEFECT
/* x-axis label*/	WITHOUT_CLASSIFICATION	0.9999965445461068	WITHOUT_CLASSIFICATION	3.4554538932899133E-6	DEFECT
/* y-axis label */	WITHOUT_CLASSIFICATION	0.9999987696946694	WITHOUT_CLASSIFICATION	1.2303053306921392E-6	DEFECT
// set a custom background for the chart	WITHOUT_CLASSIFICATION	0.999999994512814	WITHOUT_CLASSIFICATION	5.487186031768445E-9	DEFECT
// customise the title position and font	WITHOUT_CLASSIFICATION	0.9999990656264186	WITHOUT_CLASSIFICATION	9.343735814851446E-7	DEFECT
// use gradients and white borders for the section colours	WITHOUT_CLASSIFICATION	0.9999999991340831	WITHOUT_CLASSIFICATION	8.659168324403169E-10	DEFECT
// customise the section label appearance	WITHOUT_CLASSIFICATION	0.9999995175384365	WITHOUT_CLASSIFICATION	4.824615633924427E-7	DEFECT
// add a subtitle giving the data source	WITHOUT_CLASSIFICATION	0.9999996608951186	WITHOUT_CLASSIFICATION	3.391048814219547E-7	DEFECT
//same as for ChartEntity!	WITHOUT_CLASSIFICATION	0.9999995058049822	WITHOUT_CLASSIFICATION	4.941950177577204E-7	DEFECT
//dmo added //dmo added	WITHOUT_CLASSIFICATION	0.9999984472604465	WITHOUT_CLASSIFICATION	1.552739553532591E-6	DEFECT
// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip	WITHOUT_CLASSIFICATION	0.9999999956887777	WITHOUT_CLASSIFICATION	4.311222250092967E-9	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994706856727	WITHOUT_CLASSIFICATION	5.293143271774062E-7	DEFECT
// FIXME	WITHOUT_CLASSIFICATION	0.9143322886281251	WITHOUT_CLASSIFICATION	0.08566771137187493	DEFECT
// this is a paint we don't recognise	WITHOUT_CLASSIFICATION	0.9999472668331292	WITHOUT_CLASSIFICATION	5.273316687090787E-5	DEFECT
// null is handled fine here...	WITHOUT_CLASSIFICATION	0.9999662987930699	WITHOUT_CLASSIFICATION	3.3701206930120894E-5	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999488841395555	WITHOUT_CLASSIFICATION	5.1115860444542664E-5	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999999381805603	WITHOUT_CLASSIFICATION	6.18194396581116E-8	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999992525002558	WITHOUT_CLASSIFICATION	7.474997442751839E-7	DEFECT
// pass on the event to the auxiliary handlers	WITHOUT_CLASSIFICATION	0.9999992525002558	WITHOUT_CLASSIFICATION	7.474997442751839E-7	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999834705083	WITHOUT_CLASSIFICATION	1.6529491669770335E-8	DEFECT
// relay the event from the canvas to our registered listeners	WITHOUT_CLASSIFICATION	0.9999999834705083	WITHOUT_CLASSIFICATION	1.6529491669770335E-8	DEFECT
// set the default stroke for all series	WITHOUT_CLASSIFICATION	0.999999380980818	WITHOUT_CLASSIFICATION	6.190191821256423E-7	DEFECT
//this.chartPanel.isDomainZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999987611135	WITHOUT_CLASSIFICATION	1.2388864883617826E-9	DEFECT
//this.chartPanel.isRangeZoomable()) {	WITHOUT_CLASSIFICATION	0.9999999972554733	WITHOUT_CLASSIFICATION	2.7445267118056954E-9	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999997788079206	WITHOUT_CLASSIFICATION	2.211920794306443E-7	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999997788079206	WITHOUT_CLASSIFICATION	2.211920794306443E-7	DEFECT
// does nothing unless overridden        	WITHOUT_CLASSIFICATION	0.9999992805092556	WITHOUT_CLASSIFICATION	7.194907443890928E-7	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999913996397982	WITHOUT_CLASSIFICATION	8.60036020179066E-6	DEFECT
// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true	WITHOUT_CLASSIFICATION	0.9999999999456447	WITHOUT_CLASSIFICATION	5.4355230088486515E-11	DEFECT
// chart title // data // no legend // tooltips // no URL generation	WITHOUT_CLASSIFICATION	0.9999999636928859	WITHOUT_CLASSIFICATION	3.6307114030073215E-8	DEFECT
// does nothing unless overridden	WITHOUT_CLASSIFICATION	0.9999997788079206	WITHOUT_CLASSIFICATION	2.211920794306443E-7	DEFECT
// special case - if the underlying rectangle uses ints we // need to create one that uses doubles	WITHOUT_CLASSIFICATION	0.9999999727270051	WITHOUT_CLASSIFICATION	2.727299494334095E-8	DEFECT
// title // x-axis label // y-axis label	WITHOUT_CLASSIFICATION	0.9999963390818292	WITHOUT_CLASSIFICATION	3.6609181707441155E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.999999933252148	WITHOUT_CLASSIFICATION	6.674785203606296E-8	DEFECT
// the actual panning occurs later in the mouseDragged() method	WITHOUT_CLASSIFICATION	0.9999998084065413	WITHOUT_CLASSIFICATION	1.9159345869099514E-7	DEFECT
//handle panning if we have a start point else unregister	WITHOUT_CLASSIFICATION	0.999999993266354	WITHOUT_CLASSIFICATION	6.733645943319076E-9	DEFECT
//if we have been panning reset the cursor //unregister in any case	WITHOUT_CLASSIFICATION	0.9999996610530524	WITHOUT_CLASSIFICATION	3.389469476048797E-7	DEFECT
// the URL text should already have been escaped by the URL generator	WITHOUT_CLASSIFICATION	0.9999973066347643	WITHOUT_CLASSIFICATION	2.6933652357473525E-6	DEFECT
// no fields to test	WITHOUT_CLASSIFICATION	0.9999996371389773	WITHOUT_CLASSIFICATION	3.6286102258149496E-7	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999983020250175	WITHOUT_CLASSIFICATION	1.6979749825003675E-6	DEFECT
/// we have rotation huston, please spin me	WITHOUT_CLASSIFICATION	0.9999983020250175	WITHOUT_CLASSIFICATION	1.6979749825003675E-6	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999830796832974	WITHOUT_CLASSIFICATION	1.692031670263018E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999830796832974	WITHOUT_CLASSIFICATION	1.692031670263018E-5	DEFECT
/// we have rotation	WITHOUT_CLASSIFICATION	0.9999830796832974	WITHOUT_CLASSIFICATION	1.692031670263018E-5	DEFECT
// isArrowAtTop	WITHOUT_CLASSIFICATION	0.9999984004344711	WITHOUT_CLASSIFICATION	1.599565528822583E-6	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999934176944487	WITHOUT_CLASSIFICATION	6.582305551309153E-6	DEFECT
//int maxX = (int) (plotArea.getMaxX());	WITHOUT_CLASSIFICATION	0.9999934176944487	WITHOUT_CLASSIFICATION	6.582305551309153E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999980755702689	WITHOUT_CLASSIFICATION	1.9244297311235996E-6	DEFECT
//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));	WITHOUT_CLASSIFICATION	0.9999980755702689	WITHOUT_CLASSIFICATION	1.9244297311235996E-6	DEFECT
/// we have rotation houston, please spin me	WITHOUT_CLASSIFICATION	0.9999972947508985	WITHOUT_CLASSIFICATION	2.705249101544416E-6	DEFECT
// horizontal	WITHOUT_CLASSIFICATION	0.9999986475524704	WITHOUT_CLASSIFICATION	1.3524475296410077E-6	DEFECT
// store the plot and its weight	WITHOUT_CLASSIFICATION	0.9999990135598107	WITHOUT_CLASSIFICATION	9.864401893641138E-7	DEFECT
// configure the range axis...	WITHOUT_CLASSIFICATION	0.9999994771165275	WITHOUT_CLASSIFICATION	5.228834725493144E-7	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9997309012773812	WITHOUT_CLASSIFICATION	2.690987226187626E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9998813516244363	WITHOUT_CLASSIFICATION	1.1864837556373752E-4	DEFECT
// we expect the line to be vertical or horizontal // vertical	WITHOUT_CLASSIFICATION	0.999999090589753	WITHOUT_CLASSIFICATION	9.094102470743815E-7	DEFECT
// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height	WITHOUT_CLASSIFICATION	0.9999979497381746	WITHOUT_CLASSIFICATION	2.0502618254048004E-6	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.999999723261535	WITHOUT_CLASSIFICATION	2.7673846497932876E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999969272207743	WITHOUT_CLASSIFICATION	3.0727792257898476E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999975677868672	WITHOUT_CLASSIFICATION	2.4322131327634206E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999997683123093	WITHOUT_CLASSIFICATION	2.3168769079411405E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998680601151	WITHOUT_CLASSIFICATION	1.3193988486562488E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999999908412935	WITHOUT_CLASSIFICATION	9.158706553208972E-9	DEFECT
// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...	WITHOUT_CLASSIFICATION	0.9993049821137993	WITHOUT_CLASSIFICATION	6.950178862007362E-4	DEFECT
// default preserves previous // behaviour	WITHOUT_CLASSIFICATION	0.9999999912067694	WITHOUT_CLASSIFICATION	8.793230588234137E-9	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999997633727052	WITHOUT_CLASSIFICATION	2.3662729473602155E-7	DEFECT
// make the link area a square if the pie chart is to be circular... // is circular?	WITHOUT_CLASSIFICATION	0.999999488195702	WITHOUT_CLASSIFICATION	5.118042980753165E-7	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999999671848337	WITHOUT_CLASSIFICATION	3.281516631854925E-8	DEFECT
// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.	WITHOUT_CLASSIFICATION	0.9999999736931037	WITHOUT_CLASSIFICATION	2.6306896301202754E-8	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999999634810686	WITHOUT_CLASSIFICATION	3.6518931532071494E-8	DEFECT
// the link area defines the dog-leg point for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999999799494235	WITHOUT_CLASSIFICATION	2.0050576593116417E-8	DEFECT
// get the data source - return if null;	WITHOUT_CLASSIFICATION	0.9999997678582994	WITHOUT_CLASSIFICATION	2.3214170048589342E-7	DEFECT
// if too any elements	WITHOUT_CLASSIFICATION	0.9999999768869011	WITHOUT_CLASSIFICATION	2.311309883478783E-8	DEFECT
// get a list of keys...	WITHOUT_CLASSIFICATION	0.9999988443475758	WITHOUT_CLASSIFICATION	1.1556524242398427E-6	DEFECT
// do nothing by default.	WITHOUT_CLASSIFICATION	0.9999998979135603	WITHOUT_CLASSIFICATION	1.0208643966480063E-7	DEFECT
//g2.clip(clipArea);	WITHOUT_CLASSIFICATION	0.9999988504638768	WITHOUT_CLASSIFICATION	1.149536123114105E-6	DEFECT
// if depth is negative don't draw anything	WITHOUT_CLASSIFICATION	0.9999994660436292	WITHOUT_CLASSIFICATION	5.339563707430152E-7	DEFECT
// draw the bottom circle	WITHOUT_CLASSIFICATION	0.9999999432233788	WITHOUT_CLASSIFICATION	5.677662125679449E-8	DEFECT
// draw the height	WITHOUT_CLASSIFICATION	0.9999974979923569	WITHOUT_CLASSIFICATION	2.502007643097431E-6	DEFECT
// cycle through once drawing only the sides at the back...	WITHOUT_CLASSIFICATION	0.9999645387020569	WITHOUT_CLASSIFICATION	3.5461297943143306E-5	DEFECT
// cycle through again drawing only the sides at the front...	WITHOUT_CLASSIFICATION	0.9998727043538863	WITHOUT_CLASSIFICATION	1.2729564611361433E-4	DEFECT
// add a tooltip for the section...	WITHOUT_CLASSIFICATION	0.9999991046121518	WITHOUT_CLASSIFICATION	8.95387848239133E-7	DEFECT
// @mgs: using the method's return value was missing	WITHOUT_CLASSIFICATION	0.9999819034743846	WITHOUT_CLASSIFICATION	1.809652561537154E-5	DEFECT
// for CLOCKWISE charts, the extent will be negative...	WITHOUT_CLASSIFICATION	0.9999983046729422	WITHOUT_CLASSIFICATION	1.6953270579035244E-6	DEFECT
// start at front	WITHOUT_CLASSIFICATION	0.9999994138924324	WITHOUT_CLASSIFICATION	5.861075675639602E-7	DEFECT
// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again	WITHOUT_CLASSIFICATION	0.9999961997229472	WITHOUT_CLASSIFICATION	3.8002770527976285E-6	DEFECT
// starts at the front, finishes at the back (going // around the left side)	WITHOUT_CLASSIFICATION	0.9999995557583258	WITHOUT_CLASSIFICATION	4.4424167421839484E-7	DEFECT
// the segment starts at the back (still extending // CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999991346968672	WITHOUT_CLASSIFICATION	8.653031327208734E-7	DEFECT
// whole segment stays at the back	WITHOUT_CLASSIFICATION	0.9999195866863426	WITHOUT_CLASSIFICATION	8.041331365745807E-5	DEFECT
// starts at the back, wraps around front, and // finishes at back again	WITHOUT_CLASSIFICATION	0.9999999468589733	WITHOUT_CLASSIFICATION	5.314102663534409E-8	DEFECT
// starts at back, finishes at front (CLOCKWISE)	WITHOUT_CLASSIFICATION	0.9999998899145282	WITHOUT_CLASSIFICATION	1.1008547180294251E-7	DEFECT
// segment starts at the front	WITHOUT_CLASSIFICATION	0.9999986152835573	WITHOUT_CLASSIFICATION	1.3847164427501186E-6	DEFECT
// and finishes at the front	WITHOUT_CLASSIFICATION	0.999999221094223	WITHOUT_CLASSIFICATION	7.789057770211307E-7	DEFECT
// segment only occupies the front	WITHOUT_CLASSIFICATION	0.9999650983572671	WITHOUT_CLASSIFICATION	3.4901642732980896E-5	DEFECT
// segments wraps right around the back...	WITHOUT_CLASSIFICATION	0.9999744977890105	WITHOUT_CLASSIFICATION	2.5502210989590122E-5	DEFECT
// segments starts at front and finishes at back...	WITHOUT_CLASSIFICATION	0.9999772958347719	WITHOUT_CLASSIFICATION	2.27041652280125E-5	DEFECT
// segment starts at back	WITHOUT_CLASSIFICATION	0.9999996916364224	WITHOUT_CLASSIFICATION	3.0836357746890637E-7	DEFECT
// and finishes at back	WITHOUT_CLASSIFICATION	0.9999992889044942	WITHOUT_CLASSIFICATION	7.110955057828023E-7	DEFECT
//dmo //zero when the parameter is not set	WITHOUT_CLASSIFICATION	0.9998231927924067	WITHOUT_CLASSIFICATION	1.7680720759331926E-4	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.999999986302798	WITHOUT_CLASSIFICATION	1.3697202125161466E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.999999993928149	WITHOUT_CLASSIFICATION	6.071850935523345E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998896516451	WITHOUT_CLASSIFICATION	1.1034835488263993E-7	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999864448201605	WITHOUT_CLASSIFICATION	1.3555179839603778E-5	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999864448201605	WITHOUT_CLASSIFICATION	1.3555179839603778E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999998451163858	WITHOUT_CLASSIFICATION	1.5488361414288914E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999936501293896	WITHOUT_CLASSIFICATION	6.349870610513915E-6	DEFECT
// additional dataArea modifications //check whether modification is	WITHOUT_CLASSIFICATION	0.9999988568248317	WITHOUT_CLASSIFICATION	1.1431751682814382E-6	DEFECT
// ratio represents pixels	WITHOUT_CLASSIFICATION	0.9999999779727206	WITHOUT_CLASSIFICATION	2.2027279425350372E-8	DEFECT
// ratio represents axis units	WITHOUT_CLASSIFICATION	0.9999999982702664	WITHOUT_CLASSIFICATION	1.7297335778234678E-9	DEFECT
// draw the plot background...	WITHOUT_CLASSIFICATION	0.9999595326432412	WITHOUT_CLASSIFICATION	4.0467356758767585E-5	DEFECT
// draw vertical crosshair if required...	WITHOUT_CLASSIFICATION	0.9999707435173114	WITHOUT_CLASSIFICATION	2.925648268865825E-5	DEFECT
// draw horizontal crosshair if required...	WITHOUT_CLASSIFICATION	0.999925753816837	WITHOUT_CLASSIFICATION	7.424618316292427E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987313898762	WITHOUT_CLASSIFICATION	1.2686101238737316E-6	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.999999998299638	WITHOUT_CLASSIFICATION	1.7003619420516297E-9	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9997309012773812	WITHOUT_CLASSIFICATION	2.690987226187626E-4	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.999999998299638	WITHOUT_CLASSIFICATION	1.7003619420516297E-9	DEFECT
// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9997350095935463	WITHOUT_CLASSIFICATION	2.6499040645365784E-4	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999999573229732	WITHOUT_CLASSIFICATION	4.267702685096099E-8	DEFECT
// this is a new column	WITHOUT_CLASSIFICATION	0.9999880799455542	WITHOUT_CLASSIFICATION	1.1920054445736415E-5	DEFECT
// end of column	WITHOUT_CLASSIFICATION	0.9999989747975786	WITHOUT_CLASSIFICATION	1.0252024214150317E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999732495717075	WITHOUT_CLASSIFICATION	2.6750428292413867E-5	DEFECT
//              }	WITHOUT_CLASSIFICATION	0.9999965505927149	WITHOUT_CLASSIFICATION	3.449407285085013E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999552079906	WITHOUT_CLASSIFICATION	4.479200950224338E-8	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999999726545219	WITHOUT_CLASSIFICATION	2.7345478112384945E-8	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999999916731042	WITHOUT_CLASSIFICATION	8.326895860080554E-9	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.99999971219666	WITHOUT_CLASSIFICATION	2.8780334001054663E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999997633727052	WITHOUT_CLASSIFICATION	2.3662729473602155E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.999999974223637	WITHOUT_CLASSIFICATION	2.577636302204387E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.999999993928149	WITHOUT_CLASSIFICATION	6.071850935523345E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998896516451	WITHOUT_CLASSIFICATION	1.1034835488263993E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987313898762	WITHOUT_CLASSIFICATION	1.2686101238737316E-6	DEFECT
//turn off anti-aliasing when filling rectangles	WITHOUT_CLASSIFICATION	0.9999998402404687	WITHOUT_CLASSIFICATION	1.5975953133051418E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999732495717075	WITHOUT_CLASSIFICATION	2.6750428292413867E-5	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999552079906	WITHOUT_CLASSIFICATION	4.479200950224338E-8	DEFECT
// just the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999999726545219	WITHOUT_CLASSIFICATION	2.7345478112384945E-8	DEFECT
// just the vertical axis...	WITHOUT_CLASSIFICATION	0.9999999916731042	WITHOUT_CLASSIFICATION	8.326895860080554E-9	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.999998449139495	WITHOUT_CLASSIFICATION	1.550860504949546E-6	DEFECT
//Object oldValue = this.toolTipGenerator;	WITHOUT_CLASSIFICATION	0.9999999509200329	WITHOUT_CLASSIFICATION	4.907996717998652E-8	DEFECT
//Object oldValue = this.urlGenerator;	WITHOUT_CLASSIFICATION	0.9999998451563874	WITHOUT_CLASSIFICATION	1.5484361258701795E-7	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999695546063302	WITHOUT_CLASSIFICATION	3.0445393669717556E-5	DEFECT
// the following relies on the fact that the intervals are immutable	WITHOUT_CLASSIFICATION	0.9999999099838727	WITHOUT_CLASSIFICATION	9.001612741358908E-8	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999975428361173	WITHOUT_CLASSIFICATION	2.4571638826531674E-6	DEFECT
// can't find any difference	WITHOUT_CLASSIFICATION	0.9998292693939884	WITHOUT_CLASSIFICATION	1.707306060115492E-4	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.999999903246191	WITHOUT_CLASSIFICATION	9.675380894566678E-8	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9998813516244363	WITHOUT_CLASSIFICATION	1.1864837556373752E-4	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.999999723261535	WITHOUT_CLASSIFICATION	2.7673846497932876E-7	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.999999723261535	WITHOUT_CLASSIFICATION	2.7673846497932876E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999992607047246	WITHOUT_CLASSIFICATION	7.392952755011006E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999969272207743	WITHOUT_CLASSIFICATION	3.0727792257898476E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999975677868672	WITHOUT_CLASSIFICATION	2.4322131327634206E-6	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999997683123093	WITHOUT_CLASSIFICATION	2.3168769079411405E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998680601151	WITHOUT_CLASSIFICATION	1.3193988486562488E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.999999986302798	WITHOUT_CLASSIFICATION	1.3697202125161466E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.999999993928149	WITHOUT_CLASSIFICATION	6.071850935523345E-9	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999936501293896	WITHOUT_CLASSIFICATION	6.349870610513915E-6	DEFECT
//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999990392694718	WITHOUT_CLASSIFICATION	9.607305283108625E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999997158250995	WITHOUT_CLASSIFICATION	2.8417490047046473E-7	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.999999889849551	WITHOUT_CLASSIFICATION	1.1015044903350275E-7	DEFECT
// override is only for documentation purposes	WITHOUT_CLASSIFICATION	0.9999996631649168	WITHOUT_CLASSIFICATION	3.368350831692007E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999928852606	WITHOUT_CLASSIFICATION	7.1147393894080424E-9	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999983514004487	WITHOUT_CLASSIFICATION	1.6485995512819435E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999974156369352	WITHOUT_CLASSIFICATION	2.584363064880864E-6	DEFECT
// y is minor	WITHOUT_CLASSIFICATION	0.9999974156369352	WITHOUT_CLASSIFICATION	2.584363064880864E-6	DEFECT
//get major dimension	WITHOUT_CLASSIFICATION	0.9999916169779179	WITHOUT_CLASSIFICATION	8.38302208202019E-6	DEFECT
//ellipse diameter is the minor dimension	WITHOUT_CLASSIFICATION	0.9999966151734336	WITHOUT_CLASSIFICATION	3.384826566436371E-6	DEFECT
// draw the wafer	WITHOUT_CLASSIFICATION	0.9999994292383472	WITHOUT_CLASSIFICATION	5.707616528015532E-7	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.999994955377061	WITHOUT_CLASSIFICATION	5.044622939026803E-6	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999992607047246	WITHOUT_CLASSIFICATION	7.392952755011006E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999997683123093	WITHOUT_CLASSIFICATION	2.3168769079411405E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998680601151	WITHOUT_CLASSIFICATION	1.3193988486562488E-7	DEFECT
// draw all the charts	WITHOUT_CLASSIFICATION	0.9999999908412935	WITHOUT_CLASSIFICATION	9.158706553208972E-9	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999997633727052	WITHOUT_CLASSIFICATION	2.3662729473602155E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.999999986302798	WITHOUT_CLASSIFICATION	1.3697202125161466E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.999999993928149	WITHOUT_CLASSIFICATION	6.071850935523345E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998896516451	WITHOUT_CLASSIFICATION	1.1034835488263993E-7	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.999999998299638	WITHOUT_CLASSIFICATION	1.7003619420516297E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999997158250995	WITHOUT_CLASSIFICATION	2.8417490047046473E-7	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999995209762825	WITHOUT_CLASSIFICATION	4.790237175145978E-7	DEFECT
//set upperLeft point // x is minor	WITHOUT_CLASSIFICATION	0.9999995209762825	WITHOUT_CLASSIFICATION	4.790237175145978E-7	DEFECT
// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down	WITHOUT_CLASSIFICATION	0.9999762933780157	WITHOUT_CLASSIFICATION	2.370662198419943E-5	DEFECT
//this.axisOffset.trim(dataArea);	WITHOUT_CLASSIFICATION	0.999999774154554	WITHOUT_CLASSIFICATION	2.2584544596003518E-7	DEFECT
//// SECTION PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995148095083	WITHOUT_CLASSIFICATION	4.851904916793696E-7	DEFECT
// is there an override?	WITHOUT_CLASSIFICATION	0.9999995294776393	WITHOUT_CLASSIFICATION	4.705223606444777E-7	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999996440538	WITHOUT_CLASSIFICATION	3.5594606475818325E-10	DEFECT
// if not, check if there is a paint defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999996440538	WITHOUT_CLASSIFICATION	3.5594606475818325E-10	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.999999991185955	WITHOUT_CLASSIFICATION	8.814045079953653E-9	DEFECT
// nothing defined - do we autoPopulate?	WITHOUT_CLASSIFICATION	0.999999991185955	WITHOUT_CLASSIFICATION	8.814045079953653E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999938829212	WITHOUT_CLASSIFICATION	6.117078838472788E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999938829212	WITHOUT_CLASSIFICATION	6.117078838472788E-9	DEFECT
// null argument check delegated...	WITHOUT_CLASSIFICATION	0.9999999938829212	WITHOUT_CLASSIFICATION	6.117078838472788E-9	DEFECT
//// SECTION OUTLINE PAINT ////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999749131395	WITHOUT_CLASSIFICATION	2.508686049295997E-7	DEFECT
//// SECTION OUTLINE STROKE ///////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998740607929	WITHOUT_CLASSIFICATION	1.2593920698390922E-7	DEFECT
// if not, check if there is a stroke defined for the specified key	WITHOUT_CLASSIFICATION	0.9999999872185141	WITHOUT_CLASSIFICATION	1.2781485865586138E-8	DEFECT
// adjust the plot area for interior spacing and labels...	WITHOUT_CLASSIFICATION	0.9999997462478626	WITHOUT_CLASSIFICATION	2.5375213744957446E-7	DEFECT
// make the link area a square if the pie chart is to be circular...	WITHOUT_CLASSIFICATION	0.9999999398891181	WITHOUT_CLASSIFICATION	6.011088191547236E-8	DEFECT
// work out the space required by the domain axis...	WITHOUT_CLASSIFICATION	0.9997309012773812	WITHOUT_CLASSIFICATION	2.690987226187626E-4	DEFECT
// work out the maximum height or width of the non-shared axes...	WITHOUT_CLASSIFICATION	0.9998813516244363	WITHOUT_CLASSIFICATION	1.1864837556373752E-4	DEFECT
// calculate sub-plot area	WITHOUT_CLASSIFICATION	0.999999723261535	WITHOUT_CLASSIFICATION	2.7673846497932876E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999969272207743	WITHOUT_CLASSIFICATION	3.0727792257898476E-6	DEFECT
// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.	WITHOUT_CLASSIFICATION	0.9999999634810686	WITHOUT_CLASSIFICATION	3.6518931532071494E-8	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.999999986302798	WITHOUT_CLASSIFICATION	1.3697202125161466E-8	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999695546063302	WITHOUT_CLASSIFICATION	3.0445393669717556E-5	DEFECT
// no data in the parent plot	WITHOUT_CLASSIFICATION	0.999994955377061	WITHOUT_CLASSIFICATION	5.044622939026803E-6	DEFECT
// update the linking line target for later // add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999995005075079	WITHOUT_CLASSIFICATION	4.994924921271297E-7	DEFECT
// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left	WITHOUT_CLASSIFICATION	0.999976016902639	WITHOUT_CLASSIFICATION	2.3983097360881527E-5	DEFECT
// classify the keys according to which side the label will appear...	WITHOUT_CLASSIFICATION	0.9992810069446312	WITHOUT_CLASSIFICATION	7.189930553689401E-4	DEFECT
// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...	WITHOUT_CLASSIFICATION	0.9998818563644516	WITHOUT_CLASSIFICATION	1.1814363554840802E-4	DEFECT
// draw the labels...	WITHOUT_CLASSIFICATION	0.9999982426685913	WITHOUT_CLASSIFICATION	1.7573314086308963E-6	DEFECT
// draw the right labels...	WITHOUT_CLASSIFICATION	0.9999708725317197	WITHOUT_CLASSIFICATION	2.9127468280301164E-5	DEFECT
//hh * getInteriorGap();	WITHOUT_CLASSIFICATION	0.9999995354486819	WITHOUT_CLASSIFICATION	4.645513180692724E-7	DEFECT
// line not visible	WITHOUT_CLASSIFICATION	0.9999963872556585	WITHOUT_CLASSIFICATION	3.6127443415234536E-6	DEFECT
// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...	WITHOUT_CLASSIFICATION	0.9999843163145375	WITHOUT_CLASSIFICATION	1.5683685462459626E-5	DEFECT
// can't find any difference...	WITHOUT_CLASSIFICATION	0.9909343297313566	WITHOUT_CLASSIFICATION	0.009065670268643274	DEFECT
// DEPRECATED FIELDS AND METHODS...	WITHOUT_CLASSIFICATION	0.9999582783407649	WITHOUT_CLASSIFICATION	4.1721659235152066E-5	DEFECT
// no range axis // no renderer	WITHOUT_CLASSIFICATION	0.9999995905895078	WITHOUT_CLASSIFICATION	4.09410492205475E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999994597823176	WITHOUT_CLASSIFICATION	5.402176822848442E-7	DEFECT
// set the width and height of non-shared axis of all sub-plots	WITHOUT_CLASSIFICATION	0.9999997683123093	WITHOUT_CLASSIFICATION	2.3168769079411405E-7	DEFECT
// draw the shared axis	WITHOUT_CLASSIFICATION	0.9999998680601151	WITHOUT_CLASSIFICATION	1.3193988486562488E-7	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.999999986302798	WITHOUT_CLASSIFICATION	1.3697202125161466E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.999999993928149	WITHOUT_CLASSIFICATION	6.071850935523345E-9	DEFECT
// delegate 'info' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.999999998299638	WITHOUT_CLASSIFICATION	1.7003619420516297E-9	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999997158250995	WITHOUT_CLASSIFICATION	2.8417490047046473E-7	DEFECT
// draw all the subplots	WITHOUT_CLASSIFICATION	0.999999889849551	WITHOUT_CLASSIFICATION	1.1015044903350275E-7	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999928852606	WITHOUT_CLASSIFICATION	7.1147393894080424E-9	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999983514004487	WITHOUT_CLASSIFICATION	1.6485995512819435E-6	DEFECT
// delegate 'state' and 'source' argument checks...	WITHOUT_CLASSIFICATION	0.9999999985577686	WITHOUT_CLASSIFICATION	1.4422314948104574E-9	DEFECT
// after setting up all the subplots, the shared domain axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999675230288	WITHOUT_CLASSIFICATION	3.2476971177319E-8	DEFECT
// 20% // 20% // 20%	WITHOUT_CLASSIFICATION	0.9999873836203186	WITHOUT_CLASSIFICATION	1.261637968149027E-5	DEFECT
// create the bounds for the inner arc	WITHOUT_CLASSIFICATION	0.999999957674665	WITHOUT_CLASSIFICATION	4.232533494692633E-8	DEFECT
// calculate inner arc in reverse direction, for later // GeneralPath construction	WITHOUT_CLASSIFICATION	0.9999998955831375	WITHOUT_CLASSIFICATION	1.044168624412196E-7	DEFECT
// add an entity for the pie section	WITHOUT_CLASSIFICATION	0.9999911596870856	WITHOUT_CLASSIFICATION	8.840312914384228E-6	DEFECT
// check that there is some data to display...	WITHOUT_CLASSIFICATION	0.9995888580807436	WITHOUT_CLASSIFICATION	4.111419192563826E-4	DEFECT
// the columns variable is always >= rows	WITHOUT_CLASSIFICATION	0.9999995520215413	WITHOUT_CLASSIFICATION	4.479784586423628E-7	DEFECT
// swap rows and columns to match plotArea shape	WITHOUT_CLASSIFICATION	0.9999993554270475	WITHOUT_CLASSIFICATION	6.445729523671862E-7	DEFECT
// update the section colors to match the global colors...	WITHOUT_CLASSIFICATION	0.9999893722683805	WITHOUT_CLASSIFICATION	1.0627731619561895E-5	DEFECT
// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...	WITHOUT_CLASSIFICATION	0.8334014089750844	WITHOUT_CLASSIFICATION	0.16659859102491553	DEFECT
// column keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9998691578341994	WITHOUT_CLASSIFICATION	1.3084216580066374E-4	DEFECT
// row keys provide potential keys for individual pies	WITHOUT_CLASSIFICATION	0.9998435144947313	WITHOUT_CLASSIFICATION	1.5648550526860597E-4	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */	WITHOUT_CLASSIFICATION	0.9980822495272945	WITHOUT_CLASSIFICATION	0.0019177504727055281	DEFECT
// allocate storage for dataset, axes and renderers	WITHOUT_CLASSIFICATION	0.9999996911857105	WITHOUT_CLASSIFICATION	3.088142894442733E-7	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999953360754207	WITHOUT_CLASSIFICATION	4.663924579383592E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999953360754207	WITHOUT_CLASSIFICATION	4.663924579383592E-6	DEFECT
// calculate the data area...	WITHOUT_CLASSIFICATION	0.9999975677868672	WITHOUT_CLASSIFICATION	2.4322131327634206E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998896516451	WITHOUT_CLASSIFICATION	1.1034835488263993E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999998451163858	WITHOUT_CLASSIFICATION	1.5488361414288914E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999936501293896	WITHOUT_CLASSIFICATION	6.349870610513915E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999983514004487	WITHOUT_CLASSIFICATION	1.6485995512819435E-6	DEFECT
// set the anchor value for the range axis...	WITHOUT_CLASSIFICATION	0.9999996230514534	WITHOUT_CLASSIFICATION	3.7694854661730074E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999984565915387	WITHOUT_CLASSIFICATION	1.5434084611985466E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999989526842438	WITHOUT_CLASSIFICATION	1.0473157561600514E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999989526842438	WITHOUT_CLASSIFICATION	1.0473157561600514E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999846982803	WITHOUT_CLASSIFICATION	1.530171963110532E-8	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999846982803	WITHOUT_CLASSIFICATION	1.530171963110532E-8	DEFECT
// get the legend items for the datasets...	WITHOUT_CLASSIFICATION	0.9999988161241187	WITHOUT_CLASSIFICATION	1.1838758813416826E-6	DEFECT
// this should never happen with the existing code, but throw // an exception in case future changes make it possible...	WITHOUT_CLASSIFICATION	0.9878514647579079	WITHOUT_CLASSIFICATION	0.012148535242092168	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999897139791853	WITHOUT_CLASSIFICATION	1.0286020814751308E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999981462790153	WITHOUT_CLASSIFICATION	1.8537209847181332E-6	DEFECT
// reserve space for the primary domain axis...	WITHOUT_CLASSIFICATION	0.9999906592700699	WITHOUT_CLASSIFICATION	9.34072993013322E-6	DEFECT
// reserve space for any domain axes...	WITHOUT_CLASSIFICATION	0.9998530239296713	WITHOUT_CLASSIFICATION	1.469760703286677E-4	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999974852061789	WITHOUT_CLASSIFICATION	2.51479382107666E-6	DEFECT
// reserve space for the range axes (if any)...	WITHOUT_CLASSIFICATION	0.9999838189470258	WITHOUT_CLASSIFICATION	1.6181052974135034E-5	DEFECT
// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes	WITHOUT_CLASSIFICATION	0.9999999716587465	WITHOUT_CLASSIFICATION	2.834125348142473E-8	DEFECT
// if there is a renderer, it draws the background, otherwise use the // default background...	WITHOUT_CLASSIFICATION	0.9999999082740335	WITHOUT_CLASSIFICATION	9.172596647649434E-8	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.999336940748522	WITHOUT_CLASSIFICATION	6.630592514779983E-4	DEFECT
// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)	WITHOUT_CLASSIFICATION	0.9999989917718809	WITHOUT_CLASSIFICATION	1.0082281191328277E-6	DEFECT
// don't let anyone draw outside the data area	WITHOUT_CLASSIFICATION	0.9999948004286848	WITHOUT_CLASSIFICATION	5.19957131517415E-6	DEFECT
// draw the markers...	WITHOUT_CLASSIFICATION	0.9999969977924185	WITHOUT_CLASSIFICATION	3.0022075816084963E-6	DEFECT
// now render data items...	WITHOUT_CLASSIFICATION	0.9999955122837269	WITHOUT_CLASSIFICATION	4.487716273148421E-6	DEFECT
// set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.999998000340324	WITHOUT_CLASSIFICATION	1.99965967595005E-6	DEFECT
// if the flag is being set to true, there may be queued up changes...	WITHOUT_CLASSIFICATION	0.9999997257787185	WITHOUT_CLASSIFICATION	2.742212814788275E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999950944862	WITHOUT_CLASSIFICATION	4.9055137956007275E-8	DEFECT
// draw the foreground markers...	WITHOUT_CLASSIFICATION	0.9999959588341389	WITHOUT_CLASSIFICATION	4.0411658611272854E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// draw the annotations (if any)...	WITHOUT_CLASSIFICATION	0.9999421618767356	WITHOUT_CLASSIFICATION	5.783812326441297E-5	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999877390170788	WITHOUT_CLASSIFICATION	1.226098292121873E-5	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999680156572246	WITHOUT_CLASSIFICATION	3.1984342775434756E-5	DEFECT
// draw an outline around the plot area...	WITHOUT_CLASSIFICATION	0.9999953391537038	WITHOUT_CLASSIFICATION	4.660846296218386E-6	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999930808709793	WITHOUT_CLASSIFICATION	6.919129020831561E-6	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999965764816493	WITHOUT_CLASSIFICATION	3.4235183507134954E-6	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999999415834688	WITHOUT_CLASSIFICATION	5.8416531144550374E-8	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999999567443769	WITHOUT_CLASSIFICATION	4.3255623173508786E-8	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.99999989148692	WITHOUT_CLASSIFICATION	1.0851308000963921E-7	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.999998650890762	WITHOUT_CLASSIFICATION	1.3491092378895914E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999579583980719	WITHOUT_CLASSIFICATION	4.204160192820692E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999983700464883	WITHOUT_CLASSIFICATION	1.6299535116552267E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999998663721622	WITHOUT_CLASSIFICATION	1.336278378012211E-7	DEFECT
// add the unique categories from this dataset	WITHOUT_CLASSIFICATION	0.9999987904666162	WITHOUT_CLASSIFICATION	1.2095333838435018E-6	DEFECT
// do nothing, because the plot is not pannable along the domain axes	WITHOUT_CLASSIFICATION	0.9999976596384963	WITHOUT_CLASSIFICATION	2.3403615037606994E-6	DEFECT
// can't zoom domain axis	WITHOUT_CLASSIFICATION	0.999979445530675	WITHOUT_CLASSIFICATION	2.055446932500412E-5	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999998854519156	WITHOUT_CLASSIFICATION	1.1454808426329728E-7	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999999101382866	WITHOUT_CLASSIFICATION	8.986171347936609E-8	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999988301942411	WITHOUT_CLASSIFICATION	1.1698057588752187E-6	DEFECT
// AxisLocation is immutable, so we can just copy the maps	WITHOUT_CLASSIFICATION	0.9999997411910696	WITHOUT_CLASSIFICATION	2.5880893031257475E-7	DEFECT
// not currently serialized	WITHOUT_CLASSIFICATION	0.9999951879183014	WITHOUT_CLASSIFICATION	4.812081698563519E-6	DEFECT
// some subclasses override this method completely, so don't put // anything here that *must* be done	WITHOUT_CLASSIFICATION	0.9999996363003898	WITHOUT_CLASSIFICATION	3.636996101614785E-7	DEFECT
// provides a 'no action' default	WITHOUT_CLASSIFICATION	0.9999990074675225	WITHOUT_CLASSIFICATION	9.925324775323117E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999950944862	WITHOUT_CLASSIFICATION	4.9055137956007275E-8	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998896516451	WITHOUT_CLASSIFICATION	1.1034835488263993E-7	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999998451163858	WITHOUT_CLASSIFICATION	1.5488361414288914E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999936501293896	WITHOUT_CLASSIFICATION	6.349870610513915E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999984565915387	WITHOUT_CLASSIFICATION	1.5434084611985466E-6	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999983514004487	WITHOUT_CLASSIFICATION	1.6485995512819435E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999953360754207	WITHOUT_CLASSIFICATION	4.663924579383592E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999953360754207	WITHOUT_CLASSIFICATION	4.663924579383592E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999938986906869	WITHOUT_CLASSIFICATION	6.101309313089583E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999989526842438	WITHOUT_CLASSIFICATION	1.0473157561600514E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999222629753359	WITHOUT_CLASSIFICATION	7.773702466406152E-5	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999846982803	WITHOUT_CLASSIFICATION	1.530171963110532E-8	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999983700464883	WITHOUT_CLASSIFICATION	1.6299535116552267E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999998663721622	WITHOUT_CLASSIFICATION	1.336278378012211E-7	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999994318577885	WITHOUT_CLASSIFICATION	5.681422115232872E-7	DEFECT
// the above should cover all the options...	WITHOUT_CLASSIFICATION	0.9999897500705578	WITHOUT_CLASSIFICATION	1.0249929442192868E-5	DEFECT
// define the default locations for up to 8 axes...	WITHOUT_CLASSIFICATION	0.9999998007579005	WITHOUT_CLASSIFICATION	1.9924209958111825E-7	DEFECT
// normalize angle	WITHOUT_CLASSIFICATION	0.9999999302944563	WITHOUT_CLASSIFICATION	6.970554364311219E-8	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999743540166172	WITHOUT_CLASSIFICATION	2.564598338282774E-5	DEFECT
// now for each dataset, get the renderer and the appropriate axis // and render the dataset...	WITHOUT_CLASSIFICATION	0.9999526696334716	WITHOUT_CLASSIFICATION	4.7330366528449575E-5	DEFECT
// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...	WITHOUT_CLASSIFICATION	0.9998463318002656	WITHOUT_CLASSIFICATION	1.5366819973445722E-4	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999864311331416	WITHOUT_CLASSIFICATION	1.3568866858356262E-5	DEFECT
// draw the radius grid lines, if any...	WITHOUT_CLASSIFICATION	0.999963387961349	WITHOUT_CLASSIFICATION	3.6612038651015156E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999982437464733	WITHOUT_CLASSIFICATION	1.7562535267746049E-6	DEFECT
// square	WITHOUT_CLASSIFICATION	0.9999999243028053	WITHOUT_CLASSIFICATION	7.569719473762471E-8	DEFECT
// circle	WITHOUT_CLASSIFICATION	0.9999993255936306	WITHOUT_CLASSIFICATION	6.744063694509621E-7	DEFECT
// up-pointing triangle	WITHOUT_CLASSIFICATION	0.9999999270092638	WITHOUT_CLASSIFICATION	7.299073616392723E-8	DEFECT
// diamond	WITHOUT_CLASSIFICATION	0.999971401166822	WITHOUT_CLASSIFICATION	2.85988331779219E-5	DEFECT
// horizontal rectangle	WITHOUT_CLASSIFICATION	0.999999182469916	WITHOUT_CLASSIFICATION	8.175300839262633E-7	DEFECT
// down-pointing triangle	WITHOUT_CLASSIFICATION	0.999998683264214	WITHOUT_CLASSIFICATION	1.3167357859707088E-6	DEFECT
// horizontal ellipse	WITHOUT_CLASSIFICATION	0.9999999930211151	WITHOUT_CLASSIFICATION	6.978884947747821E-9	DEFECT
// right-pointing triangle	WITHOUT_CLASSIFICATION	0.9999998014635106	WITHOUT_CLASSIFICATION	1.985364893060369E-7	DEFECT
// vertical rectangle	WITHOUT_CLASSIFICATION	0.9999993892593712	WITHOUT_CLASSIFICATION	6.107406288813765E-7	DEFECT
// left-pointing triangle	WITHOUT_CLASSIFICATION	0.9999997514304065	WITHOUT_CLASSIFICATION	2.4856959342507926E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999950944862	WITHOUT_CLASSIFICATION	4.9055137956007275E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999997633727052	WITHOUT_CLASSIFICATION	2.3662729473602155E-7	DEFECT
// adjust the plot area by the interior spacing value	WITHOUT_CLASSIFICATION	0.999999974223637	WITHOUT_CLASSIFICATION	2.577636302204387E-8	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.999999993928149	WITHOUT_CLASSIFICATION	6.071850935523345E-9	DEFECT
// send a dataset change event to self to trigger plot change event	WITHOUT_CLASSIFICATION	0.9999999928852606	WITHOUT_CLASSIFICATION	7.1147393894080424E-9	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999994630219063	WITHOUT_CLASSIFICATION	5.369780936755522E-7	DEFECT
//// SERIES PAINT /////////////////////////	WITHOUT_CLASSIFICATION	0.9999968607882282	WITHOUT_CLASSIFICATION	3.139211771757981E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999879044897	WITHOUT_CLASSIFICATION	1.2095510196185474E-8	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999994630219063	WITHOUT_CLASSIFICATION	5.369780936755522E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999994630219063	WITHOUT_CLASSIFICATION	5.369780936755522E-7	DEFECT
//// SERIES OUTLINE PAINT ////////////////////////////	WITHOUT_CLASSIFICATION	0.9999985473570598	WITHOUT_CLASSIFICATION	1.452642940083897E-6	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999879044897	WITHOUT_CLASSIFICATION	1.2095510196185474E-8	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999879044897	WITHOUT_CLASSIFICATION	1.2095510196185474E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999950944862	WITHOUT_CLASSIFICATION	4.9055137956007275E-8	DEFECT
// ensure we have a maximum value to use on the axes	WITHOUT_CLASSIFICATION	0.9999999123597352	WITHOUT_CLASSIFICATION	8.764026480020654E-8	DEFECT
//// SERIES OUTLINE STROKE /////////////////////	WITHOUT_CLASSIFICATION	0.9999993125740583	WITHOUT_CLASSIFICATION	6.874259417841293E-7	DEFECT
// Next, setup the plot area	WITHOUT_CLASSIFICATION	0.9999999685152642	WITHOUT_CLASSIFICATION	3.148473590011776E-8	DEFECT
// make the chart area a square	WITHOUT_CLASSIFICATION	0.9999999749574675	WITHOUT_CLASSIFICATION	2.504253241643135E-8	DEFECT
// draw the axis and category label	WITHOUT_CLASSIFICATION	0.9999986819330571	WITHOUT_CLASSIFICATION	1.318066942833618E-6	DEFECT
// 1 = end of axis	WITHOUT_CLASSIFICATION	0.9999991862602646	WITHOUT_CLASSIFICATION	8.137397353947392E-7	DEFECT
// Now actually plot each of the series polygons..	WITHOUT_CLASSIFICATION	0.9999928167385899	WITHOUT_CLASSIFICATION	7.183261410075913E-6	DEFECT
// plot the data...	WITHOUT_CLASSIFICATION	0.9999886520296503	WITHOUT_CLASSIFICATION	1.1347970349777328E-5	DEFECT
// draw the polygon series...	WITHOUT_CLASSIFICATION	0.9999609617359446	WITHOUT_CLASSIFICATION	3.903826405541691E-5	DEFECT
// Finds our starting angle from the centre for this axis	WITHOUT_CLASSIFICATION	0.999999932168373	WITHOUT_CLASSIFICATION	6.783162698966275E-8	DEFECT
// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);	WITHOUT_CLASSIFICATION	0.9919076791999764	WITHOUT_CLASSIFICATION	0.008092320800023674	DEFECT
// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon	WITHOUT_CLASSIFICATION	0.9999911151017199	WITHOUT_CLASSIFICATION	8.884898280162183E-6	DEFECT
// put an elipse at the point being plotted..	WITHOUT_CLASSIFICATION	0.9999995264299554	WITHOUT_CLASSIFICATION	4.7357004464313324E-7	DEFECT
// Plot the polygon	WITHOUT_CLASSIFICATION	0.9999337332844142	WITHOUT_CLASSIFICATION	6.626671558589332E-5	DEFECT
// set the anchor value for the horizontal axis...	WITHOUT_CLASSIFICATION	0.9999997532957614	WITHOUT_CLASSIFICATION	2.467042385889624E-7	DEFECT
/* shapeFilled=*/	WITHOUT_CLASSIFICATION	0.99999783051657	WITHOUT_CLASSIFICATION	2.1694834300504387E-6	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999950944862	WITHOUT_CLASSIFICATION	4.9055137956007275E-8	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999997633727052	WITHOUT_CLASSIFICATION	2.3662729473602155E-7	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998896516451	WITHOUT_CLASSIFICATION	1.1034835488263993E-7	DEFECT
// plot is likely registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.9999864448201605	WITHOUT_CLASSIFICATION	1.3555179839603778E-5	DEFECT
// if the plot area is too small, just return...	WITHOUT_CLASSIFICATION	0.9999998451163858	WITHOUT_CLASSIFICATION	1.5488361414288914E-7	DEFECT
// record the plot area...	WITHOUT_CLASSIFICATION	0.9999936501293896	WITHOUT_CLASSIFICATION	6.349870610513915E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999984565915387	WITHOUT_CLASSIFICATION	1.5434084611985466E-6	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.999998449139495	WITHOUT_CLASSIFICATION	1.550860504949546E-6	DEFECT
// plot the data (unless the dataset is null)...	WITHOUT_CLASSIFICATION	0.9999695546063302	WITHOUT_CLASSIFICATION	3.0445393669717556E-5	DEFECT
// adjust the drawing area for the plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999983514004487	WITHOUT_CLASSIFICATION	1.6485995512819435E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999953360754207	WITHOUT_CLASSIFICATION	4.663924579383592E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999953360754207	WITHOUT_CLASSIFICATION	4.663924579383592E-6	DEFECT
// delegate...	WITHOUT_CLASSIFICATION	0.9999953360754207	WITHOUT_CLASSIFICATION	4.663924579383592E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999989526842438	WITHOUT_CLASSIFICATION	1.0473157561600514E-6	DEFECT
// fake a dataset change event to update axes...	WITHOUT_CLASSIFICATION	0.9999989526842438	WITHOUT_CLASSIFICATION	1.0473157561600514E-6	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999222629753359	WITHOUT_CLASSIFICATION	7.773702466406152E-5	DEFECT
// reserve some space for the domain axis...	WITHOUT_CLASSIFICATION	0.9999981462790153	WITHOUT_CLASSIFICATION	1.8537209847181332E-6	DEFECT
// reserve some space for the range axis...	WITHOUT_CLASSIFICATION	0.9999974852061789	WITHOUT_CLASSIFICATION	2.51479382107666E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999743540166172	WITHOUT_CLASSIFICATION	2.564598338282774E-5	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.999999926488576	WITHOUT_CLASSIFICATION	7.351142387327534E-8	DEFECT
// Lastly, fill the web polygon if this is required	WITHOUT_CLASSIFICATION	0.9997505136618682	WITHOUT_CLASSIFICATION	2.494863381318049E-4	DEFECT
// if series are in rows, then the categories are the column keys	WITHOUT_CLASSIFICATION	0.9999995355405364	WITHOUT_CLASSIFICATION	4.644594635707995E-7	DEFECT
// if series are in columns, then the categories are the row keys	WITHOUT_CLASSIFICATION	0.9999993039041835	WITHOUT_CLASSIFICATION	6.960958165812811E-7	DEFECT
//          negatives = true;	WITHOUT_CLASSIFICATION	0.9999992658685045	WITHOUT_CLASSIFICATION	7.341314954977863E-7	DEFECT
//  value = Math.pow(10,value);	WITHOUT_CLASSIFICATION	0.9999864410267402	WITHOUT_CLASSIFICATION	1.3558973259927413E-5	DEFECT
//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;	WITHOUT_CLASSIFICATION	0.999999894791118	WITHOUT_CLASSIFICATION	1.0520888201378625E-7	DEFECT
// super.setSeriesPaint(series, paint);	WITHOUT_CLASSIFICATION	0.9999999738876543	WITHOUT_CLASSIFICATION	2.6112345744118527E-8	DEFECT
/// Squares	WITHOUT_CLASSIFICATION	0.9999999047430819	WITHOUT_CLASSIFICATION	9.525691813625603E-8	DEFECT
/// Draw N, S, E, W	WITHOUT_CLASSIFICATION	0.9999999303621924	WITHOUT_CLASSIFICATION	6.96378075384057E-8	DEFECT
// no zooming possible	WITHOUT_CLASSIFICATION	0.9999998795229121	WITHOUT_CLASSIFICATION	1.2047708787879793E-7	DEFECT
// clone share data sets => add the clone as listener to the dataset	WITHOUT_CLASSIFICATION	0.9999999951540554	WITHOUT_CLASSIFICATION	4.845944736574401E-9	DEFECT
// only relevant when this is a subplot	WITHOUT_CLASSIFICATION	0.9999611142498853	WITHOUT_CLASSIFICATION	3.888575011468141E-5	DEFECT
// allocate storage for datasets, axes and renderers (all optional)	WITHOUT_CLASSIFICATION	0.9999999897405071	WITHOUT_CLASSIFICATION	1.0259492908649953E-8	DEFECT
// reserve space for the domain axes...	WITHOUT_CLASSIFICATION	0.9999973104865939	WITHOUT_CLASSIFICATION	2.689513406080086E-6	DEFECT
// reserve space for the range axes...	WITHOUT_CLASSIFICATION	0.9999959993126876	WITHOUT_CLASSIFICATION	4.000687312374577E-6	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999846982803	WITHOUT_CLASSIFICATION	1.530171963110532E-8	DEFECT
// the first axis in the list is used for data <--> Java2D	WITHOUT_CLASSIFICATION	0.9999999846982803	WITHOUT_CLASSIFICATION	1.530171963110532E-8	DEFECT
// draw domain crosshair if required...	WITHOUT_CLASSIFICATION	0.9999877390170788	WITHOUT_CLASSIFICATION	1.226098292121873E-5	DEFECT
// draw range crosshair if required...	WITHOUT_CLASSIFICATION	0.9999680156572246	WITHOUT_CLASSIFICATION	3.1984342775434756E-5	DEFECT
// add domain axes to lists...	WITHOUT_CLASSIFICATION	0.9999930808709793	WITHOUT_CLASSIFICATION	6.919129020831561E-6	DEFECT
// add range axes to lists...	WITHOUT_CLASSIFICATION	0.9999965764816493	WITHOUT_CLASSIFICATION	3.4235183507134954E-6	DEFECT
// draw the top axes	WITHOUT_CLASSIFICATION	0.9999999415834688	WITHOUT_CLASSIFICATION	5.8416531144550374E-8	DEFECT
// draw the bottom axes	WITHOUT_CLASSIFICATION	0.9999999567443769	WITHOUT_CLASSIFICATION	4.3255623173508786E-8	DEFECT
// draw the left axes	WITHOUT_CLASSIFICATION	0.99999989148692	WITHOUT_CLASSIFICATION	1.0851308000963921E-7	DEFECT
// draw the right axes	WITHOUT_CLASSIFICATION	0.999998650890762	WITHOUT_CLASSIFICATION	1.3491092378895914E-6	DEFECT
// draw the range grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999579583980719	WITHOUT_CLASSIFICATION	4.204160192820692E-5	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999983700464883	WITHOUT_CLASSIFICATION	1.6299535116552267E-6	DEFECT
// no renderer, no gridlines...	WITHOUT_CLASSIFICATION	0.9999983700464883	WITHOUT_CLASSIFICATION	1.6299535116552267E-6	DEFECT
// draw the domain grid lines, if any...	WITHOUT_CLASSIFICATION	0.9999864311331416	WITHOUT_CLASSIFICATION	1.3568866858356262E-5	DEFECT
// draw the markers that are associated with a specific dataset...	WITHOUT_CLASSIFICATION	0.999969328316629	WITHOUT_CLASSIFICATION	3.067168337100715E-5	DEFECT
// now draw annotations and render data items...	WITHOUT_CLASSIFICATION	0.9999922745116002	WITHOUT_CLASSIFICATION	7.725488399842982E-6	DEFECT
// draw background annotations	WITHOUT_CLASSIFICATION	0.9999995385255288	WITHOUT_CLASSIFICATION	4.61474471179769E-7	DEFECT
// render data items...	WITHOUT_CLASSIFICATION	0.9999961168531469	WITHOUT_CLASSIFICATION	3.883146853104036E-6	DEFECT
// draw foreground annotations	WITHOUT_CLASSIFICATION	0.9999997481755635	WITHOUT_CLASSIFICATION	2.5182443652196975E-7	DEFECT
//  0 | 1 //  --+-- //  2 | 3	WITHOUT_CLASSIFICATION	0.9999962314950681	WITHOUT_CLASSIFICATION	3.7685049318942264E-6	DEFECT
// we can't draw quadrants without a valid x-axis	WITHOUT_CLASSIFICATION	0.9999994510949326	WITHOUT_CLASSIFICATION	5.489050673389659E-7	DEFECT
// we can't draw quadrants without a valid y-axis	WITHOUT_CLASSIFICATION	0.999998630200085	WITHOUT_CLASSIFICATION	1.369799915062953E-6	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999995970336729	WITHOUT_CLASSIFICATION	4.029663270817952E-7	DEFECT
// can't render anything without axes	WITHOUT_CLASSIFICATION	0.9993494995037367	WITHOUT_CLASSIFICATION	6.505004962632333E-4	DEFECT
// no default renderer available	WITHOUT_CLASSIFICATION	0.9999998909951817	WITHOUT_CLASSIFICATION	1.0900481822033786E-7	DEFECT
//render series in reverse order	WITHOUT_CLASSIFICATION	0.9999944435705403	WITHOUT_CLASSIFICATION	5.556429459695059E-6	DEFECT
//render series in forward order	WITHOUT_CLASSIFICATION	0.999987993906633	WITHOUT_CLASSIFICATION	1.2006093366990534E-5	DEFECT
// use the TextTitle class because it is a concrete subclass	WITHOUT_CLASSIFICATION	0.9999994894649086	WITHOUT_CLASSIFICATION	5.10535091433253E-7	DEFECT
// set up info collection...	WITHOUT_CLASSIFICATION	0.9999992607047246	WITHOUT_CLASSIFICATION	7.392952755011006E-7	DEFECT
// adjust the drawing area for plot insets (if any)...	WITHOUT_CLASSIFICATION	0.9999969272207743	WITHOUT_CLASSIFICATION	3.0727792257898476E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999938986906869	WITHOUT_CLASSIFICATION	6.101309313089583E-6	DEFECT
// try the parent plot	WITHOUT_CLASSIFICATION	0.9999938986906869	WITHOUT_CLASSIFICATION	6.101309313089583E-6	DEFECT
// iterate through the datasets that map to the axis and get the union // of the ranges.	WITHOUT_CLASSIFICATION	0.9999998663721622	WITHOUT_CLASSIFICATION	1.336278378012211E-7	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999998854519156	WITHOUT_CLASSIFICATION	1.1454808426329728E-7	DEFECT
// delegate to other method	WITHOUT_CLASSIFICATION	0.9999998854519156	WITHOUT_CLASSIFICATION	1.1454808426329728E-7	DEFECT
// perform the zoom on each range axis	WITHOUT_CLASSIFICATION	0.9999999101382866	WITHOUT_CLASSIFICATION	8.986171347936609E-8	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999988301942411	WITHOUT_CLASSIFICATION	1.1698057588752187E-6	DEFECT
// get the relevant source coordinate given the plot orientation	WITHOUT_CLASSIFICATION	0.9999988301942411	WITHOUT_CLASSIFICATION	1.1698057588752187E-6	DEFECT
// draw the plot background and axes...	WITHOUT_CLASSIFICATION	0.9999743540166172	WITHOUT_CLASSIFICATION	2.564598338282774E-5	DEFECT
// the datasets are not cloned, but listeners need to be added...	WITHOUT_CLASSIFICATION	0.9999982437464733	WITHOUT_CLASSIFICATION	1.7562535267746049E-6	DEFECT
// if the event was caused by a change to series visibility, then // the axis ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999993453652231	WITHOUT_CLASSIFICATION	6.546347769053151E-7	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9988793150573477	WITHOUT_CLASSIFICATION	0.0011206849426522822	DEFECT
// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)	WITHOUT_CLASSIFICATION	0.9988793150573477	WITHOUT_CLASSIFICATION	0.0011206849426522822	DEFECT
// set the anchor value for the vertical axis...	WITHOUT_CLASSIFICATION	0.9999998551799131	WITHOUT_CLASSIFICATION	1.4482008682225296E-7	DEFECT
// grab the plot's annotations	WITHOUT_CLASSIFICATION	0.999999974832076	WITHOUT_CLASSIFICATION	2.5167923969131396E-8	DEFECT
// is it a domain axis?	WITHOUT_CLASSIFICATION	0.9999948898211289	WITHOUT_CLASSIFICATION	5.110178870999226E-6	DEFECT
// or is it a range axis?	WITHOUT_CLASSIFICATION	0.9999971280067076	WITHOUT_CLASSIFICATION	2.871993292365228E-6	DEFECT
// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;	WITHOUT_CLASSIFICATION	0.9999993364802684	WITHOUT_CLASSIFICATION	6.635197315480891E-7	DEFECT
// register the plot as a listener with its axes, datasets, and // renderers...	WITHOUT_CLASSIFICATION	0.9999978170813386	WITHOUT_CLASSIFICATION	2.18291866144475E-6	DEFECT
// perform the zoom on each domain axis	WITHOUT_CLASSIFICATION	0.9999999038904582	WITHOUT_CLASSIFICATION	9.610954183193197E-8	DEFECT
// lineVisible	WITHOUT_CLASSIFICATION	0.9999994773197205	WITHOUT_CLASSIFICATION	5.226802795361808E-7	DEFECT
// adjust for insets...	WITHOUT_CLASSIFICATION	0.9999997633727052	WITHOUT_CLASSIFICATION	2.3662729473602155E-7	DEFECT
// set the new dataset, and register the chart as a change listener...	WITHOUT_CLASSIFICATION	0.999999993928149	WITHOUT_CLASSIFICATION	6.071850935523345E-9	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998896516451	WITHOUT_CLASSIFICATION	1.1034835488263993E-7	DEFECT
// draw the background	WITHOUT_CLASSIFICATION	0.999998449139495	WITHOUT_CLASSIFICATION	1.550860504949546E-6	DEFECT
// intentionally blank	WITHOUT_CLASSIFICATION	0.9999975428361173	WITHOUT_CLASSIFICATION	2.4571638826531674E-6	DEFECT
// get the source coordinate - this plot has always a VERTICAL // orientation	WITHOUT_CLASSIFICATION	0.9999918551746829	WITHOUT_CLASSIFICATION	8.144825317130245E-6	DEFECT
// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?	WITHOUT_CLASSIFICATION	0.9983179850667697	WITHOUT_CLASSIFICATION	0.0016820149332303083	DEFECT
//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);	WITHOUT_CLASSIFICATION	0.9999851460637644	WITHOUT_CLASSIFICATION	1.4853936235512776E-5	DEFECT
// if there is an existing dataset, remove the plot from the list // of change listeners...	WITHOUT_CLASSIFICATION	0.9999999774765475	WITHOUT_CLASSIFICATION	2.2523452538083206E-8	DEFECT
// plot is registered as a listener with the existing axis...	WITHOUT_CLASSIFICATION	0.999993807822456	WITHOUT_CLASSIFICATION	6.192177543976697E-6	DEFECT
// adjust for padding...	WITHOUT_CLASSIFICATION	0.9999986317823853	WITHOUT_CLASSIFICATION	1.368217614579392E-6	DEFECT
// already calculated // already calculated	WITHOUT_CLASSIFICATION	0.9999998631957125	WITHOUT_CLASSIFICATION	1.3680428747649142E-7	DEFECT
// draw range indicators...	WITHOUT_CLASSIFICATION	0.9999977823154251	WITHOUT_CLASSIFICATION	2.2176845748514863E-6	DEFECT
// draw start of normal range	WITHOUT_CLASSIFICATION	0.9999999905485517	WITHOUT_CLASSIFICATION	9.451448286878689E-9	DEFECT
// draw start of warning range	WITHOUT_CLASSIFICATION	0.9999999909308903	WITHOUT_CLASSIFICATION	9.069109726162267E-9	DEFECT
// draw start of critical range	WITHOUT_CLASSIFICATION	0.9999999523909386	WITHOUT_CLASSIFICATION	4.760906124528794E-8	DEFECT
// draw the axis...	WITHOUT_CLASSIFICATION	0.9999990297191618	WITHOUT_CLASSIFICATION	9.702808383258142E-7	DEFECT
//cursor = midX - COLUMN_RADIUS - AXIS_GAP;	WITHOUT_CLASSIFICATION	0.9999994737381626	WITHOUT_CLASSIFICATION	5.262618373627718E-7	DEFECT
// draw text value on screen	WITHOUT_CLASSIFICATION	0.9999990123358141	WITHOUT_CLASSIFICATION	9.876641858717615E-7	DEFECT
//  draw units indicator	WITHOUT_CLASSIFICATION	0.9999997642361483	WITHOUT_CLASSIFICATION	2.3576385171831725E-7	DEFECT
// draw thermometer outline	WITHOUT_CLASSIFICATION	0.9999999216284425	WITHOUT_CLASSIFICATION	7.837155742767845E-8	DEFECT
// no domain axis to zoom	WITHOUT_CLASSIFICATION	0.9999997048353637	WITHOUT_CLASSIFICATION	2.9516463635483797E-7	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999960012443807	WITHOUT_CLASSIFICATION	3.998755619284015E-6	DEFECT
// calculate the bounds of the template value	WITHOUT_CLASSIFICATION	0.9999998173145809	WITHOUT_CLASSIFICATION	1.8268541909118596E-7	DEFECT
// align this rectangle to the frameAnchor	WITHOUT_CLASSIFICATION	0.999999669558528	WITHOUT_CLASSIFICATION	3.304414719065493E-7	DEFECT
// add the insets	WITHOUT_CLASSIFICATION	0.9999998635719444	WITHOUT_CLASSIFICATION	1.3642805561407652E-7	DEFECT
// draw the border	WITHOUT_CLASSIFICATION	0.9999998808142282	WITHOUT_CLASSIFICATION	1.19185771787155E-7	DEFECT
// now find the text anchor point	WITHOUT_CLASSIFICATION	0.9999998889337629	WITHOUT_CLASSIFICATION	1.1106623710719914E-7	DEFECT
/* lineVisible= */	WITHOUT_CLASSIFICATION	0.9999979070846808	WITHOUT_CLASSIFICATION	2.092915319098789E-6	DEFECT
// send a dataset change event to self...	WITHOUT_CLASSIFICATION	0.9999998896516451	WITHOUT_CLASSIFICATION	1.1034835488263993E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987313898762	WITHOUT_CLASSIFICATION	1.2686101238737316E-6	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999994630219063	WITHOUT_CLASSIFICATION	5.369780936755522E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999994630219063	WITHOUT_CLASSIFICATION	5.369780936755522E-7	DEFECT
// otherwise look up the paint list	WITHOUT_CLASSIFICATION	0.9999999879044897	WITHOUT_CLASSIFICATION	1.2095510196185474E-8	DEFECT
// work out the anchor point	WITHOUT_CLASSIFICATION	0.9999960012443807	WITHOUT_CLASSIFICATION	3.998755619284015E-6	DEFECT
// urlText	WITHOUT_CLASSIFICATION	0.999999495470414	WITHOUT_CLASSIFICATION	5.045295859076873E-7	DEFECT
// first, expand the viewing area into a drawing frame	WITHOUT_CLASSIFICATION	0.999999872650146	WITHOUT_CLASSIFICATION	1.2734985390732574E-7	DEFECT
// draw the background if there is one...	WITHOUT_CLASSIFICATION	0.9999943093707747	WITHOUT_CLASSIFICATION	5.690629225310624E-6	DEFECT
// draw the pointers	WITHOUT_CLASSIFICATION	0.9999999293832317	WITHOUT_CLASSIFICATION	7.061676833404384E-8	DEFECT
// draw the cap if there is one...	WITHOUT_CLASSIFICATION	0.9999954236491586	WITHOUT_CLASSIFICATION	4.576350841388652E-6	DEFECT
// now do the minor tick marks	WITHOUT_CLASSIFICATION	0.9999999650075989	WITHOUT_CLASSIFICATION	3.4992401069189045E-8	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999954723414243	WITHOUT_CLASSIFICATION	4.527658575778175E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999959501442448	WITHOUT_CLASSIFICATION	4.049855755135943E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999999089801688	WITHOUT_CLASSIFICATION	9.101983127025436E-8	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999970960298308	WITHOUT_CLASSIFICATION	2.903970169171595E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999981238551283	WITHOUT_CLASSIFICATION	1.8761448717181261E-6	DEFECT
// we don't clone the listeners	WITHOUT_CLASSIFICATION	0.9999999694212033	WITHOUT_CLASSIFICATION	3.057879672087614E-8	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999998802751197	WITHOUT_CLASSIFICATION	1.1972488034419637E-7	DEFECT
// draw the outline of the filled polygon	WITHOUT_CLASSIFICATION	0.9999997237953159	WITHOUT_CLASSIFICATION	2.762046841223718E-7	DEFECT
// just the lines, no filling	WITHOUT_CLASSIFICATION	0.9999999945608312	WITHOUT_CLASSIFICATION	5.439168832095938E-9	DEFECT
// draw the item shapes	WITHOUT_CLASSIFICATION	0.9999999359988544	WITHOUT_CLASSIFICATION	6.400114562682498E-8	DEFECT
// SERIES VISIBLE (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999837566748411	WITHOUT_CLASSIFICATION	1.624332515897676E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999901288926928	WITHOUT_CLASSIFICATION	9.871107307267968E-6	DEFECT
// PAINT	WITHOUT_CLASSIFICATION	0.9999979507841522	WITHOUT_CLASSIFICATION	2.0492158478297427E-6	DEFECT
//// FILL PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999982080209131	WITHOUT_CLASSIFICATION	1.7919790869005172E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999960500295	WITHOUT_CLASSIFICATION	3.949970429873469E-9	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999994630219063	WITHOUT_CLASSIFICATION	5.369780936755522E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999994630219063	WITHOUT_CLASSIFICATION	5.369780936755522E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999994630219063	WITHOUT_CLASSIFICATION	5.369780936755522E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999994630219063	WITHOUT_CLASSIFICATION	5.369780936755522E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999994630219063	WITHOUT_CLASSIFICATION	5.369780936755522E-7	DEFECT
// return the override, if there is one...	WITHOUT_CLASSIFICATION	0.9999994630219063	WITHOUT_CLASSIFICATION	5.369780936755522E-7	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999992287796541	WITHOUT_CLASSIFICATION	7.712203459246317E-7	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999960500295	WITHOUT_CLASSIFICATION	3.949970429873469E-9	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999960500295	WITHOUT_CLASSIFICATION	3.949970429873469E-9	DEFECT
// OUTLINE PAINT //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994400428764	WITHOUT_CLASSIFICATION	5.599571235413442E-7	DEFECT
// STROKE	WITHOUT_CLASSIFICATION	0.9999990360211112	WITHOUT_CLASSIFICATION	9.639788888191546E-7	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999998818420386	WITHOUT_CLASSIFICATION	1.1815796143995463E-7	DEFECT
// otherwise look up the stroke table	WITHOUT_CLASSIFICATION	0.9999998718686754	WITHOUT_CLASSIFICATION	1.2813132459556483E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.999996179020499	WITHOUT_CLASSIFICATION	3.820979501013952E-6	DEFECT
// otherwise look up the shape list	WITHOUT_CLASSIFICATION	0.9999999838536723	WITHOUT_CLASSIFICATION	1.6146327690460094E-8	DEFECT
// ITEM LABEL VISIBILITY...	WITHOUT_CLASSIFICATION	0.9999688993231287	WITHOUT_CLASSIFICATION	3.11006768712611E-5	DEFECT
// otherwise look up the boolean table	WITHOUT_CLASSIFICATION	0.9999999948751839	WITHOUT_CLASSIFICATION	5.124816147295366E-9	DEFECT
// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.	WITHOUT_CLASSIFICATION	0.9999995654368725	WITHOUT_CLASSIFICATION	4.3456312738526786E-7	DEFECT
//// ITEM LABEL FONT //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999973777636847	WITHOUT_CLASSIFICATION	2.62223631525891E-6	DEFECT
//// ITEM LABEL PAINT  ////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999951654162416	WITHOUT_CLASSIFICATION	4.83458375838804E-6	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.999962634173467	WITHOUT_CLASSIFICATION	3.736582653298836E-5	DEFECT
// otherwise look up the position table	WITHOUT_CLASSIFICATION	0.999999944503603	WITHOUT_CLASSIFICATION	5.5496397078267175E-8	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999882560632866	WITHOUT_CLASSIFICATION	1.1743936713502189E-5	DEFECT
// otherwise look up the position list	WITHOUT_CLASSIFICATION	0.9999998748929936	WITHOUT_CLASSIFICATION	1.2510700650734436E-7	DEFECT
// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...	WITHOUT_CLASSIFICATION	0.9909816924781029	WITHOUT_CLASSIFICATION	0.00901830752189703	DEFECT
// 'paint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996654649012	WITHOUT_CLASSIFICATION	3.345350988247649E-7	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998683510751	WITHOUT_CLASSIFICATION	1.3164892477780077E-7	DEFECT
// 'outlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999993730077126	WITHOUT_CLASSIFICATION	6.269922874905613E-7	DEFECT
// 'baseOutlinePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998357636254	WITHOUT_CLASSIFICATION	1.6423637464942413E-7	DEFECT
// 'stroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999946578562869	WITHOUT_CLASSIFICATION	5.3421437130709235E-6	DEFECT
// 'baseStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999910570087434	WITHOUT_CLASSIFICATION	8.942991256765137E-6	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999992287796541	WITHOUT_CLASSIFICATION	7.712203459246317E-7	DEFECT
// 'basePaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998683510751	WITHOUT_CLASSIFICATION	1.3164892477780077E-7	DEFECT
// shapeList // baseShape	WITHOUT_CLASSIFICATION	0.9999999855151653	WITHOUT_CLASSIFICATION	1.4484834639092756E-8	DEFECT
// 'outlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999628338240688	WITHOUT_CLASSIFICATION	3.7166175931308336E-5	DEFECT
// 'baseOutlineStroke' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999902643098895	WITHOUT_CLASSIFICATION	9.735690110583558E-6	DEFECT
// 'itemLabelsVisible' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999996455563894	WITHOUT_CLASSIFICATION	3.544436105715154E-7	DEFECT
// 'itemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998206094809	WITHOUT_CLASSIFICATION	1.7939051911272497E-7	DEFECT
// 'baseItemLabelFont' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999432939807	WITHOUT_CLASSIFICATION	5.670601941865245E-8	DEFECT
// 'itemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999998948237755	WITHOUT_CLASSIFICATION	1.0517622458259454E-7	DEFECT
// 'baseItemLabelPaint' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999667534006	WITHOUT_CLASSIFICATION	3.32465994320747E-8	DEFECT
// 'postiveItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999723957307	WITHOUT_CLASSIFICATION	2.7604269339584333E-8	DEFECT
// 'baseItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.9999999349448354	WITHOUT_CLASSIFICATION	6.505516459526997E-8	DEFECT
// 'negativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999842300164	WITHOUT_CLASSIFICATION	1.576998359612076E-7	DEFECT
// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference	WITHOUT_CLASSIFICATION	0.999999977471212	WITHOUT_CLASSIFICATION	2.252878785813656E-8	DEFECT
// listeners are not restored automatically, but storage must be // provided...	WITHOUT_CLASSIFICATION	0.9998998302941837	WITHOUT_CLASSIFICATION	1.0016970581637157E-4	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999996860592812	WITHOUT_CLASSIFICATION	3.13940718809318E-7	DEFECT
// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));	WITHOUT_CLASSIFICATION	0.9999588058379105	WITHOUT_CLASSIFICATION	4.1194162089516924E-5	DEFECT
//System.err.print(" creating new outlier list ");	WITHOUT_CLASSIFICATION	0.9999999966326424	WITHOUT_CLASSIFICATION	3.3673574913634352E-9	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999988709440223	WITHOUT_CLASSIFICATION	1.1290559776994689E-5	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999964008763531	WITHOUT_CLASSIFICATION	3.5991236468200583E-6	DEFECT
// handle value outside bounds...	WITHOUT_CLASSIFICATION	0.9999997756712273	WITHOUT_CLASSIFICATION	2.2432877266068503E-7	DEFECT
// handle special case where value is less that item zero	WITHOUT_CLASSIFICATION	0.9999999130763149	WITHOUT_CLASSIFICATION	8.692368524779168E-8	DEFECT
// special case where the lowest x-value is >= xLow	WITHOUT_CLASSIFICATION	0.9999999435610641	WITHOUT_CLASSIFICATION	5.643893586960023E-8	DEFECT
// special case where the highest x-value is < xLow	WITHOUT_CLASSIFICATION	0.9999997451933024	WITHOUT_CLASSIFICATION	2.548066975861454E-7	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999737106156548	WITHOUT_CLASSIFICATION	2.6289384345162113E-5	DEFECT
// skip any items that don't need including...	WITHOUT_CLASSIFICATION	0.9999737106156548	WITHOUT_CLASSIFICATION	2.6289384345162113E-5	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999999700632485	WITHOUT_CLASSIFICATION	2.993675156696678E-8	DEFECT
// assign a color for each unique value	WITHOUT_CLASSIFICATION	0.9999999700632485	WITHOUT_CLASSIFICATION	2.993675156696678E-8	DEFECT
// in this case, every color has a unique value	WITHOUT_CLASSIFICATION	0.9999492301984437	WITHOUT_CLASSIFICATION	5.076980155632577E-5	DEFECT
// in this case, every color has a range of values	WITHOUT_CLASSIFICATION	0.9999835994046424	WITHOUT_CLASSIFICATION	1.6400595357574918E-5	DEFECT
// end class wafermaprenderer	WITHOUT_CLASSIFICATION	0.9999975556728401	WITHOUT_CLASSIFICATION	2.444327159862916E-6	DEFECT
// if there is no plot, there is no dataset to access...	WITHOUT_CLASSIFICATION	0.9999997840429933	WITHOUT_CLASSIFICATION	2.1595700656542877E-7	DEFECT
// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...	WITHOUT_CLASSIFICATION	0.9999172835529246	WITHOUT_CLASSIFICATION	8.27164470753515E-5	DEFECT
// when the x-values are descending, the upper bound is found by // comparing against xLow	WITHOUT_CLASSIFICATION	0.9999743426462211	WITHOUT_CLASSIFICATION	2.565735377895263E-5	DEFECT
// more values than paints so map // multiple values to the same color	WITHOUT_CLASSIFICATION	0.9999997998436603	WITHOUT_CLASSIFICATION	2.0015633964206346E-7	DEFECT
// end foreach map entry // end else	WITHOUT_CLASSIFICATION	0.9999998684724208	WITHOUT_CLASSIFICATION	1.3152757922573578E-7	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999723756837	WITHOUT_CLASSIFICATION	2.7624316308315686E-8	DEFECT
// FIXME: calculate xxLeft and xxRight	WITHOUT_CLASSIFICATION	0.9510286956889008	DEFECT	0.048971304311099174	WITHOUT_CLASSIFICATION
// handle positive value	WITHOUT_CLASSIFICATION	0.9999998313491502	WITHOUT_CLASSIFICATION	1.6865084979550145E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999998018678471	WITHOUT_CLASSIFICATION	1.9813215303947503E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999998018678471	WITHOUT_CLASSIFICATION	1.9813215303947503E-7	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999969422858629	WITHOUT_CLASSIFICATION	3.0577141371463198E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999969422858629	WITHOUT_CLASSIFICATION	3.0577141371463198E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999997890292235	WITHOUT_CLASSIFICATION	2.1097077645986866E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999984697795774	WITHOUT_CLASSIFICATION	1.530220422582565E-6	DEFECT
// '+' because v is negative	WITHOUT_CLASSIFICATION	0.99999988917846	WITHOUT_CLASSIFICATION	1.1082153992279099E-7	DEFECT
// handle rendering separately for the two plot orientations...	WITHOUT_CLASSIFICATION	0.9999914800560951	WITHOUT_CLASSIFICATION	8.519943904952881E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999997876299496	WITHOUT_CLASSIFICATION	2.1237005034601112E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999995388540664	WITHOUT_CLASSIFICATION	4.611459335093984E-7	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999955702971273	WITHOUT_CLASSIFICATION	4.4297028727364184E-6	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999807799538509	WITHOUT_CLASSIFICATION	1.9220046149101636E-5	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999960500295	WITHOUT_CLASSIFICATION	3.949970429873469E-9	DEFECT
// a list to store the series index and bar region, so we can draw // all the labels at the end...	WITHOUT_CLASSIFICATION	0.9999904944779143	WITHOUT_CLASSIFICATION	9.505522085603946E-6	DEFECT
// draw the blocks	WITHOUT_CLASSIFICATION	0.9999997876299496	WITHOUT_CLASSIFICATION	2.1237005034601112E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999995388540664	WITHOUT_CLASSIFICATION	4.611459335093984E-7	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999980099026833	WITHOUT_CLASSIFICATION	1.990097316735558E-6	DEFECT
// preserves old behaviour	WITHOUT_CLASSIFICATION	0.9999999243429477	WITHOUT_CLASSIFICATION	7.565705226380462E-8	DEFECT
// contained titles	WITHOUT_CLASSIFICATION	0.9999998054209437	WITHOUT_CLASSIFICATION	1.9457905631227755E-7	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999807799538509	WITHOUT_CLASSIFICATION	1.9220046149101636E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999999409676029	WITHOUT_CLASSIFICATION	5.9032396942094994E-8	DEFECT
// delegate	WITHOUT_CLASSIFICATION	0.9999997599751133	WITHOUT_CLASSIFICATION	2.400248867455376E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999907032881535	WITHOUT_CLASSIFICATION	9.296711846552585E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999907032881535	WITHOUT_CLASSIFICATION	9.296711846552585E-6	DEFECT
// do nothing if both the line and shape are not visible	WITHOUT_CLASSIFICATION	0.9999995915274639	WITHOUT_CLASSIFICATION	4.0847253613689423E-7	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9996945312824528	WITHOUT_CLASSIFICATION	3.054687175472932E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999593596507309	WITHOUT_CLASSIFICATION	4.064034926907433E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999593596507309	WITHOUT_CLASSIFICATION	4.064034926907433E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999980341829301	WITHOUT_CLASSIFICATION	1.965817069886998E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999990836214665	WITHOUT_CLASSIFICATION	9.163785335957691E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999980088390442	WITHOUT_CLASSIFICATION	1.9911609558665846E-6	DEFECT
// set the default item label positions	WITHOUT_CLASSIFICATION	0.9999999919633946	WITHOUT_CLASSIFICATION	8.03660528785515E-9	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999513108290679	WITHOUT_CLASSIFICATION	4.868917093204943E-5	DEFECT
// highlight the background corners...	WITHOUT_CLASSIFICATION	0.9999350642226789	WITHOUT_CLASSIFICATION	6.493577732113349E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999985487650137	WITHOUT_CLASSIFICATION	1.451234986311739E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999552079906	WITHOUT_CLASSIFICATION	4.479200950224338E-8	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999996860592812	WITHOUT_CLASSIFICATION	3.13940718809318E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999995388540664	WITHOUT_CLASSIFICATION	4.611459335093984E-7	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999927557688121	WITHOUT_CLASSIFICATION	7.244231187852427E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999976397021603	WITHOUT_CLASSIFICATION	2.3602978396485214E-6	DEFECT
// check the value we are plotting...	WITHOUT_CLASSIFICATION	0.9999920870509702	WITHOUT_CLASSIFICATION	7.912949029745286E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999671603461217	WITHOUT_CLASSIFICATION	3.283965387835555E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.999991314431399	WITHOUT_CLASSIFICATION	8.68556860111774E-6	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999959375959581	WITHOUT_CLASSIFICATION	4.0624040419817866E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999971730448143	WITHOUT_CLASSIFICATION	2.8269551856763636E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999971730448143	WITHOUT_CLASSIFICATION	2.8269551856763636E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999943887217	WITHOUT_CLASSIFICATION	5.6112783394506356E-9	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999943887217	WITHOUT_CLASSIFICATION	5.6112783394506356E-9	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999871825101485	WITHOUT_CLASSIFICATION	1.2817489851440606E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999974327979345	WITHOUT_CLASSIFICATION	2.567202065496435E-6	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999993883436263	WITHOUT_CLASSIFICATION	6.116563736422363E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999111972514	WITHOUT_CLASSIFICATION	8.880274859723129E-8	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999998124355892	WITHOUT_CLASSIFICATION	1.8756441089252153E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999996376893211	WITHOUT_CLASSIFICATION	3.623106788607906E-7	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999687554208289	WITHOUT_CLASSIFICATION	3.124457917116257E-5	DEFECT
// defensive check	WITHOUT_CLASSIFICATION	0.9999998012651151	WITHOUT_CLASSIFICATION	1.9873488485847738E-7	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.999935171418487	WITHOUT_CLASSIFICATION	6.482858151307733E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9996009155922665	WITHOUT_CLASSIFICATION	3.990844077334464E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.999998477138264	WITHOUT_CLASSIFICATION	1.522861736066432E-6	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9992356601132094	WITHOUT_CLASSIFICATION	7.643398867906526E-4	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.999935171418487	WITHOUT_CLASSIFICATION	6.482858151307733E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9996009155922665	WITHOUT_CLASSIFICATION	3.990844077334464E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.999998477138264	WITHOUT_CLASSIFICATION	1.522861736066432E-6	DEFECT
// let the superclass handle it...	WITHOUT_CLASSIFICATION	0.999994359521463	WITHOUT_CLASSIFICATION	5.640478536958884E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999988797993476	WITHOUT_CLASSIFICATION	1.1202006524097195E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999988797993476	WITHOUT_CLASSIFICATION	1.1202006524097195E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999927557688121	WITHOUT_CLASSIFICATION	7.244231187852427E-6	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999927557688121	WITHOUT_CLASSIFICATION	7.244231187852427E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999965924996667	WITHOUT_CLASSIFICATION	3.4075003334328586E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999965924996667	WITHOUT_CLASSIFICATION	3.4075003334328586E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953747617119	WITHOUT_CLASSIFICATION	4.625238288133324E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953747617119	WITHOUT_CLASSIFICATION	4.625238288133324E-6	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.999999917853762	WITHOUT_CLASSIFICATION	8.214623807420413E-8	DEFECT
// standard deviation lines	WITHOUT_CLASSIFICATION	0.999999917853762	WITHOUT_CLASSIFICATION	8.214623807420413E-8	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999567393919	WITHOUT_CLASSIFICATION	4.326060816766125E-8	DEFECT
// value 0	WITHOUT_CLASSIFICATION	0.9999976167269513	WITHOUT_CLASSIFICATION	2.3832730486820887E-6	DEFECT
// get the clipping values...	WITHOUT_CLASSIFICATION	0.9999986515182671	WITHOUT_CLASSIFICATION	1.3484817329979932E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999980088390442	WITHOUT_CLASSIFICATION	1.9911609558665846E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999980088390442	WITHOUT_CLASSIFICATION	1.9911609558665846E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.999991314431399	WITHOUT_CLASSIFICATION	8.68556860111774E-6	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.999998477138264	WITHOUT_CLASSIFICATION	1.522861736066432E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999988797993476	WITHOUT_CLASSIFICATION	1.1202006524097195E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999988797993476	WITHOUT_CLASSIFICATION	1.1202006524097195E-5	DEFECT
// cases 5, 6, 7 and 8	WITHOUT_CLASSIFICATION	0.9999927557688121	WITHOUT_CLASSIFICATION	7.244231187852427E-6	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999965924996667	WITHOUT_CLASSIFICATION	3.4075003334328586E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953747617119	WITHOUT_CLASSIFICATION	4.625238288133324E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999997924858504	WITHOUT_CLASSIFICATION	2.075141496163639E-7	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999958551698763	WITHOUT_CLASSIFICATION	4.144830123727768E-6	DEFECT
// DRAW THE BARS...	WITHOUT_CLASSIFICATION	0.9999257580065081	WITHOUT_CLASSIFICATION	7.424199349199577E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999527996375367	WITHOUT_CLASSIFICATION	4.720036246338537E-5	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999968081322829	WITHOUT_CLASSIFICATION	3.1918677170846537E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999970230667009	WITHOUT_CLASSIFICATION	2.9769332991197912E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997605145019263	WITHOUT_CLASSIFICATION	2.3948549807370064E-4	DEFECT
// X	WITHOUT_CLASSIFICATION	0.9999091154841984	WITHOUT_CLASSIFICATION	9.088451580156297E-5	DEFECT
// Y	WITHOUT_CLASSIFICATION	0.9999964808921206	WITHOUT_CLASSIFICATION	3.519107879428297E-6	DEFECT
// subtitle 1 is the legend	WITHOUT_CLASSIFICATION	0.9999868924892943	WITHOUT_CLASSIFICATION	1.3107510705680679E-5	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999984697795774	WITHOUT_CLASSIFICATION	1.530220422582565E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.999991314431399	WITHOUT_CLASSIFICATION	8.68556860111774E-6	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.999935171418487	WITHOUT_CLASSIFICATION	6.482858151307733E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9996009155922665	WITHOUT_CLASSIFICATION	3.990844077334464E-4	DEFECT
// cases 1, 2, 3 and 4	WITHOUT_CLASSIFICATION	0.999998477138264	WITHOUT_CLASSIFICATION	1.522861736066432E-6	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999988797993476	WITHOUT_CLASSIFICATION	1.1202006524097195E-5	DEFECT
// cases 9, 10, 11 and 12	WITHOUT_CLASSIFICATION	0.9999965924996667	WITHOUT_CLASSIFICATION	3.4075003334328586E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953747617119	WITHOUT_CLASSIFICATION	4.625238288133324E-6	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953747617119	WITHOUT_CLASSIFICATION	4.625238288133324E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999527996375367	WITHOUT_CLASSIFICATION	4.720036246338537E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999527996375367	WITHOUT_CLASSIFICATION	4.720036246338537E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997605145019263	WITHOUT_CLASSIFICATION	2.3948549807370064E-4	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997605145019263	WITHOUT_CLASSIFICATION	2.3948549807370064E-4	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999992982392265	WITHOUT_CLASSIFICATION	7.01760773468627E-7	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999812358043577	WITHOUT_CLASSIFICATION	1.876419564231336E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999816988621365	WITHOUT_CLASSIFICATION	1.830113786351977E-5	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999998978986504	WITHOUT_CLASSIFICATION	1.0210134958914064E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999938515703257	WITHOUT_CLASSIFICATION	6.148429674374376E-6	DEFECT
//plotBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999739175530281	WITHOUT_CLASSIFICATION	2.6082446971904335E-5	DEFECT
// PlotOrientation.VERTICAL	WITHOUT_CLASSIFICATION	0.9999995970336729	WITHOUT_CLASSIFICATION	4.029663270817952E-7	DEFECT
// calculate the bar width	WITHOUT_CLASSIFICATION	0.9999984697795774	WITHOUT_CLASSIFICATION	1.530220422582565E-6	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999995388540664	WITHOUT_CLASSIFICATION	4.611459335093984E-7	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999995388540664	WITHOUT_CLASSIFICATION	4.611459335093984E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999980088390442	WITHOUT_CLASSIFICATION	1.9911609558665846E-6	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999980088390442	WITHOUT_CLASSIFICATION	1.9911609558665846E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// the bar is not visible	WITHOUT_CLASSIFICATION	0.9999671603461217	WITHOUT_CLASSIFICATION	3.283965387835555E-5	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.999991314431399	WITHOUT_CLASSIFICATION	8.68556860111774E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999687554208289	WITHOUT_CLASSIFICATION	3.124457917116257E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999687554208289	WITHOUT_CLASSIFICATION	3.124457917116257E-5	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999687554208289	WITHOUT_CLASSIFICATION	3.124457917116257E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999988797993476	WITHOUT_CLASSIFICATION	1.1202006524097195E-5	DEFECT
// bar is not visible	WITHOUT_CLASSIFICATION	0.999988797993476	WITHOUT_CLASSIFICATION	1.1202006524097195E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997605145019263	WITHOUT_CLASSIFICATION	2.3948549807370064E-4	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999812358043577	WITHOUT_CLASSIFICATION	1.876419564231336E-5	DEFECT
// calculate bar width...	WITHOUT_CLASSIFICATION	0.9999816988621365	WITHOUT_CLASSIFICATION	1.830113786351977E-5	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999894768473	WITHOUT_CLASSIFICATION	1.052315265599985E-8	DEFECT
// do nothing if item is not visible or null	WITHOUT_CLASSIFICATION	0.9999773863852026	WITHOUT_CLASSIFICATION	2.2613614797357173E-5	DEFECT
// 100 percent, so it will not apply unless changed	WITHOUT_CLASSIFICATION	0.999998569385505	WITHOUT_CLASSIFICATION	1.4306144949806439E-6	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9998009538573596	WITHOUT_CLASSIFICATION	1.990461426403618E-4	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9434868007156362	WITHOUT_CLASSIFICATION	0.05651319928436393	DEFECT
// add an item entity, if this information is being collected	WITHOUT_CLASSIFICATION	0.9999995388540664	WITHOUT_CLASSIFICATION	4.611459335093984E-7	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999907032881535	WITHOUT_CLASSIFICATION	9.296711846552585E-6	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999593596507309	WITHOUT_CLASSIFICATION	4.064034926907433E-5	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999593596507309	WITHOUT_CLASSIFICATION	4.064034926907433E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999980341829301	WITHOUT_CLASSIFICATION	1.965817069886998E-6	DEFECT
// draw the item labels if there are any...	WITHOUT_CLASSIFICATION	0.9999812358043577	WITHOUT_CLASSIFICATION	1.876419564231336E-5	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995411005432	WITHOUT_CLASSIFICATION	4.5889945683252687E-7	DEFECT
// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar	WITHOUT_CLASSIFICATION	0.9999968257070014	WITHOUT_CLASSIFICATION	3.174292998473473E-6	DEFECT
// switch x and y	WITHOUT_CLASSIFICATION	0.9999994587670771	WITHOUT_CLASSIFICATION	5.412329228311108E-7	DEFECT
// or: x1s + 2*(x1-x1s)	WITHOUT_CLASSIFICATION	0.9999699358966967	WITHOUT_CLASSIFICATION	3.0064103303337322E-5	DEFECT
// or: x0s + 2*(x0-x0s)	WITHOUT_CLASSIFICATION	0.9999605353234681	WITHOUT_CLASSIFICATION	3.9464676531863666E-5	DEFECT
// extend x0's flat bar	WITHOUT_CLASSIFICATION	0.9999984387544416	WITHOUT_CLASSIFICATION	1.561245558305005E-6	DEFECT
// upright bar	WITHOUT_CLASSIFICATION	0.9999994099751196	WITHOUT_CLASSIFICATION	5.900248804844854E-7	DEFECT
// x1's flat bar	WITHOUT_CLASSIFICATION	0.9999971746829608	WITHOUT_CLASSIFICATION	2.8253170392186937E-6	DEFECT
//standard deviation lines	WITHOUT_CLASSIFICATION	0.9999998508012028	WITHOUT_CLASSIFICATION	1.4919879718753756E-7	DEFECT
//// OUTLINE PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992827737295	WITHOUT_CLASSIFICATION	7.172262704315196E-7	DEFECT
//plotOutlinePaint;	WITHOUT_CLASSIFICATION	0.9999968459036084	WITHOUT_CLASSIFICATION	3.1540963916128675E-6	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995411005432	WITHOUT_CLASSIFICATION	4.5889945683252687E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995411005432	WITHOUT_CLASSIFICATION	4.5889945683252687E-7	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999980341829301	WITHOUT_CLASSIFICATION	1.965817069886998E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999990836214665	WITHOUT_CLASSIFICATION	9.163785335957691E-7	DEFECT
// BAR Y	WITHOUT_CLASSIFICATION	0.999935171418487	WITHOUT_CLASSIFICATION	6.482858151307733E-5	DEFECT
// BAR X	WITHOUT_CLASSIFICATION	0.9996009155922665	WITHOUT_CLASSIFICATION	3.990844077334464E-4	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999968081322829	WITHOUT_CLASSIFICATION	3.1918677170846537E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999970230667009	WITHOUT_CLASSIFICATION	2.9769332991197912E-6	DEFECT
// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour	WITHOUT_CLASSIFICATION	0.9999907497427953	WITHOUT_CLASSIFICATION	9.250257204554875E-6	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999544952027783	WITHOUT_CLASSIFICATION	4.550479722162655E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999742510123296	WITHOUT_CLASSIFICATION	2.5748987670387768E-5	DEFECT
// there are no fields to check	WITHOUT_CLASSIFICATION	0.9999997668128476	WITHOUT_CLASSIFICATION	2.3318715231073311E-7	DEFECT
/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */	WITHOUT_CLASSIFICATION	0.9999977066617833	WITHOUT_CLASSIFICATION	2.2933382166295287E-6	DEFECT
//// PAINT /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999980267042541	WITHOUT_CLASSIFICATION	1.9732957459309476E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8725743223340512	WITHOUT_CLASSIFICATION	0.12742567766594878	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5150842380195266	WITHOUT_CLASSIFICATION	0.4849157619804733	DEFECT
//// FILL PAINT /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999982080209131	WITHOUT_CLASSIFICATION	1.7919790869005172E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.999962634173467	WITHOUT_CLASSIFICATION	3.736582653298836E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999882560632866	WITHOUT_CLASSIFICATION	1.1743936713502189E-5	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999959375959581	WITHOUT_CLASSIFICATION	4.0624040419817866E-6	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999871825101485	WITHOUT_CLASSIFICATION	1.2817489851440606E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953747617119	WITHOUT_CLASSIFICATION	4.625238288133324E-6	DEFECT
// FIXME: add setSeriesPaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.8725743223340512	WITHOUT_CLASSIFICATION	0.12742567766594878	DEFECT
// ITEM LABELS VISIBLE	WITHOUT_CLASSIFICATION	0.9999971852980089	WITHOUT_CLASSIFICATION	2.814701991181273E-6	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.774973669956987	WITHOUT_CLASSIFICATION	0.22502633004301303	DEFECT
//// STROKE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999986591613985	WITHOUT_CLASSIFICATION	1.3408386015427443E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7178049333935285	DEFECT	0.2821950666064717	WITHOUT_CLASSIFICATION
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9381151214151838	DEFECT	0.06188487858481621	WITHOUT_CLASSIFICATION
//// OUTLINE STROKE ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997375663732	WITHOUT_CLASSIFICATION	2.6243362681091935E-7	DEFECT
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6028040470292758	DEFECT	0.39719595297072413	WITHOUT_CLASSIFICATION
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.8603860737514818	DEFECT	0.1396139262485183	WITHOUT_CLASSIFICATION
//// SHAPE /////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999948349018553	WITHOUT_CLASSIFICATION	5.165098144736708E-6	DEFECT
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9664990945722055	WITHOUT_CLASSIFICATION	0.03350090542779451	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.6868038028841122	WITHOUT_CLASSIFICATION	0.31319619711588775	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999571907933	WITHOUT_CLASSIFICATION	4.2809206635669027E-8	DEFECT
// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)	WITHOUT_CLASSIFICATION	0.9977129464695949	WITHOUT_CLASSIFICATION	0.002287053530405174	DEFECT
// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?	WITHOUT_CLASSIFICATION	0.9853488305169246	WITHOUT_CLASSIFICATION	0.014651169483075491	DEFECT
//// ITEM LABEL FONT  //////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999961191654695	WITHOUT_CLASSIFICATION	3.880834530502668E-6	DEFECT
// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9871192352248785	WITHOUT_CLASSIFICATION	0.012880764775121328	DEFECT
// FIXME: add setBaseItemLabelFont(Font, boolean) ?	WITHOUT_CLASSIFICATION	0.9074882546330509	WITHOUT_CLASSIFICATION	0.09251174536694905	DEFECT
//// ITEM LABEL PAINT  /////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999951654162416	WITHOUT_CLASSIFICATION	4.83458375838804E-6	DEFECT
// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9880890642409881	WITHOUT_CLASSIFICATION	0.01191093575901188	DEFECT
// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?	WITHOUT_CLASSIFICATION	0.9383470398402303	WITHOUT_CLASSIFICATION	0.06165296015976967	DEFECT
// ITEM URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999966337824389	WITHOUT_CLASSIFICATION	3.366217561130291E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999972980291	WITHOUT_CLASSIFICATION	2.701970766816274E-9	DEFECT
/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/	WITHOUT_CLASSIFICATION	0.999996378090609	WITHOUT_CLASSIFICATION	3.6219093908121004E-6	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999999617966492	WITHOUT_CLASSIFICATION	3.820335091248056E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999571907933	WITHOUT_CLASSIFICATION	4.2809206635669027E-8	DEFECT
// nothing is drawn for null...	WITHOUT_CLASSIFICATION	0.9996945312824528	WITHOUT_CLASSIFICATION	3.054687175472932E-4	DEFECT
// current data point...	WITHOUT_CLASSIFICATION	0.9999593596507309	WITHOUT_CLASSIFICATION	4.064034926907433E-5	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999980341829301	WITHOUT_CLASSIFICATION	1.965817069886998E-6	DEFECT
// previous data point...	WITHOUT_CLASSIFICATION	0.9999980341829301	WITHOUT_CLASSIFICATION	1.965817069886998E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999990836214665	WITHOUT_CLASSIFICATION	9.163785335957691E-7	DEFECT
// submit the current data point as a crosshair candidate	WITHOUT_CLASSIFICATION	0.9999980088390442	WITHOUT_CLASSIFICATION	1.9911609558665846E-6	DEFECT
// fill background...	WITHOUT_CLASSIFICATION	0.9999513108290679	WITHOUT_CLASSIFICATION	4.868917093204943E-5	DEFECT
// draw background image, if there is one...	WITHOUT_CLASSIFICATION	0.9999985487650137	WITHOUT_CLASSIFICATION	1.451234986311739E-6	DEFECT
// put an outline around the data area...	WITHOUT_CLASSIFICATION	0.9999976397021603	WITHOUT_CLASSIFICATION	2.3602978396485214E-6	DEFECT
// draw the bar...	WITHOUT_CLASSIFICATION	0.999991314431399	WITHOUT_CLASSIFICATION	8.68556860111774E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999527996375367	WITHOUT_CLASSIFICATION	4.720036246338537E-5	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997605145019263	WITHOUT_CLASSIFICATION	2.3948549807370064E-4	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999857383788	WITHOUT_CLASSIFICATION	1.4261621193984285E-8	DEFECT
// 100 percent, so it will not apply unless // changed	WITHOUT_CLASSIFICATION	0.9999989626251413	WITHOUT_CLASSIFICATION	1.037374858694072E-6	DEFECT
// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer	WITHOUT_CLASSIFICATION	0.9999999810171005	WITHOUT_CLASSIFICATION	1.898289951730909E-8	DEFECT
// first check the number we are plotting...	WITHOUT_CLASSIFICATION	0.9999998937818199	WITHOUT_CLASSIFICATION	1.0621818011567907E-7	DEFECT
// reset the min and max	WITHOUT_CLASSIFICATION	0.9999993923688559	WITHOUT_CLASSIFICATION	6.076311441572779E-7	DEFECT
// connect to the previous point	WITHOUT_CLASSIFICATION	0.999999606845763	WITHOUT_CLASSIFICATION	3.931542370354901E-7	DEFECT
// create a line renderer only	WITHOUT_CLASSIFICATION	0.9999904583282346	WITHOUT_CLASSIFICATION	9.541671765322265E-6	DEFECT
// higlight the background corners...	WITHOUT_CLASSIFICATION	0.999943231951766	WITHOUT_CLASSIFICATION	5.6768048233862904E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999907032881535	WITHOUT_CLASSIFICATION	9.296711846552585E-6	DEFECT
// check that a legend item needs to be displayed...	WITHOUT_CLASSIFICATION	0.9999687554208289	WITHOUT_CLASSIFICATION	3.124457917116257E-5	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953747617119	WITHOUT_CLASSIFICATION	4.625238288133324E-6	DEFECT
// Y0	WITHOUT_CLASSIFICATION	0.9999968081322829	WITHOUT_CLASSIFICATION	3.1918677170846537E-6	DEFECT
// Y1	WITHOUT_CLASSIFICATION	0.9999970230667009	WITHOUT_CLASSIFICATION	2.9769332991197912E-6	DEFECT
// nothing is drawn for null values...	WITHOUT_CLASSIFICATION	0.9997605145019263	WITHOUT_CLASSIFICATION	2.3948549807370064E-4	DEFECT
// BAR WIDTH	WITHOUT_CLASSIFICATION	0.9999544952027783	WITHOUT_CLASSIFICATION	4.550479722162655E-5	DEFECT
// BAR HEIGHT	WITHOUT_CLASSIFICATION	0.9999742510123296	WITHOUT_CLASSIFICATION	2.5748987670387768E-5	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999999541463849	WITHOUT_CLASSIFICATION	4.585361517771394E-8	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999999182312217	WITHOUT_CLASSIFICATION	8.176877821201421E-8	DEFECT
// treat the last column value as an absolute	WITHOUT_CLASSIFICATION	0.9999998318846893	WITHOUT_CLASSIFICATION	1.6811531075826067E-7	DEFECT
// only needed if calculating percentages	WITHOUT_CLASSIFICATION	0.999999959319598	WITHOUT_CLASSIFICATION	4.0680401989019713E-8	DEFECT
// calculate the box width	WITHOUT_CLASSIFICATION	0.9999989823731412	WITHOUT_CLASSIFICATION	1.0176268587884052E-6	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999996349582704	WITHOUT_CLASSIFICATION	3.6504172968487534E-7	DEFECT
// offset the start of the box if the box width is smaller than // the category width	WITHOUT_CLASSIFICATION	0.9999868440878557	WITHOUT_CLASSIFICATION	1.3155912144250473E-5	DEFECT
// draw the box...	WITHOUT_CLASSIFICATION	0.9999967419051397	WITHOUT_CLASSIFICATION	3.258094860407843E-6	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999816790176616	WITHOUT_CLASSIFICATION	1.832098233848188E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999970000110705	WITHOUT_CLASSIFICATION	2.999988929506955E-6	DEFECT
// FIXME: add setBasePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.5150842380195266	WITHOUT_CLASSIFICATION	0.4849157619804733	DEFECT
// offset the start of the boxes if the total width used is smaller // than the category width	WITHOUT_CLASSIFICATION	0.9999996349582704	WITHOUT_CLASSIFICATION	3.6504172968487534E-7	DEFECT
// draw the upper shadow...	WITHOUT_CLASSIFICATION	0.9999816790176616	WITHOUT_CLASSIFICATION	1.832098233848188E-5	DEFECT
// draw the lower shadow...	WITHOUT_CLASSIFICATION	0.9999970000110705	WITHOUT_CLASSIFICATION	2.999988929506955E-6	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9998872814375034	WITHOUT_CLASSIFICATION	1.1271856249661399E-4	DEFECT
// draw mean - SPECIAL AIMS REQUIREMENT...	WITHOUT_CLASSIFICATION	0.9999941026443429	WITHOUT_CLASSIFICATION	5.897355657184463E-6	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.999999987033755	WITHOUT_CLASSIFICATION	1.2966245099021368E-8	DEFECT
// average radius	WITHOUT_CLASSIFICATION	0.999999987033755	WITHOUT_CLASSIFICATION	1.2966245099021368E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999975886452644	WITHOUT_CLASSIFICATION	2.41135473552569E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999969846203317	WITHOUT_CLASSIFICATION	3.0153796683280634E-6	DEFECT
// draw median...	WITHOUT_CLASSIFICATION	0.9999969846203317	WITHOUT_CLASSIFICATION	3.0153796683280634E-6	DEFECT
// offset the start of the box if the box width is smaller than the // category width	WITHOUT_CLASSIFICATION	0.9999876390741185	WITHOUT_CLASSIFICATION	1.2360925881516159E-5	DEFECT
// draw the body...	WITHOUT_CLASSIFICATION	0.9999479817418118	WITHOUT_CLASSIFICATION	5.201825818810424E-5	DEFECT
// draw yOutliers...	WITHOUT_CLASSIFICATION	0.9999993154957763	WITHOUT_CLASSIFICATION	6.84504223851117E-7	DEFECT
// draw farout indicators	WITHOUT_CLASSIFICATION	0.9999982329722938	WITHOUT_CLASSIFICATION	1.7670277060485821E-6	DEFECT
// start from Y = rangeBase	WITHOUT_CLASSIFICATION	0.9999999723596246	WITHOUT_CLASSIFICATION	2.76403754408974E-8	DEFECT
// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999992836057	WITHOUT_CLASSIFICATION	7.163943680408196E-10	DEFECT
// disable visible items optimisation - it doesn't work for this // renderer...	WITHOUT_CLASSIFICATION	0.9704385335563472	WITHOUT_CLASSIFICATION	0.029561466443652637	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.99999999406664	WITHOUT_CLASSIFICATION	5.933359999945422E-9	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999331926291029	WITHOUT_CLASSIFICATION	6.680737089723132E-5	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999999566288021	WITHOUT_CLASSIFICATION	4.337119782544698E-8	DEFECT
// The first point is (x, this.baseYValue)	WITHOUT_CLASSIFICATION	0.9999990494445518	WITHOUT_CLASSIFICATION	9.505554481654933E-7	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999903794194426	WITHOUT_CLASSIFICATION	9.620580557382395E-6	DEFECT
// not just a horizontal bar but need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999999952542519	WITHOUT_CLASSIFICATION	4.745748138384032E-9	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999732495717075	WITHOUT_CLASSIFICATION	2.6750428292413867E-5	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999527996375367	WITHOUT_CLASSIFICATION	4.720036246338537E-5	DEFECT
// avoid possible sun.dc.pr.PRException: endPath: bad path	WITHOUT_CLASSIFICATION	0.9999331926291029	WITHOUT_CLASSIFICATION	6.680737089723132E-5	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999999499670092	WITHOUT_CLASSIFICATION	5.0032990654242656E-8	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.999999684427793	WITHOUT_CLASSIFICATION	3.155722070169907E-7	DEFECT
// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.	WITHOUT_CLASSIFICATION	0.9999999970898678	WITHOUT_CLASSIFICATION	2.9101322267603918E-9	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997667886439	WITHOUT_CLASSIFICATION	2.3321135620045318E-7	DEFECT
// fill the polygon	WITHOUT_CLASSIFICATION	0.9999308928403016	WITHOUT_CLASSIFICATION	6.910715969846052E-5	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.999999747969753	WITHOUT_CLASSIFICATION	2.520302469660324E-7	DEFECT
// start new area when needed (see above)	WITHOUT_CLASSIFICATION	0.9999999316801059	WITHOUT_CLASSIFICATION	6.831989406243748E-8	DEFECT
// do nothing...this is just a hook for subclasses	WITHOUT_CLASSIFICATION	0.9999980187883565	WITHOUT_CLASSIFICATION	1.9812116435794474E-6	DEFECT
// TODO getSeriesShape(n).getBounds().width / 2;	WITHOUT_CLASSIFICATION	0.9927720059058627	WITHOUT_CLASSIFICATION	0.007227994094137384	DEFECT
// TODO getSeriesShape(n).getBounds().height / 2;	WITHOUT_CLASSIFICATION	0.9827347587397324	WITHOUT_CLASSIFICATION	0.017265241260267693	DEFECT
// can't draw anything	WITHOUT_CLASSIFICATION	0.9999830829480422	WITHOUT_CLASSIFICATION	1.6917051957808936E-5	DEFECT
// draw optional guide lines	WITHOUT_CLASSIFICATION	0.9999999859518398	WITHOUT_CLASSIFICATION	1.4048160133649731E-8	DEFECT
// calculate the arrow head and draw it...	WITHOUT_CLASSIFICATION	0.9998525987512398	WITHOUT_CLASSIFICATION	1.474012487601685E-4	DEFECT
// orientation is HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999969857337885	WITHOUT_CLASSIFICATION	3.0142662114553683E-6	DEFECT
//labelLinkStyle;	WITHOUT_CLASSIFICATION	0.9999966708347818	WITHOUT_CLASSIFICATION	3.3291652181539974E-6	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999993612196533	WITHOUT_CLASSIFICATION	6.387803466669755E-7	DEFECT
// check if either series is a degenerate case (i.e. less than 2 points)	WITHOUT_CLASSIFICATION	0.9999995026729697	WITHOUT_CLASSIFICATION	4.973270303263397E-7	DEFECT
// check if series are disjoint (i.e. domain-spans do not overlap)	WITHOUT_CLASSIFICATION	0.9999999848375355	WITHOUT_CLASSIFICATION	1.516246455841079E-8	DEFECT
// polygon definitions	WITHOUT_CLASSIFICATION	0.9999990685931042	WITHOUT_CLASSIFICATION	9.31406895766086E-7	DEFECT
// state	WITHOUT_CLASSIFICATION	0.9999998180619012	WITHOUT_CLASSIFICATION	1.8193809893726086E-7	DEFECT
// actual value set below	WITHOUT_CLASSIFICATION	0.9999999301205209	WITHOUT_CLASSIFICATION	6.987947911921867E-8	DEFECT
// if a subtrahend is not specified, assume it is zero	WITHOUT_CLASSIFICATION	0.9999999842778171	WITHOUT_CLASSIFICATION	1.572218291771346E-8	DEFECT
// fast-forward through leading tails	WITHOUT_CLASSIFICATION	0.9999911545587431	WITHOUT_CLASSIFICATION	8.845441257031649E-6	DEFECT
// get the x and y coordinates	WITHOUT_CLASSIFICATION	0.9999997998699925	WITHOUT_CLASSIFICATION	2.001300074599931E-7	DEFECT
// minuend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999989612963119	WITHOUT_CLASSIFICATION	1.0387036880211734E-6	DEFECT
// subtrahend needs to be fast forwarded	WITHOUT_CLASSIFICATION	0.9999991671127306	WITHOUT_CLASSIFICATION	8.328872693576066E-7	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999999684152451	WITHOUT_CLASSIFICATION	3.158475485597217E-8	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999996202691754	WITHOUT_CLASSIFICATION	3.797308246375141E-7	DEFECT
// start of algorithm	WITHOUT_CLASSIFICATION	0.9999998274541242	WITHOUT_CLASSIFICATION	1.725458758817777E-7	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9852411428153828	WITHOUT_CLASSIFICATION	0.014758857184617226	DEFECT
// deassert b_*FastForward (only matters for 1st time through loop)	WITHOUT_CLASSIFICATION	0.9999937410699279	WITHOUT_CLASSIFICATION	6.2589300722253905E-6	DEFECT
// check for intersect	WITHOUT_CLASSIFICATION	0.9999999291306576	WITHOUT_CLASSIFICATION	7.086934236875397E-8	DEFECT
// check if line segments are colinear	WITHOUT_CLASSIFICATION	0.9999998070792505	WITHOUT_CLASSIFICATION	1.929207495723187E-7	DEFECT
// compute common denominator	WITHOUT_CLASSIFICATION	0.9999994248353241	WITHOUT_CLASSIFICATION	5.751646758423478E-7	DEFECT
// compute common deltas	WITHOUT_CLASSIFICATION	0.9999995122455898	WITHOUT_CLASSIFICATION	4.87754410233447E-7	DEFECT
// compute numerators	WITHOUT_CLASSIFICATION	0.9999999767147428	WITHOUT_CLASSIFICATION	2.3285257206182873E-8	DEFECT
// check if previously colinear	WITHOUT_CLASSIFICATION	0.9999999718594232	WITHOUT_CLASSIFICATION	2.8140576741677402E-8	DEFECT
// clear colinear points and flag	WITHOUT_CLASSIFICATION	0.9999997895265921	WITHOUT_CLASSIFICATION	2.104734080206956E-7	DEFECT
// set new starting point for the polygon	WITHOUT_CLASSIFICATION	0.9999999633972138	WITHOUT_CLASSIFICATION	3.6602786187279916E-8	DEFECT
// compute slope components	WITHOUT_CLASSIFICATION	0.9999996280033513	WITHOUT_CLASSIFICATION	3.719966487105945E-7	DEFECT
// test if both grahphs have a vertical rise at the same x-value	WITHOUT_CLASSIFICATION	0.9999999379543605	WITHOUT_CLASSIFICATION	6.204563949341703E-8	DEFECT
// check if the line segments intersect	WITHOUT_CLASSIFICATION	0.9999998483530745	WITHOUT_CLASSIFICATION	1.5164692538137746E-7	DEFECT
// compute the point of intersection	WITHOUT_CLASSIFICATION	0.999999623086929	WITHOUT_CLASSIFICATION	3.769130709055161E-7	DEFECT
// advance minuend and subtrahend to intesect	WITHOUT_CLASSIFICATION	0.9999997695332788	WITHOUT_CLASSIFICATION	2.304667211952432E-7	DEFECT
// add intersection point to the polygon	WITHOUT_CLASSIFICATION	0.9999987162954623	WITHOUT_CLASSIFICATION	1.2837045376095329E-6	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999998500434639	WITHOUT_CLASSIFICATION	1.4995653611315757E-7	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.999992906945248	WITHOUT_CLASSIFICATION	7.09305475191032E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999732495717075	WITHOUT_CLASSIFICATION	2.6750428292413867E-5	DEFECT
// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)	WITHOUT_CLASSIFICATION	0.9999901288926928	WITHOUT_CLASSIFICATION	9.871107307267968E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999990836214665	WITHOUT_CLASSIFICATION	9.163785335957691E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.999999747969753	WITHOUT_CLASSIFICATION	2.520302469660324E-7	DEFECT
// project onto subtrahend	WITHOUT_CLASSIFICATION	0.9999999684152451	WITHOUT_CLASSIFICATION	3.158475485597217E-8	DEFECT
// project onto minuend	WITHOUT_CLASSIFICATION	0.9999996202691754	WITHOUT_CLASSIFICATION	3.797308246375141E-7	DEFECT
// add the subtrahend's points to the polygon in reverse	WITHOUT_CLASSIFICATION	0.9999998500434639	WITHOUT_CLASSIFICATION	1.4995653611315757E-7	DEFECT
// create an actual polygon	WITHOUT_CLASSIFICATION	0.999992906945248	WITHOUT_CLASSIFICATION	7.09305475191032E-6	DEFECT
// set the maxY and minY values to intersect y-value	WITHOUT_CLASSIFICATION	0.9999983872142847	WITHOUT_CLASSIFICATION	1.6127857153065552E-6	DEFECT
// add interection point to new polygon	WITHOUT_CLASSIFICATION	0.9999925912334351	WITHOUT_CLASSIFICATION	7.408766564974014E-6	DEFECT
// advance the minuend if needed	WITHOUT_CLASSIFICATION	0.9999999654595441	WITHOUT_CLASSIFICATION	3.4540455921301577E-8	DEFECT
// advance the subtrahend if needed	WITHOUT_CLASSIFICATION	0.99999999585998	WITHOUT_CLASSIFICATION	4.1400199080574786E-9	DEFECT
// check if the final polygon needs to be clipped	WITHOUT_CLASSIFICATION	0.9999949058697246	WITHOUT_CLASSIFICATION	5.094130275371672E-6	DEFECT
// consider last point of minuend and subtrahend for determining // positivity	WITHOUT_CLASSIFICATION	0.9999997292747584	WITHOUT_CLASSIFICATION	2.707252415197687E-7	DEFECT
// add the last point of the minuned and subtrahend	WITHOUT_CLASSIFICATION	0.9999999659507285	WITHOUT_CLASSIFICATION	3.404927155534392E-8	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999984876885633	WITHOUT_CLASSIFICATION	1.512311436796636E-6	DEFECT
//// VISIBLE //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999925905976013	WITHOUT_CLASSIFICATION	7.40940239873451E-6	DEFECT
//// PAINT ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999980267042541	WITHOUT_CLASSIFICATION	1.9732957459309476E-6	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999723756837	WITHOUT_CLASSIFICATION	2.7624316308315686E-8	DEFECT
// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?	WITHOUT_CLASSIFICATION	0.9434868007156362	WITHOUT_CLASSIFICATION	0.05651319928436393	DEFECT
// FIXME: add setBaseOutlinePaint(Paint, boolean)?	WITHOUT_CLASSIFICATION	0.774973669956987	WITHOUT_CLASSIFICATION	0.22502633004301303	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999989625766355	WITHOUT_CLASSIFICATION	1.0374233645785208E-6	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999832007465	WITHOUT_CLASSIFICATION	1.6799253615431986E-8	DEFECT
//// OUTLINE PAINT ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992827737295	WITHOUT_CLASSIFICATION	7.172262704315196E-7	DEFECT
// bad axisNumber	WITHOUT_CLASSIFICATION	0.9999999356736576	WITHOUT_CLASSIFICATION	6.4326342267919E-8	DEFECT
// a Range object cannot be equal to a different object type	WITHOUT_CLASSIFICATION	0.999989439010259	WITHOUT_CLASSIFICATION	1.0560989740914858E-5	DEFECT
// POSITIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.999962634173467	WITHOUT_CLASSIFICATION	3.736582653298836E-5	DEFECT
// NEGATIVE ITEM LABEL POSITION...	WITHOUT_CLASSIFICATION	0.9999882560632866	WITHOUT_CLASSIFICATION	1.1743936713502189E-5	DEFECT
//// TOOL TIP GENERATOR ///////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999988709440223	WITHOUT_CLASSIFICATION	1.1290559776994689E-5	DEFECT
//// URL GENERATOR ////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999964008763531	WITHOUT_CLASSIFICATION	3.5991236468200583E-6	DEFECT
// FIXME: add setSeriesStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.7178049333935285	DEFECT	0.2821950666064717	WITHOUT_CLASSIFICATION
// FIXME: add setBaseStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.9381151214151838	DEFECT	0.06188487858481621	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.6028040470292758	DEFECT	0.39719595297072413	WITHOUT_CLASSIFICATION
// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?	WITHOUT_CLASSIFICATION	0.8603860737514818	DEFECT	0.1396139262485183	WITHOUT_CLASSIFICATION
// FIXME: add setSeriesShape(int, Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.9664990945722055	WITHOUT_CLASSIFICATION	0.03350090542779451	DEFECT
// FIXME: add setBaseShape(Shape, boolean) ?	WITHOUT_CLASSIFICATION	0.6868038028841122	WITHOUT_CLASSIFICATION	0.31319619711588775	DEFECT
// allowDuplicateXValues	WITHOUT_CLASSIFICATION	0.9999999643314955	WITHOUT_CLASSIFICATION	3.566850439633395E-8	DEFECT
//// STROKE ///////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999986591613985	WITHOUT_CLASSIFICATION	1.3408386015427443E-6	DEFECT
//// OUTLINE STROKE ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997375663732	WITHOUT_CLASSIFICATION	2.6243362681091935E-7	DEFECT
//// SHAPE ////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999948349018553	WITHOUT_CLASSIFICATION	5.165098144736708E-6	DEFECT
//// LEGEND ITEMS /////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999990180033064	WITHOUT_CLASSIFICATION	9.819966936156153E-7	DEFECT
//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999973167953597	WITHOUT_CLASSIFICATION	2.683204640345435E-6	DEFECT
//// ITEM LABEL GENERATOR /////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999959513611899	WITHOUT_CLASSIFICATION	4.048638810164773E-6	DEFECT
// FIXME:	WITHOUT_CLASSIFICATION	0.6733099894849456	WITHOUT_CLASSIFICATION	0.32669001051505436	DEFECT
//// ITEM LABEL FONT ///////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999973777636847	WITHOUT_CLASSIFICATION	2.62223631525891E-6	DEFECT
//// ANNOTATIONS //////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991589261215	WITHOUT_CLASSIFICATION	8.41073878563668E-7	DEFECT
//// DRAWING //////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999997302396107	WITHOUT_CLASSIFICATION	2.6976038930212383E-6	DEFECT
// DEPRECATED METHODS	WITHOUT_CLASSIFICATION	0.9999995296604577	WITHOUT_CLASSIFICATION	4.7033954225689365E-7	DEFECT
// need to handle cluster centering as a special case	WITHOUT_CLASSIFICATION	0.9999999809323157	WITHOUT_CLASSIFICATION	1.9067684332506467E-8	DEFECT
// may be negative	WITHOUT_CLASSIFICATION	0.9999989717989664	WITHOUT_CLASSIFICATION	1.028201033574894E-6	DEFECT
/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */	WITHOUT_CLASSIFICATION	0.9999985466740364	WITHOUT_CLASSIFICATION	1.4533259635436067E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999810846812403	WITHOUT_CLASSIFICATION	1.891531875965499E-5	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987313898762	WITHOUT_CLASSIFICATION	1.2686101238737316E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999732495717075	WITHOUT_CLASSIFICATION	2.6750428292413867E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999907032881535	WITHOUT_CLASSIFICATION	9.296711846552585E-6	DEFECT
// Create a new Area for the series	WITHOUT_CLASSIFICATION	0.9999999566288021	WITHOUT_CLASSIFICATION	4.337119782544698E-8	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999883432971	WITHOUT_CLASSIFICATION	1.1656702896219108E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999992038637835	WITHOUT_CLASSIFICATION	7.961362165694782E-7	DEFECT
// first pass draws the shading	WITHOUT_CLASSIFICATION	0.9999995343299318	WITHOUT_CLASSIFICATION	4.656700682763232E-7	DEFECT
// last item in series, draw the lot... // set up the alpha-transparency...	WITHOUT_CLASSIFICATION	0.9999503872249511	WITHOUT_CLASSIFICATION	4.961277504894875E-5	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999931763701684	WITHOUT_CLASSIFICATION	6.823629831591422E-6	DEFECT
// return straight away if the item is not visible	WITHOUT_CLASSIFICATION	0.9999996497972493	WITHOUT_CLASSIFICATION	3.5020275069547776E-7	DEFECT
// add an entity if this info is being collected	WITHOUT_CLASSIFICATION	0.9999956786186537	WITHOUT_CLASSIFICATION	4.321381346322065E-6	DEFECT
//  Get height adjustment based on stack and translate to Java2D values	WITHOUT_CLASSIFICATION	0.9999998153132476	WITHOUT_CLASSIFICATION	1.8468675242137667E-7	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999902604681435	WITHOUT_CLASSIFICATION	9.739531856480087E-6	DEFECT
//  On first pass render the areas, line and outlines	WITHOUT_CLASSIFICATION	0.9999941045310858	WITHOUT_CLASSIFICATION	5.895468914103402E-6	DEFECT
// start from previous height (ph1)	WITHOUT_CLASSIFICATION	0.9999999191957067	WITHOUT_CLASSIFICATION	8.080429330859074E-8	DEFECT
// should not get here	WITHOUT_CLASSIFICATION	0.9999930407421481	WITHOUT_CLASSIFICATION	6.95925785190919E-6	DEFECT
// use item paint for fills by default	WITHOUT_CLASSIFICATION	0.9999998802751197	WITHOUT_CLASSIFICATION	1.1972488034419637E-7	DEFECT
// === DEPRECATED CODE ===	WITHOUT_CLASSIFICATION	0.9999996860592812	WITHOUT_CLASSIFICATION	3.13940718809318E-7	DEFECT
// LINES VISIBLE	WITHOUT_CLASSIFICATION	0.9999980099026833	WITHOUT_CLASSIFICATION	1.990097316735558E-6	DEFECT
// SHAPES VISIBLE	WITHOUT_CLASSIFICATION	0.9999955702971273	WITHOUT_CLASSIFICATION	4.4297028727364184E-6	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999807799538509	WITHOUT_CLASSIFICATION	1.9220046149101636E-5	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999907032881535	WITHOUT_CLASSIFICATION	9.296711846552585E-6	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999527996375367	WITHOUT_CLASSIFICATION	4.720036246338537E-5	DEFECT
// Get the item count for the series, so that we can know which is the // end of the series.	WITHOUT_CLASSIFICATION	0.99999999406664	WITHOUT_CLASSIFICATION	5.933359999945422E-9	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999903794194426	WITHOUT_CLASSIFICATION	9.620580557382395E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.999999684427793	WITHOUT_CLASSIFICATION	3.155722070169907E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997667886439	WITHOUT_CLASSIFICATION	2.3321135620045318E-7	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997667886439	WITHOUT_CLASSIFICATION	2.3321135620045318E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998658285139	WITHOUT_CLASSIFICATION	1.3417148611448689E-7	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999998752719105	WITHOUT_CLASSIFICATION	1.247280894301925E-7	DEFECT
// The first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999990266961969	WITHOUT_CLASSIFICATION	9.733038031713274E-7	DEFECT
//  Fill the polygon	WITHOUT_CLASSIFICATION	0.9996602132041867	WITHOUT_CLASSIFICATION	3.397867958132043E-4	DEFECT
//  Draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.9999994449270654	WITHOUT_CLASSIFICATION	5.550729345580528E-7	DEFECT
// first pass draws the background (lines, for instance)	WITHOUT_CLASSIFICATION	0.999999425341167	WITHOUT_CLASSIFICATION	5.746588330667492E-7	DEFECT
//labelLinkPaint;	WITHOUT_CLASSIFICATION	0.9999992315178601	WITHOUT_CLASSIFICATION	7.684821399812798E-7	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.999997815548061	WITHOUT_CLASSIFICATION	2.184451939018476E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987313898762	WITHOUT_CLASSIFICATION	1.2686101238737316E-6	DEFECT
// get the data points	WITHOUT_CLASSIFICATION	0.9999999573229732	WITHOUT_CLASSIFICATION	4.267702685096099E-8	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999990836214665	WITHOUT_CLASSIFICATION	9.163785335957691E-7	DEFECT
// second pass adds shapes where the items are ..	WITHOUT_CLASSIFICATION	0.9999931763701684	WITHOUT_CLASSIFICATION	6.823629831591422E-6	DEFECT
// Add points from last series to complete the base of the // polygon	WITHOUT_CLASSIFICATION	0.9999998310409274	WITHOUT_CLASSIFICATION	1.6895907268319223E-7	DEFECT
// On second pass render shapes and collect entity and tooltip // information	WITHOUT_CLASSIFICATION	0.9999741546701746	WITHOUT_CLASSIFICATION	2.5845329825485324E-5	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999992971611938	WITHOUT_CLASSIFICATION	7.028388061162865E-7	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999992093579237	WITHOUT_CLASSIFICATION	7.906420762244105E-7	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999996801566803	WITHOUT_CLASSIFICATION	3.198433196597398E-7	DEFECT
// Collect points	WITHOUT_CLASSIFICATION	0.9999997809106597	WITHOUT_CLASSIFICATION	2.1908934043671259E-7	DEFECT
// construct path	WITHOUT_CLASSIFICATION	0.999999938511878	WITHOUT_CLASSIFICATION	6.148812210254575E-8	DEFECT
// we need at least two points to draw something	WITHOUT_CLASSIFICATION	0.9999994251099839	WITHOUT_CLASSIFICATION	5.748900162700911E-7	DEFECT
// we need at least 3 points to spline. Draw simple line // for two points	WITHOUT_CLASSIFICATION	0.9999998289666328	WITHOUT_CLASSIFICATION	1.7103336719581406E-7	DEFECT
// construct spline // number of points // Newton form coefficients // x-coordinates of nodes	WITHOUT_CLASSIFICATION	0.9999999996421539	WITHOUT_CLASSIFICATION	3.5784605724135073E-10	DEFECT
// note that a[0]=a[np-1]=0	WITHOUT_CLASSIFICATION	0.9999997434148641	WITHOUT_CLASSIFICATION	2.5658513592196395E-7	DEFECT
// loop over intervals between nodes	WITHOUT_CLASSIFICATION	0.9999999405028214	WITHOUT_CLASSIFICATION	5.9497178511252805E-8	DEFECT
// we're running on JRE 1.3.1 so this is the best we have...	WITHOUT_CLASSIFICATION	0.9999966311625355	WITHOUT_CLASSIFICATION	3.3688374646059985E-6	DEFECT
// both axes	WITHOUT_CLASSIFICATION	0.9999999552079906	WITHOUT_CLASSIFICATION	4.479200950224338E-8	DEFECT
// ITEM LABEL GENERATOR	WITHOUT_CLASSIFICATION	0.9999959375959581	WITHOUT_CLASSIFICATION	4.0624040419817866E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999971730448143	WITHOUT_CLASSIFICATION	2.8269551856763636E-6	DEFECT
// return the generator for ALL series, if there is one...	WITHOUT_CLASSIFICATION	0.9999971730448143	WITHOUT_CLASSIFICATION	2.8269551856763636E-6	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999943887217	WITHOUT_CLASSIFICATION	5.6112783394506356E-9	DEFECT
// otherwise look up the generator table	WITHOUT_CLASSIFICATION	0.9999999943887217	WITHOUT_CLASSIFICATION	5.6112783394506356E-9	DEFECT
// TOOL TIP GENERATOR	WITHOUT_CLASSIFICATION	0.9999871825101485	WITHOUT_CLASSIFICATION	1.2817489851440606E-5	DEFECT
// URL GENERATOR	WITHOUT_CLASSIFICATION	0.9999974327979345	WITHOUT_CLASSIFICATION	2.567202065496435E-6	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999111972514	WITHOUT_CLASSIFICATION	8.880274859723129E-8	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999111972514	WITHOUT_CLASSIFICATION	8.880274859723129E-8	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999998124355892	WITHOUT_CLASSIFICATION	1.8756441089252153E-7	DEFECT
// now draw the outlines, if visible...	WITHOUT_CLASSIFICATION	0.9999998124355892	WITHOUT_CLASSIFICATION	1.8756441089252153E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999996376893211	WITHOUT_CLASSIFICATION	3.623106788607906E-7	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999996376893211	WITHOUT_CLASSIFICATION	3.623106788607906E-7	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9998009538573596	WITHOUT_CLASSIFICATION	1.990461426403618E-4	DEFECT
// map a key to the default group	WITHOUT_CLASSIFICATION	0.9999996309947167	WITHOUT_CLASSIFICATION	3.69005283433277E-7	DEFECT
// Add last point @ y=0 for fillPath and close path	WITHOUT_CLASSIFICATION	0.9999997102683154	WITHOUT_CLASSIFICATION	2.897316846217232E-7	DEFECT
// fill under the curve...	WITHOUT_CLASSIFICATION	0.999982582992787	WITHOUT_CLASSIFICATION	1.7417007212992688E-5	DEFECT
// then draw the line...	WITHOUT_CLASSIFICATION	0.9999811638678016	WITHOUT_CLASSIFICATION	1.8836132198350408E-5	DEFECT
// reset points vector	WITHOUT_CLASSIFICATION	0.9999999269501306	WITHOUT_CLASSIFICATION	7.304986939989611E-8	DEFECT
/*      factorization and forward substitution */	WITHOUT_CLASSIFICATION	0.9999998858020553	WITHOUT_CLASSIFICATION	1.1419794467052618E-7	DEFECT
// now draw the real shape	WITHOUT_CLASSIFICATION	0.9999999292737081	WITHOUT_CLASSIFICATION	7.072629197009801E-8	DEFECT
// should never get here	WITHOUT_CLASSIFICATION	0.9999992848300431	WITHOUT_CLASSIFICATION	7.151699569071663E-7	DEFECT
// 'plot' : just retain reference, not a deep copy	WITHOUT_CLASSIFICATION	0.9999998499129498	WITHOUT_CLASSIFICATION	1.5008705027025738E-7	DEFECT
// just the domain axis...	WITHOUT_CLASSIFICATION	0.999999959944532	WITHOUT_CLASSIFICATION	4.0055468074439784E-8	DEFECT
// just the range axis...	WITHOUT_CLASSIFICATION	0.9999999784040443	WITHOUT_CLASSIFICATION	2.1595955680857076E-8	DEFECT
// get the label position..	WITHOUT_CLASSIFICATION	0.9999975579558608	WITHOUT_CLASSIFICATION	2.442044139244253E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999907032881535	WITHOUT_CLASSIFICATION	9.296711846552585E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999990836214665	WITHOUT_CLASSIFICATION	9.163785335957691E-7	DEFECT
// collect entity and tool tip information...	WITHOUT_CLASSIFICATION	0.9999527996375367	WITHOUT_CLASSIFICATION	4.720036246338537E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999903794194426	WITHOUT_CLASSIFICATION	9.620580557382395E-6	DEFECT
// Add each point to Area (x, y)	WITHOUT_CLASSIFICATION	0.999999684427793	WITHOUT_CLASSIFICATION	3.155722070169907E-7	DEFECT
// vertical orientation	WITHOUT_CLASSIFICATION	0.9999984876885633	WITHOUT_CLASSIFICATION	1.512311436796636E-6	DEFECT
// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only	WITHOUT_CLASSIFICATION	0.9999998752719105	WITHOUT_CLASSIFICATION	1.247280894301925E-7	DEFECT
// this represents the situation // for drawing a horizontal bar.	WITHOUT_CLASSIFICATION	0.9999928537350823	WITHOUT_CLASSIFICATION	7.146264917728506E-6	DEFECT
//this handles the need to perform a 'step'.	WITHOUT_CLASSIFICATION	0.9999999927955688	WITHOUT_CLASSIFICATION	7.204431263690515E-9	DEFECT
// calculate the step point	WITHOUT_CLASSIFICATION	0.9999999510851522	WITHOUT_CLASSIFICATION	4.8914847836914675E-8	DEFECT
//this handles the need to perform a 'step'. // calculate the step point	WITHOUT_CLASSIFICATION	0.999999997218888	WITHOUT_CLASSIFICATION	2.7811120311791256E-9	DEFECT
// submit this data item as a candidate for the crosshair point	WITHOUT_CLASSIFICATION	0.9999991643083344	WITHOUT_CLASSIFICATION	8.356916656911599E-7	DEFECT
// create a new area polygon for the series	WITHOUT_CLASSIFICATION	0.9999992377655064	WITHOUT_CLASSIFICATION	7.622344935507854E-7	DEFECT
// the first point is (x, 0)	WITHOUT_CLASSIFICATION	0.9999984011164055	WITHOUT_CLASSIFICATION	1.598883594567554E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987313898762	WITHOUT_CLASSIFICATION	1.2686101238737316E-6	DEFECT
// otherwise look up the paint table	WITHOUT_CLASSIFICATION	0.9999999960500295	WITHOUT_CLASSIFICATION	3.949970429873469E-9	DEFECT
// SHAPES FILLED	WITHOUT_CLASSIFICATION	0.9999807799538509	WITHOUT_CLASSIFICATION	1.9220046149101636E-5	DEFECT
// return the overall setting, if there is one...	WITHOUT_CLASSIFICATION	0.9999999409676029	WITHOUT_CLASSIFICATION	5.9032396942094994E-8	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953747617119	WITHOUT_CLASSIFICATION	4.625238288133324E-6	DEFECT
// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {	WITHOUT_CLASSIFICATION	0.9999998978986504	WITHOUT_CLASSIFICATION	1.0210134958914064E-7	DEFECT
// no fields to compute...	WITHOUT_CLASSIFICATION	0.9999938515703257	WITHOUT_CLASSIFICATION	6.148429674374376E-6	DEFECT
// Add the last point (x,0)	WITHOUT_CLASSIFICATION	0.9999997667886439	WITHOUT_CLASSIFICATION	2.3321135620045318E-7	DEFECT
// draw an outline around the Area.	WITHOUT_CLASSIFICATION	0.999999747969753	WITHOUT_CLASSIFICATION	2.520302469660324E-7	DEFECT
// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999832007465	WITHOUT_CLASSIFICATION	1.6799253615431986E-8	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.999999979010635	WITHOUT_CLASSIFICATION	2.0989365088866337E-8	DEFECT
// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart	WITHOUT_CLASSIFICATION	0.9996322495717028	WITHOUT_CLASSIFICATION	3.6775042829724876E-4	DEFECT
// no change	WITHOUT_CLASSIFICATION	0.9999999917023374	WITHOUT_CLASSIFICATION	8.297662599854361E-9	DEFECT
// here we use BooleanUtilities to remain compatible with JDKs < 1.4	WITHOUT_CLASSIFICATION	0.9999998257049758	WITHOUT_CLASSIFICATION	1.7429502410269488E-7	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999999292067412	WITHOUT_CLASSIFICATION	7.079325879724565E-8	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999990142239815	WITHOUT_CLASSIFICATION	9.857760185768934E-7	DEFECT
// only draw if we have good values	WITHOUT_CLASSIFICATION	0.999997815548061	WITHOUT_CLASSIFICATION	2.184451939018476E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987313898762	WITHOUT_CLASSIFICATION	1.2686101238737316E-6	DEFECT
// draw the item label if there is one...	WITHOUT_CLASSIFICATION	0.9999990836214665	WITHOUT_CLASSIFICATION	9.163785335957691E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999857383788	WITHOUT_CLASSIFICATION	1.4261621193984285E-8	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999903794194426	WITHOUT_CLASSIFICATION	9.620580557382395E-6	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999992971611938	WITHOUT_CLASSIFICATION	7.028388061162865E-7	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999996801566803	WITHOUT_CLASSIFICATION	3.198433196597398E-7	DEFECT
// we are starting a new series path	WITHOUT_CLASSIFICATION	0.9999998725812431	WITHOUT_CLASSIFICATION	1.2741875695179872E-7	DEFECT
// only draw a line if the gap between the current and // previous data point is within the threshold	WITHOUT_CLASSIFICATION	0.9999998548117773	WITHOUT_CLASSIFICATION	1.4518822270301207E-7	DEFECT
// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...	WITHOUT_CLASSIFICATION	0.9999585780661429	WITHOUT_CLASSIFICATION	4.142193385712827E-5	DEFECT
// this method must be overridden if you want to display images	WITHOUT_CLASSIFICATION	0.999999932057006	WITHOUT_CLASSIFICATION	6.794299404412443E-8	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999987811233779	WITHOUT_CLASSIFICATION	1.218876622059985E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999998004165929	WITHOUT_CLASSIFICATION	1.9958340710163346E-7	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999982086233303	WITHOUT_CLASSIFICATION	1.7913766697132785E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999732495717075	WITHOUT_CLASSIFICATION	2.6750428292413867E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999732495717075	WITHOUT_CLASSIFICATION	2.6750428292413867E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999987811233779	WITHOUT_CLASSIFICATION	1.218876622059985E-6	DEFECT
//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999972529428514	WITHOUT_CLASSIFICATION	2.74705714875587E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999998004165929	WITHOUT_CLASSIFICATION	1.9958340710163346E-7	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999982086233303	WITHOUT_CLASSIFICATION	1.7913766697132785E-6	DEFECT
// draw median	WITHOUT_CLASSIFICATION	0.999999677128368	WITHOUT_CLASSIFICATION	3.228716319500674E-7	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999999026118941	WITHOUT_CLASSIFICATION	9.738810588247967E-8	DEFECT
// draw average - SPECIAL AIMS REQUIREMENT	WITHOUT_CLASSIFICATION	0.9999999026118941	WITHOUT_CLASSIFICATION	9.738810588247967E-8	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999271388643344	WITHOUT_CLASSIFICATION	7.286113566552054E-5	DEFECT
// yOutliers can be null, but we'd prefer it to be an empty list in // that case...	WITHOUT_CLASSIFICATION	0.9999722461245905	WITHOUT_CLASSIFICATION	2.775387540965003E-5	DEFECT
/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */	WITHOUT_CLASSIFICATION	0.9999999867192811	WITHOUT_CLASSIFICATION	1.328071880517005E-8	DEFECT
// draw yOutliers	WITHOUT_CLASSIFICATION	0.9999999519696262	WITHOUT_CLASSIFICATION	4.8030373800114995E-8	DEFECT
// draw outliers	WITHOUT_CLASSIFICATION	0.9999999706393657	WITHOUT_CLASSIFICATION	2.9360634324057832E-8	DEFECT
// draw farout	WITHOUT_CLASSIFICATION	0.9999981711205569	WITHOUT_CLASSIFICATION	1.8288794432111086E-6	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999810846812403	WITHOUT_CLASSIFICATION	1.891531875965499E-5	DEFECT
// get the data point...	WITHOUT_CLASSIFICATION	0.9999810846812403	WITHOUT_CLASSIFICATION	1.891531875965499E-5	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999732495717075	WITHOUT_CLASSIFICATION	2.6750428292413867E-5	DEFECT
// get the previous data point...	WITHOUT_CLASSIFICATION	0.9999903794194426	WITHOUT_CLASSIFICATION	9.620580557382395E-6	DEFECT
// here we check that the average marker will in fact be visible // before drawing it...	WITHOUT_CLASSIFICATION	0.9999271388643344	WITHOUT_CLASSIFICATION	7.286113566552054E-5	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999998745530203	WITHOUT_CLASSIFICATION	1.2544697969615265E-6	DEFECT
// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made	WITHOUT_CLASSIFICATION	0.9999999980887301	WITHOUT_CLASSIFICATION	1.9112699611089415E-9	DEFECT
// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.	WITHOUT_CLASSIFICATION	0.9999999998691869	WITHOUT_CLASSIFICATION	1.308132003103882E-10	DEFECT
// If null, don't draw line => then delegate to parent	WITHOUT_CLASSIFICATION	0.9999903841081624	WITHOUT_CLASSIFICATION	9.615891837534646E-6	DEFECT
// If null, don't draw line at all	WITHOUT_CLASSIFICATION	0.9998909312212091	WITHOUT_CLASSIFICATION	1.0906877879101421E-4	DEFECT
// Now split the segment as needed	WITHOUT_CLASSIFICATION	0.9999999374794835	WITHOUT_CLASSIFICATION	6.252051652541721E-8	DEFECT
// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0	WITHOUT_CLASSIFICATION	0.9999999735932331	WITHOUT_CLASSIFICATION	2.6406766877713193E-8	DEFECT
// If the line is not wrapping, then parent is OK	WITHOUT_CLASSIFICATION	0.999845841880019	WITHOUT_CLASSIFICATION	1.5415811998099253E-4	DEFECT
// calculate the highest volume in the dataset...	WITHOUT_CLASSIFICATION	0.9999941833111208	WITHOUT_CLASSIFICATION	5.816688879228935E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999998745530203	WITHOUT_CLASSIFICATION	1.2544697969615265E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999998745530203	WITHOUT_CLASSIFICATION	1.2544697969615265E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999998745530203	WITHOUT_CLASSIFICATION	1.2544697969615265E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999998745530203	WITHOUT_CLASSIFICATION	1.2544697969615265E-6	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999907032881535	WITHOUT_CLASSIFICATION	9.296711846552585E-6	DEFECT
// PlotOrientation.HORIZONTAL	WITHOUT_CLASSIFICATION	0.9999996376893211	WITHOUT_CLASSIFICATION	3.623106788607906E-7	DEFECT
// draw the outline...	WITHOUT_CLASSIFICATION	0.9999953747617119	WITHOUT_CLASSIFICATION	4.625238288133324E-6	DEFECT
// as a special case, if the bar colour has alpha == 0, we draw // nothing.	WITHOUT_CLASSIFICATION	0.9999999972980291	WITHOUT_CLASSIFICATION	2.701970766816274E-9	DEFECT
// update path to reflect latest point	WITHOUT_CLASSIFICATION	0.9999992971611938	WITHOUT_CLASSIFICATION	7.028388061162865E-7	DEFECT
// if this is the last item, draw the path ...	WITHOUT_CLASSIFICATION	0.9999992093579237	WITHOUT_CLASSIFICATION	7.906420762244105E-7	DEFECT
// draw path	WITHOUT_CLASSIFICATION	0.9999996801566803	WITHOUT_CLASSIFICATION	3.198433196597398E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.999999755969444	WITHOUT_CLASSIFICATION	2.440305560397664E-7	DEFECT
// The split may occur in either x splitted segments, if any, but // not in both	WITHOUT_CLASSIFICATION	0.9999882773369466	WITHOUT_CLASSIFICATION	1.1722663053309036E-5	DEFECT
// the x value is not within the axis range	WITHOUT_CLASSIFICATION	0.9999034158201049	WITHOUT_CLASSIFICATION	9.658417989518223E-5	DEFECT
// not a HighLowDataset, so just draw a line connecting this point // with the previous point...	WITHOUT_CLASSIFICATION	0.999999825028632	WITHOUT_CLASSIFICATION	1.7497136793055555E-7	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999999991903848	WITHOUT_CLASSIFICATION	8.096151849598338E-10	DEFECT
// include the interval if there is one	WITHOUT_CLASSIFICATION	0.9999999991903848	WITHOUT_CLASSIFICATION	8.096151849598338E-10	DEFECT
// draw the error bar for the x-interval	WITHOUT_CLASSIFICATION	0.9999992674854772	WITHOUT_CLASSIFICATION	7.32514522717289E-7	DEFECT
// draw the error bar for the y-interval	WITHOUT_CLASSIFICATION	0.9999986425785533	WITHOUT_CLASSIFICATION	1.3574214466181754E-6	DEFECT
//domainGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999992988824692	WITHOUT_CLASSIFICATION	7.01117530872754E-7	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987313898762	WITHOUT_CLASSIFICATION	1.2686101238737316E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999732495717075	WITHOUT_CLASSIFICATION	2.6750428292413867E-5	DEFECT
// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...	WITHOUT_CLASSIFICATION	0.9999999723756837	WITHOUT_CLASSIFICATION	2.7624316308315686E-8	DEFECT
// do nothing if item is not visible	WITHOUT_CLASSIFICATION	0.9999907032881535	WITHOUT_CLASSIFICATION	9.296711846552585E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999567393919	WITHOUT_CLASSIFICATION	4.326060816766125E-8	DEFECT
// set the default item label positions, which will only be used if // the user requests visible item labels...	WITHOUT_CLASSIFICATION	0.9999999182312217	WITHOUT_CLASSIFICATION	8.176877821201421E-8	DEFECT
// handle item label drawing, now that we know all the bars have // been drawn...	WITHOUT_CLASSIFICATION	0.9999940502988224	WITHOUT_CLASSIFICATION	5.949701177605468E-6	DEFECT
// if the renderer isn't assigned to a plot, then we don't have a // dataset...	WITHOUT_CLASSIFICATION	0.9999629483535662	WITHOUT_CLASSIFICATION	3.705164643368098E-5	DEFECT
//initalize xValues, yValues, and zValues arrays.	WITHOUT_CLASSIFICATION	0.9999978602562247	WITHOUT_CLASSIFICATION	2.139743775164046E-6	DEFECT
// setup for collecting optional entity info...	WITHOUT_CLASSIFICATION	0.9999987313898762	WITHOUT_CLASSIFICATION	1.2686101238737316E-6	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999732495717075	WITHOUT_CLASSIFICATION	2.6750428292413867E-5	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// handle positive value	WITHOUT_CLASSIFICATION	0.9999998313491502	WITHOUT_CLASSIFICATION	1.6865084979550145E-7	DEFECT
// LEFT POLYGON	WITHOUT_CLASSIFICATION	0.9999998018678471	WITHOUT_CLASSIFICATION	1.9813215303947503E-7	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999969422858629	WITHOUT_CLASSIFICATION	3.0577141371463198E-6	DEFECT
// RIGHT POLYGON	WITHOUT_CLASSIFICATION	0.9999969422858629	WITHOUT_CLASSIFICATION	3.0577141371463198E-6	DEFECT
// handle negative value	WITHOUT_CLASSIFICATION	0.9999997890292235	WITHOUT_CLASSIFICATION	2.1097077645986866E-7	DEFECT
// clip left and right bounds to data area	WITHOUT_CLASSIFICATION	0.9999993883436263	WITHOUT_CLASSIFICATION	6.116563736422363E-7	DEFECT
// clip top and bottom bounds to data area	WITHOUT_CLASSIFICATION	0.9999999111972514	WITHOUT_CLASSIFICATION	8.880274859723129E-8	DEFECT
// work out the label anchor point...	WITHOUT_CLASSIFICATION	0.9998009538573596	WITHOUT_CLASSIFICATION	1.990461426403618E-4	DEFECT
//  Get series Paint and Stroke	WITHOUT_CLASSIFICATION	0.9999902604681435	WITHOUT_CLASSIFICATION	9.739531856480087E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999998745530203	WITHOUT_CLASSIFICATION	1.2544697969615265E-6	DEFECT
// is there an alignment adjustment to be made?	WITHOUT_CLASSIFICATION	0.9999994829663	WITHOUT_CLASSIFICATION	5.170336999729939E-7	DEFECT
// update the crosshair point	WITHOUT_CLASSIFICATION	0.9999999513170544	WITHOUT_CLASSIFICATION	4.868294555632805E-8	DEFECT
// calculate the maximum allowed candle width from the axis...	WITHOUT_CLASSIFICATION	0.9999998421332831	WITHOUT_CLASSIFICATION	1.5786671692434363E-7	DEFECT
// Absolute value, since the relative x // positions are reversed for horizontal orientation	WITHOUT_CLASSIFICATION	0.9999999903661432	WITHOUT_CLASSIFICATION	9.633856876071039E-9	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999998745530203	WITHOUT_CLASSIFICATION	1.2544697969615265E-6	DEFECT
// pdfDocument class will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999995723466563	WITHOUT_CLASSIFICATION	4.276533438035388E-7	DEFECT
// add an entity for the item...	WITHOUT_CLASSIFICATION	0.9999732495717075	WITHOUT_CLASSIFICATION	2.6750428292413867E-5	DEFECT
// draw the upper shadow	WITHOUT_CLASSIFICATION	0.9999987811233779	WITHOUT_CLASSIFICATION	1.218876622059985E-6	DEFECT
// draw the lower shadow	WITHOUT_CLASSIFICATION	0.9999998004165929	WITHOUT_CLASSIFICATION	1.9958340710163346E-7	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// draw the body	WITHOUT_CLASSIFICATION	0.9999982086233303	WITHOUT_CLASSIFICATION	1.7913766697132785E-6	DEFECT
// this won't happen :)	WITHOUT_CLASSIFICATION	0.9852411428153828	WITHOUT_CLASSIFICATION	0.014758857184617226	DEFECT
// --- DEPRECATED CODE ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999992108267839	WITHOUT_CLASSIFICATION	7.891732160426432E-7	DEFECT
// create the temporary directory if it doesn't exist	WITHOUT_CLASSIFICATION	0.9999999393988767	WITHOUT_CLASSIFICATION	6.060112334278155E-8	DEFECT
//  Add chart to deletion list in session	WITHOUT_CLASSIFICATION	0.9999999891271346	WITHOUT_CLASSIFICATION	1.0872865454916067E-8	DEFECT
//  Set HTTP headers	WITHOUT_CLASSIFICATION	0.9999998813324544	WITHOUT_CLASSIFICATION	1.1866754566462899E-7	DEFECT
//  Replace ".." with "" //  This is to prevent access to the rest of the file system	WITHOUT_CLASSIFICATION	0.9999952438173694	WITHOUT_CLASSIFICATION	4.756182630576539E-6	DEFECT
//  Check the file exists	WITHOUT_CLASSIFICATION	0.9999998949519724	WITHOUT_CLASSIFICATION	1.0504802760741764E-7	DEFECT
//  Serve it up	WITHOUT_CLASSIFICATION	0.9999991375429426	WITHOUT_CLASSIFICATION	8.624570573425986E-7	DEFECT
// draw the block without collecting entities	WITHOUT_CLASSIFICATION	0.9999998083000801	WITHOUT_CLASSIFICATION	1.916999199559051E-7	DEFECT
// RectangleInsets is immutable => same reference in clone OK	WITHOUT_CLASSIFICATION	0.9999939100850473	WITHOUT_CLASSIFICATION	6.08991495263901E-6	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999999342785706	WITHOUT_CLASSIFICATION	6.572142942923506E-8	DEFECT
// suppress compiler warning	WITHOUT_CLASSIFICATION	0.9999999342785706	WITHOUT_CLASSIFICATION	6.572142942923506E-8	DEFECT
// determine the space required for the axis	WITHOUT_CLASSIFICATION	0.9999997123918207	WITHOUT_CLASSIFICATION	2.876081792288913E-7	DEFECT
// transpose the dimensions, because the title is rotated	WITHOUT_CLASSIFICATION	0.999999755969444	WITHOUT_CLASSIFICATION	2.440305560397664E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999875570329	WITHOUT_CLASSIFICATION	1.2442967065406255E-8	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999938623257403	WITHOUT_CLASSIFICATION	6.137674259779546E-6	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999938623257403	WITHOUT_CLASSIFICATION	6.137674259779546E-6	DEFECT
// no need to instantiate this class   	WITHOUT_CLASSIFICATION	0.9999967279978108	WITHOUT_CLASSIFICATION	3.2720021892755224E-6	DEFECT
//yAdj = -descent - leading + (float) bounds.getHeight();	WITHOUT_CLASSIFICATION	0.9999992492760001	WITHOUT_CLASSIFICATION	7.507239997385482E-7	DEFECT
// svgClass will be null so the function will return false	WITHOUT_CLASSIFICATION	0.9999993900643932	WITHOUT_CLASSIFICATION	6.099356067958802E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999875570329	WITHOUT_CLASSIFICATION	1.2442967065406255E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999875570329	WITHOUT_CLASSIFICATION	1.2442967065406255E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999875570329	WITHOUT_CLASSIFICATION	1.2442967065406255E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999904967831	WITHOUT_CLASSIFICATION	9.50321674925792E-9	DEFECT
// don't bother with parsing	WITHOUT_CLASSIFICATION	0.9999938623257403	WITHOUT_CLASSIFICATION	6.137674259779546E-6	DEFECT
// standard ResourceBundle behaviour	WITHOUT_CLASSIFICATION	0.9999999617966492	WITHOUT_CLASSIFICATION	3.820335091248056E-8	DEFECT
// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck	WITHOUT_CLASSIFICATION	0.9999470764193876	WITHOUT_CLASSIFICATION	5.292358061237213E-5	DEFECT
// first point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999854628127	WITHOUT_CLASSIFICATION	1.4537187351832652E-8	DEFECT
// second point is outside, so we update it against one of the // four sides then continue	WITHOUT_CLASSIFICATION	0.9999999838026155	WITHOUT_CLASSIFICATION	1.6197384553322098E-8	DEFECT
// the line is visible - if it wasn't, we'd have // returned false from within the while loop above	WITHOUT_CLASSIFICATION	0.9999999234405792	WITHOUT_CLASSIFICATION	7.655942070370893E-8	DEFECT
/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */	WITHOUT_CLASSIFICATION	0.9999999975167376	WITHOUT_CLASSIFICATION	2.4832622635149875E-9	DEFECT
/* Placeholder */	WITHOUT_CLASSIFICATION	0.9999970785760925	WITHOUT_CLASSIFICATION	2.9214239073998187E-6	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9980039518164178	WITHOUT_CLASSIFICATION	0.001996048183582285	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9980039518164178	WITHOUT_CLASSIFICATION	0.001996048183582285	DEFECT
/**/	WITHOUT_CLASSIFICATION	0.9980039518164178	WITHOUT_CLASSIFICATION	0.001996048183582285	DEFECT
/* (pix-buffer is large enough for all pixels of one row) */	WITHOUT_CLASSIFICATION	0.9999833612081498	WITHOUT_CLASSIFICATION	1.663879185015544E-5	DEFECT
// RGB (+ optional Alpha which we leave // unchanged)	WITHOUT_CLASSIFICATION	0.9999996314685289	WITHOUT_CLASSIFICATION	3.685314711140486E-7	DEFECT
// Red // Green // Blue. Now map computed colour to // nearest in Palette...	WITHOUT_CLASSIFICATION	0.999655925680911	WITHOUT_CLASSIFICATION	3.440743190889927E-4	DEFECT
// Red // Green // Blue	WITHOUT_CLASSIFICATION	0.999974677150932	WITHOUT_CLASSIFICATION	2.532284906790692E-5	DEFECT
/* Ignore alpha-channel -> */	WITHOUT_CLASSIFICATION	0.9999999984362107	WITHOUT_CLASSIFICATION	1.563789367296064E-9	DEFECT
// <- this is the code that actually COPIES the pixels	WITHOUT_CLASSIFICATION	0.9992463507382481	WITHOUT_CLASSIFICATION	7.536492617520041E-4	DEFECT
/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */	WITHOUT_CLASSIFICATION	0.9999968132947454	WITHOUT_CLASSIFICATION	3.1867052546065117E-6	DEFECT
// ALWAYS null	WITHOUT_CLASSIFICATION	0.9999837788558714	WITHOUT_CLASSIFICATION	1.6221144128505052E-5	DEFECT
// all methods are static, no need to instantiate	WITHOUT_CLASSIFICATION	0.9999999742010425	WITHOUT_CLASSIFICATION	2.5798957554705272E-8	DEFECT
// substitute the filtered URL list	WITHOUT_CLASSIFICATION	0.9999999927342634	WITHOUT_CLASSIFICATION	7.2657366549298235E-9	DEFECT
// adjust text bounds to match string position	WITHOUT_CLASSIFICATION	0.9999999647582845	WITHOUT_CLASSIFICATION	3.524171547327273E-8	DEFECT
// horizontal pass	WITHOUT_CLASSIFICATION	0.9999975072169095	WITHOUT_CLASSIFICATION	2.492783090439679E-6	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999810945721	WITHOUT_CLASSIFICATION	1.8905427921691854E-8	DEFECT
// substract the oldest pixel from the sum	WITHOUT_CLASSIFICATION	0.9999999810945721	WITHOUT_CLASSIFICATION	1.8905427921691854E-8	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999997910304596	WITHOUT_CLASSIFICATION	2.0896954052323898E-7	DEFECT
// get the lastest pixel	WITHOUT_CLASSIFICATION	0.9999997910304596	WITHOUT_CLASSIFICATION	2.0896954052323898E-7	DEFECT
// vertical pass	WITHOUT_CLASSIFICATION	0.9999989959715492	WITHOUT_CLASSIFICATION	1.00402845088774E-6	DEFECT
//get the coordinates of the original GradientPaint	WITHOUT_CLASSIFICATION	0.9999999626435483	WITHOUT_CLASSIFICATION	3.7356451592769646E-8	DEFECT
//get the coordinates of the shape that is to be filled	WITHOUT_CLASSIFICATION	0.9999989653841072	WITHOUT_CLASSIFICATION	1.03461589284736E-6	DEFECT
//reserve variables to store the coordinates of the resulting GradientPaint	WITHOUT_CLASSIFICATION	0.9999999982135842	WITHOUT_CLASSIFICATION	1.786415779415809E-9	DEFECT
//start point is upper left corner	WITHOUT_CLASSIFICATION	0.9999960202410155	WITHOUT_CLASSIFICATION	3.979758984433151E-6	DEFECT
//end point is lower right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999994794138461	WITHOUT_CLASSIFICATION	5.205861538851629E-7	DEFECT
//start point is lower left right corner --> diagonal gradient	WITHOUT_CLASSIFICATION	0.9999998318868285	WITHOUT_CLASSIFICATION	1.6811317152856643E-7	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999997089582366	WITHOUT_CLASSIFICATION	2.9104176343772967E-7	DEFECT
//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient	WITHOUT_CLASSIFICATION	0.9999991259598005	WITHOUT_CLASSIFICATION	8.740401994263039E-7	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999998711858255	WITHOUT_CLASSIFICATION	1.2881417465038935E-7	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999999610280028	WITHOUT_CLASSIFICATION	3.897199708000091E-8	DEFECT
// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996867763419	WITHOUT_CLASSIFICATION	3.132236580801141E-7	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999821163377687	WITHOUT_CLASSIFICATION	1.7883662231341336E-5	DEFECT
// consider these to be ordered after general objects	WITHOUT_CLASSIFICATION	0.999997791395002	WITHOUT_CLASSIFICATION	2.208604998030395E-6	DEFECT
// the row may not have an entry for this key, in which case the // return value is null	WITHOUT_CLASSIFICATION	0.9994041464702444	WITHOUT_CLASSIFICATION	5.958535297555967E-4	DEFECT
// check that the column key is defined in the 2D structure	WITHOUT_CLASSIFICATION	0.9999999897268607	WITHOUT_CLASSIFICATION	1.0273139277485759E-8	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999976374909544	WITHOUT_CLASSIFICATION	2.362509045697908E-6	DEFECT
// 1. check whether the row is now empty.	WITHOUT_CLASSIFICATION	0.9999976374909544	WITHOUT_CLASSIFICATION	2.362509045697908E-6	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999991244907251	WITHOUT_CLASSIFICATION	8.755092747968046E-7	DEFECT
// 2. check whether the column is now empty.	WITHOUT_CLASSIFICATION	0.9999991244907251	WITHOUT_CLASSIFICATION	8.755092747968046E-7	DEFECT
//int columnIndex = getColumnIndex(columnKey);	WITHOUT_CLASSIFICATION	0.9999528605789499	WITHOUT_CLASSIFICATION	4.7139421050070254E-5	DEFECT
// for the keys, a shallow copy should be fine because keys // should be immutable...	WITHOUT_CLASSIFICATION	0.9999849100424585	WITHOUT_CLASSIFICATION	1.5089957541536874E-5	DEFECT
// but the row data requires a deep copy	WITHOUT_CLASSIFICATION	0.9999677522504408	WITHOUT_CLASSIFICATION	3.224774955925354E-5	DEFECT
// already know 'a' isn't null	WITHOUT_CLASSIFICATION	0.9999915622668766	WITHOUT_CLASSIFICATION	8.437733123430794E-6	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999956230607	WITHOUT_CLASSIFICATION	4.376939246422475E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999956230607	WITHOUT_CLASSIFICATION	4.376939246422475E-9	DEFECT
// this will include the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9996394452897391	WITHOUT_CLASSIFICATION	3.605547102608867E-4	DEFECT
// this includes the case where the underlying dataset is null	WITHOUT_CLASSIFICATION	0.9999108220223748	WITHOUT_CLASSIFICATION	8.9177977625252E-5	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999980284400457	WITHOUT_CLASSIFICATION	1.971559954326417E-6	DEFECT
// set up the category names...	WITHOUT_CLASSIFICATION	0.9999993408709682	WITHOUT_CLASSIFICATION	6.591290318020126E-7	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999848419449	WITHOUT_CLASSIFICATION	1.5158055170726144E-8	DEFECT
// fetch the value...	WITHOUT_CLASSIFICATION	0.999992335659924	WITHOUT_CLASSIFICATION	7.664340076022813E-6	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999942718334766	WITHOUT_CLASSIFICATION	5.728166523408365E-6	DEFECT
// does the series exist?	WITHOUT_CLASSIFICATION	0.9999942718334766	WITHOUT_CLASSIFICATION	5.728166523408365E-6	DEFECT
// is the category valid?	WITHOUT_CLASSIFICATION	0.9999991408711905	WITHOUT_CLASSIFICATION	8.591288095276883E-7	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999988829164517	WITHOUT_CLASSIFICATION	1.1170835483587431E-6	DEFECT
// update the data...	WITHOUT_CLASSIFICATION	0.9999988829164517	WITHOUT_CLASSIFICATION	1.1170835483587431E-6	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999986824464273	WITHOUT_CLASSIFICATION	1.3175535727065007E-6	DEFECT
// Find min, max for the x and y axes	WITHOUT_CLASSIFICATION	0.9999973794157051	WITHOUT_CLASSIFICATION	2.620584294848489E-6	DEFECT
// Determine the cell size	WITHOUT_CLASSIFICATION	0.9999999979424311	WITHOUT_CLASSIFICATION	2.0575688108197275E-9	DEFECT
// Generate the grid	WITHOUT_CLASSIFICATION	0.9999998781708415	WITHOUT_CLASSIFICATION	1.2182915846811918E-7	DEFECT
// Map the nongrid data into the new regular grid	WITHOUT_CLASSIFICATION	0.9999998100682508	WITHOUT_CLASSIFICATION	1.8993174925293142E-7	DEFECT
// scale by the inverse of distance^power	WITHOUT_CLASSIFICATION	0.9999999980388291	WITHOUT_CLASSIFICATION	1.961170924547433E-9	DEFECT
//remove distance of the sum	WITHOUT_CLASSIFICATION	0.9999998817487422	WITHOUT_CLASSIFICATION	1.1825125775711505E-7	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999956230607	WITHOUT_CLASSIFICATION	4.376939246422475E-9	DEFECT
// we didn't find the key	WITHOUT_CLASSIFICATION	0.9999980284400457	WITHOUT_CLASSIFICATION	1.971559954326417E-6	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999997123222	WITHOUT_CLASSIFICATION	2.8767781551771546E-10	DEFECT
// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999995918418492	WITHOUT_CLASSIFICATION	4.081581507967502E-7	DEFECT
// the CategoryDataset interface expects a list of series, but // we've stored them in an array...	WITHOUT_CLASSIFICATION	0.9999993594263672	WITHOUT_CLASSIFICATION	6.405736328154516E-7	DEFECT
// if d is real small set the inverse to a large number // to avoid INF	WITHOUT_CLASSIFICATION	0.9999999907758572	WITHOUT_CLASSIFICATION	9.224142759323821E-9	DEFECT
//store data as Long	WITHOUT_CLASSIFICATION	0.9999991065439489	WITHOUT_CLASSIFICATION	8.934560510901259E-7	DEFECT
// store Number as Double	WITHOUT_CLASSIFICATION	0.9999999815161122	WITHOUT_CLASSIFICATION	1.8483887740072736E-8	DEFECT
// check if starting new column	WITHOUT_CLASSIFICATION	0.9999999818414669	WITHOUT_CLASSIFICATION	1.8158533043495996E-8	DEFECT
//store index where new //column starts	WITHOUT_CLASSIFICATION	0.9999995232168816	WITHOUT_CLASSIFICATION	4.767831184484487E-7	DEFECT
// set x to most recent value	WITHOUT_CLASSIFICATION	0.9999999587418077	WITHOUT_CLASSIFICATION	4.125819235270365E-8	DEFECT
// create array xIndex to hold // new column indices	WITHOUT_CLASSIFICATION	0.9999912635503181	WITHOUT_CLASSIFICATION	8.736449681988636E-6	DEFECT
// store y and z axes // as Doubles	WITHOUT_CLASSIFICATION	0.9999997802354981	WITHOUT_CLASSIFICATION	2.197645020385619E-7	DEFECT
// calculate constant values	WITHOUT_CLASSIFICATION	0.9999985450189077	WITHOUT_CLASSIFICATION	1.454981092387007E-6	DEFECT
// look for any keys that we don't already know about...	WITHOUT_CLASSIFICATION	0.9841202686537388	WITHOUT_CLASSIFICATION	0.015879731346261146	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999662773402	WITHOUT_CLASSIFICATION	3.3722659839584494E-8	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999918879015344	WITHOUT_CLASSIFICATION	8.11209846557942E-6	DEFECT
//step through all the values and add them to the hash	WITHOUT_CLASSIFICATION	0.9999828834957022	WITHOUT_CLASSIFICATION	1.7116504297828614E-5	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999997582799158	WITHOUT_CLASSIFICATION	2.417200842080174E-7	DEFECT
// can't find any differences	WITHOUT_CLASSIFICATION	0.9999368117542586	WITHOUT_CLASSIFICATION	6.318824574136221E-5	DEFECT
// now try to instantiate this ;-)	WITHOUT_CLASSIFICATION	0.9999991556766445	WITHOUT_CLASSIFICATION	8.443233554395553E-7	DEFECT
//  Create new dataset with keys above threshold percentThreshold	WITHOUT_CLASSIFICATION	0.9999938155476923	WITHOUT_CLASSIFICATION	6.184452307750804E-6	DEFECT
//  Do not add key to dataset	WITHOUT_CLASSIFICATION	0.9999945079169039	WITHOUT_CLASSIFICATION	5.4920830960338474E-6	DEFECT
//  Add key to dataset	WITHOUT_CLASSIFICATION	0.9999995511795271	WITHOUT_CLASSIFICATION	4.488204728537245E-7	DEFECT
//  Add other category if applicable	WITHOUT_CLASSIFICATION	0.9999999921362688	WITHOUT_CLASSIFICATION	7.863731262855458E-9	DEFECT
// now do the work...	WITHOUT_CLASSIFICATION	0.9996984984547174	WITHOUT_CLASSIFICATION	3.0150154528260414E-4	DEFECT
// if the dataset implements DomainInfo, life is easier	WITHOUT_CLASSIFICATION	0.9999999929415264	WITHOUT_CLASSIFICATION	7.0584736196652106E-9	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999941914052	WITHOUT_CLASSIFICATION	5.80859488874539E-9	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999993134693967	WITHOUT_CLASSIFICATION	6.865306032463831E-7	DEFECT
// handle the standard case (plain CategoryDataset)	WITHOUT_CLASSIFICATION	0.9999999941914052	WITHOUT_CLASSIFICATION	5.80859488874539E-9	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999484299612	WITHOUT_CLASSIFICATION	5.1570038771544144E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997467054872	WITHOUT_CLASSIFICATION	2.5329451272721995E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998844127541	WITHOUT_CLASSIFICATION	1.1558724591913423E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999954809198	WITHOUT_CLASSIFICATION	4.519080194216295E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999918598667	WITHOUT_CLASSIFICATION	8.140133294415616E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993890441954	WITHOUT_CLASSIFICATION	6.109558045433194E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994906717955	WITHOUT_CLASSIFICATION	5.093282045491698E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999997123222	WITHOUT_CLASSIFICATION	2.8767781551771546E-10	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999992144183725	WITHOUT_CLASSIFICATION	7.85581627573565E-7	DEFECT
// handle three cases by dataset type	WITHOUT_CLASSIFICATION	0.9999992144183725	WITHOUT_CLASSIFICATION	7.85581627573565E-7	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999862122076	WITHOUT_CLASSIFICATION	1.3787792409876651E-8	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999862122076	WITHOUT_CLASSIFICATION	1.3787792409876651E-8	DEFECT
// handle special case of IntervalXYDataset	WITHOUT_CLASSIFICATION	0.9999999862122076	WITHOUT_CLASSIFICATION	1.3787792409876651E-8	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999999799399665	WITHOUT_CLASSIFICATION	2.0060033521914947E-8	DEFECT
// handle special case of OHLCDataset	WITHOUT_CLASSIFICATION	0.9999999799399665	WITHOUT_CLASSIFICATION	2.0060033521914947E-8	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999997008107252	WITHOUT_CLASSIFICATION	2.9918927485304893E-7	DEFECT
// standard case - plain XYDataset	WITHOUT_CLASSIFICATION	0.9999997008107252	WITHOUT_CLASSIFICATION	2.9918927485304893E-7	DEFECT
// handle special case of BoxAndWhiskerXYDataset	WITHOUT_CLASSIFICATION	0.999999192984302	WITHOUT_CLASSIFICATION	8.070156979811853E-7	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999999228176968	WITHOUT_CLASSIFICATION	7.718230317587959E-8	DEFECT
// if the dataset implements DomainInfo, life is easy	WITHOUT_CLASSIFICATION	0.9999999228176968	WITHOUT_CLASSIFICATION	7.718230317587959E-8	DEFECT
// hasn't implemented DomainInfo, so iterate...	WITHOUT_CLASSIFICATION	0.9999964863796901	WITHOUT_CLASSIFICATION	3.513620310028525E-6	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999540116298651	WITHOUT_CLASSIFICATION	4.5988370134848444E-5	DEFECT
// hasn't implemented RangeInfo, so we'll have to iterate...	WITHOUT_CLASSIFICATION	0.9999540116298651	WITHOUT_CLASSIFICATION	4.5988370134848444E-5	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9994810535765823	WITHOUT_CLASSIFICATION	5.189464234176454E-4	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9994810535765823	WITHOUT_CLASSIFICATION	5.189464234176454E-4	DEFECT
// work out the minimum value...	WITHOUT_CLASSIFICATION	0.9994810535765823	WITHOUT_CLASSIFICATION	5.189464234176454E-4	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.999998526465648	WITHOUT_CLASSIFICATION	1.4735343520606607E-6	DEFECT
// create an array holding the group indices for each series...	WITHOUT_CLASSIFICATION	0.9996163320948646	WITHOUT_CLASSIFICATION	3.8366790513543565E-4	DEFECT
// minimum and maximum for each group...	WITHOUT_CLASSIFICATION	0.9999981848359681	WITHOUT_CLASSIFICATION	1.815164031786061E-6	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999567393919	WITHOUT_CLASSIFICATION	4.326060816766125E-8	DEFECT
// no new methods	WITHOUT_CLASSIFICATION	0.9999999567393919	WITHOUT_CLASSIFICATION	4.326060816766125E-8	DEFECT
// we'll set this to false if there is at // least one non-null data item...	WITHOUT_CLASSIFICATION	0.9999999541463849	WITHOUT_CLASSIFICATION	4.585361517771394E-8	DEFECT
// no additional methods required	WITHOUT_CLASSIFICATION	0.9999986824464273	WITHOUT_CLASSIFICATION	1.3175535727065007E-6	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999997582799158	WITHOUT_CLASSIFICATION	2.417200842080174E-7	DEFECT
// no new methods required	WITHOUT_CLASSIFICATION	0.9999997582799158	WITHOUT_CLASSIFICATION	2.417200842080174E-7	DEFECT
/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997467054872	WITHOUT_CLASSIFICATION	2.5329451272721995E-7	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999997123222	WITHOUT_CLASSIFICATION	2.8767781551771546E-10	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.999998526465648	WITHOUT_CLASSIFICATION	1.4735343520606607E-6	DEFECT
// '+', remember value is negative	WITHOUT_CLASSIFICATION	0.999998526465648	WITHOUT_CLASSIFICATION	1.4735343520606607E-6	DEFECT
// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point	WITHOUT_CLASSIFICATION	0.9999960886074455	WITHOUT_CLASSIFICATION	3.911392554485575E-6	DEFECT
// delegate null check on dataset	WITHOUT_CLASSIFICATION	0.9999998173465117	WITHOUT_CLASSIFICATION	1.826534883852425E-7	DEFECT
// exact match on first item	WITHOUT_CLASSIFICATION	0.9999999787619873	WITHOUT_CLASSIFICATION	2.1238012645002853E-8	DEFECT
// no crossing of x	WITHOUT_CLASSIFICATION	0.9999997661229553	WITHOUT_CLASSIFICATION	2.3387704465486788E-7	DEFECT
// spanning match	WITHOUT_CLASSIFICATION	0.9999999751482815	WITHOUT_CLASSIFICATION	2.4851718501403872E-8	DEFECT
// exact match	WITHOUT_CLASSIFICATION	0.9999995268025201	WITHOUT_CLASSIFICATION	4.7319747988541327E-7	DEFECT
// maps our series into our parent's	WITHOUT_CLASSIFICATION	0.9999979815564869	WITHOUT_CLASSIFICATION	2.0184435131567784E-6	DEFECT
// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this	WITHOUT_CLASSIFICATION	0.9999999982957555	WITHOUT_CLASSIFICATION	1.7042446065366456E-9	DEFECT
// no new methods added.	WITHOUT_CLASSIFICATION	0.9999999542726995	WITHOUT_CLASSIFICATION	4.572730050994195E-8	DEFECT
// first line contains column keys	WITHOUT_CLASSIFICATION	0.9999924478717356	WITHOUT_CLASSIFICATION	7.5521282644087E-6	DEFECT
// remaining lines contain a row key and data values	WITHOUT_CLASSIFICATION	0.9999942124685435	WITHOUT_CLASSIFICATION	5.787531456518107E-6	DEFECT
// first field contains the row key	WITHOUT_CLASSIFICATION	0.9999982754524321	WITHOUT_CLASSIFICATION	1.7245475679311137E-6	DEFECT
// update the max value	WITHOUT_CLASSIFICATION	0.9999990142239815	WITHOUT_CLASSIFICATION	9.857760185768934E-7	DEFECT
// remaining fields contain values	WITHOUT_CLASSIFICATION	0.9999993885135294	WITHOUT_CLASSIFICATION	6.114864705883807E-7	DEFECT
// Remove any previous old data	WITHOUT_CLASSIFICATION	0.9999418855526634	WITHOUT_CLASSIFICATION	5.811444733653446E-5	DEFECT
// first column contains the row key...	WITHOUT_CLASSIFICATION	0.9999670019184483	WITHOUT_CLASSIFICATION	3.2998081551619954E-5	DEFECT
// suppress (value defaults to null)	WITHOUT_CLASSIFICATION	0.999998792344791	WITHOUT_CLASSIFICATION	1.207655208941515E-6	DEFECT
// not a value, can't use it (defaults to null)	WITHOUT_CLASSIFICATION	0.9995395375166654	WITHOUT_CLASSIFICATION	4.6046248333468756E-4	DEFECT
/// First column is X data	WITHOUT_CLASSIFICATION	0.9999964387177053	WITHOUT_CLASSIFICATION	3.5612822947910865E-6	DEFECT
/// Get the column names and cache them.	WITHOUT_CLASSIFICATION	0.9999998284276594	WITHOUT_CLASSIFICATION	1.715723405654495E-7	DEFECT
// Might need to add, to free memory from any previous result sets	WITHOUT_CLASSIFICATION	0.9998682546300124	WITHOUT_CLASSIFICATION	1.3174536998759872E-4	DEFECT
// Are we working with a time series.	WITHOUT_CLASSIFICATION	0.9999895388386086	WITHOUT_CLASSIFICATION	1.0461161391483665E-5	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999956230607	WITHOUT_CLASSIFICATION	4.376939246422475E-9	DEFECT
// defer null argument check	WITHOUT_CLASSIFICATION	0.9999999956230607	WITHOUT_CLASSIFICATION	4.376939246422475E-9	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999848419449	WITHOUT_CLASSIFICATION	1.5158055170726144E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999484299612	WITHOUT_CLASSIFICATION	5.1570038771544144E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999954809198	WITHOUT_CLASSIFICATION	4.519080194216295E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999918598667	WITHOUT_CLASSIFICATION	8.140133294415616E-8	DEFECT
/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999918598667	WITHOUT_CLASSIFICATION	8.140133294415616E-8	DEFECT
// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key	WITHOUT_CLASSIFICATION	0.9999656734628013	WITHOUT_CLASSIFICATION	3.432653719862259E-5	DEFECT
// see comments about priority of // 10 in validateObject()	WITHOUT_CLASSIFICATION	0.9999916098062269	WITHOUT_CLASSIFICATION	8.390193773063602E-6	DEFECT
// first field is ignored, since // column 0 is for row keys	WITHOUT_CLASSIFICATION	0.9999997051360455	WITHOUT_CLASSIFICATION	2.9486395455390055E-7	DEFECT
// Get all rows. // rows = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999998826979027	WITHOUT_CLASSIFICATION	1.1730209718732178E-7	DEFECT
/// Determine max and min values.	WITHOUT_CLASSIFICATION	0.9999996014949752	WITHOUT_CLASSIFICATION	3.9850502469327655E-7	DEFECT
// Tell the listeners a new table has arrived.	WITHOUT_CLASSIFICATION	0.9999999905349465	WITHOUT_CLASSIFICATION	9.465053453380395E-9	DEFECT
// fill the bins	WITHOUT_CLASSIFICATION	0.999999025783674	WITHOUT_CLASSIFICATION	9.742163260949124E-7	DEFECT
// generic map for each series	WITHOUT_CLASSIFICATION	0.9999998393824918	WITHOUT_CLASSIFICATION	1.6061750821041818E-7	DEFECT
// pretty sure this shouldn't ever happen	WITHOUT_CLASSIFICATION	0.9999751406805008	WITHOUT_CLASSIFICATION	2.4859319499253755E-5	DEFECT
// lower bounds are the same	WITHOUT_CLASSIFICATION	0.9999998029127147	WITHOUT_CLASSIFICATION	1.9708728533857693E-7	DEFECT
// overridden to make public	WITHOUT_CLASSIFICATION	0.9999997803304722	WITHOUT_CLASSIFICATION	2.1966952778624612E-7	DEFECT
// update the cached range values...	WITHOUT_CLASSIFICATION	0.9999995277982059	WITHOUT_CLASSIFICATION	4.7220179401627214E-7	DEFECT
// check that the new bin doesn't overlap with any existing bin	WITHOUT_CLASSIFICATION	0.9999997800298014	WITHOUT_CLASSIFICATION	2.1997019857663873E-7	DEFECT
// pass values to other constructor	WITHOUT_CLASSIFICATION	0.9999999685909428	WITHOUT_CLASSIFICATION	3.140905720756765E-8	DEFECT
// update cached min and max values	WITHOUT_CLASSIFICATION	0.99999961831543	WITHOUT_CLASSIFICATION	3.816845699601519E-7	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999985748941	WITHOUT_CLASSIFICATION	1.4251059006732783E-9	DEFECT
// check for zero pivot element	WITHOUT_CLASSIFICATION	0.9999998992614727	WITHOUT_CLASSIFICATION	1.0073852729865671E-7	DEFECT
// treat nulls the same as NaNs	WITHOUT_CLASSIFICATION	0.9999977333926523	WITHOUT_CLASSIFICATION	2.26660734761022E-6	DEFECT
// calculate the sum and count	WITHOUT_CLASSIFICATION	0.9999999191481685	WITHOUT_CLASSIFICATION	8.085183150481574E-8	DEFECT
// intercept	WITHOUT_CLASSIFICATION	0.9999999351387454	WITHOUT_CLASSIFICATION	6.486125452899705E-8	DEFECT
// sum of x, x^2, x * y, y	WITHOUT_CLASSIFICATION	0.9999990924948144	WITHOUT_CLASSIFICATION	9.075051856812188E-7	DEFECT
// holds the moving average sum	WITHOUT_CLASSIFICATION	0.9999992058492175	WITHOUT_CLASSIFICATION	7.941507823175771E-7	DEFECT
// defer null argument checks	WITHOUT_CLASSIFICATION	0.9999999985748941	WITHOUT_CLASSIFICATION	1.4251059006732783E-9	DEFECT
// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min	WITHOUT_CLASSIFICATION	0.9999996273036668	WITHOUT_CLASSIFICATION	3.726963332488855E-7	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999998264731059	WITHOUT_CLASSIFICATION	1.7352689410473205E-7	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999999416341335	WITHOUT_CLASSIFICATION	5.8365866499614964E-8	DEFECT
// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************	WITHOUT_CLASSIFICATION	0.9999480607519893	WITHOUT_CLASSIFICATION	5.193924801066191E-5	DEFECT
// update cached range values	WITHOUT_CLASSIFICATION	0.9999999703373995	WITHOUT_CLASSIFICATION	2.9662600394329462E-8	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// update the min value	WITHOUT_CLASSIFICATION	0.9999993134693967	WITHOUT_CLASSIFICATION	6.865306032463831E-7	DEFECT
// iterate over all data items and update mins and maxes	WITHOUT_CLASSIFICATION	0.9999998264731059	WITHOUT_CLASSIFICATION	1.7352689410473205E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987825825934	WITHOUT_CLASSIFICATION	1.2174174065657424E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984099931621	WITHOUT_CLASSIFICATION	1.5900068377721126E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999842502785702	WITHOUT_CLASSIFICATION	1.5749721429815793E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999842502785702	WITHOUT_CLASSIFICATION	1.5749721429815793E-5	DEFECT
// we are at the last minute in the hour...	WITHOUT_CLASSIFICATION	0.9999936741812792	WITHOUT_CLASSIFICATION	6.325818720859489E-6	DEFECT
// CASE 1 : Comparing to another Minute object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.999999492595979	WITHOUT_CLASSIFICATION	5.074040208982171E-7	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999955904108954	WITHOUT_CLASSIFICATION	4.409589104642792E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9894626772385292	WITHOUT_CLASSIFICATION	0.01053732276147079	DEFECT
// remove old items and notify if necessary	WITHOUT_CLASSIFICATION	0.9999996078065154	WITHOUT_CLASSIFICATION	3.921934846196049E-7	DEFECT
// make the change (if it's not a duplicate time period)...	WITHOUT_CLASSIFICATION	0.9999990936037758	WITHOUT_CLASSIFICATION	9.063962242819497E-7	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999050061642043	WITHOUT_CLASSIFICATION	9.49938357956466E-5	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999050061642043	WITHOUT_CLASSIFICATION	9.49938357956466E-5	DEFECT
// find the serial index of the period specified by 'latest'	WITHOUT_CLASSIFICATION	0.9999999946162542	WITHOUT_CLASSIFICATION	5.383745901353829E-9	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999999610280028	WITHOUT_CLASSIFICATION	3.897199708000091E-8	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987825825934	WITHOUT_CLASSIFICATION	1.2174174065657424E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987825825934	WITHOUT_CLASSIFICATION	1.2174174065657424E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984099931621	WITHOUT_CLASSIFICATION	1.5900068377721126E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999842502785702	WITHOUT_CLASSIFICATION	1.5749721429815793E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999842502785702	WITHOUT_CLASSIFICATION	1.5749721429815793E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999955904108954	WITHOUT_CLASSIFICATION	4.409589104642792E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999955904108954	WITHOUT_CLASSIFICATION	4.409589104642792E-6	DEFECT
// since the items are ordered, we could be more clever here and avoid // iterating over all the data	WITHOUT_CLASSIFICATION	0.99999999924804	WITHOUT_CLASSIFICATION	7.519600790679508E-10	DEFECT
// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...	WITHOUT_CLASSIFICATION	0.9450393917616594	WITHOUT_CLASSIFICATION	0.054960608238340626	DEFECT
// figure out if we need to iterate through all the y-values // to find the revised minY / maxY	WITHOUT_CLASSIFICATION	0.9999999882665437	WITHOUT_CLASSIFICATION	1.1733456414260617E-8	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999989947988875	WITHOUT_CLASSIFICATION	1.0052011124531316E-6	DEFECT
// check if there are any values earlier than specified by the history // count...	WITHOUT_CLASSIFICATION	0.9999989947988875	WITHOUT_CLASSIFICATION	1.0052011124531316E-6	DEFECT
// start is after last data item	WITHOUT_CLASSIFICATION	0.9999999018366991	WITHOUT_CLASSIFICATION	9.816330098339496E-8	DEFECT
// update the time series appropriately	WITHOUT_CLASSIFICATION	0.9999986807175077	WITHOUT_CLASSIFICATION	1.3192824922082393E-6	DEFECT
// we are at the first hour in the day...	WITHOUT_CLASSIFICATION	0.9999575283327073	WITHOUT_CLASSIFICATION	4.247166729258519E-5	DEFECT
// we are at the last hour in the day...	WITHOUT_CLASSIFICATION	0.9997649597391116	WITHOUT_CLASSIFICATION	2.3504026088847987E-4	DEFECT
// CASE 1 : Comparing to another Hour object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.9999985023935759	WITHOUT_CLASSIFICATION	1.4976064241431904E-6	DEFECT
// if the hour is 0 - 23 then create an hour	WITHOUT_CLASSIFICATION	0.9999996233947412	WITHOUT_CLASSIFICATION	3.7660525871555786E-7	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999810192097899	WITHOUT_CLASSIFICATION	1.898079021017635E-5	DEFECT
// create the year...	WITHOUT_CLASSIFICATION	0.9999961891699718	WITHOUT_CLASSIFICATION	3.8108300282923853E-6	DEFECT
// get the current data item...	WITHOUT_CLASSIFICATION	0.9999965875914315	WITHOUT_CLASSIFICATION	3.412408568457573E-6	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999895548679842	WITHOUT_CLASSIFICATION	1.0445132015757039E-5	DEFECT
// work out the average for the earlier values...	WITHOUT_CLASSIFICATION	0.9999895548679842	WITHOUT_CLASSIFICATION	1.0445132015757039E-5	DEFECT
// remove the point i-periodCount out of the rolling sum.	WITHOUT_CLASSIFICATION	0.9999986826082111	WITHOUT_CLASSIFICATION	1.3173917888550911E-6	DEFECT
// an arbitrary safe default value	WITHOUT_CLASSIFICATION	0.9999998674629271	WITHOUT_CLASSIFICATION	1.3253707283733356E-7	DEFECT
// default value;	WITHOUT_CLASSIFICATION	0.9999996017155669	WITHOUT_CLASSIFICATION	3.98284433075874E-7	DEFECT
// as a class variable, initializes == 0	WITHOUT_CLASSIFICATION	0.999999993288531	WITHOUT_CLASSIFICATION	6.711469067896296E-9	DEFECT
// cached values used for interface DomainInfo:	WITHOUT_CLASSIFICATION	0.9999995603718389	WITHOUT_CLASSIFICATION	4.3962816111126246E-7	DEFECT
//rangeGridlinePaint;	WITHOUT_CLASSIFICATION	0.9999996663982419	WITHOUT_CLASSIFICATION	3.336017580794121E-7	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987825825934	WITHOUT_CLASSIFICATION	1.2174174065657424E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984099931621	WITHOUT_CLASSIFICATION	1.5900068377721126E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984099931621	WITHOUT_CLASSIFICATION	1.5900068377721126E-6	DEFECT
// autoinit's to null.	WITHOUT_CLASSIFICATION	0.9999995400012471	WITHOUT_CLASSIFICATION	4.5999875292916366E-7	DEFECT
// CASE 1 : Comparing to another Year object // -----------------------------------------	WITHOUT_CLASSIFICATION	0.999998307155846	WITHOUT_CLASSIFICATION	1.6928441540602005E-6	DEFECT
// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999999061068409	WITHOUT_CLASSIFICATION	9.389315912047049E-8	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999826335748253	WITHOUT_CLASSIFICATION	1.736642517470226E-5	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999826335748253	WITHOUT_CLASSIFICATION	1.736642517470226E-5	DEFECT
// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...	WITHOUT_CLASSIFICATION	0.9999999846967608	WITHOUT_CLASSIFICATION	1.530323924325633E-8	DEFECT
// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection	WITHOUT_CLASSIFICATION	0.9999753206539977	WITHOUT_CLASSIFICATION	2.467934600234001E-5	DEFECT
///  .. etc....	WITHOUT_CLASSIFICATION	0.9998543599638761	WITHOUT_CLASSIFICATION	1.4564003612388619E-4	DEFECT
/// Expand the following for all defined TimePeriods:	WITHOUT_CLASSIFICATION	0.9999999543216381	WITHOUT_CLASSIFICATION	4.567836194184241E-8	DEFECT
// initialize the members of "seriesNames" array so they won't be null:	WITHOUT_CLASSIFICATION	0.9999994269390526	WITHOUT_CLASSIFICATION	5.730609473888739E-7	DEFECT
//{ // deep copy from values[], caller // can safely discard that array	WITHOUT_CLASSIFICATION	0.999891360697621	WITHOUT_CLASSIFICATION	1.0863930237902753E-4	DEFECT
// Avoid IndexOutOfBoundsException:	WITHOUT_CLASSIFICATION	0.999969724931986	WITHOUT_CLASSIFICATION	3.027506801403971E-5	DEFECT
// But if that series array already exists, just overwrite its contents	WITHOUT_CLASSIFICATION	0.9999999584973848	WITHOUT_CLASSIFICATION	4.150261526419059E-8	DEFECT
// But if that series array already exists, just overwrite its contents //synchronized(this) //{	WITHOUT_CLASSIFICATION	0.9999999511803135	WITHOUT_CLASSIFICATION	4.8819686612182967E-8	DEFECT
// all arrays equal length, // so ignore argument:	WITHOUT_CLASSIFICATION	0.9999999959810496	WITHOUT_CLASSIFICATION	4.018950377280081E-9	DEFECT
// Methods for managing the FIFO's:	WITHOUT_CLASSIFICATION	0.9999477321282614	WITHOUT_CLASSIFICATION	5.226787173866082E-5	DEFECT
// no translation needed	WITHOUT_CLASSIFICATION	0.9999999869955268	WITHOUT_CLASSIFICATION	1.3004473259932566E-8	DEFECT
// else  [implicit here]	WITHOUT_CLASSIFICATION	0.9999999344786717	WITHOUT_CLASSIFICATION	6.552132832995989E-8	DEFECT
// newestAt takes value previously held // by oldestAT	WITHOUT_CLASSIFICATION	0.9999921586083449	WITHOUT_CLASSIFICATION	7.841391655164387E-6	DEFECT
// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:	WITHOUT_CLASSIFICATION	0.9999999999064929	WITHOUT_CLASSIFICATION	9.350698178664638E-11	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.999999919888508	WITHOUT_CLASSIFICATION	8.01114920415993E-8	DEFECT
//  wipe the next (about to be used) set of data slots	WITHOUT_CLASSIFICATION	0.9999994121697027	WITHOUT_CLASSIFICATION	5.878302971948075E-7	DEFECT
// Update the array of TimePeriods:	WITHOUT_CLASSIFICATION	0.9999972871767601	WITHOUT_CLASSIFICATION	2.712823240040132E-6	DEFECT
// Now advance "oldestAt", wrapping at end of the array	WITHOUT_CLASSIFICATION	0.9999981357434549	WITHOUT_CLASSIFICATION	1.864256545170104E-6	DEFECT
// Update the domain limits: //(time is kept in msec)	WITHOUT_CLASSIFICATION	0.9999732800997376	WITHOUT_CLASSIFICATION	2.6719900262354925E-5	DEFECT
//  If data can be < 0, the next 2 methods should be modified	WITHOUT_CLASSIFICATION	0.9999120843258801	WITHOUT_CLASSIFICATION	8.791567411989299E-5	DEFECT
// index to select the "series"	WITHOUT_CLASSIFICATION	0.9999991139805289	WITHOUT_CLASSIFICATION	8.860194711067343E-7	DEFECT
/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */	WITHOUT_CLASSIFICATION	0.9999999960096577	WITHOUT_CLASSIFICATION	3.990342279812947E-9	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.999999282839072	WITHOUT_CLASSIFICATION	7.171609280115798E-7	DEFECT
// a Long kept updated by advanceTime()	WITHOUT_CLASSIFICATION	0.999999282839072	WITHOUT_CLASSIFICATION	7.171609280115798E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9997223713840119	WITHOUT_CLASSIFICATION	2.7762861598807357E-4	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999994670569797	WITHOUT_CLASSIFICATION	5.329430203683056E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9997223713840119	WITHOUT_CLASSIFICATION	2.7762861598807357E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9997223713840119	WITHOUT_CLASSIFICATION	2.7762861598807357E-4	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999918879015344	WITHOUT_CLASSIFICATION	8.11209846557942E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987825825934	WITHOUT_CLASSIFICATION	1.2174174065657424E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984099931621	WITHOUT_CLASSIFICATION	1.5900068377721126E-6	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999883432971	WITHOUT_CLASSIFICATION	1.1656702896219108E-7	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984099931621	WITHOUT_CLASSIFICATION	1.5900068377721126E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999842502785702	WITHOUT_CLASSIFICATION	1.5749721429815793E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999842502785702	WITHOUT_CLASSIFICATION	1.5749721429815793E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999955904108954	WITHOUT_CLASSIFICATION	4.409589104642792E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999955904108954	WITHOUT_CLASSIFICATION	4.409589104642792E-6	DEFECT
// parse the string...	WITHOUT_CLASSIFICATION	0.9999810192097899	WITHOUT_CLASSIFICATION	1.898079021017635E-5	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999791338287	WITHOUT_CLASSIFICATION	2.0866171435360695E-8	DEFECT
// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:	WITHOUT_CLASSIFICATION	0.9996941660872927	WITHOUT_CLASSIFICATION	3.0583391270725004E-4	DEFECT
// check whether the "valueHistory" array member exists; if not, // create them:	WITHOUT_CLASSIFICATION	0.9999998143855681	WITHOUT_CLASSIFICATION	1.8561443186115398E-7	DEFECT
// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9944840832323639	WITHOUT_CLASSIFICATION	0.005515916767636102	DEFECT
// Don't synchronize this!! // Instead, synchronize the loop that calls it.	WITHOUT_CLASSIFICATION	0.9916230038977754	WITHOUT_CLASSIFICATION	0.008376996102224617	DEFECT
// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.	WITHOUT_CLASSIFICATION	0.5074073398613456	WITHOUT_CLASSIFICATION	0.49259266013865455	DEFECT
// CASE 1 : Comparing to another Quarter object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996824635426	WITHOUT_CLASSIFICATION	3.175364573974475E-7	DEFECT
// find the Q and the integer following it (remove both from the // string)...	WITHOUT_CLASSIFICATION	0.9999995079807381	WITHOUT_CLASSIFICATION	4.920192618690919E-7	DEFECT
// replace any / , or - with a space	WITHOUT_CLASSIFICATION	0.9999963999428317	WITHOUT_CLASSIFICATION	3.6000571681885823E-6	DEFECT
// do nothing, so null is returned	WITHOUT_CLASSIFICATION	0.9999997627441721	WITHOUT_CLASSIFICATION	2.3725582788655243E-7	DEFECT
//////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999829970029155	WITHOUT_CLASSIFICATION	1.7002997084478683E-5	DEFECT
// CASE 1 : Comparing to another Day object // ----------------------------------------	WITHOUT_CLASSIFICATION	0.999988331696663	WITHOUT_CLASSIFICATION	1.1668303336934392E-5	DEFECT
// check arguments...delegated // fetch the series name...	WITHOUT_CLASSIFICATION	0.9999999930161455	WITHOUT_CLASSIFICATION	6.983854416625633E-9	DEFECT
// deregister the collection as a change listener to each series in the // collection	WITHOUT_CLASSIFICATION	0.999999919888508	WITHOUT_CLASSIFICATION	8.01114920415993E-8	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999975954351079	WITHOUT_CLASSIFICATION	2.404564892052635E-6	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999991342337327	WITHOUT_CLASSIFICATION	8.65766267342383E-7	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999990706667998	WITHOUT_CLASSIFICATION	9.29333200103161E-7	DEFECT
// we need to work out if the previous year has 52 or 53 weeks...	WITHOUT_CLASSIFICATION	0.9998002743472411	WITHOUT_CLASSIFICATION	1.9972565275901336E-4	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999791338287	WITHOUT_CLASSIFICATION	2.0866171435360695E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999791338287	WITHOUT_CLASSIFICATION	2.0866171435360695E-8	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999821163377687	WITHOUT_CLASSIFICATION	1.7883662231341336E-5	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999918879015344	WITHOUT_CLASSIFICATION	8.11209846557942E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999950998682756	WITHOUT_CLASSIFICATION	4.9001317244181685E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987825825934	WITHOUT_CLASSIFICATION	1.2174174065657424E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984099931621	WITHOUT_CLASSIFICATION	1.5900068377721126E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984099931621	WITHOUT_CLASSIFICATION	1.5900068377721126E-6	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984099931621	WITHOUT_CLASSIFICATION	1.5900068377721126E-6	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999842502785702	WITHOUT_CLASSIFICATION	1.5749721429815793E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999842502785702	WITHOUT_CLASSIFICATION	1.5749721429815793E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999842502785702	WITHOUT_CLASSIFICATION	1.5749721429815793E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999842502785702	WITHOUT_CLASSIFICATION	1.5749721429815793E-5	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999842502785702	WITHOUT_CLASSIFICATION	1.5749721429815793E-5	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999955904108954	WITHOUT_CLASSIFICATION	4.409589104642792E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999955904108954	WITHOUT_CLASSIFICATION	4.409589104642792E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999955904108954	WITHOUT_CLASSIFICATION	4.409589104642792E-6	DEFECT
// more difficult case - evaluate later...	WITHOUT_CLASSIFICATION	0.9999955904108954	WITHOUT_CLASSIFICATION	4.409589104642792E-6	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9894626772385292	WITHOUT_CLASSIFICATION	0.01053732276147079	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999791338287	WITHOUT_CLASSIFICATION	2.0866171435360695E-8	DEFECT
// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.	WITHOUT_CLASSIFICATION	0.9999988094839917	WITHOUT_CLASSIFICATION	1.1905160083969348E-6	DEFECT
// CASE 1 : Comparing to another Week object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999986485138751	WITHOUT_CLASSIFICATION	1.3514861248356151E-6	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999991956455577	WITHOUT_CLASSIFICATION	8.043544422759014E-7	DEFECT
// trim whitespace from either end of the string	WITHOUT_CLASSIFICATION	0.9999991956455577	WITHOUT_CLASSIFICATION	8.043544422759014E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999997100508128	WITHOUT_CLASSIFICATION	2.899491872094519E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999997100508128	WITHOUT_CLASSIFICATION	2.899491872094519E-7	DEFECT
// suppress	WITHOUT_CLASSIFICATION	0.9999997100508128	WITHOUT_CLASSIFICATION	2.899491872094519E-7	DEFECT
// CASE 1 : Comparing to another Month object // --------------------------------------------	WITHOUT_CLASSIFICATION	0.9999981944213753	WITHOUT_CLASSIFICATION	1.8055786247998954E-6	DEFECT
// if there is no separator, we assume the first four characters // are YYYY	WITHOUT_CLASSIFICATION	0.9999999999994634	WITHOUT_CLASSIFICATION	5.366306405900841E-13	DEFECT
// now it is trickier to determine if the month or year is first	WITHOUT_CLASSIFICATION	0.9999998732566846	WITHOUT_CLASSIFICATION	1.2674331543547937E-7	DEFECT
// --- DEPRECATED METHODS -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987499824753	WITHOUT_CLASSIFICATION	1.250017524664749E-6	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999151310485	WITHOUT_CLASSIFICATION	8.486895153662761E-8	DEFECT
//private Comparable key;	WITHOUT_CLASSIFICATION	0.9999995110076269	WITHOUT_CLASSIFICATION	4.889923732233514E-7	DEFECT
//this.key = null;	WITHOUT_CLASSIFICATION	0.9999988012340028	WITHOUT_CLASSIFICATION	1.198765997240982E-6	DEFECT
// no attributes to read	WITHOUT_CLASSIFICATION	0.999999951723204	WITHOUT_CLASSIFICATION	4.8276795939725245E-8	DEFECT
//axisOffset;	WITHOUT_CLASSIFICATION	0.9999982842096636	WITHOUT_CLASSIFICATION	1.7157903364411977E-6	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999848419449	WITHOUT_CLASSIFICATION	1.5158055170726144E-8	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999662773402	WITHOUT_CLASSIFICATION	3.3722659839584494E-8	DEFECT
// remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.9999918879015344	WITHOUT_CLASSIFICATION	8.11209846557942E-6	DEFECT
// if it is not the series name, then we have no interest	WITHOUT_CLASSIFICATION	0.9999975954351079	WITHOUT_CLASSIFICATION	2.404564892052635E-6	DEFECT
// check if the new series name already exists for another series	WITHOUT_CLASSIFICATION	0.9999990706667998	WITHOUT_CLASSIFICATION	9.29333200103161E-7	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999969865074475	WITHOUT_CLASSIFICATION	3.013492552501854E-5	DEFECT
// XYDataset only provides methods for reading a dataset...	WITHOUT_CLASSIFICATION	0.9712870193136207	WITHOUT_CLASSIFICATION	0.02871298068637917	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999995180132	WITHOUT_CLASSIFICATION	4.819868194871933E-10	DEFECT
// check arguments...delegated	WITHOUT_CLASSIFICATION	0.9999999995180132	WITHOUT_CLASSIFICATION	4.819868194871933E-10	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999969865074475	WITHOUT_CLASSIFICATION	3.013492552501854E-5	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999804168603	WITHOUT_CLASSIFICATION	1.9583139688362397E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999791338287	WITHOUT_CLASSIFICATION	2.0866171435360695E-8	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999999242502282	WITHOUT_CLASSIFICATION	7.574977178828957E-8	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999945284053	WITHOUT_CLASSIFICATION	5.471594741456791E-9	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999791338287	WITHOUT_CLASSIFICATION	2.0866171435360695E-8	DEFECT
// we can't be sure of the order	WITHOUT_CLASSIFICATION	0.9999997742745136	WITHOUT_CLASSIFICATION	2.2572548647398787E-7	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999999866409243	WITHOUT_CLASSIFICATION	1.3359075772029612E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999791338287	WITHOUT_CLASSIFICATION	2.0866171435360695E-8	DEFECT
// either autoWidth is off or autoIntervalWidth was not set.	WITHOUT_CLASSIFICATION	0.999999728297276	WITHOUT_CLASSIFICATION	2.7170272392291954E-7	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999791338287	WITHOUT_CLASSIFICATION	2.0866171435360695E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999791338287	WITHOUT_CLASSIFICATION	2.0866171435360695E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999791338287	WITHOUT_CLASSIFICATION	2.0866171435360695E-8	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999904967831	WITHOUT_CLASSIFICATION	9.50321674925792E-9	DEFECT
// argument checking delegated...	WITHOUT_CLASSIFICATION	0.9999999904967831	WITHOUT_CLASSIFICATION	9.50321674925792E-9	DEFECT
// delegate argument checking to XYDataItem...	WITHOUT_CLASSIFICATION	0.9999997089582366	WITHOUT_CLASSIFICATION	2.9104176343772967E-7	DEFECT
// need to make sure we are adding *after* any duplicates	WITHOUT_CLASSIFICATION	0.9999999292067412	WITHOUT_CLASSIFICATION	7.079325879724565E-8	DEFECT
// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already	WITHOUT_CLASSIFICATION	0.9999998711858255	WITHOUT_CLASSIFICATION	1.2881417465038935E-7	DEFECT
// CASE 2 : Comparing to a general object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999821163377687	WITHOUT_CLASSIFICATION	1.7883662231341336E-5	DEFECT
// check arguments...	WITHOUT_CLASSIFICATION	0.9999999848419449	WITHOUT_CLASSIFICATION	1.5158055170726144E-8	DEFECT
// consider time periods to be ordered after general objects	WITHOUT_CLASSIFICATION	0.9999842502785702	WITHOUT_CLASSIFICATION	1.5749721429815793E-5	DEFECT
// won't get here...	WITHOUT_CLASSIFICATION	0.9894626772385292	WITHOUT_CLASSIFICATION	0.01053732276147079	DEFECT
// check if this addition will exceed the maximum item count...	WITHOUT_CLASSIFICATION	0.9999050061642043	WITHOUT_CLASSIFICATION	9.49938357956466E-5	DEFECT
// to be defensive, let's check that the source series does in fact // belong to this collection	WITHOUT_CLASSIFICATION	0.9999991342337327	WITHOUT_CLASSIFICATION	8.65766267342383E-7	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999804168603	WITHOUT_CLASSIFICATION	1.9583139688362397E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999804168603	WITHOUT_CLASSIFICATION	1.9583139688362397E-8	DEFECT
// Remove all the series from the collection and notify listeners.	WITHOUT_CLASSIFICATION	0.999969865074475	WITHOUT_CLASSIFICATION	3.013492552501854E-5	DEFECT
// need to configure the intervalDelegate to match the original	WITHOUT_CLASSIFICATION	0.9999999945284053	WITHOUT_CLASSIFICATION	5.471594741456791E-9	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999999242502282	WITHOUT_CLASSIFICATION	7.574977178828957E-8	DEFECT
// add a new series	WITHOUT_CLASSIFICATION	0.9999999242502282	WITHOUT_CLASSIFICATION	7.574977178828957E-8	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999999866409243	WITHOUT_CLASSIFICATION	1.3359075772029612E-8	DEFECT
// replace an existing series	WITHOUT_CLASSIFICATION	0.9999999866409243	WITHOUT_CLASSIFICATION	1.3359075772029612E-8	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999997105161013	WITHOUT_CLASSIFICATION	2.894838987966734E-7	DEFECT
// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.	WITHOUT_CLASSIFICATION	0.9999840918382065	WITHOUT_CLASSIFICATION	1.5908161793624953E-5	DEFECT
// first get the range without the interval, then expand it for the // interval width	WITHOUT_CLASSIFICATION	0.9999999966624156	WITHOUT_CLASSIFICATION	3.3375844577888407E-9	DEFECT
// all series have the same number of items in // this dataset	WITHOUT_CLASSIFICATION	0.9999965089514701	WITHOUT_CLASSIFICATION	3.491048530014308E-6	DEFECT
// this.x is not allowed to be null...	WITHOUT_CLASSIFICATION	0.9968260835607489	WITHOUT_CLASSIFICATION	0.0031739164392511152	DEFECT
// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999025717609	WITHOUT_CLASSIFICATION	9.742823908364891E-8	DEFECT
// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.	WITHOUT_CLASSIFICATION	0.9997699784316398	WITHOUT_CLASSIFICATION	2.3002156836020928E-4	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999999060422289	WITHOUT_CLASSIFICATION	9.395777113008667E-8	DEFECT
// figure out if we need to iterate through all the y-values	WITHOUT_CLASSIFICATION	0.9999999060422289	WITHOUT_CLASSIFICATION	9.395777113008667E-8	DEFECT
// if we get to here, we know that duplicate X values are not permitted	WITHOUT_CLASSIFICATION	0.9999819303819661	WITHOUT_CLASSIFICATION	1.8069618033948864E-5	DEFECT
/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */	WITHOUT_CLASSIFICATION	0.9999957700947174	WITHOUT_CLASSIFICATION	4.229905282610703E-6	DEFECT
// add the series...	WITHOUT_CLASSIFICATION	0.9999992378022089	WITHOUT_CLASSIFICATION	7.621977910664118E-7	DEFECT
// try a class that isn't a listener	WITHOUT_CLASSIFICATION	0.9999798802356189	WITHOUT_CLASSIFICATION	2.0119764381102185E-5	DEFECT
// set up popup menu...	WITHOUT_CLASSIFICATION	0.9999978431740056	WITHOUT_CLASSIFICATION	2.1568259944696936E-6	DEFECT
// stop listening for changes to the existing chart	WITHOUT_CLASSIFICATION	0.9999999994239651	WITHOUT_CLASSIFICATION	5.760348380922384E-10	DEFECT
// add the new chart	WITHOUT_CLASSIFICATION	0.999999982704709	WITHOUT_CLASSIFICATION	1.7295290968354208E-8	DEFECT
// work out if scaling is required...	WITHOUT_CLASSIFICATION	0.9663651716845311	WITHOUT_CLASSIFICATION	0.03363482831546893	DEFECT
// are we using the chart buffer?	WITHOUT_CLASSIFICATION	0.9999999885000496	WITHOUT_CLASSIFICATION	1.149995043312227E-8	DEFECT
// does nothing - override if necessary	WITHOUT_CLASSIFICATION	0.9999998054852812	WITHOUT_CLASSIFICATION	1.945147187389143E-7	DEFECT
// selected rectangle shouldn't extend outside the data area...	WITHOUT_CLASSIFICATION	0.9999913996397982	WITHOUT_CLASSIFICATION	8.60036020179066E-6	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999830482651	WITHOUT_CLASSIFICATION	1.6951734970520276E-8	DEFECT
// we need to guard against this.zoomPoint being null	WITHOUT_CLASSIFICATION	0.9999999830482651	WITHOUT_CLASSIFICATION	1.6951734970520276E-8	DEFECT
// force a redraw	WITHOUT_CLASSIFICATION	0.9999999381805603	WITHOUT_CLASSIFICATION	6.18194396581116E-8	DEFECT
// it is too slow to look at every data item, so let's just look at // the first, middle and last items...	WITHOUT_CLASSIFICATION	0.9999999610280028	WITHOUT_CLASSIFICATION	3.897199708000091E-8	DEFECT
// fetch the series, remove the change listener, then remove the series.	WITHOUT_CLASSIFICATION	0.9999999662773402	WITHOUT_CLASSIFICATION	3.3722659839584494E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999804168603	WITHOUT_CLASSIFICATION	1.9583139688362397E-8	DEFECT
// Unregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999804168603	WITHOUT_CLASSIFICATION	1.9583139688362397E-8	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999998469471334	WITHOUT_CLASSIFICATION	1.530528666206375E-7	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999999104451791	WITHOUT_CLASSIFICATION	8.955482090107577E-8	DEFECT
//assert itemIndex >= 0 && itemIndex < getItemCount();	WITHOUT_CLASSIFICATION	0.9999999104451791	WITHOUT_CLASSIFICATION	8.955482090107577E-8	DEFECT
//TODO private boolean fillZoomRectangle = true;	WITHOUT_CLASSIFICATION	0.9991044007543395	WITHOUT_CLASSIFICATION	8.955992456606132E-4	DEFECT
// create the canvas and add the required listeners	WITHOUT_CLASSIFICATION	0.9999996698530708	WITHOUT_CLASSIFICATION	3.301469292804581E-7	DEFECT
//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);	WITHOUT_CLASSIFICATION	0.9999995618097534	WITHOUT_CLASSIFICATION	4.381902466070695E-7	DEFECT
/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */	WITHOUT_CLASSIFICATION	0.9999999543298103	WITHOUT_CLASSIFICATION	4.567018971855482E-8	DEFECT
// do nothing, override if necessary	WITHOUT_CLASSIFICATION	0.9999999965157739	WITHOUT_CLASSIFICATION	3.484226083073602E-9	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.999979409002595	WITHOUT_CLASSIFICATION	2.059099740503052E-5	DEFECT
// new entity code	WITHOUT_CLASSIFICATION	0.999979409002595	WITHOUT_CLASSIFICATION	2.059099740503052E-5	DEFECT
// pass mouse down event if some ChartMouseListener are listening	WITHOUT_CLASSIFICATION	0.9999999621850539	WITHOUT_CLASSIFICATION	3.781494600440558E-8	DEFECT
// if the box has been drawn backwards, restore the auto bounds	WITHOUT_CLASSIFICATION	0.9999996058260489	WITHOUT_CLASSIFICATION	3.941739510939307E-7	DEFECT
// handle axis trace	WITHOUT_CLASSIFICATION	0.9999999747763227	WITHOUT_CLASSIFICATION	2.5223677273420698E-8	DEFECT
// handle tool tips in a simple way	WITHOUT_CLASSIFICATION	0.9999993890864137	WITHOUT_CLASSIFICATION	6.109135862439688E-7	DEFECT
// handle zoom box	WITHOUT_CLASSIFICATION	0.999999945824461	WITHOUT_CLASSIFICATION	5.4175539132076124E-8	DEFECT
// skip if chart is null	WITHOUT_CLASSIFICATION	0.9999999670743773	WITHOUT_CLASSIFICATION	3.2925622640571484E-8	DEFECT
//axisLabelPaint;	WITHOUT_CLASSIFICATION	0.9999995236273252	WITHOUT_CLASSIFICATION	4.763726746992454E-7	DEFECT
// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)	WITHOUT_CLASSIFICATION	0.9999999986998669	WITHOUT_CLASSIFICATION	1.3001330687494048E-9	DEFECT
// go through each zoom menu item and decide whether or not to // enable it...	WITHOUT_CLASSIFICATION	0.9999905411988165	WITHOUT_CLASSIFICATION	9.458801183594926E-6	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999995336838802	WITHOUT_CLASSIFICATION	4.663161198635123E-7	DEFECT
// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?	WITHOUT_CLASSIFICATION	0.9999991509379824	WITHOUT_CLASSIFICATION	8.490620176036168E-7	DEFECT
// check that minItem limit is observed	WITHOUT_CLASSIFICATION	0.9999998469471334	WITHOUT_CLASSIFICATION	1.530528666206375E-7	DEFECT
//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);	WITHOUT_CLASSIFICATION	0.9999998212945977	WITHOUT_CLASSIFICATION	1.7870540225476373E-7	DEFECT
// do we need to fill the buffer?	WITHOUT_CLASSIFICATION	0.9999876514510966	WITHOUT_CLASSIFICATION	1.2348548903406119E-5	DEFECT
// Performs the actual drawing here ...	WITHOUT_CLASSIFICATION	0.9999559765648288	WITHOUT_CLASSIFICATION	4.402343517119161E-5	DEFECT
// anti-aliasing	WITHOUT_CLASSIFICATION	0.9999999565111516	WITHOUT_CLASSIFICATION	4.348884847930507E-8	DEFECT
// zap the buffer onto the canvas...	WITHOUT_CLASSIFICATION	0.9999983962473091	WITHOUT_CLASSIFICATION	1.603752690847926E-6	DEFECT
// or redrawing the chart every time...	WITHOUT_CLASSIFICATION	0.999997904275171	WITHOUT_CLASSIFICATION	2.095724828972494E-6	DEFECT
// de-register the composite as a listener for the chart.	WITHOUT_CLASSIFICATION	0.9999999953404564	WITHOUT_CLASSIFICATION	4.6595435914578085E-9	DEFECT
// AXIS 2	WITHOUT_CLASSIFICATION	0.9999744610317048	WITHOUT_CLASSIFICATION	2.553896829522187E-5	DEFECT
// AXIS 3	WITHOUT_CLASSIFICATION	0.9999776779355339	WITHOUT_CLASSIFICATION	2.2322064466001365E-5	DEFECT
//axis3.setPositiveArrowVisible(true);	WITHOUT_CLASSIFICATION	0.9999790641972193	WITHOUT_CLASSIFICATION	2.0935802780659038E-5	DEFECT
// AXIS 4	WITHOUT_CLASSIFICATION	0.9999810847832106	WITHOUT_CLASSIFICATION	1.8915216789508556E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999661009345528	WITHOUT_CLASSIFICATION	3.389906544707532E-5	DEFECT
// create the dataset...	WITHOUT_CLASSIFICATION	0.9999994318577885	WITHOUT_CLASSIFICATION	5.681422115232872E-7	DEFECT
// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...	WITHOUT_CLASSIFICATION	0.9999699672512894	WITHOUT_CLASSIFICATION	3.003274871055763E-5	DEFECT
// get a reference to the plot for further customisation...	WITHOUT_CLASSIFICATION	0.9999987877479904	WITHOUT_CLASSIFICATION	1.212252009598838E-6	DEFECT
// set the range axis to display integers only...	WITHOUT_CLASSIFICATION	0.9999393455554608	WITHOUT_CLASSIFICATION	6.065444453911584E-5	DEFECT
// disable bar outlines...	WITHOUT_CLASSIFICATION	0.9999914359770113	WITHOUT_CLASSIFICATION	8.56402298867575E-6	DEFECT
// OPTIONAL CUSTOMISATION COMPLETED.	WITHOUT_CLASSIFICATION	0.999999868133372	WITHOUT_CLASSIFICATION	1.318666279111377E-7	DEFECT
// chart title // data // include legend	WITHOUT_CLASSIFICATION	0.9999997931120304	WITHOUT_CLASSIFICATION	2.0688796968153305E-7	DEFECT
//frame.setDisplayToolTips(false);	WITHOUT_CLASSIFICATION	0.9999988887272694	WITHOUT_CLASSIFICATION	1.1112727305312144E-6	DEFECT
// row 1: antialiasing	WITHOUT_CLASSIFICATION	0.9999979741380262	WITHOUT_CLASSIFICATION	2.0258619739496726E-6	DEFECT
//row 2: background paint for the chart	WITHOUT_CLASSIFICATION	0.9999987700470934	WITHOUT_CLASSIFICATION	1.2299529066737719E-6	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.999992352177976	WITHOUT_CLASSIFICATION	7.647822024022554E-6	DEFECT
//empty cell // row 2	WITHOUT_CLASSIFICATION	0.9999966596418809	WITHOUT_CLASSIFICATION	3.3403581190603787E-6	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999999347606401	WITHOUT_CLASSIFICATION	6.523935991636679E-8	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999999060420883	WITHOUT_CLASSIFICATION	9.395791168329758E-8	DEFECT
// build second tab	WITHOUT_CLASSIFICATION	0.9999986439471763	WITHOUT_CLASSIFICATION	1.3560528237291597E-6	DEFECT
// don't need to do anything	WITHOUT_CLASSIFICATION	0.9999260400074192	WITHOUT_CLASSIFICATION	7.395999258083107E-5	DEFECT
// set the plot properties...	WITHOUT_CLASSIFICATION	0.9999956389442388	WITHOUT_CLASSIFICATION	4.361055761135365E-6	DEFECT
// row 1	WITHOUT_CLASSIFICATION	0.999992352177976	WITHOUT_CLASSIFICATION	7.647822024022554E-6	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999999347606401	WITHOUT_CLASSIFICATION	6.523935991636679E-8	DEFECT
// Create the color-change dialog	WITHOUT_CLASSIFICATION	0.9999999347606401	WITHOUT_CLASSIFICATION	6.523935991636679E-8	DEFECT
// Dispose of any fonts we have created	WITHOUT_CLASSIFICATION	0.9999999060420883	WITHOUT_CLASSIFICATION	9.395791168329758E-8	DEFECT
// check a regular value	WITHOUT_CLASSIFICATION	0.9999999414397436	WITHOUT_CLASSIFICATION	5.856025637819695E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999303997894	WITHOUT_CLASSIFICATION	6.960021066995822E-8	DEFECT
// Create the new font and set it into the title // label	WITHOUT_CLASSIFICATION	0.9999999303997894	WITHOUT_CLASSIFICATION	6.960021066995822E-8	DEFECT
//label.setFont(font);	WITHOUT_CLASSIFICATION	0.9999993070238821	WITHOUT_CLASSIFICATION	6.929761178216182E-7	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999918057184987	WITHOUT_CLASSIFICATION	8.194281501363042E-6	DEFECT
// row 3	WITHOUT_CLASSIFICATION	0.9999918057184987	WITHOUT_CLASSIFICATION	8.194281501363042E-6	DEFECT
// Use a colored text field to show the color	WITHOUT_CLASSIFICATION	0.9999999053858161	WITHOUT_CLASSIFICATION	9.461418393576897E-8	DEFECT
//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));	WITHOUT_CLASSIFICATION	0.9999999439353948	WITHOUT_CLASSIFICATION	5.606460505484791E-8	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999737436035	WITHOUT_CLASSIFICATION	2.6256396562289975E-8	DEFECT
// Create the font-change dialog	WITHOUT_CLASSIFICATION	0.9999999737436035	WITHOUT_CLASSIFICATION	2.6256396562289975E-8	DEFECT
//tickLabelFontField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999989829162976	WITHOUT_CLASSIFICATION	1.0170837024110794E-6	DEFECT
// return the appropriate axis editor	WITHOUT_CLASSIFICATION	0.9999992465604026	WITHOUT_CLASSIFICATION	7.534395973815033E-7	DEFECT
//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.999999756620295	WITHOUT_CLASSIFICATION	2.4337970493526957E-7	DEFECT
//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);	WITHOUT_CLASSIFICATION	0.9999993066940749	WITHOUT_CLASSIFICATION	6.9330592503231E-7	DEFECT
// verify min value	WITHOUT_CLASSIFICATION	0.9999975879753925	WITHOUT_CLASSIFICATION	2.4120246075213945E-6	DEFECT
// verify max value	WITHOUT_CLASSIFICATION	0.9999966994666059	WITHOUT_CLASSIFICATION	3.3005333941884617E-6	DEFECT
//deal with domain axis	WITHOUT_CLASSIFICATION	0.9999990180729301	WITHOUT_CLASSIFICATION	9.81927069913074E-7	DEFECT
//deal with range axis	WITHOUT_CLASSIFICATION	0.9999997152247512	WITHOUT_CLASSIFICATION	2.847752488605883E-7	DEFECT
//deal with plot appearance	WITHOUT_CLASSIFICATION	0.9999951241694527	WITHOUT_CLASSIFICATION	4.875830547341009E-6	DEFECT
// set the axis properties	WITHOUT_CLASSIFICATION	0.9999998992950627	WITHOUT_CLASSIFICATION	1.007049373092691E-7	DEFECT
// row 1: stroke	WITHOUT_CLASSIFICATION	0.9998354077760147	WITHOUT_CLASSIFICATION	1.6459222398535077E-4	DEFECT
// row 3: background paint	WITHOUT_CLASSIFICATION	0.9999902969461586	WITHOUT_CLASSIFICATION	9.703053841488637E-6	DEFECT
// row 4: orientation	WITHOUT_CLASSIFICATION	0.9999464242022051	WITHOUT_CLASSIFICATION	5.357579779498721E-5	DEFECT
// row 2	WITHOUT_CLASSIFICATION	0.9999906279353594	WITHOUT_CLASSIFICATION	9.372064640566169E-6	DEFECT
//titleField.setFont(font);	WITHOUT_CLASSIFICATION	0.9999982402078565	WITHOUT_CLASSIFICATION	1.7597921434069873E-6	DEFECT
// row 4	WITHOUT_CLASSIFICATION	0.9999930424481402	WITHOUT_CLASSIFICATION	6.957551859760612E-6	DEFECT
// build first tab	WITHOUT_CLASSIFICATION	0.9999999599213409	WITHOUT_CLASSIFICATION	4.007865896447542E-8	DEFECT
// we can't do anything	WITHOUT_CLASSIFICATION	0.9999488841395555	WITHOUT_CLASSIFICATION	5.1115860444542664E-5	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999994597823176	WITHOUT_CLASSIFICATION	5.402176822848442E-7	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999497517231014	WITHOUT_CLASSIFICATION	5.02482768986322E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999661009345528	WITHOUT_CLASSIFICATION	3.389906544707532E-5	DEFECT
// since this is only used by clearRect(), we don't update the GC yet	WITHOUT_CLASSIFICATION	0.9999994333254778	WITHOUT_CLASSIFICATION	5.666745221646611E-7	DEFECT
// build the third tab	WITHOUT_CLASSIFICATION	0.9999999337787323	WITHOUT_CLASSIFICATION	6.622126768686463E-8	DEFECT
// ok and cancel buttons	WITHOUT_CLASSIFICATION	0.9999999459004775	WITHOUT_CLASSIFICATION	5.4099522384300815E-8	DEFECT
// to be consistent with other Graphics2D implementations	WITHOUT_CLASSIFICATION	0.999998922886165	WITHOUT_CLASSIFICATION	1.0771138350464574E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999939708926787	WITHOUT_CLASSIFICATION	6.0291073212910365E-6	DEFECT
// apply dash style if any	WITHOUT_CLASSIFICATION	0.9999998474855029	WITHOUT_CLASSIFICATION	1.525144970945674E-7	DEFECT
// handle transparency and compositing.	WITHOUT_CLASSIFICATION	0.999999953479293	WITHOUT_CLASSIFICATION	4.6520706912449516E-8	DEFECT
// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));	WITHOUT_CLASSIFICATION	0.9999998431725416	WITHOUT_CLASSIFICATION	1.5682745842590765E-7	DEFECT
// set the line style to solid by default	WITHOUT_CLASSIFICATION	0.9999999809292253	WITHOUT_CLASSIFICATION	1.9070774846046064E-8	DEFECT
// retrieve the swt font description in an os indept way	WITHOUT_CLASSIFICATION	0.9999977956169943	WITHOUT_CLASSIFICATION	2.2043830057270716E-6	DEFECT
// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours	WITHOUT_CLASSIFICATION	0.9999998968929131	WITHOUT_CLASSIFICATION	1.0310708681735314E-7	DEFECT
// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer	WITHOUT_CLASSIFICATION	0.9999997551744023	WITHOUT_CLASSIFICATION	2.44825597704112E-7	DEFECT
// create a new awt font with the appropiate data	WITHOUT_CLASSIFICATION	0.9999983980827337	WITHOUT_CLASSIFICATION	1.601917266236895E-6	DEFECT
// we dispose resources we own but user must dispose gc	WITHOUT_CLASSIFICATION	0.9999984243663358	WITHOUT_CLASSIFICATION	1.575633664230749E-6	DEFECT
// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);	WITHOUT_CLASSIFICATION	0.9999999652139498	WITHOUT_CLASSIFICATION	3.4786050204534946E-8	DEFECT
// SWT and AWT share the same style constants.	WITHOUT_CLASSIFICATION	0.9999993584584765	WITHOUT_CLASSIFICATION	6.415415234441742E-7	DEFECT
// convert the font size (in pt for awt) to height in pixels for swt	WITHOUT_CLASSIFICATION	0.9999660490506039	WITHOUT_CLASSIFICATION	3.3950949396031774E-5	DEFECT
//this.myColor = new Color(getDisplay(), color.getRGB());	WITHOUT_CLASSIFICATION	0.9999998203088418	WITHOUT_CLASSIFICATION	1.796911581218534E-7	DEFECT
// renderingHints	WITHOUT_CLASSIFICATION	0.9999990622981707	WITHOUT_CLASSIFICATION	9.377018291790434E-7	DEFECT
// borderStroke	WITHOUT_CLASSIFICATION	0.9999874482359338	WITHOUT_CLASSIFICATION	1.2551764066221274E-5	DEFECT
// borderVisible	WITHOUT_CLASSIFICATION	0.9999998871637095	WITHOUT_CLASSIFICATION	1.128362905399076E-7	DEFECT
// borderPaint	WITHOUT_CLASSIFICATION	0.9999999281708315	WITHOUT_CLASSIFICATION	7.182916848164267E-8	DEFECT
// title	WITHOUT_CLASSIFICATION	0.9999920071228551	WITHOUT_CLASSIFICATION	7.992877144977044E-6	DEFECT
// subtitles	WITHOUT_CLASSIFICATION	0.9999995395570067	WITHOUT_CLASSIFICATION	4.604429932069898E-7	DEFECT
// plot	WITHOUT_CLASSIFICATION	0.9999952051314158	WITHOUT_CLASSIFICATION	4.794868584149734E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999988096232734	WITHOUT_CLASSIFICATION	1.190376726602188E-6	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999995964180549	WITHOUT_CLASSIFICATION	4.035819450908968E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999995732314396	WITHOUT_CLASSIFICATION	4.2676856043077234E-7	DEFECT
// no event is generated if the dataset is already empty	WITHOUT_CLASSIFICATION	0.9999999979426414	WITHOUT_CLASSIFICATION	2.0573585800874974E-9	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999995336838802	WITHOUT_CLASSIFICATION	4.663161198635123E-7	DEFECT
// create the chart...	WITHOUT_CLASSIFICATION	0.9999995336838802	WITHOUT_CLASSIFICATION	4.663161198635123E-7	DEFECT
// try a Double.POSITIVE_INFINITY	WITHOUT_CLASSIFICATION	0.9999978488563342	WITHOUT_CLASSIFICATION	2.1511436656659563E-6	DEFECT
// adding something to the returned list should NOT change the chart	WITHOUT_CLASSIFICATION	0.9999999999380517	WITHOUT_CLASSIFICATION	6.194830684929519E-11	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999964013485371	WITHOUT_CLASSIFICATION	3.5986514630327583E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999964013485371	WITHOUT_CLASSIFICATION	3.5986514630327583E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999964013485371	WITHOUT_CLASSIFICATION	3.5986514630327583E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999964013485371	WITHOUT_CLASSIFICATION	3.5986514630327583E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999964013485371	WITHOUT_CLASSIFICATION	3.5986514630327583E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999964013485371	WITHOUT_CLASSIFICATION	3.5986514630327583E-6	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999911232194	WITHOUT_CLASSIFICATION	8.876780726298239E-9	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999995469877823	WITHOUT_CLASSIFICATION	4.530122176953993E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.999998541800435	WITHOUT_CLASSIFICATION	1.4581995650623468E-6	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999569290359	WITHOUT_CLASSIFICATION	4.30709641203307E-8	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999995576283854	WITHOUT_CLASSIFICATION	4.423716145998964E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999993568006097	WITHOUT_CLASSIFICATION	6.431993902745486E-7	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999993204129125	WITHOUT_CLASSIFICATION	6.795870873942166E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999569290359	WITHOUT_CLASSIFICATION	4.30709641203307E-8	DEFECT
// the clone references the same dataset as the original	WITHOUT_CLASSIFICATION	0.9999992243757525	WITHOUT_CLASSIFICATION	7.756242475878795E-7	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999569290359	WITHOUT_CLASSIFICATION	4.30709641203307E-8	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999569290359	WITHOUT_CLASSIFICATION	4.30709641203307E-8	DEFECT
// chart title	WITHOUT_CLASSIFICATION	0.9999999569290359	WITHOUT_CLASSIFICATION	4.30709641203307E-8	DEFECT
// data // include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999999442717873	WITHOUT_CLASSIFICATION	5.572821273985776E-8	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.999998677096389	WITHOUT_CLASSIFICATION	1.3229036110904169E-6	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999767815617324	WITHOUT_CLASSIFICATION	2.3218438267591493E-5	DEFECT
// a null key should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999767815617324	WITHOUT_CLASSIFICATION	2.3218438267591493E-5	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.999998677096389	WITHOUT_CLASSIFICATION	1.3229036110904169E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.999998677096389	WITHOUT_CLASSIFICATION	1.3229036110904169E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.999998677096389	WITHOUT_CLASSIFICATION	1.3229036110904169E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.999998677096389	WITHOUT_CLASSIFICATION	1.3229036110904169E-6	DEFECT
// include legend	WITHOUT_CLASSIFICATION	0.999998677096389	WITHOUT_CLASSIFICATION	1.3229036110904169E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999930627008876	WITHOUT_CLASSIFICATION	6.937299112395961E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999930627008876	WITHOUT_CLASSIFICATION	6.937299112395961E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999930627008876	WITHOUT_CLASSIFICATION	6.937299112395961E-6	DEFECT
// data	WITHOUT_CLASSIFICATION	0.9999930627008876	WITHOUT_CLASSIFICATION	6.937299112395961E-6	DEFECT
/* BufferedImage img =*/	WITHOUT_CLASSIFICATION	0.9999136700464356	WITHOUT_CLASSIFICATION	8.632995356431787E-5	DEFECT
// try a listener type that isn't registered	WITHOUT_CLASSIFICATION	0.9999925641153447	WITHOUT_CLASSIFICATION	7.435884655340034E-6	DEFECT
// name	WITHOUT_CLASSIFICATION	0.9999986924141664	WITHOUT_CLASSIFICATION	1.3075858336264553E-6	DEFECT
//extraLargeFont	WITHOUT_CLASSIFICATION	0.999998258283374	WITHOUT_CLASSIFICATION	1.7417166260362631E-6	DEFECT
//largeFont	WITHOUT_CLASSIFICATION	0.9999987433744744	WITHOUT_CLASSIFICATION	1.2566255256350972E-6	DEFECT
//regularFont;	WITHOUT_CLASSIFICATION	0.9999960782130652	WITHOUT_CLASSIFICATION	3.921786934796496E-6	DEFECT
//titlePaint;	WITHOUT_CLASSIFICATION	0.9999974887660487	WITHOUT_CLASSIFICATION	2.5112339513523E-6	DEFECT
//subtitlePaint;	WITHOUT_CLASSIFICATION	0.9999988712180871	WITHOUT_CLASSIFICATION	1.1287819129962549E-6	DEFECT
//chartBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999969197762439	WITHOUT_CLASSIFICATION	3.0802237561535954E-6	DEFECT
//legendBackgroundPaint;	WITHOUT_CLASSIFICATION	0.9999886555338202	WITHOUT_CLASSIFICATION	1.1344466179770436E-5	DEFECT
//legendItemPaint;	WITHOUT_CLASSIFICATION	0.9999971195478089	WITHOUT_CLASSIFICATION	2.8804521910514938E-6	DEFECT
//drawingSupplier;	WITHOUT_CLASSIFICATION	0.9999996246562356	WITHOUT_CLASSIFICATION	3.753437643873455E-7	DEFECT
// value 1	WITHOUT_CLASSIFICATION	0.9999958551698763	WITHOUT_CLASSIFICATION	4.144830123727768E-6	DEFECT
// create a dataset...	WITHOUT_CLASSIFICATION	0.9999964013485371	WITHOUT_CLASSIFICATION	3.5986514630327583E-6	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999993096194282	WITHOUT_CLASSIFICATION	6.903805717291315E-7	DEFECT
//tickLabelPaint;	WITHOUT_CLASSIFICATION	0.9999993627129451	WITHOUT_CLASSIFICATION	6.372870549081764E-7	DEFECT
//itemLabelPaint;	WITHOUT_CLASSIFICATION	0.9999996430912815	WITHOUT_CLASSIFICATION	3.5690871847136393E-7	DEFECT
//shadowVisible;	WITHOUT_CLASSIFICATION	0.9999953308038073	WITHOUT_CLASSIFICATION	4.669196192733339E-6	DEFECT
//shadowPaint;	WITHOUT_CLASSIFICATION	0.9999974373819578	WITHOUT_CLASSIFICATION	2.562618042248446E-6	DEFECT
//barPainter;	WITHOUT_CLASSIFICATION	0.9999986626420801	WITHOUT_CLASSIFICATION	1.3373579198499817E-6	DEFECT
//xyBarPainter;	WITHOUT_CLASSIFICATION	0.9999945422443691	WITHOUT_CLASSIFICATION	5.457755630939752E-6	DEFECT
//thermometerPaint;	WITHOUT_CLASSIFICATION	0.9999997696339902	WITHOUT_CLASSIFICATION	2.303660098421259E-7	DEFECT
//wallPaint;	WITHOUT_CLASSIFICATION	0.999984357719083	WITHOUT_CLASSIFICATION	1.564228091702396E-5	DEFECT
//errorIndicatorPaint;	WITHOUT_CLASSIFICATION	0.9999921398991866	WITHOUT_CLASSIFICATION	7.860100813481458E-6	DEFECT
//gridBandAlternatePaint	WITHOUT_CLASSIFICATION	0.9999606364635989	WITHOUT_CLASSIFICATION	3.93635364010081E-5	DEFECT
//private double angle;	WITHOUT_CLASSIFICATION	0.9999996351992743	WITHOUT_CLASSIFICATION	3.6480072579066494E-7	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999999430832632	WITHOUT_CLASSIFICATION	5.691673687859721E-8	DEFECT
//private double tipRadius;	WITHOUT_CLASSIFICATION	0.9999999430832632	WITHOUT_CLASSIFICATION	5.691673687859721E-8	DEFECT
//private double baseRadius;	WITHOUT_CLASSIFICATION	0.9999999323987978	WITHOUT_CLASSIFICATION	6.760120219033217E-8	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.999999399792526	WITHOUT_CLASSIFICATION	6.00207474058471E-7	DEFECT
//private double arrowLength;	WITHOUT_CLASSIFICATION	0.999999399792526	WITHOUT_CLASSIFICATION	6.00207474058471E-7	DEFECT
//private double arrowWidth;	WITHOUT_CLASSIFICATION	0.9999998322220669	WITHOUT_CLASSIFICATION	1.6777793304346058E-7	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9998764495062641	WITHOUT_CLASSIFICATION	1.2355049373594419E-4	DEFECT
//private Stroke arrowStroke;	WITHOUT_CLASSIFICATION	0.9998764495062641	WITHOUT_CLASSIFICATION	1.2355049373594419E-4	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999968450492404	WITHOUT_CLASSIFICATION	3.1549507597444764E-6	DEFECT
//private Paint arrowPaint;	WITHOUT_CLASSIFICATION	0.9999968450492404	WITHOUT_CLASSIFICATION	3.1549507597444764E-6	DEFECT
//private double labelOffset;	WITHOUT_CLASSIFICATION	0.9999999481801853	WITHOUT_CLASSIFICATION	5.181981458575236E-8	DEFECT
// text	WITHOUT_CLASSIFICATION	0.999991814738932	WITHOUT_CLASSIFICATION	8.18526106810965E-6	DEFECT
// text	WITHOUT_CLASSIFICATION	0.999991814738932	WITHOUT_CLASSIFICATION	8.18526106810965E-6	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999915393037604	WITHOUT_CLASSIFICATION	8.460696239705948E-6	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999897189338518	WITHOUT_CLASSIFICATION	1.0281066148208425E-5	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999962189111663	WITHOUT_CLASSIFICATION	3.7810888337489352E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999988218102566	WITHOUT_CLASSIFICATION	1.178189743475941E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999988218102566	WITHOUT_CLASSIFICATION	1.178189743475941E-6	DEFECT
// rotation anchor	WITHOUT_CLASSIFICATION	0.999999250659189	WITHOUT_CLASSIFICATION	7.493408110407064E-7	DEFECT
// rotation angle	WITHOUT_CLASSIFICATION	0.9999986772137219	WITHOUT_CLASSIFICATION	1.3227862780662558E-6	DEFECT
// text anchor	WITHOUT_CLASSIFICATION	0.9999991439113538	WITHOUT_CLASSIFICATION	8.560886462661843E-7	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999980519192978	WITHOUT_CLASSIFICATION	1.9480807022553323E-6	DEFECT
// rotationAnchor	WITHOUT_CLASSIFICATION	0.9999990193866118	WITHOUT_CLASSIFICATION	9.806133881007404E-7	DEFECT
// rotationAngle	WITHOUT_CLASSIFICATION	0.9999983835579205	WITHOUT_CLASSIFICATION	1.6164420794721454E-6	DEFECT
// category 1	WITHOUT_CLASSIFICATION	0.9999981179466302	WITHOUT_CLASSIFICATION	1.8820533697709822E-6	DEFECT
// category 2	WITHOUT_CLASSIFICATION	0.9999978614115959	WITHOUT_CLASSIFICATION	2.1385884040730575E-6	DEFECT
// value 2	WITHOUT_CLASSIFICATION	0.9999953165351487	WITHOUT_CLASSIFICATION	4.683464851256549E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999826501744082	WITHOUT_CLASSIFICATION	1.73498255917082E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999995469877823	WITHOUT_CLASSIFICATION	4.530122176953993E-7	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999826501744082	WITHOUT_CLASSIFICATION	1.73498255917082E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
// category	WITHOUT_CLASSIFICATION	0.9999989588226453	WITHOUT_CLASSIFICATION	1.041177354653922E-6	DEFECT
// categoryAnchor	WITHOUT_CLASSIFICATION	0.9999994345364408	WITHOUT_CLASSIFICATION	5.654635592910266E-7	DEFECT
// value	WITHOUT_CLASSIFICATION	0.9999982047914099	WITHOUT_CLASSIFICATION	1.7952085902145776E-6	DEFECT
// x0	WITHOUT_CLASSIFICATION	0.999994829300564	WITHOUT_CLASSIFICATION	5.1706994359586576E-6	DEFECT
// tickUnit	WITHOUT_CLASSIFICATION	0.9999963155673635	WITHOUT_CLASSIFICATION	3.684432636626163E-6	DEFECT
// tickMarkPosition	WITHOUT_CLASSIFICATION	0.9999961966995492	WITHOUT_CLASSIFICATION	3.8033004508591093E-6	DEFECT
// timeline	WITHOUT_CLASSIFICATION	0.999999460878416	WITHOUT_CLASSIFICATION	5.391215840717763E-7	DEFECT
// range	WITHOUT_CLASSIFICATION	0.9999997152279352	WITHOUT_CLASSIFICATION	2.847720648283081E-7	DEFECT
// check that setting the min date to something on or after the // current min date works...	WITHOUT_CLASSIFICATION	0.9997576331163813	WITHOUT_CLASSIFICATION	2.4236688361875582E-4	DEFECT
// five dates to check...	WITHOUT_CLASSIFICATION	0.9999988928621667	WITHOUT_CLASSIFICATION	1.1071378333651657E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999988470480329	WITHOUT_CLASSIFICATION	1.1529519671167444E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999988470480329	WITHOUT_CLASSIFICATION	1.1529519671167444E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999988470480329	WITHOUT_CLASSIFICATION	1.1529519671167444E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999988470480329	WITHOUT_CLASSIFICATION	1.1529519671167444E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999988470480329	WITHOUT_CLASSIFICATION	1.1529519671167444E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999988470480329	WITHOUT_CLASSIFICATION	1.1529519671167444E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999988470480329	WITHOUT_CLASSIFICATION	1.1529519671167444E-6	DEFECT
// START: check d0 and d1	WITHOUT_CLASSIFICATION	0.9999988470480329	WITHOUT_CLASSIFICATION	1.1529519671167444E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999997900723675	WITHOUT_CLASSIFICATION	2.0992763248755077E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999997900723675	WITHOUT_CLASSIFICATION	2.0992763248755077E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999997900723675	WITHOUT_CLASSIFICATION	2.0992763248755077E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999997900723675	WITHOUT_CLASSIFICATION	2.0992763248755077E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999997900723675	WITHOUT_CLASSIFICATION	2.0992763248755077E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999997900723675	WITHOUT_CLASSIFICATION	2.0992763248755077E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999997900723675	WITHOUT_CLASSIFICATION	2.0992763248755077E-6	DEFECT
// MIDDLE: check d1, d2 and d3	WITHOUT_CLASSIFICATION	0.999997900723675	WITHOUT_CLASSIFICATION	2.0992763248755077E-6	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999990106844029	WITHOUT_CLASSIFICATION	9.893155971013665E-7	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999990106844029	WITHOUT_CLASSIFICATION	9.893155971013665E-7	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999990106844029	WITHOUT_CLASSIFICATION	9.893155971013665E-7	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999990106844029	WITHOUT_CLASSIFICATION	9.893155971013665E-7	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999990106844029	WITHOUT_CLASSIFICATION	9.893155971013665E-7	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999990106844029	WITHOUT_CLASSIFICATION	9.893155971013665E-7	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999990106844029	WITHOUT_CLASSIFICATION	9.893155971013665E-7	DEFECT
// END: check d3 and d4	WITHOUT_CLASSIFICATION	0.9999990106844029	WITHOUT_CLASSIFICATION	9.893155971013665E-7	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999971475454672	WITHOUT_CLASSIFICATION	2.8524545327209064E-6	DEFECT
// START: check d0	WITHOUT_CLASSIFICATION	0.9999971475454672	WITHOUT_CLASSIFICATION	2.8524545327209064E-6	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999967098100865	WITHOUT_CLASSIFICATION	3.2901899136069804E-6	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.999997016622921	WITHOUT_CLASSIFICATION	2.9833770790437324E-6	DEFECT
// MIDDLE: check d0	WITHOUT_CLASSIFICATION	0.999997016622921	WITHOUT_CLASSIFICATION	2.9833770790437324E-6	DEFECT
// END: check d0	WITHOUT_CLASSIFICATION	0.9999967098100865	WITHOUT_CLASSIFICATION	3.2901899136069804E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999993096194282	WITHOUT_CLASSIFICATION	6.903805717291315E-7	DEFECT
// now repeat for a vertical axis	WITHOUT_CLASSIFICATION	0.9999988421753576	WITHOUT_CLASSIFICATION	1.157824642332262E-6	DEFECT
// set start and end date	WITHOUT_CLASSIFICATION	0.9999999340798928	WITHOUT_CLASSIFICATION	6.592010719496498E-8	DEFECT
// if the bug is still present, this leads to an endless loop	WITHOUT_CLASSIFICATION	0.9998660360604805	WITHOUT_CLASSIFICATION	1.3396393951942018E-4	DEFECT
//private boolean autoRangeIncludesZero;	WITHOUT_CLASSIFICATION	0.9999997520624934	WITHOUT_CLASSIFICATION	2.4793750654095033E-7	DEFECT
//private NumberTickUnit tickUnit;	WITHOUT_CLASSIFICATION	0.9999997135799346	WITHOUT_CLASSIFICATION	2.8642006552420563E-7	DEFECT
//private NumberFormat numberFormatOverride;	WITHOUT_CLASSIFICATION	0.9999988874190324	WITHOUT_CLASSIFICATION	1.1125809675881516E-6	DEFECT
// now replacing the dataset should update the axis range...	WITHOUT_CLASSIFICATION	0.9999994635909294	WITHOUT_CLASSIFICATION	5.364090705905177E-7	DEFECT
//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);	WITHOUT_CLASSIFICATION	0.9999992525479817	WITHOUT_CLASSIFICATION	7.474520182846266E-7	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999987641224439	WITHOUT_CLASSIFICATION	1.2358775560022355E-6	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999993164380162	WITHOUT_CLASSIFICATION	6.835619838498825E-7	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999997855856906	WITHOUT_CLASSIFICATION	2.14414309402168E-7	DEFECT
// set axis bounds to be both greater than 1	WITHOUT_CLASSIFICATION	0.9999992390776259	WITHOUT_CLASSIFICATION	7.60922374226528E-7	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.999999937307013	WITHOUT_CLASSIFICATION	6.269298704121135E-8	DEFECT
// check for bounds interval that includes 1	WITHOUT_CLASSIFICATION	0.999999937307013	WITHOUT_CLASSIFICATION	6.269298704121135E-8	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999989209219439	WITHOUT_CLASSIFICATION	1.0790780561260904E-6	DEFECT
// check for both bounds smaller than 1	WITHOUT_CLASSIFICATION	0.9999989209219439	WITHOUT_CLASSIFICATION	1.0790780561260904E-6	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999992316576811	WITHOUT_CLASSIFICATION	7.683423188980471E-7	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999997176116403	WITHOUT_CLASSIFICATION	2.823883597219499E-7	DEFECT
// categoryMargin	WITHOUT_CLASSIFICATION	0.9999993318504297	WITHOUT_CLASSIFICATION	6.681495703423134E-7	DEFECT
// maxCategoryLabelWidthRatio	WITHOUT_CLASSIFICATION	0.9999998711158379	WITHOUT_CLASSIFICATION	1.2888416212076507E-7	DEFECT
// categoryLabelPositionOffset	WITHOUT_CLASSIFICATION	0.9999999365863743	WITHOUT_CLASSIFICATION	6.34136256146132E-8	DEFECT
// categoryLabelPositions	WITHOUT_CLASSIFICATION	0.9999999504712548	WITHOUT_CLASSIFICATION	4.9528745177637984E-8	DEFECT
// check that changing a tick label font in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999987641224439	WITHOUT_CLASSIFICATION	1.2358775560022355E-6	DEFECT
// check that changing a tick label paint in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999993164380162	WITHOUT_CLASSIFICATION	6.835619838498825E-7	DEFECT
// check that changing a category label tooltip in a1 doesn't change a2	WITHOUT_CLASSIFICATION	0.9999997855856906	WITHOUT_CLASSIFICATION	2.14414309402168E-7	DEFECT
// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //	WITHOUT_CLASSIFICATION	0.9999996571780191	WITHOUT_CLASSIFICATION	3.42821980854124E-7	DEFECT
// categoryLabelToolTips	WITHOUT_CLASSIFICATION	0.9999999849032266	WITHOUT_CLASSIFICATION	1.5096773415325122E-8	DEFECT
// categoryLabelURLs	WITHOUT_CLASSIFICATION	0.9999998761373218	WITHOUT_CLASSIFICATION	1.2386267815914558E-7	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999996270634107	WITHOUT_CLASSIFICATION	3.7293658938172177E-7	DEFECT
// tickLabelPaint2	WITHOUT_CLASSIFICATION	0.9999994058124368	WITHOUT_CLASSIFICATION	5.941875632451022E-7	DEFECT
// period	WITHOUT_CLASSIFICATION	0.999995201320769	WITHOUT_CLASSIFICATION	4.798679231023719E-6	DEFECT
// offset	WITHOUT_CLASSIFICATION	0.9999980493222688	WITHOUT_CLASSIFICATION	1.9506777312660226E-6	DEFECT
// advance line Stroke	WITHOUT_CLASSIFICATION	0.9999939736118357	WITHOUT_CLASSIFICATION	6.026388164222629E-6	DEFECT
// advance line Visible	WITHOUT_CLASSIFICATION	0.9999999214129944	WITHOUT_CLASSIFICATION	7.858700554930595E-8	DEFECT
// cycle bound mapping	WITHOUT_CLASSIFICATION	0.9999989636238147	WITHOUT_CLASSIFICATION	1.036376185296543E-6	DEFECT
// Create a segmented time line (segment size : 15 minutes)	WITHOUT_CLASSIFICATION	0.9999950421082684	WITHOUT_CLASSIFICATION	4.957891731689199E-6	DEFECT
// Set start time	WITHOUT_CLASSIFICATION	0.9999998907547644	WITHOUT_CLASSIFICATION	1.0924523570363717E-7	DEFECT
/* PUT exclusions in test */	WITHOUT_CLASSIFICATION	0.9999941310125746	WITHOUT_CLASSIFICATION	5.868987425285639E-6	DEFECT
/** These constants control test cycles in the validateXXXX methods. */	WITHOUT_CLASSIFICATION	0.9997751567299915	WITHOUT_CLASSIFICATION	2.2484327000841663E-4	DEFECT
// test 9am-4pm Monday through Friday timeline	WITHOUT_CLASSIFICATION	0.9999987492282936	WITHOUT_CLASSIFICATION	1.2507717064895764E-6	DEFECT
// calculate 9am on the first Monday after 2001-01-01	WITHOUT_CLASSIFICATION	0.9999364486599444	WITHOUT_CLASSIFICATION	6.355134005573534E-5	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998515111587	WITHOUT_CLASSIFICATION	1.4848884129502486E-7	DEFECT
// verify attributes set during object construction	WITHOUT_CLASSIFICATION	0.9999998515111587	WITHOUT_CLASSIFICATION	1.4848884129502486E-7	DEFECT
////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999996175715382	WITHOUT_CLASSIFICATION	3.824284618769945E-7	DEFECT
// get two consecutive segments for various tests	WITHOUT_CLASSIFICATION	0.9999989972679508	WITHOUT_CLASSIFICATION	1.0027320491475047E-6	DEFECT
// verify segments are consecutive and correct	WITHOUT_CLASSIFICATION	0.9991381460164088	WITHOUT_CLASSIFICATION	8.618539835911855E-4	DEFECT
// verify various indices inside a segment are the same segment	WITHOUT_CLASSIFICATION	0.9999533106389212	WITHOUT_CLASSIFICATION	4.668936107882602E-5	DEFECT
// try next segment	WITHOUT_CLASSIFICATION	0.9999830900140663	WITHOUT_CLASSIFICATION	1.6909985933723867E-5	DEFECT
////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999993807815146	WITHOUT_CLASSIFICATION	6.192184853854797E-7	DEFECT
// test inc() method	WITHOUT_CLASSIFICATION	0.9999989593523013	WITHOUT_CLASSIFICATION	1.0406476986781924E-6	DEFECT
// logically consecutive segments non-physically consecutive // (with non-contained time in between)	WITHOUT_CLASSIFICATION	0.9999992527268885	WITHOUT_CLASSIFICATION	7.472731114899983E-7	DEFECT
// physically consecutive	WITHOUT_CLASSIFICATION	0.9999975239296932	WITHOUT_CLASSIFICATION	2.4760703068412587E-6	DEFECT
// test inc(n) method	WITHOUT_CLASSIFICATION	0.9999990326989633	WITHOUT_CLASSIFICATION	9.673010367354696E-7	DEFECT
// go to another segment to continue test	WITHOUT_CLASSIFICATION	0.9999999723813391	WITHOUT_CLASSIFICATION	2.7618660872995068E-8	DEFECT
// clear any exceptions in this timeline	WITHOUT_CLASSIFICATION	0.9999951150293703	WITHOUT_CLASSIFICATION	4.884970629725168E-6	DEFECT
// test some included and excluded segments	WITHOUT_CLASSIFICATION	0.9999993295481008	WITHOUT_CLASSIFICATION	6.704518991583979E-7	DEFECT
// should be an included segment	WITHOUT_CLASSIFICATION	0.9999966661548109	WITHOUT_CLASSIFICATION	3.333845189253807E-6	DEFECT
// should be an excluded segment	WITHOUT_CLASSIFICATION	0.9999936080637017	WITHOUT_CLASSIFICATION	6.391936298270909E-6	DEFECT
// fill in the exceptions	WITHOUT_CLASSIFICATION	0.9999989115691207	WITHOUT_CLASSIFICATION	1.0884308793238327E-6	DEFECT
// verify list of exceptions	WITHOUT_CLASSIFICATION	0.9999998735295806	WITHOUT_CLASSIFICATION	1.264704193290772E-7	DEFECT
// include current exception and last one	WITHOUT_CLASSIFICATION	0.9999999643891456	WITHOUT_CLASSIFICATION	3.5610854408795246E-8	DEFECT
// exclude current exception and last one	WITHOUT_CLASSIFICATION	0.9999999333846579	WITHOUT_CLASSIFICATION	6.661534209563846E-8	DEFECT
// make sure there are no exceptions	WITHOUT_CLASSIFICATION	0.9999999838738776	WITHOUT_CLASSIFICATION	1.612612234976414E-8	DEFECT
// add our exceptions and store locally in ArrayList of Longs	WITHOUT_CLASSIFICATION	0.9999970595910722	WITHOUT_CLASSIFICATION	2.940408927760664E-6	DEFECT
// only add an exception if it is currently an included segment	WITHOUT_CLASSIFICATION	0.9999204975603463	WITHOUT_CLASSIFICATION	7.950243965362915E-5	DEFECT
// make array of exceptions	WITHOUT_CLASSIFICATION	0.9999975650679676	WITHOUT_CLASSIFICATION	2.4349320325414822E-6	DEFECT
// add the base timeline exclusions as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999999952341573	WITHOUT_CLASSIFICATION	4.765842777828221E-9	DEFECT
// validate base timeline exclusions added as timeline's esceptions	WITHOUT_CLASSIFICATION	0.9999999368491816	WITHOUT_CLASSIFICATION	6.315081836382034E-8	DEFECT
// start time...	WITHOUT_CLASSIFICATION	0.9999991601874114	WITHOUT_CLASSIFICATION	8.398125884970289E-7	DEFECT
// 1-Jan-2000	WITHOUT_CLASSIFICATION	0.9999940661931883	WITHOUT_CLASSIFICATION	5.93380681170653E-6	DEFECT
//long v = stl.toTimelineValue(946684800020L);	WITHOUT_CLASSIFICATION	0.9999986914468356	WITHOUT_CLASSIFICATION	1.3085531643908672E-6	DEFECT
// tick labels visible flag...	WITHOUT_CLASSIFICATION	0.9999479738410166	WITHOUT_CLASSIFICATION	5.202615898324832E-5	DEFECT
// lowerMargin	WITHOUT_CLASSIFICATION	0.9999992316576811	WITHOUT_CLASSIFICATION	7.683423188980471E-7	DEFECT
// upperMargin	WITHOUT_CLASSIFICATION	0.9999997176116403	WITHOUT_CLASSIFICATION	2.823883597219499E-7	DEFECT
// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment	WITHOUT_CLASSIFICATION	0.9999999872969856	WITHOUT_CLASSIFICATION	1.2703014293262324E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999740926296	WITHOUT_CLASSIFICATION	2.590737040016329E-7	DEFECT
// verify all timeline segments included in the // baseTimeline.segment are now exceptions	WITHOUT_CLASSIFICATION	0.9999999659558831	WITHOUT_CLASSIFICATION	3.404411692529644E-8	DEFECT
////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999995687164676	WITHOUT_CLASSIFICATION	4.3128353236857255E-7	DEFECT
// subcategories	WITHOUT_CLASSIFICATION	0.9999999692878501	WITHOUT_CLASSIFICATION	3.0712149942085134E-8	DEFECT
// subLabelFont	WITHOUT_CLASSIFICATION	0.9999999021654445	WITHOUT_CLASSIFICATION	9.783455541228137E-8	DEFECT
// subLabelPaint	WITHOUT_CLASSIFICATION	0.9999999703201192	WITHOUT_CLASSIFICATION	2.9679880767864202E-8	DEFECT
// some checks that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999107154403	WITHOUT_CLASSIFICATION	8.928455983323678E-8	DEFECT
// visible flag...	WITHOUT_CLASSIFICATION	0.9999932020976257	WITHOUT_CLASSIFICATION	6.7979023742357675E-6	DEFECT
// label...	WITHOUT_CLASSIFICATION	0.9999911412064039	WITHOUT_CLASSIFICATION	8.858793596222995E-6	DEFECT
// label font...	WITHOUT_CLASSIFICATION	0.9999327293886675	WITHOUT_CLASSIFICATION	6.727061133253155E-5	DEFECT
// label paint...	WITHOUT_CLASSIFICATION	0.9999803184767713	WITHOUT_CLASSIFICATION	1.968152322870713E-5	DEFECT
// attributed label...	WITHOUT_CLASSIFICATION	0.9999990810318872	WITHOUT_CLASSIFICATION	9.189681128071249E-7	DEFECT
// label insets...	WITHOUT_CLASSIFICATION	0.9999967705914903	WITHOUT_CLASSIFICATION	3.2294085096605927E-6	DEFECT
// label angle...	WITHOUT_CLASSIFICATION	0.9999888103969247	WITHOUT_CLASSIFICATION	1.1189603075213924E-5	DEFECT
// label location...	WITHOUT_CLASSIFICATION	0.9999866667416556	WITHOUT_CLASSIFICATION	1.333325834430153E-5	DEFECT
// axis line visible...	WITHOUT_CLASSIFICATION	0.9999981926676059	WITHOUT_CLASSIFICATION	1.8073323939684984E-6	DEFECT
// axis line stroke...	WITHOUT_CLASSIFICATION	0.9999256631780713	WITHOUT_CLASSIFICATION	7.433682192872688E-5	DEFECT
// axis line paint...	WITHOUT_CLASSIFICATION	0.9999969642470007	WITHOUT_CLASSIFICATION	3.0357529992240395E-6	DEFECT
// tick label font...	WITHOUT_CLASSIFICATION	0.9999050976466894	WITHOUT_CLASSIFICATION	9.490235331057186E-5	DEFECT
// tick label paint...	WITHOUT_CLASSIFICATION	0.9999733443329639	WITHOUT_CLASSIFICATION	2.6655667036031588E-5	DEFECT
// tick marks visible flag...	WITHOUT_CLASSIFICATION	0.9999823217932955	WITHOUT_CLASSIFICATION	1.7678206704498606E-5	DEFECT
// tick mark inside length...	WITHOUT_CLASSIFICATION	0.9999649509244182	WITHOUT_CLASSIFICATION	3.504907558179272E-5	DEFECT
// tick mark outside length...	WITHOUT_CLASSIFICATION	0.9999947861215899	WITHOUT_CLASSIFICATION	5.213878410108274E-6	DEFECT
// tick mark stroke...	WITHOUT_CLASSIFICATION	0.9998256133216697	WITHOUT_CLASSIFICATION	1.7438667833033982E-4	DEFECT
// fixed dimension...	WITHOUT_CLASSIFICATION	0.9997923461321573	WITHOUT_CLASSIFICATION	2.076538678428486E-4	DEFECT
// axis line visible flag...	WITHOUT_CLASSIFICATION	0.9999979358319425	WITHOUT_CLASSIFICATION	2.064168057587456E-6	DEFECT
// positiveArrowVisible;	WITHOUT_CLASSIFICATION	0.9999990222951345	WITHOUT_CLASSIFICATION	9.777048655595222E-7	DEFECT
//private Shape upArrow;	WITHOUT_CLASSIFICATION	0.9999989247338102	WITHOUT_CLASSIFICATION	1.07526618969441E-6	DEFECT
//private Shape downArrow;	WITHOUT_CLASSIFICATION	0.9999967771259414	WITHOUT_CLASSIFICATION	3.2228740585575728E-6	DEFECT
//private Shape leftArrow;	WITHOUT_CLASSIFICATION	0.9999976713057835	WITHOUT_CLASSIFICATION	2.328694216403825E-6	DEFECT
//private Shape rightArrow;	WITHOUT_CLASSIFICATION	0.9999841707277829	WITHOUT_CLASSIFICATION	1.582927221713578E-5	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999988147427624	WITHOUT_CLASSIFICATION	1.1852572375812273E-6	DEFECT
// inverted	WITHOUT_CLASSIFICATION	0.9999999119741808	WITHOUT_CLASSIFICATION	8.802581923095116E-8	DEFECT
//private TickUnits standardTickUnits;	WITHOUT_CLASSIFICATION	0.9999988462875496	WITHOUT_CLASSIFICATION	1.1537124503721824E-6	DEFECT
// verticalTickLabels	WITHOUT_CLASSIFICATION	0.9999999306996218	WITHOUT_CLASSIFICATION	6.930037819273768E-8	DEFECT
// time zone	WITHOUT_CLASSIFICATION	0.9999977375774347	WITHOUT_CLASSIFICATION	2.2624225653460648E-6	DEFECT
// locale	WITHOUT_CLASSIFICATION	0.9999987163234191	WITHOUT_CLASSIFICATION	1.2836765808381106E-6	DEFECT
// chars	WITHOUT_CLASSIFICATION	0.9999999175380588	WITHOUT_CLASSIFICATION	8.246194120046895E-8	DEFECT
// showYear[]	WITHOUT_CLASSIFICATION	0.999999786461927	WITHOUT_CLASSIFICATION	2.135380729780625E-7	DEFECT
// yearFormatter	WITHOUT_CLASSIFICATION	0.9999891126677947	WITHOUT_CLASSIFICATION	1.0887332205229841E-5	DEFECT
// NONE / NONE	WITHOUT_CLASSIFICATION	0.9999996847657243	WITHOUT_CLASSIFICATION	3.1523427570562577E-7	DEFECT
// NONE / RANGE	WITHOUT_CLASSIFICATION	0.9999992739759892	WITHOUT_CLASSIFICATION	7.260240107475025E-7	DEFECT
// NONE / FIXED	WITHOUT_CLASSIFICATION	0.9999334069266963	WITHOUT_CLASSIFICATION	6.659307330359356E-5	DEFECT
// RANGE / NONE	WITHOUT_CLASSIFICATION	0.9999970013695912	WITHOUT_CLASSIFICATION	2.9986304087136436E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999988218102566	WITHOUT_CLASSIFICATION	1.178189743475941E-6	DEFECT
// RANGE / RANGE	WITHOUT_CLASSIFICATION	0.9999860540464158	WITHOUT_CLASSIFICATION	1.3945953584169089E-5	DEFECT
// RANGE / FIXED	WITHOUT_CLASSIFICATION	0.9970638995619147	WITHOUT_CLASSIFICATION	0.0029361004380853116	DEFECT
// FIXED / NONE	WITHOUT_CLASSIFICATION	0.999919062901799	WITHOUT_CLASSIFICATION	8.093709820091597E-5	DEFECT
// FIXED / RANGE	WITHOUT_CLASSIFICATION	0.9991341880156639	WITHOUT_CLASSIFICATION	8.658119843361795E-4	DEFECT
// FIXED / FIXED	WITHOUT_CLASSIFICATION	0.9993932148785678	WITHOUT_CLASSIFICATION	6.067851214322276E-4	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.999949611355735	WITHOUT_CLASSIFICATION	5.0388644265015224E-5	DEFECT
// TBLRC // 00010 - right item only	WITHOUT_CLASSIFICATION	0.999949611355735	WITHOUT_CLASSIFICATION	5.0388644265015224E-5	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999995610631921	WITHOUT_CLASSIFICATION	4.389368078454162E-7	DEFECT
// TBLRC // 00011 - right and center items	WITHOUT_CLASSIFICATION	0.9999995610631921	WITHOUT_CLASSIFICATION	4.389368078454162E-7	DEFECT
// try case where right item is shorter than center item	WITHOUT_CLASSIFICATION	0.9997163479226584	WITHOUT_CLASSIFICATION	2.8365207734160183E-4	DEFECT
// TBLRC // 00100 - left item only	WITHOUT_CLASSIFICATION	0.9999799072841262	WITHOUT_CLASSIFICATION	2.0092715873759994E-5	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999999024506654	WITHOUT_CLASSIFICATION	9.754933462281886E-8	DEFECT
// TBLRC // 00101 - left and center items	WITHOUT_CLASSIFICATION	0.9999999024506654	WITHOUT_CLASSIFICATION	9.754933462281886E-8	DEFECT
// try case where left item is shorter than center item	WITHOUT_CLASSIFICATION	0.9999647174901427	WITHOUT_CLASSIFICATION	3.528250985733935E-5	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999985913473199	WITHOUT_CLASSIFICATION	1.408652680040542E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999996506781689	WITHOUT_CLASSIFICATION	3.4932183110437233E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999890865470822	WITHOUT_CLASSIFICATION	1.0913452917893083E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999994955265016	WITHOUT_CLASSIFICATION	5.044734984253197E-7	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999946195178505	WITHOUT_CLASSIFICATION	5.38048214958193E-6	DEFECT
// TBLRC // 10110 - top, left and right	WITHOUT_CLASSIFICATION	0.9999918243005774	WITHOUT_CLASSIFICATION	8.175699422616939E-6	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999972072329392	WITHOUT_CLASSIFICATION	2.7927670608095248E-6	DEFECT
// TBLRC // 11000 - top and bottom only	WITHOUT_CLASSIFICATION	0.9999933910461032	WITHOUT_CLASSIFICATION	6.60895389685265E-6	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999955237475621	WITHOUT_CLASSIFICATION	4.4762524379534795E-6	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999965496288831	WITHOUT_CLASSIFICATION	3.4503711168562557E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999959331243222	WITHOUT_CLASSIFICATION	4.0668756778185935E-6	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.999997312392035	WITHOUT_CLASSIFICATION	2.687607965013645E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999981025018869	WITHOUT_CLASSIFICATION	1.89749811314518E-6	DEFECT
// TBLRC // 11111 - all	WITHOUT_CLASSIFICATION	0.9999956691918568	WITHOUT_CLASSIFICATION	4.330808143246447E-6	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999997693344819	WITHOUT_CLASSIFICATION	2.3066551802473488E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// TBLRC // 00110 - left and right items	WITHOUT_CLASSIFICATION	0.9999985913473199	WITHOUT_CLASSIFICATION	1.408652680040542E-6	DEFECT
// TBLRC // 00111 - left, right and center items	WITHOUT_CLASSIFICATION	0.9999996506781689	WITHOUT_CLASSIFICATION	3.4932183110437233E-7	DEFECT
// TBLRC // 01000 - bottom item only	WITHOUT_CLASSIFICATION	0.9999890865470822	WITHOUT_CLASSIFICATION	1.0913452917893083E-5	DEFECT
// TBLRC // 01001 - bottom and center only	WITHOUT_CLASSIFICATION	0.9999994955265016	WITHOUT_CLASSIFICATION	5.044734984253197E-7	DEFECT
// TBLRC // 01010 - bottom and right only	WITHOUT_CLASSIFICATION	0.9999946195178505	WITHOUT_CLASSIFICATION	5.38048214958193E-6	DEFECT
// TBLRC // 01011 - bottom, right and center	WITHOUT_CLASSIFICATION	0.9999995046848774	WITHOUT_CLASSIFICATION	4.953151226136277E-7	DEFECT
// TBLRC // 01100	WITHOUT_CLASSIFICATION	0.9999986191733145	WITHOUT_CLASSIFICATION	1.3808266856020718E-6	DEFECT
// TBLRC // 01101 - bottom, left and center	WITHOUT_CLASSIFICATION	0.9999999113053561	WITHOUT_CLASSIFICATION	8.869464378665724E-8	DEFECT
// TBLRC // 01110 - bottom. left and right	WITHOUT_CLASSIFICATION	0.9999982312177241	WITHOUT_CLASSIFICATION	1.7687822758770745E-6	DEFECT
// TBLRC // 01111	WITHOUT_CLASSIFICATION	0.9999985308731881	WITHOUT_CLASSIFICATION	1.469126811922651E-6	DEFECT
// TBLRC // 10000 - top item only	WITHOUT_CLASSIFICATION	0.9999874172117535	WITHOUT_CLASSIFICATION	1.2582788246387657E-5	DEFECT
// TBLRC // 10001 - top and center only	WITHOUT_CLASSIFICATION	0.999998183567493	WITHOUT_CLASSIFICATION	1.8164325069931276E-6	DEFECT
// TBLRC // 10010 - right and top only	WITHOUT_CLASSIFICATION	0.9999566803005315	WITHOUT_CLASSIFICATION	4.331969946854138E-5	DEFECT
// TBLRC // 10011 - top, right and center	WITHOUT_CLASSIFICATION	0.9999964258067701	WITHOUT_CLASSIFICATION	3.5741932299628617E-6	DEFECT
// TBLRC // 10100 - top and left only	WITHOUT_CLASSIFICATION	0.9999929972103353	WITHOUT_CLASSIFICATION	7.002789664799122E-6	DEFECT
// TBLRC // 10101 - top, left and center	WITHOUT_CLASSIFICATION	0.9999993384865538	WITHOUT_CLASSIFICATION	6.615134462760238E-7	DEFECT
// TBLRC // 10111	WITHOUT_CLASSIFICATION	0.9999972072329392	WITHOUT_CLASSIFICATION	2.7927670608095248E-6	DEFECT
// standard test	WITHOUT_CLASSIFICATION	0.999999875185369	WITHOUT_CLASSIFICATION	1.2481463104191633E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999998956925392	WITHOUT_CLASSIFICATION	1.0430746074470398E-7	DEFECT
// tooltip format	WITHOUT_CLASSIFICATION	0.9999998956925392	WITHOUT_CLASSIFICATION	1.0430746074470398E-7	DEFECT
// date format	WITHOUT_CLASSIFICATION	0.9999978839591962	WITHOUT_CLASSIFICATION	2.116040803724614E-6	DEFECT
// Y format	WITHOUT_CLASSIFICATION	0.9999995589771932	WITHOUT_CLASSIFICATION	4.410228067481807E-7	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999941036439668	WITHOUT_CLASSIFICATION	5.896356033203464E-6	DEFECT
// some setup...	WITHOUT_CLASSIFICATION	0.9999941036439668	WITHOUT_CLASSIFICATION	5.896356033203464E-6	DEFECT
// another test...	WITHOUT_CLASSIFICATION	0.9999985121478876	WITHOUT_CLASSIFICATION	1.4878521124744792E-6	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999946584903499	WITHOUT_CLASSIFICATION	5.341509650107322E-6	DEFECT
// format string...	WITHOUT_CLASSIFICATION	0.9999972212455371	WITHOUT_CLASSIFICATION	2.7787544629172564E-6	DEFECT
// x number format	WITHOUT_CLASSIFICATION	0.9999996565541183	WITHOUT_CLASSIFICATION	3.434458816765195E-7	DEFECT
// y number format	WITHOUT_CLASSIFICATION	0.9999994669988773	WITHOUT_CLASSIFICATION	5.330011226032459E-7	DEFECT
// z number format	WITHOUT_CLASSIFICATION	0.999999843828907	WITHOUT_CLASSIFICATION	1.56171092879907E-7	DEFECT
// x date format	WITHOUT_CLASSIFICATION	0.9999974385131715	WITHOUT_CLASSIFICATION	2.561486828498831E-6	DEFECT
// y date format	WITHOUT_CLASSIFICATION	0.9999973179162848	WITHOUT_CLASSIFICATION	2.682083715165682E-6	DEFECT
// z date format	WITHOUT_CLASSIFICATION	0.9999990672357542	WITHOUT_CLASSIFICATION	9.327642457950179E-7	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.999860153730395	WITHOUT_CLASSIFICATION	1.398462696049742E-4	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999989010027747	WITHOUT_CLASSIFICATION	1.0989972253643226E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999983313770554	WITHOUT_CLASSIFICATION	1.6686229446689602E-6	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.999998932053292	WITHOUT_CLASSIFICATION	1.067946707924538E-6	DEFECT
// separatorsVisible	WITHOUT_CLASSIFICATION	0.9999999648226804	WITHOUT_CLASSIFICATION	3.517731958670157E-8	DEFECT
// separatorStroke	WITHOUT_CLASSIFICATION	0.9999989228193737	WITHOUT_CLASSIFICATION	1.0771806262529876E-6	DEFECT
// separatorPaint	WITHOUT_CLASSIFICATION	0.9999999851612129	WITHOUT_CLASSIFICATION	1.483878699707515E-8	DEFECT
// outerSeparatorExtension	WITHOUT_CLASSIFICATION	0.9999995690531065	WITHOUT_CLASSIFICATION	4.309468934147691E-7	DEFECT
// sectionDepth	WITHOUT_CLASSIFICATION	0.9999995151364409	WITHOUT_CLASSIFICATION	4.848635591321155E-7	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999787395356633	WITHOUT_CLASSIFICATION	2.1260464336743263E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999957739377946	WITHOUT_CLASSIFICATION	4.226062205458334E-6	DEFECT
// domainAxes...	WITHOUT_CLASSIFICATION	0.9999839112885325	WITHOUT_CLASSIFICATION	1.608871146753435E-5	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999995568405152	WITHOUT_CLASSIFICATION	4.431594848212126E-7	DEFECT
// TBLRC // 11001	WITHOUT_CLASSIFICATION	0.9999955237475621	WITHOUT_CLASSIFICATION	4.4762524379534795E-6	DEFECT
// TBLRC // 11010 - top, bottom and right	WITHOUT_CLASSIFICATION	0.9999965496288831	WITHOUT_CLASSIFICATION	3.4503711168562557E-6	DEFECT
// TBLRC // 11011	WITHOUT_CLASSIFICATION	0.9999976866608681	WITHOUT_CLASSIFICATION	2.3133391319445384E-6	DEFECT
// TBLRC // 11100	WITHOUT_CLASSIFICATION	0.9999959331243222	WITHOUT_CLASSIFICATION	4.0668756778185935E-6	DEFECT
// TBLRC // 11101	WITHOUT_CLASSIFICATION	0.999997312392035	WITHOUT_CLASSIFICATION	2.687607965013645E-6	DEFECT
// TBLRC // 11110	WITHOUT_CLASSIFICATION	0.9999981025018869	WITHOUT_CLASSIFICATION	1.89749811314518E-6	DEFECT
// check handling when the dataset is a regular XYDataset, not an // XYZDataset...	WITHOUT_CLASSIFICATION	0.9995464756752342	WITHOUT_CLASSIFICATION	4.5352432476566273E-4	DEFECT
// domainAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9998965209133707	WITHOUT_CLASSIFICATION	1.0347908662932096E-4	DEFECT
// domainAxisLocations...	WITHOUT_CLASSIFICATION	0.9999963250862485	WITHOUT_CLASSIFICATION	3.674913751518525E-6	DEFECT
// draw shared domain axis...	WITHOUT_CLASSIFICATION	0.9999997414391563	WITHOUT_CLASSIFICATION	2.5856084367702295E-7	DEFECT
// rangeAxes...	WITHOUT_CLASSIFICATION	0.9999983437628162	WITHOUT_CLASSIFICATION	1.6562371838971631E-6	DEFECT
// rangeAxisLocation - no longer a separate field but test anyway...	WITHOUT_CLASSIFICATION	0.9999164878556966	WITHOUT_CLASSIFICATION	8.351214430328067E-5	DEFECT
// rangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999995289445551	WITHOUT_CLASSIFICATION	4.710554448399797E-7	DEFECT
// datasetToDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999973142389956	WITHOUT_CLASSIFICATION	2.685761004397465E-6	DEFECT
// datasetToRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9999879805163282	WITHOUT_CLASSIFICATION	1.2019483671854226E-5	DEFECT
// renderers...	WITHOUT_CLASSIFICATION	0.999980815204028	WITHOUT_CLASSIFICATION	1.9184795971900856E-5	DEFECT
// rendering order...	WITHOUT_CLASSIFICATION	0.9999407983257693	WITHOUT_CLASSIFICATION	5.920167423062074E-5	DEFECT
// columnRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999807898408244	WITHOUT_CLASSIFICATION	1.9210159175586195E-5	DEFECT
// rowRenderingOrder...	WITHOUT_CLASSIFICATION	0.9999145149407487	WITHOUT_CLASSIFICATION	8.548505925139541E-5	DEFECT
// domainGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999251728674	WITHOUT_CLASSIFICATION	7.482713259296863E-8	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999931115967015	WITHOUT_CLASSIFICATION	6.888403298597818E-6	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999997595478319	WITHOUT_CLASSIFICATION	2.404521680399159E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999777706443	WITHOUT_CLASSIFICATION	2.222935565010561E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999964876871934	WITHOUT_CLASSIFICATION	3.512312806578455E-6	DEFECT
// rangeGridlinePaint	WITHOUT_CLASSIFICATION	0.9999999547159657	WITHOUT_CLASSIFICATION	4.528403436504616E-8	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999998710005076	WITHOUT_CLASSIFICATION	1.289994924462001E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999998601650463	WITHOUT_CLASSIFICATION	1.3983495371945784E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999974969713059	WITHOUT_CLASSIFICATION	2.503028694159624E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999998663290368	WITHOUT_CLASSIFICATION	1.3367096321625188E-7	DEFECT
// foreground domain markers	WITHOUT_CLASSIFICATION	0.9999999159906284	WITHOUT_CLASSIFICATION	8.400937156770286E-8	DEFECT
// background domain markers	WITHOUT_CLASSIFICATION	0.9999998974773756	WITHOUT_CLASSIFICATION	1.0252262442086817E-7	DEFECT
// foreground range markers...	WITHOUT_CLASSIFICATION	0.9999981469791668	WITHOUT_CLASSIFICATION	1.8530208332027705E-6	DEFECT
// background range markers...	WITHOUT_CLASSIFICATION	0.999997738627473	WITHOUT_CLASSIFICATION	2.261372526910035E-6	DEFECT
// annotations	WITHOUT_CLASSIFICATION	0.999999680671714	WITHOUT_CLASSIFICATION	3.193282859355012E-7	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999967099506015	WITHOUT_CLASSIFICATION	3.290049398527306E-6	DEFECT
// fixed domain axis space...	WITHOUT_CLASSIFICATION	0.9999679273082518	WITHOUT_CLASSIFICATION	3.2072691748280883E-5	DEFECT
// fixed range axis space...	WITHOUT_CLASSIFICATION	0.9999894464439553	WITHOUT_CLASSIFICATION	1.055355604470629E-5	DEFECT
// crosshairDatasetIndex	WITHOUT_CLASSIFICATION	0.9999964109693925	WITHOUT_CLASSIFICATION	3.5890306074170054E-6	DEFECT
// domainCrosshairColumnKey	WITHOUT_CLASSIFICATION	0.9999995657775909	WITHOUT_CLASSIFICATION	4.342224090896576E-7	DEFECT
// domainCrosshairRowKey	WITHOUT_CLASSIFICATION	0.9999993825238673	WITHOUT_CLASSIFICATION	6.174761327962342E-7	DEFECT
// domainCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999997105099322	WITHOUT_CLASSIFICATION	2.8949006776517024E-7	DEFECT
// domainCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999943829251388	WITHOUT_CLASSIFICATION	5.617074861240448E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999999617395328	WITHOUT_CLASSIFICATION	3.8260467324667384E-8	DEFECT
// check for independence	WITHOUT_CLASSIFICATION	0.9999997862212112	WITHOUT_CLASSIFICATION	2.1377878874994206E-7	DEFECT
// we didn't get an exception so all is good	WITHOUT_CLASSIFICATION	0.9999933696088672	WITHOUT_CLASSIFICATION	6.630391132740483E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999949459203451	WITHOUT_CLASSIFICATION	5.054079654879179E-6	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999949459203451	WITHOUT_CLASSIFICATION	5.054079654879179E-6	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999949082512106	WITHOUT_CLASSIFICATION	5.091748789447269E-6	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.999998541800435	WITHOUT_CLASSIFICATION	1.4581995650623468E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999995576283854	WITHOUT_CLASSIFICATION	4.423716145998964E-7	DEFECT
// dial outline paint	WITHOUT_CLASSIFICATION	0.9999993112973049	WITHOUT_CLASSIFICATION	6.887026950648966E-7	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999974540575698	WITHOUT_CLASSIFICATION	2.545942430091946E-6	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999249918599605	WITHOUT_CLASSIFICATION	7.500814003939804E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999986426210968	WITHOUT_CLASSIFICATION	1.3573789032139785E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999986426210968	WITHOUT_CLASSIFICATION	1.3573789032139785E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999986426210968	WITHOUT_CLASSIFICATION	1.3573789032139785E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999968024469719	WITHOUT_CLASSIFICATION	3.197553028201711E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999860090450698	WITHOUT_CLASSIFICATION	1.3990954930146249E-5	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999996776167397	WITHOUT_CLASSIFICATION	3.22383260392764E-7	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999996776167397	WITHOUT_CLASSIFICATION	3.22383260392764E-7	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999979051123384	WITHOUT_CLASSIFICATION	2.0948876615156394E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.999997820832696	WITHOUT_CLASSIFICATION	2.1791673039841793E-6	DEFECT
// needle paint	WITHOUT_CLASSIFICATION	0.9999998805793948	WITHOUT_CLASSIFICATION	1.1942060522032303E-7	DEFECT
// value font	WITHOUT_CLASSIFICATION	0.9999969757981159	WITHOUT_CLASSIFICATION	3.024201884177243E-6	DEFECT
// value paint	WITHOUT_CLASSIFICATION	0.9999989370101222	WITHOUT_CLASSIFICATION	1.0629898777334613E-6	DEFECT
// tick label font	WITHOUT_CLASSIFICATION	0.9999982405868002	WITHOUT_CLASSIFICATION	1.759413199783878E-6	DEFECT
// tick label paint	WITHOUT_CLASSIFICATION	0.9999995158883737	WITHOUT_CLASSIFICATION	4.84111626402236E-7	DEFECT
// tick label format	WITHOUT_CLASSIFICATION	0.9999995811832624	WITHOUT_CLASSIFICATION	4.1881673752683947E-7	DEFECT
// tick paint	WITHOUT_CLASSIFICATION	0.9999988339493848	WITHOUT_CLASSIFICATION	1.166050615141892E-6	DEFECT
// draw border	WITHOUT_CLASSIFICATION	0.9999999184131738	WITHOUT_CLASSIFICATION	8.15868261389149E-8	DEFECT
// meter angle	WITHOUT_CLASSIFICATION	0.9999997747851389	WITHOUT_CLASSIFICATION	2.2521486117233231E-7	DEFECT
//key	WITHOUT_CLASSIFICATION	0.999851119214537	WITHOUT_CLASSIFICATION	1.4888078546303462E-4	DEFECT
//paint	WITHOUT_CLASSIFICATION	0.9999932249731635	WITHOUT_CLASSIFICATION	6.775026836492504E-6	DEFECT
//stroke	WITHOUT_CLASSIFICATION	0.9999111097335116	WITHOUT_CLASSIFICATION	8.88902664882919E-5	DEFECT
//outlinePaint	WITHOUT_CLASSIFICATION	0.9999969091027963	WITHOUT_CLASSIFICATION	3.0908972036130096E-6	DEFECT
//outlineStroke	WITHOUT_CLASSIFICATION	0.9998628900762718	WITHOUT_CLASSIFICATION	1.3710992372822228E-4	DEFECT
//alpha	WITHOUT_CLASSIFICATION	0.9999915643126283	WITHOUT_CLASSIFICATION	8.435687371765612E-6	DEFECT
// check null argument...	WITHOUT_CLASSIFICATION	0.9999994171753589	WITHOUT_CLASSIFICATION	5.828246410305201E-7	DEFECT
// drawBorder	WITHOUT_CLASSIFICATION	0.999999530179086	WITHOUT_CLASSIFICATION	4.6982091396454737E-7	DEFECT
// rosePaint	WITHOUT_CLASSIFICATION	0.9999998368810171	WITHOUT_CLASSIFICATION	1.6311898287509074E-7	DEFECT
// roseCenterPaint	WITHOUT_CLASSIFICATION	0.9999999078810314	WITHOUT_CLASSIFICATION	9.211896851856456E-8	DEFECT
// roseHighlightPaint	WITHOUT_CLASSIFICATION	0.9999998645833101	WITHOUT_CLASSIFICATION	1.3541668978232568E-7	DEFECT
// interiorGap...	WITHOUT_CLASSIFICATION	0.9999967750947204	WITHOUT_CLASSIFICATION	3.2249052796036508E-6	DEFECT
// circular	WITHOUT_CLASSIFICATION	0.9999998556073187	WITHOUT_CLASSIFICATION	1.443926812931068E-7	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999817961819787	WITHOUT_CLASSIFICATION	1.820381802124859E-5	DEFECT
// ignoreNullValues	WITHOUT_CLASSIFICATION	0.9999999812699863	WITHOUT_CLASSIFICATION	1.8730013645551725E-8	DEFECT
// sectionPaint	WITHOUT_CLASSIFICATION	0.9999997651853001	WITHOUT_CLASSIFICATION	2.3481470000420501E-7	DEFECT
// sectionPaintMap	WITHOUT_CLASSIFICATION	0.9999997523734272	WITHOUT_CLASSIFICATION	2.476265728809313E-7	DEFECT
// baseSectionPaint	WITHOUT_CLASSIFICATION	0.9999999196921243	WITHOUT_CLASSIFICATION	8.030787572209601E-8	DEFECT
// sectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999998334721667	WITHOUT_CLASSIFICATION	1.6652783320224804E-7	DEFECT
// sectionOutlinePaintList	WITHOUT_CLASSIFICATION	0.9999998855711774	WITHOUT_CLASSIFICATION	1.1442882258970523E-7	DEFECT
// baseSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999430465983	WITHOUT_CLASSIFICATION	5.695340169049587E-8	DEFECT
// sectionOutlineStrokeList	WITHOUT_CLASSIFICATION	0.9999951255671439	WITHOUT_CLASSIFICATION	4.874432856086092E-6	DEFECT
// baseSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999983975141414	WITHOUT_CLASSIFICATION	1.6024858586350035E-6	DEFECT
// shadowPaint	WITHOUT_CLASSIFICATION	0.9999996425687474	WITHOUT_CLASSIFICATION	3.5743125256527165E-7	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999991711890887	WITHOUT_CLASSIFICATION	8.288109114113242E-7	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999997550602352	WITHOUT_CLASSIFICATION	2.4493976481665947E-7	DEFECT
// labelOutlinePaint	WITHOUT_CLASSIFICATION	0.9999997760413165	WITHOUT_CLASSIFICATION	2.2395868348448208E-7	DEFECT
// labelOutlineStroke	WITHOUT_CLASSIFICATION	0.9999922051072725	WITHOUT_CLASSIFICATION	7.794892727538503E-6	DEFECT
// labelShadowPaint	WITHOUT_CLASSIFICATION	0.9999993743707717	WITHOUT_CLASSIFICATION	6.256292281843851E-7	DEFECT
// explodePercentages	WITHOUT_CLASSIFICATION	0.999999868332683	WITHOUT_CLASSIFICATION	1.316673170658431E-7	DEFECT
// backgroundImage	WITHOUT_CLASSIFICATION	0.9999994597823176	WITHOUT_CLASSIFICATION	5.402176822848442E-7	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999999089801688	WITHOUT_CLASSIFICATION	9.101983127025436E-8	DEFECT
// backgroundImageAlignment	WITHOUT_CLASSIFICATION	0.9999995964180549	WITHOUT_CLASSIFICATION	4.035819450908968E-7	DEFECT
// backgroundImageAlpha	WITHOUT_CLASSIFICATION	0.9999995732314396	WITHOUT_CLASSIFICATION	4.2676856043077234E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999995469877823	WITHOUT_CLASSIFICATION	4.530122176953993E-7	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999999617395328	WITHOUT_CLASSIFICATION	3.8260467324667384E-8	DEFECT
// direction	WITHOUT_CLASSIFICATION	0.9999817961819787	WITHOUT_CLASSIFICATION	1.820381802124859E-5	DEFECT
// labelLinkPaint	WITHOUT_CLASSIFICATION	0.99999968296553	WITHOUT_CLASSIFICATION	3.170344699991228E-7	DEFECT
// maximumLabelWidth	WITHOUT_CLASSIFICATION	0.9999999105502806	WITHOUT_CLASSIFICATION	8.944971939175394E-8	DEFECT
// links visible	WITHOUT_CLASSIFICATION	0.9999996931529137	WITHOUT_CLASSIFICATION	3.0684708636410176E-7	DEFECT
// labelGap	WITHOUT_CLASSIFICATION	0.9999993715734979	WITHOUT_CLASSIFICATION	6.284265020702353E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999500800181	WITHOUT_CLASSIFICATION	4.9919981847128804E-8	DEFECT
// linkMargin	WITHOUT_CLASSIFICATION	0.9999991314048041	WITHOUT_CLASSIFICATION	8.68595195816549E-7	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999988188116674	WITHOUT_CLASSIFICATION	1.1811883326007944E-6	DEFECT
// labelLinkStroke	WITHOUT_CLASSIFICATION	0.9999915477909155	WITHOUT_CLASSIFICATION	8.452209084446173E-6	DEFECT
// minimumArcAngleToDraw	WITHOUT_CLASSIFICATION	0.9999999827562073	WITHOUT_CLASSIFICATION	1.7243792729531788E-8	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999604410026	WITHOUT_CLASSIFICATION	3.955899749689296E-8	DEFECT
// legendLabelGenerator	WITHOUT_CLASSIFICATION	0.9999998361537287	WITHOUT_CLASSIFICATION	1.6384627137093873E-7	DEFECT
// legendItemShape	WITHOUT_CLASSIFICATION	0.9999988188116674	WITHOUT_CLASSIFICATION	1.1811883326007944E-6	DEFECT
// legendLabelToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999754047442	WITHOUT_CLASSIFICATION	2.4595255836492805E-8	DEFECT
// legendLabelURLGenerator	WITHOUT_CLASSIFICATION	0.9999998707681356	WITHOUT_CLASSIFICATION	1.2923186448162435E-7	DEFECT
// autoPopulateSectionPaint	WITHOUT_CLASSIFICATION	0.9999999754753282	WITHOUT_CLASSIFICATION	2.4524671783492037E-8	DEFECT
// autoPopulateSectionOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999209750408	WITHOUT_CLASSIFICATION	7.902495922908704E-8	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996324277104	WITHOUT_CLASSIFICATION	3.6757228949745344E-7	DEFECT
// autoPopulateSectionOutlineStroke	WITHOUT_CLASSIFICATION	0.9999979557084531	WITHOUT_CLASSIFICATION	2.0442915469028665E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999966569309511	WITHOUT_CLASSIFICATION	3.3430690490300706E-6	DEFECT
// check that the URL generator has been cloned	WITHOUT_CLASSIFICATION	0.9999966569309511	WITHOUT_CLASSIFICATION	3.3430690490300706E-6	DEFECT
// change the shape and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999989370891861	WITHOUT_CLASSIFICATION	1.0629108139858138E-6	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999990398442017	WITHOUT_CLASSIFICATION	9.601557983600982E-7	DEFECT
// change the generator and make sure it only affects p1	WITHOUT_CLASSIFICATION	0.9999990398442017	WITHOUT_CLASSIFICATION	9.601557983600982E-7	DEFECT
// check that null items are ignored if requested	WITHOUT_CLASSIFICATION	0.999999998127906	WITHOUT_CLASSIFICATION	1.872094012841891E-9	DEFECT
// check that zero items are ignored if requested	WITHOUT_CLASSIFICATION	0.9999999994434638	WITHOUT_CLASSIFICATION	5.565360742953135E-10	DEFECT
// check that negative items are always ignored	WITHOUT_CLASSIFICATION	0.9999999877467534	WITHOUT_CLASSIFICATION	1.2253246640708231E-8	DEFECT
// noDataMessage	WITHOUT_CLASSIFICATION	0.9999998473479926	WITHOUT_CLASSIFICATION	1.5265200738372523E-7	DEFECT
// noDataMessageFont	WITHOUT_CLASSIFICATION	0.9999998614683944	WITHOUT_CLASSIFICATION	1.3853160561981965E-7	DEFECT
// noDataMessagePaint	WITHOUT_CLASSIFICATION	0.9999999129304767	WITHOUT_CLASSIFICATION	8.706952321533458E-8	DEFECT
// outlineVisible	WITHOUT_CLASSIFICATION	0.999999542455611	WITHOUT_CLASSIFICATION	4.5754438903928014E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999799024129303	WITHOUT_CLASSIFICATION	2.0097587069773004E-5	DEFECT
// foregroundAlpha	WITHOUT_CLASSIFICATION	0.9999992908889966	WITHOUT_CLASSIFICATION	7.091110033933985E-7	DEFECT
// backgroundAlpha	WITHOUT_CLASSIFICATION	0.9999979698636551	WITHOUT_CLASSIFICATION	2.03013634486326E-6	DEFECT
// drawingSupplier	WITHOUT_CLASSIFICATION	0.999999935394548	WITHOUT_CLASSIFICATION	6.460545203429803E-8	DEFECT
// try a null collection	WITHOUT_CLASSIFICATION	0.9999929167916631	WITHOUT_CLASSIFICATION	7.083208336863235E-6	DEFECT
// dataExtractOrder	WITHOUT_CLASSIFICATION	0.9999996980258152	WITHOUT_CLASSIFICATION	3.01974184699904E-7	DEFECT
// headPercent	WITHOUT_CLASSIFICATION	0.9999996582813114	WITHOUT_CLASSIFICATION	3.417186886024689E-7	DEFECT
// interiorGap	WITHOUT_CLASSIFICATION	0.9999998158343775	WITHOUT_CLASSIFICATION	1.8416562246059308E-7	DEFECT
// maxValue	WITHOUT_CLASSIFICATION	0.9999993203315056	WITHOUT_CLASSIFICATION	6.7966849432717E-7	DEFECT
// secondary renderers	WITHOUT_CLASSIFICATION	0.9999873472463996	WITHOUT_CLASSIFICATION	1.2652753600446428E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999497517231014	WITHOUT_CLASSIFICATION	5.02482768986322E-5	DEFECT
// row keys...	WITHOUT_CLASSIFICATION	0.9999497517231014	WITHOUT_CLASSIFICATION	5.02482768986322E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999661009345528	WITHOUT_CLASSIFICATION	3.389906544707532E-5	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999939708926787	WITHOUT_CLASSIFICATION	6.0291073212910365E-6	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999661009345528	WITHOUT_CLASSIFICATION	3.389906544707532E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999661009345528	WITHOUT_CLASSIFICATION	3.389906544707532E-5	DEFECT
// column keys...	WITHOUT_CLASSIFICATION	0.9999661009345528	WITHOUT_CLASSIFICATION	3.389906544707532E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// labelFont	WITHOUT_CLASSIFICATION	0.999998541800435	WITHOUT_CLASSIFICATION	1.4581995650623468E-6	DEFECT
// labelPaint	WITHOUT_CLASSIFICATION	0.9999995576283854	WITHOUT_CLASSIFICATION	4.423716145998964E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
// axisLinePaint	WITHOUT_CLASSIFICATION	0.9999999682322939	WITHOUT_CLASSIFICATION	3.1767706139906354E-8	DEFECT
// axisLineStroke	WITHOUT_CLASSIFICATION	0.9999988147427624	WITHOUT_CLASSIFICATION	1.1852572375812273E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.999860153730395	WITHOUT_CLASSIFICATION	1.398462696049742E-4	DEFECT
// orientation...	WITHOUT_CLASSIFICATION	0.9999787395356633	WITHOUT_CLASSIFICATION	2.1260464336743263E-5	DEFECT
// axisOffset...	WITHOUT_CLASSIFICATION	0.9999957739377946	WITHOUT_CLASSIFICATION	4.226062205458334E-6	DEFECT
// labelGenerator	WITHOUT_CLASSIFICATION	0.9999998780964412	WITHOUT_CLASSIFICATION	1.2190355876632968E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999500800181	WITHOUT_CLASSIFICATION	4.9919981847128804E-8	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999604410026	WITHOUT_CLASSIFICATION	3.955899749689296E-8	DEFECT
// change a series paint	WITHOUT_CLASSIFICATION	0.9999999678301309	WITHOUT_CLASSIFICATION	3.2169869096099796E-8	DEFECT
// baseSeriesOutlineStroke	WITHOUT_CLASSIFICATION	0.999999040841908	WITHOUT_CLASSIFICATION	9.59158091908401E-7	DEFECT
// valueFont	WITHOUT_CLASSIFICATION	0.9999978367179713	WITHOUT_CLASSIFICATION	2.1632820287782697E-6	DEFECT
// webFilled	WITHOUT_CLASSIFICATION	0.9999997376596007	WITHOUT_CLASSIFICATION	2.62340399269184E-7	DEFECT
// change a series outline paint	WITHOUT_CLASSIFICATION	0.999999956287013	WITHOUT_CLASSIFICATION	4.3712987102019303E-8	DEFECT
// axisLabelGap	WITHOUT_CLASSIFICATION	0.9999999692809914	WITHOUT_CLASSIFICATION	3.0719008490128535E-8	DEFECT
// thermometerPaint	WITHOUT_CLASSIFICATION	0.9999997494739604	WITHOUT_CLASSIFICATION	2.5052603956265676E-7	DEFECT
// change the legendItemShape	WITHOUT_CLASSIFICATION	0.9999999145919813	WITHOUT_CLASSIFICATION	8.54080187661974E-8	DEFECT
// secondary DomainAxisLocations...	WITHOUT_CLASSIFICATION	0.999988196218185	WITHOUT_CLASSIFICATION	1.1803781814883155E-5	DEFECT
// change a series outline stroke	WITHOUT_CLASSIFICATION	0.999997741620088	WITHOUT_CLASSIFICATION	2.2583799119519476E-6	DEFECT
// valueLocation	WITHOUT_CLASSIFICATION	0.9999977029759821	WITHOUT_CLASSIFICATION	2.2970240178491386E-6	DEFECT
// thermometerStroke	WITHOUT_CLASSIFICATION	0.999955979051849	WITHOUT_CLASSIFICATION	4.4020948150995714E-5	DEFECT
// valuePaint	WITHOUT_CLASSIFICATION	0.9999991817904738	WITHOUT_CLASSIFICATION	8.182095262740001E-7	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999997163657065	WITHOUT_CLASSIFICATION	2.8363429350381654E-7	DEFECT
// showValueLines	WITHOUT_CLASSIFICATION	0.9999997670778246	WITHOUT_CLASSIFICATION	2.329221755023311E-7	DEFECT
// domainAxisLocation...	WITHOUT_CLASSIFICATION	0.9999903896684458	WITHOUT_CLASSIFICATION	9.610331554298025E-6	DEFECT
// valueFormat	WITHOUT_CLASSIFICATION	0.9999991302658698	WITHOUT_CLASSIFICATION	8.697341301004962E-7	DEFECT
// this doesn't work	WITHOUT_CLASSIFICATION	0.9771077653290966	WITHOUT_CLASSIFICATION	0.02289223467090341	DEFECT
// mercuryPaint	WITHOUT_CLASSIFICATION	0.999999934325835	WITHOUT_CLASSIFICATION	6.567416507055251E-8	DEFECT
// rangeAxisLocation...	WITHOUT_CLASSIFICATION	0.9999987681282508	WITHOUT_CLASSIFICATION	1.2318717491399437E-6	DEFECT
// domainAxis...	WITHOUT_CLASSIFICATION	0.9999882823234131	WITHOUT_CLASSIFICATION	1.1717676586813435E-5	DEFECT
// secondary DomainAxes...	WITHOUT_CLASSIFICATION	0.9999672568003253	WITHOUT_CLASSIFICATION	3.274319967477971E-5	DEFECT
// secondary RangeAxisLocations...	WITHOUT_CLASSIFICATION	0.9999073830295658	WITHOUT_CLASSIFICATION	9.261697043407368E-5	DEFECT
// rangeAxis...	WITHOUT_CLASSIFICATION	0.9999991248866785	WITHOUT_CLASSIFICATION	8.751133216269588E-7	DEFECT
// renderer	WITHOUT_CLASSIFICATION	0.9999948206786233	WITHOUT_CLASSIFICATION	5.179321376609612E-6	DEFECT
// secondary RangeAxes...	WITHOUT_CLASSIFICATION	0.9997533943694141	WITHOUT_CLASSIFICATION	2.4660563058592007E-4	DEFECT
// secondaryDatasetRangeAxisMap...	WITHOUT_CLASSIFICATION	0.9998353123922319	WITHOUT_CLASSIFICATION	1.646876077681146E-4	DEFECT
// secondary DatasetDomainAxisMap...	WITHOUT_CLASSIFICATION	0.9999513552231881	WITHOUT_CLASSIFICATION	4.864477681187892E-5	DEFECT
// try a collection with a single number plus a null	WITHOUT_CLASSIFICATION	0.9999855695657065	WITHOUT_CLASSIFICATION	1.443043429353951E-5	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999997693344819	WITHOUT_CLASSIFICATION	2.3066551802473488E-7	DEFECT
// create dataset 1...	WITHOUT_CLASSIFICATION	0.9999997693344819	WITHOUT_CLASSIFICATION	2.3066551802473488E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999954723414243	WITHOUT_CLASSIFICATION	4.527658575778175E-6	DEFECT
// remove plot2, but plot1 is removed instead	WITHOUT_CLASSIFICATION	0.999860153730395	WITHOUT_CLASSIFICATION	1.398462696049742E-4	DEFECT
// create subplot 1...	WITHOUT_CLASSIFICATION	0.9999989010027747	WITHOUT_CLASSIFICATION	1.0989972253643226E-6	DEFECT
// create subplot 2...	WITHOUT_CLASSIFICATION	0.9999983313770554	WITHOUT_CLASSIFICATION	1.6686229446689602E-6	DEFECT
// parent plot...	WITHOUT_CLASSIFICATION	0.9995197697335886	WITHOUT_CLASSIFICATION	4.802302664114482E-4	DEFECT
// add the subplots...	WITHOUT_CLASSIFICATION	0.999998932053292	WITHOUT_CLASSIFICATION	1.067946707924538E-6	DEFECT
// domainGridlineStroke	WITHOUT_CLASSIFICATION	0.9999931115967015	WITHOUT_CLASSIFICATION	6.888403298597818E-6	DEFECT
// domainGridlinePaint	WITHOUT_CLASSIFICATION	0.9999997595478319	WITHOUT_CLASSIFICATION	2.404521680399159E-7	DEFECT
// rangeGridlinesVisible	WITHOUT_CLASSIFICATION	0.9999999777706443	WITHOUT_CLASSIFICATION	2.222935565010561E-8	DEFECT
// rangeGridlineStroke	WITHOUT_CLASSIFICATION	0.9999964876871934	WITHOUT_CLASSIFICATION	3.512312806578455E-6	DEFECT
// rangeCrosshairVisible	WITHOUT_CLASSIFICATION	0.9999998710005076	WITHOUT_CLASSIFICATION	1.289994924462001E-7	DEFECT
// rangeCrosshairValue	WITHOUT_CLASSIFICATION	0.9999998601650463	WITHOUT_CLASSIFICATION	1.3983495371945784E-7	DEFECT
// rangeCrosshairStroke	WITHOUT_CLASSIFICATION	0.9999974969713059	WITHOUT_CLASSIFICATION	2.503028694159624E-6	DEFECT
// rangeCrosshairLockedOnData	WITHOUT_CLASSIFICATION	0.9999998663290368	WITHOUT_CLASSIFICATION	1.3367096321625188E-7	DEFECT
// weight	WITHOUT_CLASSIFICATION	0.9999967099506015	WITHOUT_CLASSIFICATION	3.290049398527306E-6	DEFECT
// fixed legend items	WITHOUT_CLASSIFICATION	0.9999981050347904	WITHOUT_CLASSIFICATION	1.894965209684877E-6	DEFECT
// shadowGenerator	WITHOUT_CLASSIFICATION	0.9999999617395328	WITHOUT_CLASSIFICATION	3.8260467324667384E-8	DEFECT
// should get IllegalArgumentException for negative index	WITHOUT_CLASSIFICATION	0.9999949459203451	WITHOUT_CLASSIFICATION	5.054079654879179E-6	DEFECT
// we should be able to give a dataset an arbitrary index	WITHOUT_CLASSIFICATION	0.9999949082512106	WITHOUT_CLASSIFICATION	5.091748789447269E-6	DEFECT
// we should be able to give a renderer an arbitrary index	WITHOUT_CLASSIFICATION	0.9999249918599605	WITHOUT_CLASSIFICATION	7.500814003939804E-5	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999986426210968	WITHOUT_CLASSIFICATION	1.3573789032139785E-6	DEFECT
// add a second dataset	WITHOUT_CLASSIFICATION	0.9999986426210968	WITHOUT_CLASSIFICATION	1.3573789032139785E-6	DEFECT
// by default, the renderer with index 0 is used	WITHOUT_CLASSIFICATION	0.9999968024469719	WITHOUT_CLASSIFICATION	3.197553028201711E-6	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999996776167397	WITHOUT_CLASSIFICATION	3.22383260392764E-7	DEFECT
// now map the dataset to the second xAxis	WITHOUT_CLASSIFICATION	0.9999996776167397	WITHOUT_CLASSIFICATION	3.22383260392764E-7	DEFECT
// add a second dataset, plotted against a second x axis	WITHOUT_CLASSIFICATION	0.9999979051123384	WITHOUT_CLASSIFICATION	2.0948876615156394E-6	DEFECT
// add a second dataset, plotted against a second axis	WITHOUT_CLASSIFICATION	0.999997820832696	WITHOUT_CLASSIFICATION	2.1791673039841793E-6	DEFECT
// rangeZeroBaselineVisible	WITHOUT_CLASSIFICATION	0.9999999381511117	WITHOUT_CLASSIFICATION	6.184888834655784E-8	DEFECT
// rangeZeroBaselineStroke	WITHOUT_CLASSIFICATION	0.999998952844904	WITHOUT_CLASSIFICATION	1.0471550959854415E-6	DEFECT
// rangeZeroBaselinePaint	WITHOUT_CLASSIFICATION	0.9999999468395865	WITHOUT_CLASSIFICATION	5.3160413470671384E-8	DEFECT
// range markers	WITHOUT_CLASSIFICATION	0.9999998589417285	WITHOUT_CLASSIFICATION	1.4105827158502612E-7	DEFECT
// secondary range markers	WITHOUT_CLASSIFICATION	0.999995424699216	WITHOUT_CLASSIFICATION	4.5753007840243415E-6	DEFECT
// quadrant origin	WITHOUT_CLASSIFICATION	0.9999995908556224	WITHOUT_CLASSIFICATION	4.091443776142394E-7	DEFECT
// quadrant paint	WITHOUT_CLASSIFICATION	0.9999998779123163	WITHOUT_CLASSIFICATION	1.2208768377151548E-7	DEFECT
// verify that the plot is listening to the cloned renderer	WITHOUT_CLASSIFICATION	0.9999983824632269	WITHOUT_CLASSIFICATION	1.617536773083678E-6	DEFECT
// no renderer 1	WITHOUT_CLASSIFICATION	0.9999982090210302	WITHOUT_CLASSIFICATION	1.7909789697722305E-6	DEFECT
// actually removes a1	WITHOUT_CLASSIFICATION	0.9999931413741737	WITHOUT_CLASSIFICATION	6.858625826199606E-6	DEFECT
// set up some objects...	WITHOUT_CLASSIFICATION	0.9999998188089141	WITHOUT_CLASSIFICATION	1.8119108595115946E-7	DEFECT
// paint sequence	WITHOUT_CLASSIFICATION	0.9999999307256988	WITHOUT_CLASSIFICATION	6.927430113806609E-8	DEFECT
// outline paint sequence	WITHOUT_CLASSIFICATION	0.9999999025901577	WITHOUT_CLASSIFICATION	9.740984227520694E-8	DEFECT
// outline stroke sequence	WITHOUT_CLASSIFICATION	0.9999898234252642	WITHOUT_CLASSIFICATION	1.0176574735833929E-5	DEFECT
// shape sequence	WITHOUT_CLASSIFICATION	0.9999999253797206	WITHOUT_CLASSIFICATION	7.462027942437466E-8	DEFECT
// paint index	WITHOUT_CLASSIFICATION	0.9999840638153343	WITHOUT_CLASSIFICATION	1.593618466570274E-5	DEFECT
// outline paint index	WITHOUT_CLASSIFICATION	0.9999841967407257	WITHOUT_CLASSIFICATION	1.5803259274228647E-5	DEFECT
// outline stroke index	WITHOUT_CLASSIFICATION	0.9998574671058449	WITHOUT_CLASSIFICATION	1.425328941550976E-4	DEFECT
// shape index	WITHOUT_CLASSIFICATION	0.9999985106348678	WITHOUT_CLASSIFICATION	1.4893651321232507E-6	DEFECT
// create dataset 2...	WITHOUT_CLASSIFICATION	0.9999996514112479	WITHOUT_CLASSIFICATION	3.485887520669601E-7	DEFECT
// lowerBound	WITHOUT_CLASSIFICATION	0.9999954723414243	WITHOUT_CLASSIFICATION	4.527658575778175E-6	DEFECT
// upperBound	WITHOUT_CLASSIFICATION	0.9999959501442448	WITHOUT_CLASSIFICATION	4.049855755135943E-6	DEFECT
// startAngle	WITHOUT_CLASSIFICATION	0.9999999089801688	WITHOUT_CLASSIFICATION	9.101983127025436E-8	DEFECT
// extent	WITHOUT_CLASSIFICATION	0.9999970960298308	WITHOUT_CLASSIFICATION	2.903970169171595E-6	DEFECT
// tickRadius	WITHOUT_CLASSIFICATION	0.9999981238551283	WITHOUT_CLASSIFICATION	1.8761448717181261E-6	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999988096232734	WITHOUT_CLASSIFICATION	1.190376726602188E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999995469877823	WITHOUT_CLASSIFICATION	4.530122176953993E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999962189111663	WITHOUT_CLASSIFICATION	3.7810888337489352E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999988218102566	WITHOUT_CLASSIFICATION	1.178189743475941E-6	DEFECT
// textAnchor	WITHOUT_CLASSIFICATION	0.9999980519192978	WITHOUT_CLASSIFICATION	1.9480807022553323E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999826501744082	WITHOUT_CLASSIFICATION	1.73498255917082E-5	DEFECT
// now make a change to the renderer and see if it triggers a plot // change event...	WITHOUT_CLASSIFICATION	0.9999847015116402	WITHOUT_CLASSIFICATION	1.5298488359721398E-5	DEFECT
// if multiple axes are mapped, the first in the list should be // returned...	WITHOUT_CLASSIFICATION	0.9999974540575698	WITHOUT_CLASSIFICATION	2.545942430091946E-6	DEFECT
// add a second renderer with the same index as dataset2, now it will // be used	WITHOUT_CLASSIFICATION	0.9999860090450698	WITHOUT_CLASSIFICATION	1.3990954930146249E-5	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999799024129303	WITHOUT_CLASSIFICATION	2.0097587069773004E-5	DEFECT
// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)	WITHOUT_CLASSIFICATION	0.9978207377068513	WITHOUT_CLASSIFICATION	0.002179262293148606	DEFECT
// now remove a3, but since a3.equals(a1), this will in fact remove // a1...	WITHOUT_CLASSIFICATION	0.9894002381404237	WITHOUT_CLASSIFICATION	0.010599761859576248	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999999302184381	WITHOUT_CLASSIFICATION	6.978156185833735E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999828032429	WITHOUT_CLASSIFICATION	1.719675707585223E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999828032429	WITHOUT_CLASSIFICATION	1.719675707585223E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999828032429	WITHOUT_CLASSIFICATION	1.719675707585223E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999828032429	WITHOUT_CLASSIFICATION	1.719675707585223E-8	DEFECT
// visible	WITHOUT_CLASSIFICATION	0.9999995150237669	WITHOUT_CLASSIFICATION	4.849762330399077E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999998401507894	WITHOUT_CLASSIFICATION	1.5984921066399597E-7	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999125234063	WITHOUT_CLASSIFICATION	8.747659363586098E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999125234063	WITHOUT_CLASSIFICATION	8.747659363586098E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999125234063	WITHOUT_CLASSIFICATION	8.747659363586098E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999125234063	WITHOUT_CLASSIFICATION	8.747659363586098E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999125234063	WITHOUT_CLASSIFICATION	8.747659363586098E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999125234063	WITHOUT_CLASSIFICATION	8.747659363586098E-8	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999998401507894	WITHOUT_CLASSIFICATION	1.5984921066399597E-7	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999998401507894	WITHOUT_CLASSIFICATION	1.5984921066399597E-7	DEFECT
// foregroundPaint	WITHOUT_CLASSIFICATION	0.9999995842107965	WITHOUT_CLASSIFICATION	4.157892034683996E-7	DEFECT
// background paint	WITHOUT_CLASSIFICATION	0.9999995810880927	WITHOUT_CLASSIFICATION	4.189119073042061E-7	DEFECT
// foreground paint	WITHOUT_CLASSIFICATION	0.9999998536774476	WITHOUT_CLASSIFICATION	1.4632255229063823E-7	DEFECT
// inner radius	WITHOUT_CLASSIFICATION	0.9999999320771976	WITHOUT_CLASSIFICATION	6.792280236243177E-8	DEFECT
// outer radius	WITHOUT_CLASSIFICATION	0.9999997660197437	WITHOUT_CLASSIFICATION	2.3398025622829143E-7	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999941666232051	WITHOUT_CLASSIFICATION	5.833376794945519E-6	DEFECT
// dataset index	WITHOUT_CLASSIFICATION	0.9999941666232051	WITHOUT_CLASSIFICATION	5.833376794945519E-6	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999995439787052	WITHOUT_CLASSIFICATION	4.560212948537786E-7	DEFECT
// frameAnchor	WITHOUT_CLASSIFICATION	0.9999998933688091	WITHOUT_CLASSIFICATION	1.0663119088845812E-7	DEFECT
// templateValue	WITHOUT_CLASSIFICATION	0.999999593308252	WITHOUT_CLASSIFICATION	4.0669174798861867E-7	DEFECT
// valueAnchor	WITHOUT_CLASSIFICATION	0.9999994616117531	WITHOUT_CLASSIFICATION	5.383882469293527E-7	DEFECT
// fill paint	WITHOUT_CLASSIFICATION	0.9999994368214054	WITHOUT_CLASSIFICATION	5.631785946962938E-7	DEFECT
// outline paint	WITHOUT_CLASSIFICATION	0.9999995060911124	WITHOUT_CLASSIFICATION	4.939088876075118E-7	DEFECT
// outline stroke	WITHOUT_CLASSIFICATION	0.9999887229279988	WITHOUT_CLASSIFICATION	1.1277072001208836E-5	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999671624982	WITHOUT_CLASSIFICATION	3.283750193215704E-8	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999998088053011	WITHOUT_CLASSIFICATION	1.9119469881788885E-7	DEFECT
// background	WITHOUT_CLASSIFICATION	0.999997623054167	WITHOUT_CLASSIFICATION	2.3769458331353264E-6	DEFECT
// dial cap	WITHOUT_CLASSIFICATION	0.9999774569726939	WITHOUT_CLASSIFICATION	2.2543027306098742E-5	DEFECT
// frame	WITHOUT_CLASSIFICATION	0.9999997872426665	WITHOUT_CLASSIFICATION	2.1275733343061193E-7	DEFECT
// view	WITHOUT_CLASSIFICATION	0.9999956900311443	WITHOUT_CLASSIFICATION	4.3099688556987755E-6	DEFECT
// layer	WITHOUT_CLASSIFICATION	0.9999962172811219	WITHOUT_CLASSIFICATION	3.7827188780691343E-6	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999995469877823	WITHOUT_CLASSIFICATION	4.530122176953993E-7	DEFECT
// font	WITHOUT_CLASSIFICATION	0.9999962189111663	WITHOUT_CLASSIFICATION	3.7810888337489352E-6	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999988218102566	WITHOUT_CLASSIFICATION	1.178189743475941E-6	DEFECT
// stroke	WITHOUT_CLASSIFICATION	0.9999826501744082	WITHOUT_CLASSIFICATION	1.73498255917082E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999997482662608	WITHOUT_CLASSIFICATION	2.5173373913092107E-7	DEFECT
// tickLabelFont	WITHOUT_CLASSIFICATION	0.9999987194560574	WITHOUT_CLASSIFICATION	1.2805439425251378E-6	DEFECT
// tickLabelPaint	WITHOUT_CLASSIFICATION	0.9999996270634107	WITHOUT_CLASSIFICATION	3.7293658938172177E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999799024129303	WITHOUT_CLASSIFICATION	2.0097587069773004E-5	DEFECT
// check an inherited attribute	WITHOUT_CLASSIFICATION	0.9999999302184381	WITHOUT_CLASSIFICATION	6.978156185833735E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999828032429	WITHOUT_CLASSIFICATION	1.719675707585223E-8	DEFECT
// check that the listener lists are independent	WITHOUT_CLASSIFICATION	0.9999999828032429	WITHOUT_CLASSIFICATION	1.719675707585223E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999125234063	WITHOUT_CLASSIFICATION	8.747659363586098E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999125234063	WITHOUT_CLASSIFICATION	8.747659363586098E-8	DEFECT
// test a default instance	WITHOUT_CLASSIFICATION	0.9999999125234063	WITHOUT_CLASSIFICATION	8.747659363586098E-8	DEFECT
// radius	WITHOUT_CLASSIFICATION	0.9999998401507894	WITHOUT_CLASSIFICATION	1.5984921066399597E-7	DEFECT
// angle	WITHOUT_CLASSIFICATION	0.9999995439787052	WITHOUT_CLASSIFICATION	4.560212948537786E-7	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999671624982	WITHOUT_CLASSIFICATION	3.283750193215704E-8	DEFECT
// test a customised instance	WITHOUT_CLASSIFICATION	0.9999999671624982	WITHOUT_CLASSIFICATION	3.283750193215704E-8	DEFECT
// test a custom instance	WITHOUT_CLASSIFICATION	0.9999998088053011	WITHOUT_CLASSIFICATION	1.9119469881788885E-7	DEFECT
// majorTickIncrement	WITHOUT_CLASSIFICATION	0.999998821905613	WITHOUT_CLASSIFICATION	1.1780943869938176E-6	DEFECT
// majorTickLength	WITHOUT_CLASSIFICATION	0.9999990856978194	WITHOUT_CLASSIFICATION	9.143021806512985E-7	DEFECT
// majorTickPaint	WITHOUT_CLASSIFICATION	0.9999996788111161	WITHOUT_CLASSIFICATION	3.2118888395327524E-7	DEFECT
// majorTickStroke	WITHOUT_CLASSIFICATION	0.9999922743670678	WITHOUT_CLASSIFICATION	7.725632932154807E-6	DEFECT
// minorTickLength	WITHOUT_CLASSIFICATION	0.9999993019377998	WITHOUT_CLASSIFICATION	6.980622000758103E-7	DEFECT
// tickLabelOffset	WITHOUT_CLASSIFICATION	0.9999998435983709	WITHOUT_CLASSIFICATION	1.5640162903404345E-7	DEFECT
// try a default instance	WITHOUT_CLASSIFICATION	0.9999996002313839	WITHOUT_CLASSIFICATION	3.997686161055188E-7	DEFECT
// try a customised instance	WITHOUT_CLASSIFICATION	0.9999998661919892	WITHOUT_CLASSIFICATION	1.338080107664525E-7	DEFECT
// label	WITHOUT_CLASSIFICATION	0.9999983750865383	WITHOUT_CLASSIFICATION	1.6249134617058632E-6	DEFECT
// gradient paint transformer	WITHOUT_CLASSIFICATION	0.9999999353578063	WITHOUT_CLASSIFICATION	6.464219380005667E-8	DEFECT
// test default instance	WITHOUT_CLASSIFICATION	0.9999999317741962	WITHOUT_CLASSIFICATION	6.822580377089092E-8	DEFECT
// have to use a concrete subclass...	WITHOUT_CLASSIFICATION	0.9999983905506693	WITHOUT_CLASSIFICATION	1.6094493307452543E-6	DEFECT
// seriesVisible	WITHOUT_CLASSIFICATION	0.9999998033567246	WITHOUT_CLASSIFICATION	1.9664327534072008E-7	DEFECT
// seriesVisibleList	WITHOUT_CLASSIFICATION	0.9999997727481996	WITHOUT_CLASSIFICATION	2.2725180030684916E-7	DEFECT
// baseSeriesVisible	WITHOUT_CLASSIFICATION	0.9999999486968121	WITHOUT_CLASSIFICATION	5.1303187953000325E-8	DEFECT
// seriesVisibleInLegendList	WITHOUT_CLASSIFICATION	0.9999987675534708	WITHOUT_CLASSIFICATION	1.2324465291593779E-6	DEFECT
// baseSeriesVisibleInLegend	WITHOUT_CLASSIFICATION	0.9999995496534256	WITHOUT_CLASSIFICATION	4.5034657426133065E-7	DEFECT
// paintList	WITHOUT_CLASSIFICATION	0.999999843113913	WITHOUT_CLASSIFICATION	1.5688608688641435E-7	DEFECT
// basePaint	WITHOUT_CLASSIFICATION	0.9999999340560833	WITHOUT_CLASSIFICATION	6.594391656163173E-8	DEFECT
// baseFillPaint	WITHOUT_CLASSIFICATION	0.9999999062984527	WITHOUT_CLASSIFICATION	9.370154731598512E-8	DEFECT
// outlinePaintList	WITHOUT_CLASSIFICATION	0.9999998934668312	WITHOUT_CLASSIFICATION	1.0653316887440621E-7	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999684100536	WITHOUT_CLASSIFICATION	3.158994643616841E-8	DEFECT
// strokeList	WITHOUT_CLASSIFICATION	0.999990436946681	WITHOUT_CLASSIFICATION	9.563053319055739E-6	DEFECT
// outlineStrokeList	WITHOUT_CLASSIFICATION	0.9999954619042876	WITHOUT_CLASSIFICATION	4.538095712503836E-6	DEFECT
// baseOutlineStroke	WITHOUT_CLASSIFICATION	0.9999988213749925	WITHOUT_CLASSIFICATION	1.1786250075798618E-6	DEFECT
// shapeList	WITHOUT_CLASSIFICATION	0.999999897150522	WITHOUT_CLASSIFICATION	1.0284947793805214E-7	DEFECT
// baseShape	WITHOUT_CLASSIFICATION	0.9999999549221957	WITHOUT_CLASSIFICATION	4.507780418070667E-8	DEFECT
// itemLabelsVisibleList	WITHOUT_CLASSIFICATION	0.9999999666638356	WITHOUT_CLASSIFICATION	3.333616441525053E-8	DEFECT
// baseItemLabelsVisible	WITHOUT_CLASSIFICATION	0.9999999523081899	WITHOUT_CLASSIFICATION	4.769181009070761E-8	DEFECT
// itemLabelFont	WITHOUT_CLASSIFICATION	0.9999999098334518	WITHOUT_CLASSIFICATION	9.016654831495669E-8	DEFECT
// baseItemLabelFont	WITHOUT_CLASSIFICATION	0.9999999602539913	WITHOUT_CLASSIFICATION	3.974600870553446E-8	DEFECT
// itemLabelPaint	WITHOUT_CLASSIFICATION	0.9999999737405523	WITHOUT_CLASSIFICATION	2.625944765938592E-8	DEFECT
// itemLabelPaintList	WITHOUT_CLASSIFICATION	0.9999999941895913	WITHOUT_CLASSIFICATION	5.810408657567936E-9	DEFECT
// baseItemLabelPaint	WITHOUT_CLASSIFICATION	0.9999999887518357	WITHOUT_CLASSIFICATION	1.1248164188254198E-8	DEFECT
// positiveItemLabelPositionList;	WITHOUT_CLASSIFICATION	0.9999999210318881	WITHOUT_CLASSIFICATION	7.896811190624848E-8	DEFECT
// basePositiveItemLabelPosition;	WITHOUT_CLASSIFICATION	0.9999999211760168	WITHOUT_CLASSIFICATION	7.882398323899324E-8	DEFECT
// negativeItemLabelPosition;	WITHOUT_CLASSIFICATION	0.999999940851594	WITHOUT_CLASSIFICATION	5.914840606703746E-8	DEFECT
// OUTLINE STROKE	WITHOUT_CLASSIFICATION	0.9999998818420386	WITHOUT_CLASSIFICATION	1.1815796143995463E-7	DEFECT
// SHAPE	WITHOUT_CLASSIFICATION	0.999996179020499	WITHOUT_CLASSIFICATION	3.820979501013952E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
// baseOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999684100536	WITHOUT_CLASSIFICATION	3.158994643616841E-8	DEFECT
// itemLabelAnchorOffset	WITHOUT_CLASSIFICATION	0.9999999953939565	WITHOUT_CLASSIFICATION	4.606043605784647E-9	DEFECT
// createEntities;	WITHOUT_CLASSIFICATION	0.9999999641855012	WITHOUT_CLASSIFICATION	3.581449881396408E-8	DEFECT
// createEntitiesList;	WITHOUT_CLASSIFICATION	0.9999999759512448	WITHOUT_CLASSIFICATION	2.4048755133861408E-8	DEFECT
// legendShape	WITHOUT_CLASSIFICATION	0.9999974675885528	WITHOUT_CLASSIFICATION	2.5324114471678216E-6	DEFECT
// baseLegendShape	WITHOUT_CLASSIFICATION	0.9999998009894402	WITHOUT_CLASSIFICATION	1.9901055977854813E-7	DEFECT
// legendTextFont	WITHOUT_CLASSIFICATION	0.9999815734890681	WITHOUT_CLASSIFICATION	1.842651093191313E-5	DEFECT
// baseLegendTextFont	WITHOUT_CLASSIFICATION	0.9999993381047766	WITHOUT_CLASSIFICATION	6.618952234646503E-7	DEFECT
// OUTLINE PAINT	WITHOUT_CLASSIFICATION	0.9999995667286331	WITHOUT_CLASSIFICATION	4.332713668832908E-7	DEFECT
// ITEM_LABELS_VISIBLE	WITHOUT_CLASSIFICATION	0.9999991130151497	WITHOUT_CLASSIFICATION	8.869848503127559E-7	DEFECT
// ITEM_LABEL_FONT	WITHOUT_CLASSIFICATION	0.9999987124946158	WITHOUT_CLASSIFICATION	1.287505384238537E-6	DEFECT
// POSITIVE ITEM LABEL POSITION	WITHOUT_CLASSIFICATION	0.9999970490589811	WITHOUT_CLASSIFICATION	2.9509410187765157E-6	DEFECT
// NEGATIVE ITEM LABEL ANCHOR	WITHOUT_CLASSIFICATION	0.9999996940709424	WITHOUT_CLASSIFICATION	3.0592905765407747E-7	DEFECT
// failed	WITHOUT_CLASSIFICATION	0.999997534318583	WITHOUT_CLASSIFICATION	2.465681417074807E-6	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999932985868	WITHOUT_CLASSIFICATION	6.701413173486383E-9	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999932985868	WITHOUT_CLASSIFICATION	6.701413173486383E-9	DEFECT
// now check autoPopulate==true	WITHOUT_CLASSIFICATION	0.9999999932985868	WITHOUT_CLASSIFICATION	6.701413173486383E-9	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999879861253447	WITHOUT_CLASSIFICATION	1.2013874655276217E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999879861253447	WITHOUT_CLASSIFICATION	1.2013874655276217E-5	DEFECT
/*CategoryPlot plot =*/	WITHOUT_CLASSIFICATION	0.9999879861253447	WITHOUT_CLASSIFICATION	1.2013874655276217E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999352754392	WITHOUT_CLASSIFICATION	6.472456083419349E-8	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999352754392	WITHOUT_CLASSIFICATION	6.472456083419349E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999265829701	WITHOUT_CLASSIFICATION	7.341702990558634E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999265829701	WITHOUT_CLASSIFICATION	7.341702990558634E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999265829701	WITHOUT_CLASSIFICATION	7.341702990558634E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999265829701	WITHOUT_CLASSIFICATION	7.341702990558634E-8	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994706856727	WITHOUT_CLASSIFICATION	5.293143271774062E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994706856727	WITHOUT_CLASSIFICATION	5.293143271774062E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994706856727	WITHOUT_CLASSIFICATION	5.293143271774062E-7	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994706856727	WITHOUT_CLASSIFICATION	5.293143271774062E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999989172081069	WITHOUT_CLASSIFICATION	1.0827918931080265E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999989172081069	WITHOUT_CLASSIFICATION	1.0827918931080265E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999989172081069	WITHOUT_CLASSIFICATION	1.0827918931080265E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999989172081069	WITHOUT_CLASSIFICATION	1.0827918931080265E-6	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999989172081069	WITHOUT_CLASSIFICATION	1.0827918931080265E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.999999933252148	WITHOUT_CLASSIFICATION	6.674785203606296E-8	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.999999933252148	WITHOUT_CLASSIFICATION	6.674785203606296E-8	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.999999933252148	WITHOUT_CLASSIFICATION	6.674785203606296E-8	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.999999933252148	WITHOUT_CLASSIFICATION	6.674785203606296E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.99999971219666	WITHOUT_CLASSIFICATION	2.8780334001054663E-7	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.99999971219666	WITHOUT_CLASSIFICATION	2.8780334001054663E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
// check a series with no items	WITHOUT_CLASSIFICATION	0.9999999352754392	WITHOUT_CLASSIFICATION	6.472456083419349E-8	DEFECT
// check a series with one item	WITHOUT_CLASSIFICATION	0.9999999265829701	WITHOUT_CLASSIFICATION	7.341702990558634E-8	DEFECT
// check a series with two items	WITHOUT_CLASSIFICATION	0.9999994706856727	WITHOUT_CLASSIFICATION	5.293143271774062E-7	DEFECT
// check a series with three items	WITHOUT_CLASSIFICATION	0.9999989172081069	WITHOUT_CLASSIFICATION	1.0827918931080265E-6	DEFECT
// check a series with four items	WITHOUT_CLASSIFICATION	0.999999933252148	WITHOUT_CLASSIFICATION	6.674785203606296E-8	DEFECT
// check a series with repeating items	WITHOUT_CLASSIFICATION	0.99999971219666	WITHOUT_CLASSIFICATION	2.8780334001054663E-7	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999999318816187	WITHOUT_CLASSIFICATION	6.811838127912231E-8	DEFECT
// we're doing this for testing only, and make sure that we // only add data in descending order by x-value	WITHOUT_CLASSIFICATION	0.999999903246191	WITHOUT_CLASSIFICATION	9.675380894566678E-8	DEFECT
// try with gradient paint	WITHOUT_CLASSIFICATION	0.9999988119660738	WITHOUT_CLASSIFICATION	1.1880339262030543E-6	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999897139791853	WITHOUT_CLASSIFICATION	1.0286020814751308E-5	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999897139791853	WITHOUT_CLASSIFICATION	1.0286020814751308E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999851545619389	WITHOUT_CLASSIFICATION	1.4845438061003246E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999851545619389	WITHOUT_CLASSIFICATION	1.4845438061003246E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999851545619389	WITHOUT_CLASSIFICATION	1.4845438061003246E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999950944862	WITHOUT_CLASSIFICATION	4.9055137956007275E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999950944862	WITHOUT_CLASSIFICATION	4.9055137956007275E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
// the renderer should not be equal to a BarRenderer	WITHOUT_CLASSIFICATION	0.9997743588509964	WITHOUT_CLASSIFICATION	2.2564114900356174E-4	DEFECT
// firstBarPaint;	WITHOUT_CLASSIFICATION	0.9999999522685951	WITHOUT_CLASSIFICATION	4.7731404867374565E-8	DEFECT
// lastBarPaint;	WITHOUT_CLASSIFICATION	0.9999994685483994	WITHOUT_CLASSIFICATION	5.314516005730823E-7	DEFECT
// positiveBarPaint;	WITHOUT_CLASSIFICATION	0.9999998473762108	WITHOUT_CLASSIFICATION	1.5262378915901729E-7	DEFECT
//private Paint negativeBarPaint;	WITHOUT_CLASSIFICATION	0.9999979568195678	WITHOUT_CLASSIFICATION	2.0431804322183947E-6	DEFECT
// quick check for independence	WITHOUT_CLASSIFICATION	0.9999995862913894	WITHOUT_CLASSIFICATION	4.1370861058839917E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999991711890887	WITHOUT_CLASSIFICATION	8.288109114113242E-7	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999997550602352	WITHOUT_CLASSIFICATION	2.4493976481665947E-7	DEFECT
// toolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999500800181	WITHOUT_CLASSIFICATION	4.9919981847128804E-8	DEFECT
// urlGenerator	WITHOUT_CLASSIFICATION	0.9999999604410026	WITHOUT_CLASSIFICATION	3.955899749689296E-8	DEFECT
// should be equal...	WITHOUT_CLASSIFICATION	0.9999897139791853	WITHOUT_CLASSIFICATION	1.0286020814751308E-5	DEFECT
// and independent...	WITHOUT_CLASSIFICATION	0.9999851545619389	WITHOUT_CLASSIFICATION	1.4845438061003246E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999950944862	WITHOUT_CLASSIFICATION	4.9055137956007275E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999950944862	WITHOUT_CLASSIFICATION	4.9055137956007275E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999950944862	WITHOUT_CLASSIFICATION	4.9055137956007275E-8	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999950944862	WITHOUT_CLASSIFICATION	4.9055137956007275E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999988293469576	WITHOUT_CLASSIFICATION	1.1706530423892637E-6	DEFECT
// map	WITHOUT_CLASSIFICATION	0.9999964832226287	WITHOUT_CLASSIFICATION	3.5167773714025314E-6	DEFECT
// toolTipGeneratorList	WITHOUT_CLASSIFICATION	0.9999999917225323	WITHOUT_CLASSIFICATION	8.27746783081655E-9	DEFECT
// baseToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999975276114	WITHOUT_CLASSIFICATION	2.4723886032846105E-9	DEFECT
// itemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999929682636	WITHOUT_CLASSIFICATION	7.031736453327649E-9	DEFECT
// itemLabelGeneratorList	WITHOUT_CLASSIFICATION	0.9999999987393474	WITHOUT_CLASSIFICATION	1.260652604233834E-9	DEFECT
// baseItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999969003643	WITHOUT_CLASSIFICATION	3.0996356245110326E-9	DEFECT
// urlGeneratorList	WITHOUT_CLASSIFICATION	0.999999992675469	WITHOUT_CLASSIFICATION	7.3245310295821414E-9	DEFECT
// baseItemURLGenerator	WITHOUT_CLASSIFICATION	0.999999995682376	WITHOUT_CLASSIFICATION	4.317624014032777E-9	DEFECT
// legendItemLabelGenerator	WITHOUT_CLASSIFICATION	0.9999999303445086	WITHOUT_CLASSIFICATION	6.965549134182196E-8	DEFECT
// legendItemToolTipGenerator	WITHOUT_CLASSIFICATION	0.9999999664178635	WITHOUT_CLASSIFICATION	3.3582136527073186E-8	DEFECT
// legendItemURLGenerator	WITHOUT_CLASSIFICATION	0.9999998589932707	WITHOUT_CLASSIFICATION	1.4100672931179046E-7	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999952130578255	WITHOUT_CLASSIFICATION	4.786942174570666E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999952130578255	WITHOUT_CLASSIFICATION	4.786942174570666E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999952130578255	WITHOUT_CLASSIFICATION	4.786942174570666E-6	DEFECT
// base value	WITHOUT_CLASSIFICATION	0.9999998838568559	WITHOUT_CLASSIFICATION	1.1614314402570152E-7	DEFECT
// itemMargin	WITHOUT_CLASSIFICATION	0.9999999237366399	WITHOUT_CLASSIFICATION	7.626336005672876E-8	DEFECT
// drawBarOutline	WITHOUT_CLASSIFICATION	0.9999996887011032	WITHOUT_CLASSIFICATION	3.112988966670157E-7	DEFECT
// maximumBarWidth	WITHOUT_CLASSIFICATION	0.9999996437140277	WITHOUT_CLASSIFICATION	3.562859723889032E-7	DEFECT
// minimumBarLength	WITHOUT_CLASSIFICATION	0.9999997811228886	WITHOUT_CLASSIFICATION	2.1887711137814165E-7	DEFECT
// gradientPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999911341113	WITHOUT_CLASSIFICATION	8.865888695074153E-9	DEFECT
// positiveItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999973767208037	WITHOUT_CLASSIFICATION	2.6232791962537802E-6	DEFECT
// negativeItemLabelPositionFallback	WITHOUT_CLASSIFICATION	0.9999975241495882	WITHOUT_CLASSIFICATION	2.4758504117637684E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999999024315034	WITHOUT_CLASSIFICATION	9.756849669607189E-8	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999992861149322	WITHOUT_CLASSIFICATION	7.138850678411722E-7	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
// shadowXOffset	WITHOUT_CLASSIFICATION	0.9999991711890887	WITHOUT_CLASSIFICATION	8.288109114113242E-7	DEFECT
// shadowYOffset	WITHOUT_CLASSIFICATION	0.9999997550602352	WITHOUT_CLASSIFICATION	2.4493976481665947E-7	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999950944862	WITHOUT_CLASSIFICATION	4.9055137956007275E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
// check that the series visible flag is observed	WITHOUT_CLASSIFICATION	0.9999988293469576	WITHOUT_CLASSIFICATION	1.1706530423892637E-6	DEFECT
// barPainter	WITHOUT_CLASSIFICATION	0.9999999024315034	WITHOUT_CLASSIFICATION	9.756849669607189E-8	DEFECT
// shadowsVisible	WITHOUT_CLASSIFICATION	0.9999992861149322	WITHOUT_CLASSIFICATION	7.138850678411722E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.999999418375424	WITHOUT_CLASSIFICATION	5.816245759272244E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997457129243	WITHOUT_CLASSIFICATION	2.5428707575041493E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997457129243	WITHOUT_CLASSIFICATION	2.5428707575041493E-7	DEFECT
// check that super class fields are being looked at...	WITHOUT_CLASSIFICATION	0.9996116245496421	WITHOUT_CLASSIFICATION	3.8837545035780595E-4	DEFECT
// setUseYInterval	WITHOUT_CLASSIFICATION	0.9999999903897084	WITHOUT_CLASSIFICATION	9.610291532975846E-9	DEFECT
// setBase()	WITHOUT_CLASSIFICATION	0.9999994285898326	WITHOUT_CLASSIFICATION	5.714101674266386E-7	DEFECT
// try empty dataset	WITHOUT_CLASSIFICATION	0.9999998572496551	WITHOUT_CLASSIFICATION	1.427503449502435E-7	DEFECT
// setGradientPaintTransformer()	WITHOUT_CLASSIFICATION	0.9999999723594833	WITHOUT_CLASSIFICATION	2.7640516632843548E-8	DEFECT
// setDrawBarOutline()	WITHOUT_CLASSIFICATION	0.9999999406155882	WITHOUT_CLASSIFICATION	5.938441170847542E-8	DEFECT
// setMargin()	WITHOUT_CLASSIFICATION	0.9999998847887631	WITHOUT_CLASSIFICATION	1.1521123687179731E-7	DEFECT
// legendBar	WITHOUT_CLASSIFICATION	0.9999966310772739	WITHOUT_CLASSIFICATION	3.3689227261728965E-6	DEFECT
// positiveItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999949513530415	WITHOUT_CLASSIFICATION	5.048646958543233E-6	DEFECT
// negativeItemLabelFallbackPosition	WITHOUT_CLASSIFICATION	0.9999952350873011	WITHOUT_CLASSIFICATION	4.764912698884353E-6	DEFECT
// check a list containing a non-Number object	WITHOUT_CLASSIFICATION	0.9999999994692893	WITHOUT_CLASSIFICATION	5.307105960807489E-10	DEFECT
// try something from the base class	WITHOUT_CLASSIFICATION	0.9999916315193026	WITHOUT_CLASSIFICATION	8.368480697497173E-6	DEFECT
// positive paint	WITHOUT_CLASSIFICATION	0.9999994418080689	WITHOUT_CLASSIFICATION	5.581919310559039E-7	DEFECT
// negative paint	WITHOUT_CLASSIFICATION	0.9999993693584387	WITHOUT_CLASSIFICATION	6.306415612990997E-7	DEFECT
// shapesVisible	WITHOUT_CLASSIFICATION	0.9999998345203521	WITHOUT_CLASSIFICATION	1.6547964776131624E-7	DEFECT
// legendLine	WITHOUT_CLASSIFICATION	0.9999970734124527	WITHOUT_CLASSIFICATION	2.926587547345073E-6	DEFECT
// roundXCoordinates	WITHOUT_CLASSIFICATION	0.9999998754536831	WITHOUT_CLASSIFICATION	1.2454631697386397E-7	DEFECT
// drawOpenTicks	WITHOUT_CLASSIFICATION	0.9999998508618753	WITHOUT_CLASSIFICATION	1.4913812486212223E-7	DEFECT
// drawCloseTicks	WITHOUT_CLASSIFICATION	0.9999999681502748	WITHOUT_CLASSIFICATION	3.1849725243722394E-8	DEFECT
// openTickPaint	WITHOUT_CLASSIFICATION	0.9999995655893983	WITHOUT_CLASSIFICATION	4.3441060163828596E-7	DEFECT
// closeTickPaint	WITHOUT_CLASSIFICATION	0.9999999475560981	WITHOUT_CLASSIFICATION	5.244390192638085E-8	DEFECT
// tickLength	WITHOUT_CLASSIFICATION	0.9999910674078936	WITHOUT_CLASSIFICATION	8.932592106479873E-6	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999993998718604	WITHOUT_CLASSIFICATION	6.001281396570517E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999960402265023	WITHOUT_CLASSIFICATION	3.959773497623945E-6	DEFECT
// drawXError	WITHOUT_CLASSIFICATION	0.9999938922404102	WITHOUT_CLASSIFICATION	6.107759589805187E-6	DEFECT
// drawYError	WITHOUT_CLASSIFICATION	0.9999980523544693	WITHOUT_CLASSIFICATION	1.9476455307519094E-6	DEFECT
// capLength	WITHOUT_CLASSIFICATION	0.9999974588191447	WITHOUT_CLASSIFICATION	2.5411808552998548E-6	DEFECT
// errorPaint	WITHOUT_CLASSIFICATION	0.9999996209310732	WITHOUT_CLASSIFICATION	3.79068926698465E-7	DEFECT
// errorStroke	WITHOUT_CLASSIFICATION	0.9999757922438716	WITHOUT_CLASSIFICATION	2.420775612845624E-5	DEFECT
// check boxPaint null also	WITHOUT_CLASSIFICATION	0.9999999900419718	WITHOUT_CLASSIFICATION	9.958028167689688E-9	DEFECT
// upPaint	WITHOUT_CLASSIFICATION	0.9999997321543459	WITHOUT_CLASSIFICATION	2.678456540923671E-7	DEFECT
// downPaint	WITHOUT_CLASSIFICATION	0.9999941001194123	WITHOUT_CLASSIFICATION	5.899880587825051E-6	DEFECT
// drawVolume	WITHOUT_CLASSIFICATION	0.9999997880456658	WITHOUT_CLASSIFICATION	2.1195433415393991E-7	DEFECT
// candleWidth	WITHOUT_CLASSIFICATION	0.999999597402881	WITHOUT_CLASSIFICATION	4.0259711886512286E-7	DEFECT
// maxCandleWidthInMilliseconds	WITHOUT_CLASSIFICATION	0.9999997615560219	WITHOUT_CLASSIFICATION	2.384439781366521E-7	DEFECT
// autoWidthMethod	WITHOUT_CLASSIFICATION	0.9999990078505807	WITHOUT_CLASSIFICATION	9.921494192156836E-7	DEFECT
// autoWidthFactor	WITHOUT_CLASSIFICATION	0.9999999304325247	WITHOUT_CLASSIFICATION	6.956747541800421E-8	DEFECT
// backgroundPaint	WITHOUT_CLASSIFICATION	0.9999988096232734	WITHOUT_CLASSIFICATION	1.190376726602188E-6	DEFECT
// padding	WITHOUT_CLASSIFICATION	0.9999939708926787	WITHOUT_CLASSIFICATION	6.0291073212910365E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// fillPaintTransformer	WITHOUT_CLASSIFICATION	0.9999999911232194	WITHOUT_CLASSIFICATION	8.876780726298239E-9	DEFECT
// fillPaint	WITHOUT_CLASSIFICATION	0.9999993204129125	WITHOUT_CLASSIFICATION	6.795870873942166E-7	DEFECT
// outlinePaint	WITHOUT_CLASSIFICATION	0.9999995469877823	WITHOUT_CLASSIFICATION	4.530122176953993E-7	DEFECT
// linePaint	WITHOUT_CLASSIFICATION	0.9999993568006097	WITHOUT_CLASSIFICATION	6.431993902745486E-7	DEFECT
// paint	WITHOUT_CLASSIFICATION	0.9999988218102566	WITHOUT_CLASSIFICATION	1.178189743475941E-6	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
/* BufferedImage image = */	WITHOUT_CLASSIFICATION	0.9999866307936159	WITHOUT_CLASSIFICATION	1.3369206384084908E-5	DEFECT
// shape	WITHOUT_CLASSIFICATION	0.9999997482662608	WITHOUT_CLASSIFICATION	2.5173373913092107E-7	DEFECT
// outlineStroke	WITHOUT_CLASSIFICATION	0.9999799024129303	WITHOUT_CLASSIFICATION	2.0097587069773004E-5	DEFECT
// axisLocation	WITHOUT_CLASSIFICATION	0.9999997163657065	WITHOUT_CLASSIFICATION	2.8363429350381654E-7	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
/*JFreeChart chart =*/	WITHOUT_CLASSIFICATION	0.9999999145238123	WITHOUT_CLASSIFICATION	8.547618757519422E-8	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999952130578255	WITHOUT_CLASSIFICATION	4.786942174570666E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999952130578255	WITHOUT_CLASSIFICATION	4.786942174570666E-6	DEFECT
// check that the generator has been cloned	WITHOUT_CLASSIFICATION	0.9999952130578255	WITHOUT_CLASSIFICATION	4.786942174570666E-6	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997457129243	WITHOUT_CLASSIFICATION	2.5428707575041493E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997457129243	WITHOUT_CLASSIFICATION	2.5428707575041493E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997457129243	WITHOUT_CLASSIFICATION	2.5428707575041493E-7	DEFECT
// try an empty dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999993998718604	WITHOUT_CLASSIFICATION	6.001281396570517E-7	DEFECT
// try a null dataset - should return a null range	WITHOUT_CLASSIFICATION	0.9999960402265023	WITHOUT_CLASSIFICATION	3.959773497623945E-6	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9996235252735557	WITHOUT_CLASSIFICATION	3.7647472644441055E-4	DEFECT
// autoWidthGap	WITHOUT_CLASSIFICATION	0.9999998122742586	WITHOUT_CLASSIFICATION	1.877257413933077E-7	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.999999926488576	WITHOUT_CLASSIFICATION	7.351142387327534E-8	DEFECT
// check that a null dataset returns null bounds	WITHOUT_CLASSIFICATION	0.999999926488576	WITHOUT_CLASSIFICATION	7.351142387327534E-8	DEFECT
// check the bounds of a simple dataset	WITHOUT_CLASSIFICATION	0.9999999463608865	WITHOUT_CLASSIFICATION	5.3639113453106743E-8	DEFECT
// test findDomainBounds as well	WITHOUT_CLASSIFICATION	0.9999997294277374	WITHOUT_CLASSIFICATION	2.7057226257280113E-7	DEFECT
// blockHeight	WITHOUT_CLASSIFICATION	0.999998233318951	WITHOUT_CLASSIFICATION	1.766681048994611E-6	DEFECT
// blockWidth	WITHOUT_CLASSIFICATION	0.9999988550160589	WITHOUT_CLASSIFICATION	1.144983941057329E-6	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999998488430466	WITHOUT_CLASSIFICATION	1.5115695349764305E-7	DEFECT
// paintScale	WITHOUT_CLASSIFICATION	0.9999998488430466	WITHOUT_CLASSIFICATION	1.5115695349764305E-7	DEFECT
// the following fields are inherited from the AbstractXYItemRenderer	WITHOUT_CLASSIFICATION	0.9999996386876725	WITHOUT_CLASSIFICATION	3.6131232760529045E-7	DEFECT
// axis	WITHOUT_CLASSIFICATION	0.999999554502423	WITHOUT_CLASSIFICATION	4.4549757694788763E-7	DEFECT
// axisOffset	WITHOUT_CLASSIFICATION	0.9999999280683327	WITHOUT_CLASSIFICATION	7.193166732890086E-8	DEFECT
// stripWidth	WITHOUT_CLASSIFICATION	0.9999999093654569	WITHOUT_CLASSIFICATION	9.063454304086334E-8	DEFECT
// stripOutlineVisible	WITHOUT_CLASSIFICATION	0.9999999691556537	WITHOUT_CLASSIFICATION	3.084434627280183E-8	DEFECT
// stripOutlinePaint	WITHOUT_CLASSIFICATION	0.9999999887963328	WITHOUT_CLASSIFICATION	1.120366713939712E-8	DEFECT
// stripOutlineStroke	WITHOUT_CLASSIFICATION	0.9999980075507695	WITHOUT_CLASSIFICATION	1.9924492305638205E-6	DEFECT
// shapeVisible	WITHOUT_CLASSIFICATION	0.9999998712051498	WITHOUT_CLASSIFICATION	1.2879485018239467E-7	DEFECT
// shapeFilled	WITHOUT_CLASSIFICATION	0.9999999367059433	WITHOUT_CLASSIFICATION	6.329405661088593E-8	DEFECT
// shapeOutlineVisible	WITHOUT_CLASSIFICATION	0.9999999320589293	WITHOUT_CLASSIFICATION	6.794107069703765E-8	DEFECT
// shapeAnchor	WITHOUT_CLASSIFICATION	0.9999998854958123	WITHOUT_CLASSIFICATION	1.1450418770812833E-7	DEFECT
// shapeLocation	WITHOUT_CLASSIFICATION	0.9999997108247551	WITHOUT_CLASSIFICATION	2.8917524484692067E-7	DEFECT
// line	WITHOUT_CLASSIFICATION	0.9999972362657521	WITHOUT_CLASSIFICATION	2.763734247840218E-6	DEFECT
// lineStroke	WITHOUT_CLASSIFICATION	0.999951025210775	WITHOUT_CLASSIFICATION	4.897478922501229E-5	DEFECT
// maximumLinesToDisplay	WITHOUT_CLASSIFICATION	0.9999999360624615	WITHOUT_CLASSIFICATION	6.39375385816246E-8	DEFECT
// toolTipText	WITHOUT_CLASSIFICATION	0.9999981290189679	WITHOUT_CLASSIFICATION	1.870981032210873E-6	DEFECT
// expandToFitSpace	WITHOUT_CLASSIFICATION	0.9999986528386461	WITHOUT_CLASSIFICATION	1.347161353883776E-6	DEFECT
// margin	WITHOUT_CLASSIFICATION	0.9999993831762101	WITHOUT_CLASSIFICATION	6.168237899526813E-7	DEFECT
// border	WITHOUT_CLASSIFICATION	0.999999625204667	WITHOUT_CLASSIFICATION	3.7479533292321525E-7	DEFECT
// is the clone independent	WITHOUT_CLASSIFICATION	0.999999851686786	WITHOUT_CLASSIFICATION	1.483132141117582E-7	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999976300518224	WITHOUT_CLASSIFICATION	2.369948177526328E-6	DEFECT
// simple case	WITHOUT_CLASSIFICATION	0.999999913310962	WITHOUT_CLASSIFICATION	8.668903796650695E-8	DEFECT
// try a null value	WITHOUT_CLASSIFICATION	0.9999946584903499	WITHOUT_CLASSIFICATION	5.341509650107322E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.999999418375424	WITHOUT_CLASSIFICATION	5.816245759272244E-7	DEFECT
// you can add a null list - it would have been better if this // required EMPTY_LIST	WITHOUT_CLASSIFICATION	0.9992356601132094	WITHOUT_CLASSIFICATION	7.643398867906526E-4	DEFECT
// case 1 - object is mutable but not PublicCloneable	WITHOUT_CLASSIFICATION	0.9999976300518224	WITHOUT_CLASSIFICATION	2.369948177526328E-6	DEFECT
// if we modify the original list, it's best if the URL generator is // not affected	WITHOUT_CLASSIFICATION	0.9999997924858504	WITHOUT_CLASSIFICATION	2.075141496163639E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.999996501851172	WITHOUT_CLASSIFICATION	3.498148828075612E-6	DEFECT
// the clone contains a reference to the original object	WITHOUT_CLASSIFICATION	0.999996501851172	WITHOUT_CLASSIFICATION	3.498148828075612E-6	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999997769221859	WITHOUT_CLASSIFICATION	2.2307781413299102E-7	DEFECT
// CASE 2 - object is mutable AND PublicCloneable	WITHOUT_CLASSIFICATION	0.9999997769221859	WITHOUT_CLASSIFICATION	2.2307781413299102E-7	DEFECT
// the clone contains a reference to a CLONE of the original object	WITHOUT_CLASSIFICATION	0.9999992982392265	WITHOUT_CLASSIFICATION	7.01760773468627E-7	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999894768473	WITHOUT_CLASSIFICATION	1.052315265599985E-8	DEFECT
// check sorted rows	WITHOUT_CLASSIFICATION	0.9999999299269385	WITHOUT_CLASSIFICATION	7.007306142936966E-8	DEFECT
// check for unknown column	WITHOUT_CLASSIFICATION	0.9999995756929974	WITHOUT_CLASSIFICATION	4.243070025971516E-7	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999866685205088	WITHOUT_CLASSIFICATION	1.3331479491212465E-5	DEFECT
// try null key	WITHOUT_CLASSIFICATION	0.9999866685205088	WITHOUT_CLASSIFICATION	1.3331479491212465E-5	DEFECT
/*v =*/	WITHOUT_CLASSIFICATION	0.9999504425655089	WITHOUT_CLASSIFICATION	4.955743449115531E-5	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999024771672	WITHOUT_CLASSIFICATION	9.752283287947809E-8	DEFECT
// check null argument 1	WITHOUT_CLASSIFICATION	0.9999999922314678	WITHOUT_CLASSIFICATION	7.768532137721227E-9	DEFECT
/* ComparableObjectItem item1 = */	WITHOUT_CLASSIFICATION	0.9999997880320003	WITHOUT_CLASSIFICATION	2.1196799972365675E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995411005432	WITHOUT_CLASSIFICATION	4.5889945683252687E-7	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999975886452644	WITHOUT_CLASSIFICATION	2.41135473552569E-6	DEFECT
// retrieve an item	WITHOUT_CLASSIFICATION	0.9999999499670092	WITHOUT_CLASSIFICATION	5.0032990654242656E-8	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999927500623642	WITHOUT_CLASSIFICATION	7.249937635877382E-6	DEFECT
// request with a negative index	WITHOUT_CLASSIFICATION	0.9999927500623642	WITHOUT_CLASSIFICATION	7.249937635877382E-6	DEFECT
// request width index == itemCount	WITHOUT_CLASSIFICATION	0.9999993612196533	WITHOUT_CLASSIFICATION	6.387803466669755E-7	DEFECT
// check null argument	WITHOUT_CLASSIFICATION	0.999999990478735	WITHOUT_CLASSIFICATION	9.521265012410578E-9	DEFECT
// replace an existing value	WITHOUT_CLASSIFICATION	0.9999999669415038	WITHOUT_CLASSIFICATION	3.305849625351266E-8	DEFECT
// try a null key - should throw an exception	WITHOUT_CLASSIFICATION	0.9991681228929131	WITHOUT_CLASSIFICATION	8.318771070869266E-4	DEFECT
// try unknown key	WITHOUT_CLASSIFICATION	0.9999667897573004	WITHOUT_CLASSIFICATION	3.321024269963532E-5	DEFECT
// try negative key index	WITHOUT_CLASSIFICATION	0.999892164336252	WITHOUT_CLASSIFICATION	1.0783566374795411E-4	DEFECT
// try key index == itemCount	WITHOUT_CLASSIFICATION	0.999996418422017	WITHOUT_CLASSIFICATION	3.581577983019087E-6	DEFECT
/*Range r2 =*/	WITHOUT_CLASSIFICATION	0.9999616948456959	WITHOUT_CLASSIFICATION	3.830515430410936E-5	DEFECT
// Expand by 0% does not change the range	WITHOUT_CLASSIFICATION	0.9999970806130943	WITHOUT_CLASSIFICATION	2.9193869056747136E-6	DEFECT
// Lower > upper: mid point is used	WITHOUT_CLASSIFICATION	0.999999298108019	WITHOUT_CLASSIFICATION	7.018919810055965E-7	DEFECT
// Shifting with a delta of 0 does not change the range	WITHOUT_CLASSIFICATION	0.9999999556377446	WITHOUT_CLASSIFICATION	4.436225549062116E-8	DEFECT
// Scaling with a factor of 1 does not change the range	WITHOUT_CLASSIFICATION	0.9999997768161324	WITHOUT_CLASSIFICATION	2.2318386760375467E-7	DEFECT
/*s1 = */	WITHOUT_CLASSIFICATION	0.9999974453485813	WITHOUT_CLASSIFICATION	2.554651418709591E-6	DEFECT
// key	WITHOUT_CLASSIFICATION	0.9999907958990584	WITHOUT_CLASSIFICATION	9.204100941673308E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999998847878488	WITHOUT_CLASSIFICATION	1.1521215121200792E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999992038637835	WITHOUT_CLASSIFICATION	7.961362165694782E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998658285139	WITHOUT_CLASSIFICATION	1.3417148611448689E-7	DEFECT
// remove an item	WITHOUT_CLASSIFICATION	0.9999990546705588	WITHOUT_CLASSIFICATION	9.453294410675881E-7	DEFECT
// map a key to a new group	WITHOUT_CLASSIFICATION	0.9999976181872301	WITHOUT_CLASSIFICATION	2.3818127699374303E-6	DEFECT
// clear a mapping	WITHOUT_CLASSIFICATION	0.9999970754083382	WITHOUT_CLASSIFICATION	2.9245916618793016E-6	DEFECT
// check handling of null key	WITHOUT_CLASSIFICATION	0.9999995587626035	WITHOUT_CLASSIFICATION	4.4123739655704585E-7	DEFECT
// a new map always has 1 group (the default group)	WITHOUT_CLASSIFICATION	0.999999979010635	WITHOUT_CLASSIFICATION	2.0989365088866337E-8	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.999999436813534	WITHOUT_CLASSIFICATION	5.631864660045119E-7	DEFECT
// if there is an explicit mapping to the default group, it is counted	WITHOUT_CLASSIFICATION	0.9999999950353838	WITHOUT_CLASSIFICATION	4.964616180644014E-9	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// confirm that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999024771672	WITHOUT_CLASSIFICATION	9.752283287947809E-8	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995411005432	WITHOUT_CLASSIFICATION	4.5889945683252687E-7	DEFECT
// check key order	WITHOUT_CLASSIFICATION	0.9999995411005432	WITHOUT_CLASSIFICATION	4.5889945683252687E-7	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999571907933	WITHOUT_CLASSIFICATION	4.2809206635669027E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999571907933	WITHOUT_CLASSIFICATION	4.2809206635669027E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999571907933	WITHOUT_CLASSIFICATION	4.2809206635669027E-8	DEFECT
// check retrieve value by key	WITHOUT_CLASSIFICATION	0.9999999571907933	WITHOUT_CLASSIFICATION	4.2809206635669027E-8	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999975886452644	WITHOUT_CLASSIFICATION	2.41135473552569E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999975886452644	WITHOUT_CLASSIFICATION	2.41135473552569E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999975886452644	WITHOUT_CLASSIFICATION	2.41135473552569E-6	DEFECT
// check retrieve value by index	WITHOUT_CLASSIFICATION	0.9999975886452644	WITHOUT_CLASSIFICATION	2.41135473552569E-6	DEFECT
// now overwrite group "G2"...	WITHOUT_CLASSIFICATION	0.999999436813534	WITHOUT_CLASSIFICATION	5.631864660045119E-7	DEFECT
// if the default group is not mapped to, it should still count towards // the group count...	WITHOUT_CLASSIFICATION	0.999748827084571	WITHOUT_CLASSIFICATION	2.511729154290453E-4	DEFECT
// now when the default group is mapped to, it shouldn't increase the // group count...	WITHOUT_CLASSIFICATION	0.9998052968385635	WITHOUT_CLASSIFICATION	1.9470316143653247E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// the default group is always at index 0	WITHOUT_CLASSIFICATION	0.999993564375302	WITHOUT_CLASSIFICATION	6.435624698031588E-6	DEFECT
// a non-existent group should return -1	WITHOUT_CLASSIFICATION	0.9999998843049721	WITHOUT_CLASSIFICATION	1.1569502790957518E-7	DEFECT
// indices are assigned in the order that groups are originally mapped	WITHOUT_CLASSIFICATION	0.9999909307288919	WITHOUT_CLASSIFICATION	9.069271108060842E-6	DEFECT
// a key that hasn't been mapped should return the default group	WITHOUT_CLASSIFICATION	0.9999859108608679	WITHOUT_CLASSIFICATION	1.408913913204074E-5	DEFECT
// a null argument should throw an exception	WITHOUT_CLASSIFICATION	0.9999963757965756	WITHOUT_CLASSIFICATION	3.6242034242817995E-6	DEFECT
// a small check for independence	WITHOUT_CLASSIFICATION	0.9999997744760957	WITHOUT_CLASSIFICATION	2.2552390438326306E-7	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999999568816403	WITHOUT_CLASSIFICATION	4.3118359619992246E-8	DEFECT
// check invalid indices	WITHOUT_CLASSIFICATION	0.9999999568816403	WITHOUT_CLASSIFICATION	4.3118359619992246E-8	DEFECT
// confirm overwriting an existing value	WITHOUT_CLASSIFICATION	0.9999999203540003	WITHOUT_CLASSIFICATION	7.96459996166974E-8	DEFECT
// try null keys	WITHOUT_CLASSIFICATION	0.9999929915995256	WITHOUT_CLASSIFICATION	7.008400474485673E-6	DEFECT
// try negative row index	WITHOUT_CLASSIFICATION	0.9995680512250124	WITHOUT_CLASSIFICATION	4.3194877498765487E-4	DEFECT
// try row index too high	WITHOUT_CLASSIFICATION	0.9998849731808146	WITHOUT_CLASSIFICATION	1.1502681918547352E-4	DEFECT
// try negative column index	WITHOUT_CLASSIFICATION	0.9999388868110074	WITHOUT_CLASSIFICATION	6.111318899253261E-5	DEFECT
// try column index too high	WITHOUT_CLASSIFICATION	0.9999787805212448	WITHOUT_CLASSIFICATION	2.1219478755166585E-5	DEFECT
// try unknown row key	WITHOUT_CLASSIFICATION	0.9999432975002305	WITHOUT_CLASSIFICATION	5.670249976948062E-5	DEFECT
// try null row key	WITHOUT_CLASSIFICATION	0.9999460352608616	WITHOUT_CLASSIFICATION	5.3964739138457004E-5	DEFECT
// try unknown column key	WITHOUT_CLASSIFICATION	0.9999911922556703	WITHOUT_CLASSIFICATION	8.807744329699036E-6	DEFECT
// try null column key	WITHOUT_CLASSIFICATION	0.9999889579903537	WITHOUT_CLASSIFICATION	1.1042009646373027E-5	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999998545137836	WITHOUT_CLASSIFICATION	1.4548621641647263E-7	DEFECT
/* Comparable k = */	WITHOUT_CLASSIFICATION	0.9999998545137836	WITHOUT_CLASSIFICATION	1.4548621641647263E-7	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999558509635632	WITHOUT_CLASSIFICATION	4.414903643682222E-5	DEFECT
// it's OK to use an index equal to the size of the list	WITHOUT_CLASSIFICATION	0.999999991173303	WITHOUT_CLASSIFICATION	8.826697056318788E-9	DEFECT
// try replacing an existing value	WITHOUT_CLASSIFICATION	0.9999996361056148	WITHOUT_CLASSIFICATION	3.6389438517265987E-7	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999875570329	WITHOUT_CLASSIFICATION	1.2442967065406255E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999875570329	WITHOUT_CLASSIFICATION	1.2442967065406255E-8	DEFECT
// try a null source	WITHOUT_CLASSIFICATION	0.999999367916569	WITHOUT_CLASSIFICATION	6.320834309701177E-7	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999908636157545	WITHOUT_CLASSIFICATION	9.136384245518846E-6	DEFECT
// check negative index throws exception	WITHOUT_CLASSIFICATION	0.9999908636157545	WITHOUT_CLASSIFICATION	9.136384245518846E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999908844473	WITHOUT_CLASSIFICATION	9.11555269993693E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999908844473	WITHOUT_CLASSIFICATION	9.11555269993693E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999908844473	WITHOUT_CLASSIFICATION	9.11555269993693E-6	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999985279557049	WITHOUT_CLASSIFICATION	1.4720442951619122E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999998842969449	WITHOUT_CLASSIFICATION	1.1570305513827997E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// an empty dataset should return a null range	WITHOUT_CLASSIFICATION	0.999999950944862	WITHOUT_CLASSIFICATION	4.9055137956007275E-8	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999998745530203	WITHOUT_CLASSIFICATION	1.2544697969615265E-6	DEFECT
/* Number n = */	WITHOUT_CLASSIFICATION	0.999998745530203	WITHOUT_CLASSIFICATION	1.2544697969615265E-6	DEFECT
// try null	WITHOUT_CLASSIFICATION	0.9999558509635632	WITHOUT_CLASSIFICATION	4.414903643682222E-5	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999875570329	WITHOUT_CLASSIFICATION	1.2442967065406255E-8	DEFECT
// basic check for independence	WITHOUT_CLASSIFICATION	0.9999999875570329	WITHOUT_CLASSIFICATION	1.2442967065406255E-8	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999908844473	WITHOUT_CLASSIFICATION	9.11555269993693E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999908844473	WITHOUT_CLASSIFICATION	9.11555269993693E-6	DEFECT
// this is expected	WITHOUT_CLASSIFICATION	0.9999908844473	WITHOUT_CLASSIFICATION	9.11555269993693E-6	DEFECT
// check index == getItemCount() throws exception	WITHOUT_CLASSIFICATION	0.9999985279557049	WITHOUT_CLASSIFICATION	1.4720442951619122E-6	DEFECT
// test null source	WITHOUT_CLASSIFICATION	0.9999998842969449	WITHOUT_CLASSIFICATION	1.1570305513827997E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999999907465169	WITHOUT_CLASSIFICATION	9.253483051985867E-9	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999932086049546	WITHOUT_CLASSIFICATION	6.79139504548033E-6	DEFECT
// increment a null value	WITHOUT_CLASSIFICATION	0.9999991614810597	WITHOUT_CLASSIFICATION	8.385189403773483E-7	DEFECT
// increment an unknown row	WITHOUT_CLASSIFICATION	0.9999958099319425	WITHOUT_CLASSIFICATION	4.190068057481841E-6	DEFECT
// increment an unknown column	WITHOUT_CLASSIFICATION	0.9999973704929119	WITHOUT_CLASSIFICATION	2.6295070881039626E-6	DEFECT
// a row of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9993626239092828	WITHOUT_CLASSIFICATION	6.37376090717285E-4	DEFECT
// a column of all null values is still counted...	WITHOUT_CLASSIFICATION	0.9997603593936522	WITHOUT_CLASSIFICATION	2.3964060634785336E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9997223713840119	WITHOUT_CLASSIFICATION	2.7762861598807357E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999997253069603	WITHOUT_CLASSIFICATION	2.746930397006716E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999997253069603	WITHOUT_CLASSIFICATION	2.746930397006716E-6	DEFECT
// check that two empty datasets are equal	WITHOUT_CLASSIFICATION	0.9999999068578619	WITHOUT_CLASSIFICATION	9.314213819466487E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999791338287	WITHOUT_CLASSIFICATION	2.0866171435360695E-8	DEFECT
// check an empty dataset	WITHOUT_CLASSIFICATION	0.9999999791338287	WITHOUT_CLASSIFICATION	2.0866171435360695E-8	DEFECT
// make sure that modifying the returned array doesn't change the // function	WITHOUT_CLASSIFICATION	0.9999994608537671	WITHOUT_CLASSIFICATION	5.391462328638336E-7	DEFECT
// note that we don't define taskB1	WITHOUT_CLASSIFICATION	0.999999732139525	WITHOUT_CLASSIFICATION	2.678604750788003E-7	DEFECT
// define subtasks	WITHOUT_CLASSIFICATION	0.9999998867574339	WITHOUT_CLASSIFICATION	1.1324256599970047E-7	DEFECT
/* Number start = */	WITHOUT_CLASSIFICATION	0.9999999240746257	WITHOUT_CLASSIFICATION	7.592537434546355E-8	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999999455963159	WITHOUT_CLASSIFICATION	5.440368416857118E-8	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999999455963159	WITHOUT_CLASSIFICATION	5.440368416857118E-8	DEFECT
// test collection 3, which doesn't define all tasks in all series	WITHOUT_CLASSIFICATION	0.9999999455963159	WITHOUT_CLASSIFICATION	5.440368416857118E-8	DEFECT
/* int count = */	WITHOUT_CLASSIFICATION	0.9999887722606515	WITHOUT_CLASSIFICATION	1.1227739348404293E-5	DEFECT
/* Number end = */	WITHOUT_CLASSIFICATION	0.9999985341810476	WITHOUT_CLASSIFICATION	1.4658189524796057E-6	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999997865269917	WITHOUT_CLASSIFICATION	2.1347300838578806E-7	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999999316107835	WITHOUT_CLASSIFICATION	6.83892165217492E-8	DEFECT
// what if we don't want the interval?	WITHOUT_CLASSIFICATION	0.9999987092532004	WITHOUT_CLASSIFICATION	1.2907467995503012E-6	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999999527593979	WITHOUT_CLASSIFICATION	4.72406021855032E-8	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999999804700839	WITHOUT_CLASSIFICATION	1.9529916115944636E-8	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999996898362585	WITHOUT_CLASSIFICATION	3.101637415492848E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999996898362585	WITHOUT_CLASSIFICATION	3.101637415492848E-7	DEFECT
// null is ignored	WITHOUT_CLASSIFICATION	0.9999997105161013	WITHOUT_CLASSIFICATION	2.894838987966734E-7	DEFECT
// a Double.NaN should be ignored	WITHOUT_CLASSIFICATION	0.9999999643713918	WITHOUT_CLASSIFICATION	3.5628608280150193E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.999999418375424	WITHOUT_CLASSIFICATION	5.816245759272244E-7	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.999999418375424	WITHOUT_CLASSIFICATION	5.816245759272244E-7	DEFECT
// check that clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999894768473	WITHOUT_CLASSIFICATION	1.052315265599985E-8	DEFECT
/* Number n =*/	WITHOUT_CLASSIFICATION	0.9999932086049546	WITHOUT_CLASSIFICATION	6.79139504548033E-6	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9997223713840119	WITHOUT_CLASSIFICATION	2.7762861598807357E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999997253069603	WITHOUT_CLASSIFICATION	2.746930397006716E-6	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999999316107835	WITHOUT_CLASSIFICATION	6.83892165217492E-8	DEFECT
// simple check for independence	WITHOUT_CLASSIFICATION	0.9999999316107835	WITHOUT_CLASSIFICATION	6.83892165217492E-8	DEFECT
// try a single item	WITHOUT_CLASSIFICATION	0.9999997865269917	WITHOUT_CLASSIFICATION	2.1347300838578806E-7	DEFECT
// another item	WITHOUT_CLASSIFICATION	0.9999999907465169	WITHOUT_CLASSIFICATION	9.253483051985867E-9	DEFECT
// another empty series	WITHOUT_CLASSIFICATION	0.9999999804700839	WITHOUT_CLASSIFICATION	1.9529916115944636E-8	DEFECT
// an item in series 2	WITHOUT_CLASSIFICATION	0.9999999527593979	WITHOUT_CLASSIFICATION	4.72406021855032E-8	DEFECT
// Double.NaN DOESN'T mess things up	WITHOUT_CLASSIFICATION	0.9999997926228005	WITHOUT_CLASSIFICATION	2.0737719946159584E-7	DEFECT
// got it!	WITHOUT_CLASSIFICATION	0.9998017467570942	WITHOUT_CLASSIFICATION	1.9825324290583573E-4	DEFECT
// check that empty dataset is handled OK	WITHOUT_CLASSIFICATION	0.99999999511195	WITHOUT_CLASSIFICATION	4.888049970096869E-9	DEFECT
// and that simple aggregation works	WITHOUT_CLASSIFICATION	0.9999817533786688	WITHOUT_CLASSIFICATION	1.8246621331175842E-5	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999996218536961	WITHOUT_CLASSIFICATION	3.7814630399646207E-7	DEFECT
// an empty dataset should return a null max	WITHOUT_CLASSIFICATION	0.9999996218536961	WITHOUT_CLASSIFICATION	3.7814630399646207E-7	DEFECT
// null dataset throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999991316952589	WITHOUT_CLASSIFICATION	8.683047411400485E-7	DEFECT
// null list throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999992579394196	WITHOUT_CLASSIFICATION	7.420605804317658E-7	DEFECT
// null range throws IllegalArgumentException	WITHOUT_CLASSIFICATION	0.999999588672085	WITHOUT_CLASSIFICATION	4.113279149558623E-7	DEFECT
// empty dataset returns null	WITHOUT_CLASSIFICATION	0.9999997815473675	WITHOUT_CLASSIFICATION	2.1845263257879275E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999999247812197	WITHOUT_CLASSIFICATION	7.521878032585702E-8	DEFECT
// check a null value	WITHOUT_CLASSIFICATION	0.9999998120689276	WITHOUT_CLASSIFICATION	1.8793107226762126E-7	DEFECT
// check a NaN	WITHOUT_CLASSIFICATION	0.999999936130444	WITHOUT_CLASSIFICATION	6.386955600086529E-8	DEFECT
// check another regular value	WITHOUT_CLASSIFICATION	0.9999999406396001	WITHOUT_CLASSIFICATION	5.936039998796274E-8	DEFECT
// add a second series	WITHOUT_CLASSIFICATION	0.9999989538947798	WITHOUT_CLASSIFICATION	1.0461052202247364E-6	DEFECT
// add a value to the second series	WITHOUT_CLASSIFICATION	0.9999984990438452	WITHOUT_CLASSIFICATION	1.500956154795439E-6	DEFECT
// add a value that isn't in the xRange	WITHOUT_CLASSIFICATION	0.9999754838942282	WITHOUT_CLASSIFICATION	2.4516105771828915E-5	DEFECT
// try some nulls	WITHOUT_CLASSIFICATION	0.9999741241937017	WITHOUT_CLASSIFICATION	2.5875806298395254E-5	DEFECT
// an empty dataset should return null for bounds	WITHOUT_CLASSIFICATION	0.9999999372727656	WITHOUT_CLASSIFICATION	6.27272344625297E-8	DEFECT
// try a dataset with a single value	WITHOUT_CLASSIFICATION	0.9999983715811133	WITHOUT_CLASSIFICATION	1.628418886705619E-6	DEFECT
// try a dataset with two values	WITHOUT_CLASSIFICATION	0.9999975900142983	WITHOUT_CLASSIFICATION	2.4099857016297126E-6	DEFECT
// try a Double.NaN	WITHOUT_CLASSIFICATION	0.9999985001225614	WITHOUT_CLASSIFICATION	1.4998774384908138E-6	DEFECT
// try a Double.NEGATIVE_INFINITY	WITHOUT_CLASSIFICATION	0.999998189192698	WITHOUT_CLASSIFICATION	1.8108073020465331E-6	DEFECT
// overwrite the value	WITHOUT_CLASSIFICATION	0.9999999437188146	WITHOUT_CLASSIFICATION	5.628118536678478E-8	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999993096194282	WITHOUT_CLASSIFICATION	6.903805717291315E-7	DEFECT
// now overwrite this item with another	WITHOUT_CLASSIFICATION	0.9999999683065698	WITHOUT_CLASSIFICATION	3.169343018468633E-8	DEFECT
// try null list	WITHOUT_CLASSIFICATION	0.9999977610420978	WITHOUT_CLASSIFICATION	2.2389579021883116E-6	DEFECT
// try a list containing a single value	WITHOUT_CLASSIFICATION	0.9999999183048383	WITHOUT_CLASSIFICATION	8.169516176390975E-8	DEFECT
// try null array	WITHOUT_CLASSIFICATION	0.9999967458431999	WITHOUT_CLASSIFICATION	3.254156800186298E-6	DEFECT
// try an array containing no items	WITHOUT_CLASSIFICATION	0.9999999415944466	WITHOUT_CLASSIFICATION	5.840555349111023E-8	DEFECT
// try an array containing a single Number	WITHOUT_CLASSIFICATION	0.9999998981110836	WITHOUT_CLASSIFICATION	1.0188891636817912E-7	DEFECT
// try an array containing a single Number and a null	WITHOUT_CLASSIFICATION	0.9999984961434714	WITHOUT_CLASSIFICATION	1.5038565287559032E-6	DEFECT
// try an array containing a single Number and a NaN	WITHOUT_CLASSIFICATION	0.9999996765230617	WITHOUT_CLASSIFICATION	3.234769383424646E-7	DEFECT
// try a null argument	WITHOUT_CLASSIFICATION	0.9999994670569797	WITHOUT_CLASSIFICATION	5.329430203683056E-7	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999984565915387	WITHOUT_CLASSIFICATION	1.5434084611985466E-6	DEFECT
// try null argument	WITHOUT_CLASSIFICATION	0.999999418375424	WITHOUT_CLASSIFICATION	5.816245759272244E-7	DEFECT
// test independence	WITHOUT_CLASSIFICATION	0.9999993096194282	WITHOUT_CLASSIFICATION	6.903805717291315E-7	DEFECT
// try an empty collection	WITHOUT_CLASSIFICATION	0.9999976440711918	WITHOUT_CLASSIFICATION	2.3559288081834937E-6	DEFECT
// try a collection with a single number	WITHOUT_CLASSIFICATION	0.9999973889364772	WITHOUT_CLASSIFICATION	2.6110635227480134E-6	DEFECT
// try a collection with a single number plus a NaN	WITHOUT_CLASSIFICATION	0.99999653744854	WITHOUT_CLASSIFICATION	3.4625514601170847E-6	DEFECT
// try a collection with several numbers	WITHOUT_CLASSIFICATION	0.9999999092676278	WITHOUT_CLASSIFICATION	9.073237213973785E-8	DEFECT
// a Collection containing a NaN will return Double.NaN for the result	WITHOUT_CLASSIFICATION	0.9999999769705976	WITHOUT_CLASSIFICATION	2.3029402390997376E-8	DEFECT
// check null list	WITHOUT_CLASSIFICATION	0.9999999431152393	WITHOUT_CLASSIFICATION	5.68847607267248E-8	DEFECT
// check empty list	WITHOUT_CLASSIFICATION	0.9999999724946235	WITHOUT_CLASSIFICATION	2.7505376542367076E-8	DEFECT
// check list containing null	WITHOUT_CLASSIFICATION	0.9999999866053358	WITHOUT_CLASSIFICATION	1.339466411801753E-8	DEFECT
// try zero length array	WITHOUT_CLASSIFICATION	0.9999969391080361	WITHOUT_CLASSIFICATION	3.0608919640056555E-6	DEFECT
// try single value	WITHOUT_CLASSIFICATION	0.9999994359285695	WITHOUT_CLASSIFICATION	5.640714304039015E-7	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9996235252735557	WITHOUT_CLASSIFICATION	3.7647472644441055E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try deleting a time period that doesn't exist...	WITHOUT_CLASSIFICATION	0.9998655004199322	WITHOUT_CLASSIFICATION	1.3449958006774072E-4	DEFECT
// try deleting null	WITHOUT_CLASSIFICATION	0.9999940018150596	WITHOUT_CLASSIFICATION	5.9981849403237136E-6	DEFECT
// copy a range before the start of the series data...	WITHOUT_CLASSIFICATION	0.9999990926870146	WITHOUT_CLASSIFICATION	9.073129855460855E-7	DEFECT
// copy a range that includes only the first item in the series...	WITHOUT_CLASSIFICATION	0.9999990360414514	WITHOUT_CLASSIFICATION	9.639585487473338E-7	DEFECT
// copy a range that begins before and ends in the middle of the // series...	WITHOUT_CLASSIFICATION	0.9998726086555473	WITHOUT_CLASSIFICATION	1.273913444526817E-4	DEFECT
// copy just the first item...	WITHOUT_CLASSIFICATION	0.9999999306221341	WITHOUT_CLASSIFICATION	6.937786585013625E-8	DEFECT
// copy the first two items...	WITHOUT_CLASSIFICATION	0.9999987992144996	WITHOUT_CLASSIFICATION	1.2007855003503463E-6	DEFECT
// copy the middle three items...	WITHOUT_CLASSIFICATION	0.9999965178056895	WITHOUT_CLASSIFICATION	3.482194310430046E-6	DEFECT
// copy the last two items...	WITHOUT_CLASSIFICATION	0.9999932299597738	WITHOUT_CLASSIFICATION	6.7700402261957175E-6	DEFECT
// copy the last item...	WITHOUT_CLASSIFICATION	0.9999967585389825	WITHOUT_CLASSIFICATION	3.2414610175534362E-6	DEFECT
// check negative first argument	WITHOUT_CLASSIFICATION	0.9999999983515189	WITHOUT_CLASSIFICATION	1.6484812240281695E-9	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999994519108917	WITHOUT_CLASSIFICATION	5.480891083017961E-7	DEFECT
/* TimeSeries result = */	WITHOUT_CLASSIFICATION	0.9999994519108917	WITHOUT_CLASSIFICATION	5.480891083017961E-7	DEFECT
// check second argument less than first argument	WITHOUT_CLASSIFICATION	0.9999997800032305	WITHOUT_CLASSIFICATION	2.1999676953298197E-7	DEFECT
// changing the overwritten record shouldn't affect the series	WITHOUT_CLASSIFICATION	0.9999945997317177	WITHOUT_CLASSIFICATION	5.400268282327954E-6	DEFECT
// changing the item that was added should not change the series	WITHOUT_CLASSIFICATION	0.9999996865485768	WITHOUT_CLASSIFICATION	3.134514231619671E-7	DEFECT
// can't get anything yet...just an exception	WITHOUT_CLASSIFICATION	0.9998068876777918	WITHOUT_CLASSIFICATION	1.9311232220819928E-4	DEFECT
/*TimeSeriesDataItem item =*/	WITHOUT_CLASSIFICATION	0.9999998214654733	WITHOUT_CLASSIFICATION	1.7853452685960782E-7	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999983351692783	WITHOUT_CLASSIFICATION	1.6648307217088796E-6	DEFECT
/* TimeSeriesDataItem item = */	WITHOUT_CLASSIFICATION	0.9999999688417002	WITHOUT_CLASSIFICATION	3.1158299885302504E-8	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999999364617354	WITHOUT_CLASSIFICATION	6.35382646534586E-8	DEFECT
// test series with one item	WITHOUT_CLASSIFICATION	0.9999998896444514	WITHOUT_CLASSIFICATION	1.1035554855767389E-7	DEFECT
// test series with two items	WITHOUT_CLASSIFICATION	0.9999995072220748	WITHOUT_CLASSIFICATION	4.927779252767983E-7	DEFECT
// milliseconds somewhere in 2006	WITHOUT_CLASSIFICATION	0.999951434787685	WITHOUT_CLASSIFICATION	4.8565212314998475E-5	DEFECT
// test a series with 1 item	WITHOUT_CLASSIFICATION	0.9999999179492349	WITHOUT_CLASSIFICATION	8.205076504236096E-8	DEFECT
// test a series with two items	WITHOUT_CLASSIFICATION	0.9999990111471645	WITHOUT_CLASSIFICATION	9.888528354405322E-7	DEFECT
// this line triggers the defect	WITHOUT_CLASSIFICATION	0.9999967030092052	WITHOUT_CLASSIFICATION	3.296990794924328E-6	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9995256865124894	WITHOUT_CLASSIFICATION	4.74313487510528E-4	DEFECT
// null items are ignored	WITHOUT_CLASSIFICATION	0.9999999916120405	WITHOUT_CLASSIFICATION	8.387959589826764E-9	DEFECT
// if there are only null items, we get a NaNRange	WITHOUT_CLASSIFICATION	0.9999999594950739	WITHOUT_CLASSIFICATION	4.0504926114302207E-8	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998694030807398	WITHOUT_CLASSIFICATION	1.3059691926009287E-4	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998694030807398	WITHOUT_CLASSIFICATION	1.3059691926009287E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998694030807398	WITHOUT_CLASSIFICATION	1.3059691926009287E-4	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999956843353903	WITHOUT_CLASSIFICATION	4.315664609750266E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999965915407797	WITHOUT_CLASSIFICATION	3.4084592202557298E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999965915407797	WITHOUT_CLASSIFICATION	3.4084592202557298E-6	DEFECT
// domain description - null	WITHOUT_CLASSIFICATION	0.9999967555731758	WITHOUT_CLASSIFICATION	3.2444268243002144E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999948692397554	WITHOUT_CLASSIFICATION	5.130760244546061E-6	DEFECT
// a null item should throw an IllegalArgumentException	WITHOUT_CLASSIFICATION	0.9999963866063605	WITHOUT_CLASSIFICATION	3.61339363947048E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999987351113767	WITHOUT_CLASSIFICATION	1.264888623254506E-6	DEFECT
/*Quarter q =*/	WITHOUT_CLASSIFICATION	0.9999987351113767	WITHOUT_CLASSIFICATION	1.264888623254506E-6	DEFECT
// range description	WITHOUT_CLASSIFICATION	0.9999995168918584	WITHOUT_CLASSIFICATION	4.831081416353833E-7	DEFECT
// domain description	WITHOUT_CLASSIFICATION	0.9999981348332257	WITHOUT_CLASSIFICATION	1.8651667742602732E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999999158665035	WITHOUT_CLASSIFICATION	8.413349649427126E-8	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999842556957	WITHOUT_CLASSIFICATION	1.574430433528047E-8	DEFECT
// range description - null	WITHOUT_CLASSIFICATION	0.9999986162492285	WITHOUT_CLASSIFICATION	1.3837507715571165E-6	DEFECT
// check dataset with one time period	WITHOUT_CLASSIFICATION	0.9999999158665035	WITHOUT_CLASSIFICATION	8.413349649427126E-8	DEFECT
// check empty dataset	WITHOUT_CLASSIFICATION	0.9999999842556957	WITHOUT_CLASSIFICATION	1.574430433528047E-8	DEFECT
// add a fourth time period	WITHOUT_CLASSIFICATION	0.9999999155025268	WITHOUT_CLASSIFICATION	8.449747330043713E-8	DEFECT
// add a third time period	WITHOUT_CLASSIFICATION	0.9999996546766757	WITHOUT_CLASSIFICATION	3.453233242763413E-7	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999999064175905	WITHOUT_CLASSIFICATION	9.358240958165791E-8	DEFECT
// check dataset with two time periods	WITHOUT_CLASSIFICATION	0.9999999064175905	WITHOUT_CLASSIFICATION	9.358240958165791E-8	DEFECT
// first day of week is Sunday	WITHOUT_CLASSIFICATION	0.9999982732973287	WITHOUT_CLASSIFICATION	1.726702671323607E-6	DEFECT
// first day of week is monday	WITHOUT_CLASSIFICATION	0.999996324665244	WITHOUT_CLASSIFICATION	3.675334756015171E-6	DEFECT
// try null zone	WITHOUT_CLASSIFICATION	0.9999923416084189	WITHOUT_CLASSIFICATION	7.658391581161143E-6	DEFECT
// add series to collection 1, should be not equal	WITHOUT_CLASSIFICATION	0.9999944453471592	WITHOUT_CLASSIFICATION	5.554652840793934E-6	DEFECT
// newly created collections should be equal	WITHOUT_CLASSIFICATION	0.9999983062978048	WITHOUT_CLASSIFICATION	1.6937021952479481E-6	DEFECT
// now add the same series to collection 2 to make them equal again...	WITHOUT_CLASSIFICATION	0.9999983810683768	WITHOUT_CLASSIFICATION	1.6189316231449624E-6	DEFECT
// now remove series 2 from collection 2	WITHOUT_CLASSIFICATION	0.99998045804336	WITHOUT_CLASSIFICATION	1.9541956639979467E-5	DEFECT
// now remove series 2 from collection 1 to make them equal again	WITHOUT_CLASSIFICATION	0.9999996944616657	WITHOUT_CLASSIFICATION	3.055383343619942E-7	DEFECT
// for a series with no data, we expect {-1, -1}...	WITHOUT_CLASSIFICATION	0.999973749173568	WITHOUT_CLASSIFICATION	2.6250826432085015E-5	DEFECT
// now test with a single value in the series...	WITHOUT_CLASSIFICATION	0.999998434498923	WITHOUT_CLASSIFICATION	1.5655010769922114E-6	DEFECT
// now add a second value to the series...	WITHOUT_CLASSIFICATION	0.9999677586781592	WITHOUT_CLASSIFICATION	3.224132184071512E-5	DEFECT
// now add a third value to the series...	WITHOUT_CLASSIFICATION	0.9999969436600763	WITHOUT_CLASSIFICATION	3.0563399238186725E-6	DEFECT
/* TimeSeries s = */	WITHOUT_CLASSIFICATION	0.9999997698929598	WITHOUT_CLASSIFICATION	2.30107040120569E-7	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999445651539899	WITHOUT_CLASSIFICATION	5.543484601006439E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999069729349325	WITHOUT_CLASSIFICATION	9.302706506756153E-5	DEFECT
// store the current time zone	WITHOUT_CLASSIFICATION	0.9999999792810466	WITHOUT_CLASSIFICATION	2.0718953416373617E-8	DEFECT
// restore the default time zone	WITHOUT_CLASSIFICATION	0.9999999918831239	WITHOUT_CLASSIFICATION	8.116876136924913E-9	DEFECT
// when the dataset contains no series, we expect the range to be null	WITHOUT_CLASSIFICATION	0.9999994816861512	WITHOUT_CLASSIFICATION	5.183138488059848E-7	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999995438135738	WITHOUT_CLASSIFICATION	4.5618642615782396E-7	DEFECT
// adding a second series	WITHOUT_CLASSIFICATION	0.9999981176455134	WITHOUT_CLASSIFICATION	1.8823544867043198E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999915393037604	WITHOUT_CLASSIFICATION	8.460696239705948E-6	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999897189338518	WITHOUT_CLASSIFICATION	1.0281066148208425E-5	DEFECT
// period	WITHOUT_CLASSIFICATION	0.999995201320769	WITHOUT_CLASSIFICATION	4.798679231023719E-6	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999998847878488	WITHOUT_CLASSIFICATION	1.1521215121200792E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999998847878488	WITHOUT_CLASSIFICATION	1.1521215121200792E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999992038637835	WITHOUT_CLASSIFICATION	7.961362165694782E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999992038637835	WITHOUT_CLASSIFICATION	7.961362165694782E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998658285139	WITHOUT_CLASSIFICATION	1.3417148611448689E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998658285139	WITHOUT_CLASSIFICATION	1.3417148611448689E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9997223713840119	WITHOUT_CLASSIFICATION	2.7762861598807357E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9997223713840119	WITHOUT_CLASSIFICATION	2.7762861598807357E-4	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999999247812197	WITHOUT_CLASSIFICATION	7.521878032585702E-8	DEFECT
// locale shouldn't matter here	WITHOUT_CLASSIFICATION	0.9996235252735557	WITHOUT_CLASSIFICATION	3.7647472644441055E-4	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998694030807398	WITHOUT_CLASSIFICATION	1.3059691926009287E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998694030807398	WITHOUT_CLASSIFICATION	1.3059691926009287E-4	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999965915407797	WITHOUT_CLASSIFICATION	3.4084592202557298E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999965915407797	WITHOUT_CLASSIFICATION	3.4084592202557298E-6	DEFECT
// test 1...	WITHOUT_CLASSIFICATION	0.9999965915407797	WITHOUT_CLASSIFICATION	3.4084592202557298E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999948692397554	WITHOUT_CLASSIFICATION	5.130760244546061E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999948692397554	WITHOUT_CLASSIFICATION	5.130760244546061E-6	DEFECT
// test 2...	WITHOUT_CLASSIFICATION	0.9999948692397554	WITHOUT_CLASSIFICATION	5.130760244546061E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999956843353903	WITHOUT_CLASSIFICATION	4.315664609750266E-6	DEFECT
// test 3...	WITHOUT_CLASSIFICATION	0.9999956843353903	WITHOUT_CLASSIFICATION	4.315664609750266E-6	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999445651539899	WITHOUT_CLASSIFICATION	5.543484601006439E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999069729349325	WITHOUT_CLASSIFICATION	9.302706506756153E-5	DEFECT
// now test that the clone is independent of the original	WITHOUT_CLASSIFICATION	0.9999999895227237	WITHOUT_CLASSIFICATION	1.0477276279147275E-8	DEFECT
// Make sure there's nothing left	WITHOUT_CLASSIFICATION	0.999999895784651	WITHOUT_CLASSIFICATION	1.0421534898185283E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999997182299794	WITHOUT_CLASSIFICATION	2.817700207076654E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999997182299794	WITHOUT_CLASSIFICATION	2.817700207076654E-7	DEFECT
// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)	WITHOUT_CLASSIFICATION	0.999996358435919	WITHOUT_CLASSIFICATION	3.641564080909577E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999998325365038	WITHOUT_CLASSIFICATION	1.674634962277295E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999997182299794	WITHOUT_CLASSIFICATION	2.817700207076654E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999942259752833	WITHOUT_CLASSIFICATION	5.7740247167683855E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999957744782565	WITHOUT_CLASSIFICATION	4.2255217434520405E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999957744782565	WITHOUT_CLASSIFICATION	4.2255217434520405E-6	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999957744782565	WITHOUT_CLASSIFICATION	4.2255217434520405E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999998048539491	WITHOUT_CLASSIFICATION	1.95146050738561E-7	DEFECT
// now add another series	WITHOUT_CLASSIFICATION	0.9999999222034548	WITHOUT_CLASSIFICATION	7.779654519633538E-8	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999990772902582	WITHOUT_CLASSIFICATION	9.227097418134446E-7	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999844110654473	WITHOUT_CLASSIFICATION	1.5588934552720307E-5	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.999999989272963	WITHOUT_CLASSIFICATION	1.0727037028183985E-8	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.999999989272963	WITHOUT_CLASSIFICATION	1.0727037028183985E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999995122374598	WITHOUT_CLASSIFICATION	4.87762540255668E-7	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999890058148186	WITHOUT_CLASSIFICATION	1.0994185181323041E-5	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999915393037604	WITHOUT_CLASSIFICATION	8.460696239705948E-6	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999897189338518	WITHOUT_CLASSIFICATION	1.0281066148208425E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997457129243	WITHOUT_CLASSIFICATION	2.5428707575041493E-7	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997457129243	WITHOUT_CLASSIFICATION	2.5428707575041493E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999998847878488	WITHOUT_CLASSIFICATION	1.1521215121200792E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999992038637835	WITHOUT_CLASSIFICATION	7.961362165694782E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998658285139	WITHOUT_CLASSIFICATION	1.3417148611448689E-7	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9997223713840119	WITHOUT_CLASSIFICATION	2.7762861598807357E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9997223713840119	WITHOUT_CLASSIFICATION	2.7762861598807357E-4	DEFECT
// try a dataset with some content...	WITHOUT_CLASSIFICATION	0.9997223713840119	WITHOUT_CLASSIFICATION	2.7762861598807357E-4	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999997253069603	WITHOUT_CLASSIFICATION	2.746930397006716E-6	DEFECT
// check that the clone doesn't share the same underlying arrays.	WITHOUT_CLASSIFICATION	0.999997253069603	WITHOUT_CLASSIFICATION	2.746930397006716E-6	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999999247812197	WITHOUT_CLASSIFICATION	7.521878032585702E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999069729349325	WITHOUT_CLASSIFICATION	9.302706506756153E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999069729349325	WITHOUT_CLASSIFICATION	9.302706506756153E-5	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999995438135738	WITHOUT_CLASSIFICATION	4.5618642615782396E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999997182299794	WITHOUT_CLASSIFICATION	2.817700207076654E-7	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999957744782565	WITHOUT_CLASSIFICATION	4.2255217434520405E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999998325365038	WITHOUT_CLASSIFICATION	1.674634962277295E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999942259752833	WITHOUT_CLASSIFICATION	5.7740247167683855E-6	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999942259752833	WITHOUT_CLASSIFICATION	5.7740247167683855E-6	DEFECT
// and check the first series too...	WITHOUT_CLASSIFICATION	0.9999998048539491	WITHOUT_CLASSIFICATION	1.95146050738561E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.999999989272963	WITHOUT_CLASSIFICATION	1.0727037028183985E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999995122374598	WITHOUT_CLASSIFICATION	4.87762540255668E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999990772902582	WITHOUT_CLASSIFICATION	9.227097418134446E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999990772902582	WITHOUT_CLASSIFICATION	9.227097418134446E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999990772902582	WITHOUT_CLASSIFICATION	9.227097418134446E-7	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999987698260298	WITHOUT_CLASSIFICATION	1.2301739701782019E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999987698260298	WITHOUT_CLASSIFICATION	1.2301739701782019E-6	DEFECT
// check that adding a series will overwrite the old series	WITHOUT_CLASSIFICATION	0.9999987698260298	WITHOUT_CLASSIFICATION	1.2301739701782019E-6	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999994409730343	WITHOUT_CLASSIFICATION	5.5902696567403E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999994409730343	WITHOUT_CLASSIFICATION	5.5902696567403E-7	DEFECT
// check null key	WITHOUT_CLASSIFICATION	0.9999994409730343	WITHOUT_CLASSIFICATION	5.5902696567403E-7	DEFECT
// try an index out of bounds	WITHOUT_CLASSIFICATION	0.9999989499124211	WITHOUT_CLASSIFICATION	1.0500875789115254E-6	DEFECT
// now add some more data	WITHOUT_CLASSIFICATION	0.9999991553642619	WITHOUT_CLASSIFICATION	8.446357380400315E-7	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999919356347223	WITHOUT_CLASSIFICATION	8.064365277592532E-6	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999944815850051	WITHOUT_CLASSIFICATION	5.518414994861887E-6	DEFECT
// first check that a valid renaming works	WITHOUT_CLASSIFICATION	0.9999994313018815	WITHOUT_CLASSIFICATION	5.686981184626309E-7	DEFECT
// next, check that setting a duplicate key fails	WITHOUT_CLASSIFICATION	0.9999953257703454	WITHOUT_CLASSIFICATION	4.67422965454364E-6	DEFECT
// create an array of items in reverse order	WITHOUT_CLASSIFICATION	0.9999997374391727	WITHOUT_CLASSIFICATION	2.6256082736336075E-7	DEFECT
// got the required exception	WITHOUT_CLASSIFICATION	0.9999400108100999	WITHOUT_CLASSIFICATION	5.998918990003298E-5	DEFECT
// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default	WITHOUT_CLASSIFICATION	0.999999989673017	WITHOUT_CLASSIFICATION	1.032698305601724E-8	DEFECT
// call parent method // setup flag based on bounds values	WITHOUT_CLASSIFICATION	0.9999973014565752	WITHOUT_CLASSIFICATION	2.6985434248034587E-6	DEFECT
//if flag then change to log version of lowest value // to make range begin at a 10^n value:	WITHOUT_CLASSIFICATION	0.9999982775970938	WITHOUT_CLASSIFICATION	1.7224029061929918E-6	DEFECT
//if less than 1.0 then make it 1.0 //add in margin and get exponential value:	WITHOUT_CLASSIFICATION	0.999997921046039	WITHOUT_CLASSIFICATION	2.078953961054979E-6	DEFECT
//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:	WITHOUT_CLASSIFICATION	0.9996669523181082	WITHOUT_CLASSIFICATION	3.330476818918641E-4	DEFECT
//not first tick to be displayed //no tick label	WITHOUT_CLASSIFICATION	0.9999980363075203	WITHOUT_CLASSIFICATION	1.9636924797039118E-6	DEFECT
// check independence	WITHOUT_CLASSIFICATION	0.9999994911041328	WITHOUT_CLASSIFICATION	5.088958672899913E-7	DEFECT
// x	WITHOUT_CLASSIFICATION	0.9999915393037604	WITHOUT_CLASSIFICATION	8.460696239705948E-6	DEFECT
// y	WITHOUT_CLASSIFICATION	0.9999897189338518	WITHOUT_CLASSIFICATION	1.0281066148208425E-5	DEFECT
// default instances	WITHOUT_CLASSIFICATION	0.9999997457129243	WITHOUT_CLASSIFICATION	2.5428707575041493E-7	DEFECT
// TBLRC // 00000 - no items	WITHOUT_CLASSIFICATION	0.9999995568405152	WITHOUT_CLASSIFICATION	4.431594848212126E-7	DEFECT
// try a few checks to ensure that the clone is independent of the // original	WITHOUT_CLASSIFICATION	0.9999998594224949	WITHOUT_CLASSIFICATION	1.4057750504521698E-7	DEFECT
// autoSort	WITHOUT_CLASSIFICATION	0.9999998847878488	WITHOUT_CLASSIFICATION	1.1521215121200792E-7	DEFECT
// add a value	WITHOUT_CLASSIFICATION	0.9999992038637835	WITHOUT_CLASSIFICATION	7.961362165694782E-7	DEFECT
// add another value	WITHOUT_CLASSIFICATION	0.9999998658285139	WITHOUT_CLASSIFICATION	1.3417148611448689E-7	DEFECT
// add an empty series	WITHOUT_CLASSIFICATION	0.9999999247812197	WITHOUT_CLASSIFICATION	7.521878032585702E-8	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999980846629806	WITHOUT_CLASSIFICATION	1.9153370193799165E-6	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9997320284550081	WITHOUT_CLASSIFICATION	2.6797154499191167E-4	DEFECT
// check that removing by index also works	WITHOUT_CLASSIFICATION	0.9995256865124894	WITHOUT_CLASSIFICATION	4.74313487510528E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999445651539899	WITHOUT_CLASSIFICATION	5.543484601006439E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999069729349325	WITHOUT_CLASSIFICATION	9.302706506756153E-5	DEFECT
// remove a value	WITHOUT_CLASSIFICATION	0.9999957744782565	WITHOUT_CLASSIFICATION	4.2255217434520405E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999998325365038	WITHOUT_CLASSIFICATION	1.674634962277295E-7	DEFECT
/* XYSeries s = */	WITHOUT_CLASSIFICATION	0.9999942259752833	WITHOUT_CLASSIFICATION	5.7740247167683855E-6	DEFECT
// yLow	WITHOUT_CLASSIFICATION	0.9999844110654473	WITHOUT_CLASSIFICATION	1.5588934552720307E-5	DEFECT
// yHigh	WITHOUT_CLASSIFICATION	0.9999890058148186	WITHOUT_CLASSIFICATION	1.0994185181323041E-5	DEFECT
// xLow	WITHOUT_CLASSIFICATION	0.9999919356347223	WITHOUT_CLASSIFICATION	8.064365277592532E-6	DEFECT
// xHigh	WITHOUT_CLASSIFICATION	0.9999944815850051	WITHOUT_CLASSIFICATION	5.518414994861887E-6	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999993007630545	WITHOUT_CLASSIFICATION	6.992369455764786E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999900901334454	WITHOUT_CLASSIFICATION	9.909866554661465E-6	DEFECT
// the series name should not  // change because "C" is already the key for the other series in the // collection	WITHOUT_CLASSIFICATION	0.9999997351544183	WITHOUT_CLASSIFICATION	2.648455816643423E-7	DEFECT
//  Test that there are 6 X points and some specific values	WITHOUT_CLASSIFICATION	0.9999999333296397	WITHOUT_CLASSIFICATION	6.667036033399287E-8	DEFECT
// after adding a point to a series, check that there are now 7 // items in each series	WITHOUT_CLASSIFICATION	0.9999999063641365	WITHOUT_CLASSIFICATION	9.363586347282047E-8	DEFECT
//  Remove series 1	WITHOUT_CLASSIFICATION	0.9999899249040299	WITHOUT_CLASSIFICATION	1.0075095970080118E-5	DEFECT
//  Test that there are still 7 X points	WITHOUT_CLASSIFICATION	0.9999994659342882	WITHOUT_CLASSIFICATION	5.340657117647574E-7	DEFECT
//  Remove series 2 and add new series	WITHOUT_CLASSIFICATION	0.999968869950614	WITHOUT_CLASSIFICATION	3.1130049386010115E-5	DEFECT
//  Test that there are now 4 X points	WITHOUT_CLASSIFICATION	0.9999998651285302	WITHOUT_CLASSIFICATION	1.3487146976342418E-7	DEFECT
// WITH AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999975461278384	WITHOUT_CLASSIFICATION	2.453872161670149E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999975714102142	WITHOUT_CLASSIFICATION	2.4285897857862706E-6	DEFECT
// should be 2 items	WITHOUT_CLASSIFICATION	0.9999975714102142	WITHOUT_CLASSIFICATION	2.4285897857862706E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999976881386898	WITHOUT_CLASSIFICATION	2.3118613100952953E-6	DEFECT
// still 2	WITHOUT_CLASSIFICATION	0.9999976881386898	WITHOUT_CLASSIFICATION	2.3118613100952953E-6	DEFECT
// 1 value pruned.	WITHOUT_CLASSIFICATION	0.999998795856024	WITHOUT_CLASSIFICATION	1.2041439759766896E-6	DEFECT
// WITHOUT AUTOPRUNING	WITHOUT_CLASSIFICATION	0.9999978972891365	WITHOUT_CLASSIFICATION	2.1027108635467775E-6	DEFECT
// still 2.	WITHOUT_CLASSIFICATION	0.9999983271718675	WITHOUT_CLASSIFICATION	1.6728281324968173E-6	DEFECT
// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************	WITHOUT_CLASSIFICATION	0.9999977812532204	WITHOUT_CLASSIFICATION	2.2187467795995947E-6	DEFECT
// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...	WITHOUT_CLASSIFICATION	0.9999993079008782	WITHOUT_CLASSIFICATION	6.920991217551566E-7	DEFECT
// since the flow layout is relatively straightforward, // no information needs to be recorded here	WITHOUT_CLASSIFICATION	0.9999989723577207	WITHOUT_CLASSIFICATION	1.0276422792297268E-6	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999570099881566	WITHOUT_CLASSIFICATION	4.2990011843310885E-5	DEFECT
// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation	WITHOUT_CLASSIFICATION	0.9993230572377104	WITHOUT_CLASSIFICATION	6.769427622895895E-4	DEFECT
// the link area defines the dog leg points for the linking lines to // the labels	WITHOUT_CLASSIFICATION	0.9999999671848337	WITHOUT_CLASSIFICATION	3.281516631854925E-8	DEFECT
// if the current stroke is not a BasicStroke then it is handled as // a special case	WITHOUT_CLASSIFICATION	0.9999994027007398	WITHOUT_CLASSIFICATION	5.972992601774817E-7	DEFECT
// after setting up all the subplots, the shared range axis may need // reconfiguring	WITHOUT_CLASSIFICATION	0.9999999891705282	WITHOUT_CLASSIFICATION	1.082947174930796E-8	DEFECT
// if there is an existing dataset, remove the plot from the list of // change listeners...	WITHOUT_CLASSIFICATION	0.999999986302798	WITHOUT_CLASSIFICATION	1.3697202125161466E-8	DEFECT
// the segment is entirely at the // front of the chart	WITHOUT_CLASSIFICATION	0.9999980840180364	WITHOUT_CLASSIFICATION	1.915981963557003E-6	DEFECT
// starts at back and wraps right around to the // back again	WITHOUT_CLASSIFICATION	0.9999997766574978	WITHOUT_CLASSIFICATION	2.2334250221209402E-7	DEFECT
// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...	WITHOUT_CLASSIFICATION	0.9999997158250995	WITHOUT_CLASSIFICATION	2.8417490047046473E-7	DEFECT
//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);	WITHOUT_CLASSIFICATION	0.9999996776306149	WITHOUT_CLASSIFICATION	3.223693850319135E-7	DEFECT
// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...	WITHOUT_CLASSIFICATION	0.999336940748522	WITHOUT_CLASSIFICATION	6.630592514779983E-4	DEFECT
// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.	WITHOUT_CLASSIFICATION	0.9999222629753359	WITHOUT_CLASSIFICATION	7.773702466406152E-5	DEFECT
// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...	WITHOUT_CLASSIFICATION	0.9999999416341335	WITHOUT_CLASSIFICATION	5.8365866499614964E-8	DEFECT
// if the 'notify' flag has been switched to false, we don't notify // the listeners	WITHOUT_CLASSIFICATION	0.9999994965204765	WITHOUT_CLASSIFICATION	5.034795235562986E-7	DEFECT
// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead	WITHOUT_CLASSIFICATION	0.9996250836297896	WITHOUT_CLASSIFICATION	3.7491637021037796E-4	DEFECT
// For the case were the first tick is greater // than minZ	WITHOUT_CLASSIFICATION	0.999999740454572	WITHOUT_CLASSIFICATION	2.5954542802031604E-7	DEFECT
// add an entity for the item, but only if it falls within the // data area...	WITHOUT_CLASSIFICATION	0.9998192918460606	WITHOUT_CLASSIFICATION	1.8070815393956158E-4	DEFECT
// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...	WITHOUT_CLASSIFICATION	0.9999992287796541	WITHOUT_CLASSIFICATION	7.712203459246317E-7	DEFECT
// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value	WITHOUT_CLASSIFICATION	0.9999997957885628	WITHOUT_CLASSIFICATION	2.0421143711614688E-7	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999570099881566	WITHOUT_CLASSIFICATION	4.2990011843310885E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...	WITHOUT_CLASSIFICATION	0.9999570099881566	WITHOUT_CLASSIFICATION	4.2990011843310885E-5	DEFECT
/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999998844127541	WITHOUT_CLASSIFICATION	1.1558724591913423E-7	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999857383788	WITHOUT_CLASSIFICATION	1.4261621193984285E-8	DEFECT
// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow	WITHOUT_CLASSIFICATION	0.9999999857383788	WITHOUT_CLASSIFICATION	1.4261621193984285E-8	DEFECT
// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...	WITHOUT_CLASSIFICATION	0.9999999933262693	WITHOUT_CLASSIFICATION	6.673730769371531E-9	DEFECT
// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?	WITHOUT_CLASSIFICATION	0.9973814092264344	WITHOUT_CLASSIFICATION	0.0026185907735656725	DEFECT
// average radius // outlier radius	WITHOUT_CLASSIFICATION	0.9999999329404954	WITHOUT_CLASSIFICATION	6.705950457070876E-8	DEFECT
// false preserves the old behaviour // prior to introducing this flag	WITHOUT_CLASSIFICATION	0.9999908053025149	WITHOUT_CLASSIFICATION	9.194697484953752E-6	DEFECT
// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.	WITHOUT_CLASSIFICATION	0.9999999903323155	WITHOUT_CLASSIFICATION	9.667684509807556E-9	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999646323184918	WITHOUT_CLASSIFICATION	3.53676815083327E-5	DEFECT
// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...	WITHOUT_CLASSIFICATION	0.9999646323184918	WITHOUT_CLASSIFICATION	3.53676815083327E-5	DEFECT
// deregister the collection as a change listener to each series in // the collection.	WITHOUT_CLASSIFICATION	0.9999999234193913	WITHOUT_CLASSIFICATION	7.658060875859884E-8	DEFECT
// handle the special case where the dataset has y-intervals that // we want to measure	WITHOUT_CLASSIFICATION	0.9999999997123222	WITHOUT_CLASSIFICATION	2.8767781551771546E-10	DEFECT
// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984099931621	WITHOUT_CLASSIFICATION	1.5900068377721126E-6	DEFECT
// CASE 1 : Comparing to another Second object // -------------------------------------------	WITHOUT_CLASSIFICATION	0.9999950998682756	WITHOUT_CLASSIFICATION	4.9001317244181685E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end	WITHOUT_CLASSIFICATION	0.9999380042646557	WITHOUT_CLASSIFICATION	6.199573534428368E-5	DEFECT
// the first initialization must precede creation of the ValueSet array: // establishes length of each array	WITHOUT_CLASSIFICATION	0.9999997009055677	WITHOUT_CLASSIFICATION	2.9909443238511846E-7	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// here we check that the average marker will in fact be // visible before drawing it...	WITHOUT_CLASSIFICATION	0.9998872814375034	WITHOUT_CLASSIFICATION	1.1271856249661399E-4	DEFECT
// draw outliers // outlier radius	WITHOUT_CLASSIFICATION	0.9999998491593922	WITHOUT_CLASSIFICATION	1.5084060785565177E-7	DEFECT
// NULL value -> insert point on base line // instead of 'step point'	WITHOUT_CLASSIFICATION	0.9999999727242675	WITHOUT_CLASSIFICATION	2.727573243517778E-8	DEFECT
// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point	WITHOUT_CLASSIFICATION	0.9999980219144241	WITHOUT_CLASSIFICATION	1.978085575923699E-6	DEFECT
// the intersect is at the next point for both the minuend // and subtrahend	WITHOUT_CLASSIFICATION	0.9999994633842365	WITHOUT_CLASSIFICATION	5.366157635155617E-7	DEFECT
// create the polygon // add the minuend's points to polygon	WITHOUT_CLASSIFICATION	0.9999989625766355	WITHOUT_CLASSIFICATION	1.0374233645785208E-6	DEFECT
// the following code handles the line for the y-values...it's // all done by code in the super class	WITHOUT_CLASSIFICATION	0.9999970679656064	WITHOUT_CLASSIFICATION	2.9320343935663883E-6	DEFECT
// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.	WITHOUT_CLASSIFICATION	0.9999999896845738	WITHOUT_CLASSIFICATION	1.0315426139383103E-8	DEFECT
// use item paint for outlines by // default, not outline paint	WITHOUT_CLASSIFICATION	0.9999998667446949	WITHOUT_CLASSIFICATION	1.33255305025167E-7	DEFECT
// add an entity for the item, but only if it falls within the data // area...	WITHOUT_CLASSIFICATION	0.9999604874272867	WITHOUT_CLASSIFICATION	3.951257271328831E-5	DEFECT
// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one	WITHOUT_CLASSIFICATION	0.9999999654638632	WITHOUT_CLASSIFICATION	3.453613682244149E-8	DEFECT
// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]	WITHOUT_CLASSIFICATION	0.9999951372457258	WITHOUT_CLASSIFICATION	4.862754274209426E-6	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// create the new color and set it to the // SwtPaintCanvas	WITHOUT_CLASSIFICATION	0.9999999959915519	WITHOUT_CLASSIFICATION	4.008448106495802E-9	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value	WITHOUT_CLASSIFICATION	0.9999999318816187	WITHOUT_CLASSIFICATION	6.811838127912231E-8	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// try null calendar	WITHOUT_CLASSIFICATION	0.999975150723493	WITHOUT_CLASSIFICATION	2.48492765070319E-5	DEFECT
// have to use a subclass of // AbstractRenderer	WITHOUT_CLASSIFICATION	0.9999985511499077	WITHOUT_CLASSIFICATION	1.4488500922568225E-6	DEFECT
// include legend // tooltips // urls	WITHOUT_CLASSIFICATION	0.9999999518457146	WITHOUT_CLASSIFICATION	4.815428550679313E-8	DEFECT
// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions	WITHOUT_CLASSIFICATION	0.9999999937009699	WITHOUT_CLASSIFICATION	6.2990300523533515E-9	DEFECT
////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999651734852	WITHOUT_CLASSIFICATION	3.4826514799751593E-7	DEFECT
// we use ValueMarker for the tests, because we need a concrete // subclass...	WITHOUT_CLASSIFICATION	0.9999996324277104	WITHOUT_CLASSIFICATION	3.6757228949745344E-7	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999982811788027	WITHOUT_CLASSIFICATION	1.7188211973201722E-6	DEFECT
// now check that all datasets, renderers and axes are being listened // too...	WITHOUT_CLASSIFICATION	0.9999982811788027	WITHOUT_CLASSIFICATION	1.7188211973201722E-6	DEFECT
// after clearing, reverts to // default group	WITHOUT_CLASSIFICATION	0.999999961266878	WITHOUT_CLASSIFICATION	3.8733122023742114E-8	DEFECT
// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...	WITHOUT_CLASSIFICATION	0.9999999901497724	WITHOUT_CLASSIFICATION	9.850227716024267E-9	DEFECT
// these methods should throw an IndexOutOfBoundsException since the // column is too high...	WITHOUT_CLASSIFICATION	0.9929774171629187	WITHOUT_CLASSIFICATION	0.007022582837081399	DEFECT
// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item	WITHOUT_CLASSIFICATION	0.9999910906894551	WITHOUT_CLASSIFICATION	8.909310544826208E-6	DEFECT
// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset	WITHOUT_CLASSIFICATION	0.999995467275306	WITHOUT_CLASSIFICATION	4.532724694118165E-6	DEFECT
/*item = */	WITHOUT_CLASSIFICATION	0.9999983351692783	WITHOUT_CLASSIFICATION	1.6648307217088796E-6	DEFECT
// test empty series	WITHOUT_CLASSIFICATION	0.9999999364617354	WITHOUT_CLASSIFICATION	6.35382646534586E-8	DEFECT
// now we should be allowed to change s1's key to anything but "S2"	WITHOUT_CLASSIFICATION	0.9999980846629806	WITHOUT_CLASSIFICATION	1.9153370193799165E-6	DEFECT
// after s1 is removed from the collection, we should be able to set // the key to anything we want...	WITHOUT_CLASSIFICATION	0.9997320284550081	WITHOUT_CLASSIFICATION	2.6797154499191167E-4	DEFECT
// locale should not matter here	WITHOUT_CLASSIFICATION	0.9998694030807398	WITHOUT_CLASSIFICATION	1.3059691926009287E-4	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999445651539899	WITHOUT_CLASSIFICATION	5.543484601006439E-5	DEFECT
// correct outcome	WITHOUT_CLASSIFICATION	0.9999445651539899	WITHOUT_CLASSIFICATION	5.543484601006439E-5	DEFECT
// wrong outcome	WITHOUT_CLASSIFICATION	0.9999069729349325	WITHOUT_CLASSIFICATION	9.302706506756153E-5	DEFECT
// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null	WITHOUT_CLASSIFICATION	0.9999968653633039	WITHOUT_CLASSIFICATION	3.1346366960033036E-6	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999995438135738	WITHOUT_CLASSIFICATION	4.5618642615782396E-7	DEFECT
// tests with values	WITHOUT_CLASSIFICATION	0.9999995438135738	WITHOUT_CLASSIFICATION	4.5618642615782396E-7	DEFECT
// seriesKey	WITHOUT_CLASSIFICATION	0.9999997182299794	WITHOUT_CLASSIFICATION	2.817700207076654E-7	DEFECT
// open	WITHOUT_CLASSIFICATION	0.9999955451727114	WITHOUT_CLASSIFICATION	4.454827288713434E-6	DEFECT
// add a series	WITHOUT_CLASSIFICATION	0.9999998325365038	WITHOUT_CLASSIFICATION	1.674634962277295E-7	DEFECT
// allowDuplicateValues	WITHOUT_CLASSIFICATION	0.999999989272963	WITHOUT_CLASSIFICATION	1.0727037028183985E-8	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999995122374598	WITHOUT_CLASSIFICATION	4.87762540255668E-7	DEFECT
// check for series key out of bounds	WITHOUT_CLASSIFICATION	0.9999995122374598	WITHOUT_CLASSIFICATION	4.87762540255668E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999990772902582	WITHOUT_CLASSIFICATION	9.227097418134446E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999990772902582	WITHOUT_CLASSIFICATION	9.227097418134446E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999990772902582	WITHOUT_CLASSIFICATION	9.227097418134446E-7	DEFECT
/*Comparable k =*/	WITHOUT_CLASSIFICATION	0.9999990772902582	WITHOUT_CLASSIFICATION	9.227097418134446E-7	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999993007630545	WITHOUT_CLASSIFICATION	6.992369455764786E-7	DEFECT
// when the dataset contains no series, we expect the value range to  // be null	WITHOUT_CLASSIFICATION	0.9999993007630545	WITHOUT_CLASSIFICATION	6.992369455764786E-7	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999900901334454	WITHOUT_CLASSIFICATION	9.909866554661465E-6	DEFECT
// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null	WITHOUT_CLASSIFICATION	0.9999900901334454	WITHOUT_CLASSIFICATION	9.909866554661465E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.999938059019621	WITHOUT_CLASSIFICATION	6.1940980378958E-5	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999961937673023	WITHOUT_CLASSIFICATION	3.8062326976753605E-6	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.999999835655347	WITHOUT_CLASSIFICATION	1.6434465295390877E-7	DEFECT
// what is our alignment?	WITHOUT_CLASSIFICATION	0.999999835655347	WITHOUT_CLASSIFICATION	1.6434465295390877E-7	DEFECT
// seem to be the same...	WITHOUT_CLASSIFICATION	0.9999961937673023	WITHOUT_CLASSIFICATION	3.8062326976753605E-6	DEFECT
// slope	WITHOUT_CLASSIFICATION	0.9999985730553004	WITHOUT_CLASSIFICATION	1.4269446996633559E-6	DEFECT
// complicate things a little...	WITHOUT_CLASSIFICATION	0.999938059019621	WITHOUT_CLASSIFICATION	6.1940980378958E-5	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995964643137	WITHOUT_CLASSIFICATION	4.035356862904614E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995964643137	WITHOUT_CLASSIFICATION	4.035356862904614E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995964643137	WITHOUT_CLASSIFICATION	4.035356862904614E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995964643137	WITHOUT_CLASSIFICATION	4.035356862904614E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995964643137	WITHOUT_CLASSIFICATION	4.035356862904614E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995964643137	WITHOUT_CLASSIFICATION	4.035356862904614E-7	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999999991083	WITHOUT_CLASSIFICATION	8.916024567360216E-13	DEFECT
/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */	WITHOUT_CLASSIFICATION	0.9999999999955446	WITHOUT_CLASSIFICATION	4.455515476804887E-12	DEFECT
/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */	WITHOUT_CLASSIFICATION	0.9999999998946825	WITHOUT_CLASSIFICATION	1.0531746880152362E-10	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995964643137	WITHOUT_CLASSIFICATION	4.035356862904614E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995964643137	WITHOUT_CLASSIFICATION	4.035356862904614E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995964643137	WITHOUT_CLASSIFICATION	4.035356862904614E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995964643137	WITHOUT_CLASSIFICATION	4.035356862904614E-7	DEFECT
// expected	WITHOUT_CLASSIFICATION	0.9999995964643137	WITHOUT_CLASSIFICATION	4.035356862904614E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999883432971	WITHOUT_CLASSIFICATION	1.1656702896219108E-7	DEFECT
// ignore	WITHOUT_CLASSIFICATION	0.999999883432971	WITHOUT_CLASSIFICATION	1.1656702896219108E-7	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999978894056836	WITHOUT_CLASSIFICATION	2.1105943163464258E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999978894056836	WITHOUT_CLASSIFICATION	2.1105943163464258E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999978894056836	WITHOUT_CLASSIFICATION	2.1105943163464258E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999978894056836	WITHOUT_CLASSIFICATION	2.1105943163464258E-6	DEFECT
//}	WITHOUT_CLASSIFICATION	0.9999826335748253	WITHOUT_CLASSIFICATION	1.736642517470226E-5	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999991369994506	WITHOUT_CLASSIFICATION	8.630005494288009E-7	DEFECT
// find out where to place the label...	WITHOUT_CLASSIFICATION	0.9999991369994506	WITHOUT_CLASSIFICATION	8.630005494288009E-7	DEFECT
// Anwender hat abgebrochen.	WITHOUT_CLASSIFICATION	0.9999969116492453	WITHOUT_CLASSIFICATION	3.0883507546017663E-6	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999991367781488	WITHOUT_CLASSIFICATION	8.632218511583146E-7	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999991367781488	WITHOUT_CLASSIFICATION	8.632218511583146E-7	DEFECT
// ...but this does!	WITHOUT_CLASSIFICATION	0.9998710663062869	WITHOUT_CLASSIFICATION	1.289336937130681E-4	DEFECT
// insets	WITHOUT_CLASSIFICATION	0.9999991367781488	WITHOUT_CLASSIFICATION	8.632218511583146E-7	DEFECT
// check defaults	WITHOUT_CLASSIFICATION	0.9999999928276923	WITHOUT_CLASSIFICATION	7.17230775366883E-9	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999978894056836	WITHOUT_CLASSIFICATION	2.1105943163464258E-6	DEFECT
// do nothing	WITHOUT_CLASSIFICATION	0.9999978894056836	WITHOUT_CLASSIFICATION	2.1105943163464258E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// nothing to do	WITHOUT_CLASSIFICATION	0.9999963962780283	WITHOUT_CLASSIFICATION	3.603721971851803E-6	DEFECT
// OK	WITHOUT_CLASSIFICATION	0.9999984565915387	WITHOUT_CLASSIFICATION	1.5434084611985466E-6	DEFECT
// FIXME: we've cloned the chart, but the dataset(s) aren't cloned // and we should do that	DEFECT	0.9912273768799547	WITHOUT_CLASSIFICATION	0.008772623120045252	DEFECT
// todo: not serialized yet	DEFECT	0.9998308767324633	WITHOUT_CLASSIFICATION	1.6912326753670395E-4	DEFECT
// FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); // preceding code won't work with JDK 1.3	DEFECT	0.9863326391955693	WITHOUT_CLASSIFICATION	0.0136673608044308	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.5743794054980605	WITHOUT_CLASSIFICATION	0.4256205945019394	DEFECT
// TODO: we didn't check the height yet	DEFECT	0.5743794054980605	WITHOUT_CLASSIFICATION	0.4256205945019394	DEFECT
// TODO: Check this result...	DEFECT	0.6971749266703771	WITHOUT_CLASSIFICATION	0.30282507332962294	DEFECT
// TODO: Check this result...	DEFECT	0.6971749266703771	WITHOUT_CLASSIFICATION	0.30282507332962294	DEFECT
//return cal.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9998001279771913	WITHOUT_CLASSIFICATION	1.998720228087784E-4	DEFECT
// result = this.workingCalendar.getTimeInMillis(); // preceding code won't work with JDK 1.3	DEFECT	0.9998645186225527	WITHOUT_CLASSIFICATION	1.354813774473935E-4	DEFECT
