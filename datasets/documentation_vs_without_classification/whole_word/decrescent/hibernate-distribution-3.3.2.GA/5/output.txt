//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999322248228053	WITHOUT_CLASSIFICATION	6.77751771947112E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999330038244045	WITHOUT_CLASSIFICATION	6.699617559550697E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999330038244045	WITHOUT_CLASSIFICATION	6.699617559550697E-5	DOCUMENTATION
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.999665573313746	WITHOUT_CLASSIFICATION	3.3442668625403615E-4	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.999987619914233	WITHOUT_CLASSIFICATION	1.238008576696527E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999492180209698	WITHOUT_CLASSIFICATION	5.078197903020903E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999492180209698	WITHOUT_CLASSIFICATION	5.078197903020903E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999494137893956	WITHOUT_CLASSIFICATION	5.058621060439182E-5	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999703093680626	WITHOUT_CLASSIFICATION	2.9690631937438717E-5	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999954270913181	WITHOUT_CLASSIFICATION	4.572908681919921E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999883519431912	WITHOUT_CLASSIFICATION	1.164805680874316E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999427820423734	WITHOUT_CLASSIFICATION	5.721795762653765E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999427820423734	WITHOUT_CLASSIFICATION	5.721795762653765E-5	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999111249908185	WITHOUT_CLASSIFICATION	8.887500918150783E-5	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9999976631789365	WITHOUT_CLASSIFICATION	2.336821063613782E-6	DOCUMENTATION
// decode row selection...	WITHOUT_CLASSIFICATION	0.9999732499042994	WITHOUT_CLASSIFICATION	2.6750095700633195E-5	DOCUMENTATION
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999529544379957	WITHOUT_CLASSIFICATION	4.704556200423475E-5	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999990365077717	WITHOUT_CLASSIFICATION	9.634922283672395E-7	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.999909719432241	WITHOUT_CLASSIFICATION	9.028056775901043E-5	DOCUMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9999098295283678	WITHOUT_CLASSIFICATION	9.0170471632085E-5	DOCUMENTATION
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9996966673134159	WITHOUT_CLASSIFICATION	3.033326865840245E-4	DOCUMENTATION
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999815990962515	WITHOUT_CLASSIFICATION	1.8400903748496104E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999935782847498	WITHOUT_CLASSIFICATION	6.4217152502672735E-6	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999815905792845	WITHOUT_CLASSIFICATION	1.8409420715504345E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999815905792845	WITHOUT_CLASSIFICATION	1.8409420715504345E-5	DOCUMENTATION
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9999969490824507	WITHOUT_CLASSIFICATION	3.0509175493905554E-6	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999122085146772	WITHOUT_CLASSIFICATION	8.779148532281027E-5	DOCUMENTATION
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.999142943964623	WITHOUT_CLASSIFICATION	8.570560353770765E-4	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999683510676274	WITHOUT_CLASSIFICATION	3.164893237255003E-5	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.9996549810528177	WITHOUT_CLASSIFICATION	3.450189471822967E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.8695211396110228	DOCUMENTATION	0.13047886038897713	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.8695211396110228	DOCUMENTATION	0.13047886038897713	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999536081175262	WITHOUT_CLASSIFICATION	4.639188247376501E-5	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999992512263268	WITHOUT_CLASSIFICATION	7.48773673201098E-7	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999999180504001	WITHOUT_CLASSIFICATION	8.194959982055882E-8	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.999918929617101	WITHOUT_CLASSIFICATION	8.107038289898552E-5	DOCUMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999625082651494	WITHOUT_CLASSIFICATION	3.7491734850586886E-5	DOCUMENTATION
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680853990527	WITHOUT_CLASSIFICATION	3.1914600947346715E-5	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681519580024	WITHOUT_CLASSIFICATION	3.1848041997691014E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999917018538363	WITHOUT_CLASSIFICATION	8.298146163625383E-6	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9984180081740476	WITHOUT_CLASSIFICATION	0.0015819918259524102	DOCUMENTATION
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9999934605046682	WITHOUT_CLASSIFICATION	6.539495331798344E-6	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9996806806828594	WITHOUT_CLASSIFICATION	3.1931931714053544E-4	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9984180081740476	WITHOUT_CLASSIFICATION	0.0015819918259524102	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9996806806828594	WITHOUT_CLASSIFICATION	3.1931931714053544E-4	DOCUMENTATION
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9998538718969449	WITHOUT_CLASSIFICATION	1.4612810305515947E-4	DOCUMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9999998927048115	WITHOUT_CLASSIFICATION	1.0729518860092889E-7	DOCUMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999746486682988	WITHOUT_CLASSIFICATION	2.535133170119139E-5	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999988962827208	WITHOUT_CLASSIFICATION	1.1037172791435757E-6	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999905734186849	WITHOUT_CLASSIFICATION	9.426581315054993E-6	DOCUMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.999999897016724	WITHOUT_CLASSIFICATION	1.0298327606359849E-7	DOCUMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9987186698922015	WITHOUT_CLASSIFICATION	0.0012813301077986069	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9999876972869272	WITHOUT_CLASSIFICATION	1.2302713072706747E-5	DOCUMENTATION
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999993148846459	WITHOUT_CLASSIFICATION	6.85115354115134E-7	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9999458189836845	WITHOUT_CLASSIFICATION	5.4181016315513585E-5	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.999989118337128	WITHOUT_CLASSIFICATION	1.0881662872032803E-5	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999817526130583	WITHOUT_CLASSIFICATION	1.8247386941582067E-5	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999997645700441	WITHOUT_CLASSIFICATION	2.3542995574719908E-7	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9999835812718607	WITHOUT_CLASSIFICATION	1.641872813929387E-5	DOCUMENTATION
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9999998383808549	WITHOUT_CLASSIFICATION	1.6161914509550345E-7	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999944643313832	WITHOUT_CLASSIFICATION	5.535668616815815E-6	DOCUMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.999991422064581	WITHOUT_CLASSIFICATION	8.577935419026081E-6	DOCUMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.999999481093135	WITHOUT_CLASSIFICATION	5.189068650383891E-7	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999920694048872	WITHOUT_CLASSIFICATION	7.930595112899632E-6	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999965445596084	WITHOUT_CLASSIFICATION	3.45544039154102E-6	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999907959294393	WITHOUT_CLASSIFICATION	9.204070560679599E-6	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999998705463217	WITHOUT_CLASSIFICATION	1.2945367829653166E-7	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.999996394974726	WITHOUT_CLASSIFICATION	3.6050252739651338E-6	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999497397778585	WITHOUT_CLASSIFICATION	5.0260222141611275E-5	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9999998618760431	WITHOUT_CLASSIFICATION	1.3812395697131658E-7	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.999965624684487	WITHOUT_CLASSIFICATION	3.437531551291219E-5	DOCUMENTATION
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999988497328723	WITHOUT_CLASSIFICATION	1.150267127716283E-6	DOCUMENTATION
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9999902396357871	WITHOUT_CLASSIFICATION	9.760364212788551E-6	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999935902868784	WITHOUT_CLASSIFICATION	6.409713121522451E-6	DOCUMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.999968958872003	WITHOUT_CLASSIFICATION	3.104112799711387E-5	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999932176223955	WITHOUT_CLASSIFICATION	6.782377604582998E-6	DOCUMENTATION
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999645874225895	WITHOUT_CLASSIFICATION	3.541257741048542E-5	DOCUMENTATION
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999951383647058	WITHOUT_CLASSIFICATION	4.86163529420709E-6	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999754095818887	WITHOUT_CLASSIFICATION	2.4590418111205523E-5	DOCUMENTATION
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999923208427371	WITHOUT_CLASSIFICATION	7.679157262927656E-6	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999992202462366	WITHOUT_CLASSIFICATION	7.797537634598106E-7	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999754095818887	WITHOUT_CLASSIFICATION	2.4590418111205523E-5	DOCUMENTATION
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999992530542632	WITHOUT_CLASSIFICATION	7.469457367974893E-7	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999111439226551	WITHOUT_CLASSIFICATION	8.885607734496313E-5	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999919163859344	WITHOUT_CLASSIFICATION	8.083614065484439E-6	DOCUMENTATION
// construct the cache	WITHOUT_CLASSIFICATION	0.9999883595992654	WITHOUT_CLASSIFICATION	1.1640400734677223E-5	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999385182184474	WITHOUT_CLASSIFICATION	6.148178155258273E-5	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999385182184474	WITHOUT_CLASSIFICATION	6.148178155258273E-5	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9996807842461868	WITHOUT_CLASSIFICATION	3.192157538132082E-4	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.999999343804037	WITHOUT_CLASSIFICATION	6.561959630038238E-7	DOCUMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9997785555875693	WITHOUT_CLASSIFICATION	2.214444124306765E-4	DOCUMENTATION
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999967908382219	WITHOUT_CLASSIFICATION	3.2091617780383403E-6	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.9999994141158712	WITHOUT_CLASSIFICATION	5.858841287001846E-7	DOCUMENTATION
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999975796445415	WITHOUT_CLASSIFICATION	2.420355458572449E-6	DOCUMENTATION
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999962902468835	WITHOUT_CLASSIFICATION	3.7097531165866705E-6	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.99999116584838	WITHOUT_CLASSIFICATION	8.834151619971853E-6	DOCUMENTATION
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999894141562534	WITHOUT_CLASSIFICATION	1.05858437466145E-5	DOCUMENTATION
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999843526302905	WITHOUT_CLASSIFICATION	1.5647369709510694E-5	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999969637815929	WITHOUT_CLASSIFICATION	3.0362184072367205E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999969637815929	WITHOUT_CLASSIFICATION	3.0362184072367205E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999911965511623	WITHOUT_CLASSIFICATION	8.80344883776554E-6	DOCUMENTATION
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.999989330124123	WITHOUT_CLASSIFICATION	1.0669875876945419E-5	DOCUMENTATION
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9999910899462461	WITHOUT_CLASSIFICATION	8.91005375385648E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999969637815929	WITHOUT_CLASSIFICATION	3.0362184072367205E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999911965511623	WITHOUT_CLASSIFICATION	8.80344883776554E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999911965511623	WITHOUT_CLASSIFICATION	8.80344883776554E-6	DOCUMENTATION
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9999929516465405	WITHOUT_CLASSIFICATION	7.048353459615317E-6	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9999735437918954	WITHOUT_CLASSIFICATION	2.645620810461064E-5	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999975462399231	WITHOUT_CLASSIFICATION	2.45376007688397E-6	DOCUMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999971741621846	WITHOUT_CLASSIFICATION	2.8258378154641226E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999973591064343	WITHOUT_CLASSIFICATION	2.6408935657444795E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999973591064343	WITHOUT_CLASSIFICATION	2.6408935657444795E-6	DOCUMENTATION
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9996081110473644	WITHOUT_CLASSIFICATION	3.91888952635547E-4	DOCUMENTATION
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9994917593655384	WITHOUT_CLASSIFICATION	5.082406344616102E-4	DOCUMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999830534770363	WITHOUT_CLASSIFICATION	1.694652296375643E-5	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.999984661638137	WITHOUT_CLASSIFICATION	1.5338361862931727E-5	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.999984661638137	WITHOUT_CLASSIFICATION	1.5338361862931727E-5	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9995280736221895	WITHOUT_CLASSIFICATION	4.7192637781051996E-4	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999953275934026	WITHOUT_CLASSIFICATION	4.672406597341133E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.999578343137108	WITHOUT_CLASSIFICATION	4.216568628919343E-4	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999998335703851	WITHOUT_CLASSIFICATION	1.6642961478608328E-7	DOCUMENTATION
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999454921929841	WITHOUT_CLASSIFICATION	5.450780701582352E-5	DOCUMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999981851126216	WITHOUT_CLASSIFICATION	1.8148873784387842E-6	DOCUMENTATION
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9994414137523052	WITHOUT_CLASSIFICATION	5.585862476947521E-4	DOCUMENTATION
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9999958341468743	WITHOUT_CLASSIFICATION	4.16585312557844E-6	DOCUMENTATION
//sort first by role name	WITHOUT_CLASSIFICATION	0.999822498625985	WITHOUT_CLASSIFICATION	1.775013740150203E-4	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.999578343137108	WITHOUT_CLASSIFICATION	4.216568628919343E-4	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.999820053977808	WITHOUT_CLASSIFICATION	1.7994602219193658E-4	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999926048042016	WITHOUT_CLASSIFICATION	7.395195798413541E-6	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999926048042016	WITHOUT_CLASSIFICATION	7.395195798413541E-6	DOCUMENTATION
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999996950812251	WITHOUT_CLASSIFICATION	3.04918774939103E-7	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999986105578649	WITHOUT_CLASSIFICATION	1.389442135147271E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999946464036377	WITHOUT_CLASSIFICATION	5.353596362314855E-6	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9941448067900724	WITHOUT_CLASSIFICATION	0.005855193209927566	DOCUMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9998223260576284	WITHOUT_CLASSIFICATION	1.7767394237164154E-4	DOCUMENTATION
//then by id	WITHOUT_CLASSIFICATION	0.9998234214696962	WITHOUT_CLASSIFICATION	1.76578530303818E-4	DOCUMENTATION
// to be safe...	WITHOUT_CLASSIFICATION	0.99999833068194	WITHOUT_CLASSIFICATION	1.6693180600083735E-6	DOCUMENTATION
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9999847347525607	WITHOUT_CLASSIFICATION	1.5265247439345405E-5	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999950408711811	WITHOUT_CLASSIFICATION	4.959128818922947E-6	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999950408711811	WITHOUT_CLASSIFICATION	4.959128818922947E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999188846374498	WITHOUT_CLASSIFICATION	8.11153625502227E-5	DOCUMENTATION
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999322248228053	WITHOUT_CLASSIFICATION	6.77751771947112E-5	DOCUMENTATION
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.999993996736895	WITHOUT_CLASSIFICATION	6.003263104984999E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// invokespecial	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999330038244045	WITHOUT_CLASSIFICATION	6.699617559550697E-5	DOCUMENTATION
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999738813584867	WITHOUT_CLASSIFICATION	2.6118641513220945E-5	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999723516539787	WITHOUT_CLASSIFICATION	2.764834602136921E-5	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999730594724755	WITHOUT_CLASSIFICATION	2.694052752443499E-5	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999825005693546	WITHOUT_CLASSIFICATION	1.7499430645480145E-5	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9999836056167051	WITHOUT_CLASSIFICATION	1.6394383294889608E-5	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9999379730836616	WITHOUT_CLASSIFICATION	6.202691633837194E-5	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999096520886345	WITHOUT_CLASSIFICATION	9.034791136553865E-5	DOCUMENTATION
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999870603849348	WITHOUT_CLASSIFICATION	1.2939615065141086E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// aastore // args	WITHOUT_CLASSIFICATION	0.9999825005693546	WITHOUT_CLASSIFICATION	1.7499430645480145E-5	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9996921086825065	WITHOUT_CLASSIFICATION	3.0789131749351875E-4	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999900824159756	WITHOUT_CLASSIFICATION	9.917584024345942E-6	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999731874761367	WITHOUT_CLASSIFICATION	2.6812523863258925E-5	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999886209824771	WITHOUT_CLASSIFICATION	1.1379017522912033E-5	DOCUMENTATION
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999977374369445	WITHOUT_CLASSIFICATION	2.26256305552589E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999492180209698	WITHOUT_CLASSIFICATION	5.078197903020903E-5	DOCUMENTATION
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999858161361397	WITHOUT_CLASSIFICATION	1.4183863860262088E-5	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999826573510352	WITHOUT_CLASSIFICATION	1.7342648964868878E-5	DOCUMENTATION
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999879976040514	WITHOUT_CLASSIFICATION	1.2002395948638866E-5	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999891786936465	WITHOUT_CLASSIFICATION	1.0821306353557323E-5	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// aaload	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999815849038178	WITHOUT_CLASSIFICATION	1.8415096182173553E-5	DOCUMENTATION
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999782557272522	WITHOUT_CLASSIFICATION	2.1744272747842473E-5	DOCUMENTATION
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999798914631537	WITHOUT_CLASSIFICATION	2.010853684626662E-5	DOCUMENTATION
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999638947341655	WITHOUT_CLASSIFICATION	3.610526583452364E-5	DOCUMENTATION
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.999990081964059	WITHOUT_CLASSIFICATION	9.91803594100653E-6	DOCUMENTATION
// register in exception table	WITHOUT_CLASSIFICATION	0.9999554364869077	WITHOUT_CLASSIFICATION	4.456351309230756E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999330038244045	WITHOUT_CLASSIFICATION	6.699617559550697E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999330038244045	WITHOUT_CLASSIFICATION	6.699617559550697E-5	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999096520886345	WITHOUT_CLASSIFICATION	9.034791136553865E-5	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999815849038178	WITHOUT_CLASSIFICATION	1.8415096182173553E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999494137893956	WITHOUT_CLASSIFICATION	5.058621060439182E-5	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.999975420061999	WITHOUT_CLASSIFICATION	2.4579938000969357E-5	DOCUMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9999781204343752	WITHOUT_CLASSIFICATION	2.1879565624853763E-5	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999761699342283	WITHOUT_CLASSIFICATION	2.3830065771630703E-5	DOCUMENTATION
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999816861173748	WITHOUT_CLASSIFICATION	1.8313882625191822E-5	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999524735091522	WITHOUT_CLASSIFICATION	4.752649084782427E-5	DOCUMENTATION
//swallow	WITHOUT_CLASSIFICATION	0.9984180081740476	WITHOUT_CLASSIFICATION	0.0015819918259524102	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9997327172805616	WITHOUT_CLASSIFICATION	2.672827194384493E-4	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999448332318569	WITHOUT_CLASSIFICATION	5.516676814311787E-5	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999448332318569	WITHOUT_CLASSIFICATION	5.516676814311787E-5	DOCUMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999830224794609	WITHOUT_CLASSIFICATION	1.6977520539154434E-5	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999950607120038	WITHOUT_CLASSIFICATION	4.939287996167172E-6	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9997181727243348	WITHOUT_CLASSIFICATION	2.818272756652147E-4	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999738721577175	WITHOUT_CLASSIFICATION	2.612784228247019E-5	DOCUMENTATION
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.999978791588027	WITHOUT_CLASSIFICATION	2.1208411972913775E-5	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999832601178669	WITHOUT_CLASSIFICATION	1.6739882133166637E-5	DOCUMENTATION
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999850632831917	WITHOUT_CLASSIFICATION	1.4936716808340946E-5	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999703093680626	WITHOUT_CLASSIFICATION	2.9690631937438717E-5	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999838767833323	WITHOUT_CLASSIFICATION	1.612321666762576E-5	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999838767833323	WITHOUT_CLASSIFICATION	1.612321666762576E-5	DOCUMENTATION
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999838767833323	WITHOUT_CLASSIFICATION	1.612321666762576E-5	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999947260334334	WITHOUT_CLASSIFICATION	5.273966566590378E-6	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999838767833323	WITHOUT_CLASSIFICATION	1.612321666762576E-5	DOCUMENTATION
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.9999828783831274	WITHOUT_CLASSIFICATION	1.7121616872589655E-5	DOCUMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999203079559363	WITHOUT_CLASSIFICATION	7.969204406375382E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999330038244045	WITHOUT_CLASSIFICATION	6.699617559550697E-5	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999096520886345	WITHOUT_CLASSIFICATION	9.034791136553865E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999815849038178	WITHOUT_CLASSIFICATION	1.8415096182173553E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999815849038178	WITHOUT_CLASSIFICATION	1.8415096182173553E-5	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999720406754716	WITHOUT_CLASSIFICATION	2.7959324528363063E-5	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.9999864614958477	WITHOUT_CLASSIFICATION	1.3538504152395827E-5	DOCUMENTATION
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999884790684495	WITHOUT_CLASSIFICATION	1.1520931550558964E-5	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.999993570440934	WITHOUT_CLASSIFICATION	6.429559065979944E-6	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999883519431912	WITHOUT_CLASSIFICATION	1.164805680874316E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999883519431912	WITHOUT_CLASSIFICATION	1.164805680874316E-5	DOCUMENTATION
// not array	WITHOUT_CLASSIFICATION	0.999990824383903	WITHOUT_CLASSIFICATION	9.175616097024112E-6	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.9999888692313688	WITHOUT_CLASSIFICATION	1.1130768631264276E-5	DOCUMENTATION
// boolean	WITHOUT_CLASSIFICATION	0.9999141424903775	WITHOUT_CLASSIFICATION	8.585750962256423E-5	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9999109858517494	WITHOUT_CLASSIFICATION	8.901414825053488E-5	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9999107894994336	WITHOUT_CLASSIFICATION	8.921050056643765E-5	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9999097707111854	WITHOUT_CLASSIFICATION	9.022928881462207E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999427820423734	WITHOUT_CLASSIFICATION	5.721795762653765E-5	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999096196510607	WITHOUT_CLASSIFICATION	9.038034893924483E-5	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999096196510607	WITHOUT_CLASSIFICATION	9.038034893924483E-5	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999111249908185	WITHOUT_CLASSIFICATION	8.887500918150783E-5	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999111249908185	WITHOUT_CLASSIFICATION	8.887500918150783E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999872901352076	WITHOUT_CLASSIFICATION	1.2709864792321942E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999872901352076	WITHOUT_CLASSIFICATION	1.2709864792321942E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999687664518019	WITHOUT_CLASSIFICATION	3.123354819815262E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999687664518019	WITHOUT_CLASSIFICATION	3.123354819815262E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999883519431912	WITHOUT_CLASSIFICATION	1.164805680874316E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999427820423734	WITHOUT_CLASSIFICATION	5.721795762653765E-5	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999096196510607	WITHOUT_CLASSIFICATION	9.038034893924483E-5	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999096196510607	WITHOUT_CLASSIFICATION	9.038034893924483E-5	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999111249908185	WITHOUT_CLASSIFICATION	8.887500918150783E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999872901352076	WITHOUT_CLASSIFICATION	1.2709864792321942E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999872901352076	WITHOUT_CLASSIFICATION	1.2709864792321942E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999687664518019	WITHOUT_CLASSIFICATION	3.123354819815262E-5	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999785727014583	WITHOUT_CLASSIFICATION	2.142729854162955E-5	DOCUMENTATION
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9996575118478471	WITHOUT_CLASSIFICATION	3.42488152152786E-4	DOCUMENTATION
//decrement the lock	WITHOUT_CLASSIFICATION	0.9998602372513514	WITHOUT_CLASSIFICATION	1.3976274864863533E-4	DOCUMENTATION
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999845526479187	WITHOUT_CLASSIFICATION	1.5447352081225228E-5	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9997723248310407	WITHOUT_CLASSIFICATION	2.2767516895933195E-4	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999095402427046	WITHOUT_CLASSIFICATION	9.045975729536659E-5	DOCUMENTATION
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9989966017151387	WITHOUT_CLASSIFICATION	0.0010033982848612958	DOCUMENTATION
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.999999872056656	WITHOUT_CLASSIFICATION	1.279433441011952E-7	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9985383740224996	WITHOUT_CLASSIFICATION	0.001461625977500448	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999971569938696	WITHOUT_CLASSIFICATION	2.843006130286635E-6	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999700652903393	WITHOUT_CLASSIFICATION	2.993470966067359E-5	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999746734667151	WITHOUT_CLASSIFICATION	2.5326533284811558E-5	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9996807842461868	WITHOUT_CLASSIFICATION	3.192157538132082E-4	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999095402427046	WITHOUT_CLASSIFICATION	9.045975729536659E-5	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9984180081740476	WITHOUT_CLASSIFICATION	0.0015819918259524102	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9984180081740476	WITHOUT_CLASSIFICATION	0.0015819918259524102	DOCUMENTATION
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999934664064326	WITHOUT_CLASSIFICATION	6.533593567423409E-6	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999412032362981	WITHOUT_CLASSIFICATION	5.8796763701909645E-5	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999412032362981	WITHOUT_CLASSIFICATION	5.8796763701909645E-5	DOCUMENTATION
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9999627842613052	WITHOUT_CLASSIFICATION	3.721573869476796E-5	DOCUMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999673331032014	WITHOUT_CLASSIFICATION	3.266689679853363E-5	DOCUMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.9996702874674908	WITHOUT_CLASSIFICATION	3.2971253250926625E-4	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999975762471276	WITHOUT_CLASSIFICATION	2.423752872369023E-6	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999975762471276	WITHOUT_CLASSIFICATION	2.423752872369023E-6	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999990365077717	WITHOUT_CLASSIFICATION	9.634922283672395E-7	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999988980237456	WITHOUT_CLASSIFICATION	1.101976254375941E-6	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999988980237456	WITHOUT_CLASSIFICATION	1.101976254375941E-6	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999742350247305	WITHOUT_CLASSIFICATION	2.576497526941287E-5	DOCUMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999926644891839	WITHOUT_CLASSIFICATION	7.335510816042666E-6	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999935782847498	WITHOUT_CLASSIFICATION	6.4217152502672735E-6	DOCUMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// MUTABLE	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.9999104787850546	WITHOUT_CLASSIFICATION	8.952121494545652E-5	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.999909719432241	WITHOUT_CLASSIFICATION	9.028056775901043E-5	DOCUMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// TODO:	WITHOUT_CLASSIFICATION	0.9872459848347644	WITHOUT_CLASSIFICATION	0.01275401516523561	DOCUMENTATION
// ID	WITHOUT_CLASSIFICATION	0.9999098277991967	WITHOUT_CLASSIFICATION	9.01722008033813E-5	DOCUMENTATION
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999772320047656	WITHOUT_CLASSIFICATION	2.2767995234298223E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999759143291754	WITHOUT_CLASSIFICATION	2.4085670824472082E-5	DOCUMENTATION
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999856780761817	WITHOUT_CLASSIFICATION	1.432192381825585E-5	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.999997938856745	WITHOUT_CLASSIFICATION	2.061143255031934E-6	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999683510676274	WITHOUT_CLASSIFICATION	3.164893237255003E-5	DOCUMENTATION
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999981380497639	WITHOUT_CLASSIFICATION	1.8619502361408913E-6	DOCUMENTATION
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999816326445131	WITHOUT_CLASSIFICATION	1.8367355486855937E-5	DOCUMENTATION
// IMPORT	WITHOUT_CLASSIFICATION	0.999909556905181	WITHOUT_CLASSIFICATION	9.044309481902492E-5	DOCUMENTATION
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9999815946699137	WITHOUT_CLASSIFICATION	1.840533008641456E-5	DOCUMENTATION
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999722972226922	WITHOUT_CLASSIFICATION	2.7702777307721044E-5	DOCUMENTATION
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999720406754716	WITHOUT_CLASSIFICATION	2.7959324528363063E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999832234220416	WITHOUT_CLASSIFICATION	1.6776577958384822E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999935782847498	WITHOUT_CLASSIFICATION	6.4217152502672735E-6	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999828687838068	WITHOUT_CLASSIFICATION	1.7131216193165898E-5	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999817507516251	WITHOUT_CLASSIFICATION	1.824924837485749E-5	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999100869345783	WITHOUT_CLASSIFICATION	8.991306542161981E-5	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.999909719432241	WITHOUT_CLASSIFICATION	9.028056775901043E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999832234220416	WITHOUT_CLASSIFICATION	1.6776577958384822E-5	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999828687838068	WITHOUT_CLASSIFICATION	1.7131216193165898E-5	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999100869345783	WITHOUT_CLASSIFICATION	8.991306542161981E-5	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999823795840059	WITHOUT_CLASSIFICATION	1.7620415994133682E-5	DOCUMENTATION
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999823795840059	WITHOUT_CLASSIFICATION	1.7620415994133682E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999815905792845	WITHOUT_CLASSIFICATION	1.8409420715504345E-5	DOCUMENTATION
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// column index	WITHOUT_CLASSIFICATION	0.9999849926861849	WITHOUT_CLASSIFICATION	1.500731381501205E-5	DOCUMENTATION
//column unique-key	WITHOUT_CLASSIFICATION	0.9996780205611489	WITHOUT_CLASSIFICATION	3.2197943885117536E-4	DOCUMENTATION
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9999999003572141	WITHOUT_CLASSIFICATION	9.964278590197517E-8	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999849402177908	WITHOUT_CLASSIFICATION	1.5059782209193423E-5	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999994861094399	WITHOUT_CLASSIFICATION	5.138905600616881E-7	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999923773076481	WITHOUT_CLASSIFICATION	7.622692351890442E-6	DOCUMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999973100915985	WITHOUT_CLASSIFICATION	2.689908401525571E-6	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999990129585874	WITHOUT_CLASSIFICATION	9.870414125704177E-7	DOCUMENTATION
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999923773076481	WITHOUT_CLASSIFICATION	7.622692351890442E-6	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999122085146772	WITHOUT_CLASSIFICATION	8.779148532281027E-5	DOCUMENTATION
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9998726218894602	WITHOUT_CLASSIFICATION	1.2737811053971615E-4	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999832234220416	WITHOUT_CLASSIFICATION	1.6776577958384822E-5	DOCUMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999708557790243	WITHOUT_CLASSIFICATION	2.9144220975706033E-5	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.999979321468559	WITHOUT_CLASSIFICATION	2.0678531441085513E-5	DOCUMENTATION
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9999928020418674	WITHOUT_CLASSIFICATION	7.197958132583121E-6	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999947979014616	WITHOUT_CLASSIFICATION	5.2020985383826684E-6	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.999983502739149	WITHOUT_CLASSIFICATION	1.6497260850962488E-5	DOCUMENTATION
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999986774478757	WITHOUT_CLASSIFICATION	1.3225521242144508E-6	DOCUMENTATION
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999954422385935	WITHOUT_CLASSIFICATION	4.557761406529276E-6	DOCUMENTATION
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9998723034260736	WITHOUT_CLASSIFICATION	1.276965739263458E-4	DOCUMENTATION
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999815952204427	WITHOUT_CLASSIFICATION	1.840477955737515E-5	DOCUMENTATION
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999816591806532	WITHOUT_CLASSIFICATION	1.834081934677501E-5	DOCUMENTATION
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999720406754716	WITHOUT_CLASSIFICATION	2.7959324528363063E-5	DOCUMENTATION
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.999996298447328	WITHOUT_CLASSIFICATION	3.701552672076423E-6	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999683510676274	WITHOUT_CLASSIFICATION	3.164893237255003E-5	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.9999725289901096	WITHOUT_CLASSIFICATION	2.7471009890325817E-5	DOCUMENTATION
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999703312092677	WITHOUT_CLASSIFICATION	2.966879073230314E-5	DOCUMENTATION
// Bind the where	WITHOUT_CLASSIFICATION	0.9999924351273801	WITHOUT_CLASSIFICATION	7.564872619861304E-6	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999919790008871	WITHOUT_CLASSIFICATION	8.020999112914629E-6	DOCUMENTATION
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999919958452179	WITHOUT_CLASSIFICATION	8.004154782042726E-6	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.999974480307483	WITHOUT_CLASSIFICATION	2.5519692516978123E-5	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999998276024666	WITHOUT_CLASSIFICATION	1.723975334145979E-7	DOCUMENTATION
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9999975483962035	WITHOUT_CLASSIFICATION	2.4516037963990603E-6	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9997592037747248	WITHOUT_CLASSIFICATION	2.407962252750431E-4	DOCUMENTATION
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9995845480053805	WITHOUT_CLASSIFICATION	4.1545199461956017E-4	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9996973276190115	WITHOUT_CLASSIFICATION	3.0267238098845235E-4	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9996973276190115	WITHOUT_CLASSIFICATION	3.0267238098845235E-4	DOCUMENTATION
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9995134485474111	WITHOUT_CLASSIFICATION	4.865514525888933E-4	DOCUMENTATION
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999815399891645	WITHOUT_CLASSIFICATION	1.8460010835530345E-5	DOCUMENTATION
//use dialect default properties	WITHOUT_CLASSIFICATION	0.999523086275253	WITHOUT_CLASSIFICATION	4.769137247470417E-4	DOCUMENTATION
// Transaction settings:	WITHOUT_CLASSIFICATION	0.9999728032387707	WITHOUT_CLASSIFICATION	2.7196761229376268E-5	DOCUMENTATION
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9995129510532372	WITHOUT_CLASSIFICATION	4.8704894676277226E-4	DOCUMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9995133848303303	WITHOUT_CLASSIFICATION	4.866151696697644E-4	DOCUMENTATION
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999781241094597	WITHOUT_CLASSIFICATION	2.1875890540171E-5	DOCUMENTATION
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.999973285749307	WITHOUT_CLASSIFICATION	2.6714250692969756E-5	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9995385933666281	WITHOUT_CLASSIFICATION	4.6140663337193127E-4	DOCUMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9997294763222495	WITHOUT_CLASSIFICATION	2.705236777504943E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9999862577373861	WITHOUT_CLASSIFICATION	1.3742262613905128E-5	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9999894341770585	WITHOUT_CLASSIFICATION	1.0565822941403708E-5	DOCUMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9998029796309461	WITHOUT_CLASSIFICATION	1.9702036905392445E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999731247375819	WITHOUT_CLASSIFICATION	2.6875262418062028E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999691842170857	WITHOUT_CLASSIFICATION	3.081578291427595E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999985324724299	WITHOUT_CLASSIFICATION	1.4675275700865687E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999987739504619	WITHOUT_CLASSIFICATION	1.2260495380820935E-6	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9999000954697781	WITHOUT_CLASSIFICATION	9.990453022196685E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999996443922555	WITHOUT_CLASSIFICATION	3.5560774447730774E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9998925851180882	WITHOUT_CLASSIFICATION	1.0741488191170539E-4	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9998925851180882	WITHOUT_CLASSIFICATION	1.0741488191170539E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9996779091983239	WITHOUT_CLASSIFICATION	3.2209080167618906E-4	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9996779091983239	WITHOUT_CLASSIFICATION	3.2209080167618906E-4	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9997592037747248	WITHOUT_CLASSIFICATION	2.407962252750431E-4	DOCUMENTATION
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9997237700164993	WITHOUT_CLASSIFICATION	2.762299835007773E-4	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9997769428141157	WITHOUT_CLASSIFICATION	2.23057185884311E-4	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9998124066659076	WITHOUT_CLASSIFICATION	1.8759333409234217E-4	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999188846374498	WITHOUT_CLASSIFICATION	8.11153625502227E-5	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9997769428141157	WITHOUT_CLASSIFICATION	2.23057185884311E-4	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9998124066659076	WITHOUT_CLASSIFICATION	1.8759333409234217E-4	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9994224848748404	WITHOUT_CLASSIFICATION	5.77515125159635E-4	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999369124498616	WITHOUT_CLASSIFICATION	6.308755013840883E-5	DOCUMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999976942330705	WITHOUT_CLASSIFICATION	2.305766929401915E-6	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999924218436514	WITHOUT_CLASSIFICATION	7.578156348533983E-6	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.999862458674495	WITHOUT_CLASSIFICATION	1.3754132550506092E-4	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.999700215062956	WITHOUT_CLASSIFICATION	2.997849370439634E-4	DOCUMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999365109790493	WITHOUT_CLASSIFICATION	6.348902095058954E-5	DOCUMENTATION
//override on some subclasses	WITHOUT_CLASSIFICATION	0.998869021077501	WITHOUT_CLASSIFICATION	0.0011309789224990265	DOCUMENTATION
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.999654636007268	WITHOUT_CLASSIFICATION	3.4536399273189496E-4	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999913875853245	WITHOUT_CLASSIFICATION	8.612414675587774E-6	DOCUMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999567429291847	WITHOUT_CLASSIFICATION	4.325707081535348E-5	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999858612447827	WITHOUT_CLASSIFICATION	1.4138755217187106E-5	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999940501418703	WITHOUT_CLASSIFICATION	5.9498581297236105E-6	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9996140828691135	WITHOUT_CLASSIFICATION	3.859171308864809E-4	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999188846374498	WITHOUT_CLASSIFICATION	8.11153625502227E-5	DOCUMENTATION
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9996140828691135	WITHOUT_CLASSIFICATION	3.859171308864809E-4	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.999591232786945	WITHOUT_CLASSIFICATION	4.087672130550974E-4	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.999591232786945	WITHOUT_CLASSIFICATION	4.087672130550974E-4	DOCUMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999941945915432	WITHOUT_CLASSIFICATION	5.805408456812348E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9994224848748404	WITHOUT_CLASSIFICATION	5.77515125159635E-4	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9999093530703996	WITHOUT_CLASSIFICATION	9.064692960030817E-5	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.9999999550923019	WITHOUT_CLASSIFICATION	4.490769806941482E-8	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9999036665701185	WITHOUT_CLASSIFICATION	9.633342988137952E-5	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999179786123367	WITHOUT_CLASSIFICATION	8.20213876633004E-5	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9997443962598801	WITHOUT_CLASSIFICATION	2.556037401198722E-4	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9994224848748404	WITHOUT_CLASSIFICATION	5.77515125159635E-4	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999179786123367	WITHOUT_CLASSIFICATION	8.20213876633004E-5	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9997443962598801	WITHOUT_CLASSIFICATION	2.556037401198722E-4	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.999500622442625	WITHOUT_CLASSIFICATION	4.993775573749224E-4	DOCUMENTATION
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999817526288926	WITHOUT_CLASSIFICATION	1.824737110747438E-5	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999934632341091	WITHOUT_CLASSIFICATION	6.5367658909676415E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9994224848748404	WITHOUT_CLASSIFICATION	5.77515125159635E-4	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9994224848748404	WITHOUT_CLASSIFICATION	5.77515125159635E-4	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.9999946295140034	WITHOUT_CLASSIFICATION	5.37048599666317E-6	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999945835224713	WITHOUT_CLASSIFICATION	5.416477528773495E-6	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9998947478913953	WITHOUT_CLASSIFICATION	1.0525210860466016E-4	DOCUMENTATION
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.999995785364252	WITHOUT_CLASSIFICATION	4.214635747956446E-6	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9995804237438443	WITHOUT_CLASSIFICATION	4.195762561557624E-4	DOCUMENTATION
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999987779203177	WITHOUT_CLASSIFICATION	1.2220796824075017E-6	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999978575350347	WITHOUT_CLASSIFICATION	2.142464965286391E-6	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999950049386593	WITHOUT_CLASSIFICATION	4.99506134076807E-6	DOCUMENTATION
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999650973516382	WITHOUT_CLASSIFICATION	3.4902648361844335E-5	DOCUMENTATION
// then bind it	WITHOUT_CLASSIFICATION	0.9999843647064811	WITHOUT_CLASSIFICATION	1.5635293518872146E-5	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999864058815654	WITHOUT_CLASSIFICATION	1.3594118434564082E-5	DOCUMENTATION
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9999774597457864	WITHOUT_CLASSIFICATION	2.2540254213492048E-5	DOCUMENTATION
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999960699652294	WITHOUT_CLASSIFICATION	3.9300347706237815E-6	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9999904622828144	WITHOUT_CLASSIFICATION	9.53771718568586E-6	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680721300055	WITHOUT_CLASSIFICATION	3.19278699945762E-5	DOCUMENTATION
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999996258029613	WITHOUT_CLASSIFICATION	3.7419703878777606E-7	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.999918929617101	WITHOUT_CLASSIFICATION	8.107038289898552E-5	DOCUMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.999612490215523	WITHOUT_CLASSIFICATION	3.875097844770943E-4	DOCUMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9994734021513225	WITHOUT_CLASSIFICATION	5.26597848677537E-4	DOCUMENTATION
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9998124066659076	WITHOUT_CLASSIFICATION	1.8759333409234217E-4	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9996843448923448	WITHOUT_CLASSIFICATION	3.156551076552411E-4	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.999918929617101	WITHOUT_CLASSIFICATION	8.107038289898552E-5	DOCUMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9999772149084885	WITHOUT_CLASSIFICATION	2.278509151161743E-5	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999986607160443	WITHOUT_CLASSIFICATION	1.3392839558376478E-6	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9997642214274951	WITHOUT_CLASSIFICATION	2.3577857250492177E-4	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9998582431918662	WITHOUT_CLASSIFICATION	1.4175680813373296E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9996820490902988	WITHOUT_CLASSIFICATION	3.1795090970123074E-4	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999838902172193	WITHOUT_CLASSIFICATION	1.6109782780694042E-5	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9999939705251496	WITHOUT_CLASSIFICATION	6.029474850407091E-6	DOCUMENTATION
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999992637444243	WITHOUT_CLASSIFICATION	7.362555756872802E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681742061436	WITHOUT_CLASSIFICATION	3.182579385636149E-5	DOCUMENTATION
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9995044666574988	WITHOUT_CLASSIFICATION	4.955333425011519E-4	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999952198102708	WITHOUT_CLASSIFICATION	4.7801897291462495E-6	DOCUMENTATION
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999971687851774	WITHOUT_CLASSIFICATION	2.8312148226192004E-6	DOCUMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9999457269224866	WITHOUT_CLASSIFICATION	5.4273077513389066E-5	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999875799028985	WITHOUT_CLASSIFICATION	1.2420097101398638E-5	DOCUMENTATION
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999919064544716	WITHOUT_CLASSIFICATION	8.093545528407788E-6	DOCUMENTATION
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9994524358498155	WITHOUT_CLASSIFICATION	5.475641501844034E-4	DOCUMENTATION
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9999997627025313	WITHOUT_CLASSIFICATION	2.3729746866719408E-7	DOCUMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9996543648423304	WITHOUT_CLASSIFICATION	3.456351576695412E-4	DOCUMENTATION
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999863076733274	WITHOUT_CLASSIFICATION	1.3692326672537466E-5	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.99999758118877	WITHOUT_CLASSIFICATION	2.4188112299660267E-6	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9996842984245248	WITHOUT_CLASSIFICATION	3.1570157547523907E-4	DOCUMENTATION
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999618764994146	WITHOUT_CLASSIFICATION	3.812350058546756E-5	DOCUMENTATION
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999823540613845	WITHOUT_CLASSIFICATION	1.764593861554465E-5	DOCUMENTATION
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999815082400485	WITHOUT_CLASSIFICATION	1.849175995157065E-5	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999742493783689	WITHOUT_CLASSIFICATION	2.5750621631042213E-5	DOCUMENTATION
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999684546814332	WITHOUT_CLASSIFICATION	3.154531856670966E-5	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733683514188	WITHOUT_CLASSIFICATION	2.663164858113211E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737010626248	WITHOUT_CLASSIFICATION	2.629893737516788E-5	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733683514188	WITHOUT_CLASSIFICATION	2.663164858113211E-5	DOCUMENTATION
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733683514188	WITHOUT_CLASSIFICATION	2.663164858113211E-5	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.999923726861634	WITHOUT_CLASSIFICATION	7.627313836602052E-5	DOCUMENTATION
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9999192670102972	WITHOUT_CLASSIFICATION	8.073298970272353E-5	DOCUMENTATION
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999981583591391	WITHOUT_CLASSIFICATION	1.841640860895692E-5	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999984122706381	WITHOUT_CLASSIFICATION	1.5877293618955074E-5	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999738902489647	WITHOUT_CLASSIFICATION	2.6109751035326757E-5	DOCUMENTATION
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999778543851258	WITHOUT_CLASSIFICATION	2.2145614874202615E-5	DOCUMENTATION
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733724798089	WITHOUT_CLASSIFICATION	2.6627520191196638E-5	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733683514188	WITHOUT_CLASSIFICATION	2.663164858113211E-5	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999734734887472	WITHOUT_CLASSIFICATION	2.6526511252700815E-5	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733683514188	WITHOUT_CLASSIFICATION	2.663164858113211E-5	DOCUMENTATION
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999831483459638	WITHOUT_CLASSIFICATION	1.6851654036226177E-5	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681258286419	WITHOUT_CLASSIFICATION	3.1874171358086974E-5	DOCUMENTATION
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.999989557008098	WITHOUT_CLASSIFICATION	1.0442991901938092E-5	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999954469913651	WITHOUT_CLASSIFICATION	4.5530086349201235E-6	DOCUMENTATION
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.99999893640761	WITHOUT_CLASSIFICATION	1.063592390126876E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9996901618940812	WITHOUT_CLASSIFICATION	3.098381059187296E-4	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.9996782305177262	WITHOUT_CLASSIFICATION	3.217694822738585E-4	DOCUMENTATION
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9997716627920171	WITHOUT_CLASSIFICATION	2.2833720798281912E-4	DOCUMENTATION
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.999500622442625	WITHOUT_CLASSIFICATION	4.993775573749224E-4	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.999981637137477	WITHOUT_CLASSIFICATION	1.8362862522950992E-5	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999820049641032	WITHOUT_CLASSIFICATION	1.7995035896846378E-5	DOCUMENTATION
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999723820976324	WITHOUT_CLASSIFICATION	2.761790236752128E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681742061436	WITHOUT_CLASSIFICATION	3.182579385636149E-5	DOCUMENTATION
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999724891153027	WITHOUT_CLASSIFICATION	2.7510884697253216E-5	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999816574741394	WITHOUT_CLASSIFICATION	1.834252586066915E-5	DOCUMENTATION
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9999964107996253	WITHOUT_CLASSIFICATION	3.5892003747176205E-6	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9999928225003478	WITHOUT_CLASSIFICATION	7.177499652146163E-6	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9999885684740553	WITHOUT_CLASSIFICATION	1.1431525944680163E-5	DOCUMENTATION
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9999814453631076	WITHOUT_CLASSIFICATION	1.8554636892371425E-5	DOCUMENTATION
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680868721682	WITHOUT_CLASSIFICATION	3.1913127831886465E-5	DOCUMENTATION
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999700689680923	WITHOUT_CLASSIFICATION	2.9931031907767364E-5	DOCUMENTATION
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999825008971748	WITHOUT_CLASSIFICATION	1.7499102825267194E-5	DOCUMENTATION
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681569907245	WITHOUT_CLASSIFICATION	3.184300927553388E-5	DOCUMENTATION
// not null is implicit	WITHOUT_CLASSIFICATION	0.9999860953026029	WITHOUT_CLASSIFICATION	1.3904697397052826E-5	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9999646596455933	WITHOUT_CLASSIFICATION	3.53403544066098E-5	DOCUMENTATION
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.9999862558038399	WITHOUT_CLASSIFICATION	1.3744196160115186E-5	DOCUMENTATION
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999764723683854	WITHOUT_CLASSIFICATION	2.352763161463029E-5	DOCUMENTATION
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999856049986771	WITHOUT_CLASSIFICATION	1.4395001323019118E-5	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999738432822497	WITHOUT_CLASSIFICATION	2.615671775027763E-5	DOCUMENTATION
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9999826251313458	WITHOUT_CLASSIFICATION	1.7374868654213413E-5	DOCUMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999726280687415	WITHOUT_CLASSIFICATION	2.737193125848928E-5	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999954496463879	WITHOUT_CLASSIFICATION	4.550353612103256E-6	DOCUMENTATION
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9995643639491295	WITHOUT_CLASSIFICATION	4.356360508705459E-4	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9999991067796755	WITHOUT_CLASSIFICATION	8.932203244444404E-7	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.999995316761744	WITHOUT_CLASSIFICATION	4.6832382560444025E-6	DOCUMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9999749597433697	WITHOUT_CLASSIFICATION	2.5040256630339877E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681742061436	WITHOUT_CLASSIFICATION	3.182579385636149E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9996901618940812	WITHOUT_CLASSIFICATION	3.098381059187296E-4	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999996393514777	WITHOUT_CLASSIFICATION	3.6064852228399144E-7	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999958569831403	WITHOUT_CLASSIFICATION	4.143016859620082E-6	DOCUMENTATION
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999872610782883	WITHOUT_CLASSIFICATION	1.273892171179666E-5	DOCUMENTATION
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999954469913651	WITHOUT_CLASSIFICATION	4.5530086349201235E-6	DOCUMENTATION
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999681589304968	WITHOUT_CLASSIFICATION	3.184106950326707E-5	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999857336611774	WITHOUT_CLASSIFICATION	1.4266338822556079E-5	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9995865657319897	WITHOUT_CLASSIFICATION	4.134342680103574E-4	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9999130147159394	WITHOUT_CLASSIFICATION	8.698528406061269E-5	DOCUMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999501794023794	WITHOUT_CLASSIFICATION	4.982059762059407E-5	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999619810518496	WITHOUT_CLASSIFICATION	3.801894815031221E-5	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999682688229355	WITHOUT_CLASSIFICATION	3.173117706452121E-5	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999688951353657	WITHOUT_CLASSIFICATION	3.110486463443517E-5	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.999968898859984	WITHOUT_CLASSIFICATION	3.110114001601581E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681742061436	WITHOUT_CLASSIFICATION	3.182579385636149E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681742061436	WITHOUT_CLASSIFICATION	3.182579385636149E-5	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.999998816960529	WITHOUT_CLASSIFICATION	1.1830394710116963E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999790428193314	WITHOUT_CLASSIFICATION	2.0957180668661424E-5	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999605936820715	WITHOUT_CLASSIFICATION	3.940631792848531E-5	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.999500622442625	WITHOUT_CLASSIFICATION	4.993775573749224E-4	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999954472745821	WITHOUT_CLASSIFICATION	4.552725417889887E-6	DOCUMENTATION
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999922156032404	WITHOUT_CLASSIFICATION	7.784396759647547E-6	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9998562004530861	WITHOUT_CLASSIFICATION	1.4379954691390656E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681742061436	WITHOUT_CLASSIFICATION	3.182579385636149E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999932664254066	WITHOUT_CLASSIFICATION	6.733574593424817E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9994853018509566	WITHOUT_CLASSIFICATION	5.146981490434314E-4	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9999704632353443	WITHOUT_CLASSIFICATION	2.953676465563336E-5	DOCUMENTATION
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999812212101555	WITHOUT_CLASSIFICATION	1.8778789844509325E-5	DOCUMENTATION
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9999935049314059	WITHOUT_CLASSIFICATION	6.495068594125977E-6	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999757418391312	WITHOUT_CLASSIFICATION	2.4258160868826795E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9996966673134159	WITHOUT_CLASSIFICATION	3.033326865840245E-4	DOCUMENTATION
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9996971227497773	WITHOUT_CLASSIFICATION	3.0287725022261054E-4	DOCUMENTATION
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9995401738246465	WITHOUT_CLASSIFICATION	4.598261753533883E-4	DOCUMENTATION
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999954469913651	WITHOUT_CLASSIFICATION	4.5530086349201235E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9996901618940812	WITHOUT_CLASSIFICATION	3.098381059187296E-4	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999981429964395	WITHOUT_CLASSIFICATION	1.8570035605077496E-6	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999992432471817	WITHOUT_CLASSIFICATION	7.56752818388641E-7	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999039523123073	WITHOUT_CLASSIFICATION	9.604768769267574E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9996901618940812	WITHOUT_CLASSIFICATION	3.098381059187296E-4	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9998328843025138	WITHOUT_CLASSIFICATION	1.671156974861079E-4	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999932664254066	WITHOUT_CLASSIFICATION	6.733574593424817E-6	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9998975117167186	WITHOUT_CLASSIFICATION	1.0248828328130709E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681742061436	WITHOUT_CLASSIFICATION	3.182579385636149E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.999774653197299	WITHOUT_CLASSIFICATION	2.2534680270112087E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681742061436	WITHOUT_CLASSIFICATION	3.182579385636149E-5	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999993658187365	WITHOUT_CLASSIFICATION	6.341812634459996E-7	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999619810518496	WITHOUT_CLASSIFICATION	3.801894815031221E-5	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999682688229355	WITHOUT_CLASSIFICATION	3.173117706452121E-5	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999688951353657	WITHOUT_CLASSIFICATION	3.110486463443517E-5	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999426575020877	WITHOUT_CLASSIFICATION	5.734249791234164E-5	DOCUMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.999928714318269	WITHOUT_CLASSIFICATION	7.128568173095862E-5	DOCUMENTATION
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999130898048126	WITHOUT_CLASSIFICATION	8.69101951873845E-5	DOCUMENTATION
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999973509240778	WITHOUT_CLASSIFICATION	2.6490759222304576E-6	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.999999452062922	WITHOUT_CLASSIFICATION	5.479370779858155E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681742061436	WITHOUT_CLASSIFICATION	3.182579385636149E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9996901618940812	WITHOUT_CLASSIFICATION	3.098381059187296E-4	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.999968898859984	WITHOUT_CLASSIFICATION	3.110114001601581E-5	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.999998816960529	WITHOUT_CLASSIFICATION	1.1830394710116963E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999969183170604	WITHOUT_CLASSIFICATION	3.081682939598959E-5	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999748043247031	WITHOUT_CLASSIFICATION	2.519567529692274E-5	DOCUMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999698675434889	WITHOUT_CLASSIFICATION	3.0132456510974024E-5	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9994414137523052	WITHOUT_CLASSIFICATION	5.585862476947521E-4	DOCUMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9999178072196018	WITHOUT_CLASSIFICATION	8.219278039820975E-5	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9999973847578004	WITHOUT_CLASSIFICATION	2.615242199500512E-6	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733683514188	WITHOUT_CLASSIFICATION	2.663164858113211E-5	DOCUMENTATION
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999596943915607	WITHOUT_CLASSIFICATION	4.030560843922777E-5	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9999819966607315	WITHOUT_CLASSIFICATION	1.8003339268518498E-5	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9999736337192787	WITHOUT_CLASSIFICATION	2.636628072131549E-5	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999789430874181	WITHOUT_CLASSIFICATION	2.1056912581920394E-5	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999720406754716	WITHOUT_CLASSIFICATION	2.7959324528363063E-5	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733683514188	WITHOUT_CLASSIFICATION	2.663164858113211E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737010626248	WITHOUT_CLASSIFICATION	2.629893737516788E-5	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999984122706381	WITHOUT_CLASSIFICATION	1.5877293618955074E-5	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999720406754716	WITHOUT_CLASSIFICATION	2.7959324528363063E-5	DOCUMENTATION
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999784387842009	WITHOUT_CLASSIFICATION	2.1561215799093546E-5	DOCUMENTATION
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999702745582434	WITHOUT_CLASSIFICATION	2.972544175668256E-5	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999734847478271	WITHOUT_CLASSIFICATION	2.6515252173003852E-5	DOCUMENTATION
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733683514188	WITHOUT_CLASSIFICATION	2.663164858113211E-5	DOCUMENTATION
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999973135760479	WITHOUT_CLASSIFICATION	2.686423951963978E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681742061436	WITHOUT_CLASSIFICATION	3.182579385636149E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681742061436	WITHOUT_CLASSIFICATION	3.182579385636149E-5	DOCUMENTATION
/*<String>*/	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999738902489647	WITHOUT_CLASSIFICATION	2.6109751035326757E-5	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733683514188	WITHOUT_CLASSIFICATION	2.663164858113211E-5	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999954496463879	WITHOUT_CLASSIFICATION	4.550353612103256E-6	DOCUMENTATION
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.999965801581379	WITHOUT_CLASSIFICATION	3.4198418620929276E-5	DOCUMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999923836328461	WITHOUT_CLASSIFICATION	7.616367153874448E-6	DOCUMENTATION
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999995667238495	WITHOUT_CLASSIFICATION	4.3327615053681924E-7	DOCUMENTATION
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999421719468489	WITHOUT_CLASSIFICATION	5.782805315111844E-5	DOCUMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999973843708085	WITHOUT_CLASSIFICATION	2.6156291914050945E-6	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9996917491496407	WITHOUT_CLASSIFICATION	3.0825085035942733E-4	DOCUMENTATION
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9993959564044794	WITHOUT_CLASSIFICATION	6.04043595520681E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999992637444243	WITHOUT_CLASSIFICATION	7.362555756872802E-7	DOCUMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999750005440797	WITHOUT_CLASSIFICATION	2.499945592029336E-5	DOCUMENTATION
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999956215306084	WITHOUT_CLASSIFICATION	4.378469391691131E-6	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999870890724258	WITHOUT_CLASSIFICATION	1.2910927574103642E-5	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999692683362167	WITHOUT_CLASSIFICATION	3.07316637832337E-5	DOCUMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999912137953729	WITHOUT_CLASSIFICATION	8.78620462709704E-6	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9998602315864916	WITHOUT_CLASSIFICATION	1.3976841350833567E-4	DOCUMENTATION
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999860913820156	WITHOUT_CLASSIFICATION	1.3908617984359832E-5	DOCUMENTATION
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999863483936042	WITHOUT_CLASSIFICATION	1.3651606395903333E-5	DOCUMENTATION
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999877813759092	WITHOUT_CLASSIFICATION	1.2218624090849902E-5	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999982389552479	WITHOUT_CLASSIFICATION	1.7610447521665676E-6	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9995109640951434	WITHOUT_CLASSIFICATION	4.890359048565753E-4	DOCUMENTATION
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999843391764925	WITHOUT_CLASSIFICATION	1.5660823507370764E-5	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999849071961754	WITHOUT_CLASSIFICATION	1.5092803824589846E-5	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999896587973864	WITHOUT_CLASSIFICATION	1.034120261357461E-5	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999917064629618	WITHOUT_CLASSIFICATION	8.293537038180245E-6	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9999980862978388	WITHOUT_CLASSIFICATION	1.9137021611007348E-6	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999679708097609	WITHOUT_CLASSIFICATION	3.202919023915521E-5	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999896587973864	WITHOUT_CLASSIFICATION	1.034120261357461E-5	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999794590876926	WITHOUT_CLASSIFICATION	2.0540912307314546E-5	DOCUMENTATION
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999867222078811	WITHOUT_CLASSIFICATION	1.3277792118858433E-5	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999791669759671	WITHOUT_CLASSIFICATION	2.08330240329274E-5	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999846445235405	WITHOUT_CLASSIFICATION	1.5355476459526107E-5	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999967064618155	WITHOUT_CLASSIFICATION	3.2935381844461987E-6	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999632651311563	WITHOUT_CLASSIFICATION	3.673486884375782E-5	DOCUMENTATION
// continue loop	WITHOUT_CLASSIFICATION	0.9999826929739365	WITHOUT_CLASSIFICATION	1.730702606347534E-5	DOCUMENTATION
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9998819097499433	WITHOUT_CLASSIFICATION	1.1809025005664594E-4	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9998819097499433	WITHOUT_CLASSIFICATION	1.1809025005664594E-4	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999979223683114	WITHOUT_CLASSIFICATION	2.0776316885036293E-6	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9999950006709318	WITHOUT_CLASSIFICATION	4.999329068144719E-6	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9999789826542149	WITHOUT_CLASSIFICATION	2.1017345785106107E-5	DOCUMENTATION
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999979552758584	WITHOUT_CLASSIFICATION	2.044724141552515E-6	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9999998514332914	WITHOUT_CLASSIFICATION	1.4856670859368363E-7	DOCUMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9999919657179854	WITHOUT_CLASSIFICATION	8.034282014572488E-6	DOCUMENTATION
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999917646694858	WITHOUT_CLASSIFICATION	8.235330514281845E-6	DOCUMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999965530097035	WITHOUT_CLASSIFICATION	3.4469902964915486E-6	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999774204295101	WITHOUT_CLASSIFICATION	2.257957048984535E-5	DOCUMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999978778166205	WITHOUT_CLASSIFICATION	2.1221833794803106E-6	DOCUMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999982189142907	WITHOUT_CLASSIFICATION	1.7810857092748594E-6	DOCUMENTATION
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999904014129907	WITHOUT_CLASSIFICATION	9.598587009404562E-6	DOCUMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999967279481553	WITHOUT_CLASSIFICATION	3.2720518446741957E-6	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9999964823543813	WITHOUT_CLASSIFICATION	3.5176456186476466E-6	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9998005612051085	WITHOUT_CLASSIFICATION	1.9943879489143577E-4	DOCUMENTATION
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9990405014367554	WITHOUT_CLASSIFICATION	9.594985632447252E-4	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.999951168007491	WITHOUT_CLASSIFICATION	4.8831992509085356E-5	DOCUMENTATION
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9996089321251321	WITHOUT_CLASSIFICATION	3.910678748678392E-4	DOCUMENTATION
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9999673056664417	WITHOUT_CLASSIFICATION	3.269433355823833E-5	DOCUMENTATION
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999821870315776	WITHOUT_CLASSIFICATION	1.78129684223632E-5	DOCUMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999955099691751	WITHOUT_CLASSIFICATION	4.490030824903483E-6	DOCUMENTATION
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999821650131393	WITHOUT_CLASSIFICATION	1.7834986860629452E-5	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9999924237450206	WITHOUT_CLASSIFICATION	7.576254979361498E-6	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999961206600473	WITHOUT_CLASSIFICATION	3.87933995272461E-6	DOCUMENTATION
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999922291012912	WITHOUT_CLASSIFICATION	7.770898708824133E-6	DOCUMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999753002059499	WITHOUT_CLASSIFICATION	2.469979405015368E-5	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999876298926743	WITHOUT_CLASSIFICATION	1.2370107325698056E-5	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999943019786651	WITHOUT_CLASSIFICATION	5.6980213349645215E-6	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9999834246217488	WITHOUT_CLASSIFICATION	1.6575378251091093E-5	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9999815915111173	WITHOUT_CLASSIFICATION	1.840848888267446E-5	DOCUMENTATION
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999718197952517	WITHOUT_CLASSIFICATION	2.8180204748245337E-5	DOCUMENTATION
//unwrap the object	WITHOUT_CLASSIFICATION	0.9998682898314953	WITHOUT_CLASSIFICATION	1.3171016850462879E-4	DOCUMENTATION
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9998231565474893	WITHOUT_CLASSIFICATION	1.7684345251073303E-4	DOCUMENTATION
//return the proxied object	WITHOUT_CLASSIFICATION	0.9998137995454011	WITHOUT_CLASSIFICATION	1.862004545989906E-4	DOCUMENTATION
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9995514525114939	WITHOUT_CLASSIFICATION	4.4854748850605813E-4	DOCUMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.9999816241776726	WITHOUT_CLASSIFICATION	1.837582232740821E-5	DOCUMENTATION
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999886053149771	WITHOUT_CLASSIFICATION	1.1394685022813921E-5	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9999920284111017	WITHOUT_CLASSIFICATION	7.971588898242268E-6	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9999856346510654	WITHOUT_CLASSIFICATION	1.4365348934679194E-5	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9997633132977151	WITHOUT_CLASSIFICATION	2.3668670228486977E-4	DOCUMENTATION
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999924656770002	WITHOUT_CLASSIFICATION	7.534322999809106E-6	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.999500622442625	WITHOUT_CLASSIFICATION	4.993775573749224E-4	DOCUMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.999500622442625	WITHOUT_CLASSIFICATION	4.993775573749224E-4	DOCUMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.99998770727404	WITHOUT_CLASSIFICATION	1.2292725960011708E-5	DOCUMENTATION
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.999814686014134	WITHOUT_CLASSIFICATION	1.853139858659159E-4	DOCUMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999475558862998	WITHOUT_CLASSIFICATION	5.2444113700188724E-5	DOCUMENTATION
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999930170060991	WITHOUT_CLASSIFICATION	6.982993900795802E-6	DOCUMENTATION
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999961697183559	WITHOUT_CLASSIFICATION	3.830281644071656E-6	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9984343325699994	WITHOUT_CLASSIFICATION	0.001565667430000647	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9994797629645082	WITHOUT_CLASSIFICATION	5.202370354917699E-4	DOCUMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9996409590422385	WITHOUT_CLASSIFICATION	3.5904095776148484E-4	DOCUMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999554388772054	WITHOUT_CLASSIFICATION	4.456112279457893E-5	DOCUMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999083149808871	WITHOUT_CLASSIFICATION	9.168501911296813E-5	DOCUMENTATION
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9995109640951434	WITHOUT_CLASSIFICATION	4.890359048565753E-4	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9994738421732268	WITHOUT_CLASSIFICATION	5.26157826773188E-4	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9999054991886299	WITHOUT_CLASSIFICATION	9.450081137002483E-5	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9997785555875693	WITHOUT_CLASSIFICATION	2.214444124306765E-4	DOCUMENTATION
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.99944472019638	WITHOUT_CLASSIFICATION	5.552798036200469E-4	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9994405202097172	WITHOUT_CLASSIFICATION	5.594797902829396E-4	DOCUMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9999396549649598	WITHOUT_CLASSIFICATION	6.034503504003589E-5	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999873357624296	WITHOUT_CLASSIFICATION	1.2664237570396679E-5	DOCUMENTATION
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999993045655255	WITHOUT_CLASSIFICATION	6.95434474542293E-7	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999927560876135	WITHOUT_CLASSIFICATION	7.243912386601559E-6	DOCUMENTATION
// We've been here before	WITHOUT_CLASSIFICATION	0.9999329177821003	WITHOUT_CLASSIFICATION	6.708221789977195E-5	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999847189191505	WITHOUT_CLASSIFICATION	1.5281080849377745E-5	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999927560876135	WITHOUT_CLASSIFICATION	7.243912386601559E-6	DOCUMENTATION
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999951165304009	WITHOUT_CLASSIFICATION	4.883469599228239E-6	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999791096183455	WITHOUT_CLASSIFICATION	2.0890381654604403E-5	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9994760599524166	WITHOUT_CLASSIFICATION	5.239400475833296E-4	DOCUMENTATION
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9998010595111597	WITHOUT_CLASSIFICATION	1.9894048884021317E-4	DOCUMENTATION
// force initialize!	WITHOUT_CLASSIFICATION	0.999981974238207	WITHOUT_CLASSIFICATION	1.8025761792926332E-5	DOCUMENTATION
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999955564447273	WITHOUT_CLASSIFICATION	4.443555272722293E-6	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9994414137523052	WITHOUT_CLASSIFICATION	5.585862476947521E-4	DOCUMENTATION
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999652927588268	WITHOUT_CLASSIFICATION	3.470724117320454E-5	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999992742963464	WITHOUT_CLASSIFICATION	7.257036535465655E-7	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999683543197412	WITHOUT_CLASSIFICATION	3.1645680258703425E-5	DOCUMENTATION
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999943543118254	WITHOUT_CLASSIFICATION	5.6456881746175926E-6	DOCUMENTATION
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999960732583161	WITHOUT_CLASSIFICATION	3.926741683974597E-6	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9999804983967724	WITHOUT_CLASSIFICATION	1.950160322763273E-5	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.999999358541604	WITHOUT_CLASSIFICATION	6.414583959560955E-7	DOCUMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999988334282789	WITHOUT_CLASSIFICATION	1.1665717210528053E-6	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.996946180271955	WITHOUT_CLASSIFICATION	0.0030538197280450072	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9995109640951434	WITHOUT_CLASSIFICATION	4.890359048565753E-4	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9995109640951434	WITHOUT_CLASSIFICATION	4.890359048565753E-4	DOCUMENTATION
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999982925401331	WITHOUT_CLASSIFICATION	1.7074598669471957E-6	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9995109640951434	WITHOUT_CLASSIFICATION	4.890359048565753E-4	DOCUMENTATION
//re-snapshot	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999706469219958	WITHOUT_CLASSIFICATION	2.9353078004191416E-5	DOCUMENTATION
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9993662266544906	WITHOUT_CLASSIFICATION	6.337733455093648E-4	DOCUMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9995112758586443	WITHOUT_CLASSIFICATION	4.887241413556254E-4	DOCUMENTATION
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999995342516368	WITHOUT_CLASSIFICATION	4.6574836322542293E-7	DOCUMENTATION
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999919458581923	WITHOUT_CLASSIFICATION	8.054141807736372E-6	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.999997968071142	WITHOUT_CLASSIFICATION	2.0319288579035706E-6	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.999999937804272	WITHOUT_CLASSIFICATION	6.219572806470251E-8	DOCUMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999976550854547	WITHOUT_CLASSIFICATION	2.344914545280974E-6	DOCUMENTATION
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9988302326637379	WITHOUT_CLASSIFICATION	0.0011697673362620988	DOCUMENTATION
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9998598411847606	WITHOUT_CLASSIFICATION	1.4015881523945606E-4	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9993635924978512	WITHOUT_CLASSIFICATION	6.364075021488138E-4	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9998602315864916	WITHOUT_CLASSIFICATION	1.3976841350833567E-4	DOCUMENTATION
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9997406408478832	WITHOUT_CLASSIFICATION	2.593591521168623E-4	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9994412888242722	WITHOUT_CLASSIFICATION	5.587111757277786E-4	DOCUMENTATION
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9999413603605237	WITHOUT_CLASSIFICATION	5.863963947619773E-5	DOCUMENTATION
//do the test	WITHOUT_CLASSIFICATION	0.9998844281448003	WITHOUT_CLASSIFICATION	1.1557185519980505E-4	DOCUMENTATION
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999996740686189	WITHOUT_CLASSIFICATION	3.259313812009287E-7	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9998488384560725	WITHOUT_CLASSIFICATION	1.5116154392756458E-4	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.999997636733766	WITHOUT_CLASSIFICATION	2.3632662340822312E-6	DOCUMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999919445202645	WITHOUT_CLASSIFICATION	8.055479735426252E-6	DOCUMENTATION
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999934856720759	WITHOUT_CLASSIFICATION	6.514327924078212E-6	DOCUMENTATION
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.999993485890065	WITHOUT_CLASSIFICATION	6.5141099350034595E-6	DOCUMENTATION
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999968220161879	WITHOUT_CLASSIFICATION	3.1779838120855372E-6	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999973180098396	WITHOUT_CLASSIFICATION	2.6819901604613185E-6	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999978136063407	WITHOUT_CLASSIFICATION	2.186393659282721E-6	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9998817208292291	WITHOUT_CLASSIFICATION	1.1827917077086419E-4	DOCUMENTATION
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9996318449310562	WITHOUT_CLASSIFICATION	3.6815506894388256E-4	DOCUMENTATION
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.999812175310425	WITHOUT_CLASSIFICATION	1.8782468957514594E-4	DOCUMENTATION
//count++;	WITHOUT_CLASSIFICATION	0.9984180081740476	WITHOUT_CLASSIFICATION	0.0015819918259524102	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9998981577821444	WITHOUT_CLASSIFICATION	1.0184221785557912E-4	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.99994589502541	WITHOUT_CLASSIFICATION	5.410497459009487E-5	DOCUMENTATION
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9993460287614607	WITHOUT_CLASSIFICATION	6.53971238539272E-4	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9995916999726107	WITHOUT_CLASSIFICATION	4.0830002738942065E-4	DOCUMENTATION
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999453409950708	WITHOUT_CLASSIFICATION	5.465900492911565E-5	DOCUMENTATION
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999941085802262	WITHOUT_CLASSIFICATION	5.891419773864799E-6	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999820681660718	WITHOUT_CLASSIFICATION	1.7931833928180632E-5	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999443381502319	WITHOUT_CLASSIFICATION	5.5661849768049344E-5	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.999860296610274	WITHOUT_CLASSIFICATION	1.3970338972599768E-4	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999966454149843	WITHOUT_CLASSIFICATION	3.3545850156234107E-6	DOCUMENTATION
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.9999986261309853	WITHOUT_CLASSIFICATION	1.373869014668769E-6	DOCUMENTATION
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999967022418227	WITHOUT_CLASSIFICATION	3.297758177202496E-6	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999788551303819	WITHOUT_CLASSIFICATION	2.114486961815096E-5	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999748360134506	WITHOUT_CLASSIFICATION	2.5163986549324424E-5	DOCUMENTATION
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999694436496435	WITHOUT_CLASSIFICATION	3.055635035658171E-5	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999733517769768	WITHOUT_CLASSIFICATION	2.6648223023280026E-5	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9999999253883813	WITHOUT_CLASSIFICATION	7.461161871689842E-8	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999909452325259	WITHOUT_CLASSIFICATION	9.054767474156279E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999752534850874	WITHOUT_CLASSIFICATION	2.4746514912536356E-5	DOCUMENTATION
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.999999935542532	WITHOUT_CLASSIFICATION	6.445746806316695E-8	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.999989071296561	WITHOUT_CLASSIFICATION	1.0928703438925083E-5	DOCUMENTATION
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999747470859552	WITHOUT_CLASSIFICATION	2.5252914044767353E-5	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.999989071296561	WITHOUT_CLASSIFICATION	1.0928703438925083E-5	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999709698269408	WITHOUT_CLASSIFICATION	2.9030173059266416E-5	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999891064312453	WITHOUT_CLASSIFICATION	1.0893568754759649E-5	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9999847991321271	WITHOUT_CLASSIFICATION	1.5200867872779657E-5	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999941108904421	WITHOUT_CLASSIFICATION	5.889109557858942E-6	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999937006925758	WITHOUT_CLASSIFICATION	6.299307424176276E-6	DOCUMENTATION
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999619441398522	WITHOUT_CLASSIFICATION	3.805586014778525E-5	DOCUMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999925959383807	WITHOUT_CLASSIFICATION	7.404061619202834E-6	DOCUMENTATION
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999890017579729	WITHOUT_CLASSIFICATION	1.099824202703165E-5	DOCUMENTATION
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999983535245849	WITHOUT_CLASSIFICATION	1.6464754151311521E-6	DOCUMENTATION
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9999584100441806	WITHOUT_CLASSIFICATION	4.1589955819396895E-5	DOCUMENTATION
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999850341371948	WITHOUT_CLASSIFICATION	1.4965862805155714E-5	DOCUMENTATION
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9999974118951845	WITHOUT_CLASSIFICATION	2.588104815377198E-6	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9994415836782409	WITHOUT_CLASSIFICATION	5.584163217591284E-4	DOCUMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9999997959529161	WITHOUT_CLASSIFICATION	2.0404708389899554E-7	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.9998901918808327	WITHOUT_CLASSIFICATION	1.0980811916726337E-4	DOCUMENTATION
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9999988868376902	WITHOUT_CLASSIFICATION	1.1131623097287752E-6	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9997616363909874	WITHOUT_CLASSIFICATION	2.3836360901252352E-4	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9997616363909874	WITHOUT_CLASSIFICATION	2.3836360901252352E-4	DOCUMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9999083149808871	WITHOUT_CLASSIFICATION	9.168501911296813E-5	DOCUMENTATION
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999960025626937	WITHOUT_CLASSIFICATION	3.997437306319468E-6	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999995922563639	WITHOUT_CLASSIFICATION	4.0774363605429437E-7	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999999008442391	WITHOUT_CLASSIFICATION	9.915576088708312E-8	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999998749903123	WITHOUT_CLASSIFICATION	1.2500968780793876E-7	DOCUMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999999643312012	WITHOUT_CLASSIFICATION	3.5668798913487806E-8	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9999477191045653	WITHOUT_CLASSIFICATION	5.2280895434720926E-5	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9997064210932478	WITHOUT_CLASSIFICATION	2.935789067522712E-4	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999833050335695	WITHOUT_CLASSIFICATION	1.669496643058581E-5	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9997850924828707	WITHOUT_CLASSIFICATION	2.149075171292229E-4	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999868716321562	WITHOUT_CLASSIFICATION	1.3128367843805397E-5	DOCUMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999976739962815	WITHOUT_CLASSIFICATION	2.3260037185157804E-6	DOCUMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999830077150788	WITHOUT_CLASSIFICATION	1.6992284921245827E-5	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999995861581293	WITHOUT_CLASSIFICATION	4.138418706159183E-7	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999876137932252	WITHOUT_CLASSIFICATION	1.2386206774839075E-5	DOCUMENTATION
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999409420240689	WITHOUT_CLASSIFICATION	5.9057975931146566E-5	DOCUMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999743864576364	WITHOUT_CLASSIFICATION	2.5613542363738658E-5	DOCUMENTATION
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9970463673560503	WITHOUT_CLASSIFICATION	0.00295363264394969	DOCUMENTATION
//use the current version	WITHOUT_CLASSIFICATION	0.9998225505804099	WITHOUT_CLASSIFICATION	1.774494195900872E-4	DOCUMENTATION
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999977106955493	WITHOUT_CLASSIFICATION	2.2893044506863445E-6	DOCUMENTATION
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999869811452999	WITHOUT_CLASSIFICATION	1.3018854700010588E-5	DOCUMENTATION
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9999752136515351	WITHOUT_CLASSIFICATION	2.4786348464915234E-5	DOCUMENTATION
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9999909045300572	WITHOUT_CLASSIFICATION	9.09546994276503E-6	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999873547325095	WITHOUT_CLASSIFICATION	1.2645267490426935E-5	DOCUMENTATION
//even process null collections	WITHOUT_CLASSIFICATION	0.9995030210618906	WITHOUT_CLASSIFICATION	4.969789381094276E-4	DOCUMENTATION
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999974241728684	WITHOUT_CLASSIFICATION	2.5758271316940866E-6	DOCUMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999443102462109	WITHOUT_CLASSIFICATION	5.568975378914731E-5	DOCUMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.9997418805092597	WITHOUT_CLASSIFICATION	2.5811949074023384E-4	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9996801794030357	WITHOUT_CLASSIFICATION	3.1982059696430157E-4	DOCUMENTATION
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9998094448340082	WITHOUT_CLASSIFICATION	1.9055516599176265E-4	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9996472470005209	WITHOUT_CLASSIFICATION	3.527529994791112E-4	DOCUMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999266423528772	WITHOUT_CLASSIFICATION	7.335764712275344E-5	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9998263812475703	WITHOUT_CLASSIFICATION	1.7361875242975487E-4	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.999768486523449	WITHOUT_CLASSIFICATION	2.315134765510299E-4	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999763736581885	WITHOUT_CLASSIFICATION	2.3626341811491133E-5	DOCUMENTATION
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999600481054303	WITHOUT_CLASSIFICATION	3.995189456972016E-5	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.999984455875715	WITHOUT_CLASSIFICATION	1.5544124284943874E-5	DOCUMENTATION
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9999658842939617	WITHOUT_CLASSIFICATION	3.4115706038384374E-5	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9999406688991523	WITHOUT_CLASSIFICATION	5.933110084772808E-5	DOCUMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999877066394331	WITHOUT_CLASSIFICATION	1.2293360566760364E-5	DOCUMENTATION
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999843210414546	WITHOUT_CLASSIFICATION	1.567895854540564E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999684777746757	WITHOUT_CLASSIFICATION	3.152222532436996E-5	DOCUMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.999680655576342	WITHOUT_CLASSIFICATION	3.193444236580436E-4	DOCUMENTATION
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9998410022107412	WITHOUT_CLASSIFICATION	1.589977892587974E-4	DOCUMENTATION
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.999991625047681	WITHOUT_CLASSIFICATION	8.374952318915696E-6	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.999999148523945	WITHOUT_CLASSIFICATION	8.51476054928285E-7	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.9999922267587635	WITHOUT_CLASSIFICATION	7.77324123655146E-6	DOCUMENTATION
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.999999172038108	WITHOUT_CLASSIFICATION	8.279618921405744E-7	DOCUMENTATION
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999826905366256	WITHOUT_CLASSIFICATION	1.7309463374371662E-5	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9996835665133724	WITHOUT_CLASSIFICATION	3.1643348662751825E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999684777746757	WITHOUT_CLASSIFICATION	3.152222532436996E-5	DOCUMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999211536493223	WITHOUT_CLASSIFICATION	7.884635067762494E-5	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999906718180562	WITHOUT_CLASSIFICATION	9.328181943757714E-6	DOCUMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9998499956590713	WITHOUT_CLASSIFICATION	1.5000434092874473E-4	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999421520131728	WITHOUT_CLASSIFICATION	5.7847986827118716E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9998328843025138	WITHOUT_CLASSIFICATION	1.671156974861079E-4	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9998328843025138	WITHOUT_CLASSIFICATION	1.671156974861079E-4	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999998399227936	WITHOUT_CLASSIFICATION	1.6007720631229442E-7	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9998139741538081	WITHOUT_CLASSIFICATION	1.8602584619196113E-4	DOCUMENTATION
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9998197272013792	WITHOUT_CLASSIFICATION	1.802727986207023E-4	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999855014469727	WITHOUT_CLASSIFICATION	1.4498553027390444E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999925213607525	WITHOUT_CLASSIFICATION	7.478639247588994E-6	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999961323101537	WITHOUT_CLASSIFICATION	3.867689846357445E-6	DOCUMENTATION
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999961067871942	WITHOUT_CLASSIFICATION	3.893212805824365E-6	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9998791054387991	WITHOUT_CLASSIFICATION	1.2089456120084774E-4	DOCUMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999982002770564	WITHOUT_CLASSIFICATION	1.7997229435503264E-6	DOCUMENTATION
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9998486260363006	WITHOUT_CLASSIFICATION	1.5137396369924692E-4	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9994326015293318	WITHOUT_CLASSIFICATION	5.67398470668267E-4	DOCUMENTATION
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9991692282470631	WITHOUT_CLASSIFICATION	8.307717529370224E-4	DOCUMENTATION
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999964448441664	WITHOUT_CLASSIFICATION	3.555155833605195E-6	DOCUMENTATION
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999991672769893	WITHOUT_CLASSIFICATION	8.32723010681544E-7	DOCUMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999989147649863	WITHOUT_CLASSIFICATION	1.0852350137525871E-6	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999998659158871	WITHOUT_CLASSIFICATION	1.3408411297770954E-7	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9998240234109846	WITHOUT_CLASSIFICATION	1.7597658901530666E-4	DOCUMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9995118314534275	WITHOUT_CLASSIFICATION	4.8816854657260416E-4	DOCUMENTATION
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999997381390636	WITHOUT_CLASSIFICATION	2.6186093638822956E-7	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9995267775902125	WITHOUT_CLASSIFICATION	4.7322240978753483E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999697298433508	WITHOUT_CLASSIFICATION	3.027015664933119E-5	DOCUMENTATION
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.9999962945134202	WITHOUT_CLASSIFICATION	3.7054865797291387E-6	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9999992922271655	WITHOUT_CLASSIFICATION	7.077728343451487E-7	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9998254348968839	WITHOUT_CLASSIFICATION	1.7456510311603265E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999260446662982	WITHOUT_CLASSIFICATION	7.395533370176143E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9999978121452268	WITHOUT_CLASSIFICATION	2.1878547731488144E-6	DOCUMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.999997192934766	WITHOUT_CLASSIFICATION	2.8070652340950435E-6	DOCUMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.9984180081740476	WITHOUT_CLASSIFICATION	0.0015819918259524102	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999820618772711	WITHOUT_CLASSIFICATION	1.7938122728875284E-5	DOCUMENTATION
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9990387775307723	WITHOUT_CLASSIFICATION	9.6122246922776E-4	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9999996005546801	WITHOUT_CLASSIFICATION	3.9944531989477745E-7	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999820618772711	WITHOUT_CLASSIFICATION	1.7938122728875284E-5	DOCUMENTATION
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9999669944736067	WITHOUT_CLASSIFICATION	3.3005526393263003E-5	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.999978193289359	WITHOUT_CLASSIFICATION	2.180671064109441E-5	DOCUMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999857177538729	WITHOUT_CLASSIFICATION	1.4282246127202495E-5	DOCUMENTATION
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.999891079250608	WITHOUT_CLASSIFICATION	1.0892074939201907E-4	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9997925250355912	WITHOUT_CLASSIFICATION	2.074749644088572E-4	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999868716321562	WITHOUT_CLASSIFICATION	1.3128367843805397E-5	DOCUMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9988420945677852	WITHOUT_CLASSIFICATION	0.0011579054322147738	DOCUMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9996917491496407	WITHOUT_CLASSIFICATION	3.0825085035942733E-4	DOCUMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9995392914415218	WITHOUT_CLASSIFICATION	4.6070855847816193E-4	DOCUMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9999936506355547	WITHOUT_CLASSIFICATION	6.349364445343716E-6	DOCUMENTATION
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9997123781329964	WITHOUT_CLASSIFICATION	2.8762186700358584E-4	DOCUMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999885754937055	WITHOUT_CLASSIFICATION	1.142450629453702E-5	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9996181179913761	WITHOUT_CLASSIFICATION	3.8188200862395507E-4	DOCUMENTATION
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999795175837843	WITHOUT_CLASSIFICATION	2.0482416215712555E-5	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9995109640951434	WITHOUT_CLASSIFICATION	4.890359048565753E-4	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999780572836064	WITHOUT_CLASSIFICATION	2.194271639360413E-5	DOCUMENTATION
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999865842380135	WITHOUT_CLASSIFICATION	1.3415761986546742E-5	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999973471345264	WITHOUT_CLASSIFICATION	2.6528654736874715E-6	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999937892460878	WITHOUT_CLASSIFICATION	6.210753912173844E-6	DOCUMENTATION
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999959854953036	WITHOUT_CLASSIFICATION	4.014504696490449E-6	DOCUMENTATION
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999731919198774	WITHOUT_CLASSIFICATION	2.68080801224765E-5	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999693783038086	WITHOUT_CLASSIFICATION	3.062169619142892E-5	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999805179929245	WITHOUT_CLASSIFICATION	1.9482007075446864E-5	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999890509364945	WITHOUT_CLASSIFICATION	1.0949063505507834E-5	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9994414137523052	WITHOUT_CLASSIFICATION	5.585862476947521E-4	DOCUMENTATION
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9994414137523052	WITHOUT_CLASSIFICATION	5.585862476947521E-4	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999965713197236	WITHOUT_CLASSIFICATION	3.4286802763535E-6	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9998834235089112	WITHOUT_CLASSIFICATION	1.1657649108871699E-4	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999904164976731	WITHOUT_CLASSIFICATION	9.583502326960582E-6	DOCUMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9994622122177756	WITHOUT_CLASSIFICATION	5.377877822243057E-4	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.9999817480804712	WITHOUT_CLASSIFICATION	1.8251919528751897E-5	DOCUMENTATION
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999700863169882	WITHOUT_CLASSIFICATION	2.991368301179738E-5	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999633614765221	WITHOUT_CLASSIFICATION	3.6638523477965094E-5	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999708141791563	WITHOUT_CLASSIFICATION	2.9185820843646387E-5	DOCUMENTATION
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.9999972675251178	WITHOUT_CLASSIFICATION	2.7324748822216798E-6	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9999898232229967	WITHOUT_CLASSIFICATION	1.0176777003435069E-5	DOCUMENTATION
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9999381540159659	WITHOUT_CLASSIFICATION	6.184598403407525E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999942145243937	WITHOUT_CLASSIFICATION	5.785475606239224E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999942145243937	WITHOUT_CLASSIFICATION	5.785475606239224E-6	DOCUMENTATION
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999300468985199	WITHOUT_CLASSIFICATION	6.995310148002393E-5	DOCUMENTATION
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999999359063098	WITHOUT_CLASSIFICATION	6.409369028087186E-8	DOCUMENTATION
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999898931229412	WITHOUT_CLASSIFICATION	1.0106877058748549E-5	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999976449189216	WITHOUT_CLASSIFICATION	2.3550810783327165E-6	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999971202862072	WITHOUT_CLASSIFICATION	2.8797137928066343E-6	DOCUMENTATION
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999891365531673	WITHOUT_CLASSIFICATION	1.0863446832761868E-5	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.999971282775108	WITHOUT_CLASSIFICATION	2.871722489195342E-5	DOCUMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999858758835717	WITHOUT_CLASSIFICATION	1.4124116428355025E-5	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9999702496321348	WITHOUT_CLASSIFICATION	2.9750367865149297E-5	DOCUMENTATION
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999975891645716	WITHOUT_CLASSIFICATION	2.4108354284461166E-6	DOCUMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999985144869533	WITHOUT_CLASSIFICATION	1.4855130467134039E-6	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999938533189534	WITHOUT_CLASSIFICATION	6.1466810466688985E-6	DOCUMENTATION
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999700474051821	WITHOUT_CLASSIFICATION	2.9952594817769286E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999942145243937	WITHOUT_CLASSIFICATION	5.785475606239224E-6	DOCUMENTATION
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.999979346249752	WITHOUT_CLASSIFICATION	2.0653750247984042E-5	DOCUMENTATION
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999262265896127	WITHOUT_CLASSIFICATION	7.377341038719351E-5	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999997535409278	WITHOUT_CLASSIFICATION	2.4645907219154016E-7	DOCUMENTATION
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9999848896999829	WITHOUT_CLASSIFICATION	1.5110300017005614E-5	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999980697935253	WITHOUT_CLASSIFICATION	1.930206474599996E-6	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9999656156498642	WITHOUT_CLASSIFICATION	3.438435013584786E-5	DOCUMENTATION
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.999984453071632	WITHOUT_CLASSIFICATION	1.5546928368067002E-5	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999955259737896	WITHOUT_CLASSIFICATION	4.474026210451053E-6	DOCUMENTATION
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999987159165068	WITHOUT_CLASSIFICATION	1.2840834932040304E-6	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999727389522964	WITHOUT_CLASSIFICATION	2.726104770357176E-5	DOCUMENTATION
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9999899429403044	WITHOUT_CLASSIFICATION	1.0057059695552814E-5	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999633614765221	WITHOUT_CLASSIFICATION	3.6638523477965094E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999942145243937	WITHOUT_CLASSIFICATION	5.785475606239224E-6	DOCUMENTATION
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999950076925548	WITHOUT_CLASSIFICATION	4.992307445211057E-6	DOCUMENTATION
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999941038199758	WITHOUT_CLASSIFICATION	5.896180024232199E-6	DOCUMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999156687334301	WITHOUT_CLASSIFICATION	8.433126656987784E-5	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999953542577295	WITHOUT_CLASSIFICATION	4.645742270554359E-6	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999997898299529	WITHOUT_CLASSIFICATION	2.101700471167408E-7	DOCUMENTATION
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999767710240789	WITHOUT_CLASSIFICATION	2.3228975921146835E-5	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999710998408456	WITHOUT_CLASSIFICATION	2.8900159154333553E-5	DOCUMENTATION
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999996761265001	WITHOUT_CLASSIFICATION	3.238734998705379E-7	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999988831900962	WITHOUT_CLASSIFICATION	1.1168099038694485E-6	DOCUMENTATION
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999760185882767	WITHOUT_CLASSIFICATION	2.3981411723325822E-5	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.99998540845423	WITHOUT_CLASSIFICATION	1.4591545769985437E-5	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9994416756572638	WITHOUT_CLASSIFICATION	5.58324342736255E-4	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999887877753751	WITHOUT_CLASSIFICATION	1.1212224624830802E-5	DOCUMENTATION
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999981741505402	WITHOUT_CLASSIFICATION	1.8258494598062431E-6	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999709698269408	WITHOUT_CLASSIFICATION	2.9030173059266416E-5	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999994250857968	WITHOUT_CLASSIFICATION	5.749142032961898E-7	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999980871035066	WITHOUT_CLASSIFICATION	1.912896493393591E-6	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.999998671400586	WITHOUT_CLASSIFICATION	1.3285994140956995E-6	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.999978600703828	WITHOUT_CLASSIFICATION	2.139929617200247E-5	DOCUMENTATION
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.999999078645431	WITHOUT_CLASSIFICATION	9.213545690276081E-7	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9996997579645995	WITHOUT_CLASSIFICATION	3.0024203540049193E-4	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9996997579645995	WITHOUT_CLASSIFICATION	3.0024203540049193E-4	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9999687724769803	WITHOUT_CLASSIFICATION	3.122752301961789E-5	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9999973856609606	WITHOUT_CLASSIFICATION	2.614339039442142E-6	DOCUMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9999809340476835	WITHOUT_CLASSIFICATION	1.9065952316579972E-5	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.999985388170499	WITHOUT_CLASSIFICATION	1.4611829500941284E-5	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999907898520948	WITHOUT_CLASSIFICATION	9.210147905287684E-6	DOCUMENTATION
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9999964047623798	WITHOUT_CLASSIFICATION	3.5952376202520736E-6	DOCUMENTATION
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9999881349799087	WITHOUT_CLASSIFICATION	1.186502009136493E-5	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999859615240877	WITHOUT_CLASSIFICATION	1.4038475912315141E-5	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999859615240877	WITHOUT_CLASSIFICATION	1.4038475912315141E-5	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9995417579685517	WITHOUT_CLASSIFICATION	4.5824203144829913E-4	DOCUMENTATION
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999878311378136	WITHOUT_CLASSIFICATION	1.2168862186413104E-5	DOCUMENTATION
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999884257461101	WITHOUT_CLASSIFICATION	1.1574253889987049E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999924019491279	WITHOUT_CLASSIFICATION	7.598050872147702E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999924019491279	WITHOUT_CLASSIFICATION	7.598050872147702E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999924019491279	WITHOUT_CLASSIFICATION	7.598050872147702E-6	DOCUMENTATION
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9999606250963795	WITHOUT_CLASSIFICATION	3.937490362057382E-5	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9999903061444207	WITHOUT_CLASSIFICATION	9.693855579210688E-6	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9998638218415605	WITHOUT_CLASSIFICATION	1.3617815843941687E-4	DOCUMENTATION
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9999978647168477	WITHOUT_CLASSIFICATION	2.135283152336652E-6	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999997585327344	WITHOUT_CLASSIFICATION	2.414672656747108E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999942145243937	WITHOUT_CLASSIFICATION	5.785475606239224E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999942145243937	WITHOUT_CLASSIFICATION	5.785475606239224E-6	DOCUMENTATION
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9999989243896129	WITHOUT_CLASSIFICATION	1.0756103870503553E-6	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999959492863684	WITHOUT_CLASSIFICATION	4.050713631571588E-6	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9999997426772008	WITHOUT_CLASSIFICATION	2.573227992330931E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999670883575111	WITHOUT_CLASSIFICATION	3.291164248881556E-5	DOCUMENTATION
// igndore it...	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999879104995403	WITHOUT_CLASSIFICATION	1.2089500459672077E-5	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9999517133913498	WITHOUT_CLASSIFICATION	4.8286608650164724E-5	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.999999844098932	WITHOUT_CLASSIFICATION	1.5590106792153804E-7	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999980895480827	WITHOUT_CLASSIFICATION	1.91045191727775E-6	DOCUMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999948871966174	WITHOUT_CLASSIFICATION	5.1128033825276475E-6	DOCUMENTATION
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999767770115817	WITHOUT_CLASSIFICATION	2.322298841835969E-5	DOCUMENTATION
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999953977238869	WITHOUT_CLASSIFICATION	4.602276113189846E-6	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999953977238869	WITHOUT_CLASSIFICATION	4.602276113189846E-6	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999953977238869	WITHOUT_CLASSIFICATION	4.602276113189846E-6	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999953977238869	WITHOUT_CLASSIFICATION	4.602276113189846E-6	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.9999953977238869	WITHOUT_CLASSIFICATION	4.602276113189846E-6	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999947428290369	WITHOUT_CLASSIFICATION	5.257170963150111E-6	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999947428290369	WITHOUT_CLASSIFICATION	5.257170963150111E-6	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999947428290369	WITHOUT_CLASSIFICATION	5.257170963150111E-6	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999947428290369	WITHOUT_CLASSIFICATION	5.257170963150111E-6	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999883963366919	WITHOUT_CLASSIFICATION	1.1603663308210245E-5	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9996997579645995	WITHOUT_CLASSIFICATION	3.0024203540049193E-4	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999962766139349	WITHOUT_CLASSIFICATION	3.7233860650381156E-6	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999947428290369	WITHOUT_CLASSIFICATION	5.257170963150111E-6	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9999928462774174	WITHOUT_CLASSIFICATION	7.153722582660969E-6	DOCUMENTATION
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999623960723525	WITHOUT_CLASSIFICATION	3.7603927647474195E-5	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999742282864669	WITHOUT_CLASSIFICATION	2.5771713533097107E-5	DOCUMENTATION
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999951598984357	WITHOUT_CLASSIFICATION	4.840101564276803E-6	DOCUMENTATION
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999998066950494	WITHOUT_CLASSIFICATION	1.9330495064129463E-7	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9999754556194923	WITHOUT_CLASSIFICATION	2.4544380507643627E-5	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999948480483949	WITHOUT_CLASSIFICATION	5.151951605164683E-6	DOCUMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9999993039746055	WITHOUT_CLASSIFICATION	6.960253945580481E-7	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9999798211103873	WITHOUT_CLASSIFICATION	2.0178889612729083E-5	DOCUMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9999974261645065	WITHOUT_CLASSIFICATION	2.5738354934621815E-6	DOCUMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999996033019164	WITHOUT_CLASSIFICATION	3.966980835725981E-7	DOCUMENTATION
// Set it!	WITHOUT_CLASSIFICATION	0.9999223939090611	WITHOUT_CLASSIFICATION	7.760609093888659E-5	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999152856181995	WITHOUT_CLASSIFICATION	8.471438180048809E-5	DOCUMENTATION
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999899339053566	WITHOUT_CLASSIFICATION	1.006609464340391E-5	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9999998459886182	WITHOUT_CLASSIFICATION	1.5401138187603291E-7	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9999916822578806	WITHOUT_CLASSIFICATION	8.317742119390891E-6	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999963589926606	WITHOUT_CLASSIFICATION	3.6410073394537738E-6	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999567962474916	WITHOUT_CLASSIFICATION	4.320375250851472E-5	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999567962474916	WITHOUT_CLASSIFICATION	4.320375250851472E-5	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999863606525707	WITHOUT_CLASSIFICATION	1.3639347429239686E-5	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999954294002487	WITHOUT_CLASSIFICATION	4.570599751341826E-6	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999869449925997	WITHOUT_CLASSIFICATION	1.305500740035241E-5	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9999725171970604	WITHOUT_CLASSIFICATION	2.748280293960146E-5	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.999942164673003	WITHOUT_CLASSIFICATION	5.783532699684774E-5	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.9999966445805374	WITHOUT_CLASSIFICATION	3.3554194625656907E-6	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9999940634164034	WITHOUT_CLASSIFICATION	5.936583596541336E-6	DOCUMENTATION
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999558238104229	WITHOUT_CLASSIFICATION	4.417618957718001E-5	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999877852447879	WITHOUT_CLASSIFICATION	1.2214755212082583E-5	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999910864034234	WITHOUT_CLASSIFICATION	8.913596576610656E-6	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999689467023167	WITHOUT_CLASSIFICATION	3.1053297683385546E-5	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9994426854517386	WITHOUT_CLASSIFICATION	5.573145482613255E-4	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999991673880604	WITHOUT_CLASSIFICATION	8.326119395784075E-7	DOCUMENTATION
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999902030340472	WITHOUT_CLASSIFICATION	9.796965952790181E-6	DOCUMENTATION
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999966399342584	WITHOUT_CLASSIFICATION	3.3600657417209016E-6	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999819296064311	WITHOUT_CLASSIFICATION	1.8070393568973996E-5	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999962574472446	WITHOUT_CLASSIFICATION	3.742552755311731E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999962574472446	WITHOUT_CLASSIFICATION	3.742552755311731E-6	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9999280898148496	WITHOUT_CLASSIFICATION	7.191018515043568E-5	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9999998387354564	WITHOUT_CLASSIFICATION	1.6126454355963267E-7	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9999889561428214	WITHOUT_CLASSIFICATION	1.1043857178721846E-5	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999889561428214	WITHOUT_CLASSIFICATION	1.1043857178721846E-5	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9999221310726526	WITHOUT_CLASSIFICATION	7.786892734746712E-5	DOCUMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999880210566816	WITHOUT_CLASSIFICATION	1.1978943318415925E-5	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9995481085811413	WITHOUT_CLASSIFICATION	4.5189141885879726E-4	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999992737852921	WITHOUT_CLASSIFICATION	7.262147080500384E-7	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.999903949163132	WITHOUT_CLASSIFICATION	9.605083686804919E-5	DOCUMENTATION
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999947744363301	WITHOUT_CLASSIFICATION	5.225563669911877E-6	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999823671027157	WITHOUT_CLASSIFICATION	1.7632897284346294E-5	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999992737852921	WITHOUT_CLASSIFICATION	7.262147080500384E-7	DOCUMENTATION
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.9999997219444402	WITHOUT_CLASSIFICATION	2.7805555985371686E-7	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999865475201047	WITHOUT_CLASSIFICATION	1.3452479895198417E-5	DOCUMENTATION
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999982919245587	WITHOUT_CLASSIFICATION	1.7080754412505203E-6	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.999929943838517	WITHOUT_CLASSIFICATION	7.005616148293356E-5	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999985604057119	WITHOUT_CLASSIFICATION	1.4395942881028141E-6	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.999988476459385	WITHOUT_CLASSIFICATION	1.1523540614935952E-5	DOCUMENTATION
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999667986960629	WITHOUT_CLASSIFICATION	3.3201303937079534E-5	DOCUMENTATION
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999862857084976	WITHOUT_CLASSIFICATION	1.3714291502397576E-5	DOCUMENTATION
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999998164802798	WITHOUT_CLASSIFICATION	1.8351972020159414E-7	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999970111615094	WITHOUT_CLASSIFICATION	2.988838490646103E-6	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9999914928240539	WITHOUT_CLASSIFICATION	8.50717594614679E-6	DOCUMENTATION
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999977350369897	WITHOUT_CLASSIFICATION	2.2649630102151898E-6	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999925493455687	WITHOUT_CLASSIFICATION	7.450654431255388E-6	DOCUMENTATION
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999909901169931	WITHOUT_CLASSIFICATION	9.009883006921052E-6	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.99999020053862	WITHOUT_CLASSIFICATION	9.799461380050144E-6	DOCUMENTATION
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999777291638037	WITHOUT_CLASSIFICATION	2.2270836196331333E-5	DOCUMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.999973552635829	WITHOUT_CLASSIFICATION	2.644736417099302E-5	DOCUMENTATION
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9999265164253455	WITHOUT_CLASSIFICATION	7.348357465457185E-5	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9999265164253455	WITHOUT_CLASSIFICATION	7.348357465457185E-5	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999667986960629	WITHOUT_CLASSIFICATION	3.3201303937079534E-5	DOCUMENTATION
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9999868673284653	WITHOUT_CLASSIFICATION	1.3132671534715495E-5	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.9999939668102187	WITHOUT_CLASSIFICATION	6.033189781320938E-6	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.999853414012341	WITHOUT_CLASSIFICATION	1.465859876590488E-4	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.99990960754595	WITHOUT_CLASSIFICATION	9.039245404997778E-5	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999902576510871	WITHOUT_CLASSIFICATION	9.742348912977616E-6	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999926048042016	WITHOUT_CLASSIFICATION	7.395195798413541E-6	DOCUMENTATION
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999919109433071	WITHOUT_CLASSIFICATION	8.089056692810452E-6	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999827845234854	WITHOUT_CLASSIFICATION	1.7215476514570082E-5	DOCUMENTATION
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999971470612131	WITHOUT_CLASSIFICATION	2.852938786895857E-6	DOCUMENTATION
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9999985564337925	WITHOUT_CLASSIFICATION	1.4435662074480867E-6	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999984197882084	WITHOUT_CLASSIFICATION	1.58021179165647E-6	DOCUMENTATION
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999955068509436	WITHOUT_CLASSIFICATION	4.493149056422014E-6	DOCUMENTATION
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999909594356348	WITHOUT_CLASSIFICATION	9.040564365206367E-6	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9999998459221261	WITHOUT_CLASSIFICATION	1.5407787393977864E-7	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999934237850249	WITHOUT_CLASSIFICATION	6.576214975063642E-6	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999858848312726	WITHOUT_CLASSIFICATION	1.4115168727293938E-5	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999997543964385	WITHOUT_CLASSIFICATION	2.4560356145237587E-7	DOCUMENTATION
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999810630497503	WITHOUT_CLASSIFICATION	1.8936950249646073E-5	DOCUMENTATION
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999928488724118	WITHOUT_CLASSIFICATION	7.151127588133387E-6	DOCUMENTATION
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999886159772713	WITHOUT_CLASSIFICATION	1.1384022728756177E-5	DOCUMENTATION
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999623092346153	WITHOUT_CLASSIFICATION	3.7690765384777875E-5	DOCUMENTATION
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999826984020814	WITHOUT_CLASSIFICATION	1.7301597918558055E-5	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999733561624795	WITHOUT_CLASSIFICATION	2.6643837520483045E-5	DOCUMENTATION
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999952530245696	WITHOUT_CLASSIFICATION	4.7469754304039945E-6	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999881238800893	WITHOUT_CLASSIFICATION	1.1876119910644886E-5	DOCUMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999549109138471	WITHOUT_CLASSIFICATION	4.508908615291895E-5	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999986639868004	WITHOUT_CLASSIFICATION	1.3360131996745482E-6	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999816194501782	WITHOUT_CLASSIFICATION	1.8380549821899103E-5	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.999995946943777	WITHOUT_CLASSIFICATION	4.053056223043675E-6	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999884959544995	WITHOUT_CLASSIFICATION	1.1504045500669058E-5	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680853990527	WITHOUT_CLASSIFICATION	3.1914600947346715E-5	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999934237850249	WITHOUT_CLASSIFICATION	6.576214975063642E-6	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999957943445708	WITHOUT_CLASSIFICATION	4.205655429207456E-6	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999978164968782	WITHOUT_CLASSIFICATION	2.183503121673206E-6	DOCUMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999976848541481	WITHOUT_CLASSIFICATION	2.31514585199301E-6	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999897074578699	WITHOUT_CLASSIFICATION	1.0292542130201488E-5	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999930982535706	WITHOUT_CLASSIFICATION	6.90174642944104E-6	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999969815357512	WITHOUT_CLASSIFICATION	3.0184642487457895E-6	DOCUMENTATION
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999806745454956	WITHOUT_CLASSIFICATION	1.93254545044381E-5	DOCUMENTATION
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999904652873077	WITHOUT_CLASSIFICATION	9.534712692218421E-6	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999964852886307	WITHOUT_CLASSIFICATION	3.5147113693386413E-6	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999946507982431	WITHOUT_CLASSIFICATION	5.34920175685297E-6	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9999690129977524	WITHOUT_CLASSIFICATION	3.098700224749332E-5	DOCUMENTATION
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.9999997645327429	WITHOUT_CLASSIFICATION	2.354672572266946E-7	DOCUMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9997337591919394	WITHOUT_CLASSIFICATION	2.662408080605954E-4	DOCUMENTATION
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9999897503987656	WITHOUT_CLASSIFICATION	1.024960123442682E-5	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680853990527	WITHOUT_CLASSIFICATION	3.1914600947346715E-5	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999946309397882	WITHOUT_CLASSIFICATION	5.369060211716506E-6	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999997970084001	WITHOUT_CLASSIFICATION	2.029915999878419E-7	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999947244519105	WITHOUT_CLASSIFICATION	5.275548089461304E-6	DOCUMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.9999643937636968	WITHOUT_CLASSIFICATION	3.560623630314941E-5	DOCUMENTATION
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9999849674981172	WITHOUT_CLASSIFICATION	1.5032501882785352E-5	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999960947659553	WITHOUT_CLASSIFICATION	3.905234044699801E-6	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.999903949163132	WITHOUT_CLASSIFICATION	9.605083686804919E-5	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999977736787788	WITHOUT_CLASSIFICATION	2.2263212210802174E-6	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999934237850249	WITHOUT_CLASSIFICATION	6.576214975063642E-6	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9999749859583622	WITHOUT_CLASSIFICATION	2.5014041637836077E-5	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999950463704417	WITHOUT_CLASSIFICATION	4.953629558342851E-6	DOCUMENTATION
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999898536378983	WITHOUT_CLASSIFICATION	1.0146362101741253E-5	DOCUMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999898523739195	WITHOUT_CLASSIFICATION	1.0147626080545517E-5	DOCUMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999804711342437	WITHOUT_CLASSIFICATION	1.952886575625567E-5	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.99999939038247	WITHOUT_CLASSIFICATION	6.096175300597387E-7	DOCUMENTATION
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.999993617594915	WITHOUT_CLASSIFICATION	6.382405084976793E-6	DOCUMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9999969973024136	WITHOUT_CLASSIFICATION	3.0026975863523246E-6	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9999984955008854	WITHOUT_CLASSIFICATION	1.5044991146895108E-6	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999908388812051	WITHOUT_CLASSIFICATION	9.16111879476922E-6	DOCUMENTATION
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9998604012330878	WITHOUT_CLASSIFICATION	1.3959876691219524E-4	DOCUMENTATION
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999976395878541	WITHOUT_CLASSIFICATION	2.3604121458463657E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999879845442321	WITHOUT_CLASSIFICATION	1.2015455767862227E-5	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999879845442321	WITHOUT_CLASSIFICATION	1.2015455767862227E-5	DOCUMENTATION
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999993667988898	WITHOUT_CLASSIFICATION	6.332011101561364E-7	DOCUMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9998623299068577	WITHOUT_CLASSIFICATION	1.3767009314224544E-4	DOCUMENTATION
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999970858249377	WITHOUT_CLASSIFICATION	2.9141750623388974E-6	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999898829864456	WITHOUT_CLASSIFICATION	1.011701355438406E-5	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999869611882625	WITHOUT_CLASSIFICATION	1.3038811737599048E-5	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.999977556922743	WITHOUT_CLASSIFICATION	2.2443077256956138E-5	DOCUMENTATION
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999928091949161	WITHOUT_CLASSIFICATION	7.19080508402048E-6	DOCUMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999990812463484	WITHOUT_CLASSIFICATION	9.187536515164671E-7	DOCUMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999888133789366	WITHOUT_CLASSIFICATION	1.1186621063296251E-5	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999835275839034	WITHOUT_CLASSIFICATION	1.6472416096552932E-5	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.9999811836232351	WITHOUT_CLASSIFICATION	1.8816376764992385E-5	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999811836232351	WITHOUT_CLASSIFICATION	1.8816376764992385E-5	DOCUMENTATION
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999998053077104	WITHOUT_CLASSIFICATION	1.946922896847241E-7	DOCUMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999526539941473	WITHOUT_CLASSIFICATION	4.7346005852753886E-5	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999802934851604	WITHOUT_CLASSIFICATION	1.9706514839648877E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9995908308790424	WITHOUT_CLASSIFICATION	4.091691209576041E-4	DOCUMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999968629366918	WITHOUT_CLASSIFICATION	3.1370633082055417E-6	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999788471507125	WITHOUT_CLASSIFICATION	2.1152849287502436E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681742061436	WITHOUT_CLASSIFICATION	3.182579385636149E-5	DOCUMENTATION
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999912488547323	WITHOUT_CLASSIFICATION	8.751145267756555E-6	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.999997294935358	WITHOUT_CLASSIFICATION	2.7050646419728145E-6	DOCUMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999904545041862	WITHOUT_CLASSIFICATION	9.54549581365233E-6	DOCUMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999772423313178	WITHOUT_CLASSIFICATION	2.275766868219144E-5	DOCUMENTATION
/*implied*/	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9999830660646107	WITHOUT_CLASSIFICATION	1.6933935389209233E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681742061436	WITHOUT_CLASSIFICATION	3.182579385636149E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681742061436	WITHOUT_CLASSIFICATION	3.182579385636149E-5	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999952198102708	WITHOUT_CLASSIFICATION	4.7801897291462495E-6	DOCUMENTATION
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999971024499859	WITHOUT_CLASSIFICATION	2.8975500141631705E-6	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9995280736221895	WITHOUT_CLASSIFICATION	4.7192637781051996E-4	DOCUMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999954538462105	WITHOUT_CLASSIFICATION	4.546153789597836E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9996966673134159	WITHOUT_CLASSIFICATION	3.033326865840245E-4	DOCUMENTATION
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9994734021513225	WITHOUT_CLASSIFICATION	5.26597848677537E-4	DOCUMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.9999995123542522	WITHOUT_CLASSIFICATION	4.876457478627455E-7	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9999996654158644	WITHOUT_CLASSIFICATION	3.3458413566437875E-7	DOCUMENTATION
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9995267775902125	WITHOUT_CLASSIFICATION	4.7322240978753483E-4	DOCUMENTATION
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999977774663097	WITHOUT_CLASSIFICATION	2.222533690273583E-6	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9996711256355628	WITHOUT_CLASSIFICATION	3.28874364437072E-4	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.999973778102708	WITHOUT_CLASSIFICATION	2.622189729193345E-5	DOCUMENTATION
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999124961462627	WITHOUT_CLASSIFICATION	8.750385373736224E-5	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999872170150208	WITHOUT_CLASSIFICATION	1.2782984979186866E-5	DOCUMENTATION
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999863969492628	WITHOUT_CLASSIFICATION	1.3603050737247118E-5	DOCUMENTATION
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999867227264227	WITHOUT_CLASSIFICATION	1.3277273577157576E-5	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9995109640951434	WITHOUT_CLASSIFICATION	4.890359048565753E-4	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9994414137523052	WITHOUT_CLASSIFICATION	5.585862476947521E-4	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9998789212643406	WITHOUT_CLASSIFICATION	1.2107873565933699E-4	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999734847478271	WITHOUT_CLASSIFICATION	2.6515252173003852E-5	DOCUMENTATION
//TODO:	WITHOUT_CLASSIFICATION	0.9987545952630036	WITHOUT_CLASSIFICATION	0.0012454047369964102	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999931941514524	WITHOUT_CLASSIFICATION	6.8058485476999086E-6	DOCUMENTATION
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.99999839309892	WITHOUT_CLASSIFICATION	1.6069010800126914E-6	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999899778994562	WITHOUT_CLASSIFICATION	1.0022100543691426E-5	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999741787709675	WITHOUT_CLASSIFICATION	2.5821229032545773E-5	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999819617398005	WITHOUT_CLASSIFICATION	1.8038260199462703E-5	DOCUMENTATION
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999895987512555	WITHOUT_CLASSIFICATION	1.0401248744625586E-5	DOCUMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999875463206239	WITHOUT_CLASSIFICATION	1.2453679376125444E-5	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999959687062064	WITHOUT_CLASSIFICATION	4.0312937935813455E-6	DOCUMENTATION
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999991049731044	WITHOUT_CLASSIFICATION	8.950268955881281E-7	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.999927453743676	WITHOUT_CLASSIFICATION	7.254625632393855E-5	DOCUMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9999845377244836	WITHOUT_CLASSIFICATION	1.5462275516405025E-5	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999905953153011	WITHOUT_CLASSIFICATION	9.404684698850264E-6	DOCUMENTATION
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9999680626218458	WITHOUT_CLASSIFICATION	3.193737815410683E-5	DOCUMENTATION
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9999955718585231	WITHOUT_CLASSIFICATION	4.428141476871815E-6	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999889355111835	WITHOUT_CLASSIFICATION	1.106448881645928E-5	DOCUMENTATION
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999863815718272	WITHOUT_CLASSIFICATION	1.3618428172948048E-5	DOCUMENTATION
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999950060552046	WITHOUT_CLASSIFICATION	4.9939447953826324E-6	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9999925990061852	WITHOUT_CLASSIFICATION	7.400993814783103E-6	DOCUMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.999350665764272	WITHOUT_CLASSIFICATION	6.493342357280057E-4	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.999991114218925	WITHOUT_CLASSIFICATION	8.885781075119348E-6	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999949345427575	WITHOUT_CLASSIFICATION	5.065457242626462E-6	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999266977213321	WITHOUT_CLASSIFICATION	7.330227866786959E-5	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999781277097798	WITHOUT_CLASSIFICATION	2.1872290220221597E-5	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999266977213321	WITHOUT_CLASSIFICATION	7.330227866786959E-5	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999967103777612	WITHOUT_CLASSIFICATION	3.2896222388903483E-6	DOCUMENTATION
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999936330982053	WITHOUT_CLASSIFICATION	6.366901794704491E-6	DOCUMENTATION
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9999577698019203	WITHOUT_CLASSIFICATION	4.2230198079712206E-5	DOCUMENTATION
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999985168517712	WITHOUT_CLASSIFICATION	1.4831482288518063E-6	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999881115351503	WITHOUT_CLASSIFICATION	1.1888464849598244E-5	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9999577698019203	WITHOUT_CLASSIFICATION	4.2230198079712206E-5	DOCUMENTATION
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999976534083725	WITHOUT_CLASSIFICATION	2.346591627447853E-6	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999928600400922	WITHOUT_CLASSIFICATION	7.139959907785012E-6	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999921446413534	WITHOUT_CLASSIFICATION	7.855358646520866E-6	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999926980215332	WITHOUT_CLASSIFICATION	7.301978466831956E-6	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999950238661586	WITHOUT_CLASSIFICATION	4.976133841440004E-6	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999951914526345	WITHOUT_CLASSIFICATION	4.808547365515688E-6	DOCUMENTATION
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999980008619278	WITHOUT_CLASSIFICATION	1.9991380721265684E-6	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.999999511210343	WITHOUT_CLASSIFICATION	4.887896569419789E-7	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9999906712860444	WITHOUT_CLASSIFICATION	9.328713955531918E-6	DOCUMENTATION
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.999997468449548	WITHOUT_CLASSIFICATION	2.531550452082052E-6	DOCUMENTATION
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999954245850723	WITHOUT_CLASSIFICATION	4.575414927766542E-6	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999933180949668	WITHOUT_CLASSIFICATION	6.681905033247168E-6	DOCUMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999999391043116	WITHOUT_CLASSIFICATION	6.08956883875596E-8	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9999431933181545	WITHOUT_CLASSIFICATION	5.6806681845535014E-5	DOCUMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999956076622646	WITHOUT_CLASSIFICATION	4.392337735428737E-6	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9994468861741013	WITHOUT_CLASSIFICATION	5.531138258988243E-4	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999958475239111	WITHOUT_CLASSIFICATION	4.152476088915897E-6	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999983049887906	WITHOUT_CLASSIFICATION	1.6950112094405761E-6	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999694461619101	WITHOUT_CLASSIFICATION	3.055383808989821E-5	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999080729685945	WITHOUT_CLASSIFICATION	9.192703140558498E-5	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9995415644369594	WITHOUT_CLASSIFICATION	4.5843556304061704E-4	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.999586795589874	WITHOUT_CLASSIFICATION	4.1320441012614623E-4	DOCUMENTATION
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9997787602719008	WITHOUT_CLASSIFICATION	2.2123972809910144E-4	DOCUMENTATION
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9998692867290911	WITHOUT_CLASSIFICATION	1.307132709089144E-4	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9979071152743751	WITHOUT_CLASSIFICATION	0.002092884725624858	DOCUMENTATION
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999995304010246	WITHOUT_CLASSIFICATION	4.695989753740264E-7	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9999691561979573	WITHOUT_CLASSIFICATION	3.0843802042548094E-5	DOCUMENTATION
//if its "id"	WITHOUT_CLASSIFICATION	0.9998004353636651	WITHOUT_CLASSIFICATION	1.9956463633477483E-4	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9998699707673001	WITHOUT_CLASSIFICATION	1.3002923269988826E-4	DOCUMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9997785555875693	WITHOUT_CLASSIFICATION	2.214444124306765E-4	DOCUMENTATION
//important!!	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9997785555875693	WITHOUT_CLASSIFICATION	2.214444124306765E-4	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999869642345659	WITHOUT_CLASSIFICATION	1.303576543395685E-5	DOCUMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9995109734693134	WITHOUT_CLASSIFICATION	4.890265306866178E-4	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999039523123073	WITHOUT_CLASSIFICATION	9.604768769267574E-5	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999080729685945	WITHOUT_CLASSIFICATION	9.192703140558498E-5	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// collections of values	WITHOUT_CLASSIFICATION	0.9999838433825861	WITHOUT_CLASSIFICATION	1.6156617413916016E-5	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9992990095201923	WITHOUT_CLASSIFICATION	7.009904798076946E-4	DOCUMENTATION
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9998048615208239	WITHOUT_CLASSIFICATION	1.9513847917601224E-4	DOCUMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9996619031222376	WITHOUT_CLASSIFICATION	3.380968777624124E-4	DOCUMENTATION
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999975403430578	WITHOUT_CLASSIFICATION	2.4596569422056264E-6	DOCUMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999272597783295	WITHOUT_CLASSIFICATION	7.274022167044667E-5	DOCUMENTATION
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999895356952823	WITHOUT_CLASSIFICATION	1.0464304717642896E-5	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999693807851635	WITHOUT_CLASSIFICATION	3.0619214836451715E-5	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999751915300339	WITHOUT_CLASSIFICATION	2.4808469966074768E-5	DOCUMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9995359711688185	WITHOUT_CLASSIFICATION	4.640288311813833E-4	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999960999390654	WITHOUT_CLASSIFICATION	3.900060934699931E-6	DOCUMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9994414137523052	WITHOUT_CLASSIFICATION	5.585862476947521E-4	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9995109640951434	WITHOUT_CLASSIFICATION	4.890359048565753E-4	DOCUMENTATION
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9986835227280305	WITHOUT_CLASSIFICATION	0.001316477271969427	DOCUMENTATION
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999908395075962	WITHOUT_CLASSIFICATION	9.160492403870738E-6	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9994933258751071	WITHOUT_CLASSIFICATION	5.066741248928852E-4	DOCUMENTATION
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999388287460638	WITHOUT_CLASSIFICATION	6.117125393625793E-5	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999998248147276	WITHOUT_CLASSIFICATION	1.7518527243062395E-7	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9994414137523052	WITHOUT_CLASSIFICATION	5.585862476947521E-4	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.999988941414654	WITHOUT_CLASSIFICATION	1.1058585346085641E-5	DOCUMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999374077960054	WITHOUT_CLASSIFICATION	6.259220399462273E-5	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999988808064063	WITHOUT_CLASSIFICATION	1.1191935936696915E-6	DOCUMENTATION
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.99999420677231	WITHOUT_CLASSIFICATION	5.793227689961354E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999899106620366	WITHOUT_CLASSIFICATION	1.0089337963515042E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999899106620366	WITHOUT_CLASSIFICATION	1.0089337963515042E-5	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999838902172193	WITHOUT_CLASSIFICATION	1.6109782780694042E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999899106620366	WITHOUT_CLASSIFICATION	1.0089337963515042E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999899106620366	WITHOUT_CLASSIFICATION	1.0089337963515042E-5	DOCUMENTATION
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9997682660593972	WITHOUT_CLASSIFICATION	2.317339406027165E-4	DOCUMENTATION
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999189375158225	WITHOUT_CLASSIFICATION	8.106248417744989E-5	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999682211987949	WITHOUT_CLASSIFICATION	3.177880120496758E-5	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999682211987949	WITHOUT_CLASSIFICATION	3.177880120496758E-5	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999939705251496	WITHOUT_CLASSIFICATION	6.029474850407091E-6	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9999997071560742	WITHOUT_CLASSIFICATION	2.9284392582368514E-7	DOCUMENTATION
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9999184942480471	WITHOUT_CLASSIFICATION	8.150575195292861E-5	DOCUMENTATION
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999942705046446	WITHOUT_CLASSIFICATION	5.729495355362202E-6	DOCUMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999396099368028	WITHOUT_CLASSIFICATION	6.0390063197170305E-5	DOCUMENTATION
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9997936537136286	WITHOUT_CLASSIFICATION	2.0634628637144215E-4	DOCUMENTATION
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9999525498666911	WITHOUT_CLASSIFICATION	4.745013330890274E-5	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.999762114785134	WITHOUT_CLASSIFICATION	2.378852148659756E-4	DOCUMENTATION
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.999941279156815	WITHOUT_CLASSIFICATION	5.872084318495283E-5	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.9997979137504254	WITHOUT_CLASSIFICATION	2.0208624957457073E-4	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9981408976262257	WITHOUT_CLASSIFICATION	0.0018591023737741983	DOCUMENTATION
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.99987123357689	WITHOUT_CLASSIFICATION	1.287664231099506E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999752534850874	WITHOUT_CLASSIFICATION	2.4746514912536356E-5	DOCUMENTATION
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9999648636798065	WITHOUT_CLASSIFICATION	3.513632019356744E-5	DOCUMENTATION
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.997869732340272	WITHOUT_CLASSIFICATION	0.0021302676597280364	DOCUMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9997982419276695	WITHOUT_CLASSIFICATION	2.0175807233057712E-4	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999894532532698	WITHOUT_CLASSIFICATION	1.0546746730146098E-5	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.9999397861732738	WITHOUT_CLASSIFICATION	6.0213826726209295E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999752534850874	WITHOUT_CLASSIFICATION	2.4746514912536356E-5	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9995415644369594	WITHOUT_CLASSIFICATION	4.5843556304061704E-4	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9996641488335296	WITHOUT_CLASSIFICATION	3.3585116647044287E-4	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999917064629618	WITHOUT_CLASSIFICATION	8.293537038180245E-6	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999896587973864	WITHOUT_CLASSIFICATION	1.034120261357461E-5	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9997086029318961	WITHOUT_CLASSIFICATION	2.9139706810389415E-4	DOCUMENTATION
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999983718895701	WITHOUT_CLASSIFICATION	1.6281104298870963E-6	DOCUMENTATION
// careful with this!	WITHOUT_CLASSIFICATION	0.9999820974013169	WITHOUT_CLASSIFICATION	1.7902598683033384E-5	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999935128663986	WITHOUT_CLASSIFICATION	6.487133601389043E-6	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999881172175462	WITHOUT_CLASSIFICATION	1.188278245384165E-5	DOCUMENTATION
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9993345376270489	WITHOUT_CLASSIFICATION	6.654623729509918E-4	DOCUMENTATION
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9996842502439274	WITHOUT_CLASSIFICATION	3.1574975607266947E-4	DOCUMENTATION
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999829385795226	WITHOUT_CLASSIFICATION	1.706142047744572E-5	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999983096607907	WITHOUT_CLASSIFICATION	1.6903392092804714E-6	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999848529093912	WITHOUT_CLASSIFICATION	1.5147090608897807E-5	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9999889292136889	WITHOUT_CLASSIFICATION	1.1070786311181572E-5	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.9999867799744049	WITHOUT_CLASSIFICATION	1.3220025595018027E-5	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999960251932951	WITHOUT_CLASSIFICATION	3.974806704873609E-6	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999987677682359	WITHOUT_CLASSIFICATION	1.2322317641245904E-6	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999987767194338	WITHOUT_CLASSIFICATION	1.2232805662483628E-6	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999973016888508	WITHOUT_CLASSIFICATION	2.6983111492782217E-6	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9998360910117082	WITHOUT_CLASSIFICATION	1.6390898829181158E-4	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9995228157504629	WITHOUT_CLASSIFICATION	4.7718424953721263E-4	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999986454333778	WITHOUT_CLASSIFICATION	1.3545666222528607E-6	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999881172175462	WITHOUT_CLASSIFICATION	1.188278245384165E-5	DOCUMENTATION
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9996829094872155	WITHOUT_CLASSIFICATION	3.17090512784582E-4	DOCUMENTATION
//do replacements	WITHOUT_CLASSIFICATION	0.9996852570743355	WITHOUT_CLASSIFICATION	3.1474292566446057E-4	DOCUMENTATION
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9994331538567875	WITHOUT_CLASSIFICATION	5.668461432124301E-4	DOCUMENTATION
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999736337192787	WITHOUT_CLASSIFICATION	2.636628072131549E-5	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680853990527	WITHOUT_CLASSIFICATION	3.1914600947346715E-5	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.99967813078957	WITHOUT_CLASSIFICATION	3.2186921042992106E-4	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.9998723764755272	WITHOUT_CLASSIFICATION	1.2762352447278383E-4	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999817770539156	WITHOUT_CLASSIFICATION	1.8222946084464605E-5	DOCUMENTATION
//sql = update;	WITHOUT_CLASSIFICATION	0.9998723034260736	WITHOUT_CLASSIFICATION	1.276965739263458E-4	DOCUMENTATION
//hilo config	WITHOUT_CLASSIFICATION	0.9996810702585014	WITHOUT_CLASSIFICATION	3.1892974149862663E-4	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999528226252684	WITHOUT_CLASSIFICATION	4.717737473171199E-5	DOCUMENTATION
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999975212305215	WITHOUT_CLASSIFICATION	2.478769478557836E-6	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999833255466795	WITHOUT_CLASSIFICATION	1.667445332056702E-5	DOCUMENTATION
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9993602696501582	WITHOUT_CLASSIFICATION	6.397303498416591E-4	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999188846374498	WITHOUT_CLASSIFICATION	8.11153625502227E-5	DOCUMENTATION
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999491012562347	WITHOUT_CLASSIFICATION	5.089874376522766E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9997742783810514	WITHOUT_CLASSIFICATION	2.2572161894858037E-4	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999528226252684	WITHOUT_CLASSIFICATION	4.717737473171199E-5	DOCUMENTATION
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999790839500222	WITHOUT_CLASSIFICATION	2.09160499778109E-5	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.999997887886911	WITHOUT_CLASSIFICATION	2.112113088938407E-6	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999821870315776	WITHOUT_CLASSIFICATION	1.78129684223632E-5	DOCUMENTATION
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999972128066107	WITHOUT_CLASSIFICATION	2.787193389336707E-6	DOCUMENTATION
// the default...	WITHOUT_CLASSIFICATION	0.9999919770030785	WITHOUT_CLASSIFICATION	8.022996921513506E-6	DOCUMENTATION
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999999175558579	WITHOUT_CLASSIFICATION	8.244414213581427E-8	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999188846374498	WITHOUT_CLASSIFICATION	8.11153625502227E-5	DOCUMENTATION
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999954776376186	WITHOUT_CLASSIFICATION	4.522362381349632E-6	DOCUMENTATION
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999907972981323	WITHOUT_CLASSIFICATION	9.202701867697027E-5	DOCUMENTATION
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999700652903393	WITHOUT_CLASSIFICATION	2.993470966067359E-5	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999714432534982	WITHOUT_CLASSIFICATION	2.855674650181338E-5	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999714432534982	WITHOUT_CLASSIFICATION	2.855674650181338E-5	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999714432534982	WITHOUT_CLASSIFICATION	2.855674650181338E-5	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999926194462926	WITHOUT_CLASSIFICATION	7.380553707378515E-6	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999926194462926	WITHOUT_CLASSIFICATION	7.380553707378515E-6	DOCUMENTATION
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999022122962731	WITHOUT_CLASSIFICATION	9.778770372701128E-5	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999892699090702	WITHOUT_CLASSIFICATION	1.0730090929768193E-5	DOCUMENTATION
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999816997182656	WITHOUT_CLASSIFICATION	1.830028173442544E-5	DOCUMENTATION
// scroll backward	WITHOUT_CLASSIFICATION	0.9999816888931512	WITHOUT_CLASSIFICATION	1.8311106848828804E-5	DOCUMENTATION
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.9999843699506491	WITHOUT_CLASSIFICATION	1.5630049350868347E-5	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999682279678922	WITHOUT_CLASSIFICATION	3.1772032107814854E-5	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999705044592891	WITHOUT_CLASSIFICATION	2.9495540710871007E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680853990527	WITHOUT_CLASSIFICATION	3.1914600947346715E-5	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999997577099182	WITHOUT_CLASSIFICATION	2.422900818596375E-7	DOCUMENTATION
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999751005909273	WITHOUT_CLASSIFICATION	2.4899409072732726E-5	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999682279678922	WITHOUT_CLASSIFICATION	3.1772032107814854E-5	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999705044592891	WITHOUT_CLASSIFICATION	2.9495540710871007E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680853990527	WITHOUT_CLASSIFICATION	3.1914600947346715E-5	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.999984298081102	WITHOUT_CLASSIFICATION	1.570191889805401E-5	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999529548178206	WITHOUT_CLASSIFICATION	4.7045182179273445E-5	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999766114109456	WITHOUT_CLASSIFICATION	2.3388589054302755E-5	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9999998656675592	WITHOUT_CLASSIFICATION	1.3433244083673938E-7	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9996200190122083	WITHOUT_CLASSIFICATION	3.79980987791693E-4	DOCUMENTATION
//checking for named queries	WITHOUT_CLASSIFICATION	0.9995602552774517	WITHOUT_CLASSIFICATION	4.397447225482816E-4	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9984180081740476	WITHOUT_CLASSIFICATION	0.0015819918259524102	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999720406754716	WITHOUT_CLASSIFICATION	2.7959324528363063E-5	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999793192402643	WITHOUT_CLASSIFICATION	2.06807597357195E-5	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.999992211680363	WITHOUT_CLASSIFICATION	7.788319637038567E-6	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9997974769583046	WITHOUT_CLASSIFICATION	2.0252304169552694E-4	DOCUMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999906061975943	WITHOUT_CLASSIFICATION	9.393802405789948E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999931617577611	WITHOUT_CLASSIFICATION	6.838242238905278E-6	DOCUMENTATION
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999109455261936	WITHOUT_CLASSIFICATION	8.905447380640319E-5	DOCUMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9987924555874461	WITHOUT_CLASSIFICATION	0.0012075444125538572	DOCUMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999702755702646	WITHOUT_CLASSIFICATION	2.972442973540668E-5	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999599503757041	WITHOUT_CLASSIFICATION	4.0049624295911986E-5	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999119342789061	WITHOUT_CLASSIFICATION	8.806572109390929E-5	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.999992143460245	WITHOUT_CLASSIFICATION	7.856539754948645E-6	DOCUMENTATION
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9970109288494646	WITHOUT_CLASSIFICATION	0.0029890711505353583	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999944992642577	WITHOUT_CLASSIFICATION	5.500735742347736E-6	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.999998524303721	WITHOUT_CLASSIFICATION	1.4756962789830334E-6	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9993922854781245	WITHOUT_CLASSIFICATION	6.077145218755031E-4	DOCUMENTATION
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999696723127468	WITHOUT_CLASSIFICATION	3.0327687253163988E-5	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9996669426253535	WITHOUT_CLASSIFICATION	3.3305737464650245E-4	DOCUMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999968314874846	WITHOUT_CLASSIFICATION	3.168512515390619E-5	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999685136957139	WITHOUT_CLASSIFICATION	3.148630428612294E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9994738421732268	WITHOUT_CLASSIFICATION	5.26157826773188E-4	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9994738421732268	WITHOUT_CLASSIFICATION	5.26157826773188E-4	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999980289533579	WITHOUT_CLASSIFICATION	1.9710466421366983E-6	DOCUMENTATION
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999998540509739	WITHOUT_CLASSIFICATION	1.4594902612679487E-7	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.999987567402519	WITHOUT_CLASSIFICATION	1.243259748087793E-5	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9994414137523052	WITHOUT_CLASSIFICATION	5.585862476947521E-4	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999416932121231	WITHOUT_CLASSIFICATION	5.830678787690655E-5	DOCUMENTATION
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9997453617480077	WITHOUT_CLASSIFICATION	2.5463825199232106E-4	DOCUMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9984633315696173	WITHOUT_CLASSIFICATION	0.0015366684303827255	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999955122964976	WITHOUT_CLASSIFICATION	4.487703502349394E-6	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999873357624296	WITHOUT_CLASSIFICATION	1.2664237570396679E-5	DOCUMENTATION
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999692361492261	WITHOUT_CLASSIFICATION	3.076385077391445E-5	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999692361492261	WITHOUT_CLASSIFICATION	3.076385077391445E-5	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999692361492261	WITHOUT_CLASSIFICATION	3.076385077391445E-5	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999692361492261	WITHOUT_CLASSIFICATION	3.076385077391445E-5	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999692361492261	WITHOUT_CLASSIFICATION	3.076385077391445E-5	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999692361492261	WITHOUT_CLASSIFICATION	3.076385077391445E-5	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999692361492261	WITHOUT_CLASSIFICATION	3.076385077391445E-5	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999692361492261	WITHOUT_CLASSIFICATION	3.076385077391445E-5	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999692361492261	WITHOUT_CLASSIFICATION	3.076385077391445E-5	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999692361492261	WITHOUT_CLASSIFICATION	3.076385077391445E-5	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999692361492261	WITHOUT_CLASSIFICATION	3.076385077391445E-5	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999971130844855	WITHOUT_CLASSIFICATION	2.8869155145167917E-6	DOCUMENTATION
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.999930048442591	WITHOUT_CLASSIFICATION	6.995155740894819E-5	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999401778075886	WITHOUT_CLASSIFICATION	5.98221924114627E-5	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999513369073192	WITHOUT_CLASSIFICATION	4.866309268080421E-5	DOCUMENTATION
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999880945433406	WITHOUT_CLASSIFICATION	1.1905456659491428E-5	DOCUMENTATION
// not for internal use:	WITHOUT_CLASSIFICATION	0.9999843669698046	WITHOUT_CLASSIFICATION	1.5633030195349582E-5	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999100459166387	WITHOUT_CLASSIFICATION	8.995408336133819E-5	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9999961100025526	WITHOUT_CLASSIFICATION	3.889997447369879E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999401778075886	WITHOUT_CLASSIFICATION	5.98221924114627E-5	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999401778075886	WITHOUT_CLASSIFICATION	5.98221924114627E-5	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9995705570791383	WITHOUT_CLASSIFICATION	4.2944292086168263E-4	DOCUMENTATION
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999975887085417	WITHOUT_CLASSIFICATION	2.411291458265751E-6	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999995965689129	WITHOUT_CLASSIFICATION	4.034310870860834E-7	DOCUMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999936985436583	WITHOUT_CLASSIFICATION	6.301456341676972E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999152856181995	WITHOUT_CLASSIFICATION	8.471438180048809E-5	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999599503757041	WITHOUT_CLASSIFICATION	4.0049624295911986E-5	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9996414327640835	WITHOUT_CLASSIFICATION	3.5856723591654776E-4	DOCUMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999878190458693	WITHOUT_CLASSIFICATION	1.2180954130626744E-5	DOCUMENTATION
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999727624121838	WITHOUT_CLASSIFICATION	2.7237587816180358E-5	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999755309119213	WITHOUT_CLASSIFICATION	2.4469088078679698E-5	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999988031768666	WITHOUT_CLASSIFICATION	1.1968231333672632E-6	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999974760358394	WITHOUT_CLASSIFICATION	2.52396416060003E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999848655094639	WITHOUT_CLASSIFICATION	1.5134490536129709E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999848655094639	WITHOUT_CLASSIFICATION	1.5134490536129709E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999848655094639	WITHOUT_CLASSIFICATION	1.5134490536129709E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999848655094639	WITHOUT_CLASSIFICATION	1.5134490536129709E-5	DOCUMENTATION
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680853990527	WITHOUT_CLASSIFICATION	3.1914600947346715E-5	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999691077463895	WITHOUT_CLASSIFICATION	3.0892253610493075E-5	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9989139893267514	WITHOUT_CLASSIFICATION	0.0010860106732487472	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680853990527	WITHOUT_CLASSIFICATION	3.1914600947346715E-5	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.99997874143449	WITHOUT_CLASSIFICATION	2.1258565510004373E-5	DOCUMENTATION
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9999753238766155	WITHOUT_CLASSIFICATION	2.4676123384492736E-5	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681303470009	WITHOUT_CLASSIFICATION	3.186965299898435E-5	DOCUMENTATION
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999737888261545	WITHOUT_CLASSIFICATION	2.621117384548368E-5	DOCUMENTATION
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9999515464815052	WITHOUT_CLASSIFICATION	4.8453518494866906E-5	DOCUMENTATION
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999919160805957	WITHOUT_CLASSIFICATION	8.083919404266243E-6	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9995456877832963	WITHOUT_CLASSIFICATION	4.543122167036928E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999694378286859	WITHOUT_CLASSIFICATION	3.056217131416605E-5	DOCUMENTATION
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9998811495593694	WITHOUT_CLASSIFICATION	1.1885044063066533E-4	DOCUMENTATION
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999724135950014	WITHOUT_CLASSIFICATION	2.7586404998624372E-5	DOCUMENTATION
//no big deal	WITHOUT_CLASSIFICATION	0.9997018981885278	WITHOUT_CLASSIFICATION	2.9810181147224443E-4	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999722948327741	WITHOUT_CLASSIFICATION	2.770516722604208E-5	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999722948327741	WITHOUT_CLASSIFICATION	2.770516722604208E-5	DOCUMENTATION
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.999940079296233	WITHOUT_CLASSIFICATION	5.992070376696766E-5	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9998508400388122	WITHOUT_CLASSIFICATION	1.4915996118777976E-4	DOCUMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9996777938120992	WITHOUT_CLASSIFICATION	3.222061879007952E-4	DOCUMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681115383103	WITHOUT_CLASSIFICATION	3.1888461689575944E-5	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999681115383103	WITHOUT_CLASSIFICATION	3.1888461689575944E-5	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.9999635255168274	WITHOUT_CLASSIFICATION	3.647448317252281E-5	DOCUMENTATION
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999714432534982	WITHOUT_CLASSIFICATION	2.855674650181338E-5	DOCUMENTATION
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9999919183503794	WITHOUT_CLASSIFICATION	8.081649620596624E-6	DOCUMENTATION
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999767614031075	WITHOUT_CLASSIFICATION	2.323859689243362E-5	DOCUMENTATION
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9999911338429375	WITHOUT_CLASSIFICATION	8.866157062560199E-6	DOCUMENTATION
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.999962739425491	WITHOUT_CLASSIFICATION	3.726057450907815E-5	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680721300055	WITHOUT_CLASSIFICATION	3.19278699945762E-5	DOCUMENTATION
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999607468955919	WITHOUT_CLASSIFICATION	3.925310440811066E-5	DOCUMENTATION
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999735044855277	WITHOUT_CLASSIFICATION	2.6495514472192607E-5	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9999883278891245	WITHOUT_CLASSIFICATION	1.1672110875607787E-5	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999782603321613	WITHOUT_CLASSIFICATION	2.173966783874694E-5	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.999989479069661	WITHOUT_CLASSIFICATION	1.0520930338955108E-5	DOCUMENTATION
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999901996456049	WITHOUT_CLASSIFICATION	9.800354395125953E-6	DOCUMENTATION
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.999994022190801	WITHOUT_CLASSIFICATION	5.977809199006559E-6	DOCUMENTATION
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.999992925079036	WITHOUT_CLASSIFICATION	7.074920963954372E-6	DOCUMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.999911578390737	WITHOUT_CLASSIFICATION	8.842160926308492E-5	DOCUMENTATION
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9998678580024082	WITHOUT_CLASSIFICATION	1.321419975917866E-4	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999901015787466	WITHOUT_CLASSIFICATION	9.898421253432765E-6	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999940512678513	WITHOUT_CLASSIFICATION	5.948732148747589E-6	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9999860258154649	WITHOUT_CLASSIFICATION	1.3974184534962201E-5	DOCUMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999820781561243	WITHOUT_CLASSIFICATION	1.7921843875793886E-5	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9995444035568117	WITHOUT_CLASSIFICATION	4.555964431882086E-4	DOCUMENTATION
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999926925937036	WITHOUT_CLASSIFICATION	7.307406296312926E-6	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9998981577821444	WITHOUT_CLASSIFICATION	1.0184221785557912E-4	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999963570536187	WITHOUT_CLASSIFICATION	3.64294638130629E-6	DOCUMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.999885074666666	WITHOUT_CLASSIFICATION	1.1492533333399386E-4	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9972090903249377	WITHOUT_CLASSIFICATION	0.002790909675062298	DOCUMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9999736000200538	WITHOUT_CLASSIFICATION	2.6399979946205307E-5	DOCUMENTATION
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9995109640951434	WITHOUT_CLASSIFICATION	4.890359048565753E-4	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9965800803187855	WITHOUT_CLASSIFICATION	0.0034199196812145375	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999998659158871	WITHOUT_CLASSIFICATION	1.3408411297770954E-7	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.9999735211427462	WITHOUT_CLASSIFICATION	2.6478857253745986E-5	DOCUMENTATION
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9997479381274752	WITHOUT_CLASSIFICATION	2.520618725247729E-4	DOCUMENTATION
//handle empty collections	WITHOUT_CLASSIFICATION	0.9995918942944458	WITHOUT_CLASSIFICATION	4.081057055541932E-4	DOCUMENTATION
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999994515284244	WITHOUT_CLASSIFICATION	5.484715756127651E-7	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9999818597707637	WITHOUT_CLASSIFICATION	1.814022923632928E-5	DOCUMENTATION
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9999996724849838	WITHOUT_CLASSIFICATION	3.275150162823846E-7	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999962242747228	WITHOUT_CLASSIFICATION	3.7757252772383002E-6	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9997110693954359	WITHOUT_CLASSIFICATION	2.889306045641046E-4	DOCUMENTATION
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.999406169435555	WITHOUT_CLASSIFICATION	5.938305644449895E-4	DOCUMENTATION
//use the id passed in	WITHOUT_CLASSIFICATION	0.9994979471692065	WITHOUT_CLASSIFICATION	5.020528307934852E-4	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9997616363909874	WITHOUT_CLASSIFICATION	2.3836360901252352E-4	DOCUMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999779741172614	WITHOUT_CLASSIFICATION	2.2025882738649934E-5	DOCUMENTATION
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9998695427639053	WITHOUT_CLASSIFICATION	1.3045723609480985E-4	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9996447945322712	WITHOUT_CLASSIFICATION	3.5520546772875713E-4	DOCUMENTATION
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9995850672368274	WITHOUT_CLASSIFICATION	4.1493276317262857E-4	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9999846569920878	WITHOUT_CLASSIFICATION	1.5343007912235217E-5	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9998060602736587	WITHOUT_CLASSIFICATION	1.9393972634123327E-4	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9989360567791158	WITHOUT_CLASSIFICATION	0.0010639432208841796	DOCUMENTATION
// look for a proxy	WITHOUT_CLASSIFICATION	0.9999965691018805	WITHOUT_CLASSIFICATION	3.4308981193835155E-6	DOCUMENTATION
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9991032058603062	WITHOUT_CLASSIFICATION	8.967941396938412E-4	DOCUMENTATION
//its the given optional object	WITHOUT_CLASSIFICATION	0.9996245947153116	WITHOUT_CLASSIFICATION	3.7540528468835334E-4	DOCUMENTATION
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999970059576478	WITHOUT_CLASSIFICATION	2.994042352157939E-6	DOCUMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9997524980819592	WITHOUT_CLASSIFICATION	2.4750191804077883E-4	DOCUMENTATION
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999963244434561	WITHOUT_CLASSIFICATION	3.6755565439399436E-6	DOCUMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999740636877218	WITHOUT_CLASSIFICATION	2.5936312278146688E-5	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999669312504	WITHOUT_CLASSIFICATION	3.306874954695472E-8	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9996321727606691	WITHOUT_CLASSIFICATION	3.6782723933093174E-4	DOCUMENTATION
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999872809908339	WITHOUT_CLASSIFICATION	1.271900916604463E-5	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9999782462811918	WITHOUT_CLASSIFICATION	2.1753718808225314E-5	DOCUMENTATION
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999994035432199	WITHOUT_CLASSIFICATION	5.964567801307414E-7	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9994414137523052	WITHOUT_CLASSIFICATION	5.585862476947521E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9990203956740641	WITHOUT_CLASSIFICATION	9.796043259360002E-4	DOCUMENTATION
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9999428724378905	WITHOUT_CLASSIFICATION	5.7127562109582056E-5	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9999864081566695	WITHOUT_CLASSIFICATION	1.3591843330445442E-5	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9982626161359833	WITHOUT_CLASSIFICATION	0.001737383864016707	DOCUMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999884790039835	WITHOUT_CLASSIFICATION	1.1520996016481685E-5	DOCUMENTATION
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9999625486621623	WITHOUT_CLASSIFICATION	3.7451337837793274E-5	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999974638881047	WITHOUT_CLASSIFICATION	2.5361118952454467E-6	DOCUMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999997734179528	WITHOUT_CLASSIFICATION	2.26582047323904E-7	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9997490440024095	WITHOUT_CLASSIFICATION	2.5095599759046377E-4	DOCUMENTATION
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999997379486363	WITHOUT_CLASSIFICATION	2.620513637172137E-7	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9998081650044397	WITHOUT_CLASSIFICATION	1.9183499556025264E-4	DOCUMENTATION
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9998911403990984	WITHOUT_CLASSIFICATION	1.0885960090157304E-4	DOCUMENTATION
//a composite key	WITHOUT_CLASSIFICATION	0.9996699014903373	WITHOUT_CLASSIFICATION	3.300985096626407E-4	DOCUMENTATION
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999988497251181	WITHOUT_CLASSIFICATION	1.150274881972441E-6	DOCUMENTATION
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999843036259942	WITHOUT_CLASSIFICATION	1.5696374005673233E-5	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.9999701766624656	WITHOUT_CLASSIFICATION	2.9823337534352602E-5	DOCUMENTATION
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9994468861741013	WITHOUT_CLASSIFICATION	5.531138258988243E-4	DOCUMENTATION
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9999790627169969	WITHOUT_CLASSIFICATION	2.0937283003066693E-5	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9999998525189345	WITHOUT_CLASSIFICATION	1.4748106541357394E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9999855227904608	WITHOUT_CLASSIFICATION	1.4477209539109146E-5	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999625739362507	WITHOUT_CLASSIFICATION	3.742606374933476E-5	DOCUMENTATION
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999262453505137	WITHOUT_CLASSIFICATION	7.375464948636802E-5	DOCUMENTATION
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9998856937497568	WITHOUT_CLASSIFICATION	1.1430625024314457E-4	DOCUMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9997994524740869	WITHOUT_CLASSIFICATION	2.0054752591311842E-4	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999179192686459	WITHOUT_CLASSIFICATION	8.208073135405594E-5	DOCUMENTATION
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9995422570783143	WITHOUT_CLASSIFICATION	4.5774292168574543E-4	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9996136571698031	WITHOUT_CLASSIFICATION	3.863428301968985E-4	DOCUMENTATION
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999464402109799	WITHOUT_CLASSIFICATION	5.3559789020082804E-5	DOCUMENTATION
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999995571481859	WITHOUT_CLASSIFICATION	4.4285181417327154E-7	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.999994676431046	WITHOUT_CLASSIFICATION	5.323568953987983E-6	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.999987341134669	WITHOUT_CLASSIFICATION	1.2658865330875607E-5	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9999721073234378	WITHOUT_CLASSIFICATION	2.789267656219204E-5	DOCUMENTATION
//the criteria instance	WITHOUT_CLASSIFICATION	0.9996036754654336	WITHOUT_CLASSIFICATION	3.9632453456639775E-4	DOCUMENTATION
// the entity name	WITHOUT_CLASSIFICATION	0.9999939195932744	WITHOUT_CLASSIFICATION	6.080406725494748E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9994021366067225	WITHOUT_CLASSIFICATION	5.97863393277615E-4	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9994021366067225	WITHOUT_CLASSIFICATION	5.97863393277615E-4	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999621002978822	WITHOUT_CLASSIFICATION	3.78997021178385E-5	DOCUMENTATION
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9995724378657513	WITHOUT_CLASSIFICATION	4.275621342486253E-4	DOCUMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999680748129721	WITHOUT_CLASSIFICATION	3.192518702790201E-5	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999481592929681	WITHOUT_CLASSIFICATION	5.184070703189054E-5	DOCUMENTATION
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999226937900308	WITHOUT_CLASSIFICATION	7.730620996912925E-5	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999790930467692	WITHOUT_CLASSIFICATION	2.0906953230812866E-5	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999445914834239	WITHOUT_CLASSIFICATION	5.5408516576226634E-5	DOCUMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9999942834202895	WITHOUT_CLASSIFICATION	5.716579710511976E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9998873017716148	WITHOUT_CLASSIFICATION	1.1269822838522382E-4	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999962523620676	WITHOUT_CLASSIFICATION	3.7476379325478464E-6	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999964471224517	WITHOUT_CLASSIFICATION	3.552877548266915E-6	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9999855991441683	WITHOUT_CLASSIFICATION	1.4400855831760911E-5	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.999971526932649	WITHOUT_CLASSIFICATION	2.8473067351061963E-5	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999883476882824	WITHOUT_CLASSIFICATION	1.1652311717568576E-5	DOCUMENTATION
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999977647793071	WITHOUT_CLASSIFICATION	2.235220692932319E-6	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9998440075275707	WITHOUT_CLASSIFICATION	1.5599247242930242E-4	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9998440075275707	WITHOUT_CLASSIFICATION	1.5599247242930242E-4	DOCUMENTATION
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999982366771628	WITHOUT_CLASSIFICATION	1.7633228371906477E-6	DOCUMENTATION
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999968247662689	WITHOUT_CLASSIFICATION	3.1752337309350353E-6	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999892394184536	WITHOUT_CLASSIFICATION	1.0760581546390823E-5	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999860615709671	WITHOUT_CLASSIFICATION	1.3938429032918952E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999895791546501	WITHOUT_CLASSIFICATION	1.0420845349894416E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999777213753797	WITHOUT_CLASSIFICATION	2.227862462034046E-5	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999777213753797	WITHOUT_CLASSIFICATION	2.227862462034046E-5	DOCUMENTATION
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999826795228433	WITHOUT_CLASSIFICATION	1.7320477156844954E-5	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999998694699576	WITHOUT_CLASSIFICATION	1.3053004239599064E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999709327798926	WITHOUT_CLASSIFICATION	2.9067220107439773E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999998807843224	WITHOUT_CLASSIFICATION	1.1921567753995372E-7	DOCUMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9999727397862743	WITHOUT_CLASSIFICATION	2.726021372565646E-5	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999955633025678	WITHOUT_CLASSIFICATION	4.436697432157866E-6	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999883963366919	WITHOUT_CLASSIFICATION	1.1603663308210245E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999942145243937	WITHOUT_CLASSIFICATION	5.785475606239224E-6	DOCUMENTATION
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.9999354397504183	WITHOUT_CLASSIFICATION	6.456024958172855E-5	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999997535409278	WITHOUT_CLASSIFICATION	2.4645907219154016E-7	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999953542577295	WITHOUT_CLASSIFICATION	4.645742270554359E-6	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999979780734966	WITHOUT_CLASSIFICATION	2.0219265034990707E-6	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.9999953977238869	WITHOUT_CLASSIFICATION	4.602276113189846E-6	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9995280736221895	WITHOUT_CLASSIFICATION	4.7192637781051996E-4	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9998635670718024	WITHOUT_CLASSIFICATION	1.3643292819760384E-4	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9997785555875693	WITHOUT_CLASSIFICATION	2.214444124306765E-4	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9997034446740587	WITHOUT_CLASSIFICATION	2.965553259413653E-4	DOCUMENTATION
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.99993859953783	WITHOUT_CLASSIFICATION	6.140046216993092E-5	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999768525829046	WITHOUT_CLASSIFICATION	2.3147417095390067E-5	DOCUMENTATION
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999741263992233	WITHOUT_CLASSIFICATION	2.5873600776640636E-5	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999947428290369	WITHOUT_CLASSIFICATION	5.257170963150111E-6	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999080597662824	WITHOUT_CLASSIFICATION	9.194023371761861E-5	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9999813495907599	WITHOUT_CLASSIFICATION	1.8650409240039367E-5	DOCUMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999750971381157	WITHOUT_CLASSIFICATION	2.490286188428606E-5	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9999803888704175	WITHOUT_CLASSIFICATION	1.9611129582560413E-5	DOCUMENTATION
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9999982421313528	WITHOUT_CLASSIFICATION	1.7578686471129883E-6	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9999997623196384	WITHOUT_CLASSIFICATION	2.3768036168510728E-7	DOCUMENTATION
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9999979680526213	WITHOUT_CLASSIFICATION	2.0319473786825655E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999962574472446	WITHOUT_CLASSIFICATION	3.742552755311731E-6	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.9987640127588636	WITHOUT_CLASSIFICATION	0.001235987241136369	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9996780268378249	WITHOUT_CLASSIFICATION	3.219731621750547E-4	DOCUMENTATION
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9999926346767697	WITHOUT_CLASSIFICATION	7.365323230346772E-6	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9989648715381713	WITHOUT_CLASSIFICATION	0.0010351284618287243	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9995934304428195	WITHOUT_CLASSIFICATION	4.065695571804667E-4	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9999247619811469	WITHOUT_CLASSIFICATION	7.523801885313448E-5	DOCUMENTATION
//may be final	WITHOUT_CLASSIFICATION	0.9999566164602598	WITHOUT_CLASSIFICATION	4.3383539740091015E-5	DOCUMENTATION
// may be final	WITHOUT_CLASSIFICATION	0.9999984227077946	WITHOUT_CLASSIFICATION	1.5772922054002024E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999832236372006	WITHOUT_CLASSIFICATION	1.6776362799344888E-5	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9995744460986501	WITHOUT_CLASSIFICATION	4.255539013498754E-4	DOCUMENTATION
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999803041988649	WITHOUT_CLASSIFICATION	1.9695801135180375E-5	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9999827693634726	WITHOUT_CLASSIFICATION	1.7230636527439982E-5	DOCUMENTATION
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9995116352988793	WITHOUT_CLASSIFICATION	4.88364701120656E-4	DOCUMENTATION
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999064619997874	WITHOUT_CLASSIFICATION	9.353800021272208E-5	DOCUMENTATION
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999985710965487	WITHOUT_CLASSIFICATION	1.4289034512493694E-6	DOCUMENTATION
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999933573116533	WITHOUT_CLASSIFICATION	6.6426883466941814E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999832236372006	WITHOUT_CLASSIFICATION	1.6776362799344888E-5	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9995744460986501	WITHOUT_CLASSIFICATION	4.255539013498754E-4	DOCUMENTATION
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999764061363499	WITHOUT_CLASSIFICATION	2.35938636501115E-5	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9997348915429813	WITHOUT_CLASSIFICATION	2.651084570186269E-4	DOCUMENTATION
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999665615371739	WITHOUT_CLASSIFICATION	3.34384628260867E-5	DOCUMENTATION
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9999985284361936	WITHOUT_CLASSIFICATION	1.4715638062768932E-6	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999759369815387	WITHOUT_CLASSIFICATION	2.4063018461303666E-5	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9999776287347084	WITHOUT_CLASSIFICATION	2.237126529159225E-5	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999233712875455	WITHOUT_CLASSIFICATION	7.662871245456541E-5	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9999114154520445	WITHOUT_CLASSIFICATION	8.858454795544587E-5	DOCUMENTATION
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999949073195015	WITHOUT_CLASSIFICATION	5.092680498593577E-6	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.999739100827116	WITHOUT_CLASSIFICATION	2.608991728840475E-4	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999984167000827	WITHOUT_CLASSIFICATION	1.583299917294487E-6	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.999739100827116	WITHOUT_CLASSIFICATION	2.608991728840475E-4	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999989325867917	WITHOUT_CLASSIFICATION	1.0674132082524368E-6	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9986079631675239	WITHOUT_CLASSIFICATION	0.0013920368324761608	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999989325867917	WITHOUT_CLASSIFICATION	1.0674132082524368E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999780788379575	WITHOUT_CLASSIFICATION	2.19211620425003E-5	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.999978563433965	WITHOUT_CLASSIFICATION	2.1436566035014517E-5	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9985559834185418	WITHOUT_CLASSIFICATION	0.0014440165814581859	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9985559834185418	WITHOUT_CLASSIFICATION	0.0014440165814581859	DOCUMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9994797629645082	WITHOUT_CLASSIFICATION	5.202370354917699E-4	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9994808929867303	WITHOUT_CLASSIFICATION	5.19107013269699E-4	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9994797629645082	WITHOUT_CLASSIFICATION	5.202370354917699E-4	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9995157554683047	WITHOUT_CLASSIFICATION	4.8424453169527916E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9995109640951434	WITHOUT_CLASSIFICATION	4.890359048565753E-4	DOCUMENTATION
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9999881185520402	WITHOUT_CLASSIFICATION	1.1881447959858533E-5	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9996849562570923	WITHOUT_CLASSIFICATION	3.1504374290767314E-4	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9994888080256749	WITHOUT_CLASSIFICATION	5.111919743251037E-4	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9999100869345783	WITHOUT_CLASSIFICATION	8.991306542161981E-5	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.9984180081740476	WITHOUT_CLASSIFICATION	0.0015819918259524102	DOCUMENTATION
//SQL statements	WITHOUT_CLASSIFICATION	0.9996781350534791	WITHOUT_CLASSIFICATION	3.2186494652087816E-4	DOCUMENTATION
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9998899251515349	WITHOUT_CLASSIFICATION	1.1007484846519275E-4	DOCUMENTATION
//types	WITHOUT_CLASSIFICATION	0.9984180081740476	WITHOUT_CLASSIFICATION	0.0015819918259524102	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999824583957926	WITHOUT_CLASSIFICATION	1.754160420740015E-5	DOCUMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9996407623728849	WITHOUT_CLASSIFICATION	3.5923762711509444E-4	DOCUMENTATION
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999866960070569	WITHOUT_CLASSIFICATION	1.330399294321105E-5	DOCUMENTATION
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999865802847064	WITHOUT_CLASSIFICATION	1.3419715293496293E-5	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999872884054403	WITHOUT_CLASSIFICATION	1.271159455981664E-5	DOCUMENTATION
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9997785555875693	WITHOUT_CLASSIFICATION	2.214444124306765E-4	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9984180081740476	WITHOUT_CLASSIFICATION	0.0015819918259524102	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999876585437892	WITHOUT_CLASSIFICATION	1.2341456210828325E-5	DOCUMENTATION
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.999972664067532	WITHOUT_CLASSIFICATION	2.7335932467859598E-5	DOCUMENTATION
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999863519892973	WITHOUT_CLASSIFICATION	1.3648010702671307E-5	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9997785555875693	WITHOUT_CLASSIFICATION	2.214444124306765E-4	DOCUMENTATION
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9998187864060365	WITHOUT_CLASSIFICATION	1.8121359396339204E-4	DOCUMENTATION
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9996797228498284	WITHOUT_CLASSIFICATION	3.2027715017159776E-4	DOCUMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9998875321729118	WITHOUT_CLASSIFICATION	1.124678270881E-4	DOCUMENTATION
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9992962323380287	WITHOUT_CLASSIFICATION	7.037676619713451E-4	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9999725063224352	WITHOUT_CLASSIFICATION	2.749367756475986E-5	DOCUMENTATION
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9999707706132122	WITHOUT_CLASSIFICATION	2.9229386787844806E-5	DOCUMENTATION
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.999968537816838	WITHOUT_CLASSIFICATION	3.1462183161910075E-5	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9999902363406619	WITHOUT_CLASSIFICATION	9.76365933810752E-6	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9996849562570923	WITHOUT_CLASSIFICATION	3.1504374290767314E-4	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999947931039661	WITHOUT_CLASSIFICATION	5.20689603387402E-6	DOCUMENTATION
//needed by arrays	WITHOUT_CLASSIFICATION	0.9998218301338648	WITHOUT_CLASSIFICATION	1.7816986613508815E-4	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9997409059996933	WITHOUT_CLASSIFICATION	2.590940003066721E-4	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9996780238072909	WITHOUT_CLASSIFICATION	3.2197619270921894E-4	DOCUMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999879373746773	WITHOUT_CLASSIFICATION	1.2062625322674222E-5	DOCUMENTATION
//create all the new entries	WITHOUT_CLASSIFICATION	0.9998485717697834	WITHOUT_CLASSIFICATION	1.5142823021661674E-4	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9995157554683047	WITHOUT_CLASSIFICATION	4.8424453169527916E-4	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9995157554683047	WITHOUT_CLASSIFICATION	4.8424453169527916E-4	DOCUMENTATION
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9997543003828322	WITHOUT_CLASSIFICATION	2.4569961716782926E-4	DOCUMENTATION
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9998469323472089	WITHOUT_CLASSIFICATION	1.5306765279114585E-4	DOCUMENTATION
//==elementType ??	WITHOUT_CLASSIFICATION	0.9997206361575155	WITHOUT_CLASSIFICATION	2.7936384248447625E-4	DOCUMENTATION
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9997795023121229	WITHOUT_CLASSIFICATION	2.2049768787707802E-4	DOCUMENTATION
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9997576383222078	WITHOUT_CLASSIFICATION	2.4236167779225827E-4	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999860037443874	WITHOUT_CLASSIFICATION	1.3996255612558048E-5	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999985515312061	WITHOUT_CLASSIFICATION	1.4484687940057677E-6	DOCUMENTATION
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999843752855917	WITHOUT_CLASSIFICATION	1.5624714408276682E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9997675036764894	WITHOUT_CLASSIFICATION	2.3249632351067293E-4	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999813088396619	WITHOUT_CLASSIFICATION	1.86911603380952E-5	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9996407623728849	WITHOUT_CLASSIFICATION	3.5923762711509444E-4	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9997083225865175	WITHOUT_CLASSIFICATION	2.916774134824652E-4	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999813088396619	WITHOUT_CLASSIFICATION	1.86911603380952E-5	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.999992053626243	WITHOUT_CLASSIFICATION	7.946373756971066E-6	DOCUMENTATION
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9999993998168961	WITHOUT_CLASSIFICATION	6.001831039905659E-7	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9998258463802819	WITHOUT_CLASSIFICATION	1.7415361971799906E-4	DOCUMENTATION
//TODO: check this....	WITHOUT_CLASSIFICATION	0.9985468294097842	WITHOUT_CLASSIFICATION	0.001453170590215686	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999575865459123	WITHOUT_CLASSIFICATION	4.2413454087795084E-5	DOCUMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999602224141177	WITHOUT_CLASSIFICATION	3.977758588214486E-5	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.999991862540899	WITHOUT_CLASSIFICATION	8.137459101039688E-6	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999978274806937	WITHOUT_CLASSIFICATION	2.1725193063538263E-6	DOCUMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999822003696518	WITHOUT_CLASSIFICATION	1.7799630348218948E-5	DOCUMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.999974957667461	WITHOUT_CLASSIFICATION	2.5042332539045062E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9994414137523052	WITHOUT_CLASSIFICATION	5.585862476947521E-4	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9994414137523052	WITHOUT_CLASSIFICATION	5.585862476947521E-4	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9997760582336651	WITHOUT_CLASSIFICATION	2.2394176633495604E-4	DOCUMENTATION
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9996728967667488	WITHOUT_CLASSIFICATION	3.271032332513427E-4	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999813088396619	WITHOUT_CLASSIFICATION	1.86911603380952E-5	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999575865459123	WITHOUT_CLASSIFICATION	4.2413454087795084E-5	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.999991862540899	WITHOUT_CLASSIFICATION	8.137459101039688E-6	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9997064228624153	WITHOUT_CLASSIFICATION	2.935771375847413E-4	DOCUMENTATION
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999639532302805	WITHOUT_CLASSIFICATION	3.604676971955315E-5	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999760150634673	WITHOUT_CLASSIFICATION	2.398493653270587E-5	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9998968674128462	WITHOUT_CLASSIFICATION	1.031325871538499E-4	DOCUMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999861714725097	WITHOUT_CLASSIFICATION	1.382852749039524E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999815905792845	WITHOUT_CLASSIFICATION	1.8409420715504345E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.999992053626243	WITHOUT_CLASSIFICATION	7.946373756971066E-6	DOCUMENTATION
// JOINS	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.999527214886603	WITHOUT_CLASSIFICATION	4.7278511339704103E-4	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9997098877275284	WITHOUT_CLASSIFICATION	2.901122724715099E-4	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9999058566313325	WITHOUT_CLASSIFICATION	9.414336866748276E-5	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9997382132590695	WITHOUT_CLASSIFICATION	2.6178674093049796E-4	DOCUMENTATION
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9997097448189545	WITHOUT_CLASSIFICATION	2.902551810454773E-4	DOCUMENTATION
//render the SQL	WITHOUT_CLASSIFICATION	0.999872043845393	WITHOUT_CLASSIFICATION	1.27956154607154E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999780788379575	WITHOUT_CLASSIFICATION	2.19211620425003E-5	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999931224308882	WITHOUT_CLASSIFICATION	6.8775691117056685E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999570309116479	WITHOUT_CLASSIFICATION	4.296908835212267E-5	DOCUMENTATION
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9991242089894559	WITHOUT_CLASSIFICATION	8.75791010544237E-4	DOCUMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9983305732522908	WITHOUT_CLASSIFICATION	0.0016694267477091588	DOCUMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9982056394635193	WITHOUT_CLASSIFICATION	0.001794360536480774	DOCUMENTATION
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999929119211288	WITHOUT_CLASSIFICATION	7.088078871120416E-6	DOCUMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.9999834395449079	WITHOUT_CLASSIFICATION	1.6560455092097078E-5	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999294152619519	WITHOUT_CLASSIFICATION	7.058473804809441E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999815905792845	WITHOUT_CLASSIFICATION	1.8409420715504345E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9996779680954447	WITHOUT_CLASSIFICATION	3.2203190455535593E-4	DOCUMENTATION
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.999972056701089	WITHOUT_CLASSIFICATION	2.7943298910912427E-5	DOCUMENTATION
//before add :-)	WITHOUT_CLASSIFICATION	0.9976592685031446	WITHOUT_CLASSIFICATION	0.002340731496855302	DOCUMENTATION
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999926343402077	WITHOUT_CLASSIFICATION	7.365659792235464E-6	DOCUMENTATION
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999458585683667	WITHOUT_CLASSIFICATION	5.414143163330286E-5	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.999518027925158	WITHOUT_CLASSIFICATION	4.8197207484192606E-4	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9999897085187379	WITHOUT_CLASSIFICATION	1.0291481262092215E-5	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9999888609716315	WITHOUT_CLASSIFICATION	1.1139028368476372E-5	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9997235787694041	WITHOUT_CLASSIFICATION	2.7642123059600865E-4	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9995812959554388	WITHOUT_CLASSIFICATION	4.187040445612739E-4	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9998410410471111	WITHOUT_CLASSIFICATION	1.5895895288886E-4	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9996640891128208	WITHOUT_CLASSIFICATION	3.3591088717915504E-4	DOCUMENTATION
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9999451475163061	WITHOUT_CLASSIFICATION	5.485248369392687E-5	DOCUMENTATION
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.999998324956258	WITHOUT_CLASSIFICATION	1.6750437419842243E-6	DOCUMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9998915983748837	WITHOUT_CLASSIFICATION	1.0840162511627382E-4	DOCUMENTATION
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999939221507013	WITHOUT_CLASSIFICATION	6.077849298644703E-6	DOCUMENTATION
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999644639051049	WITHOUT_CLASSIFICATION	3.5536094895100065E-5	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9984697570757273	WITHOUT_CLASSIFICATION	0.0015302429242726465	DOCUMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.999974864137544	WITHOUT_CLASSIFICATION	2.5135862455903575E-5	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999706086927941	WITHOUT_CLASSIFICATION	2.9391307205872805E-5	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999965967177658	WITHOUT_CLASSIFICATION	3.403282234239075E-6	DOCUMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999652567884337	WITHOUT_CLASSIFICATION	3.474321156623546E-5	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.9961482818337588	WITHOUT_CLASSIFICATION	0.0038517181662411307	DOCUMENTATION
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9988239583276859	WITHOUT_CLASSIFICATION	0.001176041672314202	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9995086424186947	WITHOUT_CLASSIFICATION	4.913575813051934E-4	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999910691303945	WITHOUT_CLASSIFICATION	8.930869605506347E-6	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.9995603553284648	WITHOUT_CLASSIFICATION	4.39644671535314E-4	DOCUMENTATION
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999703307833067	WITHOUT_CLASSIFICATION	2.966921669331612E-5	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999970111615094	WITHOUT_CLASSIFICATION	2.988838490646103E-6	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9998079454761599	WITHOUT_CLASSIFICATION	1.9205452384011743E-4	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999977736787788	WITHOUT_CLASSIFICATION	2.2263212210802174E-6	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999986604054331	WITHOUT_CLASSIFICATION	1.3395945669388897E-6	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9998142595457812	WITHOUT_CLASSIFICATION	1.8574045421874152E-4	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.999911324914834	WITHOUT_CLASSIFICATION	8.867508516604947E-5	DOCUMENTATION
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.999998874472136	WITHOUT_CLASSIFICATION	1.1255278639754463E-6	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9998142595457812	WITHOUT_CLASSIFICATION	1.8574045421874152E-4	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999986604054331	WITHOUT_CLASSIFICATION	1.3395945669388897E-6	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.999911324914834	WITHOUT_CLASSIFICATION	8.867508516604947E-5	DOCUMENTATION
// add the primary key	WITHOUT_CLASSIFICATION	0.9999228817096388	WITHOUT_CLASSIFICATION	7.711829036123995E-5	DOCUMENTATION
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999744526597576	WITHOUT_CLASSIFICATION	2.5547340242447143E-5	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999985352099023	WITHOUT_CLASSIFICATION	1.4647900976235339E-6	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9999893319623031	WITHOUT_CLASSIFICATION	1.066803769685469E-5	DOCUMENTATION
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999929664760624	WITHOUT_CLASSIFICATION	7.033523937631548E-6	DOCUMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9994173718106096	WITHOUT_CLASSIFICATION	5.826281893903064E-4	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9989631788962003	WITHOUT_CLASSIFICATION	0.0010368211037996775	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9895479419181543	WITHOUT_CLASSIFICATION	0.010452058081845765	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9999610125695869	WITHOUT_CLASSIFICATION	3.898743041308329E-5	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9999556054789043	WITHOUT_CLASSIFICATION	4.4394521095814755E-5	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999827089236013	WITHOUT_CLASSIFICATION	1.7291076398702148E-5	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9998749817288531	WITHOUT_CLASSIFICATION	1.2501827114683E-4	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999739829777516	WITHOUT_CLASSIFICATION	2.6017022248393752E-5	DOCUMENTATION
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9998133523729197	WITHOUT_CLASSIFICATION	1.8664762708023278E-4	DOCUMENTATION
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999796240421936	WITHOUT_CLASSIFICATION	2.0375957806397082E-5	DOCUMENTATION
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999983431194105	WITHOUT_CLASSIFICATION	1.656880589459924E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999996872723222	WITHOUT_CLASSIFICATION	3.1272767781959804E-7	DOCUMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9998643246416942	WITHOUT_CLASSIFICATION	1.3567535830586694E-4	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.999996925999699	WITHOUT_CLASSIFICATION	3.074000300942783E-6	DOCUMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9998980913080279	WITHOUT_CLASSIFICATION	1.0190869197211981E-4	DOCUMENTATION
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9998124848027301	WITHOUT_CLASSIFICATION	1.875151972699397E-4	DOCUMENTATION
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999568173383528	WITHOUT_CLASSIFICATION	4.318266164718369E-5	DOCUMENTATION
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999930665501074	WITHOUT_CLASSIFICATION	6.933449892542227E-6	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999880030549038	WITHOUT_CLASSIFICATION	1.1996945096315622E-5	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9998979051857894	WITHOUT_CLASSIFICATION	1.0209481421062881E-4	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9998979051857894	WITHOUT_CLASSIFICATION	1.0209481421062881E-4	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999954476125972	WITHOUT_CLASSIFICATION	4.552387402851141E-6	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999954476125972	WITHOUT_CLASSIFICATION	4.552387402851141E-6	DOCUMENTATION
// not supported	WITHOUT_CLASSIFICATION	0.9999924857495044	WITHOUT_CLASSIFICATION	7.51425049558322E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999996872723222	WITHOUT_CLASSIFICATION	3.1272767781959804E-7	DOCUMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9996973107842971	WITHOUT_CLASSIFICATION	3.0268921570284483E-4	DOCUMENTATION
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999894580864879	WITHOUT_CLASSIFICATION	1.0541913512139942E-5	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999091675995285	WITHOUT_CLASSIFICATION	9.083240047151535E-5	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999091675995285	WITHOUT_CLASSIFICATION	9.083240047151535E-5	DOCUMENTATION
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999365298404306	WITHOUT_CLASSIFICATION	6.347015956946673E-5	DOCUMENTATION
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9997558804588704	WITHOUT_CLASSIFICATION	2.4411954112958396E-4	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9999770777545907	WITHOUT_CLASSIFICATION	2.2922245409339817E-5	DOCUMENTATION
//skip the driving table	WITHOUT_CLASSIFICATION	0.9998526194152569	WITHOUT_CLASSIFICATION	1.473805847430386E-4	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9998687007031464	WITHOUT_CLASSIFICATION	1.312992968535595E-4	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999993566764883	WITHOUT_CLASSIFICATION	6.433235117028373E-7	DOCUMENTATION
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9999592012552441	WITHOUT_CLASSIFICATION	4.07987447559035E-5	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9994166067140592	WITHOUT_CLASSIFICATION	5.833932859408741E-4	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9997872836645882	WITHOUT_CLASSIFICATION	2.1271633541171658E-4	DOCUMENTATION
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999973651925725	WITHOUT_CLASSIFICATION	2.6348074275742143E-6	DOCUMENTATION
//now render the select clause	WITHOUT_CLASSIFICATION	0.9998558238165475	WITHOUT_CLASSIFICATION	1.441761834524469E-4	DOCUMENTATION
//now tie it all together	WITHOUT_CLASSIFICATION	0.9997579051929583	WITHOUT_CLASSIFICATION	2.420948070418154E-4	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9995542187285417	WITHOUT_CLASSIFICATION	4.457812714583566E-4	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9997067469314768	WITHOUT_CLASSIFICATION	2.9325306852325797E-4	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9963711480054542	WITHOUT_CLASSIFICATION	0.003628851994545663	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.999962533334846	WITHOUT_CLASSIFICATION	3.746666515406931E-5	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999724655120003	WITHOUT_CLASSIFICATION	2.7534487999686177E-5	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999930081968329	WITHOUT_CLASSIFICATION	6.991803166984408E-6	DOCUMENTATION
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9999901311213284	WITHOUT_CLASSIFICATION	9.868878671480559E-6	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999283418030844	WITHOUT_CLASSIFICATION	7.165819691553689E-5	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999867737388016	WITHOUT_CLASSIFICATION	1.3226261198323619E-5	DOCUMENTATION
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999946419542761	WITHOUT_CLASSIFICATION	5.3580457238941815E-6	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999548251989462	WITHOUT_CLASSIFICATION	4.517480105369883E-5	DOCUMENTATION
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999592039638278	WITHOUT_CLASSIFICATION	4.0796036172219686E-5	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9994416756572638	WITHOUT_CLASSIFICATION	5.58324342736255E-4	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.999974078860192	WITHOUT_CLASSIFICATION	2.5921139808056816E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9995812959554388	WITHOUT_CLASSIFICATION	4.187040445612739E-4	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9998217865668872	WITHOUT_CLASSIFICATION	1.782134331127713E-4	DOCUMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.999998329562791	WITHOUT_CLASSIFICATION	1.6704372090699758E-6	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999684678484569	WITHOUT_CLASSIFICATION	3.15321515429785E-5	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999968065747177	WITHOUT_CLASSIFICATION	3.193425282305443E-5	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.999683263982114	WITHOUT_CLASSIFICATION	3.1673601788599225E-4	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.999683263982114	WITHOUT_CLASSIFICATION	3.1673601788599225E-4	DOCUMENTATION
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999958396115315	WITHOUT_CLASSIFICATION	4.16038846852661E-6	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999826908779912	WITHOUT_CLASSIFICATION	1.7309122008895686E-5	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999821204459901	WITHOUT_CLASSIFICATION	1.7879554009905855E-5	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999821204459901	WITHOUT_CLASSIFICATION	1.7879554009905855E-5	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999930982535706	WITHOUT_CLASSIFICATION	6.90174642944104E-6	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9997788361793125	WITHOUT_CLASSIFICATION	2.2116382068739616E-4	DOCUMENTATION
// do not do anything	WITHOUT_CLASSIFICATION	0.9999067578174823	WITHOUT_CLASSIFICATION	9.32421825176635E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999152856181995	WITHOUT_CLASSIFICATION	8.471438180048809E-5	DOCUMENTATION
//cant instantiate	WITHOUT_CLASSIFICATION	0.9996842502439274	WITHOUT_CLASSIFICATION	3.1574975607266947E-4	DOCUMENTATION
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999859686361212	WITHOUT_CLASSIFICATION	1.403136387887165E-5	DOCUMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999785727014583	WITHOUT_CLASSIFICATION	2.142729854162955E-5	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999831802917574	WITHOUT_CLASSIFICATION	1.68197082425904E-5	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999831802917574	WITHOUT_CLASSIFICATION	1.68197082425904E-5	DOCUMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999972004888156	WITHOUT_CLASSIFICATION	2.7995111844345723E-6	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999744105995176	WITHOUT_CLASSIFICATION	2.558940048228171E-5	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999744105995176	WITHOUT_CLASSIFICATION	2.558940048228171E-5	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999841520907904	WITHOUT_CLASSIFICATION	1.584790920960318E-5	DOCUMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999743161174942	WITHOUT_CLASSIFICATION	2.568388250586684E-5	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9984180081740476	WITHOUT_CLASSIFICATION	0.0015819918259524102	DOCUMENTATION
// Get the caller	WITHOUT_CLASSIFICATION	0.9999931287787849	WITHOUT_CLASSIFICATION	6.871221215062384E-6	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999895677287152	WITHOUT_CLASSIFICATION	1.0432271284877764E-5	DOCUMENTATION
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999010468689478	WITHOUT_CLASSIFICATION	9.895313105220083E-5	DOCUMENTATION
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999936404882602	WITHOUT_CLASSIFICATION	6.359511739817077E-6	DOCUMENTATION
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9998096651951712	WITHOUT_CLASSIFICATION	1.903348048288048E-4	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9998549583347927	WITHOUT_CLASSIFICATION	1.4504166520733396E-4	DOCUMENTATION
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9995265647200685	WITHOUT_CLASSIFICATION	4.734352799315398E-4	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999966534580327	WITHOUT_CLASSIFICATION	3.34654196735496E-6	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.9999667215459496	WITHOUT_CLASSIFICATION	3.3278454050398444E-5	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9996820490902988	WITHOUT_CLASSIFICATION	3.1795090970123074E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9996820490902988	WITHOUT_CLASSIFICATION	3.1795090970123074E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9996820490902988	WITHOUT_CLASSIFICATION	3.1795090970123074E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9996820490902988	WITHOUT_CLASSIFICATION	3.1795090970123074E-4	DOCUMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999727416173825	WITHOUT_CLASSIFICATION	2.7258382617570808E-5	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999979840105108	WITHOUT_CLASSIFICATION	2.015989489185593E-6	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9995109640951434	WITHOUT_CLASSIFICATION	4.890359048565753E-4	DOCUMENTATION
//for MySQL	WITHOUT_CLASSIFICATION	0.9996920022887704	WITHOUT_CLASSIFICATION	3.0799771122949263E-4	DOCUMENTATION
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.99984828634137	WITHOUT_CLASSIFICATION	1.5171365862995796E-4	DOCUMENTATION
//null caused some problems	WITHOUT_CLASSIFICATION	0.9981419297833323	WITHOUT_CLASSIFICATION	0.0018580702166677981	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999646592833412	WITHOUT_CLASSIFICATION	3.5340716658876696E-5	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9994798470193785	WITHOUT_CLASSIFICATION	5.201529806214715E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999932450148696	WITHOUT_CLASSIFICATION	6.754985130367642E-6	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9999162654029735	WITHOUT_CLASSIFICATION	8.373459702655379E-5	DOCUMENTATION
// deprecated option...	WITHOUT_CLASSIFICATION	0.9999736256917541	WITHOUT_CLASSIFICATION	2.6374308245862315E-5	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9998685932154816	WITHOUT_CLASSIFICATION	1.3140678451837245E-4	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9998269721846392	WITHOUT_CLASSIFICATION	1.7302781536081063E-4	DOCUMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9998818265090953	WITHOUT_CLASSIFICATION	1.1817349090473381E-4	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999965432082608	WITHOUT_CLASSIFICATION	3.4567917392718305E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9998685932154816	WITHOUT_CLASSIFICATION	1.3140678451837245E-4	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9995655630098716	WITHOUT_CLASSIFICATION	4.3443699012837205E-4	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999915702366479	WITHOUT_CLASSIFICATION	8.429763352148424E-6	DOCUMENTATION
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999833782420837	WITHOUT_CLASSIFICATION	1.662175791626857E-5	DOCUMENTATION
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999988175658795	WITHOUT_CLASSIFICATION	1.1824341205616544E-6	DOCUMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999572904283692	WITHOUT_CLASSIFICATION	4.2709571630746055E-5	DOCUMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9999967219661117	WITHOUT_CLASSIFICATION	3.2780338883203965E-6	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999941696316289	WITHOUT_CLASSIFICATION	5.8303683710330206E-6	DOCUMENTATION
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9998565281352098	WITHOUT_CLASSIFICATION	1.434718647902673E-4	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999482314360535	WITHOUT_CLASSIFICATION	5.1768563946582076E-5	DOCUMENTATION
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999966401422379	WITHOUT_CLASSIFICATION	3.3598577621513543E-6	DOCUMENTATION
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999482314360535	WITHOUT_CLASSIFICATION	5.1768563946582076E-5	DOCUMENTATION
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999823820581101	WITHOUT_CLASSIFICATION	1.761794188986907E-5	DOCUMENTATION
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9999877258041092	WITHOUT_CLASSIFICATION	1.2274195890659869E-5	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.997896491583698	WITHOUT_CLASSIFICATION	0.0021035084163021347	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999877094291055	WITHOUT_CLASSIFICATION	1.2290570894494563E-5	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.9998436560646332	WITHOUT_CLASSIFICATION	1.5634393536669044E-4	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999937955360992	WITHOUT_CLASSIFICATION	6.204463900728884E-6	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999861679308405	WITHOUT_CLASSIFICATION	1.3832069159391334E-5	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999854520550385	WITHOUT_CLASSIFICATION	1.4547944961485705E-5	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999861679308405	WITHOUT_CLASSIFICATION	1.3832069159391334E-5	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999898607868568	WITHOUT_CLASSIFICATION	1.013921314309622E-5	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999990647993005	WITHOUT_CLASSIFICATION	9.352006996104298E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9999706345387619	WITHOUT_CLASSIFICATION	2.9365461238047363E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999860425050091	WITHOUT_CLASSIFICATION	1.3957494990827946E-5	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999937955360992	WITHOUT_CLASSIFICATION	6.204463900728884E-6	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999854520550385	WITHOUT_CLASSIFICATION	1.4547944961485705E-5	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999898607868568	WITHOUT_CLASSIFICATION	1.013921314309622E-5	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.999937201977123	WITHOUT_CLASSIFICATION	6.279802287706887E-5	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9996999658176046	WITHOUT_CLASSIFICATION	3.000341823953524E-4	DOCUMENTATION
//reset the id	WITHOUT_CLASSIFICATION	0.9998645426343855	WITHOUT_CLASSIFICATION	1.3545736561456037E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.9998623462440123	WITHOUT_CLASSIFICATION	1.3765375598773696E-4	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9999962675665998	WITHOUT_CLASSIFICATION	3.732433400155976E-6	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9998138457194842	WITHOUT_CLASSIFICATION	1.861542805159559E-4	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999724655120003	WITHOUT_CLASSIFICATION	2.7534487999686177E-5	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999990647993005	WITHOUT_CLASSIFICATION	9.352006996104298E-7	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.999999281929778	WITHOUT_CLASSIFICATION	7.180702220408867E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9997723819187238	WITHOUT_CLASSIFICATION	2.276180812763004E-4	DOCUMENTATION
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999726106769604	WITHOUT_CLASSIFICATION	2.738932303953727E-5	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999724655120003	WITHOUT_CLASSIFICATION	2.7534487999686177E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9997516244491246	WITHOUT_CLASSIFICATION	2.4837555087546954E-4	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999724655120003	WITHOUT_CLASSIFICATION	2.7534487999686177E-5	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999543118901536	WITHOUT_CLASSIFICATION	4.5688109846381E-5	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999872170150208	WITHOUT_CLASSIFICATION	1.2782984979186866E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9996219487472393	WITHOUT_CLASSIFICATION	3.780512527606938E-4	DOCUMENTATION
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999925602660797	WITHOUT_CLASSIFICATION	7.439733920218045E-6	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999931941514524	WITHOUT_CLASSIFICATION	6.8058485476999086E-6	DOCUMENTATION
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999815846943744	WITHOUT_CLASSIFICATION	1.8415305625589065E-5	DOCUMENTATION
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999883255483916	WITHOUT_CLASSIFICATION	1.1674451608519812E-5	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999261586966126	WITHOUT_CLASSIFICATION	7.384130338742892E-5	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9996318187401187	WITHOUT_CLASSIFICATION	3.68181259881287E-4	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9998385292790725	WITHOUT_CLASSIFICATION	1.614707209274442E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999942451964261	WITHOUT_CLASSIFICATION	5.7548035738869296E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9984180081740476	WITHOUT_CLASSIFICATION	0.0015819918259524102	DOCUMENTATION
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9998385292790725	WITHOUT_CLASSIFICATION	1.614707209274442E-4	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9998725803823655	WITHOUT_CLASSIFICATION	1.2741961763454277E-4	DOCUMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9997019100213996	WITHOUT_CLASSIFICATION	2.9808997860028357E-4	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9995109640951434	WITHOUT_CLASSIFICATION	4.890359048565753E-4	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999979892301453	WITHOUT_CLASSIFICATION	2.0107698548157092E-6	DOCUMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999953552252905	WITHOUT_CLASSIFICATION	4.6447747095349695E-6	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9999998453184029	WITHOUT_CLASSIFICATION	1.5468159700400308E-7	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9998423372508943	WITHOUT_CLASSIFICATION	1.5766274910569816E-4	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999955022683776	WITHOUT_CLASSIFICATION	4.497731622354143E-6	DOCUMENTATION
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999997240926742	WITHOUT_CLASSIFICATION	2.759073258049604E-7	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.9984180081740476	WITHOUT_CLASSIFICATION	0.0015819918259524102	DOCUMENTATION
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9995622473009081	WITHOUT_CLASSIFICATION	4.377526990919282E-4	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9995622473009081	WITHOUT_CLASSIFICATION	4.377526990919282E-4	DOCUMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999595485348043	WITHOUT_CLASSIFICATION	4.0451465195730356E-5	DOCUMENTATION
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999880496136565	WITHOUT_CLASSIFICATION	1.1950386343474854E-5	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9984180081740476	WITHOUT_CLASSIFICATION	0.0015819918259524102	DOCUMENTATION
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9999938207533554	WITHOUT_CLASSIFICATION	6.179246644635157E-6	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9999984260847931	WITHOUT_CLASSIFICATION	1.5739152069061105E-6	DOCUMENTATION
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999974575785067	WITHOUT_CLASSIFICATION	2.5424214933235885E-6	DOCUMENTATION
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9995118745729282	WITHOUT_CLASSIFICATION	4.8812542707167615E-4	DOCUMENTATION
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9999599548611666	WITHOUT_CLASSIFICATION	4.00451388333156E-5	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.992929393040353	WITHOUT_CLASSIFICATION	0.007070606959647053	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.999991114218925	WITHOUT_CLASSIFICATION	8.885781075119348E-6	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9994140748661146	WITHOUT_CLASSIFICATION	5.859251338855093E-4	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9993227544216806	WITHOUT_CLASSIFICATION	6.772455783194245E-4	DOCUMENTATION
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9983985872118585	WITHOUT_CLASSIFICATION	0.0016014127881415106	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999978208395273	WITHOUT_CLASSIFICATION	2.179160472692493E-6	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999985168517712	WITHOUT_CLASSIFICATION	1.4831482288518063E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9995009427618662	WITHOUT_CLASSIFICATION	4.990572381337642E-4	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9998291061155168	WITHOUT_CLASSIFICATION	1.7089388448328233E-4	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9998291061155168	WITHOUT_CLASSIFICATION	1.7089388448328233E-4	DOCUMENTATION
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999989188621303	WITHOUT_CLASSIFICATION	1.0811378696323994E-6	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999261586966126	WITHOUT_CLASSIFICATION	7.384130338742892E-5	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9995538616026761	WITHOUT_CLASSIFICATION	4.4613839732390853E-4	DOCUMENTATION
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9995839743161458	WITHOUT_CLASSIFICATION	4.16025683854203E-4	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999869222630544	WITHOUT_CLASSIFICATION	1.3077736945542615E-5	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.999995180002917	WITHOUT_CLASSIFICATION	4.8199970831241345E-6	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9998207942369892	WITHOUT_CLASSIFICATION	1.792057630107496E-4	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9985737297633718	WITHOUT_CLASSIFICATION	0.0014262702366281703	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9994414137523052	WITHOUT_CLASSIFICATION	5.585862476947521E-4	DOCUMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9999920283336496	WITHOUT_CLASSIFICATION	7.971666350437545E-6	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9999864775607549	WITHOUT_CLASSIFICATION	1.352243924517261E-5	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.999986797952062	WITHOUT_CLASSIFICATION	1.3202047937998267E-5	DOCUMENTATION
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999999505099382	WITHOUT_CLASSIFICATION	4.9490061933256797E-8	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999838010976738	WITHOUT_CLASSIFICATION	1.6198902326246138E-5	DOCUMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999969919534379	WITHOUT_CLASSIFICATION	3.008046562114414E-6	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999999716105289	WITHOUT_CLASSIFICATION	2.8389471101275943E-8	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9995152524574872	WITHOUT_CLASSIFICATION	4.8474754251277765E-4	DOCUMENTATION
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999957285664299	WITHOUT_CLASSIFICATION	4.271433570035309E-6	DOCUMENTATION
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999759377719055	WITHOUT_CLASSIFICATION	2.4062228094433194E-5	DOCUMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9999997359991243	WITHOUT_CLASSIFICATION	2.6400087571874566E-7	DOCUMENTATION
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999977101837559	WITHOUT_CLASSIFICATION	2.289816244010772E-6	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999724983331097	WITHOUT_CLASSIFICATION	2.7501666890263762E-5	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.999971935195494	WITHOUT_CLASSIFICATION	2.8064804505925292E-5	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999990648618168	WITHOUT_CLASSIFICATION	9.351381830753236E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999989011311066	WITHOUT_CLASSIFICATION	1.0988688934324657E-6	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999940115578738	WITHOUT_CLASSIFICATION	5.988442126094456E-6	DOCUMENTATION
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999854249785038	WITHOUT_CLASSIFICATION	1.4575021496243294E-5	DOCUMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9997287504771174	WITHOUT_CLASSIFICATION	2.712495228826032E-4	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.9999480369151531	WITHOUT_CLASSIFICATION	5.196308484680277E-5	DOCUMENTATION
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999933930457493	WITHOUT_CLASSIFICATION	6.606954250793621E-6	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9999202211506549	WITHOUT_CLASSIFICATION	7.977884934507375E-5	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999682279678922	WITHOUT_CLASSIFICATION	3.1772032107814854E-5	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999683464857556	WITHOUT_CLASSIFICATION	3.165351424434139E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999689899183722	WITHOUT_CLASSIFICATION	3.101008162775422E-5	DOCUMENTATION
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999871455776934	WITHOUT_CLASSIFICATION	1.2854422306687808E-5	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999698952209972	WITHOUT_CLASSIFICATION	3.010477900274962E-5	DOCUMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9997296288339698	WITHOUT_CLASSIFICATION	2.70371166030194E-4	DOCUMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999974816539008	WITHOUT_CLASSIFICATION	2.518346099167383E-6	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999905716057773	WITHOUT_CLASSIFICATION	9.42839422270716E-6	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999905716057773	WITHOUT_CLASSIFICATION	9.42839422270716E-6	DOCUMENTATION
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999932648335931	WITHOUT_CLASSIFICATION	6.735166406944972E-6	DOCUMENTATION
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9999966223660007	WITHOUT_CLASSIFICATION	3.3776339992224277E-6	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9986363379778994	WITHOUT_CLASSIFICATION	0.001363662022100689	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9986363379778994	WITHOUT_CLASSIFICATION	0.001363662022100689	DOCUMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999847214352545	WITHOUT_CLASSIFICATION	1.527856474543396E-5	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.999762114785134	WITHOUT_CLASSIFICATION	2.378852148659756E-4	DOCUMENTATION
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.9999989325645247	WITHOUT_CLASSIFICATION	1.0674354753187103E-6	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999998682344546	WITHOUT_CLASSIFICATION	1.317655453626033E-7	DOCUMENTATION
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999731361282118	WITHOUT_CLASSIFICATION	2.686387178823965E-5	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999664500030065	WITHOUT_CLASSIFICATION	3.3549996993493595E-5	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999664500030065	WITHOUT_CLASSIFICATION	3.3549996993493595E-5	DOCUMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9996489099082979	WITHOUT_CLASSIFICATION	3.5109009170213447E-4	DOCUMENTATION
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9995157554683047	WITHOUT_CLASSIFICATION	4.8424453169527916E-4	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999815858741842	WITHOUT_CLASSIFICATION	1.8414125815817342E-5	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999815858741842	WITHOUT_CLASSIFICATION	1.8414125815817342E-5	DOCUMENTATION
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999630865070036	WITHOUT_CLASSIFICATION	3.691349299635808E-5	DOCUMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999943762761023	WITHOUT_CLASSIFICATION	5.6237238977378434E-6	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.999999931268064	WITHOUT_CLASSIFICATION	6.873193601962235E-8	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999327346479782	WITHOUT_CLASSIFICATION	6.726535202185217E-5	DOCUMENTATION
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999987203811268	WITHOUT_CLASSIFICATION	1.2796188732044623E-6	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999816509436099	WITHOUT_CLASSIFICATION	1.8349056390155488E-5	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999820021438471	WITHOUT_CLASSIFICATION	1.79978561528369E-5	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999898350901552	WITHOUT_CLASSIFICATION	1.0164909844822103E-5	DOCUMENTATION
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999902208644004	WITHOUT_CLASSIFICATION	9.779135599613936E-6	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999456018547181	WITHOUT_CLASSIFICATION	5.439814528192628E-5	DOCUMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9995655674589098	WITHOUT_CLASSIFICATION	4.3443254109015977E-4	DOCUMENTATION
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9999992999463551	WITHOUT_CLASSIFICATION	7.000536449329035E-7	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9999207858871803	WITHOUT_CLASSIFICATION	7.921411281973491E-5	DOCUMENTATION
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999840169060809	WITHOUT_CLASSIFICATION	1.598309391922599E-5	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.999981634620906	WITHOUT_CLASSIFICATION	1.8365379094001122E-5	DOCUMENTATION
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999965427814597	WITHOUT_CLASSIFICATION	3.457218540291799E-6	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999959451955255	WITHOUT_CLASSIFICATION	4.054804474524395E-6	DOCUMENTATION
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999979279820823	WITHOUT_CLASSIFICATION	2.0720179175688367E-6	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.99998836946693	WITHOUT_CLASSIFICATION	1.1630533069928484E-5	DOCUMENTATION
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999674996200015	WITHOUT_CLASSIFICATION	3.25003799984622E-5	DOCUMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999860682466948	WITHOUT_CLASSIFICATION	1.3931753305260138E-5	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.99995593991315	WITHOUT_CLASSIFICATION	4.406008684998805E-5	DOCUMENTATION
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9998498624646388	WITHOUT_CLASSIFICATION	1.501375353612851E-4	DOCUMENTATION
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.999522858091354	WITHOUT_CLASSIFICATION	4.7714190864609965E-4	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.9984180081740476	WITHOUT_CLASSIFICATION	0.0015819918259524102	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.9999983180704728	WITHOUT_CLASSIFICATION	1.6819295272206817E-6	DOCUMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999896007098292	WITHOUT_CLASSIFICATION	1.0399290170774991E-5	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9995109640951434	WITHOUT_CLASSIFICATION	4.890359048565753E-4	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999956633551478	WITHOUT_CLASSIFICATION	4.336644852243225E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999931617577611	WITHOUT_CLASSIFICATION	6.838242238905278E-6	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.999992143460245	WITHOUT_CLASSIFICATION	7.856539754948645E-6	DOCUMENTATION
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999783869927478	WITHOUT_CLASSIFICATION	2.161300725222879E-5	DOCUMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999533421565223	WITHOUT_CLASSIFICATION	4.665784347772871E-5	DOCUMENTATION
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9995109640951434	WITHOUT_CLASSIFICATION	4.890359048565753E-4	DOCUMENTATION
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999806758851363	WITHOUT_CLASSIFICATION	1.9324114863684834E-5	DOCUMENTATION
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9995109640951434	WITHOUT_CLASSIFICATION	4.890359048565753E-4	DOCUMENTATION
//readResolveObject	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9994414137523052	WITHOUT_CLASSIFICATION	5.585862476947521E-4	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999748158747744	WITHOUT_CLASSIFICATION	2.5184125225468526E-5	DOCUMENTATION
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.999996000456785	WITHOUT_CLASSIFICATION	3.999543214977712E-6	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999992793955187	WITHOUT_CLASSIFICATION	7.206044813857127E-7	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9999823772188345	WITHOUT_CLASSIFICATION	1.762278116541891E-5	DOCUMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999568440011048	WITHOUT_CLASSIFICATION	4.315599889519948E-5	DOCUMENTATION
// Handle actions	WITHOUT_CLASSIFICATION	0.999982360640085	WITHOUT_CLASSIFICATION	1.7639359914948785E-5	DOCUMENTATION
// Print page	WITHOUT_CLASSIFICATION	0.9999821308559049	WITHOUT_CLASSIFICATION	1.7869144095079206E-5	DOCUMENTATION
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999819622210462	WITHOUT_CLASSIFICATION	1.8037778953851085E-5	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9999887074574472	WITHOUT_CLASSIFICATION	1.1292542552935694E-5	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999974864019328	WITHOUT_CLASSIFICATION	2.51359806717466E-6	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.99999421390949	WITHOUT_CLASSIFICATION	5.7860905101263765E-6	DOCUMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999956689442993	WITHOUT_CLASSIFICATION	4.3310557007685085E-6	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999920826425494	WITHOUT_CLASSIFICATION	7.917357450698998E-6	DOCUMENTATION
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999919833536624	WITHOUT_CLASSIFICATION	8.0166463376065E-6	DOCUMENTATION
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9997949903887816	WITHOUT_CLASSIFICATION	2.0500961121845977E-4	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999991458745825	WITHOUT_CLASSIFICATION	8.541254175735542E-7	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999852878687605	WITHOUT_CLASSIFICATION	1.4712131239567552E-5	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9999497991359576	WITHOUT_CLASSIFICATION	5.020086404245339E-5	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9999761893605381	WITHOUT_CLASSIFICATION	2.3810639461899462E-5	DOCUMENTATION
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999806499002201	WITHOUT_CLASSIFICATION	1.935009977994305E-5	DOCUMENTATION
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999971018583956	WITHOUT_CLASSIFICATION	2.8981416044087438E-6	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999990685292784	WITHOUT_CLASSIFICATION	9.314707216975145E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999975492775648	WITHOUT_CLASSIFICATION	2.4507224351081134E-6	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999975492775648	WITHOUT_CLASSIFICATION	2.4507224351081134E-6	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999994927212255	WITHOUT_CLASSIFICATION	5.072787745184797E-7	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.999993724281838	WITHOUT_CLASSIFICATION	6.275718161931647E-6	DOCUMENTATION
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999990259809178	WITHOUT_CLASSIFICATION	9.740190821204147E-7	DOCUMENTATION
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999871067216666	WITHOUT_CLASSIFICATION	1.2893278333436553E-5	DOCUMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999985806659426	WITHOUT_CLASSIFICATION	1.419334057399623E-6	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999801750302983	WITHOUT_CLASSIFICATION	1.9824969701596854E-5	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999874935999608	WITHOUT_CLASSIFICATION	1.2506400039353313E-5	DOCUMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999999425274473	WITHOUT_CLASSIFICATION	5.747255269953856E-8	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999959073849514	WITHOUT_CLASSIFICATION	4.092615048574928E-6	DOCUMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999898933071866	WITHOUT_CLASSIFICATION	1.0106692813532427E-5	DOCUMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9999953798389618	WITHOUT_CLASSIFICATION	4.6201610381419345E-6	DOCUMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9992110166636001	WITHOUT_CLASSIFICATION	7.889833363998482E-4	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999826392244477	WITHOUT_CLASSIFICATION	1.7360775552313047E-5	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999919958695053	WITHOUT_CLASSIFICATION	8.004130494720666E-6	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9997742783810514	WITHOUT_CLASSIFICATION	2.2572161894858037E-4	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9997742783810514	WITHOUT_CLASSIFICATION	2.2572161894858037E-4	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999926644891839	WITHOUT_CLASSIFICATION	7.335510816042666E-6	DOCUMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9999816204947825	WITHOUT_CLASSIFICATION	1.8379505217541127E-5	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9994860798952766	WITHOUT_CLASSIFICATION	5.139201047234005E-4	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.9999971553870994	WITHOUT_CLASSIFICATION	2.844612900684137E-6	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999528226252684	WITHOUT_CLASSIFICATION	4.717737473171199E-5	DOCUMENTATION
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999965290040058	WITHOUT_CLASSIFICATION	3.470995994195196E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.9996126876461824	WITHOUT_CLASSIFICATION	3.873123538176238E-4	DOCUMENTATION
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.9999996131248108	WITHOUT_CLASSIFICATION	3.868751891910716E-7	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999990427999109	WITHOUT_CLASSIFICATION	9.572000890808825E-7	DOCUMENTATION
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999998655527549	WITHOUT_CLASSIFICATION	1.3444724510496835E-7	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999951062811755	WITHOUT_CLASSIFICATION	4.893718824539577E-6	DOCUMENTATION
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9994238146649826	WITHOUT_CLASSIFICATION	5.761853350172254E-4	DOCUMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999730051429325	WITHOUT_CLASSIFICATION	2.6994857067546938E-5	DOCUMENTATION
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999929715188376	WITHOUT_CLASSIFICATION	7.0284811624097265E-6	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999582243789713	WITHOUT_CLASSIFICATION	4.1775621028633005E-5	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999996393514777	WITHOUT_CLASSIFICATION	3.6064852228399144E-7	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999993658187365	WITHOUT_CLASSIFICATION	6.341812634459996E-7	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999587955689252	WITHOUT_CLASSIFICATION	4.120443107475591E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999736358446694	WITHOUT_CLASSIFICATION	2.6364155330632424E-5	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999963634633743	WITHOUT_CLASSIFICATION	3.636536625706376E-6	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999992454120276	WITHOUT_CLASSIFICATION	7.545879723630565E-7	DOCUMENTATION
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999988886784702	WITHOUT_CLASSIFICATION	1.1113215298762654E-6	DOCUMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999113424088724	WITHOUT_CLASSIFICATION	8.865759112759676E-5	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.999992211680363	WITHOUT_CLASSIFICATION	7.788319637038567E-6	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9999970073447205	WITHOUT_CLASSIFICATION	2.992655279428199E-6	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.999997660254017	WITHOUT_CLASSIFICATION	2.339745983042199E-6	DOCUMENTATION
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9999927359780895	WITHOUT_CLASSIFICATION	7.264021910602476E-6	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.999999903869512	WITHOUT_CLASSIFICATION	9.613048793514243E-8	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999961034084481	WITHOUT_CLASSIFICATION	3.896591551898553E-6	DOCUMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9998229929771841	WITHOUT_CLASSIFICATION	1.770070228159638E-4	DOCUMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999890877370833	WITHOUT_CLASSIFICATION	1.0912262916737836E-5	DOCUMENTATION
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999948520819871	WITHOUT_CLASSIFICATION	5.1479180129063795E-6	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999983427889552	WITHOUT_CLASSIFICATION	1.6572110447853669E-6	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.9999643571098086	WITHOUT_CLASSIFICATION	3.5642890191455856E-5	DOCUMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999999272933344	WITHOUT_CLASSIFICATION	7.270666551498325E-8	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999982386597579	WITHOUT_CLASSIFICATION	1.761340242075275E-6	DOCUMENTATION
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999636920895317	WITHOUT_CLASSIFICATION	3.6307910468289096E-5	DOCUMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999733514455729	WITHOUT_CLASSIFICATION	2.6648554427188905E-5	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9999999251206751	WITHOUT_CLASSIFICATION	7.48793248589959E-8	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.999967347714431	WITHOUT_CLASSIFICATION	3.265228556890858E-5	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.999967347714431	WITHOUT_CLASSIFICATION	3.265228556890858E-5	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999963486203496	WITHOUT_CLASSIFICATION	3.6513796503006408E-6	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999998921232524	WITHOUT_CLASSIFICATION	1.07876747683246E-7	DOCUMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.9999332513904023	WITHOUT_CLASSIFICATION	6.674860959769045E-5	DOCUMENTATION
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9999963247926164	WITHOUT_CLASSIFICATION	3.6752073835920406E-6	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999894677152974	WITHOUT_CLASSIFICATION	1.0532284702499686E-5	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9996250981755415	WITHOUT_CLASSIFICATION	3.7490182445855294E-4	DOCUMENTATION
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999983145060827	WITHOUT_CLASSIFICATION	1.6854939173743283E-6	DOCUMENTATION
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999508704425287	WITHOUT_CLASSIFICATION	4.9129557471285066E-5	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999881016097729	WITHOUT_CLASSIFICATION	1.1898390227155274E-5	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999692361492261	WITHOUT_CLASSIFICATION	3.076385077391445E-5	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999692361492261	WITHOUT_CLASSIFICATION	3.076385077391445E-5	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999401778075886	WITHOUT_CLASSIFICATION	5.98221924114627E-5	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999496411902323	WITHOUT_CLASSIFICATION	5.035880976770627E-5	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999996529761848	WITHOUT_CLASSIFICATION	3.470238153053618E-7	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9999988691866046	WITHOUT_CLASSIFICATION	1.1308133953252577E-6	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9999777754178544	WITHOUT_CLASSIFICATION	2.2224582145647307E-5	DOCUMENTATION
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999999017045541	WITHOUT_CLASSIFICATION	9.829544591476229E-8	DOCUMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.999999176841844	WITHOUT_CLASSIFICATION	8.231581559982692E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9999978470629037	WITHOUT_CLASSIFICATION	2.1529370962507002E-6	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.999994096566436	WITHOUT_CLASSIFICATION	5.903433564018212E-6	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999995923329867	WITHOUT_CLASSIFICATION	4.0766701318430247E-7	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999420764456374	WITHOUT_CLASSIFICATION	5.792355436268326E-5	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9999778405867787	WITHOUT_CLASSIFICATION	2.215941322133296E-5	DOCUMENTATION
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.9995970398148695	WITHOUT_CLASSIFICATION	4.0296018513051346E-4	DOCUMENTATION
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9999373395438557	WITHOUT_CLASSIFICATION	6.266045614430871E-5	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.999967368649159	WITHOUT_CLASSIFICATION	3.263135084101251E-5	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999994857607056	WITHOUT_CLASSIFICATION	5.1423929430076E-7	DOCUMENTATION
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999985477094359	WITHOUT_CLASSIFICATION	1.4522905641801613E-6	DOCUMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9999992834417836	WITHOUT_CLASSIFICATION	7.165582165292901E-7	DOCUMENTATION
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9999978547891298	WITHOUT_CLASSIFICATION	2.1452108701486264E-6	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9999810377198735	WITHOUT_CLASSIFICATION	1.8962280126529424E-5	DOCUMENTATION
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999894146329901	WITHOUT_CLASSIFICATION	1.0585367009997962E-5	DOCUMENTATION
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999955554132635	WITHOUT_CLASSIFICATION	4.444586736575254E-6	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999908388812051	WITHOUT_CLASSIFICATION	9.16111879476922E-6	DOCUMENTATION
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999999517516172	WITHOUT_CLASSIFICATION	4.824838292595752E-8	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999983049887906	WITHOUT_CLASSIFICATION	1.6950112094405761E-6	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999977644785528	WITHOUT_CLASSIFICATION	2.2355214471620133E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999995650275988	WITHOUT_CLASSIFICATION	4.3497240108745627E-7	DOCUMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9999934508911219	WITHOUT_CLASSIFICATION	6.549108878103281E-6	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9998748892361059	WITHOUT_CLASSIFICATION	1.251107638941262E-4	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999941006994643	WITHOUT_CLASSIFICATION	5.899300535677194E-6	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.999998759081545	WITHOUT_CLASSIFICATION	1.2409184549876532E-6	DOCUMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999992444715455	WITHOUT_CLASSIFICATION	7.555284544642017E-7	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999975502300166	WITHOUT_CLASSIFICATION	2.449769983448298E-6	DOCUMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9999984771483258	WITHOUT_CLASSIFICATION	1.5228516741749482E-6	DOCUMENTATION
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.999992642344944	WITHOUT_CLASSIFICATION	7.357655055919647E-6	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999653570683302	WITHOUT_CLASSIFICATION	3.4642931669815906E-5	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999826392244477	WITHOUT_CLASSIFICATION	1.7360775552313047E-5	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999994493805623	WITHOUT_CLASSIFICATION	5.506194376235221E-7	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999948131697551	WITHOUT_CLASSIFICATION	5.186830244879435E-6	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9996336952439091	WITHOUT_CLASSIFICATION	3.663047560909142E-4	DOCUMENTATION
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999997998347503	WITHOUT_CLASSIFICATION	2.001652495898479E-7	DOCUMENTATION
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9996418945670607	WITHOUT_CLASSIFICATION	3.581054329393347E-4	DOCUMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999570450843042	WITHOUT_CLASSIFICATION	4.29549156956962E-5	DOCUMENTATION
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9999766513013593	WITHOUT_CLASSIFICATION	2.334869864074233E-5	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9991501717087372	WITHOUT_CLASSIFICATION	8.498282912627836E-4	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9995456877832963	WITHOUT_CLASSIFICATION	4.543122167036928E-4	DOCUMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9999950482841906	WITHOUT_CLASSIFICATION	4.9517158094374735E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999999515545468	WITHOUT_CLASSIFICATION	4.844545316368391E-8	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999988808064063	WITHOUT_CLASSIFICATION	1.1191935936696915E-6	DOCUMENTATION
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9998282014507325	WITHOUT_CLASSIFICATION	1.7179854926749588E-4	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999810490928065	WITHOUT_CLASSIFICATION	1.8950907193455814E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999781133730331	WITHOUT_CLASSIFICATION	2.188662696691443E-5	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9997785555875693	WITHOUT_CLASSIFICATION	2.214444124306765E-4	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9994475483369376	WITHOUT_CLASSIFICATION	5.524516630622967E-4	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999980247715672	WITHOUT_CLASSIFICATION	1.9752284327602404E-6	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999973768788736	WITHOUT_CLASSIFICATION	2.6231211264899867E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999781133730331	WITHOUT_CLASSIFICATION	2.188662696691443E-5	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9994312308459967	WITHOUT_CLASSIFICATION	5.687691540033053E-4	DOCUMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9998928593680216	WITHOUT_CLASSIFICATION	1.071406319783287E-4	DOCUMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.999999455322035	WITHOUT_CLASSIFICATION	5.446779649581873E-7	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999961392919955	WITHOUT_CLASSIFICATION	3.860708004517494E-6	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9950480677971127	WITHOUT_CLASSIFICATION	0.0049519322028873285	DOCUMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999995527500948	WITHOUT_CLASSIFICATION	4.472499051578832E-7	DOCUMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999973325122841	WITHOUT_CLASSIFICATION	2.6674877158097807E-6	DOCUMENTATION
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.9999996870815897	WITHOUT_CLASSIFICATION	3.12918410309125E-7	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999689457662666	WITHOUT_CLASSIFICATION	3.1054233733413644E-5	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.999998819646055	WITHOUT_CLASSIFICATION	1.180353945005258E-6	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999389239110134	WITHOUT_CLASSIFICATION	6.107608898665836E-5	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9987680372920704	WITHOUT_CLASSIFICATION	0.001231962707929566	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999953175517609	WITHOUT_CLASSIFICATION	4.682448239193336E-6	DOCUMENTATION
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9996676500185528	WITHOUT_CLASSIFICATION	3.3234998144724575E-4	DOCUMENTATION
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999314527739755	WITHOUT_CLASSIFICATION	6.854722602447863E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999990648618168	WITHOUT_CLASSIFICATION	9.351381830753236E-7	DOCUMENTATION
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999970577298606	WITHOUT_CLASSIFICATION	2.9422701393958663E-6	DOCUMENTATION
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.999996686368911	WITHOUT_CLASSIFICATION	3.313631088924865E-6	DOCUMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9977967424340889	WITHOUT_CLASSIFICATION	0.002203257565911102	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999996761194072	WITHOUT_CLASSIFICATION	3.238805928486356E-7	DOCUMENTATION
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999549184263435	WITHOUT_CLASSIFICATION	4.508157365656383E-5	DOCUMENTATION
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.999999189228539	WITHOUT_CLASSIFICATION	8.107714609835486E-7	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999784351874546	WITHOUT_CLASSIFICATION	2.1564812545422387E-5	DOCUMENTATION
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999991823758124	WITHOUT_CLASSIFICATION	8.176241875200158E-7	DOCUMENTATION
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999965570264896	WITHOUT_CLASSIFICATION	3.442973510547054E-6	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999610649450043	WITHOUT_CLASSIFICATION	3.893505499568587E-5	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9999892813138788	WITHOUT_CLASSIFICATION	1.0718686121122094E-5	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999782603321613	WITHOUT_CLASSIFICATION	2.173966783874694E-5	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9999990971713109	WITHOUT_CLASSIFICATION	9.028286891275892E-7	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.9999996044975823	WITHOUT_CLASSIFICATION	3.955024177442938E-7	DOCUMENTATION
// and perform the load	WITHOUT_CLASSIFICATION	0.9999937384912904	WITHOUT_CLASSIFICATION	6.261508709640646E-6	DOCUMENTATION
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9997459728589959	WITHOUT_CLASSIFICATION	2.540271410041125E-4	DOCUMENTATION
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999343427554181	WITHOUT_CLASSIFICATION	6.565724458185971E-5	DOCUMENTATION
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999823058530767	WITHOUT_CLASSIFICATION	1.7694146923310988E-5	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999971835956591	WITHOUT_CLASSIFICATION	2.816404340787781E-6	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.999984334040455	WITHOUT_CLASSIFICATION	1.5665959544979538E-5	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999998630464854	WITHOUT_CLASSIFICATION	1.369535147317163E-7	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999967298148233	WITHOUT_CLASSIFICATION	3.2701851766138203E-6	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999994419132247	WITHOUT_CLASSIFICATION	5.580867753123776E-7	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999179192686459	WITHOUT_CLASSIFICATION	8.208073135405594E-5	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999373093556743	WITHOUT_CLASSIFICATION	6.26906443257396E-5	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999373093556743	WITHOUT_CLASSIFICATION	6.26906443257396E-5	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999790930467692	WITHOUT_CLASSIFICATION	2.0906953230812866E-5	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999962523620676	WITHOUT_CLASSIFICATION	3.7476379325478464E-6	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999860615709671	WITHOUT_CLASSIFICATION	1.3938429032918952E-5	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.8695211396110228	DOCUMENTATION	0.13047886038897713	WITHOUT_CLASSIFICATION
// ignore	WITHOUT_CLASSIFICATION	0.9999152856181995	WITHOUT_CLASSIFICATION	8.471438180048809E-5	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999152856181995	WITHOUT_CLASSIFICATION	8.471438180048809E-5	DOCUMENTATION
//        }	WITHOUT_CLASSIFICATION	0.9999856542579761	WITHOUT_CLASSIFICATION	1.4345742023926811E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9998635670718024	WITHOUT_CLASSIFICATION	1.3643292819760384E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999094604897105	WITHOUT_CLASSIFICATION	9.053951028949831E-5	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999080597662824	WITHOUT_CLASSIFICATION	9.194023371761861E-5	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999990837008785	WITHOUT_CLASSIFICATION	9.162991214157237E-7	DOCUMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.999991428255459	WITHOUT_CLASSIFICATION	8.571744540963944E-6	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.999998418607475	WITHOUT_CLASSIFICATION	1.5813925249966228E-6	DOCUMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999151410019465	WITHOUT_CLASSIFICATION	8.485899805352004E-5	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999632860737535	WITHOUT_CLASSIFICATION	3.671392624639254E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999929188295732	WITHOUT_CLASSIFICATION	7.081170426784295E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999929188295732	WITHOUT_CLASSIFICATION	7.081170426784295E-6	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9997785555875693	WITHOUT_CLASSIFICATION	2.214444124306765E-4	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999815844653552	WITHOUT_CLASSIFICATION	1.8415534644781395E-5	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999822003696518	WITHOUT_CLASSIFICATION	1.7799630348218948E-5	DOCUMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9994577716657899	WITHOUT_CLASSIFICATION	5.422283342101927E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999736757779591	WITHOUT_CLASSIFICATION	2.6324222040855463E-5	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999931224308882	WITHOUT_CLASSIFICATION	6.8775691117056685E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999680622246668	WITHOUT_CLASSIFICATION	3.193777533315946E-5	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999993792899144	WITHOUT_CLASSIFICATION	6.207100856013849E-7	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9998763195625481	WITHOUT_CLASSIFICATION	1.236804374518773E-4	DOCUMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9999995141173267	WITHOUT_CLASSIFICATION	4.858826732914525E-7	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9999978690364574	WITHOUT_CLASSIFICATION	2.1309635427559423E-6	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.999998819646055	WITHOUT_CLASSIFICATION	1.180353945005258E-6	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9999779010678772	WITHOUT_CLASSIFICATION	2.2098932122767895E-5	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9993032423568988	WITHOUT_CLASSIFICATION	6.967576431010825E-4	DOCUMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999961405440212	WITHOUT_CLASSIFICATION	3.859455978874395E-6	DOCUMENTATION
//use the id column alias	WITHOUT_CLASSIFICATION	0.999791382186875	WITHOUT_CLASSIFICATION	2.0861781312498537E-4	DOCUMENTATION
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9998744249040414	WITHOUT_CLASSIFICATION	1.2557509595855618E-4	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9994414137523052	WITHOUT_CLASSIFICATION	5.585862476947521E-4	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9999129378068436	WITHOUT_CLASSIFICATION	8.706219315635673E-5	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9999989601240253	WITHOUT_CLASSIFICATION	1.0398759746896151E-6	DOCUMENTATION
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9994143382314113	WITHOUT_CLASSIFICATION	5.856617685885556E-4	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999958853460328	WITHOUT_CLASSIFICATION	4.114653967230482E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999958853460328	WITHOUT_CLASSIFICATION	4.114653967230482E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9998685932154816	WITHOUT_CLASSIFICATION	1.3140678451837245E-4	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999996542414524	WITHOUT_CLASSIFICATION	3.4575854767623724E-7	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996778436009158	WITHOUT_CLASSIFICATION	3.2215639908418013E-4	DOCUMENTATION
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9995759194912139	WITHOUT_CLASSIFICATION	4.2408050878609303E-4	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999919163859344	WITHOUT_CLASSIFICATION	8.083614065484439E-6	DOCUMENTATION
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999184967951524	WITHOUT_CLASSIFICATION	8.15032048475237E-5	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999877094291055	WITHOUT_CLASSIFICATION	1.2290570894494563E-5	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999999150624609	WITHOUT_CLASSIFICATION	8.493753908758847E-8	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.999937201977123	WITHOUT_CLASSIFICATION	6.279802287706887E-5	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999988962827208	WITHOUT_CLASSIFICATION	1.1037172791435757E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999724655120003	WITHOUT_CLASSIFICATION	2.7534487999686177E-5	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9999999761353014	WITHOUT_CLASSIFICATION	2.3864698566484632E-8	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.9999345169407916	WITHOUT_CLASSIFICATION	6.548305920841569E-5	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999997645700441	WITHOUT_CLASSIFICATION	2.3542995574719908E-7	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9999952354028875	WITHOUT_CLASSIFICATION	4.764597112571852E-6	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.999996394974726	WITHOUT_CLASSIFICATION	3.6050252739651338E-6	DOCUMENTATION
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.999987363241514	WITHOUT_CLASSIFICATION	1.2636758485934263E-5	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999497397778585	WITHOUT_CLASSIFICATION	5.0260222141611275E-5	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9999405834903807	WITHOUT_CLASSIFICATION	5.9416509619387504E-5	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9999976936858431	WITHOUT_CLASSIFICATION	2.3063141569642584E-6	DOCUMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999978571133008	WITHOUT_CLASSIFICATION	2.1428866991432286E-6	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9999998750089863	WITHOUT_CLASSIFICATION	1.2499101373680488E-7	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.999999931268064	WITHOUT_CLASSIFICATION	6.873193601962235E-8	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.999999956511159	WITHOUT_CLASSIFICATION	4.3488840972673386E-8	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999385182184474	WITHOUT_CLASSIFICATION	6.148178155258273E-5	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999385182184474	WITHOUT_CLASSIFICATION	6.148178155258273E-5	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999953275934026	WITHOUT_CLASSIFICATION	4.672406597341133E-6	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999946464036377	WITHOUT_CLASSIFICATION	5.353596362314855E-6	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999876599584939	WITHOUT_CLASSIFICATION	1.2340041506198217E-5	DOCUMENTATION
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999998989862062	WITHOUT_CLASSIFICATION	1.010137938300395E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999188846374498	WITHOUT_CLASSIFICATION	8.11153625502227E-5	DOCUMENTATION
//TODO find a decent name before documenting	DOCUMENTATION	0.9996951609274086	WITHOUT_CLASSIFICATION	3.0483907259140587E-4	DOCUMENTATION
