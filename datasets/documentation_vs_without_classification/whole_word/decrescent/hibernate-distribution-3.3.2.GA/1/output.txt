//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9998565268820624	WITHOUT_CLASSIFICATION	1.4347311793757187E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998989476625615	WITHOUT_CLASSIFICATION	1.010523374384796E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998989476625615	WITHOUT_CLASSIFICATION	1.010523374384796E-4	DOCUMENTATION
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9997475364264514	WITHOUT_CLASSIFICATION	2.52463573548613E-4	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999255966363364	WITHOUT_CLASSIFICATION	7.440336366360346E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999472186686731	WITHOUT_CLASSIFICATION	5.278133132683358E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999472186686731	WITHOUT_CLASSIFICATION	5.278133132683358E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999036159572986	WITHOUT_CLASSIFICATION	9.638404270143583E-5	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9998592260893386	WITHOUT_CLASSIFICATION	1.4077391066129322E-4	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999379211013739	WITHOUT_CLASSIFICATION	6.207889862601548E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.99988677774095	WITHOUT_CLASSIFICATION	1.132222590500045E-4	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999138711049218	WITHOUT_CLASSIFICATION	8.612889507821388E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999138711049218	WITHOUT_CLASSIFICATION	8.612889507821388E-5	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9998637369768132	WITHOUT_CLASSIFICATION	1.362630231867801E-4	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9999553733865469	WITHOUT_CLASSIFICATION	4.462661345302245E-5	DOCUMENTATION
// decode row selection...	WITHOUT_CLASSIFICATION	0.9999074592286741	WITHOUT_CLASSIFICATION	9.25407713258976E-5	DOCUMENTATION
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9997082123038398	WITHOUT_CLASSIFICATION	2.917876961602019E-4	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.999963976301883	WITHOUT_CLASSIFICATION	3.6023698116959664E-5	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9998549272765431	WITHOUT_CLASSIFICATION	1.450727234568129E-4	DOCUMENTATION
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.999832611485693	WITHOUT_CLASSIFICATION	1.673885143069774E-4	DOCUMENTATION
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999665799096694	WITHOUT_CLASSIFICATION	3.3420090330590835E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.999965011674678	WITHOUT_CLASSIFICATION	3.498832532202757E-5	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9988967610048545	WITHOUT_CLASSIFICATION	0.0011032389951455184	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9998644583787172	WITHOUT_CLASSIFICATION	1.355416212828129E-4	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.9978283195330129	WITHOUT_CLASSIFICATION	0.002171680466987108	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9966190561341481	WITHOUT_CLASSIFICATION	0.003380943865851821	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9966190561341481	WITHOUT_CLASSIFICATION	0.003380943865851821	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9997401909108024	WITHOUT_CLASSIFICATION	2.598090891977311E-4	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999505112431094	WITHOUT_CLASSIFICATION	4.9488756890566015E-5	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999967275547416	WITHOUT_CLASSIFICATION	3.272445258483111E-6	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9998355946838611	WITHOUT_CLASSIFICATION	1.6440531613889906E-4	DOCUMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.999876151512015	WITHOUT_CLASSIFICATION	1.2384848798496087E-4	DOCUMENTATION
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999450523505017	WITHOUT_CLASSIFICATION	5.494764949829343E-5	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9999560590759801	WITHOUT_CLASSIFICATION	4.39409240199792E-5	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9996088837916367	WITHOUT_CLASSIFICATION	3.911162083632753E-4	DOCUMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9999717443690205	WITHOUT_CLASSIFICATION	2.8255630979456214E-5	DOCUMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9998609653138314	WITHOUT_CLASSIFICATION	1.390346861685535E-4	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999764573551976	WITHOUT_CLASSIFICATION	2.3542644802347623E-5	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999526386864975	WITHOUT_CLASSIFICATION	4.736131350252888E-5	DOCUMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999943778641495	WITHOUT_CLASSIFICATION	5.622135850467779E-6	DOCUMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9987169433317753	WITHOUT_CLASSIFICATION	0.0012830566682246818	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9999684321341182	WITHOUT_CLASSIFICATION	3.156786588183533E-5	DOCUMENTATION
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999942691603821	WITHOUT_CLASSIFICATION	5.7308396178627855E-6	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9998695433582896	WITHOUT_CLASSIFICATION	1.3045664171032622E-4	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9999611245085629	WITHOUT_CLASSIFICATION	3.887549143717654E-5	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999934967470264	WITHOUT_CLASSIFICATION	6.503252973651504E-6	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9999049113784454	WITHOUT_CLASSIFICATION	9.50886215546767E-5	DOCUMENTATION
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9999922907076692	WITHOUT_CLASSIFICATION	7.709292330835403E-6	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9998804990768119	WITHOUT_CLASSIFICATION	1.195009231881109E-4	DOCUMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9999642195957118	WITHOUT_CLASSIFICATION	3.5780404288083866E-5	DOCUMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999906164395646	WITHOUT_CLASSIFICATION	9.383560435503379E-6	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999236636646179	WITHOUT_CLASSIFICATION	7.633633538215554E-5	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999582751177851	WITHOUT_CLASSIFICATION	4.1724882214866016E-5	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9998385445929755	WITHOUT_CLASSIFICATION	1.614554070245342E-4	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.999995569089419	WITHOUT_CLASSIFICATION	4.4309105809980835E-6	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.99990051453479	WITHOUT_CLASSIFICATION	9.948546520993263E-5	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9998687929472413	WITHOUT_CLASSIFICATION	1.3120705275869408E-4	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9999925477633111	WITHOUT_CLASSIFICATION	7.45223668889911E-6	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9997518407543671	WITHOUT_CLASSIFICATION	2.4815924563299584E-4	DOCUMENTATION
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999373898671906	WITHOUT_CLASSIFICATION	6.261013280940621E-5	DOCUMENTATION
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9999332196615764	WITHOUT_CLASSIFICATION	6.678033842362484E-5	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.999775066942301	WITHOUT_CLASSIFICATION	2.249330576991318E-4	DOCUMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9998211977951461	WITHOUT_CLASSIFICATION	1.7880220485396307E-4	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999870055929704	WITHOUT_CLASSIFICATION	1.299440702958478E-5	DOCUMENTATION
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9998768412247235	WITHOUT_CLASSIFICATION	1.2315877527646548E-4	DOCUMENTATION
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999797040067784	WITHOUT_CLASSIFICATION	2.0295993221551877E-5	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9998865276881398	WITHOUT_CLASSIFICATION	1.1347231186017951E-4	DOCUMENTATION
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999599473512847	WITHOUT_CLASSIFICATION	4.0052648715306843E-5	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999754832895726	WITHOUT_CLASSIFICATION	2.4516710427438605E-5	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9998865276881398	WITHOUT_CLASSIFICATION	1.1347231186017951E-4	DOCUMENTATION
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999798325025441	WITHOUT_CLASSIFICATION	2.016749745591406E-5	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.999657227431135	WITHOUT_CLASSIFICATION	3.427725688648798E-4	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.999920020615887	WITHOUT_CLASSIFICATION	7.997938411290536E-5	DOCUMENTATION
// construct the cache	WITHOUT_CLASSIFICATION	0.9999490804266982	WITHOUT_CLASSIFICATION	5.09195733018999E-5	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9994528421361841	WITHOUT_CLASSIFICATION	5.471578638158695E-4	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9994528421361841	WITHOUT_CLASSIFICATION	5.471578638158695E-4	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999746014530906	WITHOUT_CLASSIFICATION	2.539854690943595E-5	DOCUMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9995795678834927	WITHOUT_CLASSIFICATION	4.2043211650737405E-4	DOCUMENTATION
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.999960318762636	WITHOUT_CLASSIFICATION	3.968123736403011E-5	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.9999904163278975	WITHOUT_CLASSIFICATION	9.583672102515614E-6	DOCUMENTATION
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999832789459082	WITHOUT_CLASSIFICATION	1.6721054091815138E-5	DOCUMENTATION
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999539202136717	WITHOUT_CLASSIFICATION	4.607978632832556E-5	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9999647587455344	WITHOUT_CLASSIFICATION	3.524125446559144E-5	DOCUMENTATION
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999516983350455	WITHOUT_CLASSIFICATION	4.8301664954382644E-5	DOCUMENTATION
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999142758066105	WITHOUT_CLASSIFICATION	8.572419338950532E-5	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9998397784951228	WITHOUT_CLASSIFICATION	1.6022150487716378E-4	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9998397784951228	WITHOUT_CLASSIFICATION	1.6022150487716378E-4	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998878221901805	WITHOUT_CLASSIFICATION	1.1217780981952929E-4	DOCUMENTATION
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999037204667074	WITHOUT_CLASSIFICATION	9.627953329260805E-5	DOCUMENTATION
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9999468952933008	WITHOUT_CLASSIFICATION	5.310470669908985E-5	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9998397784951228	WITHOUT_CLASSIFICATION	1.6022150487716378E-4	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998878221901805	WITHOUT_CLASSIFICATION	1.1217780981952929E-4	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9998878221901805	WITHOUT_CLASSIFICATION	1.1217780981952929E-4	DOCUMENTATION
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9999469260809868	WITHOUT_CLASSIFICATION	5.3073919013244694E-5	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9999157075715025	WITHOUT_CLASSIFICATION	8.429242849744136E-5	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999807762187772	WITHOUT_CLASSIFICATION	1.9223781222827082E-5	DOCUMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999857802714427	WITHOUT_CLASSIFICATION	1.421972855726183E-5	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999769405808112	WITHOUT_CLASSIFICATION	2.305941918875979E-5	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999769405808112	WITHOUT_CLASSIFICATION	2.305941918875979E-5	DOCUMENTATION
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9993436150980961	WITHOUT_CLASSIFICATION	6.563849019038594E-4	DOCUMENTATION
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9992871391716908	WITHOUT_CLASSIFICATION	7.128608283091534E-4	DOCUMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.999673003303787	WITHOUT_CLASSIFICATION	3.269966962130392E-4	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999220731624252	WITHOUT_CLASSIFICATION	7.792683757470856E-5	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999220731624252	WITHOUT_CLASSIFICATION	7.792683757470856E-5	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9992834137073667	WITHOUT_CLASSIFICATION	7.165862926333596E-4	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999133078962708	WITHOUT_CLASSIFICATION	8.669210372924473E-5	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9994266503204672	WITHOUT_CLASSIFICATION	5.733496795327661E-4	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999943670993523	WITHOUT_CLASSIFICATION	5.632900647681101E-6	DOCUMENTATION
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9998410074458969	WITHOUT_CLASSIFICATION	1.5899255410315415E-4	DOCUMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999877840597536	WITHOUT_CLASSIFICATION	1.2215940246272404E-5	DOCUMENTATION
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9999390223922228	WITHOUT_CLASSIFICATION	6.097760777732035E-5	DOCUMENTATION
//sort first by role name	WITHOUT_CLASSIFICATION	0.9996529801211428	WITHOUT_CLASSIFICATION	3.4701987885725407E-4	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9994266503204672	WITHOUT_CLASSIFICATION	5.733496795327661E-4	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9991959339816504	WITHOUT_CLASSIFICATION	8.040660183497362E-4	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999146886761657	WITHOUT_CLASSIFICATION	8.531132383427924E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999146886761657	WITHOUT_CLASSIFICATION	8.531132383427924E-5	DOCUMENTATION
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999861026861181	WITHOUT_CLASSIFICATION	1.3897313881784209E-5	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999421187179138	WITHOUT_CLASSIFICATION	5.788128208620184E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9998856359485212	WITHOUT_CLASSIFICATION	1.143640514789094E-4	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9881673584890472	WITHOUT_CLASSIFICATION	0.011832641510952766	DOCUMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9996417817199853	WITHOUT_CLASSIFICATION	3.5821828001475107E-4	DOCUMENTATION
//then by id	WITHOUT_CLASSIFICATION	0.9991964779449645	WITHOUT_CLASSIFICATION	8.035220550354305E-4	DOCUMENTATION
// to be safe...	WITHOUT_CLASSIFICATION	0.9999330435407496	WITHOUT_CLASSIFICATION	6.695645925037544E-5	DOCUMENTATION
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9999661755219196	WITHOUT_CLASSIFICATION	3.382447808043924E-5	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999916159619852	WITHOUT_CLASSIFICATION	8.384038014891285E-6	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999916159619852	WITHOUT_CLASSIFICATION	8.384038014891285E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9997837417236225	WITHOUT_CLASSIFICATION	2.1625827637754272E-4	DOCUMENTATION
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9998565268820624	WITHOUT_CLASSIFICATION	1.4347311793757187E-4	DOCUMENTATION
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.999952035189123	WITHOUT_CLASSIFICATION	4.796481087686708E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// invokespecial	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998989476625615	WITHOUT_CLASSIFICATION	1.010523374384796E-4	DOCUMENTATION
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999074454839068	WITHOUT_CLASSIFICATION	9.255451609325257E-5	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999056329743478	WITHOUT_CLASSIFICATION	9.43670256522911E-5	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999078984119556	WITHOUT_CLASSIFICATION	9.210158804434235E-5	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9998278495432866	WITHOUT_CLASSIFICATION	1.721504567133253E-4	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9997965543597819	WITHOUT_CLASSIFICATION	2.034456402179843E-4	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.999866575859195	WITHOUT_CLASSIFICATION	1.3342414080503646E-4	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999247571121826	WITHOUT_CLASSIFICATION	7.524288781735171E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// aastore // args	WITHOUT_CLASSIFICATION	0.9998278495432866	WITHOUT_CLASSIFICATION	1.721504567133253E-4	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9997635223545425	WITHOUT_CLASSIFICATION	2.3647764545761804E-4	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9998934964200514	WITHOUT_CLASSIFICATION	1.0650357994852332E-4	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999080196835535	WITHOUT_CLASSIFICATION	9.198031644653975E-5	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999494827169368	WITHOUT_CLASSIFICATION	5.051728306322932E-5	DOCUMENTATION
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999738596998973	WITHOUT_CLASSIFICATION	2.6140300102719168E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999472186686731	WITHOUT_CLASSIFICATION	5.278133132683358E-5	DOCUMENTATION
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.999861366275656	WITHOUT_CLASSIFICATION	1.386337243439883E-4	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.999832098712166	WITHOUT_CLASSIFICATION	1.6790128783404596E-4	DOCUMENTATION
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999252307363508	WITHOUT_CLASSIFICATION	7.476926364925381E-5	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999496951102752	WITHOUT_CLASSIFICATION	5.030488972473849E-5	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// aaload	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.999851876313131	WITHOUT_CLASSIFICATION	1.481236868690325E-4	DOCUMENTATION
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9998727611472873	WITHOUT_CLASSIFICATION	1.2723885271276778E-4	DOCUMENTATION
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999635718259344	WITHOUT_CLASSIFICATION	3.64281740654386E-5	DOCUMENTATION
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9998830693543853	WITHOUT_CLASSIFICATION	1.1693064561471674E-4	DOCUMENTATION
// register in exception table	WITHOUT_CLASSIFICATION	0.9998998057858225	WITHOUT_CLASSIFICATION	1.0019421417745787E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998989476625615	WITHOUT_CLASSIFICATION	1.010523374384796E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998989476625615	WITHOUT_CLASSIFICATION	1.010523374384796E-4	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999036159572986	WITHOUT_CLASSIFICATION	9.638404270143583E-5	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999183553715659	WITHOUT_CLASSIFICATION	8.164462843413323E-5	DOCUMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9998708971777658	WITHOUT_CLASSIFICATION	1.291028222342001E-4	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999179538634956	WITHOUT_CLASSIFICATION	8.2046136504436E-5	DOCUMENTATION
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9998273504038963	WITHOUT_CLASSIFICATION	1.726495961036625E-4	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9998527641680889	WITHOUT_CLASSIFICATION	1.472358319111349E-4	DOCUMENTATION
//swallow	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9998306476650561	WITHOUT_CLASSIFICATION	1.6935233494391272E-4	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9998691005900124	WITHOUT_CLASSIFICATION	1.308994099875299E-4	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9998691005900124	WITHOUT_CLASSIFICATION	1.308994099875299E-4	DOCUMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999120699058983	WITHOUT_CLASSIFICATION	8.793009410174677E-5	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999529837016615	WITHOUT_CLASSIFICATION	4.701629833850137E-5	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9997577860294038	WITHOUT_CLASSIFICATION	2.422139705962967E-4	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999074454839068	WITHOUT_CLASSIFICATION	9.255451609325257E-5	DOCUMENTATION
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9998938718469915	WITHOUT_CLASSIFICATION	1.0612815300845311E-4	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999141892149878	WITHOUT_CLASSIFICATION	8.581078501214698E-5	DOCUMENTATION
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999309016651345	WITHOUT_CLASSIFICATION	6.909833486545936E-5	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9998592260893386	WITHOUT_CLASSIFICATION	1.4077391066129322E-4	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999323547759819	WITHOUT_CLASSIFICATION	6.764522401814406E-5	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999323547759819	WITHOUT_CLASSIFICATION	6.764522401814406E-5	DOCUMENTATION
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999323547759819	WITHOUT_CLASSIFICATION	6.764522401814406E-5	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999539292634957	WITHOUT_CLASSIFICATION	4.607073650443028E-5	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999323547759819	WITHOUT_CLASSIFICATION	6.764522401814406E-5	DOCUMENTATION
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.9998992576708118	WITHOUT_CLASSIFICATION	1.0074232918817109E-4	DOCUMENTATION
// int	WITHOUT_CLASSIFICATION	0.9998548250881585	WITHOUT_CLASSIFICATION	1.4517491184160993E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998989476625615	WITHOUT_CLASSIFICATION	1.010523374384796E-4	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999054736171703	WITHOUT_CLASSIFICATION	9.452638282974506E-5	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.999879933991637	WITHOUT_CLASSIFICATION	1.2006600836303098E-4	DOCUMENTATION
// ldc // field name	WITHOUT_CLASSIFICATION	0.9998539652006585	WITHOUT_CLASSIFICATION	1.4603479934149617E-4	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.999926192726451	WITHOUT_CLASSIFICATION	7.380727354894792E-5	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.99988677774095	WITHOUT_CLASSIFICATION	1.132222590500045E-4	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.99988677774095	WITHOUT_CLASSIFICATION	1.132222590500045E-4	DOCUMENTATION
// not array	WITHOUT_CLASSIFICATION	0.9998898816882272	WITHOUT_CLASSIFICATION	1.1011831177274435E-4	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.9999363787378818	WITHOUT_CLASSIFICATION	6.362126211821586E-5	DOCUMENTATION
// boolean	WITHOUT_CLASSIFICATION	0.9998685522006127	WITHOUT_CLASSIFICATION	1.314477993873254E-4	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9998553020822033	WITHOUT_CLASSIFICATION	1.4469791779664424E-4	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9998545005117434	WITHOUT_CLASSIFICATION	1.4549948825653522E-4	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999138711049218	WITHOUT_CLASSIFICATION	8.612889507821388E-5	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9998637369768132	WITHOUT_CLASSIFICATION	1.362630231867801E-4	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9998637369768132	WITHOUT_CLASSIFICATION	1.362630231867801E-4	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9998678471737669	WITHOUT_CLASSIFICATION	1.321528262331763E-4	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9998678471737669	WITHOUT_CLASSIFICATION	1.321528262331763E-4	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.999866611016112	WITHOUT_CLASSIFICATION	1.3338898388800773E-4	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.999866611016112	WITHOUT_CLASSIFICATION	1.3338898388800773E-4	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.99988677774095	WITHOUT_CLASSIFICATION	1.132222590500045E-4	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999138711049218	WITHOUT_CLASSIFICATION	8.612889507821388E-5	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9998637369768132	WITHOUT_CLASSIFICATION	1.362630231867801E-4	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9998678471737669	WITHOUT_CLASSIFICATION	1.321528262331763E-4	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9998678471737669	WITHOUT_CLASSIFICATION	1.321528262331763E-4	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.999866611016112	WITHOUT_CLASSIFICATION	1.3338898388800773E-4	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999044630890956	WITHOUT_CLASSIFICATION	9.553691090440518E-5	DOCUMENTATION
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9995571691151065	WITHOUT_CLASSIFICATION	4.4283088489348906E-4	DOCUMENTATION
//decrement the lock	WITHOUT_CLASSIFICATION	0.9995187649113937	WITHOUT_CLASSIFICATION	4.8123508860640677E-4	DOCUMENTATION
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999510628084978	WITHOUT_CLASSIFICATION	4.8937191502227144E-5	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9997393060425533	WITHOUT_CLASSIFICATION	2.606939574465853E-4	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9998549609574344	WITHOUT_CLASSIFICATION	1.450390425655808E-4	DOCUMENTATION
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9991410073190811	WITHOUT_CLASSIFICATION	8.589926809189173E-4	DOCUMENTATION
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9999966547186663	WITHOUT_CLASSIFICATION	3.345281333662247E-6	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9987898661287021	WITHOUT_CLASSIFICATION	0.0012101338712979398	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999598667556513	WITHOUT_CLASSIFICATION	4.013324434860865E-5	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9998644849412351	WITHOUT_CLASSIFICATION	1.3551505876478184E-4	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9998855382095869	WITHOUT_CLASSIFICATION	1.1446179041307893E-4	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9998549609574344	WITHOUT_CLASSIFICATION	1.450390425655808E-4	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999137816796098	WITHOUT_CLASSIFICATION	8.62183203903563E-5	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9997411438007444	WITHOUT_CLASSIFICATION	2.5885619925555896E-4	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9997411438007444	WITHOUT_CLASSIFICATION	2.5885619925555896E-4	DOCUMENTATION
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9997339298469398	WITHOUT_CLASSIFICATION	2.6607015306024783E-4	DOCUMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9997967682564342	WITHOUT_CLASSIFICATION	2.0323174356587362E-4	DOCUMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.999676047052558	WITHOUT_CLASSIFICATION	3.239529474420107E-4	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999727490193114	WITHOUT_CLASSIFICATION	2.7250980688594563E-5	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999727490193114	WITHOUT_CLASSIFICATION	2.7250980688594563E-5	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.999963976301883	WITHOUT_CLASSIFICATION	3.6023698116959664E-5	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999540102741834	WITHOUT_CLASSIFICATION	4.598972581653081E-5	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999540102741834	WITHOUT_CLASSIFICATION	4.598972581653081E-5	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999199663529879	WITHOUT_CLASSIFICATION	8.003364701212339E-5	DOCUMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999502220824397	WITHOUT_CLASSIFICATION	4.977791756030874E-5	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999665799096694	WITHOUT_CLASSIFICATION	3.3420090330590835E-5	DOCUMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// MUTABLE	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// TODO:	WITHOUT_CLASSIFICATION	0.9866272798140003	WITHOUT_CLASSIFICATION	0.01337272018599971	DOCUMENTATION
// ID	WITHOUT_CLASSIFICATION	0.9998549272765431	WITHOUT_CLASSIFICATION	1.450727234568129E-4	DOCUMENTATION
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999170924442676	WITHOUT_CLASSIFICATION	8.290755573239188E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// Primary key constraint	WITHOUT_CLASSIFICATION	0.99990719295771	WITHOUT_CLASSIFICATION	9.280704228996421E-5	DOCUMENTATION
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9998593824763758	WITHOUT_CLASSIFICATION	1.4061752362413643E-4	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999705585696986	WITHOUT_CLASSIFICATION	2.944143030142407E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9998644583787172	WITHOUT_CLASSIFICATION	1.355416212828129E-4	DOCUMENTATION
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999838645091252	WITHOUT_CLASSIFICATION	1.613549087477675E-5	DOCUMENTATION
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// IMPORT	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999054736171703	WITHOUT_CLASSIFICATION	9.452638282974506E-5	DOCUMENTATION
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999054736171703	WITHOUT_CLASSIFICATION	9.452638282974506E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9998275487854429	WITHOUT_CLASSIFICATION	1.7245121455714398E-4	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999665799096694	WITHOUT_CLASSIFICATION	3.3420090330590835E-5	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9998341189219279	WITHOUT_CLASSIFICATION	1.6588107807208186E-4	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.9998288612076422	WITHOUT_CLASSIFICATION	1.711387923577877E-4	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9998275487854429	WITHOUT_CLASSIFICATION	1.7245121455714398E-4	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9998341189219279	WITHOUT_CLASSIFICATION	1.6588107807208186E-4	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9998713881138098	WITHOUT_CLASSIFICATION	1.2861188619013524E-4	DOCUMENTATION
// TABLENAME	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9998713881138098	WITHOUT_CLASSIFICATION	1.2861188619013524E-4	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// column index	WITHOUT_CLASSIFICATION	0.9998330723357604	WITHOUT_CLASSIFICATION	1.6692766423955703E-4	DOCUMENTATION
//column unique-key	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9999869050566238	WITHOUT_CLASSIFICATION	1.3094943376293201E-5	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999329436508791	WITHOUT_CLASSIFICATION	6.705634912087733E-5	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999881346089454	WITHOUT_CLASSIFICATION	1.1865391054575146E-5	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999294666906842	WITHOUT_CLASSIFICATION	7.053330931586076E-5	DOCUMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999697722759859	WITHOUT_CLASSIFICATION	3.0227724013994805E-5	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999806224989655	WITHOUT_CLASSIFICATION	1.93775010345833E-5	DOCUMENTATION
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999294666906842	WITHOUT_CLASSIFICATION	7.053330931586076E-5	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9996703714190945	WITHOUT_CLASSIFICATION	3.296285809054615E-4	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9998275487854429	WITHOUT_CLASSIFICATION	1.7245121455714398E-4	DOCUMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999299050612179	WITHOUT_CLASSIFICATION	7.009493878212453E-5	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.9999411711202452	WITHOUT_CLASSIFICATION	5.8828879754768526E-5	DOCUMENTATION
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9999619762285878	WITHOUT_CLASSIFICATION	3.802377141217759E-5	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999619690705899	WITHOUT_CLASSIFICATION	3.803092940999457E-5	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9998521601405121	WITHOUT_CLASSIFICATION	1.4783985948792642E-4	DOCUMENTATION
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999649106896557	WITHOUT_CLASSIFICATION	3.508931034431993E-5	DOCUMENTATION
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9998747374654878	WITHOUT_CLASSIFICATION	1.2526253451215682E-4	DOCUMENTATION
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9994837776703317	WITHOUT_CLASSIFICATION	5.162223296683938E-4	DOCUMENTATION
// GENERATOR	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9998276323043596	WITHOUT_CLASSIFICATION	1.7236769564038022E-4	DOCUMENTATION
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999054736171703	WITHOUT_CLASSIFICATION	9.452638282974506E-5	DOCUMENTATION
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9999605787881235	WITHOUT_CLASSIFICATION	3.942121187644733E-5	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9998644583787172	WITHOUT_CLASSIFICATION	1.355416212828129E-4	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.9999115057431014	WITHOUT_CLASSIFICATION	8.849425689863596E-5	DOCUMENTATION
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999602179998346	WITHOUT_CLASSIFICATION	3.9782000165372205E-5	DOCUMENTATION
// Bind the where	WITHOUT_CLASSIFICATION	0.9998948930037688	WITHOUT_CLASSIFICATION	1.0510699623125948E-4	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999056382566824	WITHOUT_CLASSIFICATION	9.436174331756787E-5	DOCUMENTATION
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999056382566824	WITHOUT_CLASSIFICATION	9.436174331756787E-5	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9998937274566719	WITHOUT_CLASSIFICATION	1.0627254332805582E-4	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999941962859864	WITHOUT_CLASSIFICATION	5.803714013545415E-6	DOCUMENTATION
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.999969792795214	WITHOUT_CLASSIFICATION	3.0207204785898384E-5	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.999751054286045	WITHOUT_CLASSIFICATION	2.4894571395497043E-4	DOCUMENTATION
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9995210279898555	WITHOUT_CLASSIFICATION	4.789720101444451E-4	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9995830343192038	WITHOUT_CLASSIFICATION	4.169656807962376E-4	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9995830343192038	WITHOUT_CLASSIFICATION	4.169656807962376E-4	DOCUMENTATION
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999063500870442	WITHOUT_CLASSIFICATION	9.364991295577716E-5	DOCUMENTATION
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9990064028453892	WITHOUT_CLASSIFICATION	9.935971546108568E-4	DOCUMENTATION
// Transaction settings:	WITHOUT_CLASSIFICATION	0.9999055566863958	WITHOUT_CLASSIFICATION	9.444331360428058E-5	DOCUMENTATION
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9995168820448511	WITHOUT_CLASSIFICATION	4.831179551489041E-4	DOCUMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.999515905406428	WITHOUT_CLASSIFICATION	4.840945935719993E-4	DOCUMENTATION
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999174252176275	WITHOUT_CLASSIFICATION	8.257478237246834E-5	DOCUMENTATION
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9995885982569586	WITHOUT_CLASSIFICATION	4.1140174304137234E-4	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9995585733777835	WITHOUT_CLASSIFICATION	4.414266222165663E-4	DOCUMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9997150856876269	WITHOUT_CLASSIFICATION	2.849143123730786E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9999239296099871	WITHOUT_CLASSIFICATION	7.607039001287557E-5	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9999155613403802	WITHOUT_CLASSIFICATION	8.443865961984794E-5	DOCUMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9996121336533055	WITHOUT_CLASSIFICATION	3.8786634669449576E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998940910960118	WITHOUT_CLASSIFICATION	1.0590890398825379E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998650228213348	WITHOUT_CLASSIFICATION	1.349771786652477E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.999990132677475	WITHOUT_CLASSIFICATION	9.86732252487979E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.999977352687474	WITHOUT_CLASSIFICATION	2.2647312526001923E-5	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9998625022763945	WITHOUT_CLASSIFICATION	1.3749772360538968E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999912168072838	WITHOUT_CLASSIFICATION	8.783192716295749E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9998426703443593	WITHOUT_CLASSIFICATION	1.573296556408061E-4	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9998426703443593	WITHOUT_CLASSIFICATION	1.573296556408061E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9991148167316395	WITHOUT_CLASSIFICATION	8.851832683604131E-4	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9991148167316395	WITHOUT_CLASSIFICATION	8.851832683604131E-4	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.999751054286045	WITHOUT_CLASSIFICATION	2.4894571395497043E-4	DOCUMENTATION
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9990958896044694	WITHOUT_CLASSIFICATION	9.041103955306534E-4	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9998510808973143	WITHOUT_CLASSIFICATION	1.4891910268571086E-4	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9995795678834927	WITHOUT_CLASSIFICATION	4.2043211650737405E-4	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9997837417236225	WITHOUT_CLASSIFICATION	2.1625827637754272E-4	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9998510808973143	WITHOUT_CLASSIFICATION	1.4891910268571086E-4	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9995795678834927	WITHOUT_CLASSIFICATION	4.2043211650737405E-4	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999656901848282	WITHOUT_CLASSIFICATION	3.4309815171791776E-4	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9998662734342064	WITHOUT_CLASSIFICATION	1.337265657935811E-4	DOCUMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999871559036922	WITHOUT_CLASSIFICATION	1.2844096307834545E-5	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999664346475171	WITHOUT_CLASSIFICATION	3.356535248287205E-5	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9997863258776793	WITHOUT_CLASSIFICATION	2.1367412232054412E-4	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.9996095863000712	WITHOUT_CLASSIFICATION	3.904136999287411E-4	DOCUMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9997429466994725	WITHOUT_CLASSIFICATION	2.570533005275735E-4	DOCUMENTATION
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9986681181327033	WITHOUT_CLASSIFICATION	0.0013318818672967494	DOCUMENTATION
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9992737577448498	WITHOUT_CLASSIFICATION	7.262422551502094E-4	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999164822536544	WITHOUT_CLASSIFICATION	8.351774634566288E-5	DOCUMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999242500216929	WITHOUT_CLASSIFICATION	7.574997830715365E-5	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999672847164149	WITHOUT_CLASSIFICATION	3.2715283584996985E-5	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999680609706778	WITHOUT_CLASSIFICATION	3.193902932231846E-5	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9993798920390462	WITHOUT_CLASSIFICATION	6.201079609538361E-4	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9997837417236225	WITHOUT_CLASSIFICATION	2.1625827637754272E-4	DOCUMENTATION
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9993798920390462	WITHOUT_CLASSIFICATION	6.201079609538361E-4	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9995865209400789	WITHOUT_CLASSIFICATION	4.134790599210639E-4	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9995865209400789	WITHOUT_CLASSIFICATION	4.134790599210639E-4	DOCUMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999191272837671	WITHOUT_CLASSIFICATION	8.087271623301122E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999656901848282	WITHOUT_CLASSIFICATION	3.4309815171791776E-4	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9996085593401142	WITHOUT_CLASSIFICATION	3.9144065988589376E-4	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.999996658487336	WITHOUT_CLASSIFICATION	3.341512663984695E-6	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9999088488347864	WITHOUT_CLASSIFICATION	9.115116521366662E-5	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9997817884036391	WITHOUT_CLASSIFICATION	2.1821159636095997E-4	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9998614668666499	WITHOUT_CLASSIFICATION	1.3853313335010985E-4	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999656901848282	WITHOUT_CLASSIFICATION	3.4309815171791776E-4	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9997817884036391	WITHOUT_CLASSIFICATION	2.1821159636095997E-4	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9998614668666499	WITHOUT_CLASSIFICATION	1.3853313335010985E-4	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.9993958032435258	WITHOUT_CLASSIFICATION	6.041967564740973E-4	DOCUMENTATION
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9998290272560505	WITHOUT_CLASSIFICATION	1.7097274394943857E-4	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999143433580506	WITHOUT_CLASSIFICATION	8.565664194936665E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999656901848282	WITHOUT_CLASSIFICATION	3.4309815171791776E-4	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.999656901848282	WITHOUT_CLASSIFICATION	3.4309815171791776E-4	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.9999250697684929	WITHOUT_CLASSIFICATION	7.493023150712257E-5	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999250697684929	WITHOUT_CLASSIFICATION	7.493023150712257E-5	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9995278886724299	WITHOUT_CLASSIFICATION	4.72111327570148E-4	DOCUMENTATION
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999717924383065	WITHOUT_CLASSIFICATION	2.8207561693503107E-5	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9995709529855259	WITHOUT_CLASSIFICATION	4.2904701447406463E-4	DOCUMENTATION
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999704202395834	WITHOUT_CLASSIFICATION	2.9579760416532648E-5	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999758173537509	WITHOUT_CLASSIFICATION	2.4182646249156632E-5	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999669196442961	WITHOUT_CLASSIFICATION	3.308035570396685E-5	DOCUMENTATION
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999027415462014	WITHOUT_CLASSIFICATION	9.725845379853129E-5	DOCUMENTATION
// then bind it	WITHOUT_CLASSIFICATION	0.9998781326233844	WITHOUT_CLASSIFICATION	1.2186737661555059E-4	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9998501326530581	WITHOUT_CLASSIFICATION	1.4986734694193358E-4	DOCUMENTATION
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9998121877727664	WITHOUT_CLASSIFICATION	1.8781222723370693E-4	DOCUMENTATION
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999435630639396	WITHOUT_CLASSIFICATION	5.6436936060335885E-5	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9998711382408038	WITHOUT_CLASSIFICATION	1.2886175919620698E-4	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999949880817768	WITHOUT_CLASSIFICATION	5.011918223219251E-6	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9998355946838611	WITHOUT_CLASSIFICATION	1.6440531613889906E-4	DOCUMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9995376920001582	WITHOUT_CLASSIFICATION	4.6230799984178105E-4	DOCUMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9993312392447911	WITHOUT_CLASSIFICATION	6.687607552090239E-4	DOCUMENTATION
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9995795678834927	WITHOUT_CLASSIFICATION	4.2043211650737405E-4	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9995716769416401	WITHOUT_CLASSIFICATION	4.2832305835996507E-4	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9998355946838611	WITHOUT_CLASSIFICATION	1.6440531613889906E-4	DOCUMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9997252463157976	WITHOUT_CLASSIFICATION	2.747536842024239E-4	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999893203216229	WITHOUT_CLASSIFICATION	1.0679678377108575E-5	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9994664743263971	WITHOUT_CLASSIFICATION	5.335256736027826E-4	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9997952182307513	WITHOUT_CLASSIFICATION	2.047817692487313E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999193075483142	WITHOUT_CLASSIFICATION	8.069245168577997E-5	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9998809895040023	WITHOUT_CLASSIFICATION	1.1901049599773545E-4	DOCUMENTATION
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999844045669818	WITHOUT_CLASSIFICATION	1.5595433018242108E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998611971186444	WITHOUT_CLASSIFICATION	1.388028813555711E-4	DOCUMENTATION
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9998756523845996	WITHOUT_CLASSIFICATION	1.2434761540042162E-4	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999412864558803	WITHOUT_CLASSIFICATION	5.871354411970837E-5	DOCUMENTATION
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999768993938667	WITHOUT_CLASSIFICATION	2.3100606133331273E-5	DOCUMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9997503247768085	WITHOUT_CLASSIFICATION	2.4967522319155853E-4	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.999892182251014	WITHOUT_CLASSIFICATION	1.0781774898608705E-4	DOCUMENTATION
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999259352026532	WITHOUT_CLASSIFICATION	7.406479734691976E-5	DOCUMENTATION
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9999813713999944	WITHOUT_CLASSIFICATION	1.8628600005548293E-5	DOCUMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9998340413997022	WITHOUT_CLASSIFICATION	1.6595860029767185E-4	DOCUMENTATION
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999170003047085	WITHOUT_CLASSIFICATION	8.29996952915526E-5	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999567765141466	WITHOUT_CLASSIFICATION	4.322348585342137E-5	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9991444363039851	WITHOUT_CLASSIFICATION	8.555636960150406E-4	DOCUMENTATION
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9997873630953087	WITHOUT_CLASSIFICATION	2.1263690469134182E-4	DOCUMENTATION
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999092832674881	WITHOUT_CLASSIFICATION	9.071673251192513E-5	DOCUMENTATION
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999092832674881	WITHOUT_CLASSIFICATION	9.071673251192513E-5	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998844971950017	WITHOUT_CLASSIFICATION	1.1550280499828717E-4	DOCUMENTATION
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592172733479	WITHOUT_CLASSIFICATION	1.407827266521986E-4	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998815781320345	WITHOUT_CLASSIFICATION	1.1842186796550058E-4	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998815781320345	WITHOUT_CLASSIFICATION	1.1842186796550058E-4	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998815781320345	WITHOUT_CLASSIFICATION	1.1842186796550058E-4	DOCUMENTATION
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998815781320345	WITHOUT_CLASSIFICATION	1.1842186796550058E-4	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9994133462488475	WITHOUT_CLASSIFICATION	5.866537511525451E-4	DOCUMENTATION
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9997083629431257	WITHOUT_CLASSIFICATION	2.916370568743731E-4	DOCUMENTATION
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998929173835717	WITHOUT_CLASSIFICATION	1.0708261642826457E-4	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999898487704684	WITHOUT_CLASSIFICATION	1.015122953159283E-4	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998818557816325	WITHOUT_CLASSIFICATION	1.1814421836753364E-4	DOCUMENTATION
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999080355819078	WITHOUT_CLASSIFICATION	9.196441809218964E-5	DOCUMENTATION
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998815781320345	WITHOUT_CLASSIFICATION	1.1842186796550058E-4	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998815781320345	WITHOUT_CLASSIFICATION	1.1842186796550058E-4	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998815781320345	WITHOUT_CLASSIFICATION	1.1842186796550058E-4	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998815781320345	WITHOUT_CLASSIFICATION	1.1842186796550058E-4	DOCUMENTATION
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999417795069478	WITHOUT_CLASSIFICATION	5.8220493052257864E-5	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.999966917583478	WITHOUT_CLASSIFICATION	3.30824165220047E-5	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999555727634097	WITHOUT_CLASSIFICATION	4.4427236590368024E-5	DOCUMENTATION
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9998552111648407	WITHOUT_CLASSIFICATION	1.4478883515926978E-4	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9995460558219403	WITHOUT_CLASSIFICATION	4.539441780597736E-4	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9996301603992847	WITHOUT_CLASSIFICATION	3.698396007153461E-4	DOCUMENTATION
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.9993958032435258	WITHOUT_CLASSIFICATION	6.041967564740973E-4	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999054736171703	WITHOUT_CLASSIFICATION	9.452638282974506E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998611971186444	WITHOUT_CLASSIFICATION	1.388028813555711E-4	DOCUMENTATION
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999064496243336	WITHOUT_CLASSIFICATION	9.3550375666376E-5	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9999335228435366	WITHOUT_CLASSIFICATION	6.647715646338154E-5	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9999477895123235	WITHOUT_CLASSIFICATION	5.221048767648685E-5	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9999165538132524	WITHOUT_CLASSIFICATION	8.344618674762455E-5	DOCUMENTATION
// HHH-2300	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9999382477733316	WITHOUT_CLASSIFICATION	6.175222666837727E-5	DOCUMENTATION
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998647428656792	WITHOUT_CLASSIFICATION	1.3525713432087472E-4	DOCUMENTATION
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999917237956539	WITHOUT_CLASSIFICATION	8.276204346100868E-5	DOCUMENTATION
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592417824927	WITHOUT_CLASSIFICATION	1.4075821750722406E-4	DOCUMENTATION
// not null is implicit	WITHOUT_CLASSIFICATION	0.9999198403950073	WITHOUT_CLASSIFICATION	8.015960499280115E-5	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.999736759502894	WITHOUT_CLASSIFICATION	2.6324049710601134E-4	DOCUMENTATION
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.9999233126577974	WITHOUT_CLASSIFICATION	7.66873422026706E-5	DOCUMENTATION
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9998869918725076	WITHOUT_CLASSIFICATION	1.130081274922792E-4	DOCUMENTATION
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999894483164783	WITHOUT_CLASSIFICATION	1.055168352169861E-4	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999396834493911	WITHOUT_CLASSIFICATION	6.0316550608824976E-5	DOCUMENTATION
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.999903639790882	WITHOUT_CLASSIFICATION	9.636020911804999E-5	DOCUMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9998777733807691	WITHOUT_CLASSIFICATION	1.2222661923085514E-4	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999117839149252	WITHOUT_CLASSIFICATION	8.821608507485005E-5	DOCUMENTATION
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9984242243918857	WITHOUT_CLASSIFICATION	0.0015757756081142811	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9999574009522625	WITHOUT_CLASSIFICATION	4.259904773761493E-5	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9999393294340815	WITHOUT_CLASSIFICATION	6.0670565918550865E-5	DOCUMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9998368442535848	WITHOUT_CLASSIFICATION	1.631557464152308E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998611971186444	WITHOUT_CLASSIFICATION	1.388028813555711E-4	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9995460558219403	WITHOUT_CLASSIFICATION	4.539441780597736E-4	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.999988891404726	WITHOUT_CLASSIFICATION	1.1108595273944701E-5	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999289710499751	WITHOUT_CLASSIFICATION	7.102895002479853E-5	DOCUMENTATION
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999248482716152	WITHOUT_CLASSIFICATION	7.515172838480351E-5	DOCUMENTATION
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999555727634097	WITHOUT_CLASSIFICATION	4.4427236590368024E-5	DOCUMENTATION
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999374510955062	WITHOUT_CLASSIFICATION	6.254890449371483E-5	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9993792443378419	WITHOUT_CLASSIFICATION	6.207556621581517E-4	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9997694246669133	WITHOUT_CLASSIFICATION	2.3057533308674604E-4	DOCUMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9997877843541385	WITHOUT_CLASSIFICATION	2.122156458614918E-4	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9997799169877205	WITHOUT_CLASSIFICATION	2.2008301227939927E-4	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9998600082836634	WITHOUT_CLASSIFICATION	1.399917163365175E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998611971186444	WITHOUT_CLASSIFICATION	1.388028813555711E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998611971186444	WITHOUT_CLASSIFICATION	1.388028813555711E-4	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999678885173852	WITHOUT_CLASSIFICATION	3.2111482614824045E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9998056298951239	WITHOUT_CLASSIFICATION	1.9437010487608394E-4	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9998862243285416	WITHOUT_CLASSIFICATION	1.1377567145831647E-4	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9993958032435258	WITHOUT_CLASSIFICATION	6.041967564740973E-4	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999555727634097	WITHOUT_CLASSIFICATION	4.4427236590368024E-5	DOCUMENTATION
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9998662710939581	WITHOUT_CLASSIFICATION	1.3372890604195924E-4	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9998520343704702	WITHOUT_CLASSIFICATION	1.4796562952978687E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998611971186444	WITHOUT_CLASSIFICATION	1.388028813555711E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999353406458891	WITHOUT_CLASSIFICATION	6.465935411095484E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9989567945759744	WITHOUT_CLASSIFICATION	0.0010432054240255117	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9998392661215247	WITHOUT_CLASSIFICATION	1.6073387847521708E-4	DOCUMENTATION
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999586515198412	WITHOUT_CLASSIFICATION	4.134848015892342E-5	DOCUMENTATION
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9997951419337693	WITHOUT_CLASSIFICATION	2.0485806623061315E-4	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999120849239205	WITHOUT_CLASSIFICATION	8.791507607950996E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.999832611485693	WITHOUT_CLASSIFICATION	1.673885143069774E-4	DOCUMENTATION
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.999148264948201	WITHOUT_CLASSIFICATION	8.517350517989528E-4	DOCUMENTATION
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9995341420803259	WITHOUT_CLASSIFICATION	4.6585791967408555E-4	DOCUMENTATION
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999555727634097	WITHOUT_CLASSIFICATION	4.4427236590368024E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9995460558219403	WITHOUT_CLASSIFICATION	4.539441780597736E-4	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999859621304975	WITHOUT_CLASSIFICATION	1.4037869502619334E-5	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999750748337232	WITHOUT_CLASSIFICATION	2.4925166276833705E-5	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9998595293132186	WITHOUT_CLASSIFICATION	1.4047068678145795E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9995460558219403	WITHOUT_CLASSIFICATION	4.539441780597736E-4	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9998770627068206	WITHOUT_CLASSIFICATION	1.2293729317942336E-4	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999353406458891	WITHOUT_CLASSIFICATION	6.465935411095484E-5	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9997868449468652	WITHOUT_CLASSIFICATION	2.1315505313472603E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998611971186444	WITHOUT_CLASSIFICATION	1.388028813555711E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9992804239003379	WITHOUT_CLASSIFICATION	7.195760996622161E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998611971186444	WITHOUT_CLASSIFICATION	1.388028813555711E-4	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999791137011668	WITHOUT_CLASSIFICATION	2.0886298833274054E-5	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9997799169877205	WITHOUT_CLASSIFICATION	2.2008301227939927E-4	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9998888368209276	WITHOUT_CLASSIFICATION	1.1116317907249853E-4	DOCUMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.999920310037093	WITHOUT_CLASSIFICATION	7.968996290690656E-5	DOCUMENTATION
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9996462825245814	WITHOUT_CLASSIFICATION	3.537174754186202E-4	DOCUMENTATION
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999721364968264	WITHOUT_CLASSIFICATION	2.7863503173717E-5	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999959111618624	WITHOUT_CLASSIFICATION	4.088838137632435E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998611971186444	WITHOUT_CLASSIFICATION	1.388028813555711E-4	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9995460558219403	WITHOUT_CLASSIFICATION	4.539441780597736E-4	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9998600082836634	WITHOUT_CLASSIFICATION	1.399917163365175E-4	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999678885173852	WITHOUT_CLASSIFICATION	3.2111482614824045E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998803060349704	WITHOUT_CLASSIFICATION	1.19693965029666E-4	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998637510033537	WITHOUT_CLASSIFICATION	1.3624899664627568E-4	DOCUMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9998769944563479	WITHOUT_CLASSIFICATION	1.2300554365215872E-4	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9998199692705433	WITHOUT_CLASSIFICATION	1.8003072945667673E-4	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9999647180917942	WITHOUT_CLASSIFICATION	3.528190820572387E-5	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998815781320345	WITHOUT_CLASSIFICATION	1.1842186796550058E-4	DOCUMENTATION
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999398518671776	WITHOUT_CLASSIFICATION	6.0148132822385415E-5	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9998856857338957	WITHOUT_CLASSIFICATION	1.1431426610421359E-4	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9998927851668764	WITHOUT_CLASSIFICATION	1.0721483312359913E-4	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9998698427055052	WITHOUT_CLASSIFICATION	1.3015729449476936E-4	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999054736171703	WITHOUT_CLASSIFICATION	9.452638282974506E-5	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998815781320345	WITHOUT_CLASSIFICATION	1.1842186796550058E-4	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998815781320345	WITHOUT_CLASSIFICATION	1.1842186796550058E-4	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999898487704684	WITHOUT_CLASSIFICATION	1.015122953159283E-4	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999054736171703	WITHOUT_CLASSIFICATION	9.452638282974506E-5	DOCUMENTATION
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9998611019811509	WITHOUT_CLASSIFICATION	1.3889801884917454E-4	DOCUMENTATION
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9998719776460857	WITHOUT_CLASSIFICATION	1.280223539142933E-4	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998821975041419	WITHOUT_CLASSIFICATION	1.1780249585803849E-4	DOCUMENTATION
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998815781320345	WITHOUT_CLASSIFICATION	1.1842186796550058E-4	DOCUMENTATION
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999699176587376	WITHOUT_CLASSIFICATION	3.008234126245505E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998611971186444	WITHOUT_CLASSIFICATION	1.388028813555711E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998611971186444	WITHOUT_CLASSIFICATION	1.388028813555711E-4	DOCUMENTATION
/*<String>*/	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998818557816325	WITHOUT_CLASSIFICATION	1.1814421836753364E-4	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998815781320345	WITHOUT_CLASSIFICATION	1.1842186796550058E-4	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999117839149252	WITHOUT_CLASSIFICATION	8.821608507485005E-5	DOCUMENTATION
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9997681183007172	WITHOUT_CLASSIFICATION	2.3188169928286485E-4	DOCUMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9998845644255109	WITHOUT_CLASSIFICATION	1.1543557448908652E-4	DOCUMENTATION
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999728039853456	WITHOUT_CLASSIFICATION	2.719601465431368E-5	DOCUMENTATION
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.999924583697957	WITHOUT_CLASSIFICATION	7.541630204308614E-5	DOCUMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999427647013327	WITHOUT_CLASSIFICATION	5.7235298667321875E-5	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9993407386152414	WITHOUT_CLASSIFICATION	6.592613847585801E-4	DOCUMENTATION
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9995102877935341	WITHOUT_CLASSIFICATION	4.897122064659068E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999844045669818	WITHOUT_CLASSIFICATION	1.5595433018242108E-5	DOCUMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999288701147785	WITHOUT_CLASSIFICATION	7.112988522148398E-5	DOCUMENTATION
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999759278177754	WITHOUT_CLASSIFICATION	2.4072182224628506E-5	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999254072121174	WITHOUT_CLASSIFICATION	7.45927878825351E-5	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9998715563821636	WITHOUT_CLASSIFICATION	1.2844361783628994E-4	DOCUMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999638414862931	WITHOUT_CLASSIFICATION	3.615851370678847E-5	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9995162356383026	WITHOUT_CLASSIFICATION	4.8376436169737016E-4	DOCUMENTATION
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999233190591492	WITHOUT_CLASSIFICATION	7.668094085081233E-5	DOCUMENTATION
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999231793283611	WITHOUT_CLASSIFICATION	7.682067163890054E-5	DOCUMENTATION
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998629224899451	WITHOUT_CLASSIFICATION	1.3707751005488986E-4	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999686384439385	WITHOUT_CLASSIFICATION	3.136155606158523E-5	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998641352809479	WITHOUT_CLASSIFICATION	1.3586471905214508E-4	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998639688143005	WITHOUT_CLASSIFICATION	1.3603118569944722E-4	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998856418566242	WITHOUT_CLASSIFICATION	1.143581433757478E-4	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999000347547844	WITHOUT_CLASSIFICATION	9.996524521564722E-5	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.999965723212883	WITHOUT_CLASSIFICATION	3.427678711705006E-5	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999394662253016	WITHOUT_CLASSIFICATION	6.0533774698312476E-5	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998856418566242	WITHOUT_CLASSIFICATION	1.143581433757478E-4	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999395672553925	WITHOUT_CLASSIFICATION	6.0432744607546574E-5	DOCUMENTATION
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998501818453112	WITHOUT_CLASSIFICATION	1.4981815468880207E-4	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998635330805663	WITHOUT_CLASSIFICATION	1.3646691943379274E-4	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999327974153575	WITHOUT_CLASSIFICATION	6.720258464257796E-5	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999880013666896	WITHOUT_CLASSIFICATION	1.199863331038447E-5	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9998792330308618	WITHOUT_CLASSIFICATION	1.2076696913824497E-4	DOCUMENTATION
// continue loop	WITHOUT_CLASSIFICATION	0.9998284033970747	WITHOUT_CLASSIFICATION	1.7159660292541382E-4	DOCUMENTATION
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9997602502824338	WITHOUT_CLASSIFICATION	2.3974971756617606E-4	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9997602502824338	WITHOUT_CLASSIFICATION	2.3974971756617606E-4	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999419441479871	WITHOUT_CLASSIFICATION	5.80558520129564E-5	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9999160852800477	WITHOUT_CLASSIFICATION	8.391471995227536E-5	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9998604100986366	WITHOUT_CLASSIFICATION	1.3958990136343698E-4	DOCUMENTATION
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999645091753074	WITHOUT_CLASSIFICATION	3.549082469261751E-5	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9999965085105802	WITHOUT_CLASSIFICATION	3.491489419838692E-6	DOCUMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9999418736377238	WITHOUT_CLASSIFICATION	5.8126362276044665E-5	DOCUMENTATION
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999689049206182	WITHOUT_CLASSIFICATION	3.109507938190089E-5	DOCUMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999828109987837	WITHOUT_CLASSIFICATION	1.7189001216211164E-5	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999431002008582	WITHOUT_CLASSIFICATION	5.689979914169191E-5	DOCUMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999729539932596	WITHOUT_CLASSIFICATION	2.7046006740461055E-5	DOCUMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999752083980848	WITHOUT_CLASSIFICATION	2.4791601915182024E-5	DOCUMENTATION
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999751775822203	WITHOUT_CLASSIFICATION	2.4822417779637234E-5	DOCUMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999763416463069	WITHOUT_CLASSIFICATION	2.3658353693085988E-5	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9999491236840287	WITHOUT_CLASSIFICATION	5.087631597124249E-5	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9994932368391524	WITHOUT_CLASSIFICATION	5.067631608477092E-4	DOCUMENTATION
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.999605280733926	WITHOUT_CLASSIFICATION	3.94719266074E-4	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9996272090539938	WITHOUT_CLASSIFICATION	3.7279094600608587E-4	DOCUMENTATION
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9995247257644133	WITHOUT_CLASSIFICATION	4.752742355866718E-4	DOCUMENTATION
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9999024860227412	WITHOUT_CLASSIFICATION	9.75139772588196E-5	DOCUMENTATION
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9998722396896208	WITHOUT_CLASSIFICATION	1.2776031037927728E-4	DOCUMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999347296488772	WITHOUT_CLASSIFICATION	6.527035112277211E-5	DOCUMENTATION
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9998724972595433	WITHOUT_CLASSIFICATION	1.2750274045671532E-4	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9999789988557238	WITHOUT_CLASSIFICATION	2.1001144276190415E-5	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999385395476554	WITHOUT_CLASSIFICATION	6.146045234455264E-5	DOCUMENTATION
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999302677802875	WITHOUT_CLASSIFICATION	6.973221971249463E-5	DOCUMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9998032985808754	WITHOUT_CLASSIFICATION	1.9670141912458904E-4	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.999932456047838	WITHOUT_CLASSIFICATION	6.754395216195411E-5	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9998970185479218	WITHOUT_CLASSIFICATION	1.0298145207815136E-4	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9999546796736468	WITHOUT_CLASSIFICATION	4.532032635321812E-5	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9998701368890764	WITHOUT_CLASSIFICATION	1.2986311092344342E-4	DOCUMENTATION
//unwrap the object	WITHOUT_CLASSIFICATION	0.9994971345776424	WITHOUT_CLASSIFICATION	5.028654223576198E-4	DOCUMENTATION
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9996503807162928	WITHOUT_CLASSIFICATION	3.4961928370722114E-4	DOCUMENTATION
//return the proxied object	WITHOUT_CLASSIFICATION	0.9997340280143934	WITHOUT_CLASSIFICATION	2.659719856065875E-4	DOCUMENTATION
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9994776779746853	WITHOUT_CLASSIFICATION	5.223220253145539E-4	DOCUMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.9998277268449929	WITHOUT_CLASSIFICATION	1.7227315500712787E-4	DOCUMENTATION
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999177338249476	WITHOUT_CLASSIFICATION	8.226617505224672E-5	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9999453083507444	WITHOUT_CLASSIFICATION	5.4691649255653074E-5	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9999239354418672	WITHOUT_CLASSIFICATION	7.60645581329027E-5	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9997584392570704	WITHOUT_CLASSIFICATION	2.4156074292951132E-4	DOCUMENTATION
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999300331440315	WITHOUT_CLASSIFICATION	6.996685596849561E-5	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9993958032435258	WITHOUT_CLASSIFICATION	6.041967564740973E-4	DOCUMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9993958032435258	WITHOUT_CLASSIFICATION	6.041967564740973E-4	DOCUMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999017457248529	WITHOUT_CLASSIFICATION	9.82542751471018E-5	DOCUMENTATION
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9988207317217032	WITHOUT_CLASSIFICATION	0.0011792682782968387	DOCUMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9997788743457079	WITHOUT_CLASSIFICATION	2.21125654292138E-4	DOCUMENTATION
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.999951331610681	WITHOUT_CLASSIFICATION	4.866838931898036E-5	DOCUMENTATION
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.999979596595648	WITHOUT_CLASSIFICATION	2.0403404351973912E-5	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.999255470978652	WITHOUT_CLASSIFICATION	7.44529021348032E-4	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.999302034290569	WITHOUT_CLASSIFICATION	6.979657094310282E-4	DOCUMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9994626602047115	WITHOUT_CLASSIFICATION	5.373397952884937E-4	DOCUMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9995886665108806	WITHOUT_CLASSIFICATION	4.113334891192985E-4	DOCUMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9998261437729928	WITHOUT_CLASSIFICATION	1.7385622700720084E-4	DOCUMENTATION
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.999348020873791	WITHOUT_CLASSIFICATION	6.519791262089396E-4	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.99901639191584	WITHOUT_CLASSIFICATION	9.836080841599322E-4	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9995795678834927	WITHOUT_CLASSIFICATION	4.2043211650737405E-4	DOCUMENTATION
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9992874957637875	WITHOUT_CLASSIFICATION	7.125042362125516E-4	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9991428865805861	WITHOUT_CLASSIFICATION	8.571134194139119E-4	DOCUMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9996820591053363	WITHOUT_CLASSIFICATION	3.179408946637387E-4	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9998940116166906	WITHOUT_CLASSIFICATION	1.0598838330938055E-4	DOCUMENTATION
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999902064053913	WITHOUT_CLASSIFICATION	9.793594608679222E-6	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999455551553665	WITHOUT_CLASSIFICATION	5.444484463357998E-5	DOCUMENTATION
// We've been here before	WITHOUT_CLASSIFICATION	0.999933883921032	WITHOUT_CLASSIFICATION	6.611607896794295E-5	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9998918336934256	WITHOUT_CLASSIFICATION	1.0816630657431447E-4	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999455551553665	WITHOUT_CLASSIFICATION	5.444484463357998E-5	DOCUMENTATION
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999693786661285	WITHOUT_CLASSIFICATION	3.0621333871524195E-5	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9998944498836692	WITHOUT_CLASSIFICATION	1.0555011633079774E-4	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9984895889271777	WITHOUT_CLASSIFICATION	0.0015104110728224173	DOCUMENTATION
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9985628555150334	WITHOUT_CLASSIFICATION	0.0014371444849666714	DOCUMENTATION
// force initialize!	WITHOUT_CLASSIFICATION	0.999828512750043	WITHOUT_CLASSIFICATION	1.714872499569719E-4	DOCUMENTATION
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999636668777727	WITHOUT_CLASSIFICATION	3.633312222716797E-5	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9998595384590502	WITHOUT_CLASSIFICATION	1.4046154094983553E-4	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999787847754189	WITHOUT_CLASSIFICATION	2.1215224581128782E-5	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.999859643706597	WITHOUT_CLASSIFICATION	1.403562934031621E-4	DOCUMENTATION
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999661982994223	WITHOUT_CLASSIFICATION	3.380170057772267E-5	DOCUMENTATION
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999533351176483	WITHOUT_CLASSIFICATION	4.666488235167256E-5	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9998114030060952	WITHOUT_CLASSIFICATION	1.8859699390488048E-4	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999923820352572	WITHOUT_CLASSIFICATION	7.617964742850066E-6	DOCUMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999862066636114	WITHOUT_CLASSIFICATION	1.3793336388540815E-5	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9979347649523973	WITHOUT_CLASSIFICATION	0.0020652350476027	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999849357288125	WITHOUT_CLASSIFICATION	1.5064271187597216E-5	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
//re-snapshot	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9998258194212677	WITHOUT_CLASSIFICATION	1.741805787322292E-4	DOCUMENTATION
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9991146396175627	WITHOUT_CLASSIFICATION	8.853603824372562E-4	DOCUMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999753695162323	WITHOUT_CLASSIFICATION	2.4630483767708153E-5	DOCUMENTATION
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999597612095092	WITHOUT_CLASSIFICATION	4.0238790490751744E-5	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999793909251216	WITHOUT_CLASSIFICATION	2.0609074878443268E-5	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9999943857795314	WITHOUT_CLASSIFICATION	5.614220468581096E-6	DOCUMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999565082090793	WITHOUT_CLASSIFICATION	4.349179092061571E-5	DOCUMENTATION
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9993155361864292	WITHOUT_CLASSIFICATION	6.84463813570812E-4	DOCUMENTATION
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9996582696915854	WITHOUT_CLASSIFICATION	3.4173030841457057E-4	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9996678910653133	WITHOUT_CLASSIFICATION	3.321089346866564E-4	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9995162356383026	WITHOUT_CLASSIFICATION	4.8376436169737016E-4	DOCUMENTATION
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9996365833870947	WITHOUT_CLASSIFICATION	3.6341661290532245E-4	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9997543493170742	WITHOUT_CLASSIFICATION	2.4565068292582286E-4	DOCUMENTATION
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9997800068340347	WITHOUT_CLASSIFICATION	2.1999316596527763E-4	DOCUMENTATION
//do the test	WITHOUT_CLASSIFICATION	0.9995920444418023	WITHOUT_CLASSIFICATION	4.07955558197747E-4	DOCUMENTATION
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999943341832185	WITHOUT_CLASSIFICATION	5.665816781544682E-6	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9995717640839042	WITHOUT_CLASSIFICATION	4.2823591609582806E-4	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999525262832291	WITHOUT_CLASSIFICATION	4.7473716771039424E-5	DOCUMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999452506294905	WITHOUT_CLASSIFICATION	5.4749370509443154E-5	DOCUMENTATION
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999115685165523	WITHOUT_CLASSIFICATION	8.843148344777118E-5	DOCUMENTATION
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999116427802615	WITHOUT_CLASSIFICATION	8.835721973846474E-5	DOCUMENTATION
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9998123537082009	WITHOUT_CLASSIFICATION	1.876462917992471E-4	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999839472557186	WITHOUT_CLASSIFICATION	1.605274428148477E-5	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999456709127043	WITHOUT_CLASSIFICATION	5.4329087295656056E-5	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9995011601757886	WITHOUT_CLASSIFICATION	4.988398242113867E-4	DOCUMENTATION
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9989077568245243	WITHOUT_CLASSIFICATION	0.0010922431754757686	DOCUMENTATION
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9997438354334078	WITHOUT_CLASSIFICATION	2.5616456659222704E-4	DOCUMENTATION
//count++;	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9996639158858742	WITHOUT_CLASSIFICATION	3.360841141257888E-4	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9996948893705018	WITHOUT_CLASSIFICATION	3.051106294982503E-4	DOCUMENTATION
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.998922133295114	WITHOUT_CLASSIFICATION	0.0010778667048859164	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9988937817304421	WITHOUT_CLASSIFICATION	0.001106218269557895	DOCUMENTATION
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.99969197061719	WITHOUT_CLASSIFICATION	3.0802938281000996E-4	DOCUMENTATION
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999702036627033	WITHOUT_CLASSIFICATION	2.9796337296775065E-5	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9998956355899445	WITHOUT_CLASSIFICATION	1.0436441005542925E-4	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9998712769694292	WITHOUT_CLASSIFICATION	1.2872303057082744E-4	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.9998205527330536	WITHOUT_CLASSIFICATION	1.7944726694651806E-4	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999654495010895	WITHOUT_CLASSIFICATION	3.455049891060034E-5	DOCUMENTATION
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.999989203817814	WITHOUT_CLASSIFICATION	1.0796182185890095E-5	DOCUMENTATION
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999675832402155	WITHOUT_CLASSIFICATION	3.2416759784483825E-5	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9998888120837195	WITHOUT_CLASSIFICATION	1.1118791628062325E-4	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998938707704275	WITHOUT_CLASSIFICATION	1.0612922957262363E-4	DOCUMENTATION
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998621958486634	WITHOUT_CLASSIFICATION	1.3780415133657158E-4	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998740255378767	WITHOUT_CLASSIFICATION	1.259744621232509E-4	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9999973653831269	WITHOUT_CLASSIFICATION	2.6346168730452767E-6	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999194924608393	WITHOUT_CLASSIFICATION	8.050753916069511E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9997852317812298	WITHOUT_CLASSIFICATION	2.1476821877027723E-4	DOCUMENTATION
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9999945522217626	WITHOUT_CLASSIFICATION	5.447778237375721E-6	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9998762754004498	WITHOUT_CLASSIFICATION	1.2372459955033727E-4	DOCUMENTATION
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998938707704275	WITHOUT_CLASSIFICATION	1.0612922957262363E-4	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9998762754004498	WITHOUT_CLASSIFICATION	1.2372459955033727E-4	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9998164958351695	WITHOUT_CLASSIFICATION	1.8350416483037737E-4	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999506432270632	WITHOUT_CLASSIFICATION	4.935677293674205E-5	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9998594202901596	WITHOUT_CLASSIFICATION	1.405797098404545E-4	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999525632835871	WITHOUT_CLASSIFICATION	4.743671641295562E-5	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999603452026464	WITHOUT_CLASSIFICATION	3.965479735353002E-5	DOCUMENTATION
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9998530580633488	WITHOUT_CLASSIFICATION	1.4694193665123697E-4	DOCUMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999548277582113	WITHOUT_CLASSIFICATION	4.517224178876286E-5	DOCUMENTATION
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999580349050243	WITHOUT_CLASSIFICATION	4.196509497557496E-5	DOCUMENTATION
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.999985035553814	WITHOUT_CLASSIFICATION	1.4964446185833614E-5	DOCUMENTATION
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9994157281356804	WITHOUT_CLASSIFICATION	5.842718643196012E-4	DOCUMENTATION
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999257155008392	WITHOUT_CLASSIFICATION	7.428449916085434E-5	DOCUMENTATION
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9999459588516675	WITHOUT_CLASSIFICATION	5.40411483325018E-5	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.999049070843111	WITHOUT_CLASSIFICATION	9.509291568890209E-4	DOCUMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9999879256489312	WITHOUT_CLASSIFICATION	1.2074351068888991E-5	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.9994308244373552	WITHOUT_CLASSIFICATION	5.691755626447536E-4	DOCUMENTATION
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9999768912646241	WITHOUT_CLASSIFICATION	2.3108735376021212E-5	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9994666088969187	WITHOUT_CLASSIFICATION	5.333911030813289E-4	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9994666088969187	WITHOUT_CLASSIFICATION	5.333911030813289E-4	DOCUMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9998261437729928	WITHOUT_CLASSIFICATION	1.7385622700720084E-4	DOCUMENTATION
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999567376831302	WITHOUT_CLASSIFICATION	4.326231686971637E-5	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999905269725583	WITHOUT_CLASSIFICATION	9.473027441791051E-6	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999930627515803	WITHOUT_CLASSIFICATION	6.93724841981171E-6	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999965956184342	WITHOUT_CLASSIFICATION	3.4043815656939473E-6	DOCUMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999967103712074	WITHOUT_CLASSIFICATION	3.2896287925801795E-6	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9999249113215456	WITHOUT_CLASSIFICATION	7.508867845447581E-5	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9996888723544645	WITHOUT_CLASSIFICATION	3.111276455355895E-4	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999452322480866	WITHOUT_CLASSIFICATION	5.476775191329989E-5	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9996532977797546	WITHOUT_CLASSIFICATION	3.4670222024539153E-4	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999078024341316	WITHOUT_CLASSIFICATION	9.219756586849107E-5	DOCUMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999002503796157	WITHOUT_CLASSIFICATION	9.974962038427434E-5	DOCUMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9998574421994892	WITHOUT_CLASSIFICATION	1.4255780051082115E-4	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999898383967116	WITHOUT_CLASSIFICATION	1.0161603288389949E-5	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999216222718115	WITHOUT_CLASSIFICATION	7.837772818856983E-5	DOCUMENTATION
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9998567939569896	WITHOUT_CLASSIFICATION	1.4320604301042828E-4	DOCUMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9998308037724651	WITHOUT_CLASSIFICATION	1.6919622753480785E-4	DOCUMENTATION
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9941213215234203	WITHOUT_CLASSIFICATION	0.005878678476579821	DOCUMENTATION
//use the current version	WITHOUT_CLASSIFICATION	0.999798057196092	WITHOUT_CLASSIFICATION	2.019428039080665E-4	DOCUMENTATION
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999839722696159	WITHOUT_CLASSIFICATION	1.602773038405456E-5	DOCUMENTATION
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999162372044098	WITHOUT_CLASSIFICATION	8.376279559021987E-5	DOCUMENTATION
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9998439412747987	WITHOUT_CLASSIFICATION	1.5605872520140667E-4	DOCUMENTATION
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9999356357373639	WITHOUT_CLASSIFICATION	6.436426263610692E-5	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999266834192081	WITHOUT_CLASSIFICATION	7.331658079192958E-5	DOCUMENTATION
//even process null collections	WITHOUT_CLASSIFICATION	0.9992938851976526	WITHOUT_CLASSIFICATION	7.061148023472978E-4	DOCUMENTATION
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999810517076487	WITHOUT_CLASSIFICATION	1.8948292351224947E-5	DOCUMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9998998564623985	WITHOUT_CLASSIFICATION	1.001435376014299E-4	DOCUMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.9994569069334435	WITHOUT_CLASSIFICATION	5.43093066556542E-4	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9997908330181423	WITHOUT_CLASSIFICATION	2.091669818576945E-4	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9997048621696636	WITHOUT_CLASSIFICATION	2.9513783033643546E-4	DOCUMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9997485074553483	WITHOUT_CLASSIFICATION	2.514925446517118E-4	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9996719584216711	WITHOUT_CLASSIFICATION	3.280415783288014E-4	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9994819003952748	WITHOUT_CLASSIFICATION	5.180996047252759E-4	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9998927282247184	WITHOUT_CLASSIFICATION	1.0727177528160225E-4	DOCUMENTATION
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9997817059762794	WITHOUT_CLASSIFICATION	2.182940237207235E-4	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.999911354843604	WITHOUT_CLASSIFICATION	8.864515639588602E-5	DOCUMENTATION
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9998575028039622	WITHOUT_CLASSIFICATION	1.424971960378736E-4	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.999866715410323	WITHOUT_CLASSIFICATION	1.332845896770733E-4	DOCUMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.999941210994966	WITHOUT_CLASSIFICATION	5.878900503408022E-5	DOCUMENTATION
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.999879997533704	WITHOUT_CLASSIFICATION	1.2000246629593693E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998635475462314	WITHOUT_CLASSIFICATION	1.3645245376861157E-4	DOCUMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9992744641829259	WITHOUT_CLASSIFICATION	7.255358170741022E-4	DOCUMENTATION
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999672452614878	WITHOUT_CLASSIFICATION	3.275473851216322E-5	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9999780493230235	WITHOUT_CLASSIFICATION	2.1950676976548673E-5	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.9997786586428693	WITHOUT_CLASSIFICATION	2.2134135713060594E-4	DOCUMENTATION
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999878263683457	WITHOUT_CLASSIFICATION	1.2173631654172403E-5	DOCUMENTATION
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9998399537228772	WITHOUT_CLASSIFICATION	1.6004627712275072E-4	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9994293589105028	WITHOUT_CLASSIFICATION	5.706410894972602E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998635475462314	WITHOUT_CLASSIFICATION	1.3645245376861157E-4	DOCUMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9996382734204242	WITHOUT_CLASSIFICATION	3.617265795758063E-4	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.999940918561733	WITHOUT_CLASSIFICATION	5.908143826704241E-5	DOCUMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9998413365873648	WITHOUT_CLASSIFICATION	1.5866341263507446E-4	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9996897043188498	WITHOUT_CLASSIFICATION	3.102956811501607E-4	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9998770627068206	WITHOUT_CLASSIFICATION	1.2293729317942336E-4	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9998770627068206	WITHOUT_CLASSIFICATION	1.2293729317942336E-4	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999922506160149	WITHOUT_CLASSIFICATION	7.74938398505735E-6	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9997812386255069	WITHOUT_CLASSIFICATION	2.1876137449311156E-4	DOCUMENTATION
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9998958872686182	WITHOUT_CLASSIFICATION	1.0411273138178576E-4	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999260333937678	WITHOUT_CLASSIFICATION	7.396660623211311E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9998916789203377	WITHOUT_CLASSIFICATION	1.0832107966227207E-4	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999466718204219	WITHOUT_CLASSIFICATION	5.332817957817175E-5	DOCUMENTATION
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999645207912033	WITHOUT_CLASSIFICATION	3.5479208796558904E-5	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9995743724868367	WITHOUT_CLASSIFICATION	4.25627513163277E-4	DOCUMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999548105492158	WITHOUT_CLASSIFICATION	4.518945078430787E-5	DOCUMENTATION
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.999612967110995	WITHOUT_CLASSIFICATION	3.8703288900507365E-4	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9993836525034386	WITHOUT_CLASSIFICATION	6.163474965614492E-4	DOCUMENTATION
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9991408253229138	WITHOUT_CLASSIFICATION	8.591746770861757E-4	DOCUMENTATION
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9998818512624817	WITHOUT_CLASSIFICATION	1.1814873751828031E-4	DOCUMENTATION
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999551535084004	WITHOUT_CLASSIFICATION	4.484649159958535E-5	DOCUMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999646949670464	WITHOUT_CLASSIFICATION	3.530503295357081E-5	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999954225313582	WITHOUT_CLASSIFICATION	4.577468641777674E-6	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9997641302773086	WITHOUT_CLASSIFICATION	2.3586972269127934E-4	DOCUMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999822864219747	WITHOUT_CLASSIFICATION	1.771357802530159E-5	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9998785097555204	WITHOUT_CLASSIFICATION	1.2149024447955698E-4	DOCUMENTATION
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.9999227477716737	WITHOUT_CLASSIFICATION	7.725222832624951E-5	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9999692387697258	WITHOUT_CLASSIFICATION	3.076123027415819E-5	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9988501946420103	WITHOUT_CLASSIFICATION	0.0011498053579896785	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9996478241749989	WITHOUT_CLASSIFICATION	3.521758250011536E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9999800776133044	WITHOUT_CLASSIFICATION	1.9922386695521514E-5	DOCUMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9999670815110194	WITHOUT_CLASSIFICATION	3.29184889806427E-5	DOCUMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9998777399574557	WITHOUT_CLASSIFICATION	1.2226004254432165E-4	DOCUMENTATION
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9990233020395265	WITHOUT_CLASSIFICATION	9.766979604734205E-4	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9999939431799063	WITHOUT_CLASSIFICATION	6.056820093706708E-6	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9998777399574557	WITHOUT_CLASSIFICATION	1.2226004254432165E-4	DOCUMENTATION
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9998544577071489	WITHOUT_CLASSIFICATION	1.45542292851154E-4	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999497078634103	WITHOUT_CLASSIFICATION	5.0292136589800165E-5	DOCUMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9998790413971262	WITHOUT_CLASSIFICATION	1.2095860287367026E-4	DOCUMENTATION
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9997394670642913	WITHOUT_CLASSIFICATION	2.605329357086923E-4	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9992670596240429	WITHOUT_CLASSIFICATION	7.329403759570206E-4	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999078024341316	WITHOUT_CLASSIFICATION	9.219756586849107E-5	DOCUMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9990967691983177	WITHOUT_CLASSIFICATION	9.032308016821961E-4	DOCUMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9993407386152414	WITHOUT_CLASSIFICATION	6.592613847585801E-4	DOCUMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9993857214558919	WITHOUT_CLASSIFICATION	6.142785441082073E-4	DOCUMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9999047663677806	WITHOUT_CLASSIFICATION	9.523363221944828E-5	DOCUMENTATION
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9994796171636849	WITHOUT_CLASSIFICATION	5.203828363150797E-4	DOCUMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.999929425959999	WITHOUT_CLASSIFICATION	7.057404000098272E-5	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9991950035869579	WITHOUT_CLASSIFICATION	8.049964130420728E-4	DOCUMENTATION
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999703848096844	WITHOUT_CLASSIFICATION	2.9615190315612662E-5	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9998134532758072	WITHOUT_CLASSIFICATION	1.86546724192831E-4	DOCUMENTATION
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9998991144374335	WITHOUT_CLASSIFICATION	1.008855625664546E-4	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999538140696764	WITHOUT_CLASSIFICATION	4.618593032361246E-5	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999769211167586	WITHOUT_CLASSIFICATION	2.3078883241395832E-5	DOCUMENTATION
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.999889375741896	WITHOUT_CLASSIFICATION	1.1062425810395153E-4	DOCUMENTATION
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999472538370897	WITHOUT_CLASSIFICATION	5.274616291032364E-5	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9998650990703832	WITHOUT_CLASSIFICATION	1.34900929616783E-4	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999257328518342	WITHOUT_CLASSIFICATION	7.426714816590827E-5	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.999955684389357	WITHOUT_CLASSIFICATION	4.431561064306653E-5	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.999980782429773	WITHOUT_CLASSIFICATION	1.9217570227130934E-5	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9997234262260379	WITHOUT_CLASSIFICATION	2.765737739620275E-4	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9998408428901023	WITHOUT_CLASSIFICATION	1.5915710989760512E-4	DOCUMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9996827370592174	WITHOUT_CLASSIFICATION	3.1726294078261724E-4	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.9998314118202307	WITHOUT_CLASSIFICATION	1.6858817976919745E-4	DOCUMENTATION
// Error message constants.	WITHOUT_CLASSIFICATION	0.9998823894880338	WITHOUT_CLASSIFICATION	1.1761051196617943E-4	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998560027913124	WITHOUT_CLASSIFICATION	1.4399720868774843E-4	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998693140880187	WITHOUT_CLASSIFICATION	1.3068591198135443E-4	DOCUMENTATION
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.9999698667835856	WITHOUT_CLASSIFICATION	3.0133216414499983E-5	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9999522399360834	WITHOUT_CLASSIFICATION	4.776006391668823E-5	DOCUMENTATION
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9998214731492597	WITHOUT_CLASSIFICATION	1.7852685074024751E-4	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999113759149932	WITHOUT_CLASSIFICATION	8.862408500674012E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999113759149932	WITHOUT_CLASSIFICATION	8.862408500674012E-5	DOCUMENTATION
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9992990792301013	WITHOUT_CLASSIFICATION	7.009207698986204E-4	DOCUMENTATION
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999979144948342	WITHOUT_CLASSIFICATION	2.085505165862042E-6	DOCUMENTATION
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999476127722109	WITHOUT_CLASSIFICATION	5.2387227789139986E-5	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999770857509708	WITHOUT_CLASSIFICATION	2.2914249029201026E-5	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999544699050366	WITHOUT_CLASSIFICATION	4.553009496344089E-5	DOCUMENTATION
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999251581607645	WITHOUT_CLASSIFICATION	7.484183923545124E-5	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9998596324357114	WITHOUT_CLASSIFICATION	1.403675642886059E-4	DOCUMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.999923356982102	WITHOUT_CLASSIFICATION	7.664301789804195E-5	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9998621367127907	WITHOUT_CLASSIFICATION	1.3786328720937424E-4	DOCUMENTATION
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999534896775866	WITHOUT_CLASSIFICATION	4.6510322413510956E-5	DOCUMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999731734406684	WITHOUT_CLASSIFICATION	2.682655933169089E-5	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9997975077420538	WITHOUT_CLASSIFICATION	2.024922579463554E-4	DOCUMENTATION
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9998423081162168	WITHOUT_CLASSIFICATION	1.5769188378325294E-4	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999113759149932	WITHOUT_CLASSIFICATION	8.862408500674012E-5	DOCUMENTATION
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9997556940661699	WITHOUT_CLASSIFICATION	2.4430593383006124E-4	DOCUMENTATION
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9994635140860102	WITHOUT_CLASSIFICATION	5.364859139898832E-4	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999891716156167	WITHOUT_CLASSIFICATION	1.0828384383237686E-5	DOCUMENTATION
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9998982140374424	WITHOUT_CLASSIFICATION	1.017859625575913E-4	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.999972901824936	WITHOUT_CLASSIFICATION	2.709817506397375E-5	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9998174385810665	WITHOUT_CLASSIFICATION	1.8256141893341734E-4	DOCUMENTATION
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999783268357237	WITHOUT_CLASSIFICATION	2.167316427627198E-5	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999549707206525	WITHOUT_CLASSIFICATION	4.502927934751949E-5	DOCUMENTATION
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999885257678671	WITHOUT_CLASSIFICATION	1.1474232133006386E-5	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.999609492400192	WITHOUT_CLASSIFICATION	3.9050759980800004E-4	DOCUMENTATION
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9998956380250431	WITHOUT_CLASSIFICATION	1.043619749568311E-4	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998560027913124	WITHOUT_CLASSIFICATION	1.4399720868774843E-4	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999113759149932	WITHOUT_CLASSIFICATION	8.862408500674012E-5	DOCUMENTATION
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999308721969671	WITHOUT_CLASSIFICATION	6.912780303289558E-5	DOCUMENTATION
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999136538883583	WITHOUT_CLASSIFICATION	8.634611164170904E-5	DOCUMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9998548974673022	WITHOUT_CLASSIFICATION	1.451025326978613E-4	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999482837702758	WITHOUT_CLASSIFICATION	5.171622972427371E-5	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999804600899761	WITHOUT_CLASSIFICATION	1.95399100239078E-5	DOCUMENTATION
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999249618472549	WITHOUT_CLASSIFICATION	7.503815274517622E-5	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998692410318057	WITHOUT_CLASSIFICATION	1.3075896819426665E-4	DOCUMENTATION
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999910877825214	WITHOUT_CLASSIFICATION	8.912217478599554E-6	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999897193614607	WITHOUT_CLASSIFICATION	1.0280638539211545E-5	DOCUMENTATION
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999507556631383	WITHOUT_CLASSIFICATION	4.9244336861773825E-5	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999094090887108	WITHOUT_CLASSIFICATION	9.059091128919737E-5	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9992792352224319	WITHOUT_CLASSIFICATION	7.207647775680609E-4	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.999884915144066	WITHOUT_CLASSIFICATION	1.1508485593404194E-4	DOCUMENTATION
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999660543004244	WITHOUT_CLASSIFICATION	3.394569957558927E-5	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9998164958351695	WITHOUT_CLASSIFICATION	1.8350416483037737E-4	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999900675665321	WITHOUT_CLASSIFICATION	9.932433467869179E-6	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.999981306875139	WITHOUT_CLASSIFICATION	1.8693124861019045E-5	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999813683507606	WITHOUT_CLASSIFICATION	1.8631649239381354E-5	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9997314337571066	WITHOUT_CLASSIFICATION	2.6856624289346226E-4	DOCUMENTATION
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999875547285929	WITHOUT_CLASSIFICATION	1.2445271407110848E-5	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9991797591631413	WITHOUT_CLASSIFICATION	8.202408368586756E-4	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9991797591631413	WITHOUT_CLASSIFICATION	8.202408368586756E-4	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9998594626679161	WITHOUT_CLASSIFICATION	1.4053733208380497E-4	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9999719372609168	WITHOUT_CLASSIFICATION	2.806273908312704E-5	DOCUMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9998506314583772	WITHOUT_CLASSIFICATION	1.4936854162275642E-4	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9999639648536564	WITHOUT_CLASSIFICATION	3.603514634366054E-5	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.999944798102006	WITHOUT_CLASSIFICATION	5.52018979939604E-5	DOCUMENTATION
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9999784608218605	WITHOUT_CLASSIFICATION	2.1539178139624845E-5	DOCUMENTATION
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9999471778991282	WITHOUT_CLASSIFICATION	5.282210087170608E-5	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999906535134493	WITHOUT_CLASSIFICATION	9.346486550716571E-6	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999906535134493	WITHOUT_CLASSIFICATION	9.346486550716571E-6	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9993624463625075	WITHOUT_CLASSIFICATION	6.375536374925116E-4	DOCUMENTATION
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999484927799711	WITHOUT_CLASSIFICATION	5.15072200288948E-5	DOCUMENTATION
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999105286607284	WITHOUT_CLASSIFICATION	8.94713392716711E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999125247077043	WITHOUT_CLASSIFICATION	8.747529229577379E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999125247077043	WITHOUT_CLASSIFICATION	8.747529229577379E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999125247077043	WITHOUT_CLASSIFICATION	8.747529229577379E-5	DOCUMENTATION
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9995812632232067	WITHOUT_CLASSIFICATION	4.1873677679323494E-4	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9999611687536113	WITHOUT_CLASSIFICATION	3.8831246388625236E-5	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9995727383743779	WITHOUT_CLASSIFICATION	4.2726162562218054E-4	DOCUMENTATION
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.999953240396204	WITHOUT_CLASSIFICATION	4.675960379598826E-5	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999847593594783	WITHOUT_CLASSIFICATION	1.5240640521652915E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999113759149932	WITHOUT_CLASSIFICATION	8.862408500674012E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999113759149932	WITHOUT_CLASSIFICATION	8.862408500674012E-5	DOCUMENTATION
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9999880114078374	WITHOUT_CLASSIFICATION	1.1988592162621532E-5	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999509854400833	WITHOUT_CLASSIFICATION	4.901455991659512E-5	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9999846906690001	WITHOUT_CLASSIFICATION	1.5309330999836506E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9997521456687679	WITHOUT_CLASSIFICATION	2.478543312321107E-4	DOCUMENTATION
// igndore it...	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9998996061938062	WITHOUT_CLASSIFICATION	1.0039380619369997E-4	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9999010065284001	WITHOUT_CLASSIFICATION	9.899347159988958E-5	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9999969393904562	WITHOUT_CLASSIFICATION	3.0606095438353693E-6	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999852404100794	WITHOUT_CLASSIFICATION	1.4759589920684998E-5	DOCUMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999585151187745	WITHOUT_CLASSIFICATION	4.148488122542085E-5	DOCUMENTATION
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999328304684886	WITHOUT_CLASSIFICATION	6.716953151138081E-5	DOCUMENTATION
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999691406698162	WITHOUT_CLASSIFICATION	3.085933018371656E-5	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999691406698162	WITHOUT_CLASSIFICATION	3.085933018371656E-5	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999691406698162	WITHOUT_CLASSIFICATION	3.085933018371656E-5	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999691406698162	WITHOUT_CLASSIFICATION	3.085933018371656E-5	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.9999691406698162	WITHOUT_CLASSIFICATION	3.085933018371656E-5	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999540361769201	WITHOUT_CLASSIFICATION	4.596382307991507E-5	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999540361769201	WITHOUT_CLASSIFICATION	4.596382307991507E-5	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999540361769201	WITHOUT_CLASSIFICATION	4.596382307991507E-5	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999540361769201	WITHOUT_CLASSIFICATION	4.596382307991507E-5	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999251525802172	WITHOUT_CLASSIFICATION	7.484741978278942E-5	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9991797591631413	WITHOUT_CLASSIFICATION	8.202408368586756E-4	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999655596193195	WITHOUT_CLASSIFICATION	3.4440380680340294E-5	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999540361769201	WITHOUT_CLASSIFICATION	4.596382307991507E-5	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9999679594418077	WITHOUT_CLASSIFICATION	3.2040558192205645E-5	DOCUMENTATION
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999449751059482	WITHOUT_CLASSIFICATION	5.502489405181469E-5	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999136320442655	WITHOUT_CLASSIFICATION	8.636795573447678E-5	DOCUMENTATION
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999690228623201	WITHOUT_CLASSIFICATION	3.0977137679770184E-5	DOCUMENTATION
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999960345755393	WITHOUT_CLASSIFICATION	3.965424460693018E-6	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.999955047869201	WITHOUT_CLASSIFICATION	4.495213079912427E-5	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999672535336125	WITHOUT_CLASSIFICATION	3.274646638751951E-5	DOCUMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9999822009071709	WITHOUT_CLASSIFICATION	1.779909282908808E-5	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9998854120827064	WITHOUT_CLASSIFICATION	1.1458791729361691E-4	DOCUMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9999708649381165	WITHOUT_CLASSIFICATION	2.9135061883472652E-5	DOCUMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999915760005207	WITHOUT_CLASSIFICATION	8.423999479218534E-6	DOCUMENTATION
// Set it!	WITHOUT_CLASSIFICATION	0.9998762833970223	WITHOUT_CLASSIFICATION	1.23716602977747E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9998606775479494	WITHOUT_CLASSIFICATION	1.3932245205068084E-4	DOCUMENTATION
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999470918440377	WITHOUT_CLASSIFICATION	5.290815596216628E-5	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.999992676428375	WITHOUT_CLASSIFICATION	7.323571624982939E-6	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9999549646128297	WITHOUT_CLASSIFICATION	4.5035387170166646E-5	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999733383341797	WITHOUT_CLASSIFICATION	2.666166582024726E-5	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9998553419449995	WITHOUT_CLASSIFICATION	1.4465805500054945E-4	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9998553419449995	WITHOUT_CLASSIFICATION	1.4465805500054945E-4	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999237602067264	WITHOUT_CLASSIFICATION	7.623979327368985E-5	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999769131379561	WITHOUT_CLASSIFICATION	2.3086862043890886E-5	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999236575914406	WITHOUT_CLASSIFICATION	7.634240855926073E-5	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9999085890971583	WITHOUT_CLASSIFICATION	9.141090284175532E-5	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.9997944291187043	WITHOUT_CLASSIFICATION	2.055708812956667E-4	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.9999660843840421	WITHOUT_CLASSIFICATION	3.3915615957848525E-5	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9999504254816668	WITHOUT_CLASSIFICATION	4.957451833322575E-5	DOCUMENTATION
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9997624820544279	WITHOUT_CLASSIFICATION	2.3751794557210783E-4	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.999914121623054	WITHOUT_CLASSIFICATION	8.587837694597113E-5	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999722860981999	WITHOUT_CLASSIFICATION	2.7713901800151952E-5	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999389297833012	WITHOUT_CLASSIFICATION	6.107021669879692E-5	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9992845785805657	WITHOUT_CLASSIFICATION	7.154214194343741E-4	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999563599869099	WITHOUT_CLASSIFICATION	4.364001309019793E-5	DOCUMENTATION
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.99991495465796	WITHOUT_CLASSIFICATION	8.504534204010319E-5	DOCUMENTATION
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999128267577039	WITHOUT_CLASSIFICATION	8.717324229613968E-5	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9998726351319893	WITHOUT_CLASSIFICATION	1.2736486801070718E-4	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999721055727526	WITHOUT_CLASSIFICATION	2.7894427247370025E-5	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999721055727526	WITHOUT_CLASSIFICATION	2.7894427247370025E-5	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9998217578795783	WITHOUT_CLASSIFICATION	1.782421204216362E-4	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9999973186534913	WITHOUT_CLASSIFICATION	2.6813465086228786E-6	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9998829959098541	WITHOUT_CLASSIFICATION	1.1700409014587385E-4	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9998829959098541	WITHOUT_CLASSIFICATION	1.1700409014587385E-4	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9995053433953784	WITHOUT_CLASSIFICATION	4.946566046214673E-4	DOCUMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999080197344049	WITHOUT_CLASSIFICATION	9.198026559509374E-5	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9997585690415945	WITHOUT_CLASSIFICATION	2.4143095840548518E-4	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999836221312497	WITHOUT_CLASSIFICATION	1.6377868750321013E-5	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9998726577645393	WITHOUT_CLASSIFICATION	1.2734223546076345E-4	DOCUMENTATION
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9997638141425311	WITHOUT_CLASSIFICATION	2.3618585746881853E-4	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.999757457082134	WITHOUT_CLASSIFICATION	2.4254291786589987E-4	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999836221312497	WITHOUT_CLASSIFICATION	1.6377868750321013E-5	DOCUMENTATION
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.999979965331557	WITHOUT_CLASSIFICATION	2.0034668443089236E-5	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999135030977818	WITHOUT_CLASSIFICATION	8.649690221828727E-5	DOCUMENTATION
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999670628733879	WITHOUT_CLASSIFICATION	3.29371266120933E-5	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999227911436691	WITHOUT_CLASSIFICATION	7.72088563308866E-5	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999332145886126	WITHOUT_CLASSIFICATION	6.678541138735282E-5	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9998553293506499	WITHOUT_CLASSIFICATION	1.446706493500576E-4	DOCUMENTATION
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9996853740365487	WITHOUT_CLASSIFICATION	3.1462596345138087E-4	DOCUMENTATION
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9998512339818423	WITHOUT_CLASSIFICATION	1.4876601815775662E-4	DOCUMENTATION
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999873815888028	WITHOUT_CLASSIFICATION	1.261841119717052E-5	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999849878569137	WITHOUT_CLASSIFICATION	1.5012143086249774E-5	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9999157716746837	WITHOUT_CLASSIFICATION	8.422832531631607E-5	DOCUMENTATION
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999244716154765	WITHOUT_CLASSIFICATION	7.552838452353161E-5	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999147620912217	WITHOUT_CLASSIFICATION	8.52379087783612E-5	DOCUMENTATION
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999189463747054	WITHOUT_CLASSIFICATION	8.105362529462874E-5	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999413916699937	WITHOUT_CLASSIFICATION	5.8608330006362506E-5	DOCUMENTATION
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9998646594921056	WITHOUT_CLASSIFICATION	1.353405078944969E-4	DOCUMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.999769404627	WITHOUT_CLASSIFICATION	2.3059537300008988E-4	DOCUMENTATION
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.999760095682238	WITHOUT_CLASSIFICATION	2.3990431776190054E-4	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.999760095682238	WITHOUT_CLASSIFICATION	2.3990431776190054E-4	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9996853740365487	WITHOUT_CLASSIFICATION	3.1462596345138087E-4	DOCUMENTATION
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9999094916112934	WITHOUT_CLASSIFICATION	9.050838870662676E-5	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.9999739217286627	WITHOUT_CLASSIFICATION	2.6078271337206423E-5	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.9989256926375073	WITHOUT_CLASSIFICATION	0.0010743073624926184	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.9998552206332365	WITHOUT_CLASSIFICATION	1.4477936676341542E-4	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9998094633806978	WITHOUT_CLASSIFICATION	1.9053661930236115E-4	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999146886761657	WITHOUT_CLASSIFICATION	8.531132383427924E-5	DOCUMENTATION
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999421995323551	WITHOUT_CLASSIFICATION	5.7800467645024696E-5	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999276507211168	WITHOUT_CLASSIFICATION	7.23492788832481E-5	DOCUMENTATION
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9998568214478293	WITHOUT_CLASSIFICATION	1.431785521707401E-4	DOCUMENTATION
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9999846880290832	WITHOUT_CLASSIFICATION	1.531197091675022E-5	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999831104390018	WITHOUT_CLASSIFICATION	1.6889560998290716E-5	DOCUMENTATION
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999592432274985	WITHOUT_CLASSIFICATION	4.0756772501532185E-5	DOCUMENTATION
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9998960287810569	WITHOUT_CLASSIFICATION	1.0397121894307446E-4	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9999978673617218	WITHOUT_CLASSIFICATION	2.1326382782431186E-6	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9998730530846838	WITHOUT_CLASSIFICATION	1.2694691531622726E-4	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9998643330092124	WITHOUT_CLASSIFICATION	1.356669907876911E-4	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999941188120084	WITHOUT_CLASSIFICATION	5.881187991614609E-6	DOCUMENTATION
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999126707345884	WITHOUT_CLASSIFICATION	8.732926541161219E-5	DOCUMENTATION
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.999916839332057	WITHOUT_CLASSIFICATION	8.316066794293074E-5	DOCUMENTATION
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.999929686501525	WITHOUT_CLASSIFICATION	7.0313498474915E-5	DOCUMENTATION
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999436136223228	WITHOUT_CLASSIFICATION	5.638637767724628E-5	DOCUMENTATION
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999122492610838	WITHOUT_CLASSIFICATION	8.775073891630335E-5	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9998780962514214	WITHOUT_CLASSIFICATION	1.2190374857857833E-4	DOCUMENTATION
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999735217215573	WITHOUT_CLASSIFICATION	2.6478278442744162E-5	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999608746578064	WITHOUT_CLASSIFICATION	3.912534219359414E-5	DOCUMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9997960321547231	WITHOUT_CLASSIFICATION	2.039678452767891E-4	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999824716978994	WITHOUT_CLASSIFICATION	1.7528302100521318E-5	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999276430887838	WITHOUT_CLASSIFICATION	7.235691121618459E-5	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999551890106131	WITHOUT_CLASSIFICATION	4.481098938689314E-5	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999304036242456	WITHOUT_CLASSIFICATION	6.95963757545158E-5	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9998730530846838	WITHOUT_CLASSIFICATION	1.2694691531622726E-4	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.999960563038134	WITHOUT_CLASSIFICATION	3.943696186602761E-5	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999733958704586	WITHOUT_CLASSIFICATION	2.6604129541385324E-5	DOCUMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999744864943486	WITHOUT_CLASSIFICATION	2.5513505651350382E-5	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9998404521775378	WITHOUT_CLASSIFICATION	1.5954782246210326E-4	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999345881339439	WITHOUT_CLASSIFICATION	6.541186605608328E-5	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999480521969417	WITHOUT_CLASSIFICATION	5.194780305830964E-5	DOCUMENTATION
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999002429587771	WITHOUT_CLASSIFICATION	9.975704122289343E-5	DOCUMENTATION
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999284716413922	WITHOUT_CLASSIFICATION	7.15283586077906E-5	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999450017327672	WITHOUT_CLASSIFICATION	5.499826723265333E-5	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999521571778713	WITHOUT_CLASSIFICATION	4.784282212858756E-5	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9999110233956638	WITHOUT_CLASSIFICATION	8.897660433622642E-5	DOCUMENTATION
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.9999892853373782	WITHOUT_CLASSIFICATION	1.0714662621910379E-5	DOCUMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9994678640235067	WITHOUT_CLASSIFICATION	5.321359764932075E-4	DOCUMENTATION
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9999243902211234	WITHOUT_CLASSIFICATION	7.560977887652926E-5	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999034739171168	WITHOUT_CLASSIFICATION	9.652608288317324E-5	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999880056505558	WITHOUT_CLASSIFICATION	1.1994349444071973E-5	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999789230900276	WITHOUT_CLASSIFICATION	2.107690997244588E-5	DOCUMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.9998696249247218	WITHOUT_CLASSIFICATION	1.3037507527824903E-4	DOCUMENTATION
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.999869976342573	WITHOUT_CLASSIFICATION	1.300236574269381E-4	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999133819978487	WITHOUT_CLASSIFICATION	8.661800215132819E-5	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9998726577645393	WITHOUT_CLASSIFICATION	1.2734223546076345E-4	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999799945017925	WITHOUT_CLASSIFICATION	2.000549820742712E-5	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9998730530846838	WITHOUT_CLASSIFICATION	1.2694691531622726E-4	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9999079162723746	WITHOUT_CLASSIFICATION	9.208372762534845E-5	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999432899819093	WITHOUT_CLASSIFICATION	5.6710018090825886E-5	DOCUMENTATION
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9998646759045873	WITHOUT_CLASSIFICATION	1.3532409541275198E-4	DOCUMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9998646759045873	WITHOUT_CLASSIFICATION	1.3532409541275198E-4	DOCUMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9998355189859963	WITHOUT_CLASSIFICATION	1.644810140037821E-4	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9999910462955706	WITHOUT_CLASSIFICATION	8.953704429451657E-6	DOCUMENTATION
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9997219094495197	WITHOUT_CLASSIFICATION	2.7809055048038316E-4	DOCUMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9999868389818971	WITHOUT_CLASSIFICATION	1.3161018102854542E-5	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9999731653001441	WITHOUT_CLASSIFICATION	2.6834699855868602E-5	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999698122524349	WITHOUT_CLASSIFICATION	3.0187747565165537E-5	DOCUMENTATION
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9998472775963261	WITHOUT_CLASSIFICATION	1.5272240367391747E-4	DOCUMENTATION
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999455901689227	WITHOUT_CLASSIFICATION	5.4409831077281084E-5	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9997315911731379	WITHOUT_CLASSIFICATION	2.6840882686215945E-4	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9997315911731379	WITHOUT_CLASSIFICATION	2.6840882686215945E-4	DOCUMENTATION
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999834520247571	WITHOUT_CLASSIFICATION	1.6547975242828276E-5	DOCUMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.999846425026165	WITHOUT_CLASSIFICATION	1.5357497383491233E-4	DOCUMENTATION
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999855374329075	WITHOUT_CLASSIFICATION	1.446256709257074E-5	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999517833274517	WITHOUT_CLASSIFICATION	4.821667254843508E-5	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999789134782466	WITHOUT_CLASSIFICATION	2.1086521753358713E-5	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999328675422546	WITHOUT_CLASSIFICATION	6.713245774544892E-5	DOCUMENTATION
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999788181219833	WITHOUT_CLASSIFICATION	2.1181878016646204E-5	DOCUMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999883728401978	WITHOUT_CLASSIFICATION	1.1627159802246487E-5	DOCUMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999261292029883	WITHOUT_CLASSIFICATION	7.387079701181924E-5	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999098975130184	WITHOUT_CLASSIFICATION	9.010248698165453E-5	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.9998657995927092	WITHOUT_CLASSIFICATION	1.342004072908136E-4	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9998657995927092	WITHOUT_CLASSIFICATION	1.342004072908136E-4	DOCUMENTATION
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.999984844399361	WITHOUT_CLASSIFICATION	1.5155600638903121E-5	DOCUMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.999896059770294	WITHOUT_CLASSIFICATION	1.039402297059262E-4	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999372230011359	WITHOUT_CLASSIFICATION	6.277699886406982E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9995617214008332	WITHOUT_CLASSIFICATION	4.382785991668074E-4	DOCUMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999820410500384	WITHOUT_CLASSIFICATION	1.795894996157132E-5	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9998546681028538	WITHOUT_CLASSIFICATION	1.4533189714624004E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998611971186444	WITHOUT_CLASSIFICATION	1.388028813555711E-4	DOCUMENTATION
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999566615581625	WITHOUT_CLASSIFICATION	4.3338441837413916E-5	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999796508281042	WITHOUT_CLASSIFICATION	2.0349171895702765E-5	DOCUMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999693370968803	WITHOUT_CLASSIFICATION	3.0662903119734676E-5	DOCUMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9998675246655986	WITHOUT_CLASSIFICATION	1.3247533440138552E-4	DOCUMENTATION
/*implied*/	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9999604760183018	WITHOUT_CLASSIFICATION	3.952398169816329E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998611971186444	WITHOUT_CLASSIFICATION	1.388028813555711E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998611971186444	WITHOUT_CLASSIFICATION	1.388028813555711E-4	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999412864558803	WITHOUT_CLASSIFICATION	5.871354411970837E-5	DOCUMENTATION
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999556879541615	WITHOUT_CLASSIFICATION	4.431204583860908E-5	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9992834137073667	WITHOUT_CLASSIFICATION	7.165862926333596E-4	DOCUMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999555727634097	WITHOUT_CLASSIFICATION	4.4427236590368024E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.999832611485693	WITHOUT_CLASSIFICATION	1.673885143069774E-4	DOCUMENTATION
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9993312392447911	WITHOUT_CLASSIFICATION	6.687607552090239E-4	DOCUMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.9999845536275427	WITHOUT_CLASSIFICATION	1.5446372457316136E-5	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9999927272670561	WITHOUT_CLASSIFICATION	7.2727329438939285E-6	DOCUMENTATION
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.999989484200237	WITHOUT_CLASSIFICATION	1.0515799762894016E-5	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9994471075539221	WITHOUT_CLASSIFICATION	5.528924460779896E-4	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9999244337084017	WITHOUT_CLASSIFICATION	7.556629159826238E-5	DOCUMENTATION
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999140816172817	WITHOUT_CLASSIFICATION	8.591838271829232E-5	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9998908655585043	WITHOUT_CLASSIFICATION	1.0913444149565372E-4	DOCUMENTATION
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999921638618018	WITHOUT_CLASSIFICATION	7.836138198195436E-5	DOCUMENTATION
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9998936993660684	WITHOUT_CLASSIFICATION	1.0630063393162206E-4	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9996302349977222	WITHOUT_CLASSIFICATION	3.697650022778904E-4	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998821975041419	WITHOUT_CLASSIFICATION	1.1780249585803849E-4	DOCUMENTATION
//TODO:	WITHOUT_CLASSIFICATION	0.9993619845489387	WITHOUT_CLASSIFICATION	6.380154510612244E-4	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999401536563463	WITHOUT_CLASSIFICATION	5.9846343653846634E-5	DOCUMENTATION
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999631232536954	WITHOUT_CLASSIFICATION	3.687674630455538E-5	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999327544075298	WITHOUT_CLASSIFICATION	6.724559247017447E-5	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999882419290505	WITHOUT_CLASSIFICATION	1.1758070949499617E-4	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999205914302489	WITHOUT_CLASSIFICATION	7.94085697511E-5	DOCUMENTATION
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999700840794719	WITHOUT_CLASSIFICATION	2.9915920528158376E-5	DOCUMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999059896963433	WITHOUT_CLASSIFICATION	9.401030365677147E-5	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999785159405381	WITHOUT_CLASSIFICATION	2.1484059461960027E-5	DOCUMENTATION
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999833515298716	WITHOUT_CLASSIFICATION	1.6648470128385224E-5	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.9998263863703826	WITHOUT_CLASSIFICATION	1.736136296173702E-4	DOCUMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9998637389740077	WITHOUT_CLASSIFICATION	1.3626102599229522E-4	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9998856026615549	WITHOUT_CLASSIFICATION	1.1439733844512826E-4	DOCUMENTATION
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9998592146803433	WITHOUT_CLASSIFICATION	1.4078531965658415E-4	DOCUMENTATION
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.999949338185265	WITHOUT_CLASSIFICATION	5.066181473495666E-5	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999658195842863	WITHOUT_CLASSIFICATION	3.41804157135805E-5	DOCUMENTATION
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9998750325734551	WITHOUT_CLASSIFICATION	1.2496742654483664E-4	DOCUMENTATION
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999674681732929	WITHOUT_CLASSIFICATION	3.253182670709339E-5	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.99997818929971	WITHOUT_CLASSIFICATION	2.1810700289983445E-5	DOCUMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9996422858407737	WITHOUT_CLASSIFICATION	3.5771415922616597E-4	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999241458270935	WITHOUT_CLASSIFICATION	7.585417290648673E-5	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.999978891781752	WITHOUT_CLASSIFICATION	2.110821824801322E-5	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9998648890247166	WITHOUT_CLASSIFICATION	1.35110975283466E-4	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9998857441351784	WITHOUT_CLASSIFICATION	1.1425586482152251E-4	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9998648890247166	WITHOUT_CLASSIFICATION	1.35110975283466E-4	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999551744120128	WITHOUT_CLASSIFICATION	4.482558798727799E-5	DOCUMENTATION
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.999961696836404	WITHOUT_CLASSIFICATION	3.8303163595974755E-5	DOCUMENTATION
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9998896101578226	WITHOUT_CLASSIFICATION	1.1038984217746338E-4	DOCUMENTATION
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999594734554214	WITHOUT_CLASSIFICATION	4.0526544578652536E-5	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999192748355553	WITHOUT_CLASSIFICATION	8.072516444461393E-5	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9998896101578226	WITHOUT_CLASSIFICATION	1.1038984217746338E-4	DOCUMENTATION
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999324286483566	WITHOUT_CLASSIFICATION	6.757135164344796E-5	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999379755511757	WITHOUT_CLASSIFICATION	6.202444882436137E-5	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999452992922117	WITHOUT_CLASSIFICATION	5.4700707788339624E-5	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9998823024203036	WITHOUT_CLASSIFICATION	1.1769757969636115E-4	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999045442180611	WITHOUT_CLASSIFICATION	9.545578193897799E-5	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999473798584572	WITHOUT_CLASSIFICATION	5.26201415427522E-5	DOCUMENTATION
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.999933743772658	WITHOUT_CLASSIFICATION	6.625622734204292E-5	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9999745052377367	WITHOUT_CLASSIFICATION	2.5494762263275277E-5	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9998972576236044	WITHOUT_CLASSIFICATION	1.0274237639558901E-4	DOCUMENTATION
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999740546751666	WITHOUT_CLASSIFICATION	2.594532483334767E-5	DOCUMENTATION
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999382037053403	WITHOUT_CLASSIFICATION	6.179629465973299E-5	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999545638476642	WITHOUT_CLASSIFICATION	4.543615233568498E-5	DOCUMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999962191202858	WITHOUT_CLASSIFICATION	3.7808797141939248E-6	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9996960825518851	WITHOUT_CLASSIFICATION	3.039174481148771E-4	DOCUMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999802728946722	WITHOUT_CLASSIFICATION	1.9727105327900992E-5	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9992874006055251	WITHOUT_CLASSIFICATION	7.1259939447488E-4	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999586433119046	WITHOUT_CLASSIFICATION	4.135668809535207E-5	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999789599529569	WITHOUT_CLASSIFICATION	2.104004704306117E-5	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9998627919787623	WITHOUT_CLASSIFICATION	1.3720802123775411E-4	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999372010290544	WITHOUT_CLASSIFICATION	6.279897094561628E-5	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9995353140525957	WITHOUT_CLASSIFICATION	4.646859474043801E-4	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9991243599420999	WITHOUT_CLASSIFICATION	8.756400579001631E-4	DOCUMENTATION
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9995795678834927	WITHOUT_CLASSIFICATION	4.2043211650737405E-4	DOCUMENTATION
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9997444868401224	WITHOUT_CLASSIFICATION	2.5551315987756064E-4	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9993036060969345	WITHOUT_CLASSIFICATION	6.963939030656083E-4	DOCUMENTATION
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999815207158247	WITHOUT_CLASSIFICATION	1.847928417530023E-5	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9998662275948715	WITHOUT_CLASSIFICATION	1.3377240512845465E-4	DOCUMENTATION
//if its "id"	WITHOUT_CLASSIFICATION	0.9993383477924367	WITHOUT_CLASSIFICATION	6.616522075632697E-4	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9997569868191276	WITHOUT_CLASSIFICATION	2.4301318087241168E-4	DOCUMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9995795678834927	WITHOUT_CLASSIFICATION	4.2043211650737405E-4	DOCUMENTATION
//important!!	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9995795678834927	WITHOUT_CLASSIFICATION	4.2043211650737405E-4	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9998880838767301	WITHOUT_CLASSIFICATION	1.1191612326987016E-4	DOCUMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9998595293132186	WITHOUT_CLASSIFICATION	1.4047068678145795E-4	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999372010290544	WITHOUT_CLASSIFICATION	6.279897094561628E-5	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// collections of values	WITHOUT_CLASSIFICATION	0.9999242070522475	WITHOUT_CLASSIFICATION	7.579294775243946E-5	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.999332748400739	WITHOUT_CLASSIFICATION	6.672515992610013E-4	DOCUMENTATION
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9993834089733727	WITHOUT_CLASSIFICATION	6.165910266272299E-4	DOCUMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9992064516623259	WITHOUT_CLASSIFICATION	7.935483376740082E-4	DOCUMENTATION
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999748040141274	WITHOUT_CLASSIFICATION	2.5195985872603164E-5	DOCUMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999423300325089	WITHOUT_CLASSIFICATION	5.766996749113698E-5	DOCUMENTATION
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999022409074119	WITHOUT_CLASSIFICATION	9.775909258811584E-5	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9998623873087842	WITHOUT_CLASSIFICATION	1.3761269121577083E-4	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999434850113257	WITHOUT_CLASSIFICATION	5.651498867433851E-5	DOCUMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9995357517328295	WITHOUT_CLASSIFICATION	4.6424826717045395E-4	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9998949736413394	WITHOUT_CLASSIFICATION	1.050263586606646E-4	DOCUMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9993480614170448	WITHOUT_CLASSIFICATION	6.519385829551281E-4	DOCUMENTATION
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999276272598614	WITHOUT_CLASSIFICATION	7.237274013861892E-5	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9994909723049692	WITHOUT_CLASSIFICATION	5.090276950308145E-4	DOCUMENTATION
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.999857385583372	WITHOUT_CLASSIFICATION	1.4261441662797106E-4	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.999995103033047	WITHOUT_CLASSIFICATION	4.896966953057791E-6	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999272673237929	WITHOUT_CLASSIFICATION	7.273267620718699E-5	DOCUMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9998041839573917	WITHOUT_CLASSIFICATION	1.958160426083481E-4	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999911633622033	WITHOUT_CLASSIFICATION	8.83663779660316E-6	DOCUMENTATION
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9999736046031151	WITHOUT_CLASSIFICATION	2.6395396884865132E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9998867311422286	WITHOUT_CLASSIFICATION	1.1326885777133633E-4	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9998867311422286	WITHOUT_CLASSIFICATION	1.1326885777133633E-4	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999193075483142	WITHOUT_CLASSIFICATION	8.069245168577997E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9998867311422286	WITHOUT_CLASSIFICATION	1.1326885777133633E-4	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9998867311422286	WITHOUT_CLASSIFICATION	1.1326885777133633E-4	DOCUMENTATION
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9996410776714815	WITHOUT_CLASSIFICATION	3.5892232851841534E-4	DOCUMENTATION
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9997544858727924	WITHOUT_CLASSIFICATION	2.455141272075691E-4	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9998809895040023	WITHOUT_CLASSIFICATION	1.1901049599773545E-4	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.999942697645827	WITHOUT_CLASSIFICATION	5.730235417298193E-5	DOCUMENTATION
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9997746116385291	WITHOUT_CLASSIFICATION	2.2538836147084488E-4	DOCUMENTATION
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9998179049768657	WITHOUT_CLASSIFICATION	1.8209502313413587E-4	DOCUMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9996820591053363	WITHOUT_CLASSIFICATION	3.179408946637387E-4	DOCUMENTATION
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9991610253661134	WITHOUT_CLASSIFICATION	8.389746338865702E-4	DOCUMENTATION
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9997968537299713	WITHOUT_CLASSIFICATION	2.031462700287742E-4	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9993866724707247	WITHOUT_CLASSIFICATION	6.133275292753019E-4	DOCUMENTATION
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9998353780653518	WITHOUT_CLASSIFICATION	1.6462193464805795E-4	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.9994021714389142	WITHOUT_CLASSIFICATION	5.978285610857538E-4	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9978699319652287	WITHOUT_CLASSIFICATION	0.002130068034771387	DOCUMENTATION
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.999682456739565	WITHOUT_CLASSIFICATION	3.175432604350288E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9997852317812298	WITHOUT_CLASSIFICATION	2.1476821877027723E-4	DOCUMENTATION
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9997689211976416	WITHOUT_CLASSIFICATION	2.3107880235838268E-4	DOCUMENTATION
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9979157794770882	WITHOUT_CLASSIFICATION	0.002084220522911778	DOCUMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9993714189634835	WITHOUT_CLASSIFICATION	6.285810365165586E-4	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999510072498613	WITHOUT_CLASSIFICATION	4.8992750138801323E-5	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.999805720049632	WITHOUT_CLASSIFICATION	1.9427995036799795E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9997852317812298	WITHOUT_CLASSIFICATION	2.1476821877027723E-4	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9995353140525957	WITHOUT_CLASSIFICATION	4.646859474043801E-4	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9990636780051003	WITHOUT_CLASSIFICATION	9.363219948997819E-4	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999000347547844	WITHOUT_CLASSIFICATION	9.996524521564722E-5	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9998856418566242	WITHOUT_CLASSIFICATION	1.143581433757478E-4	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.999204343723172	WITHOUT_CLASSIFICATION	7.956562768280735E-4	DOCUMENTATION
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999728404540189	WITHOUT_CLASSIFICATION	2.7159545981133858E-5	DOCUMENTATION
// careful with this!	WITHOUT_CLASSIFICATION	0.99991081217938	WITHOUT_CLASSIFICATION	8.918782061997966E-5	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999590574768399	WITHOUT_CLASSIFICATION	4.094252316015702E-5	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999487139019149	WITHOUT_CLASSIFICATION	5.1286098085047025E-5	DOCUMENTATION
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9986734161612014	WITHOUT_CLASSIFICATION	0.0013265838387985687	DOCUMENTATION
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9991351082742348	WITHOUT_CLASSIFICATION	8.648917257652513E-4	DOCUMENTATION
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999393833617037	WITHOUT_CLASSIFICATION	6.061663829632552E-5	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999609755308612	WITHOUT_CLASSIFICATION	3.902446913879938E-5	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999109757027541	WITHOUT_CLASSIFICATION	8.902429724591254E-5	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9999771762618113	WITHOUT_CLASSIFICATION	2.282373818875449E-5	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.9999038739443622	WITHOUT_CLASSIFICATION	9.612605563775537E-5	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999690420380088	WITHOUT_CLASSIFICATION	3.0957961991202614E-5	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999852940360565	WITHOUT_CLASSIFICATION	1.4705963943470774E-5	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999861188210752	WITHOUT_CLASSIFICATION	1.3881178924810757E-5	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999604559614562	WITHOUT_CLASSIFICATION	3.954403854373952E-5	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.999688157800575	WITHOUT_CLASSIFICATION	3.1184219942506284E-4	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9995222120053395	WITHOUT_CLASSIFICATION	4.7778799466037395E-4	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999843560919501	WITHOUT_CLASSIFICATION	1.5643908049820618E-5	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999487139019149	WITHOUT_CLASSIFICATION	5.1286098085047025E-5	DOCUMENTATION
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9991161257008471	WITHOUT_CLASSIFICATION	8.838742991528342E-4	DOCUMENTATION
//do replacements	WITHOUT_CLASSIFICATION	0.9991522732609359	WITHOUT_CLASSIFICATION	8.477267390641193E-4	DOCUMENTATION
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9992492661355119	WITHOUT_CLASSIFICATION	7.50733864488242E-4	DOCUMENTATION
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9998927851668764	WITHOUT_CLASSIFICATION	1.0721483312359913E-4	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.9991184593893793	WITHOUT_CLASSIFICATION	8.815406106208166E-4	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.9994837776703317	WITHOUT_CLASSIFICATION	5.162223296683938E-4	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9998284913834667	WITHOUT_CLASSIFICATION	1.7150861653316923E-4	DOCUMENTATION
//sql = update;	WITHOUT_CLASSIFICATION	0.9994837776703317	WITHOUT_CLASSIFICATION	5.162223296683938E-4	DOCUMENTATION
//hilo config	WITHOUT_CLASSIFICATION	0.9991148845456246	WITHOUT_CLASSIFICATION	8.851154543754216E-4	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9997720987712964	WITHOUT_CLASSIFICATION	2.2790122870359125E-4	DOCUMENTATION
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999735343613877	WITHOUT_CLASSIFICATION	2.6465638612207774E-5	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.99986166490792	WITHOUT_CLASSIFICATION	1.3833509208017298E-4	DOCUMENTATION
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9993988575302807	WITHOUT_CLASSIFICATION	6.011424697192695E-4	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9997837417236225	WITHOUT_CLASSIFICATION	2.1625827637754272E-4	DOCUMENTATION
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.999766711472841	WITHOUT_CLASSIFICATION	2.332885271588637E-4	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9998150375316187	WITHOUT_CLASSIFICATION	1.8496246838140972E-4	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9997720987712964	WITHOUT_CLASSIFICATION	2.2790122870359125E-4	DOCUMENTATION
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999552660378825	WITHOUT_CLASSIFICATION	4.473396211738138E-5	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9999928338413405	WITHOUT_CLASSIFICATION	7.166158659500542E-6	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9998722396896208	WITHOUT_CLASSIFICATION	1.2776031037927728E-4	DOCUMENTATION
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9998899830043025	WITHOUT_CLASSIFICATION	1.1001699569741155E-4	DOCUMENTATION
// the default...	WITHOUT_CLASSIFICATION	0.9999056382566824	WITHOUT_CLASSIFICATION	9.436174331756787E-5	DOCUMENTATION
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.99999553084404	WITHOUT_CLASSIFICATION	4.469155959902722E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9997837417236225	WITHOUT_CLASSIFICATION	2.1625827637754272E-4	DOCUMENTATION
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999328774113643	WITHOUT_CLASSIFICATION	6.71225886357078E-5	DOCUMENTATION
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996376877546	WITHOUT_CLASSIFICATION	3.623122453999546E-4	DOCUMENTATION
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998644849412351	WITHOUT_CLASSIFICATION	1.3551505876478184E-4	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998940567732071	WITHOUT_CLASSIFICATION	1.0594322679289685E-4	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998940567732071	WITHOUT_CLASSIFICATION	1.0594322679289685E-4	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998940567732071	WITHOUT_CLASSIFICATION	1.0594322679289685E-4	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999548730218297	WITHOUT_CLASSIFICATION	4.5126978170349124E-5	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999548730218297	WITHOUT_CLASSIFICATION	4.5126978170349124E-5	DOCUMENTATION
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9998335378599736	WITHOUT_CLASSIFICATION	1.664621400263262E-4	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9998896420768926	WITHOUT_CLASSIFICATION	1.1035792310740197E-4	DOCUMENTATION
// scroll ahead	WITHOUT_CLASSIFICATION	0.9998278555222772	WITHOUT_CLASSIFICATION	1.7214447772283118E-4	DOCUMENTATION
// scroll backward	WITHOUT_CLASSIFICATION	0.9998287353247164	WITHOUT_CLASSIFICATION	1.712646752835738E-4	DOCUMENTATION
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.9999132580763979	WITHOUT_CLASSIFICATION	8.674192360207952E-5	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998595642571521	WITHOUT_CLASSIFICATION	1.4043574284794153E-4	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998727153567041	WITHOUT_CLASSIFICATION	1.272846432959949E-4	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.999994075195433	WITHOUT_CLASSIFICATION	5.9248045669003395E-6	DOCUMENTATION
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998864720772184	WITHOUT_CLASSIFICATION	1.1352792278165385E-4	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998595642571521	WITHOUT_CLASSIFICATION	1.4043574284794153E-4	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998727153567041	WITHOUT_CLASSIFICATION	1.272846432959949E-4	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999151583520028	WITHOUT_CLASSIFICATION	8.484164799716123E-5	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9997942882162001	WITHOUT_CLASSIFICATION	2.0571178379985385E-4	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9998732794505911	WITHOUT_CLASSIFICATION	1.2672054940885574E-4	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9999939274089055	WITHOUT_CLASSIFICATION	6.072591094500872E-6	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9995863042914258	WITHOUT_CLASSIFICATION	4.1369570857417856E-4	DOCUMENTATION
//checking for named queries	WITHOUT_CLASSIFICATION	0.9997954561041216	WITHOUT_CLASSIFICATION	2.0454389587848973E-4	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999054736171703	WITHOUT_CLASSIFICATION	9.452638282974506E-5	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999133716564849	WITHOUT_CLASSIFICATION	8.662834351510364E-5	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999564184969758	WITHOUT_CLASSIFICATION	4.358150302420824E-5	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9994228268516152	WITHOUT_CLASSIFICATION	5.771731483847857E-4	DOCUMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999389788212836	WITHOUT_CLASSIFICATION	6.102117871641429E-5	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999692746033793	WITHOUT_CLASSIFICATION	3.0725396620684654E-5	DOCUMENTATION
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9998303857044075	WITHOUT_CLASSIFICATION	1.6961429559252296E-4	DOCUMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.999404985404749	WITHOUT_CLASSIFICATION	5.950145952510707E-4	DOCUMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999527736977945	WITHOUT_CLASSIFICATION	4.722630220558199E-5	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999493227041539	WITHOUT_CLASSIFICATION	5.0677295845931184E-5	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999107592560832	WITHOUT_CLASSIFICATION	8.924074391677522E-5	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999848579385608	WITHOUT_CLASSIFICATION	1.5142061439213583E-5	DOCUMENTATION
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9931237527555588	WITHOUT_CLASSIFICATION	0.006876247244441224	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999492337685554	WITHOUT_CLASSIFICATION	5.0766231444708276E-5	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999951915014482	WITHOUT_CLASSIFICATION	4.808498551756568E-6	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9980774761715249	WITHOUT_CLASSIFICATION	0.0019225238284751188	DOCUMENTATION
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9983131027051645	WITHOUT_CLASSIFICATION	0.001686897294835497	DOCUMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998594000893914	WITHOUT_CLASSIFICATION	1.4059991060852745E-4	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998606481984132	WITHOUT_CLASSIFICATION	1.3935180158663755E-4	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.999348020873791	WITHOUT_CLASSIFICATION	6.519791262089396E-4	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.999348020873791	WITHOUT_CLASSIFICATION	6.519791262089396E-4	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999752621819691	WITHOUT_CLASSIFICATION	2.4737818030976318E-5	DOCUMENTATION
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999955460561708	WITHOUT_CLASSIFICATION	4.453943829189463E-6	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999396871516517	WITHOUT_CLASSIFICATION	6.0312848348278644E-5	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9997790023332327	WITHOUT_CLASSIFICATION	2.209976667674586E-4	DOCUMENTATION
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9994318597770542	WITHOUT_CLASSIFICATION	5.681402229457464E-4	DOCUMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.999272400836856	WITHOUT_CLASSIFICATION	7.275991631439444E-4	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999158209168851	WITHOUT_CLASSIFICATION	8.417908311485222E-5	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9998940116166906	WITHOUT_CLASSIFICATION	1.0598838330938055E-4	DOCUMENTATION
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998615653144858	WITHOUT_CLASSIFICATION	1.384346855141908E-4	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998615653144858	WITHOUT_CLASSIFICATION	1.384346855141908E-4	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998615653144858	WITHOUT_CLASSIFICATION	1.384346855141908E-4	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998615653144858	WITHOUT_CLASSIFICATION	1.384346855141908E-4	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998615653144858	WITHOUT_CLASSIFICATION	1.384346855141908E-4	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998615653144858	WITHOUT_CLASSIFICATION	1.384346855141908E-4	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998615653144858	WITHOUT_CLASSIFICATION	1.384346855141908E-4	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998615653144858	WITHOUT_CLASSIFICATION	1.384346855141908E-4	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998615653144858	WITHOUT_CLASSIFICATION	1.384346855141908E-4	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998615653144858	WITHOUT_CLASSIFICATION	1.384346855141908E-4	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998615653144858	WITHOUT_CLASSIFICATION	1.384346855141908E-4	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999777108309988	WITHOUT_CLASSIFICATION	2.2289169001081832E-5	DOCUMENTATION
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9994465650678593	WITHOUT_CLASSIFICATION	5.53434932140657E-4	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9997604159665682	WITHOUT_CLASSIFICATION	2.3958403343182698E-4	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9997573282081408	WITHOUT_CLASSIFICATION	2.4267179185914222E-4	DOCUMENTATION
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9998826483546852	WITHOUT_CLASSIFICATION	1.1735164531477001E-4	DOCUMENTATION
// not for internal use:	WITHOUT_CLASSIFICATION	0.9999700672079147	WITHOUT_CLASSIFICATION	2.993279208533166E-5	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9990542048855704	WITHOUT_CLASSIFICATION	9.457951144296601E-4	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9998791946613835	WITHOUT_CLASSIFICATION	1.2080533861655891E-4	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9997604159665682	WITHOUT_CLASSIFICATION	2.3958403343182698E-4	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9997604159665682	WITHOUT_CLASSIFICATION	2.3958403343182698E-4	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9997902755135769	WITHOUT_CLASSIFICATION	2.0972448642318315E-4	DOCUMENTATION
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999603332799802	WITHOUT_CLASSIFICATION	3.966672001971791E-5	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999949716098676	WITHOUT_CLASSIFICATION	5.02839013243195E-6	DOCUMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999680962636756	WITHOUT_CLASSIFICATION	3.190373632447951E-5	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9998606775479494	WITHOUT_CLASSIFICATION	1.3932245205068084E-4	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999493227041539	WITHOUT_CLASSIFICATION	5.0677295845931184E-5	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9980207479489653	WITHOUT_CLASSIFICATION	0.0019792520510346456	DOCUMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999484064039552	WITHOUT_CLASSIFICATION	5.159359604479151E-5	DOCUMENTATION
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999090953324217	WITHOUT_CLASSIFICATION	9.090466757840037E-5	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999895704646506	WITHOUT_CLASSIFICATION	1.0429535349404911E-4	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999918915948753	WITHOUT_CLASSIFICATION	8.108405124662645E-6	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998557275222023	WITHOUT_CLASSIFICATION	1.4427247779765987E-4	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9998989218793999	WITHOUT_CLASSIFICATION	1.0107812060013102E-4	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9998989218793999	WITHOUT_CLASSIFICATION	1.0107812060013102E-4	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9998989218793999	WITHOUT_CLASSIFICATION	1.0107812060013102E-4	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9998989218793999	WITHOUT_CLASSIFICATION	1.0107812060013102E-4	DOCUMENTATION
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998610157641423	WITHOUT_CLASSIFICATION	1.3898423585762242E-4	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9995263507728058	WITHOUT_CLASSIFICATION	4.736492271942527E-4	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9996073203226722	WITHOUT_CLASSIFICATION	3.9267967732774765E-4	DOCUMENTATION
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9999237772593043	WITHOUT_CLASSIFICATION	7.622274069581683E-5	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998594349419764	WITHOUT_CLASSIFICATION	1.4056505802363342E-4	DOCUMENTATION
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998630416998299	WITHOUT_CLASSIFICATION	1.36958300170196E-4	DOCUMENTATION
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9998236401047553	WITHOUT_CLASSIFICATION	1.763598952446657E-4	DOCUMENTATION
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999487372693082	WITHOUT_CLASSIFICATION	5.126273069178502E-5	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9992251768370471	WITHOUT_CLASSIFICATION	7.748231629527753E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9998626285461434	WITHOUT_CLASSIFICATION	1.373714538567171E-4	DOCUMENTATION
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9997990125572772	WITHOUT_CLASSIFICATION	2.0098744272288105E-4	DOCUMENTATION
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999062177675392	WITHOUT_CLASSIFICATION	9.378223246087282E-5	DOCUMENTATION
//no big deal	WITHOUT_CLASSIFICATION	0.9992225242182903	WITHOUT_CLASSIFICATION	7.774757817097625E-4	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9997979416089767	WITHOUT_CLASSIFICATION	2.0205839102335353E-4	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9997979416089767	WITHOUT_CLASSIFICATION	2.0205839102335353E-4	DOCUMENTATION
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999408984529871	WITHOUT_CLASSIFICATION	5.910154701305472E-5	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9998972589633937	WITHOUT_CLASSIFICATION	1.0274103660638411E-4	DOCUMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9995802024960531	WITHOUT_CLASSIFICATION	4.1979750394686906E-4	DOCUMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.999836445892116	WITHOUT_CLASSIFICATION	1.6355410788400845E-4	DOCUMENTATION
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998940567732071	WITHOUT_CLASSIFICATION	1.0594322679289685E-4	DOCUMENTATION
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9998805988096674	WITHOUT_CLASSIFICATION	1.1940119033250065E-4	DOCUMENTATION
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.999844591021224	WITHOUT_CLASSIFICATION	1.5540897877605898E-4	DOCUMENTATION
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.999871523067585	WITHOUT_CLASSIFICATION	1.2847693241501175E-4	DOCUMENTATION
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.999803334591963	WITHOUT_CLASSIFICATION	1.966654080368849E-4	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9998600909756309	WITHOUT_CLASSIFICATION	1.39909024369142E-4	DOCUMENTATION
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.999920040628751	WITHOUT_CLASSIFICATION	7.99593712490272E-5	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9999385437434236	WITHOUT_CLASSIFICATION	6.145625657635202E-5	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.999898330032406	WITHOUT_CLASSIFICATION	1.0166996759403337E-4	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9998114795154032	WITHOUT_CLASSIFICATION	1.8852048459678261E-4	DOCUMENTATION
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9998153971279816	WITHOUT_CLASSIFICATION	1.8460287201851043E-4	DOCUMENTATION
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.999919452750032	WITHOUT_CLASSIFICATION	8.054724996801332E-5	DOCUMENTATION
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999580063027466	WITHOUT_CLASSIFICATION	4.199369725339922E-5	DOCUMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9994945728675798	WITHOUT_CLASSIFICATION	5.054271324201777E-4	DOCUMENTATION
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9996351298958887	WITHOUT_CLASSIFICATION	3.6487010411137257E-4	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.999956299565208	WITHOUT_CLASSIFICATION	4.3700434791985535E-5	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999295828110124	WITHOUT_CLASSIFICATION	7.041718898770327E-5	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9998327000047671	WITHOUT_CLASSIFICATION	1.672999952330099E-4	DOCUMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999259571702314	WITHOUT_CLASSIFICATION	7.404282976861868E-5	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9995344272478125	WITHOUT_CLASSIFICATION	4.6557275218750145E-4	DOCUMENTATION
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9998706650320774	WITHOUT_CLASSIFICATION	1.2933496792251595E-4	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9996639158858742	WITHOUT_CLASSIFICATION	3.360841141257888E-4	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999746514827783	WITHOUT_CLASSIFICATION	2.5348517221600112E-5	DOCUMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999236753598608	WITHOUT_CLASSIFICATION	7.63246401392172E-5	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9992229555212971	WITHOUT_CLASSIFICATION	7.770444787028918E-4	DOCUMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9996576110606894	WITHOUT_CLASSIFICATION	3.423889393105174E-4	DOCUMENTATION
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9959815078353421	WITHOUT_CLASSIFICATION	0.004018492164657904	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999954225313582	WITHOUT_CLASSIFICATION	4.577468641777674E-6	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.9999254354779913	WITHOUT_CLASSIFICATION	7.456452200872666E-5	DOCUMENTATION
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9994041093140736	WITHOUT_CLASSIFICATION	5.958906859263674E-4	DOCUMENTATION
//handle empty collections	WITHOUT_CLASSIFICATION	0.9996257857542002	WITHOUT_CLASSIFICATION	3.7421424579980644E-4	DOCUMENTATION
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.99999534540317	WITHOUT_CLASSIFICATION	4.654596830073737E-6	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9998552212047169	WITHOUT_CLASSIFICATION	1.447787952831314E-4	DOCUMENTATION
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9999948084984642	WITHOUT_CLASSIFICATION	5.191501535825453E-6	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999812223040042	WITHOUT_CLASSIFICATION	1.8777695995830308E-5	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9994194794762642	WITHOUT_CLASSIFICATION	5.805205237358294E-4	DOCUMENTATION
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9996393457262195	WITHOUT_CLASSIFICATION	3.6065427378049385E-4	DOCUMENTATION
//use the id passed in	WITHOUT_CLASSIFICATION	0.9996655024565734	WITHOUT_CLASSIFICATION	3.3449754342667416E-4	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9994666088969187	WITHOUT_CLASSIFICATION	5.333911030813289E-4	DOCUMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9998511716521142	WITHOUT_CLASSIFICATION	1.4882834788584412E-4	DOCUMENTATION
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9997756444216328	WITHOUT_CLASSIFICATION	2.2435557836714875E-4	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9996072886883053	WITHOUT_CLASSIFICATION	3.927113116946519E-4	DOCUMENTATION
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9988676899851732	WITHOUT_CLASSIFICATION	0.001132310014826797	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9998770381039376	WITHOUT_CLASSIFICATION	1.2296189606241865E-4	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9994756618155176	WITHOUT_CLASSIFICATION	5.243381844824063E-4	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.998975567297128	WITHOUT_CLASSIFICATION	0.001024432702871944	DOCUMENTATION
// look for a proxy	WITHOUT_CLASSIFICATION	0.9999704435679249	WITHOUT_CLASSIFICATION	2.9556432075167145E-5	DOCUMENTATION
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.998063491177812	WITHOUT_CLASSIFICATION	0.0019365088221880006	DOCUMENTATION
//its the given optional object	WITHOUT_CLASSIFICATION	0.9990308749391017	WITHOUT_CLASSIFICATION	9.691250608981626E-4	DOCUMENTATION
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.999972265782292	WITHOUT_CLASSIFICATION	2.7734217707894348E-5	DOCUMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9993941400690267	WITHOUT_CLASSIFICATION	6.058599309732118E-4	DOCUMENTATION
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999661260546515	WITHOUT_CLASSIFICATION	3.3873945348465076E-5	DOCUMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999049681151109	WITHOUT_CLASSIFICATION	9.50318848891172E-5	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999942689581617	WITHOUT_CLASSIFICATION	5.7310418383684926E-6	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9994614322240877	WITHOUT_CLASSIFICATION	5.385677759123196E-4	DOCUMENTATION
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.999972585604023	WITHOUT_CLASSIFICATION	2.7414395976946957E-5	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9999318045792214	WITHOUT_CLASSIFICATION	6.819542077868759E-5	DOCUMENTATION
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999890708825881	WITHOUT_CLASSIFICATION	1.0929117411788728E-5	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.999194599148226	WITHOUT_CLASSIFICATION	8.054008517741025E-4	DOCUMENTATION
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9999006930711888	WITHOUT_CLASSIFICATION	9.930692881117839E-5	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.999830892687441	WITHOUT_CLASSIFICATION	1.6910731255904027E-4	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9986541402720932	WITHOUT_CLASSIFICATION	0.001345859727906811	DOCUMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9998716685182132	WITHOUT_CLASSIFICATION	1.2833148178678804E-4	DOCUMENTATION
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9997495302003347	WITHOUT_CLASSIFICATION	2.50469799665295E-4	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.999933570484436	WITHOUT_CLASSIFICATION	6.64295155640151E-5	DOCUMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.999971838201318	WITHOUT_CLASSIFICATION	2.8161798681987995E-5	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.999453502209737	WITHOUT_CLASSIFICATION	5.46497790262971E-4	DOCUMENTATION
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999825706996701	WITHOUT_CLASSIFICATION	1.742930032992529E-5	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.999083160435261	WITHOUT_CLASSIFICATION	9.168395647389186E-4	DOCUMENTATION
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9997359241599442	WITHOUT_CLASSIFICATION	2.6407584005591823E-4	DOCUMENTATION
//a composite key	WITHOUT_CLASSIFICATION	0.9989750081633203	WITHOUT_CLASSIFICATION	0.001024991836679779	DOCUMENTATION
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999660682164975	WITHOUT_CLASSIFICATION	3.393178350241982E-5	DOCUMENTATION
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999178939526012	WITHOUT_CLASSIFICATION	8.210604739879041E-5	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.9999362499156975	WITHOUT_CLASSIFICATION	6.375008430240079E-5	DOCUMENTATION
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9992874006055251	WITHOUT_CLASSIFICATION	7.1259939447488E-4	DOCUMENTATION
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9998024110204334	WITHOUT_CLASSIFICATION	1.9758897956662395E-4	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9999920163293077	WITHOUT_CLASSIFICATION	7.983670692352614E-6	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9998918613156691	WITHOUT_CLASSIFICATION	1.0813868433089265E-4	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9997272341340252	WITHOUT_CLASSIFICATION	2.7276586597479004E-4	DOCUMENTATION
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9998340929440308	WITHOUT_CLASSIFICATION	1.659070559690999E-4	DOCUMENTATION
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9996641115181413	WITHOUT_CLASSIFICATION	3.358884818587678E-4	DOCUMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9995178797377934	WITHOUT_CLASSIFICATION	4.821202622066842E-4	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9994525153873026	WITHOUT_CLASSIFICATION	5.474846126974643E-4	DOCUMENTATION
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9995161739887757	WITHOUT_CLASSIFICATION	4.838260112243038E-4	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9995200024414262	WITHOUT_CLASSIFICATION	4.7999755857384974E-4	DOCUMENTATION
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9998268449115669	WITHOUT_CLASSIFICATION	1.7315508843301713E-4	DOCUMENTATION
// if it is a compound path	WITHOUT_CLASSIFICATION	0.999992621720834	WITHOUT_CLASSIFICATION	7.37827916597465E-6	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9999436166047327	WITHOUT_CLASSIFICATION	5.638339526724483E-5	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9998874834665097	WITHOUT_CLASSIFICATION	1.1251653349032146E-4	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9999054736171703	WITHOUT_CLASSIFICATION	9.452638282974506E-5	DOCUMENTATION
//the criteria instance	WITHOUT_CLASSIFICATION	0.9995590778318193	WITHOUT_CLASSIFICATION	4.409221681806414E-4	DOCUMENTATION
// the entity name	WITHOUT_CLASSIFICATION	0.9999169031570408	WITHOUT_CLASSIFICATION	8.309684295906287E-5	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9994998131908707	WITHOUT_CLASSIFICATION	5.001868091293952E-4	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9994998131908707	WITHOUT_CLASSIFICATION	5.001868091293952E-4	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9996832341655298	WITHOUT_CLASSIFICATION	3.1676583447013453E-4	DOCUMENTATION
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9995571379838214	WITHOUT_CLASSIFICATION	4.4286201617863713E-4	DOCUMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9998592405842768	WITHOUT_CLASSIFICATION	1.4075941572327748E-4	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999043389382315	WITHOUT_CLASSIFICATION	9.566106176858374E-5	DOCUMENTATION
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9998237427516118	WITHOUT_CLASSIFICATION	1.7625724838826184E-4	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9998643904743243	WITHOUT_CLASSIFICATION	1.3560952567576314E-4	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9997919401584945	WITHOUT_CLASSIFICATION	2.08059841505591E-4	DOCUMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9996493229098673	WITHOUT_CLASSIFICATION	3.5067709013262595E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9998079199572182	WITHOUT_CLASSIFICATION	1.9208004278181232E-4	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.999962581788109	WITHOUT_CLASSIFICATION	3.741821189087347E-5	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999771480819803	WITHOUT_CLASSIFICATION	2.285191801961339E-5	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9998717000929497	WITHOUT_CLASSIFICATION	1.282999070503667E-4	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9998597448839123	WITHOUT_CLASSIFICATION	1.402551160877621E-4	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999469114482353	WITHOUT_CLASSIFICATION	5.308855176458964E-5	DOCUMENTATION
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999627393622649	WITHOUT_CLASSIFICATION	3.726063773523148E-5	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.999839194507556	WITHOUT_CLASSIFICATION	1.6080549244402732E-4	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.999839194507556	WITHOUT_CLASSIFICATION	1.6080549244402732E-4	DOCUMENTATION
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999514766446148	WITHOUT_CLASSIFICATION	4.852335538522392E-5	DOCUMENTATION
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999615674388966	WITHOUT_CLASSIFICATION	3.843256110339694E-5	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999673762150441	WITHOUT_CLASSIFICATION	3.2623784956005004E-5	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999701320876198	WITHOUT_CLASSIFICATION	2.9867912380222823E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999525094623364	WITHOUT_CLASSIFICATION	4.749053766366917E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999220122589534	WITHOUT_CLASSIFICATION	7.798774104670033E-5	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999220122589534	WITHOUT_CLASSIFICATION	7.798774104670033E-5	DOCUMENTATION
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9998128162159147	WITHOUT_CLASSIFICATION	1.8718378408535442E-4	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999925594982727	WITHOUT_CLASSIFICATION	7.440501727279461E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999263080737844	WITHOUT_CLASSIFICATION	7.369192621567787E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999959487755731	WITHOUT_CLASSIFICATION	4.05122442692404E-6	DOCUMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.999834683819825	WITHOUT_CLASSIFICATION	1.653161801748875E-4	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999479757928756	WITHOUT_CLASSIFICATION	5.202420712425401E-5	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999251525802172	WITHOUT_CLASSIFICATION	7.484741978278942E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999113759149932	WITHOUT_CLASSIFICATION	8.862408500674012E-5	DOCUMENTATION
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.999897644593377	WITHOUT_CLASSIFICATION	1.023554066229441E-4	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999891716156167	WITHOUT_CLASSIFICATION	1.0828384383237686E-5	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999482837702758	WITHOUT_CLASSIFICATION	5.171622972427371E-5	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999760581854588	WITHOUT_CLASSIFICATION	2.394181454124244E-5	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.9999691406698162	WITHOUT_CLASSIFICATION	3.085933018371656E-5	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9992834137073667	WITHOUT_CLASSIFICATION	7.165862926333596E-4	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9998010512566115	WITHOUT_CLASSIFICATION	1.9894874338842456E-4	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9995795678834927	WITHOUT_CLASSIFICATION	4.2043211650737405E-4	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9987287935417941	WITHOUT_CLASSIFICATION	0.0012712064582058383	DOCUMENTATION
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9998285840733924	WITHOUT_CLASSIFICATION	1.7141592660765019E-4	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999289996438121	WITHOUT_CLASSIFICATION	7.10003561878443E-5	DOCUMENTATION
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999056457477034	WITHOUT_CLASSIFICATION	9.43542522967077E-5	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999540361769201	WITHOUT_CLASSIFICATION	4.596382307991507E-5	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9997575458121567	WITHOUT_CLASSIFICATION	2.4245418784339182E-4	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9998375471646638	WITHOUT_CLASSIFICATION	1.6245283533615617E-4	DOCUMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9998563436023167	WITHOUT_CLASSIFICATION	1.4365639768321316E-4	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9998606250246799	WITHOUT_CLASSIFICATION	1.3937497532012148E-4	DOCUMENTATION
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.999989990813682	WITHOUT_CLASSIFICATION	1.0009186318034667E-5	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9999898901990033	WITHOUT_CLASSIFICATION	1.0109800996574774E-5	DOCUMENTATION
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9999667222836823	WITHOUT_CLASSIFICATION	3.3277716317729965E-5	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999721055727526	WITHOUT_CLASSIFICATION	2.7894427247370025E-5	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.9989241297655336	WITHOUT_CLASSIFICATION	0.001075870234466469	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9999448721275233	WITHOUT_CLASSIFICATION	5.51278724768327E-5	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9995305112107173	WITHOUT_CLASSIFICATION	4.6948878928259534E-4	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.999321922612463	WITHOUT_CLASSIFICATION	6.780773875370386E-4	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9997613741653216	WITHOUT_CLASSIFICATION	2.3862583467836043E-4	DOCUMENTATION
//may be final	WITHOUT_CLASSIFICATION	0.999706994103493	WITHOUT_CLASSIFICATION	2.930058965070507E-4	DOCUMENTATION
// may be final	WITHOUT_CLASSIFICATION	0.9999589808529971	WITHOUT_CLASSIFICATION	4.1019147002955146E-5	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9995242030713635	WITHOUT_CLASSIFICATION	4.7579692863647567E-4	DOCUMENTATION
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9998973480721388	WITHOUT_CLASSIFICATION	1.0265192786117311E-4	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9998344642919503	WITHOUT_CLASSIFICATION	1.65535708049697E-4	DOCUMENTATION
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9995165694662268	WITHOUT_CLASSIFICATION	4.834305337732562E-4	DOCUMENTATION
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9997538736035617	WITHOUT_CLASSIFICATION	2.4612639643833186E-4	DOCUMENTATION
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999863763637232	WITHOUT_CLASSIFICATION	1.3623636276766465E-5	DOCUMENTATION
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999596268761234	WITHOUT_CLASSIFICATION	4.037312387672258E-5	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9995242030713635	WITHOUT_CLASSIFICATION	4.7579692863647567E-4	DOCUMENTATION
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999115843130253	WITHOUT_CLASSIFICATION	8.841568697475113E-5	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9994483920388825	WITHOUT_CLASSIFICATION	5.516079611174847E-4	DOCUMENTATION
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999031587742541	WITHOUT_CLASSIFICATION	9.684122574604225E-5	DOCUMENTATION
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9999667092555619	WITHOUT_CLASSIFICATION	3.329074443814907E-5	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.999834960943067	WITHOUT_CLASSIFICATION	1.6503905693304553E-4	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9999052257252276	WITHOUT_CLASSIFICATION	9.477427477240093E-5	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9997481855581171	WITHOUT_CLASSIFICATION	2.518144418829856E-4	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9998556856403326	WITHOUT_CLASSIFICATION	1.44314359667446E-4	DOCUMENTATION
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999674999092969	WITHOUT_CLASSIFICATION	3.2500090703119634E-5	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9993923801779876	WITHOUT_CLASSIFICATION	6.076198220123188E-4	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999677036470145	WITHOUT_CLASSIFICATION	3.229635298551673E-5	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9993923801779876	WITHOUT_CLASSIFICATION	6.076198220123188E-4	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999731384630424	WITHOUT_CLASSIFICATION	2.6861536957539202E-5	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9983621301578756	WITHOUT_CLASSIFICATION	0.001637869842124424	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999731384630424	WITHOUT_CLASSIFICATION	2.6861536957539202E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999867621069324	WITHOUT_CLASSIFICATION	1.323789306760664E-4	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9998636746762485	WITHOUT_CLASSIFICATION	1.3632532375148997E-4	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9992718778526763	WITHOUT_CLASSIFICATION	7.281221473236843E-4	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9992718778526763	WITHOUT_CLASSIFICATION	7.281221473236843E-4	DOCUMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.999302034290569	WITHOUT_CLASSIFICATION	6.979657094310282E-4	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9993067441126957	WITHOUT_CLASSIFICATION	6.932558873043803E-4	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.999302034290569	WITHOUT_CLASSIFICATION	6.979657094310282E-4	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9995214680333175	WITHOUT_CLASSIFICATION	4.7853196668236326E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.999708223287714	WITHOUT_CLASSIFICATION	2.917767122860148E-4	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9991168643417669	WITHOUT_CLASSIFICATION	8.831356582331416E-4	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9993550040610572	WITHOUT_CLASSIFICATION	6.449959389428861E-4	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
//SQL statements	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9997920295839589	WITHOUT_CLASSIFICATION	2.0797041604121542E-4	DOCUMENTATION
//types	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9998279940547778	WITHOUT_CLASSIFICATION	1.7200594522216768E-4	DOCUMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.99933116061218	WITHOUT_CLASSIFICATION	6.688393878200017E-4	DOCUMENTATION
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999624057454928	WITHOUT_CLASSIFICATION	3.759425450712662E-5	DOCUMENTATION
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999620337829369	WITHOUT_CLASSIFICATION	3.7966217063019965E-5	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999209645841233	WITHOUT_CLASSIFICATION	7.903541587671438E-5	DOCUMENTATION
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9995795678834927	WITHOUT_CLASSIFICATION	4.2043211650737405E-4	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999227430403874	WITHOUT_CLASSIFICATION	7.725695961262604E-5	DOCUMENTATION
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999054736171703	WITHOUT_CLASSIFICATION	9.452638282974506E-5	DOCUMENTATION
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999202162279157	WITHOUT_CLASSIFICATION	7.978377208434889E-5	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9995795678834927	WITHOUT_CLASSIFICATION	4.2043211650737405E-4	DOCUMENTATION
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9995822868379882	WITHOUT_CLASSIFICATION	4.177131620118814E-4	DOCUMENTATION
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9991177679930933	WITHOUT_CLASSIFICATION	8.822320069067155E-4	DOCUMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9997713815581871	WITHOUT_CLASSIFICATION	2.2861844181292802E-4	DOCUMENTATION
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.998892152139144	WITHOUT_CLASSIFICATION	0.001107847860855971	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9998004208477833	WITHOUT_CLASSIFICATION	1.9957915221673522E-4	DOCUMENTATION
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9999002830679111	WITHOUT_CLASSIFICATION	9.971693208890499E-5	DOCUMENTATION
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.9998782626111038	WITHOUT_CLASSIFICATION	1.217373888962465E-4	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9999534735653125	WITHOUT_CLASSIFICATION	4.652643468760707E-5	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9991168643417669	WITHOUT_CLASSIFICATION	8.831356582331416E-4	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999661780891577	WITHOUT_CLASSIFICATION	3.382191084237429E-5	DOCUMENTATION
//needed by arrays	WITHOUT_CLASSIFICATION	0.9991960301752753	WITHOUT_CLASSIFICATION	8.039698247246193E-4	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9994996515856664	WITHOUT_CLASSIFICATION	5.003484143336118E-4	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9991141715577685	WITHOUT_CLASSIFICATION	8.858284422314838E-4	DOCUMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999290831677965	WITHOUT_CLASSIFICATION	7.091683220350925E-5	DOCUMENTATION
//create all the new entries	WITHOUT_CLASSIFICATION	0.9996878561538669	WITHOUT_CLASSIFICATION	3.1214384613316036E-4	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9995214680333175	WITHOUT_CLASSIFICATION	4.7853196668236326E-4	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9995214680333175	WITHOUT_CLASSIFICATION	4.7853196668236326E-4	DOCUMENTATION
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9995187244077418	WITHOUT_CLASSIFICATION	4.8127559225827755E-4	DOCUMENTATION
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9996878561538669	WITHOUT_CLASSIFICATION	3.1214384613316036E-4	DOCUMENTATION
//==elementType ??	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9995265919591397	WITHOUT_CLASSIFICATION	4.7340804086034E-4	DOCUMENTATION
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9998374737167133	WITHOUT_CLASSIFICATION	1.625262832867444E-4	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9998704094866313	WITHOUT_CLASSIFICATION	1.2959051336857767E-4	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999654849429844	WITHOUT_CLASSIFICATION	3.4515057015564156E-5	DOCUMENTATION
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9998765490527373	WITHOUT_CLASSIFICATION	1.2345094726276282E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9998038019648899	WITHOUT_CLASSIFICATION	1.9619803511008522E-4	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999580339313253	WITHOUT_CLASSIFICATION	4.1966068674772104E-5	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.99933116061218	WITHOUT_CLASSIFICATION	6.688393878200017E-4	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9991214178163688	WITHOUT_CLASSIFICATION	8.785821836312615E-4	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999580339313253	WITHOUT_CLASSIFICATION	4.1966068674772104E-5	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999056382566824	WITHOUT_CLASSIFICATION	9.436174331756787E-5	DOCUMENTATION
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9999826231449261	WITHOUT_CLASSIFICATION	1.7376855073862696E-5	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9997617582515572	WITHOUT_CLASSIFICATION	2.3824174844262972E-4	DOCUMENTATION
//TODO: check this....	WITHOUT_CLASSIFICATION	0.9989738399058664	WITHOUT_CLASSIFICATION	0.0010261600941335793	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9998096948549288	WITHOUT_CLASSIFICATION	1.9030514507116107E-4	DOCUMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999408700147796	WITHOUT_CLASSIFICATION	5.9129985220394073E-5	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999453738564179	WITHOUT_CLASSIFICATION	5.462614358217958E-5	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.999962519106463	WITHOUT_CLASSIFICATION	3.7480893536957404E-5	DOCUMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999099435433386	WITHOUT_CLASSIFICATION	9.005645666134683E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9993968780414614	WITHOUT_CLASSIFICATION	6.031219585386579E-4	DOCUMENTATION
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9973875282655148	WITHOUT_CLASSIFICATION	0.0026124717344851076	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999580339313253	WITHOUT_CLASSIFICATION	4.1966068674772104E-5	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9998096948549288	WITHOUT_CLASSIFICATION	1.9030514507116107E-4	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999453738564179	WITHOUT_CLASSIFICATION	5.462614358217958E-5	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9996381466782605	WITHOUT_CLASSIFICATION	3.6185332173964836E-4	DOCUMENTATION
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9998327747467649	WITHOUT_CLASSIFICATION	1.6722525323507433E-4	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999083823513348	WITHOUT_CLASSIFICATION	9.16176486651493E-5	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9996280668698465	WITHOUT_CLASSIFICATION	3.7193313015345113E-4	DOCUMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.999852426534506	WITHOUT_CLASSIFICATION	1.4757346549396918E-4	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999056382566824	WITHOUT_CLASSIFICATION	9.436174331756787E-5	DOCUMENTATION
// JOINS	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9991152065546194	WITHOUT_CLASSIFICATION	8.847934453806531E-4	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9988352150746088	WITHOUT_CLASSIFICATION	0.0011647849253912177	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9990472431996472	WITHOUT_CLASSIFICATION	9.527568003528236E-4	DOCUMENTATION
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9990472431996472	WITHOUT_CLASSIFICATION	9.527568003528236E-4	DOCUMENTATION
//render the SQL	WITHOUT_CLASSIFICATION	0.9995162356383026	WITHOUT_CLASSIFICATION	4.8376436169737016E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999867621069324	WITHOUT_CLASSIFICATION	1.323789306760664E-4	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999541413088845	WITHOUT_CLASSIFICATION	4.585869111550134E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9998469555905732	WITHOUT_CLASSIFICATION	1.5304440942670756E-4	DOCUMENTATION
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9995801114728817	WITHOUT_CLASSIFICATION	4.19888527118268E-4	DOCUMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.999535940752083	WITHOUT_CLASSIFICATION	4.640592479169672E-4	DOCUMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.999516374869651	WITHOUT_CLASSIFICATION	4.8362513034911286E-4	DOCUMENTATION
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999131457204854	WITHOUT_CLASSIFICATION	8.685427951456505E-5	DOCUMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.9998295565145238	WITHOUT_CLASSIFICATION	1.7044348547631263E-4	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999023295299629	WITHOUT_CLASSIFICATION	9.767047003703045E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9999054736171703	WITHOUT_CLASSIFICATION	9.452638282974506E-5	DOCUMENTATION
//before add :-)	WITHOUT_CLASSIFICATION	0.9985253661118244	WITHOUT_CLASSIFICATION	0.0014746338881755931	DOCUMENTATION
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999591998205941	WITHOUT_CLASSIFICATION	4.080017940581358E-5	DOCUMENTATION
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9997140198068274	WITHOUT_CLASSIFICATION	2.859801931725304E-4	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9995222959851177	WITHOUT_CLASSIFICATION	4.7770401488229924E-4	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9999295748493273	WITHOUT_CLASSIFICATION	7.042515067267977E-5	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.999942968308133	WITHOUT_CLASSIFICATION	5.7031691867025466E-5	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9991912652898353	WITHOUT_CLASSIFICATION	8.0873471016472E-4	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9993065885710822	WITHOUT_CLASSIFICATION	6.934114289177713E-4	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9997530241345074	WITHOUT_CLASSIFICATION	2.469758654925138E-4	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9991120580705225	WITHOUT_CLASSIFICATION	8.879419294775682E-4	DOCUMENTATION
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9997642228284155	WITHOUT_CLASSIFICATION	2.3577717158448507E-4	DOCUMENTATION
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999882793198062	WITHOUT_CLASSIFICATION	1.1720680193898997E-5	DOCUMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9997147788010028	WITHOUT_CLASSIFICATION	2.852211989972215E-4	DOCUMENTATION
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999250446058612	WITHOUT_CLASSIFICATION	7.49553941388264E-5	DOCUMENTATION
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.999869048799939	WITHOUT_CLASSIFICATION	1.3095120006099563E-4	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9985941637887553	WITHOUT_CLASSIFICATION	0.0014058362112447044	DOCUMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.999885951125901	WITHOUT_CLASSIFICATION	1.1404887409906197E-4	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999527736977945	WITHOUT_CLASSIFICATION	4.722630220558199E-5	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999696864672684	WITHOUT_CLASSIFICATION	3.0313532731723595E-5	DOCUMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9998416655137069	WITHOUT_CLASSIFICATION	1.583344862931831E-4	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.9913905109858964	WITHOUT_CLASSIFICATION	0.008609489014103733	DOCUMENTATION
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9991498869052956	WITHOUT_CLASSIFICATION	8.501130947043127E-4	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.999668745805976	WITHOUT_CLASSIFICATION	3.312541940239957E-4	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9998987483409822	WITHOUT_CLASSIFICATION	1.0125165901774043E-4	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.999382638395117	WITHOUT_CLASSIFICATION	6.17361604882904E-4	DOCUMENTATION
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9994262226662243	WITHOUT_CLASSIFICATION	5.737773337756697E-4	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999849878569137	WITHOUT_CLASSIFICATION	1.5012143086249774E-5	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9991988527434263	WITHOUT_CLASSIFICATION	8.011472565735968E-4	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999799945017925	WITHOUT_CLASSIFICATION	2.000549820742712E-5	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.999956129015525	WITHOUT_CLASSIFICATION	4.387098447504532E-5	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9998501735874696	WITHOUT_CLASSIFICATION	1.498264125304399E-4	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.999914099757582	WITHOUT_CLASSIFICATION	8.5900242417925E-5	DOCUMENTATION
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9998970518759883	WITHOUT_CLASSIFICATION	1.029481240117163E-4	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9998501735874696	WITHOUT_CLASSIFICATION	1.498264125304399E-4	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.999956129015525	WITHOUT_CLASSIFICATION	4.387098447504532E-5	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.999914099757582	WITHOUT_CLASSIFICATION	8.5900242417925E-5	DOCUMENTATION
// add the primary key	WITHOUT_CLASSIFICATION	0.9999157616269736	WITHOUT_CLASSIFICATION	8.423837302638168E-5	DOCUMENTATION
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9998760137304985	WITHOUT_CLASSIFICATION	1.239862695014211E-4	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999749269355094	WITHOUT_CLASSIFICATION	2.507306449063566E-5	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9999486134961759	WITHOUT_CLASSIFICATION	5.138650382418913E-5	DOCUMENTATION
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9998662341435443	WITHOUT_CLASSIFICATION	1.3376585645575564E-4	DOCUMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9966915561623642	WITHOUT_CLASSIFICATION	0.003308443837635887	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9970174105699596	WITHOUT_CLASSIFICATION	0.002982589430040344	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9772372588528481	WITHOUT_CLASSIFICATION	0.022762741147151877	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9997141131342691	WITHOUT_CLASSIFICATION	2.8588686573088656E-4	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9997318137476345	WITHOUT_CLASSIFICATION	2.681862523655073E-4	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.999828395531416	WITHOUT_CLASSIFICATION	1.7160446858401578E-4	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9996952113366621	WITHOUT_CLASSIFICATION	3.047886633379963E-4	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9998686675008774	WITHOUT_CLASSIFICATION	1.3133249912254568E-4	DOCUMENTATION
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9997365100709085	WITHOUT_CLASSIFICATION	2.634899290916049E-4	DOCUMENTATION
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9995302526077006	WITHOUT_CLASSIFICATION	4.697473922994719E-4	DOCUMENTATION
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999396536509424	WITHOUT_CLASSIFICATION	6.034634905760636E-5	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999849395258168	WITHOUT_CLASSIFICATION	1.5060474183146458E-5	DOCUMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9997700893705689	WITHOUT_CLASSIFICATION	2.2991062943108971E-4	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9996756915538539	WITHOUT_CLASSIFICATION	3.243084461460671E-4	DOCUMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9991194871541151	WITHOUT_CLASSIFICATION	8.80512845884912E-4	DOCUMENTATION
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9989461057457201	WITHOUT_CLASSIFICATION	0.0010538942542798956	DOCUMENTATION
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9994782400379296	WITHOUT_CLASSIFICATION	5.217599620704045E-4	DOCUMENTATION
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999615900910395	WITHOUT_CLASSIFICATION	3.840990896064449E-5	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9998921102666598	WITHOUT_CLASSIFICATION	1.0788973334010407E-4	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9991194871541151	WITHOUT_CLASSIFICATION	8.80512845884912E-4	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9991194871541151	WITHOUT_CLASSIFICATION	8.80512845884912E-4	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999239129730704	WITHOUT_CLASSIFICATION	7.608702692964254E-5	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999239129730704	WITHOUT_CLASSIFICATION	7.608702692964254E-5	DOCUMENTATION
// not supported	WITHOUT_CLASSIFICATION	0.9999219900383399	WITHOUT_CLASSIFICATION	7.800996166007433E-5	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999849395258168	WITHOUT_CLASSIFICATION	1.5060474183146458E-5	DOCUMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9979805644436708	WITHOUT_CLASSIFICATION	0.002019435556329232	DOCUMENTATION
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999334907629381	WITHOUT_CLASSIFICATION	6.650923706184214E-5	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9998275201134339	WITHOUT_CLASSIFICATION	1.7247988656608854E-4	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9998275201134339	WITHOUT_CLASSIFICATION	1.7247988656608854E-4	DOCUMENTATION
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9995713069973977	WITHOUT_CLASSIFICATION	4.2869300260224433E-4	DOCUMENTATION
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9995043175218219	WITHOUT_CLASSIFICATION	4.956824781780346E-4	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.999819466721115	WITHOUT_CLASSIFICATION	1.80533278884963E-4	DOCUMENTATION
//skip the driving table	WITHOUT_CLASSIFICATION	0.9997607766751936	WITHOUT_CLASSIFICATION	2.3922332480646533E-4	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9998845612384245	WITHOUT_CLASSIFICATION	1.1543876157549166E-4	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999488392904704	WITHOUT_CLASSIFICATION	5.11607095296152E-5	DOCUMENTATION
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9998709096520301	WITHOUT_CLASSIFICATION	1.2909034796986383E-4	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9993693147385392	WITHOUT_CLASSIFICATION	6.306852614608021E-4	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.999735471562155	WITHOUT_CLASSIFICATION	2.645284378449496E-4	DOCUMENTATION
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999780110760391	WITHOUT_CLASSIFICATION	2.1988923960865402E-5	DOCUMENTATION
//now render the select clause	WITHOUT_CLASSIFICATION	0.9997830035524133	WITHOUT_CLASSIFICATION	2.1699644758666088E-4	DOCUMENTATION
//now tie it all together	WITHOUT_CLASSIFICATION	0.9996968333418744	WITHOUT_CLASSIFICATION	3.031666581255307E-4	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9948083239070522	WITHOUT_CLASSIFICATION	0.005191676092947854	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999351525565636	WITHOUT_CLASSIFICATION	6.484744343645114E-5	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998665343242198	WITHOUT_CLASSIFICATION	1.334656757802674E-4	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9997392440132916	WITHOUT_CLASSIFICATION	2.6075598670833536E-4	DOCUMENTATION
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9998489240692781	WITHOUT_CLASSIFICATION	1.5107593072206482E-4	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9998841230780131	WITHOUT_CLASSIFICATION	1.158769219868497E-4	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999189578707335	WITHOUT_CLASSIFICATION	8.104212926649748E-5	DOCUMENTATION
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999843123674564	WITHOUT_CLASSIFICATION	1.568763254356457E-5	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9998723096715282	WITHOUT_CLASSIFICATION	1.2769032847189554E-4	DOCUMENTATION
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999346949763585	WITHOUT_CLASSIFICATION	6.530502364145452E-5	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9992792352224319	WITHOUT_CLASSIFICATION	7.207647775680609E-4	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9998906259432616	WITHOUT_CLASSIFICATION	1.093740567383783E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9993065885710822	WITHOUT_CLASSIFICATION	6.934114289177713E-4	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9995193778682622	WITHOUT_CLASSIFICATION	4.806221317378392E-4	DOCUMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.999971009303311	WITHOUT_CLASSIFICATION	2.8990696688995972E-5	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998594131903676	WITHOUT_CLASSIFICATION	1.4058680963235172E-4	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.99911523346225	WITHOUT_CLASSIFICATION	8.847665377500048E-4	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.99911523346225	WITHOUT_CLASSIFICATION	8.847665377500048E-4	DOCUMENTATION
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999595111416696	WITHOUT_CLASSIFICATION	4.0488858330363005E-5	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9998316287546201	WITHOUT_CLASSIFICATION	1.6837124537988574E-4	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9998806840533749	WITHOUT_CLASSIFICATION	1.1931594662511795E-4	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9998806840533749	WITHOUT_CLASSIFICATION	1.1931594662511795E-4	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999345881339439	WITHOUT_CLASSIFICATION	6.541186605608328E-5	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9994386297180845	WITHOUT_CLASSIFICATION	5.61370281915472E-4	DOCUMENTATION
// do not do anything	WITHOUT_CLASSIFICATION	0.9999597746528586	WITHOUT_CLASSIFICATION	4.022534714147511E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9998606775479494	WITHOUT_CLASSIFICATION	1.3932245205068084E-4	DOCUMENTATION
//cant instantiate	WITHOUT_CLASSIFICATION	0.9991351082742348	WITHOUT_CLASSIFICATION	8.648917257652513E-4	DOCUMENTATION
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9998877945703731	WITHOUT_CLASSIFICATION	1.1220542962694119E-4	DOCUMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999044630890956	WITHOUT_CLASSIFICATION	9.553691090440518E-5	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.99979303338399	WITHOUT_CLASSIFICATION	2.0696661601003345E-4	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.99979303338399	WITHOUT_CLASSIFICATION	2.0696661601003345E-4	DOCUMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999768254282227	WITHOUT_CLASSIFICATION	2.317457177729962E-5	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9998400059882097	WITHOUT_CLASSIFICATION	1.5999401179037486E-4	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9998400059882097	WITHOUT_CLASSIFICATION	1.5999401179037486E-4	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9997753301095829	WITHOUT_CLASSIFICATION	2.2466989041713723E-4	DOCUMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999069634919516	WITHOUT_CLASSIFICATION	9.303650804844013E-5	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
// Get the caller	WITHOUT_CLASSIFICATION	0.9999327263480061	WITHOUT_CLASSIFICATION	6.727365199383253E-5	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999632176464025	WITHOUT_CLASSIFICATION	3.678235359740718E-5	DOCUMENTATION
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9995558701363025	WITHOUT_CLASSIFICATION	4.4412986369739613E-4	DOCUMENTATION
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9998957894546594	WITHOUT_CLASSIFICATION	1.0421054534053238E-4	DOCUMENTATION
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9995479488582337	WITHOUT_CLASSIFICATION	4.5205114176622644E-4	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9994416359163864	WITHOUT_CLASSIFICATION	5.583640836135907E-4	DOCUMENTATION
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9992727658829286	WITHOUT_CLASSIFICATION	7.272341170713894E-4	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999622660781933	WITHOUT_CLASSIFICATION	3.7733921806742957E-5	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.9996809561011574	WITHOUT_CLASSIFICATION	3.1904389884255526E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9998726847068343	WITHOUT_CLASSIFICATION	1.2731529316558425E-4	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999701268125217	WITHOUT_CLASSIFICATION	2.9873187478257802E-5	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
//for MySQL	WITHOUT_CLASSIFICATION	0.9991356001174896	WITHOUT_CLASSIFICATION	8.643998825105168E-4	DOCUMENTATION
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9996144572434418	WITHOUT_CLASSIFICATION	3.8554275655817543E-4	DOCUMENTATION
//null caused some problems	WITHOUT_CLASSIFICATION	0.9980990766000276	WITHOUT_CLASSIFICATION	0.0019009233999724654	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9998304519125308	WITHOUT_CLASSIFICATION	1.695480874692123E-4	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9994843114312918	WITHOUT_CLASSIFICATION	5.156885687081795E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999347253153149	WITHOUT_CLASSIFICATION	6.527468468512155E-5	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9996464262652159	WITHOUT_CLASSIFICATION	3.5357373478412714E-4	DOCUMENTATION
// deprecated option...	WITHOUT_CLASSIFICATION	0.9999186528862913	WITHOUT_CLASSIFICATION	8.134711370863431E-5	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9997213990916637	WITHOUT_CLASSIFICATION	2.786009083362631E-4	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9996965557264648	WITHOUT_CLASSIFICATION	3.034442735353114E-4	DOCUMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999316232626394	WITHOUT_CLASSIFICATION	6.837673736060051E-5	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.999986901829092	WITHOUT_CLASSIFICATION	1.3098170907960468E-5	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9997213990916637	WITHOUT_CLASSIFICATION	2.786009083362631E-4	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9983414897759887	WITHOUT_CLASSIFICATION	0.0016585102240112468	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999130124680284	WITHOUT_CLASSIFICATION	8.698753197161384E-5	DOCUMENTATION
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9998374602812724	WITHOUT_CLASSIFICATION	1.6253971872753857E-4	DOCUMENTATION
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999743320578188	WITHOUT_CLASSIFICATION	2.566794218123248E-5	DOCUMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.99975254488551	WITHOUT_CLASSIFICATION	2.474551144900705E-4	DOCUMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9999563939444316	WITHOUT_CLASSIFICATION	4.360605556842964E-5	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999809481400209	WITHOUT_CLASSIFICATION	1.9051859979114668E-5	DOCUMENTATION
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.999734977222095	WITHOUT_CLASSIFICATION	2.650227779050056E-4	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997223375312244	WITHOUT_CLASSIFICATION	2.7766246877556955E-4	DOCUMENTATION
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999697762001082	WITHOUT_CLASSIFICATION	3.0223799891741875E-5	DOCUMENTATION
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997223375312244	WITHOUT_CLASSIFICATION	2.7766246877556955E-4	DOCUMENTATION
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9998947500488252	WITHOUT_CLASSIFICATION	1.0524995117468784E-4	DOCUMENTATION
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9999059322874256	WITHOUT_CLASSIFICATION	9.406771257436143E-5	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.999466425427683	WITHOUT_CLASSIFICATION	5.335745723168572E-4	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999607794557116	WITHOUT_CLASSIFICATION	3.92205442883595E-5	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.9997982688698718	WITHOUT_CLASSIFICATION	2.0173113012836533E-4	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999391053626143	WITHOUT_CLASSIFICATION	6.0894637385667456E-5	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999234972856451	WITHOUT_CLASSIFICATION	7.650271435485089E-5	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9998739266740636	WITHOUT_CLASSIFICATION	1.260733259364994E-4	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999234972856451	WITHOUT_CLASSIFICATION	7.650271435485089E-5	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999355874712285	WITHOUT_CLASSIFICATION	6.441252877143749E-5	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999853584624091	WITHOUT_CLASSIFICATION	1.4641537590829301E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.999952838197847	WITHOUT_CLASSIFICATION	4.716180215312326E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999302260791576	WITHOUT_CLASSIFICATION	6.977392084243758E-5	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999391053626143	WITHOUT_CLASSIFICATION	6.0894637385667456E-5	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9998739266740636	WITHOUT_CLASSIFICATION	1.260733259364994E-4	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999355874712285	WITHOUT_CLASSIFICATION	6.441252877143749E-5	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9997922757277705	WITHOUT_CLASSIFICATION	2.0772427222945453E-4	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9991430657192357	WITHOUT_CLASSIFICATION	8.569342807641694E-4	DOCUMENTATION
//reset the id	WITHOUT_CLASSIFICATION	0.9995188572896366	WITHOUT_CLASSIFICATION	4.8114271036333336E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.9995267551856319	WITHOUT_CLASSIFICATION	4.732448143680705E-4	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9999492453813085	WITHOUT_CLASSIFICATION	5.0754618691618176E-5	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999116477894755	WITHOUT_CLASSIFICATION	8.835221052443993E-5	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998665343242198	WITHOUT_CLASSIFICATION	1.334656757802674E-4	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999853584624091	WITHOUT_CLASSIFICATION	1.4641537590829301E-5	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9999784952811729	WITHOUT_CLASSIFICATION	2.150471882717235E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.999425346575049	WITHOUT_CLASSIFICATION	5.746534249510416E-4	DOCUMENTATION
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999065927518261	WITHOUT_CLASSIFICATION	9.340724817387577E-5	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998665343242198	WITHOUT_CLASSIFICATION	1.334656757802674E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9995313614301206	WITHOUT_CLASSIFICATION	4.686385698795245E-4	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998665343242198	WITHOUT_CLASSIFICATION	1.334656757802674E-4	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9998322876579488	WITHOUT_CLASSIFICATION	1.6771234205109853E-4	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9998908655585043	WITHOUT_CLASSIFICATION	1.0913444149565372E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9996133178412256	WITHOUT_CLASSIFICATION	3.866821587743269E-4	DOCUMENTATION
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999565208189273	WITHOUT_CLASSIFICATION	4.347918107267168E-5	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999401536563463	WITHOUT_CLASSIFICATION	5.9846343653846634E-5	DOCUMENTATION
// Collection Types:	WITHOUT_CLASSIFICATION	0.999827127482416	WITHOUT_CLASSIFICATION	1.7287251758403032E-4	DOCUMENTATION
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9998311035144695	WITHOUT_CLASSIFICATION	1.6889648553051334E-4	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9998548972909264	WITHOUT_CLASSIFICATION	1.4510270907365183E-4	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.999446758288205	WITHOUT_CLASSIFICATION	5.532417117949185E-4	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9996929567493926	WITHOUT_CLASSIFICATION	3.070432506073026E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999680093692523	WITHOUT_CLASSIFICATION	3.199063074771158E-5	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9996929567493926	WITHOUT_CLASSIFICATION	3.070432506073026E-4	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9996471028818301	WITHOUT_CLASSIFICATION	3.5289711816993273E-4	DOCUMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999449908007181	WITHOUT_CLASSIFICATION	5.500919928200734E-5	DOCUMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999472032717815	WITHOUT_CLASSIFICATION	5.27967282184918E-5	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9999889125969998	WITHOUT_CLASSIFICATION	1.108740300016862E-5	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.999571689714349	WITHOUT_CLASSIFICATION	4.283102856510168E-4	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999584415639804	WITHOUT_CLASSIFICATION	4.1558436019681736E-5	DOCUMENTATION
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999913109342945	WITHOUT_CLASSIFICATION	8.689065705581427E-6	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9989810636338227	WITHOUT_CLASSIFICATION	0.001018936366177324	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9989810636338227	WITHOUT_CLASSIFICATION	0.001018936366177324	DOCUMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9998626912806624	WITHOUT_CLASSIFICATION	1.3730871933760909E-4	DOCUMENTATION
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.999951250582489	WITHOUT_CLASSIFICATION	4.874941751097463E-5	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9999369403184853	WITHOUT_CLASSIFICATION	6.305968151462636E-5	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9999706993753487	WITHOUT_CLASSIFICATION	2.9300624651328097E-5	DOCUMENTATION
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999725489948165	WITHOUT_CLASSIFICATION	2.7451005183582095E-5	DOCUMENTATION
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9999238614670547	WITHOUT_CLASSIFICATION	7.613853294534624E-5	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999241458270935	WITHOUT_CLASSIFICATION	7.585417290648673E-5	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.999641603176538	WITHOUT_CLASSIFICATION	3.5839682346199404E-4	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9987473427056068	WITHOUT_CLASSIFICATION	0.0012526572943931996	DOCUMENTATION
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9976477204840152	WITHOUT_CLASSIFICATION	0.002352279515984785	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.999978662886378	WITHOUT_CLASSIFICATION	2.133711362185176E-5	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999594734554214	WITHOUT_CLASSIFICATION	4.0526544578652536E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9992970363661487	WITHOUT_CLASSIFICATION	7.029636338512712E-4	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9993038161942241	WITHOUT_CLASSIFICATION	6.961838057757769E-4	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9993038161942241	WITHOUT_CLASSIFICATION	6.961838057757769E-4	DOCUMENTATION
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999033575133833	WITHOUT_CLASSIFICATION	9.664248661667632E-5	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9998548972909264	WITHOUT_CLASSIFICATION	1.4510270907365183E-4	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9994450617327734	WITHOUT_CLASSIFICATION	5.549382672265941E-4	DOCUMENTATION
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9992262101457577	WITHOUT_CLASSIFICATION	7.73789854242219E-4	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999612133806427	WITHOUT_CLASSIFICATION	3.8786619357357126E-5	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.99995791525233	WITHOUT_CLASSIFICATION	4.2084747669949626E-5	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.999770153859573	WITHOUT_CLASSIFICATION	2.298461404268764E-4	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9998923326876233	WITHOUT_CLASSIFICATION	1.076673123765776E-4	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9999250581696345	WITHOUT_CLASSIFICATION	7.49418303654927E-5	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.9998910535911247	WITHOUT_CLASSIFICATION	1.0894640887531816E-4	DOCUMENTATION
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999983986664569	WITHOUT_CLASSIFICATION	1.6013335431114274E-6	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9996806291173695	WITHOUT_CLASSIFICATION	3.1937088263046565E-4	DOCUMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999681921796584	WITHOUT_CLASSIFICATION	3.180782034165828E-5	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999979938286181	WITHOUT_CLASSIFICATION	2.0061713818854927E-6	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.999515879959624	WITHOUT_CLASSIFICATION	4.841200403760039E-4	DOCUMENTATION
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999676406904026	WITHOUT_CLASSIFICATION	3.235930959751224E-5	DOCUMENTATION
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9996505748225082	WITHOUT_CLASSIFICATION	3.4942517749180077E-4	DOCUMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9999537503115568	WITHOUT_CLASSIFICATION	4.624968844325813E-5	DOCUMENTATION
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999741599845419	WITHOUT_CLASSIFICATION	2.5840015458195162E-5	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.999837018370987	WITHOUT_CLASSIFICATION	1.6298162901297786E-4	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9998657308397797	WITHOUT_CLASSIFICATION	1.3426916022035826E-4	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999745288916804	WITHOUT_CLASSIFICATION	2.547110831966066E-5	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999832931642582	WITHOUT_CLASSIFICATION	1.6706835741903087E-5	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999920256766962	WITHOUT_CLASSIFICATION	7.974323303762643E-6	DOCUMENTATION
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9998938338166555	WITHOUT_CLASSIFICATION	1.0616618334447227E-4	DOCUMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9993615463060794	WITHOUT_CLASSIFICATION	6.384536939205587E-4	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.9997067689977303	WITHOUT_CLASSIFICATION	2.9323100226981007E-4	DOCUMENTATION
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999460251224804	WITHOUT_CLASSIFICATION	5.397487751952838E-5	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9997070545655207	WITHOUT_CLASSIFICATION	2.9294543447938907E-4	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9998595642571521	WITHOUT_CLASSIFICATION	1.4043574284794153E-4	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9998601276816241	WITHOUT_CLASSIFICATION	1.3987231837597937E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9998597151422454	WITHOUT_CLASSIFICATION	1.4028485775455476E-4	DOCUMENTATION
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999630392926164	WITHOUT_CLASSIFICATION	3.696070738360104E-5	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9998799216661031	WITHOUT_CLASSIFICATION	1.2007833389696586E-4	DOCUMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9995807138428033	WITHOUT_CLASSIFICATION	4.1928615719658967E-4	DOCUMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999747475311912	WITHOUT_CLASSIFICATION	2.5252468808861782E-5	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9998881378556375	WITHOUT_CLASSIFICATION	1.1186214436263101E-4	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9998881378556375	WITHOUT_CLASSIFICATION	1.1186214436263101E-4	DOCUMENTATION
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999493687658488	WITHOUT_CLASSIFICATION	5.063123415115782E-5	DOCUMENTATION
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9999767774249697	WITHOUT_CLASSIFICATION	2.3222575030299234E-5	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9986831385270903	WITHOUT_CLASSIFICATION	0.0013168614729096215	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9986831385270903	WITHOUT_CLASSIFICATION	0.0013168614729096215	DOCUMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9997985499210387	WITHOUT_CLASSIFICATION	2.0145007896131437E-4	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9993866724707247	WITHOUT_CLASSIFICATION	6.133275292753019E-4	DOCUMENTATION
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.9999751644462898	WITHOUT_CLASSIFICATION	2.4835553710184164E-5	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.999985721900025	WITHOUT_CLASSIFICATION	1.4278099975049751E-5	DOCUMENTATION
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998701041822253	WITHOUT_CLASSIFICATION	1.298958177745926E-4	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999022478144671	WITHOUT_CLASSIFICATION	9.775218553289564E-5	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999022478144671	WITHOUT_CLASSIFICATION	9.775218553289564E-5	DOCUMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9995041257169353	WITHOUT_CLASSIFICATION	4.958742830647671E-4	DOCUMENTATION
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9995214680333175	WITHOUT_CLASSIFICATION	4.7853196668236326E-4	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// includes last '.'	WITHOUT_CLASSIFICATION	0.9996404726714806	WITHOUT_CLASSIFICATION	3.595273285193151E-4	DOCUMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999399757907516	WITHOUT_CLASSIFICATION	6.00242092483311E-5	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999987894560336	WITHOUT_CLASSIFICATION	1.2105439664667991E-6	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9997761503073426	WITHOUT_CLASSIFICATION	2.23849692657395E-4	DOCUMENTATION
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999968453286416	WITHOUT_CLASSIFICATION	3.1546713583695216E-6	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9998273776616935	WITHOUT_CLASSIFICATION	1.7262233830658472E-4	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999218855741625	WITHOUT_CLASSIFICATION	7.811442583739035E-5	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999599423054208	WITHOUT_CLASSIFICATION	4.005769457917214E-5	DOCUMENTATION
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999418766212259	WITHOUT_CLASSIFICATION	5.812337877413015E-5	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9998865406551803	WITHOUT_CLASSIFICATION	1.1345934481972377E-4	DOCUMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9993688204722813	WITHOUT_CLASSIFICATION	6.311795277186708E-4	DOCUMENTATION
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9999793476096642	WITHOUT_CLASSIFICATION	2.065239033579601E-5	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9996365372639406	WITHOUT_CLASSIFICATION	3.6346273605943025E-4	DOCUMENTATION
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999410056447423	WITHOUT_CLASSIFICATION	5.8994355257604365E-5	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9998271496374501	WITHOUT_CLASSIFICATION	1.7285036254977403E-4	DOCUMENTATION
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999051713038806	WITHOUT_CLASSIFICATION	9.48286961193648E-5	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999549404227381	WITHOUT_CLASSIFICATION	4.5059577261871554E-5	DOCUMENTATION
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999705766364207	WITHOUT_CLASSIFICATION	2.9423363579229294E-5	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999102311672714	WITHOUT_CLASSIFICATION	8.97688327285668E-5	DOCUMENTATION
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9997848328778034	WITHOUT_CLASSIFICATION	2.1516712219662025E-4	DOCUMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9998856322881239	WITHOUT_CLASSIFICATION	1.1436771187604464E-4	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9996936212582482	WITHOUT_CLASSIFICATION	3.063787417517381E-4	DOCUMENTATION
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9997546541937925	WITHOUT_CLASSIFICATION	2.4534580620751124E-4	DOCUMENTATION
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9995762585589225	WITHOUT_CLASSIFICATION	4.2374144107751516E-4	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.9992542145146919	WITHOUT_CLASSIFICATION	7.45785485308134E-4	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.9999901333040172	WITHOUT_CLASSIFICATION	9.866695982854546E-6	DOCUMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999781025582268	WITHOUT_CLASSIFICATION	2.1897441773175876E-5	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999177492002055	WITHOUT_CLASSIFICATION	8.22507997944808E-5	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999692746033793	WITHOUT_CLASSIFICATION	3.0725396620684654E-5	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999848579385608	WITHOUT_CLASSIFICATION	1.5142061439213583E-5	DOCUMENTATION
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9997355790333974	WITHOUT_CLASSIFICATION	2.644209666026139E-4	DOCUMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9997666076027003	WITHOUT_CLASSIFICATION	2.3339239729973997E-4	DOCUMENTATION
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999459218004092	WITHOUT_CLASSIFICATION	5.4078199590938706E-5	DOCUMENTATION
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9995153919101767	WITHOUT_CLASSIFICATION	4.846080898233087E-4	DOCUMENTATION
//readResolveObject	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9998572354940537	WITHOUT_CLASSIFICATION	1.4276450594631013E-4	DOCUMENTATION
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999681543341186	WITHOUT_CLASSIFICATION	3.1845665881488415E-5	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.999989468521112	WITHOUT_CLASSIFICATION	1.0531478887950682E-5	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9999175053832	WITHOUT_CLASSIFICATION	8.249461679999059E-5	DOCUMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.9996218975853671	WITHOUT_CLASSIFICATION	3.78102414632798E-4	DOCUMENTATION
// Handle actions	WITHOUT_CLASSIFICATION	0.9998365046606117	WITHOUT_CLASSIFICATION	1.634953393882804E-4	DOCUMENTATION
// Print page	WITHOUT_CLASSIFICATION	0.9998275314095562	WITHOUT_CLASSIFICATION	1.724685904439189E-4	DOCUMENTATION
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9998278164178439	WITHOUT_CLASSIFICATION	1.7218358215612245E-4	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.999852241561313	WITHOUT_CLASSIFICATION	1.4775843868689636E-4	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999743018610067	WITHOUT_CLASSIFICATION	2.5698138993239543E-5	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999241372919143	WITHOUT_CLASSIFICATION	7.58627080857264E-5	DOCUMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999164127061633	WITHOUT_CLASSIFICATION	8.358729383669324E-5	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.999946901195128	WITHOUT_CLASSIFICATION	5.309880487201844E-5	DOCUMENTATION
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9998986852063998	WITHOUT_CLASSIFICATION	1.0131479360025216E-4	DOCUMENTATION
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9987635819591226	WITHOUT_CLASSIFICATION	0.001236418040877322	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999851271738133	WITHOUT_CLASSIFICATION	1.4872826186719859E-5	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999252755660737	WITHOUT_CLASSIFICATION	7.472443392629724E-5	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9997848850471356	WITHOUT_CLASSIFICATION	2.1511495286434922E-4	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.999891346845994	WITHOUT_CLASSIFICATION	1.0865315400603621E-4	DOCUMENTATION
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999000757969776	WITHOUT_CLASSIFICATION	9.992420302242144E-5	DOCUMENTATION
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999657940350946	WITHOUT_CLASSIFICATION	3.42059649055368E-5	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999922204982062	WITHOUT_CLASSIFICATION	7.779501793690392E-6	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999840813276273	WITHOUT_CLASSIFICATION	1.591867237270944E-5	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999840813276273	WITHOUT_CLASSIFICATION	1.591867237270944E-5	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999914626122494	WITHOUT_CLASSIFICATION	8.53738775060904E-6	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9999763203275904	WITHOUT_CLASSIFICATION	2.367967240952781E-5	DOCUMENTATION
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999823200528193	WITHOUT_CLASSIFICATION	1.767994718081331E-5	DOCUMENTATION
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9998580237132599	WITHOUT_CLASSIFICATION	1.4197628674009603E-4	DOCUMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999811051838671	WITHOUT_CLASSIFICATION	1.8894816132964187E-5	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999171788430985	WITHOUT_CLASSIFICATION	8.282115690142385E-5	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999348257739592	WITHOUT_CLASSIFICATION	6.517422604070911E-5	DOCUMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999966803073792	WITHOUT_CLASSIFICATION	3.31969262076837E-6	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999492566869727	WITHOUT_CLASSIFICATION	5.074331302741067E-5	DOCUMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999521787283281	WITHOUT_CLASSIFICATION	4.782127167186247E-5	DOCUMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9999887182917361	WITHOUT_CLASSIFICATION	1.1281708263912514E-5	DOCUMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9990958838792964	WITHOUT_CLASSIFICATION	9.041161207037401E-4	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9998934155885514	WITHOUT_CLASSIFICATION	1.0658441144856598E-4	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999611619942964	WITHOUT_CLASSIFICATION	3.8838005703543665E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9998150375316187	WITHOUT_CLASSIFICATION	1.8496246838140972E-4	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9998150375316187	WITHOUT_CLASSIFICATION	1.8496246838140972E-4	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999502220824397	WITHOUT_CLASSIFICATION	4.977791756030874E-5	DOCUMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9998881613140768	WITHOUT_CLASSIFICATION	1.1183868592322712E-4	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.998964533467982	WITHOUT_CLASSIFICATION	0.0010354665320180894	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.9999610217547384	WITHOUT_CLASSIFICATION	3.8978245261531846E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9997720987712964	WITHOUT_CLASSIFICATION	2.2790122870359125E-4	DOCUMENTATION
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998593142628088	WITHOUT_CLASSIFICATION	1.4068573719120154E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.9996464814488876	WITHOUT_CLASSIFICATION	3.5351855111252263E-4	DOCUMENTATION
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.9999907361699194	WITHOUT_CLASSIFICATION	9.26383008062234E-6	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999900470177029	WITHOUT_CLASSIFICATION	9.952982297198864E-6	DOCUMENTATION
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.999986774799812	WITHOUT_CLASSIFICATION	1.3225200187984482E-5	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.999936132657864	WITHOUT_CLASSIFICATION	6.386734213608798E-5	DOCUMENTATION
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.999642715087305	WITHOUT_CLASSIFICATION	3.572849126950214E-4	DOCUMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.999922086688135	WITHOUT_CLASSIFICATION	7.791331186505727E-5	DOCUMENTATION
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9998246985191608	WITHOUT_CLASSIFICATION	1.753014808391827E-4	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9998865875592141	WITHOUT_CLASSIFICATION	1.1341244078588153E-4	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.999988891404726	WITHOUT_CLASSIFICATION	1.1108595273944701E-5	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999791137011668	WITHOUT_CLASSIFICATION	2.0886298833274054E-5	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999531886817937	WITHOUT_CLASSIFICATION	4.68113182063102E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9998911012330423	WITHOUT_CLASSIFICATION	1.0889876695769203E-4	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999486847596425	WITHOUT_CLASSIFICATION	5.131524035756799E-5	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999813247020856	WITHOUT_CLASSIFICATION	1.8675297914510508E-5	DOCUMENTATION
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.99998301972253	WITHOUT_CLASSIFICATION	1.6980277470001104E-5	DOCUMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9994224360645821	WITHOUT_CLASSIFICATION	5.77563935417797E-4	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999564184969758	WITHOUT_CLASSIFICATION	4.358150302420824E-5	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9999700574169609	WITHOUT_CLASSIFICATION	2.994258303911357E-5	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999811765687422	WITHOUT_CLASSIFICATION	1.8823431257840578E-5	DOCUMENTATION
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.999975699593666	WITHOUT_CLASSIFICATION	2.4300406334015037E-5	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9999966073612355	WITHOUT_CLASSIFICATION	3.392638764600595E-6	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999772233205871	WITHOUT_CLASSIFICATION	2.2776679412806068E-5	DOCUMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9997643108325222	WITHOUT_CLASSIFICATION	2.3568916747787225E-4	DOCUMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9996643690772455	WITHOUT_CLASSIFICATION	3.356309227545142E-4	DOCUMENTATION
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9998858805502415	WITHOUT_CLASSIFICATION	1.1411944975842444E-4	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999850816120636	WITHOUT_CLASSIFICATION	1.4918387936334471E-5	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.9998988697312685	WITHOUT_CLASSIFICATION	1.0113026873155506E-4	DOCUMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999911044546838	WITHOUT_CLASSIFICATION	8.895545316160024E-6	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999586425556096	WITHOUT_CLASSIFICATION	4.135744439030342E-5	DOCUMENTATION
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9998459781146584	WITHOUT_CLASSIFICATION	1.5402188534154496E-4	DOCUMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9998740221198541	WITHOUT_CLASSIFICATION	1.2597788014586053E-4	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.999992040076015	WITHOUT_CLASSIFICATION	7.9599239848886E-6	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9998265794634389	WITHOUT_CLASSIFICATION	1.734205365611393E-4	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9998265794634389	WITHOUT_CLASSIFICATION	1.734205365611393E-4	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999353898247938	WITHOUT_CLASSIFICATION	6.46101752062267E-5	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999970453143874	WITHOUT_CLASSIFICATION	2.9546856125974138E-6	DOCUMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.9998814247760803	WITHOUT_CLASSIFICATION	1.1857522391973168E-4	DOCUMENTATION
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9999667251488908	WITHOUT_CLASSIFICATION	3.327485110915036E-5	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999618716637534	WITHOUT_CLASSIFICATION	3.8128336246630994E-5	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9995971414312214	WITHOUT_CLASSIFICATION	4.0285856877868184E-4	DOCUMENTATION
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999752015397328	WITHOUT_CLASSIFICATION	2.479846026705559E-5	DOCUMENTATION
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9998308245937977	WITHOUT_CLASSIFICATION	1.6917540620229937E-4	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999759927306283	WITHOUT_CLASSIFICATION	2.4007269371641985E-5	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998615653144858	WITHOUT_CLASSIFICATION	1.384346855141908E-4	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998615653144858	WITHOUT_CLASSIFICATION	1.384346855141908E-4	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9997604159665682	WITHOUT_CLASSIFICATION	2.3958403343182698E-4	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9998793541091392	WITHOUT_CLASSIFICATION	1.2064589086070646E-4	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999948703724589	WITHOUT_CLASSIFICATION	5.129627541044615E-6	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9999879341904881	WITHOUT_CLASSIFICATION	1.206580951178416E-5	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9997225890096922	WITHOUT_CLASSIFICATION	2.7741099030776685E-4	DOCUMENTATION
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999966519767027	WITHOUT_CLASSIFICATION	3.348023297239231E-6	DOCUMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.999965937884659	WITHOUT_CLASSIFICATION	3.406211534101005E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9999778771543564	WITHOUT_CLASSIFICATION	2.2122845643639036E-5	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.99995977757449	WITHOUT_CLASSIFICATION	4.022242551009549E-5	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999891739271202	WITHOUT_CLASSIFICATION	1.0826072879784218E-5	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9998960808799724	WITHOUT_CLASSIFICATION	1.0391912002753086E-4	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9993026466356143	WITHOUT_CLASSIFICATION	6.973533643857173E-4	DOCUMENTATION
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.9993512456849026	WITHOUT_CLASSIFICATION	6.487543150974363E-4	DOCUMENTATION
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9997261606881273	WITHOUT_CLASSIFICATION	2.738393118727738E-4	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999534405593654	WITHOUT_CLASSIFICATION	4.65594406345074E-5	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.999993397247991	WITHOUT_CLASSIFICATION	6.6027520089851706E-6	DOCUMENTATION
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999108481600514	WITHOUT_CLASSIFICATION	8.915183994862763E-5	DOCUMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9999327016575489	WITHOUT_CLASSIFICATION	6.729834245115366E-5	DOCUMENTATION
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9999738055995788	WITHOUT_CLASSIFICATION	2.6194400421209398E-5	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9997173498626513	WITHOUT_CLASSIFICATION	2.8265013734871683E-4	DOCUMENTATION
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999824214110031	WITHOUT_CLASSIFICATION	1.7578588996885027E-5	DOCUMENTATION
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9998875965315372	WITHOUT_CLASSIFICATION	1.1240346846265139E-4	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999698122524349	WITHOUT_CLASSIFICATION	3.0187747565165537E-5	DOCUMENTATION
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.999998263008394	WITHOUT_CLASSIFICATION	1.7369916059333517E-6	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999789599529569	WITHOUT_CLASSIFICATION	2.104004704306117E-5	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999843287782104	WITHOUT_CLASSIFICATION	1.5671221789605886E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.999991047881215	WITHOUT_CLASSIFICATION	8.95211878503554E-6	DOCUMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9999313602947733	WITHOUT_CLASSIFICATION	6.863970522673114E-5	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9995141826656349	WITHOUT_CLASSIFICATION	4.8581733436509896E-4	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999484873234661	WITHOUT_CLASSIFICATION	5.1512676533912046E-5	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999770686167291	WITHOUT_CLASSIFICATION	2.293138327090891E-5	DOCUMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999722744138976	WITHOUT_CLASSIFICATION	2.772558610244344E-5	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999870479608934	WITHOUT_CLASSIFICATION	1.2952039106550308E-5	DOCUMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9999347545861336	WITHOUT_CLASSIFICATION	6.524541386645943E-5	DOCUMENTATION
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9999263893529611	WITHOUT_CLASSIFICATION	7.36106470389855E-5	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9998790702675235	WITHOUT_CLASSIFICATION	1.2092973247645322E-4	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9998934155885514	WITHOUT_CLASSIFICATION	1.0658441144856598E-4	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999792652197081	WITHOUT_CLASSIFICATION	2.0734780291882575E-5	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999615813491662	WITHOUT_CLASSIFICATION	3.8418650833847824E-5	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9986440066480914	WITHOUT_CLASSIFICATION	0.0013559933519085856	DOCUMENTATION
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999885196889389	WITHOUT_CLASSIFICATION	1.1480311061246023E-5	DOCUMENTATION
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9991931003229724	WITHOUT_CLASSIFICATION	8.068996770276514E-4	DOCUMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9996546148536116	WITHOUT_CLASSIFICATION	3.453851463883949E-4	DOCUMENTATION
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9996251696727237	WITHOUT_CLASSIFICATION	3.7483032727626575E-4	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9989209795027874	WITHOUT_CLASSIFICATION	0.0010790204972125845	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9992251768370471	WITHOUT_CLASSIFICATION	7.748231629527753E-4	DOCUMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9999580976947229	WITHOUT_CLASSIFICATION	4.190230527708268E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.999997448445689	WITHOUT_CLASSIFICATION	2.5515543108761433E-6	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999911633622033	WITHOUT_CLASSIFICATION	8.83663779660316E-6	DOCUMENTATION
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9994773804172684	WITHOUT_CLASSIFICATION	5.226195827315147E-4	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999052257252276	WITHOUT_CLASSIFICATION	9.477427477240093E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998681210169549	WITHOUT_CLASSIFICATION	1.31878983045053E-4	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9995795678834927	WITHOUT_CLASSIFICATION	4.2043211650737405E-4	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9992799205478342	WITHOUT_CLASSIFICATION	7.20079452165713E-4	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999576993262501	WITHOUT_CLASSIFICATION	4.2300673749988036E-5	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999553111596993	WITHOUT_CLASSIFICATION	4.4688840300665106E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998681210169549	WITHOUT_CLASSIFICATION	1.31878983045053E-4	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.999716542602509	WITHOUT_CLASSIFICATION	2.8345739749104397E-4	DOCUMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9988517555133729	WITHOUT_CLASSIFICATION	0.001148244486627054	DOCUMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999826253103103	WITHOUT_CLASSIFICATION	1.7374689689570842E-5	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999371026069706	WITHOUT_CLASSIFICATION	6.289739302945092E-5	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9952170195336442	WITHOUT_CLASSIFICATION	0.004782980466355918	DOCUMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999835100855824	WITHOUT_CLASSIFICATION	1.648991441762592E-5	DOCUMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999860845046685	WITHOUT_CLASSIFICATION	1.3915495331557099E-5	DOCUMENTATION
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.9999844806892142	WITHOUT_CLASSIFICATION	1.551931078577372E-5	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9994990187839321	WITHOUT_CLASSIFICATION	5.009812160679739E-4	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999101194574976	WITHOUT_CLASSIFICATION	8.988054250235811E-5	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9997599126192099	WITHOUT_CLASSIFICATION	2.4008738079002304E-4	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.999052134370485	WITHOUT_CLASSIFICATION	9.47865629515072E-4	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999104353949403	WITHOUT_CLASSIFICATION	8.956460505971908E-5	DOCUMENTATION
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9980597868429976	WITHOUT_CLASSIFICATION	0.0019402131570024493	DOCUMENTATION
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9994254542739	WITHOUT_CLASSIFICATION	5.745457261001303E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999745288916804	WITHOUT_CLASSIFICATION	2.547110831966066E-5	DOCUMENTATION
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9998831956086838	WITHOUT_CLASSIFICATION	1.1680439131620451E-4	DOCUMENTATION
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999743226733656	WITHOUT_CLASSIFICATION	2.5677326634377828E-5	DOCUMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9987797616235089	WITHOUT_CLASSIFICATION	0.001220238376491086	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999851395261471	WITHOUT_CLASSIFICATION	1.4860473852840672E-5	DOCUMENTATION
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9995733486544374	WITHOUT_CLASSIFICATION	4.2665134556261623E-4	DOCUMENTATION
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999808974981813	WITHOUT_CLASSIFICATION	1.91025018186404E-5	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999255249762501	WITHOUT_CLASSIFICATION	7.447502374995593E-5	DOCUMENTATION
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.999995560340506	WITHOUT_CLASSIFICATION	4.439659493995929E-6	DOCUMENTATION
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999730429345188	WITHOUT_CLASSIFICATION	2.695706548113023E-5	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9997710307226347	WITHOUT_CLASSIFICATION	2.2896927736525764E-4	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9999048047286815	WITHOUT_CLASSIFICATION	9.519527131852129E-5	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.999898330032406	WITHOUT_CLASSIFICATION	1.0166996759403337E-4	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9999752303004641	WITHOUT_CLASSIFICATION	2.4769699535918303E-5	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.9999710532289215	WITHOUT_CLASSIFICATION	2.8946771078501797E-5	DOCUMENTATION
// and perform the load	WITHOUT_CLASSIFICATION	0.9999708478054266	WITHOUT_CLASSIFICATION	2.915219457347648E-5	DOCUMENTATION
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9997608567857291	WITHOUT_CLASSIFICATION	2.3914321427096565E-4	DOCUMENTATION
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9995617020208448	WITHOUT_CLASSIFICATION	4.3829797915515895E-4	DOCUMENTATION
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999307401540067	WITHOUT_CLASSIFICATION	6.925984599321256E-5	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999742007803127	WITHOUT_CLASSIFICATION	2.57992196873241E-5	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999816858220464	WITHOUT_CLASSIFICATION	1.831417795354445E-5	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999978055959128	WITHOUT_CLASSIFICATION	2.194404087273682E-6	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999671201405644	WITHOUT_CLASSIFICATION	3.287985943554831E-5	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999929649107261	WITHOUT_CLASSIFICATION	7.035089273917795E-6	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9994525153873026	WITHOUT_CLASSIFICATION	5.474846126974643E-4	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9998441863913753	WITHOUT_CLASSIFICATION	1.5581360862469974E-4	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9998441863913753	WITHOUT_CLASSIFICATION	1.5581360862469974E-4	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9998643904743243	WITHOUT_CLASSIFICATION	1.3560952567576314E-4	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.999962581788109	WITHOUT_CLASSIFICATION	3.741821189087347E-5	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999701320876198	WITHOUT_CLASSIFICATION	2.9867912380222823E-5	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9966190561341481	WITHOUT_CLASSIFICATION	0.003380943865851821	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9998606775479494	WITHOUT_CLASSIFICATION	1.3932245205068084E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9998606775479494	WITHOUT_CLASSIFICATION	1.3932245205068084E-4	DOCUMENTATION
//        }	WITHOUT_CLASSIFICATION	0.9998303584753586	WITHOUT_CLASSIFICATION	1.696415246414306E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9998010512566115	WITHOUT_CLASSIFICATION	1.9894874338842456E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998544984354643	WITHOUT_CLASSIFICATION	1.4550156453577306E-4	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9997575458121567	WITHOUT_CLASSIFICATION	2.4245418784339182E-4	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999620241766795	WITHOUT_CLASSIFICATION	3.797582332057466E-5	DOCUMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999524353375706	WITHOUT_CLASSIFICATION	4.756466242937134E-5	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999718606212561	WITHOUT_CLASSIFICATION	2.813937874381666E-5	DOCUMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9997220823007108	WITHOUT_CLASSIFICATION	2.779176992891724E-4	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9985514415451068	WITHOUT_CLASSIFICATION	0.0014485584548931466	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999385289987334	WITHOUT_CLASSIFICATION	6.147100126664707E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999385289987334	WITHOUT_CLASSIFICATION	6.147100126664707E-5	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9995795678834927	WITHOUT_CLASSIFICATION	4.2043211650737405E-4	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9998271227921444	WITHOUT_CLASSIFICATION	1.7287720785575877E-4	DOCUMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9992874038451626	WITHOUT_CLASSIFICATION	7.125961548373737E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9998969019160332	WITHOUT_CLASSIFICATION	1.0309808396683828E-4	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999541413088845	WITHOUT_CLASSIFICATION	4.585869111550134E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998592108605194	WITHOUT_CLASSIFICATION	1.4078913948061344E-4	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999932693899392	WITHOUT_CLASSIFICATION	6.730610060806026E-6	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9992522161629829	WITHOUT_CLASSIFICATION	7.477838370170627E-4	DOCUMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.999986321657165	WITHOUT_CLASSIFICATION	1.367834283503422E-5	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.999918532530902	WITHOUT_CLASSIFICATION	8.146746909806809E-5	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999101194574976	WITHOUT_CLASSIFICATION	8.988054250235811E-5	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9999421799027881	WITHOUT_CLASSIFICATION	5.782009721201415E-5	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9994639978238165	WITHOUT_CLASSIFICATION	5.360021761835049E-4	DOCUMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.999953038237145	WITHOUT_CLASSIFICATION	4.6961762854905554E-5	DOCUMENTATION
//use the id column alias	WITHOUT_CLASSIFICATION	0.99967134728683	WITHOUT_CLASSIFICATION	3.286527131699399E-4	DOCUMENTATION
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9996213775995166	WITHOUT_CLASSIFICATION	3.7862240048331904E-4	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9992783545748717	WITHOUT_CLASSIFICATION	7.216454251282992E-4	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9997658274243231	WITHOUT_CLASSIFICATION	2.341725756769084E-4	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9999578176261084	WITHOUT_CLASSIFICATION	4.218237389156152E-5	DOCUMENTATION
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9992330063753944	WITHOUT_CLASSIFICATION	7.669936246055833E-4	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999543511380307	WITHOUT_CLASSIFICATION	4.564886196932146E-5	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999543511380307	WITHOUT_CLASSIFICATION	4.564886196932146E-5	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9997213990916637	WITHOUT_CLASSIFICATION	2.786009083362631E-4	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999869679814439	WITHOUT_CLASSIFICATION	1.3032018556072489E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.999113997496643	WITHOUT_CLASSIFICATION	8.860025033570562E-4	DOCUMENTATION
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9993935416834467	WITHOUT_CLASSIFICATION	6.06458316553281E-4	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.999920020615887	WITHOUT_CLASSIFICATION	7.997938411290536E-5	DOCUMENTATION
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9994119343194611	WITHOUT_CLASSIFICATION	5.880656805389538E-4	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999607794557116	WITHOUT_CLASSIFICATION	3.92205442883595E-5	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999972954544359	WITHOUT_CLASSIFICATION	2.7045455640003975E-6	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9997922757277705	WITHOUT_CLASSIFICATION	2.0772427222945453E-4	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999764573551976	WITHOUT_CLASSIFICATION	2.3542644802347623E-5	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998665343242198	WITHOUT_CLASSIFICATION	1.334656757802674E-4	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.999992050202422	WITHOUT_CLASSIFICATION	7.949797578042232E-6	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.9997988886446562	WITHOUT_CLASSIFICATION	2.011113553439129E-4	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999934967470264	WITHOUT_CLASSIFICATION	6.503252973651504E-6	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9999744667105451	WITHOUT_CLASSIFICATION	2.5533289454852385E-5	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.99990051453479	WITHOUT_CLASSIFICATION	9.948546520993263E-5	DOCUMENTATION
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.9999462867078354	WITHOUT_CLASSIFICATION	5.3713292164730064E-5	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9998687929472413	WITHOUT_CLASSIFICATION	1.3120705275869408E-4	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9996301540862523	WITHOUT_CLASSIFICATION	3.6984591374763533E-4	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9999887662734963	WITHOUT_CLASSIFICATION	1.1233726503775934E-5	DOCUMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999743178370388	WITHOUT_CLASSIFICATION	2.5682162961114928E-5	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9999989352890651	WITHOUT_CLASSIFICATION	1.0647109348832728E-6	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999987894560336	WITHOUT_CLASSIFICATION	1.2105439664667991E-6	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.9999958548637878	WITHOUT_CLASSIFICATION	4.1451362121136904E-6	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9994528421361841	WITHOUT_CLASSIFICATION	5.471578638158695E-4	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9994528421361841	WITHOUT_CLASSIFICATION	5.471578638158695E-4	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999133078962708	WITHOUT_CLASSIFICATION	8.669210372924473E-5	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9998856359485212	WITHOUT_CLASSIFICATION	1.143640514789094E-4	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999162471690296	WITHOUT_CLASSIFICATION	8.375283097044521E-5	DOCUMENTATION
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.999998951276446	WITHOUT_CLASSIFICATION	1.0487235540416263E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9997837417236225	WITHOUT_CLASSIFICATION	2.1625827637754272E-4	DOCUMENTATION
//TODO find a decent name before documenting	DOCUMENTATION	0.9998022863487057	WITHOUT_CLASSIFICATION	1.9771365129420986E-4	DOCUMENTATION
