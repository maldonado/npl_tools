//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9998936133144161	WITHOUT_CLASSIFICATION	1.0638668558399803E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9997122759961491	WITHOUT_CLASSIFICATION	2.877240038509275E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9997122759961491	WITHOUT_CLASSIFICATION	2.877240038509275E-4	DOCUMENTATION
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9995391367275764	WITHOUT_CLASSIFICATION	4.608632724235849E-4	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.999975949460041	WITHOUT_CLASSIFICATION	2.405053995897942E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999226082156956	WITHOUT_CLASSIFICATION	7.739178430450577E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999226082156956	WITHOUT_CLASSIFICATION	7.739178430450577E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9998601847581012	WITHOUT_CLASSIFICATION	1.3981524189881183E-4	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.999928298994599	WITHOUT_CLASSIFICATION	7.170100540098972E-5	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.999986466430939	WITHOUT_CLASSIFICATION	1.3533569060889531E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999558244259416	WITHOUT_CLASSIFICATION	4.417557405837222E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9997811750980502	WITHOUT_CLASSIFICATION	2.1882490194981207E-4	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9997811750980502	WITHOUT_CLASSIFICATION	2.1882490194981207E-4	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9996439938501792	WITHOUT_CLASSIFICATION	3.560061498207835E-4	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9999956815035691	WITHOUT_CLASSIFICATION	4.318496430983391E-6	DOCUMENTATION
// decode row selection...	WITHOUT_CLASSIFICATION	0.9999483629050959	WITHOUT_CLASSIFICATION	5.163709490411266E-5	DOCUMENTATION
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9998950314146196	WITHOUT_CLASSIFICATION	1.0496858538053855E-4	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999955311425649	WITHOUT_CLASSIFICATION	4.468857435030253E-6	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9996445145534644	WITHOUT_CLASSIFICATION	3.5548544653567953E-4	DOCUMENTATION
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9992541465706049	WITHOUT_CLASSIFICATION	7.458534293950279E-4	DOCUMENTATION
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.999986551063212	WITHOUT_CLASSIFICATION	1.344893678800342E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9999900811331119	WITHOUT_CLASSIFICATION	9.918866888192258E-6	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9980211251612799	WITHOUT_CLASSIFICATION	0.001978874838720129	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999284621824793	WITHOUT_CLASSIFICATION	7.153781752070294E-5	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.9997581848351457	WITHOUT_CLASSIFICATION	2.418151648541836E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9448576859236585	DOCUMENTATION	0.0551423140763416	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9448576859236585	DOCUMENTATION	0.0551423140763416	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.999844218597508	WITHOUT_CLASSIFICATION	1.5578140249200974E-4	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999957691510823	WITHOUT_CLASSIFICATION	4.2308489175776296E-6	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999997870196718	WITHOUT_CLASSIFICATION	2.1298032810179165E-7	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9998292417643478	WITHOUT_CLASSIFICATION	1.7075823565211088E-4	DOCUMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999233476619629	WITHOUT_CLASSIFICATION	7.665233803707837E-5	DOCUMENTATION
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999824949813497	WITHOUT_CLASSIFICATION	1.7505018650286423E-5	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9999897310700593	WITHOUT_CLASSIFICATION	1.0268929940594387E-5	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.99885841251665	WITHOUT_CLASSIFICATION	0.001141587483350014	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.99885841251665	WITHOUT_CLASSIFICATION	0.001141587483350014	DOCUMENTATION
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.999634866022842	WITHOUT_CLASSIFICATION	3.6513397715800237E-4	DOCUMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.999999542571399	WITHOUT_CLASSIFICATION	4.574286009818085E-7	DOCUMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999492659296254	WITHOUT_CLASSIFICATION	5.073407037455722E-5	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999975434578591	WITHOUT_CLASSIFICATION	2.4565421409089723E-6	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999866367381041	WITHOUT_CLASSIFICATION	1.3363261895816603E-5	DOCUMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999998488788588	WITHOUT_CLASSIFICATION	1.5112114114595593E-7	DOCUMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9964360282564305	WITHOUT_CLASSIFICATION	0.0035639717435694165	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9999863659584298	WITHOUT_CLASSIFICATION	1.3634041570030723E-5	DOCUMENTATION
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999994876584831	WITHOUT_CLASSIFICATION	5.123415169120571E-7	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9999335817167008	WITHOUT_CLASSIFICATION	6.64182832992523E-5	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9999855429753638	WITHOUT_CLASSIFICATION	1.4457024636080518E-5	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999354125436946	WITHOUT_CLASSIFICATION	6.458745630537467E-5	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999982163889517	WITHOUT_CLASSIFICATION	1.7836110483045503E-6	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9999512119813725	WITHOUT_CLASSIFICATION	4.878801862753599E-5	DOCUMENTATION
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9999996439586798	WITHOUT_CLASSIFICATION	3.5604132019804427E-7	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999858501679858	WITHOUT_CLASSIFICATION	1.4149832014238443E-5	DOCUMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9999858177913662	WITHOUT_CLASSIFICATION	1.4182208633801659E-5	DOCUMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999987281679628	WITHOUT_CLASSIFICATION	1.2718320372289004E-6	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999846539177586	WITHOUT_CLASSIFICATION	1.534608224143231E-5	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999944885805127	WITHOUT_CLASSIFICATION	5.511419487377015E-6	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999723170994984	WITHOUT_CLASSIFICATION	2.7682900501501813E-5	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999997810034282	WITHOUT_CLASSIFICATION	2.189965718450563E-7	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999887649084185	WITHOUT_CLASSIFICATION	1.1235091581564897E-5	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999453901063096	WITHOUT_CLASSIFICATION	5.46098936903928E-5	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9999995227541593	WITHOUT_CLASSIFICATION	4.772458408225985E-7	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999322152787978	WITHOUT_CLASSIFICATION	6.778472120221192E-5	DOCUMENTATION
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999955186915817	WITHOUT_CLASSIFICATION	4.48130841829904E-6	DOCUMENTATION
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.99994821854126	WITHOUT_CLASSIFICATION	5.178145874001166E-5	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999584937188264	WITHOUT_CLASSIFICATION	4.1506281173590845E-5	DOCUMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9998824982283562	WITHOUT_CLASSIFICATION	1.1750177164383898E-4	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.999991138257729	WITHOUT_CLASSIFICATION	8.861742271040596E-6	DOCUMENTATION
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999431854340316	WITHOUT_CLASSIFICATION	5.681456596827925E-5	DOCUMENTATION
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.999992569634085	WITHOUT_CLASSIFICATION	7.430365914913242E-6	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999372430152109	WITHOUT_CLASSIFICATION	6.275698478903547E-5	DOCUMENTATION
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.999983233473297	WITHOUT_CLASSIFICATION	1.6766526703019224E-5	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999976283267982	WITHOUT_CLASSIFICATION	2.371673201797956E-6	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999372430152109	WITHOUT_CLASSIFICATION	6.275698478903547E-5	DOCUMENTATION
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999976455252458	WITHOUT_CLASSIFICATION	2.3544747541939906E-6	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.9997193065529539	WITHOUT_CLASSIFICATION	2.806934470460926E-4	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999691473598743	WITHOUT_CLASSIFICATION	3.085264012574417E-5	DOCUMENTATION
// construct the cache	WITHOUT_CLASSIFICATION	0.9999812428484168	WITHOUT_CLASSIFICATION	1.8757151583170634E-5	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9997525278546994	WITHOUT_CLASSIFICATION	2.4747214530070646E-4	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9997525278546994	WITHOUT_CLASSIFICATION	2.4747214530070646E-4	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.99885841251665	WITHOUT_CLASSIFICATION	0.001141587483350014	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999986658942885	WITHOUT_CLASSIFICATION	1.3341057113762443E-6	DOCUMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.999429658191477	WITHOUT_CLASSIFICATION	5.703418085229213E-4	DOCUMENTATION
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999847358031116	WITHOUT_CLASSIFICATION	1.526419688834509E-5	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.9999988175610238	WITHOUT_CLASSIFICATION	1.1824389761494296E-6	DOCUMENTATION
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.999994932134841	WITHOUT_CLASSIFICATION	5.067865158960874E-6	DOCUMENTATION
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999883795197885	WITHOUT_CLASSIFICATION	1.1620480211411945E-5	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9999847430782002	WITHOUT_CLASSIFICATION	1.5256921799846126E-5	DOCUMENTATION
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999798453627621	WITHOUT_CLASSIFICATION	2.015463723784484E-5	DOCUMENTATION
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999709100507205	WITHOUT_CLASSIFICATION	2.908994927959075E-5	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.999985590886225	WITHOUT_CLASSIFICATION	1.4409113775072697E-5	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.999985590886225	WITHOUT_CLASSIFICATION	1.4409113775072697E-5	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999792154169626	WITHOUT_CLASSIFICATION	2.0784583037408452E-5	DOCUMENTATION
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999813930726099	WITHOUT_CLASSIFICATION	1.8606927390025462E-5	DOCUMENTATION
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.999982393021039	WITHOUT_CLASSIFICATION	1.760697896105876E-5	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.999985590886225	WITHOUT_CLASSIFICATION	1.4409113775072697E-5	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999792154169626	WITHOUT_CLASSIFICATION	2.0784583037408452E-5	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999792154169626	WITHOUT_CLASSIFICATION	2.0784583037408452E-5	DOCUMENTATION
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9999832618566186	WITHOUT_CLASSIFICATION	1.6738143381520864E-5	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9999512900307542	WITHOUT_CLASSIFICATION	4.87099692458466E-5	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999935551053172	WITHOUT_CLASSIFICATION	6.44489468290466E-6	DOCUMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999925990948539	WITHOUT_CLASSIFICATION	7.40090514603196E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999927997152874	WITHOUT_CLASSIFICATION	7.200284712564997E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999927997152874	WITHOUT_CLASSIFICATION	7.200284712564997E-6	DOCUMENTATION
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9989017919442471	WITHOUT_CLASSIFICATION	0.001098208055752955	DOCUMENTATION
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9988209886741861	WITHOUT_CLASSIFICATION	0.0011790113258139518	DOCUMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999177842304114	WITHOUT_CLASSIFICATION	8.221576958859839E-5	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999608026902765	WITHOUT_CLASSIFICATION	3.919730972341317E-5	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999608026902765	WITHOUT_CLASSIFICATION	3.919730972341317E-5	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9989486431874932	WITHOUT_CLASSIFICATION	0.0010513568125068021	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999828410004186	WITHOUT_CLASSIFICATION	1.7158999581407203E-5	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9989741743223792	WITHOUT_CLASSIFICATION	0.0010258256776208066	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999998041914473	WITHOUT_CLASSIFICATION	1.9580855264928976E-7	DOCUMENTATION
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999045379994613	WITHOUT_CLASSIFICATION	9.546200053869233E-5	DOCUMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999974353878889	WITHOUT_CLASSIFICATION	2.564612111068974E-6	DOCUMENTATION
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9987328183050206	WITHOUT_CLASSIFICATION	0.001267181694979328	DOCUMENTATION
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9999874151036261	WITHOUT_CLASSIFICATION	1.2584896373849497E-5	DOCUMENTATION
//sort first by role name	WITHOUT_CLASSIFICATION	0.9995347776895693	WITHOUT_CLASSIFICATION	4.652223104306693E-4	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9989741743223792	WITHOUT_CLASSIFICATION	0.0010258256776208066	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9992890886034295	WITHOUT_CLASSIFICATION	7.109113965705245E-4	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999750296421605	WITHOUT_CLASSIFICATION	2.497035783951106E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999750296421605	WITHOUT_CLASSIFICATION	2.497035783951106E-5	DOCUMENTATION
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999986657043645	WITHOUT_CLASSIFICATION	1.3342956354889686E-6	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999930254730475	WITHOUT_CLASSIFICATION	6.9745269525252394E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999791713832133	WITHOUT_CLASSIFICATION	2.0828616786616282E-5	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9845434753039158	WITHOUT_CLASSIFICATION	0.015456524696084219	DOCUMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9995327572397273	WITHOUT_CLASSIFICATION	4.6724276027262587E-4	DOCUMENTATION
//then by id	WITHOUT_CLASSIFICATION	0.9993122333356329	WITHOUT_CLASSIFICATION	6.877666643671241E-4	DOCUMENTATION
// to be safe...	WITHOUT_CLASSIFICATION	0.9999921185030172	WITHOUT_CLASSIFICATION	7.881496982759428E-6	DOCUMENTATION
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9999496670725728	WITHOUT_CLASSIFICATION	5.033292742725044E-5	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999967405335413	WITHOUT_CLASSIFICATION	3.259466458700865E-6	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999967405335413	WITHOUT_CLASSIFICATION	3.259466458700865E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998604243611299	WITHOUT_CLASSIFICATION	1.3957563887008397E-4	DOCUMENTATION
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9998936133144161	WITHOUT_CLASSIFICATION	1.0638668558399803E-4	DOCUMENTATION
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999856583719313	WITHOUT_CLASSIFICATION	1.4341628068683925E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// invokespecial	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9997122759961491	WITHOUT_CLASSIFICATION	2.877240038509275E-4	DOCUMENTATION
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999485304497966	WITHOUT_CLASSIFICATION	5.146955020346853E-5	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999466620013698	WITHOUT_CLASSIFICATION	5.333799863008495E-5	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.999948211410811	WITHOUT_CLASSIFICATION	5.178858918894376E-5	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999350653077159	WITHOUT_CLASSIFICATION	6.493469228406464E-5	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.999941991139268	WITHOUT_CLASSIFICATION	5.8008860732050884E-5	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.999744767235678	WITHOUT_CLASSIFICATION	2.552327643220887E-4	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999753669614081	WITHOUT_CLASSIFICATION	2.463303859187101E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// aastore // args	WITHOUT_CLASSIFICATION	0.9999350653077159	WITHOUT_CLASSIFICATION	6.493469228406464E-5	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9995648415301496	WITHOUT_CLASSIFICATION	4.351584698503681E-4	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999659355242597	WITHOUT_CLASSIFICATION	3.4064475740344144E-5	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999482897209867	WITHOUT_CLASSIFICATION	5.171027901331357E-5	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999815154924444	WITHOUT_CLASSIFICATION	1.848450755551698E-5	DOCUMENTATION
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999956631676005	WITHOUT_CLASSIFICATION	4.336832399591081E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999226082156956	WITHOUT_CLASSIFICATION	7.739178430450577E-5	DOCUMENTATION
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999582674643532	WITHOUT_CLASSIFICATION	4.1732535646837364E-5	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999386543955929	WITHOUT_CLASSIFICATION	6.13456044070419E-5	DOCUMENTATION
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999760976253323	WITHOUT_CLASSIFICATION	2.3902374667661573E-5	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999815231874568	WITHOUT_CLASSIFICATION	1.847681254322754E-5	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// aaload	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999409546411877	WITHOUT_CLASSIFICATION	5.904535881231874E-5	DOCUMENTATION
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999476674821414	WITHOUT_CLASSIFICATION	5.233251785872073E-5	DOCUMENTATION
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999420577296997	WITHOUT_CLASSIFICATION	5.794227030031704E-5	DOCUMENTATION
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999764349659775	WITHOUT_CLASSIFICATION	2.3565034022457536E-5	DOCUMENTATION
// register in exception table	WITHOUT_CLASSIFICATION	0.999935915310151	WITHOUT_CLASSIFICATION	6.40846898489614E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9997122759961491	WITHOUT_CLASSIFICATION	2.877240038509275E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9997122759961491	WITHOUT_CLASSIFICATION	2.877240038509275E-4	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9998601847581012	WITHOUT_CLASSIFICATION	1.3981524189881183E-4	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999518421302496	WITHOUT_CLASSIFICATION	4.8157869750356175E-5	DOCUMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9999489842852785	WITHOUT_CLASSIFICATION	5.1015714721591676E-5	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999521388035822	WITHOUT_CLASSIFICATION	4.786119641766106E-5	DOCUMENTATION
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999351364938738	WITHOUT_CLASSIFICATION	6.486350612611459E-5	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999242894929372	WITHOUT_CLASSIFICATION	7.571050706281751E-5	DOCUMENTATION
//swallow	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9996756525937939	WITHOUT_CLASSIFICATION	3.2434740620610977E-4	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999317467215868	WITHOUT_CLASSIFICATION	6.825327841318733E-5	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999317467215868	WITHOUT_CLASSIFICATION	6.825327841318733E-5	DOCUMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999563682314764	WITHOUT_CLASSIFICATION	4.3631768523613004E-5	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999847431322882	WITHOUT_CLASSIFICATION	1.525686771182918E-5	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9995645072406624	WITHOUT_CLASSIFICATION	4.3549275933758695E-4	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999485514961263	WITHOUT_CLASSIFICATION	5.144850387367058E-5	DOCUMENTATION
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999439554940387	WITHOUT_CLASSIFICATION	5.604450596136688E-5	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999619286483469	WITHOUT_CLASSIFICATION	3.807135165316091E-5	DOCUMENTATION
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999637536398513	WITHOUT_CLASSIFICATION	3.624636014864319E-5	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.999928298994599	WITHOUT_CLASSIFICATION	7.170100540098972E-5	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999626621444218	WITHOUT_CLASSIFICATION	3.733785557830045E-5	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999626621444218	WITHOUT_CLASSIFICATION	3.733785557830045E-5	DOCUMENTATION
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999626621444218	WITHOUT_CLASSIFICATION	3.733785557830045E-5	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999862590154824	WITHOUT_CLASSIFICATION	1.3740984517682018E-5	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999626621444218	WITHOUT_CLASSIFICATION	3.733785557830045E-5	DOCUMENTATION
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.9999502334032054	WITHOUT_CLASSIFICATION	4.976659679447183E-5	DOCUMENTATION
// int	WITHOUT_CLASSIFICATION	0.9996509539287227	WITHOUT_CLASSIFICATION	3.490460712772496E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9997122759961491	WITHOUT_CLASSIFICATION	2.877240038509275E-4	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999462053541331	WITHOUT_CLASSIFICATION	5.379464586672492E-5	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.99994795681348	WITHOUT_CLASSIFICATION	5.2043186519933805E-5	DOCUMENTATION
// ldc // field name	WITHOUT_CLASSIFICATION	0.999944308150353	WITHOUT_CLASSIFICATION	5.569184964703109E-5	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.9999820120375051	WITHOUT_CLASSIFICATION	1.7987962494919553E-5	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999558244259416	WITHOUT_CLASSIFICATION	4.417557405837222E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999558244259416	WITHOUT_CLASSIFICATION	4.417557405837222E-5	DOCUMENTATION
// not array	WITHOUT_CLASSIFICATION	0.9999600113741826	WITHOUT_CLASSIFICATION	3.998862581739252E-5	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.9999726947731896	WITHOUT_CLASSIFICATION	2.7305226810391703E-5	DOCUMENTATION
// boolean	WITHOUT_CLASSIFICATION	0.9996601753973463	WITHOUT_CLASSIFICATION	3.3982460265364944E-4	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9996427227844946	WITHOUT_CLASSIFICATION	3.572772155053679E-4	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9996435601019761	WITHOUT_CLASSIFICATION	3.564398980238843E-4	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9997811750980502	WITHOUT_CLASSIFICATION	2.1882490194981207E-4	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9996439938501792	WITHOUT_CLASSIFICATION	3.560061498207835E-4	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9996439938501792	WITHOUT_CLASSIFICATION	3.560061498207835E-4	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999497928441288	WITHOUT_CLASSIFICATION	5.0207155871175425E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999497928441288	WITHOUT_CLASSIFICATION	5.0207155871175425E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999302521852109	WITHOUT_CLASSIFICATION	6.97478147890834E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999302521852109	WITHOUT_CLASSIFICATION	6.97478147890834E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999558244259416	WITHOUT_CLASSIFICATION	4.417557405837222E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9997811750980502	WITHOUT_CLASSIFICATION	2.1882490194981207E-4	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9996439938501792	WITHOUT_CLASSIFICATION	3.560061498207835E-4	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999497928441288	WITHOUT_CLASSIFICATION	5.0207155871175425E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999497928441288	WITHOUT_CLASSIFICATION	5.0207155871175425E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999302521852109	WITHOUT_CLASSIFICATION	6.97478147890834E-5	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999500286079764	WITHOUT_CLASSIFICATION	4.997139202358099E-5	DOCUMENTATION
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9990781877356315	WITHOUT_CLASSIFICATION	9.218122643683957E-4	DOCUMENTATION
//decrement the lock	WITHOUT_CLASSIFICATION	0.9995876772298486	WITHOUT_CLASSIFICATION	4.1232277015131654E-4	DOCUMENTATION
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999693061079934	WITHOUT_CLASSIFICATION	3.0693892006634605E-5	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9996200208506753	WITHOUT_CLASSIFICATION	3.799791493246564E-4	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9996420772558637	WITHOUT_CLASSIFICATION	3.579227441363531E-4	DOCUMENTATION
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9983517616683181	WITHOUT_CLASSIFICATION	0.0016482383316818784	DOCUMENTATION
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9999995310875222	WITHOUT_CLASSIFICATION	4.6891247779772813E-7	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9978412448130055	WITHOUT_CLASSIFICATION	0.0021587551869944694	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999950795180058	WITHOUT_CLASSIFICATION	4.920481994186229E-6	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999295880667294	WITHOUT_CLASSIFICATION	7.041193327062722E-5	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999363944538524	WITHOUT_CLASSIFICATION	6.360554614762156E-5	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.99885841251665	WITHOUT_CLASSIFICATION	0.001141587483350014	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9996420772558637	WITHOUT_CLASSIFICATION	3.579227441363531E-4	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999813924402323	WITHOUT_CLASSIFICATION	1.8607559767655798E-5	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9998864522621712	WITHOUT_CLASSIFICATION	1.135477378287359E-4	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9998864522621712	WITHOUT_CLASSIFICATION	1.135477378287359E-4	DOCUMENTATION
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9998878354030877	WITHOUT_CLASSIFICATION	1.121645969122923E-4	DOCUMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999298900088659	WITHOUT_CLASSIFICATION	7.010999113408952E-5	DOCUMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.9993970537839378	WITHOUT_CLASSIFICATION	6.029462160622802E-4	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999924179157869	WITHOUT_CLASSIFICATION	7.582084213051128E-6	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999924179157869	WITHOUT_CLASSIFICATION	7.582084213051128E-6	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999955311425649	WITHOUT_CLASSIFICATION	4.468857435030253E-6	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999967680933189	WITHOUT_CLASSIFICATION	3.231906681136328E-6	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999967680933189	WITHOUT_CLASSIFICATION	3.231906681136328E-6	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999148002004348	WITHOUT_CLASSIFICATION	8.519979956517944E-5	DOCUMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999820739696955	WITHOUT_CLASSIFICATION	1.7926030304475157E-5	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.999986551063212	WITHOUT_CLASSIFICATION	1.344893678800342E-5	DOCUMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// MUTABLE	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// TODO:	WITHOUT_CLASSIFICATION	0.9685477613587568	WITHOUT_CLASSIFICATION	0.031452238641243246	DOCUMENTATION
// ID	WITHOUT_CLASSIFICATION	0.9996445145534644	WITHOUT_CLASSIFICATION	3.5548544653567953E-4	DOCUMENTATION
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999562015069291	WITHOUT_CLASSIFICATION	4.379849307087431E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999509359221136	WITHOUT_CLASSIFICATION	4.906407788638681E-5	DOCUMENTATION
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999680189264588	WITHOUT_CLASSIFICATION	3.198107354125246E-5	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999966347992283	WITHOUT_CLASSIFICATION	3.365200771818922E-6	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999284621824793	WITHOUT_CLASSIFICATION	7.153781752070294E-5	DOCUMENTATION
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999960306308199	WITHOUT_CLASSIFICATION	3.969369180136069E-6	DOCUMENTATION
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// IMPORT	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999462053541331	WITHOUT_CLASSIFICATION	5.379464586672492E-5	DOCUMENTATION
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999462053541331	WITHOUT_CLASSIFICATION	5.379464586672492E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999350587044198	WITHOUT_CLASSIFICATION	6.494129558021017E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.999986551063212	WITHOUT_CLASSIFICATION	1.344893678800342E-5	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999382548320699	WITHOUT_CLASSIFICATION	6.17451679301239E-5	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999353764154142	WITHOUT_CLASSIFICATION	6.462358458586739E-5	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999350587044198	WITHOUT_CLASSIFICATION	6.494129558021017E-5	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999382548320699	WITHOUT_CLASSIFICATION	6.17451679301239E-5	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999657027619768	WITHOUT_CLASSIFICATION	3.42972380232047E-5	DOCUMENTATION
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999657027619768	WITHOUT_CLASSIFICATION	3.42972380232047E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// column index	WITHOUT_CLASSIFICATION	0.9999416620513157	WITHOUT_CLASSIFICATION	5.833794868425316E-5	DOCUMENTATION
//column unique-key	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9999995720909055	WITHOUT_CLASSIFICATION	4.2790909446489564E-7	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999567124855729	WITHOUT_CLASSIFICATION	4.328751442705175E-5	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999977865292121	WITHOUT_CLASSIFICATION	2.2134707879433593E-6	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999842580573001	WITHOUT_CLASSIFICATION	1.5741942699834183E-5	DOCUMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999901051962663	WITHOUT_CLASSIFICATION	9.894803733804746E-6	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999975917907974	WITHOUT_CLASSIFICATION	2.4082092026317436E-6	DOCUMENTATION
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999842580573001	WITHOUT_CLASSIFICATION	1.5741942699834183E-5	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9997172633295621	WITHOUT_CLASSIFICATION	2.82736670437815E-4	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999350587044198	WITHOUT_CLASSIFICATION	6.494129558021017E-5	DOCUMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999445291786957	WITHOUT_CLASSIFICATION	5.54708213042125E-5	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.9999569660504632	WITHOUT_CLASSIFICATION	4.303394953677876E-5	DOCUMENTATION
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9999889947229648	WITHOUT_CLASSIFICATION	1.1005277035207826E-5	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999898003553671	WITHOUT_CLASSIFICATION	1.0199644632850563E-5	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999411859532797	WITHOUT_CLASSIFICATION	5.881404672016394E-5	DOCUMENTATION
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999968054425857	WITHOUT_CLASSIFICATION	3.1945574141757667E-6	DOCUMENTATION
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999789813179311	WITHOUT_CLASSIFICATION	2.1018682068946913E-5	DOCUMENTATION
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9994827759952994	WITHOUT_CLASSIFICATION	5.172240047005894E-4	DOCUMENTATION
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999355611943685	WITHOUT_CLASSIFICATION	6.443880563153395E-5	DOCUMENTATION
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999462053541331	WITHOUT_CLASSIFICATION	5.379464586672492E-5	DOCUMENTATION
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.999990206483165	WITHOUT_CLASSIFICATION	9.793516834996229E-6	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999284621824793	WITHOUT_CLASSIFICATION	7.153781752070294E-5	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.9999473645286501	WITHOUT_CLASSIFICATION	5.263547134986728E-5	DOCUMENTATION
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999513948662483	WITHOUT_CLASSIFICATION	4.8605133751563224E-5	DOCUMENTATION
// Bind the where	WITHOUT_CLASSIFICATION	0.9999755604700393	WITHOUT_CLASSIFICATION	2.4439529960747688E-5	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999766485441307	WITHOUT_CLASSIFICATION	2.3351455869273866E-5	DOCUMENTATION
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999766980136898	WITHOUT_CLASSIFICATION	2.3301986310120283E-5	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999426101848331	WITHOUT_CLASSIFICATION	5.7389815166824106E-5	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999994144081789	WITHOUT_CLASSIFICATION	5.855918211214251E-7	DOCUMENTATION
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9999944356892131	WITHOUT_CLASSIFICATION	5.5643107868545954E-6	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9993151142986273	WITHOUT_CLASSIFICATION	6.848857013726826E-4	DOCUMENTATION
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9990668299404533	WITHOUT_CLASSIFICATION	9.331700595467535E-4	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9995599399960613	WITHOUT_CLASSIFICATION	4.4006000393869934E-4	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9995599399960613	WITHOUT_CLASSIFICATION	4.4006000393869934E-4	DOCUMENTATION
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9990520700429376	WITHOUT_CLASSIFICATION	9.479299570625007E-4	DOCUMENTATION
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999546842637379	WITHOUT_CLASSIFICATION	4.531573626202991E-5	DOCUMENTATION
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9987784747962779	WITHOUT_CLASSIFICATION	0.001221525203722102	DOCUMENTATION
// Transaction settings:	WITHOUT_CLASSIFICATION	0.9999462380738589	WITHOUT_CLASSIFICATION	5.376192614128382E-5	DOCUMENTATION
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9990550445519824	WITHOUT_CLASSIFICATION	9.44955448017668E-4	DOCUMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9990497409012414	WITHOUT_CLASSIFICATION	9.502590987585026E-4	DOCUMENTATION
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999564577980511	WITHOUT_CLASSIFICATION	4.354220194885924E-5	DOCUMENTATION
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9998329802267005	WITHOUT_CLASSIFICATION	1.6701977329950944E-4	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9991076188682607	WITHOUT_CLASSIFICATION	8.923811317391694E-4	DOCUMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9996644363836306	WITHOUT_CLASSIFICATION	3.3556361636948544E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9999747404181375	WITHOUT_CLASSIFICATION	2.5259581862499507E-5	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9999808340521668	WITHOUT_CLASSIFICATION	1.9165947833221927E-5	DOCUMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9996561893137376	WITHOUT_CLASSIFICATION	3.438106862625387E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999407197966793	WITHOUT_CLASSIFICATION	5.9280203320618725E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999322339445903	WITHOUT_CLASSIFICATION	6.776605540973004E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999963561971136	WITHOUT_CLASSIFICATION	3.6438028863826533E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999949885631133	WITHOUT_CLASSIFICATION	5.011436886677385E-6	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.999863404044821	WITHOUT_CLASSIFICATION	1.3659595517903557E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999985642753099	WITHOUT_CLASSIFICATION	1.4357246901153024E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9995826723949339	WITHOUT_CLASSIFICATION	4.173276050660653E-4	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9995826723949339	WITHOUT_CLASSIFICATION	4.173276050660653E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.998851265359519	WITHOUT_CLASSIFICATION	0.0011487346404811098	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.998851265359519	WITHOUT_CLASSIFICATION	0.0011487346404811098	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9993151142986273	WITHOUT_CLASSIFICATION	6.848857013726826E-4	DOCUMENTATION
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.999183899767239	WITHOUT_CLASSIFICATION	8.161002327611332E-4	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9996336484434932	WITHOUT_CLASSIFICATION	3.66351556506783E-4	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9995796438065938	WITHOUT_CLASSIFICATION	4.203561934061171E-4	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998604243611299	WITHOUT_CLASSIFICATION	1.3957563887008397E-4	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9996336484434932	WITHOUT_CLASSIFICATION	3.66351556506783E-4	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9995796438065938	WITHOUT_CLASSIFICATION	4.203561934061171E-4	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9990250817861557	WITHOUT_CLASSIFICATION	9.749182138444336E-4	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9998937633441233	WITHOUT_CLASSIFICATION	1.0623665587674718E-4	DOCUMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999962801237972	WITHOUT_CLASSIFICATION	3.719876202778304E-6	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999889093538777	WITHOUT_CLASSIFICATION	1.1090646122272997E-5	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9997078286635134	WITHOUT_CLASSIFICATION	2.921713364865893E-4	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.9994857074133959	WITHOUT_CLASSIFICATION	5.142925866040276E-4	DOCUMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9998642220227035	WITHOUT_CLASSIFICATION	1.3577797729641422E-4	DOCUMENTATION
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9975857803523307	WITHOUT_CLASSIFICATION	0.002414219647669214	DOCUMENTATION
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9989678648094131	WITHOUT_CLASSIFICATION	0.0010321351905868907	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999843471527856	WITHOUT_CLASSIFICATION	1.5652847214420508E-5	DOCUMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999322935812608	WITHOUT_CLASSIFICATION	6.770641873918854E-5	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999664452809717	WITHOUT_CLASSIFICATION	3.355471902838985E-5	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999897743193036	WITHOUT_CLASSIFICATION	1.0225680696407692E-5	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9989697006470378	WITHOUT_CLASSIFICATION	0.0010302993529621675	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998604243611299	WITHOUT_CLASSIFICATION	1.3957563887008397E-4	DOCUMENTATION
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9989697006470378	WITHOUT_CLASSIFICATION	0.0010302993529621675	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9991623809835078	WITHOUT_CLASSIFICATION	8.376190164920757E-4	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9991623809835078	WITHOUT_CLASSIFICATION	8.376190164920757E-4	DOCUMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999855945045716	WITHOUT_CLASSIFICATION	1.4405495428339846E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9990250817861557	WITHOUT_CLASSIFICATION	9.749182138444336E-4	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9997889727878669	WITHOUT_CLASSIFICATION	2.1102721213308806E-4	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.9999998414026046	WITHOUT_CLASSIFICATION	1.5859739556389138E-7	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9998395996849075	WITHOUT_CLASSIFICATION	1.6040031509247102E-4	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9997551701059163	WITHOUT_CLASSIFICATION	2.448298940836752E-4	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9995428475560633	WITHOUT_CLASSIFICATION	4.5715244393680274E-4	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9990250817861557	WITHOUT_CLASSIFICATION	9.749182138444336E-4	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9997551701059163	WITHOUT_CLASSIFICATION	2.448298940836752E-4	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9995428475560633	WITHOUT_CLASSIFICATION	4.5715244393680274E-4	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.9988567758919581	WITHOUT_CLASSIFICATION	0.0011432241080418795	DOCUMENTATION
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999352602245732	WITHOUT_CLASSIFICATION	6.473977542671878E-5	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999829205743909	WITHOUT_CLASSIFICATION	1.7079425609120714E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9990250817861557	WITHOUT_CLASSIFICATION	9.749182138444336E-4	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9990250817861557	WITHOUT_CLASSIFICATION	9.749182138444336E-4	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.9999788448952384	WITHOUT_CLASSIFICATION	2.1155104761630492E-5	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999788211033911	WITHOUT_CLASSIFICATION	2.1178896608879917E-5	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9996114847358508	WITHOUT_CLASSIFICATION	3.8851526414924987E-4	DOCUMENTATION
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999908767704773	WITHOUT_CLASSIFICATION	9.123229522702882E-6	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.999127357831338	WITHOUT_CLASSIFICATION	8.726421686619834E-4	DOCUMENTATION
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999954958466784	WITHOUT_CLASSIFICATION	4.504153321700208E-6	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999918624807926	WITHOUT_CLASSIFICATION	8.137519207348219E-6	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999906090482218	WITHOUT_CLASSIFICATION	9.390951778200519E-6	DOCUMENTATION
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999595805427244	WITHOUT_CLASSIFICATION	4.0419457275551545E-5	DOCUMENTATION
// then bind it	WITHOUT_CLASSIFICATION	0.9999351642688674	WITHOUT_CLASSIFICATION	6.483573113258598E-5	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999697892689806	WITHOUT_CLASSIFICATION	3.0210731019404495E-5	DOCUMENTATION
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9999574665465458	WITHOUT_CLASSIFICATION	4.253345345428446E-5	DOCUMENTATION
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.99998650237132	WITHOUT_CLASSIFICATION	1.3497628680047655E-5	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9999693552066526	WITHOUT_CLASSIFICATION	3.0644793347289935E-5	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.999998062950057	WITHOUT_CLASSIFICATION	1.937049943017513E-6	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9998292417643478	WITHOUT_CLASSIFICATION	1.7075823565211088E-4	DOCUMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9992545380324495	WITHOUT_CLASSIFICATION	7.454619675505971E-4	DOCUMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.998793345172876	WITHOUT_CLASSIFICATION	0.0012066548271240487	DOCUMENTATION
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9995796438065938	WITHOUT_CLASSIFICATION	4.203561934061171E-4	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9992694936254429	WITHOUT_CLASSIFICATION	7.305063745571504E-4	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9998292417643478	WITHOUT_CLASSIFICATION	1.7075823565211088E-4	DOCUMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9998954961915367	WITHOUT_CLASSIFICATION	1.0450380846338135E-4	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999937788508856	WITHOUT_CLASSIFICATION	6.221149114402767E-6	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9994743967130754	WITHOUT_CLASSIFICATION	5.256032869245656E-4	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9997425328546093	WITHOUT_CLASSIFICATION	2.5746714539071536E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999783936824688	WITHOUT_CLASSIFICATION	2.160631753121017E-5	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9999825089093007	WITHOUT_CLASSIFICATION	1.7491090699240675E-5	DOCUMENTATION
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999982530431893	WITHOUT_CLASSIFICATION	1.7469568106456193E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999286589105876	WITHOUT_CLASSIFICATION	7.134108941247022E-5	DOCUMENTATION
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9994634002228551	WITHOUT_CLASSIFICATION	5.36599777144925E-4	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999853092410416	WITHOUT_CLASSIFICATION	1.4690758958471827E-5	DOCUMENTATION
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999926310410713	WITHOUT_CLASSIFICATION	7.368958928742908E-6	DOCUMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9998494730773886	WITHOUT_CLASSIFICATION	1.5052692261143956E-4	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999484650979992	WITHOUT_CLASSIFICATION	5.153490200082282E-5	DOCUMENTATION
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999796586229068	WITHOUT_CLASSIFICATION	2.0341377093266102E-5	DOCUMENTATION
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9987328183050206	WITHOUT_CLASSIFICATION	0.001267181694979328	DOCUMENTATION
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9999988618277357	WITHOUT_CLASSIFICATION	1.1381722643307913E-6	DOCUMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9998303354118883	WITHOUT_CLASSIFICATION	1.6966458811163546E-4	DOCUMENTATION
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999761117033592	WITHOUT_CLASSIFICATION	2.388829664085188E-5	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999920476887978	WITHOUT_CLASSIFICATION	7.952311202253924E-6	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9989991687368199	WITHOUT_CLASSIFICATION	0.0010008312631799993	DOCUMENTATION
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999319602837559	WITHOUT_CLASSIFICATION	6.803971624412176E-5	DOCUMENTATION
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999541924277237	WITHOUT_CLASSIFICATION	4.5807572276331816E-5	DOCUMENTATION
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999537309367786	WITHOUT_CLASSIFICATION	4.626906322132515E-5	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999416900382372	WITHOUT_CLASSIFICATION	5.830996176291213E-5	DOCUMENTATION
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999289295571647	WITHOUT_CLASSIFICATION	7.107044283522263E-5	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999401430124882	WITHOUT_CLASSIFICATION	5.985698751189858E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999401430124882	WITHOUT_CLASSIFICATION	5.985698751189858E-5	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999401430124882	WITHOUT_CLASSIFICATION	5.985698751189858E-5	DOCUMENTATION
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999401430124882	WITHOUT_CLASSIFICATION	5.985698751189858E-5	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.999779563179187	WITHOUT_CLASSIFICATION	2.204368208128893E-4	DOCUMENTATION
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9998235183438275	WITHOUT_CLASSIFICATION	1.7648165617240407E-4	DOCUMENTATION
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999490907571047	WITHOUT_CLASSIFICATION	5.090924289541357E-5	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999549670417944	WITHOUT_CLASSIFICATION	4.503295820549499E-5	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999940192375354	WITHOUT_CLASSIFICATION	5.9807624645926006E-5	DOCUMENTATION
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999590338967288	WITHOUT_CLASSIFICATION	4.0966103271295196E-5	DOCUMENTATION
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999401430124882	WITHOUT_CLASSIFICATION	5.985698751189858E-5	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999401430124882	WITHOUT_CLASSIFICATION	5.985698751189858E-5	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999401430124882	WITHOUT_CLASSIFICATION	5.985698751189858E-5	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999401430124882	WITHOUT_CLASSIFICATION	5.985698751189858E-5	DOCUMENTATION
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999653163971789	WITHOUT_CLASSIFICATION	3.468360282113027E-5	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999285296074917	WITHOUT_CLASSIFICATION	7.147039250836518E-5	DOCUMENTATION
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9999769230887471	WITHOUT_CLASSIFICATION	2.3076911252937607E-5	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999900861200148	WITHOUT_CLASSIFICATION	9.913879985181083E-6	DOCUMENTATION
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999971556811048	WITHOUT_CLASSIFICATION	2.8443188951561764E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9994014542011617	WITHOUT_CLASSIFICATION	5.985457988383668E-4	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9995585419815812	WITHOUT_CLASSIFICATION	4.41458018418662E-4	DOCUMENTATION
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.9988567758919581	WITHOUT_CLASSIFICATION	0.0011432241080418795	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999462053541331	WITHOUT_CLASSIFICATION	5.379464586672492E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999286589105876	WITHOUT_CLASSIFICATION	7.134108941247022E-5	DOCUMENTATION
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999470144018946	WITHOUT_CLASSIFICATION	5.298559810531578E-5	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9999882459364599	WITHOUT_CLASSIFICATION	1.1754063540208468E-5	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9999786803350176	WITHOUT_CLASSIFICATION	2.1319664982492025E-5	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9999680770031161	WITHOUT_CLASSIFICATION	3.1922996883851296E-5	DOCUMENTATION
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9999743777665703	WITHOUT_CLASSIFICATION	2.5622233429816177E-5	DOCUMENTATION
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999322558775743	WITHOUT_CLASSIFICATION	6.774412242575022E-5	DOCUMENTATION
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999748597723189	WITHOUT_CLASSIFICATION	2.51402276811544E-5	DOCUMENTATION
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999284065025527	WITHOUT_CLASSIFICATION	7.159349744731764E-5	DOCUMENTATION
// not null is implicit	WITHOUT_CLASSIFICATION	0.9999543344922658	WITHOUT_CLASSIFICATION	4.5665507734284274E-5	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9998755754214086	WITHOUT_CLASSIFICATION	1.2442457859140047E-4	DOCUMENTATION
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.9999743202169573	WITHOUT_CLASSIFICATION	2.567978304278609E-5	DOCUMENTATION
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999357063299148	WITHOUT_CLASSIFICATION	6.429367008521986E-5	DOCUMENTATION
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999558013544112	WITHOUT_CLASSIFICATION	4.4198645588775106E-5	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999533012701126	WITHOUT_CLASSIFICATION	4.669872988740188E-5	DOCUMENTATION
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9999780418609975	WITHOUT_CLASSIFICATION	2.1958139002517605E-5	DOCUMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999359057627988	WITHOUT_CLASSIFICATION	6.40942372012697E-5	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999810172193302	WITHOUT_CLASSIFICATION	1.898278066974768E-5	DOCUMENTATION
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9983010313038554	WITHOUT_CLASSIFICATION	0.001698968696144533	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9999959335329315	WITHOUT_CLASSIFICATION	4.066467068592153E-6	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.999988674833444	WITHOUT_CLASSIFICATION	1.1325166556020255E-5	DOCUMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9999354617244848	WITHOUT_CLASSIFICATION	6.453827551518629E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999286589105876	WITHOUT_CLASSIFICATION	7.134108941247022E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9994014542011617	WITHOUT_CLASSIFICATION	5.985457988383668E-4	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999988709508244	WITHOUT_CLASSIFICATION	1.129049175599002E-6	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999929787540709	WITHOUT_CLASSIFICATION	7.021245929077688E-6	DOCUMENTATION
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999748260150465	WITHOUT_CLASSIFICATION	2.5173984953562183E-5	DOCUMENTATION
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999900861200148	WITHOUT_CLASSIFICATION	9.913879985181083E-6	DOCUMENTATION
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999718195969745	WITHOUT_CLASSIFICATION	2.8180403025593707E-5	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9988357269591006	WITHOUT_CLASSIFICATION	0.0011642730408993988	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9999422872967277	WITHOUT_CLASSIFICATION	5.771270327233167E-5	DOCUMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999019098084506	WITHOUT_CLASSIFICATION	9.809019154930916E-5	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999067630898819	WITHOUT_CLASSIFICATION	9.323691011805061E-5	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999304136204595	WITHOUT_CLASSIFICATION	6.95863795405102E-5	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999285927635007	WITHOUT_CLASSIFICATION	7.140723649932624E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999286589105876	WITHOUT_CLASSIFICATION	7.134108941247022E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999286589105876	WITHOUT_CLASSIFICATION	7.134108941247022E-5	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999939110471208	WITHOUT_CLASSIFICATION	6.088952879304079E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999552301720016	WITHOUT_CLASSIFICATION	4.4769827998472165E-5	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.999942200770392	WITHOUT_CLASSIFICATION	5.779922960794007E-5	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9988567758919581	WITHOUT_CLASSIFICATION	0.0011432241080418795	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999900861200148	WITHOUT_CLASSIFICATION	9.913879985181083E-6	DOCUMENTATION
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999732441006693	WITHOUT_CLASSIFICATION	2.6755899330640513E-5	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9997144734383374	WITHOUT_CLASSIFICATION	2.855265616625226E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999286589105876	WITHOUT_CLASSIFICATION	7.134108941247022E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.999984319528763	WITHOUT_CLASSIFICATION	1.568047123705838E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9984773126369052	WITHOUT_CLASSIFICATION	0.0015226873630947834	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9999492303315484	WITHOUT_CLASSIFICATION	5.076966845158054E-5	DOCUMENTATION
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999797225213518	WITHOUT_CLASSIFICATION	2.0277478648234718E-5	DOCUMENTATION
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9999719096196823	WITHOUT_CLASSIFICATION	2.809038031772116E-5	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999497183110297	WITHOUT_CLASSIFICATION	5.028168897030291E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9992541465706049	WITHOUT_CLASSIFICATION	7.458534293950279E-4	DOCUMENTATION
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9989421205466849	WITHOUT_CLASSIFICATION	0.001057879453315215	DOCUMENTATION
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9991246192021483	WITHOUT_CLASSIFICATION	8.753807978516859E-4	DOCUMENTATION
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999900861200148	WITHOUT_CLASSIFICATION	9.913879985181083E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9994014542011617	WITHOUT_CLASSIFICATION	5.985457988383668E-4	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999976735223917	WITHOUT_CLASSIFICATION	2.3264776082404144E-6	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999966292468782	WITHOUT_CLASSIFICATION	3.370753121897277E-6	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9998796774795624	WITHOUT_CLASSIFICATION	1.2032252043762995E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9994014542011617	WITHOUT_CLASSIFICATION	5.985457988383668E-4	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9997368985730957	WITHOUT_CLASSIFICATION	2.631014269043141E-4	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.999984319528763	WITHOUT_CLASSIFICATION	1.568047123705838E-5	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9996180160581469	WITHOUT_CLASSIFICATION	3.819839418531608E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999286589105876	WITHOUT_CLASSIFICATION	7.134108941247022E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9992701946479788	WITHOUT_CLASSIFICATION	7.298053520211334E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999286589105876	WITHOUT_CLASSIFICATION	7.134108941247022E-5	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999986285080521	WITHOUT_CLASSIFICATION	1.371491947944272E-6	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999067630898819	WITHOUT_CLASSIFICATION	9.323691011805061E-5	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999304136204595	WITHOUT_CLASSIFICATION	6.95863795405102E-5	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9998702670417527	WITHOUT_CLASSIFICATION	1.297329582472943E-4	DOCUMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.9998728139933022	WITHOUT_CLASSIFICATION	1.271860066977836E-4	DOCUMENTATION
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9997959295393527	WITHOUT_CLASSIFICATION	2.0407046064725725E-4	DOCUMENTATION
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999922931560838	WITHOUT_CLASSIFICATION	7.706843916146636E-6	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999989574244307	WITHOUT_CLASSIFICATION	1.0425755693188056E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999286589105876	WITHOUT_CLASSIFICATION	7.134108941247022E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9994014542011617	WITHOUT_CLASSIFICATION	5.985457988383668E-4	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999285927635007	WITHOUT_CLASSIFICATION	7.140723649932624E-5	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999939110471208	WITHOUT_CLASSIFICATION	6.088952879304079E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999742470826335	WITHOUT_CLASSIFICATION	2.5752917366500042E-5	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999720256517313	WITHOUT_CLASSIFICATION	2.7974348268801348E-5	DOCUMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999318530056214	WITHOUT_CLASSIFICATION	6.81469943785723E-5	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9987328183050206	WITHOUT_CLASSIFICATION	0.001267181694979328	DOCUMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9998876398128508	WITHOUT_CLASSIFICATION	1.1236018714914532E-4	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9999935684143794	WITHOUT_CLASSIFICATION	6.431585620583011E-6	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999401430124882	WITHOUT_CLASSIFICATION	5.985698751189858E-5	DOCUMENTATION
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999569100222218	WITHOUT_CLASSIFICATION	4.308997777827057E-5	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9999389740503982	WITHOUT_CLASSIFICATION	6.102594960188396E-5	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.999937692358778	WITHOUT_CLASSIFICATION	6.230764122199283E-5	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999052338895651	WITHOUT_CLASSIFICATION	9.476611043495268E-5	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999462053541331	WITHOUT_CLASSIFICATION	5.379464586672492E-5	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999401430124882	WITHOUT_CLASSIFICATION	5.985698751189858E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999401430124882	WITHOUT_CLASSIFICATION	5.985698751189858E-5	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999549670417944	WITHOUT_CLASSIFICATION	4.503295820549499E-5	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999462053541331	WITHOUT_CLASSIFICATION	5.379464586672492E-5	DOCUMENTATION
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9998792384865549	WITHOUT_CLASSIFICATION	1.2076151344517839E-4	DOCUMENTATION
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999324194054826	WITHOUT_CLASSIFICATION	6.758059451748513E-5	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999402444584875	WITHOUT_CLASSIFICATION	5.975554151251628E-5	DOCUMENTATION
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999401430124882	WITHOUT_CLASSIFICATION	5.985698751189858E-5	DOCUMENTATION
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999932854271805	WITHOUT_CLASSIFICATION	6.714572819564641E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999286589105876	WITHOUT_CLASSIFICATION	7.134108941247022E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999286589105876	WITHOUT_CLASSIFICATION	7.134108941247022E-5	DOCUMENTATION
/*<String>*/	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999940192375354	WITHOUT_CLASSIFICATION	5.9807624645926006E-5	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999401430124882	WITHOUT_CLASSIFICATION	5.985698751189858E-5	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999810172193302	WITHOUT_CLASSIFICATION	1.898278066974768E-5	DOCUMENTATION
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9999163708946911	WITHOUT_CLASSIFICATION	8.362910530886811E-5	DOCUMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999820781325653	WITHOUT_CLASSIFICATION	1.7921867434629202E-5	DOCUMENTATION
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999979099877219	WITHOUT_CLASSIFICATION	2.090012278181593E-6	DOCUMENTATION
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999365095263028	WITHOUT_CLASSIFICATION	6.349047369727209E-5	DOCUMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999860551599961	WITHOUT_CLASSIFICATION	1.3944840004026276E-5	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9993934877273979	WITHOUT_CLASSIFICATION	6.065122726021268E-4	DOCUMENTATION
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9993048625725357	WITHOUT_CLASSIFICATION	6.951374274643824E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999982530431893	WITHOUT_CLASSIFICATION	1.7469568106456193E-6	DOCUMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999565889098337	WITHOUT_CLASSIFICATION	4.3411090166338834E-5	DOCUMENTATION
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.999989535582007	WITHOUT_CLASSIFICATION	1.0464417992954126E-5	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999759286636188	WITHOUT_CLASSIFICATION	2.4071336381264095E-5	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999371046977891	WITHOUT_CLASSIFICATION	6.289530221102925E-5	DOCUMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999823791942585	WITHOUT_CLASSIFICATION	1.7620805741562227E-5	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9995894975879832	WITHOUT_CLASSIFICATION	4.105024120167974E-4	DOCUMENTATION
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999742643133899	WITHOUT_CLASSIFICATION	2.573568661024954E-5	DOCUMENTATION
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999742517866539	WITHOUT_CLASSIFICATION	2.5748213346082176E-5	DOCUMENTATION
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999963722648568	WITHOUT_CLASSIFICATION	3.627735143201942E-5	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999949771011064	WITHOUT_CLASSIFICATION	5.022898893662576E-6	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999546268606664	WITHOUT_CLASSIFICATION	4.537313933372332E-5	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999545817929085	WITHOUT_CLASSIFICATION	4.541820709151459E-5	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999706981773826	WITHOUT_CLASSIFICATION	2.9301822617391695E-5	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999976528402513	WITHOUT_CLASSIFICATION	2.3471597486922818E-5	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9999946553953796	WITHOUT_CLASSIFICATION	5.344604620333676E-6	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999465360282322	WITHOUT_CLASSIFICATION	5.346397176766967E-5	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999706981773826	WITHOUT_CLASSIFICATION	2.9301822617391695E-5	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999617961396344	WITHOUT_CLASSIFICATION	3.8203860365597444E-5	DOCUMENTATION
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999613992405463	WITHOUT_CLASSIFICATION	3.860075945372099E-5	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999411031837886	WITHOUT_CLASSIFICATION	5.8896816211283904E-5	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.999978129344954	WITHOUT_CLASSIFICATION	2.1870655046020812E-5	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999965720500329	WITHOUT_CLASSIFICATION	3.427949967014703E-6	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999371747785084	WITHOUT_CLASSIFICATION	6.282522149158405E-5	DOCUMENTATION
// continue loop	WITHOUT_CLASSIFICATION	0.9999360042900207	WITHOUT_CLASSIFICATION	6.399570997930035E-5	DOCUMENTATION
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9997897395822937	WITHOUT_CLASSIFICATION	2.1026041770632708E-4	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9997897395822937	WITHOUT_CLASSIFICATION	2.1026041770632708E-4	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999926140761562	WITHOUT_CLASSIFICATION	7.385923843771265E-6	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9999863278168845	WITHOUT_CLASSIFICATION	1.3672183115448822E-5	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9999473123469591	WITHOUT_CLASSIFICATION	5.268765304095818E-5	DOCUMENTATION
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999921845201811	WITHOUT_CLASSIFICATION	7.815479818887312E-6	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9999997351203258	WITHOUT_CLASSIFICATION	2.6487967422366626E-7	DOCUMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9999879341000071	WITHOUT_CLASSIFICATION	1.2065899992828623E-5	DOCUMENTATION
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.999995780681607	WITHOUT_CLASSIFICATION	4.21931839296372E-6	DOCUMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999948011713681	WITHOUT_CLASSIFICATION	5.1988286318149205E-6	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999766903164099	WITHOUT_CLASSIFICATION	2.330968358998948E-5	DOCUMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999959445744874	WITHOUT_CLASSIFICATION	4.055425512542315E-6	DOCUMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999962957939709	WITHOUT_CLASSIFICATION	3.704206029253809E-6	DOCUMENTATION
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999879517657929	WITHOUT_CLASSIFICATION	1.2048234207141383E-5	DOCUMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999966032240295	WITHOUT_CLASSIFICATION	3.3967759704909442E-6	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9999876980632773	WITHOUT_CLASSIFICATION	1.230193672281542E-5	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9995286056109063	WITHOUT_CLASSIFICATION	4.7139438909375237E-4	DOCUMENTATION
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9985051083488284	WITHOUT_CLASSIFICATION	0.0014948916511716207	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9998421835376652	WITHOUT_CLASSIFICATION	1.5781646233478924E-4	DOCUMENTATION
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9990540374483291	WITHOUT_CLASSIFICATION	9.459625516709292E-4	DOCUMENTATION
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9999385466828643	WITHOUT_CLASSIFICATION	6.145331713562723E-5	DOCUMENTATION
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999557410950206	WITHOUT_CLASSIFICATION	4.425890497932116E-5	DOCUMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999883613562247	WITHOUT_CLASSIFICATION	1.1638643775319995E-5	DOCUMENTATION
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999556785552735	WITHOUT_CLASSIFICATION	4.4321444726507476E-5	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9999851678879335	WITHOUT_CLASSIFICATION	1.483211206663383E-5	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999898624685629	WITHOUT_CLASSIFICATION	1.0137531436987688E-5	DOCUMENTATION
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999840777133578	WITHOUT_CLASSIFICATION	1.5922286642222427E-5	DOCUMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999300516570556	WITHOUT_CLASSIFICATION	6.994834294441123E-5	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999831472501304	WITHOUT_CLASSIFICATION	1.6852749869587987E-5	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999795960509968	WITHOUT_CLASSIFICATION	2.0403949003170966E-5	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9999684437992401	WITHOUT_CLASSIFICATION	3.15562007599356E-5	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9999350521315336	WITHOUT_CLASSIFICATION	6.49478684664259E-5	DOCUMENTATION
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999312197265496	WITHOUT_CLASSIFICATION	6.878027345044357E-5	DOCUMENTATION
//unwrap the object	WITHOUT_CLASSIFICATION	0.9995716674322821	WITHOUT_CLASSIFICATION	4.2833256771784557E-4	DOCUMENTATION
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9996121088979497	WITHOUT_CLASSIFICATION	3.8789110205040493E-4	DOCUMENTATION
//return the proxied object	WITHOUT_CLASSIFICATION	0.9996722693668771	WITHOUT_CLASSIFICATION	3.2773063312296257E-4	DOCUMENTATION
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9991170695106317	WITHOUT_CLASSIFICATION	8.82930489368183E-4	DOCUMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.999935058438477	WITHOUT_CLASSIFICATION	6.494156152308583E-5	DOCUMENTATION
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999705988975724	WITHOUT_CLASSIFICATION	2.9401102427567745E-5	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.99997958970567	WITHOUT_CLASSIFICATION	2.041029432998378E-5	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.999974141378537	WITHOUT_CLASSIFICATION	2.5858621462954166E-5	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9993410952856525	WITHOUT_CLASSIFICATION	6.589047143474888E-4	DOCUMENTATION
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999792699325599	WITHOUT_CLASSIFICATION	2.0730067440084905E-5	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9988567758919581	WITHOUT_CLASSIFICATION	0.0011432241080418795	DOCUMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9988567758919581	WITHOUT_CLASSIFICATION	0.0011432241080418795	DOCUMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999760781972735	WITHOUT_CLASSIFICATION	2.392180272644115E-5	DOCUMENTATION
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9997927262875623	WITHOUT_CLASSIFICATION	2.0727371243764588E-4	DOCUMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9998285398931283	WITHOUT_CLASSIFICATION	1.7146010687175926E-4	DOCUMENTATION
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999851880106648	WITHOUT_CLASSIFICATION	1.4811989335249474E-5	DOCUMENTATION
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999929441130863	WITHOUT_CLASSIFICATION	7.055886913756443E-6	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.993738542822276	WITHOUT_CLASSIFICATION	0.006261457177723975	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9988280986487011	WITHOUT_CLASSIFICATION	0.0011719013512988883	DOCUMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9988684658789835	WITHOUT_CLASSIFICATION	0.0011315341210165139	DOCUMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9998094816122641	WITHOUT_CLASSIFICATION	1.90518387735901E-4	DOCUMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9998224543938617	WITHOUT_CLASSIFICATION	1.775456061382334E-4	DOCUMENTATION
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9987994269402573	WITHOUT_CLASSIFICATION	0.0012005730597428018	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9995270305488032	WITHOUT_CLASSIFICATION	4.729694511968422E-4	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.999429658191477	WITHOUT_CLASSIFICATION	5.703418085229213E-4	DOCUMENTATION
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9987393728315942	WITHOUT_CLASSIFICATION	0.0012606271684058533	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9984566806438661	WITHOUT_CLASSIFICATION	0.0015433193561339917	DOCUMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9997854085876265	WITHOUT_CLASSIFICATION	2.1459141237355575E-4	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999665817183493	WITHOUT_CLASSIFICATION	3.3418281650794034E-5	DOCUMENTATION
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999992609886136	WITHOUT_CLASSIFICATION	7.390113864154117E-7	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999834520239688	WITHOUT_CLASSIFICATION	1.6547976031168924E-5	DOCUMENTATION
// We've been here before	WITHOUT_CLASSIFICATION	0.9998852501424695	WITHOUT_CLASSIFICATION	1.1474985753051611E-4	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999422417619841	WITHOUT_CLASSIFICATION	5.775823801574882E-5	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999834520239688	WITHOUT_CLASSIFICATION	1.6547976031168924E-5	DOCUMENTATION
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999876426901527	WITHOUT_CLASSIFICATION	1.2357309847350236E-5	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999438464967678	WITHOUT_CLASSIFICATION	5.615350323209097E-5	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9984562990417644	WITHOUT_CLASSIFICATION	0.0015437009582356467	DOCUMENTATION
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9993310491120876	WITHOUT_CLASSIFICATION	6.689508879123558E-4	DOCUMENTATION
// force initialize!	WITHOUT_CLASSIFICATION	0.999935283875059	WITHOUT_CLASSIFICATION	6.471612494102993E-5	DOCUMENTATION
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999869295076252	WITHOUT_CLASSIFICATION	1.3070492374741245E-5	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9987328183050206	WITHOUT_CLASSIFICATION	0.001267181694979328	DOCUMENTATION
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999195332360403	WITHOUT_CLASSIFICATION	8.046676395972655E-5	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999982079473666	WITHOUT_CLASSIFICATION	1.7920526334227431E-6	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999283821194073	WITHOUT_CLASSIFICATION	7.161788059264802E-5	DOCUMENTATION
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999880858693012	WITHOUT_CLASSIFICATION	1.1914130698792336E-5	DOCUMENTATION
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.999992459089932	WITHOUT_CLASSIFICATION	7.540910068092035E-6	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9999693237598303	WITHOUT_CLASSIFICATION	3.06762401696536E-5	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999981931020361	WITHOUT_CLASSIFICATION	1.8068979640103724E-6	DOCUMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999968421755578	WITHOUT_CLASSIFICATION	3.157824442126775E-6	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9955757396172921	WITHOUT_CLASSIFICATION	0.004424260382707911	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999955600099107	WITHOUT_CLASSIFICATION	4.439990089196714E-6	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
//re-snapshot	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999395730088125	WITHOUT_CLASSIFICATION	6.042699118756456E-5	DOCUMENTATION
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9984313496976087	WITHOUT_CLASSIFICATION	0.0015686503023912256	DOCUMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.999998315725689	WITHOUT_CLASSIFICATION	1.6842743110351957E-6	DOCUMENTATION
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999828920086415	WITHOUT_CLASSIFICATION	1.7107991358402698E-5	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999962805629768	WITHOUT_CLASSIFICATION	3.7194370232050295E-6	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9999996169747438	WITHOUT_CLASSIFICATION	3.830252561896547E-7	DOCUMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999976905810143	WITHOUT_CLASSIFICATION	2.3094189857946554E-6	DOCUMENTATION
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9988102719292798	WITHOUT_CLASSIFICATION	0.001189728070720172	DOCUMENTATION
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9996295168138682	WITHOUT_CLASSIFICATION	3.704831861317335E-4	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9993088315792034	WITHOUT_CLASSIFICATION	6.911684207966368E-4	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9995894975879832	WITHOUT_CLASSIFICATION	4.105024120167974E-4	DOCUMENTATION
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9993931043466036	WITHOUT_CLASSIFICATION	6.068956533965346E-4	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9994687363999298	WITHOUT_CLASSIFICATION	5.31263600070066E-4	DOCUMENTATION
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9998818650051531	WITHOUT_CLASSIFICATION	1.1813499484695231E-4	DOCUMENTATION
//do the test	WITHOUT_CLASSIFICATION	0.9996353379270667	WITHOUT_CLASSIFICATION	3.646620729332032E-4	DOCUMENTATION
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999987822536642	WITHOUT_CLASSIFICATION	1.2177463358202257E-6	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9994081074411209	WITHOUT_CLASSIFICATION	5.918925588791233E-4	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999944228300145	WITHOUT_CLASSIFICATION	5.5771699855803705E-6	DOCUMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.999986709168534	WITHOUT_CLASSIFICATION	1.3290831465894414E-5	DOCUMENTATION
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999841441293122	WITHOUT_CLASSIFICATION	1.5855870687746145E-5	DOCUMENTATION
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999841453170867	WITHOUT_CLASSIFICATION	1.5854682913332964E-5	DOCUMENTATION
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999816437658847	WITHOUT_CLASSIFICATION	1.835623411528393E-5	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999953688948244	WITHOUT_CLASSIFICATION	4.631105175606252E-6	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999902070451908	WITHOUT_CLASSIFICATION	9.792954809174698E-6	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9995123301719601	WITHOUT_CLASSIFICATION	4.876698280400053E-4	DOCUMENTATION
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9990965574415366	WITHOUT_CLASSIFICATION	9.034425584633304E-4	DOCUMENTATION
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9995849223598556	WITHOUT_CLASSIFICATION	4.150776401443812E-4	DOCUMENTATION
//count++;	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9996778497291754	WITHOUT_CLASSIFICATION	3.2215027082457907E-4	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9998419074950093	WITHOUT_CLASSIFICATION	1.5809250499070393E-4	DOCUMENTATION
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9983172881135781	WITHOUT_CLASSIFICATION	0.0016827118864219132	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9990440732975048	WITHOUT_CLASSIFICATION	9.559267024952257E-4	DOCUMENTATION
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9998408871794795	WITHOUT_CLASSIFICATION	1.5911282052055416E-4	DOCUMENTATION
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999881242711667	WITHOUT_CLASSIFICATION	1.187572883331881E-5	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.999975384530456	WITHOUT_CLASSIFICATION	2.4615469544001496E-5	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999309419641982	WITHOUT_CLASSIFICATION	6.905803580176353E-5	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.9998214281805559	WITHOUT_CLASSIFICATION	1.785718194440762E-4	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999902761927293	WITHOUT_CLASSIFICATION	9.723807270768634E-6	DOCUMENTATION
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.9999985767297529	WITHOUT_CLASSIFICATION	1.423270247017808E-6	DOCUMENTATION
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999949024041621	WITHOUT_CLASSIFICATION	5.097595837956013E-6	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999451673144475	WITHOUT_CLASSIFICATION	5.4832685552381844E-5	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999415488580411	WITHOUT_CLASSIFICATION	5.845114195884015E-5	DOCUMENTATION
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999289653728491	WITHOUT_CLASSIFICATION	7.103462715089411E-5	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999389582965057	WITHOUT_CLASSIFICATION	6.104170349432557E-5	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9999999533615292	WITHOUT_CLASSIFICATION	4.663847074805208E-8	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999792062868627	WITHOUT_CLASSIFICATION	2.079371313740637E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999232722592974	WITHOUT_CLASSIFICATION	7.672774070254426E-5	DOCUMENTATION
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9999997060406893	WITHOUT_CLASSIFICATION	2.93959310653191E-7	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999605649099412	WITHOUT_CLASSIFICATION	3.943509005881923E-5	DOCUMENTATION
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999414597697899	WITHOUT_CLASSIFICATION	5.854023021010017E-5	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999605649099412	WITHOUT_CLASSIFICATION	3.943509005881923E-5	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999118206365227	WITHOUT_CLASSIFICATION	8.817936347733127E-5	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999815900041823	WITHOUT_CLASSIFICATION	1.840999581775974E-5	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9999420917831059	WITHOUT_CLASSIFICATION	5.790821689406222E-5	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999799190432763	WITHOUT_CLASSIFICATION	2.008095672367374E-5	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999899020901973	WITHOUT_CLASSIFICATION	1.0097909802589337E-5	DOCUMENTATION
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999252966481309	WITHOUT_CLASSIFICATION	7.470335186906442E-5	DOCUMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999911376853315	WITHOUT_CLASSIFICATION	8.862314668561912E-6	DOCUMENTATION
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999836542030136	WITHOUT_CLASSIFICATION	1.6345796986447107E-5	DOCUMENTATION
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.999997685003322	WITHOUT_CLASSIFICATION	2.314996678020795E-6	DOCUMENTATION
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9998579779364601	WITHOUT_CLASSIFICATION	1.420220635398585E-4	DOCUMENTATION
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999721629508036	WITHOUT_CLASSIFICATION	2.7837049196476003E-5	DOCUMENTATION
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9999916885293154	WITHOUT_CLASSIFICATION	8.311470684619055E-6	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9984219571342553	WITHOUT_CLASSIFICATION	0.0015780428657447716	DOCUMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.999998485103566	WITHOUT_CLASSIFICATION	1.5148964340226792E-6	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.999748174900823	WITHOUT_CLASSIFICATION	2.5182509917699003E-4	DOCUMENTATION
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9999975308011736	WITHOUT_CLASSIFICATION	2.4691988263859973E-6	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9992274875128495	WITHOUT_CLASSIFICATION	7.725124871505089E-4	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9992274875128495	WITHOUT_CLASSIFICATION	7.725124871505089E-4	DOCUMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9998224543938617	WITHOUT_CLASSIFICATION	1.775456061382334E-4	DOCUMENTATION
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999868821348957	WITHOUT_CLASSIFICATION	1.3117865104378875E-5	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999984955066864	WITHOUT_CLASSIFICATION	1.5044933136418135E-6	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999994755463544	WITHOUT_CLASSIFICATION	5.244536456620284E-7	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999996098388719	WITHOUT_CLASSIFICATION	3.901611280738332E-7	DOCUMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999999385058661	WITHOUT_CLASSIFICATION	6.149413396912039E-8	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9998921921203155	WITHOUT_CLASSIFICATION	1.0780787968439265E-4	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9993384339723068	WITHOUT_CLASSIFICATION	6.615660276931656E-4	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999714001607747	WITHOUT_CLASSIFICATION	2.8599839225243896E-5	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9997200337039263	WITHOUT_CLASSIFICATION	2.7996629607374666E-4	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999653869983834	WITHOUT_CLASSIFICATION	3.4613001616595985E-5	DOCUMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999908621504776	WITHOUT_CLASSIFICATION	9.13784952238559E-6	DOCUMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.999953978773986	WITHOUT_CLASSIFICATION	4.602122601395556E-5	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999988628760272	WITHOUT_CLASSIFICATION	1.1371239728093178E-6	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999749257022356	WITHOUT_CLASSIFICATION	2.507429776443525E-5	DOCUMENTATION
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9998792073996614	WITHOUT_CLASSIFICATION	1.2079260033861086E-4	DOCUMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999410034429104	WITHOUT_CLASSIFICATION	5.899655708963969E-5	DOCUMENTATION
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9934984643738319	WITHOUT_CLASSIFICATION	0.006501535626168055	DOCUMENTATION
//use the current version	WITHOUT_CLASSIFICATION	0.9997750867047898	WITHOUT_CLASSIFICATION	2.2491329521026973E-4	DOCUMENTATION
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999950684504854	WITHOUT_CLASSIFICATION	4.931549514575776E-6	DOCUMENTATION
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999684116023723	WITHOUT_CLASSIFICATION	3.158839762764772E-5	DOCUMENTATION
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9999489605381728	WITHOUT_CLASSIFICATION	5.103946182714755E-5	DOCUMENTATION
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9999806262402668	WITHOUT_CLASSIFICATION	1.9373759733092737E-5	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999763942349157	WITHOUT_CLASSIFICATION	2.360576508425209E-5	DOCUMENTATION
//even process null collections	WITHOUT_CLASSIFICATION	0.9987509430033272	WITHOUT_CLASSIFICATION	0.0012490569966727078	DOCUMENTATION
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999951542111973	WITHOUT_CLASSIFICATION	4.845788802630676E-6	DOCUMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999135417632826	WITHOUT_CLASSIFICATION	8.645823671734155E-5	DOCUMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.9993542447134666	WITHOUT_CLASSIFICATION	6.457552865334876E-4	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9997438656553771	WITHOUT_CLASSIFICATION	2.561343446228378E-4	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9993138381150064	WITHOUT_CLASSIFICATION	6.86161884993639E-4	DOCUMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9998161346805035	WITHOUT_CLASSIFICATION	1.838653194965369E-4	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9994310732309388	WITHOUT_CLASSIFICATION	5.689267690611099E-4	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9991866481361465	WITHOUT_CLASSIFICATION	8.133518638535482E-4	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999309028273926	WITHOUT_CLASSIFICATION	6.909717260740891E-5	DOCUMENTATION
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9998614461886227	WITHOUT_CLASSIFICATION	1.3855381137725632E-4	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999591987855047	WITHOUT_CLASSIFICATION	4.080121449543705E-5	DOCUMENTATION
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9999458150362015	WITHOUT_CLASSIFICATION	5.4184963798597756E-5	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9999210764902305	WITHOUT_CLASSIFICATION	7.892350976942405E-5	DOCUMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999675622235339	WITHOUT_CLASSIFICATION	3.2437776466195825E-5	DOCUMENTATION
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999594919643002	WITHOUT_CLASSIFICATION	4.050803569969046E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999292990069653	WITHOUT_CLASSIFICATION	7.070099303472323E-5	DOCUMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9992406724158064	WITHOUT_CLASSIFICATION	7.593275841935889E-4	DOCUMENTATION
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999897412083036	WITHOUT_CLASSIFICATION	1.025879169636851E-5	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9999975590829913	WITHOUT_CLASSIFICATION	2.440917008611963E-6	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.9999734512551576	WITHOUT_CLASSIFICATION	2.6548744842412277E-5	DOCUMENTATION
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999984592142199	WITHOUT_CLASSIFICATION	1.5407857799753115E-6	DOCUMENTATION
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.999951918873894	WITHOUT_CLASSIFICATION	4.8081126106001376E-5	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9996000753576771	WITHOUT_CLASSIFICATION	3.9992464232282656E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999292990069653	WITHOUT_CLASSIFICATION	7.070099303472323E-5	DOCUMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9997809507674191	WITHOUT_CLASSIFICATION	2.190492325809713E-4	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999683691279937	WITHOUT_CLASSIFICATION	3.16308720063843E-5	DOCUMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9999026176721824	WITHOUT_CLASSIFICATION	9.738232781764764E-5	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9997917896104691	WITHOUT_CLASSIFICATION	2.0821038953085515E-4	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9997368985730957	WITHOUT_CLASSIFICATION	2.631014269043141E-4	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9997368985730957	WITHOUT_CLASSIFICATION	2.631014269043141E-4	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999995307388136	WITHOUT_CLASSIFICATION	4.69261186276227E-7	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9997661077068061	WITHOUT_CLASSIFICATION	2.3389229319405376E-4	DOCUMENTATION
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999292017540757	WITHOUT_CLASSIFICATION	7.079824592421996E-5	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999654841466101	WITHOUT_CLASSIFICATION	3.451585338988721E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999790298002881	WITHOUT_CLASSIFICATION	2.0970199711892817E-5	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999908083184271	WITHOUT_CLASSIFICATION	9.191681572928703E-6	DOCUMENTATION
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999835950892967	WITHOUT_CLASSIFICATION	1.6404910703380774E-5	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9997168515541545	WITHOUT_CLASSIFICATION	2.831484458455724E-4	DOCUMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.999990258225786	WITHOUT_CLASSIFICATION	9.741774213949753E-6	DOCUMENTATION
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9996522856609394	WITHOUT_CLASSIFICATION	3.4771433906063064E-4	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9992946560680981	WITHOUT_CLASSIFICATION	7.053439319019757E-4	DOCUMENTATION
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9980054570456278	WITHOUT_CLASSIFICATION	0.0019945429543721206	DOCUMENTATION
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999880155129057	WITHOUT_CLASSIFICATION	1.1984487094290344E-5	DOCUMENTATION
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999979175096428	WITHOUT_CLASSIFICATION	2.0824903571782433E-6	DOCUMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999974595391392	WITHOUT_CLASSIFICATION	2.5404608606955525E-6	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.999999702863238	WITHOUT_CLASSIFICATION	2.9713676196172113E-7	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9996335309351412	WITHOUT_CLASSIFICATION	3.6646906485874366E-4	DOCUMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.999998989382574	WITHOUT_CLASSIFICATION	1.0106174260298334E-6	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9990658840866499	WITHOUT_CLASSIFICATION	9.341159133501919E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999673546014535	WITHOUT_CLASSIFICATION	3.264539854648202E-5	DOCUMENTATION
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.9999751038671738	WITHOUT_CLASSIFICATION	2.489613282611955E-5	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9999940179552629	WITHOUT_CLASSIFICATION	5.9820447371182615E-6	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9988979414602365	WITHOUT_CLASSIFICATION	0.0011020585397634758	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9997935723309181	WITHOUT_CLASSIFICATION	2.064276690818199E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9999970113983302	WITHOUT_CLASSIFICATION	2.9886016698648216E-6	DOCUMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9999970563896198	WITHOUT_CLASSIFICATION	2.943610380142459E-6	DOCUMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999541948922679	WITHOUT_CLASSIFICATION	4.580510773207117E-5	DOCUMENTATION
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9972021544648809	WITHOUT_CLASSIFICATION	0.002797845535119094	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9999983956065011	WITHOUT_CLASSIFICATION	1.6043934990226345E-6	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999541948922679	WITHOUT_CLASSIFICATION	4.580510773207117E-5	DOCUMENTATION
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9999236775852005	WITHOUT_CLASSIFICATION	7.632241479957019E-5	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.999926333256129	WITHOUT_CLASSIFICATION	7.366674387099466E-5	DOCUMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999674574643034	WITHOUT_CLASSIFICATION	3.2542535696633883E-5	DOCUMENTATION
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.999737067108931	WITHOUT_CLASSIFICATION	2.6293289106900586E-4	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9992423000999484	WITHOUT_CLASSIFICATION	7.57699900051548E-4	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999653869983834	WITHOUT_CLASSIFICATION	3.4613001616595985E-5	DOCUMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9985707196629292	WITHOUT_CLASSIFICATION	0.0014292803370708664	DOCUMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9993934877273979	WITHOUT_CLASSIFICATION	6.065122726021268E-4	DOCUMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9994314110376414	WITHOUT_CLASSIFICATION	5.685889623586884E-4	DOCUMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9999807364785094	WITHOUT_CLASSIFICATION	1.92635214907106E-5	DOCUMENTATION
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.999519340901709	WITHOUT_CLASSIFICATION	4.806590982909187E-4	DOCUMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999750481030117	WITHOUT_CLASSIFICATION	2.4951896988321563E-5	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9991177985652271	WITHOUT_CLASSIFICATION	8.822014347729995E-4	DOCUMENTATION
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999691882604106	WITHOUT_CLASSIFICATION	3.0811739589415197E-5	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999301718574213	WITHOUT_CLASSIFICATION	6.982814257868965E-5	DOCUMENTATION
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999543933470094	WITHOUT_CLASSIFICATION	4.560665299068532E-5	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999923858388392	WITHOUT_CLASSIFICATION	7.614161160711515E-6	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999915166265573	WITHOUT_CLASSIFICATION	8.483373442633357E-6	DOCUMENTATION
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999876253982367	WITHOUT_CLASSIFICATION	1.2374601763232159E-5	DOCUMENTATION
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999531087220865	WITHOUT_CLASSIFICATION	4.689127791347721E-5	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.999930224535329	WITHOUT_CLASSIFICATION	6.97754646710001E-5	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.999963751949565	WITHOUT_CLASSIFICATION	3.62480504350636E-5	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999869636789863	WITHOUT_CLASSIFICATION	1.3036321013595526E-5	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9987328183050206	WITHOUT_CLASSIFICATION	0.001267181694979328	DOCUMENTATION
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9987328183050206	WITHOUT_CLASSIFICATION	0.001267181694979328	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999955963888405	WITHOUT_CLASSIFICATION	4.403611159459557E-6	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9996564530522027	WITHOUT_CLASSIFICATION	3.435469477972817E-4	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999645885397276	WITHOUT_CLASSIFICATION	3.54114602724104E-5	DOCUMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9990854308685891	WITHOUT_CLASSIFICATION	9.145691314108904E-4	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.9999361058123586	WITHOUT_CLASSIFICATION	6.389418764136785E-5	DOCUMENTATION
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999497698146942	WITHOUT_CLASSIFICATION	5.023018530583291E-5	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999190665162764	WITHOUT_CLASSIFICATION	8.093348372368871E-5	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999345182517759	WITHOUT_CLASSIFICATION	6.548174822412692E-5	DOCUMENTATION
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.9999921872872352	WITHOUT_CLASSIFICATION	7.81271276488478E-6	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9999836069323744	WITHOUT_CLASSIFICATION	1.6393067625488827E-5	DOCUMENTATION
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9999270232697419	WITHOUT_CLASSIFICATION	7.297673025805348E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999826009415185	WITHOUT_CLASSIFICATION	1.7399058481490664E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999826009415185	WITHOUT_CLASSIFICATION	1.7399058481490664E-5	DOCUMENTATION
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999092051276738	WITHOUT_CLASSIFICATION	9.079487232621163E-5	DOCUMENTATION
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999998573989423	WITHOUT_CLASSIFICATION	1.4260105764851036E-7	DOCUMENTATION
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999815769073012	WITHOUT_CLASSIFICATION	1.8423092698830938E-5	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999958528834018	WITHOUT_CLASSIFICATION	4.1471165982324546E-6	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999923271783204	WITHOUT_CLASSIFICATION	7.672821679594396E-6	DOCUMENTATION
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999852379263383	WITHOUT_CLASSIFICATION	1.4762073661704353E-5	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999351192529372	WITHOUT_CLASSIFICATION	6.488074706289182E-5	DOCUMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999656558300234	WITHOUT_CLASSIFICATION	3.434416997657506E-5	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9999301219868417	WITHOUT_CLASSIFICATION	6.987801315829016E-5	DOCUMENTATION
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999937494602468	WITHOUT_CLASSIFICATION	6.250539753156607E-6	DOCUMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999974709730254	WITHOUT_CLASSIFICATION	2.5290269747187897E-6	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999734872453472	WITHOUT_CLASSIFICATION	2.6512754652886537E-5	DOCUMENTATION
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999652410899471	WITHOUT_CLASSIFICATION	3.475891005287392E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999826009415185	WITHOUT_CLASSIFICATION	1.7399058481490664E-5	DOCUMENTATION
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999474904586713	WITHOUT_CLASSIFICATION	5.250954132881099E-5	DOCUMENTATION
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.999880303470814	WITHOUT_CLASSIFICATION	1.1969652918603695E-4	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999988025218448	WITHOUT_CLASSIFICATION	1.1974781551258668E-6	DOCUMENTATION
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9999657923681529	WITHOUT_CLASSIFICATION	3.420763184701918E-5	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999941104490652	WITHOUT_CLASSIFICATION	5.8895509348786785E-6	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9999055934031525	WITHOUT_CLASSIFICATION	9.440659684740423E-5	DOCUMENTATION
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999785861203196	WITHOUT_CLASSIFICATION	2.1413879680323115E-5	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999900109754211	WITHOUT_CLASSIFICATION	9.989024578864304E-6	DOCUMENTATION
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999979101202916	WITHOUT_CLASSIFICATION	2.0898797084188114E-6	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.999931090190931	WITHOUT_CLASSIFICATION	6.89098090690141E-5	DOCUMENTATION
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9999752377637449	WITHOUT_CLASSIFICATION	2.476223625514674E-5	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999190665162764	WITHOUT_CLASSIFICATION	8.093348372368871E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999826009415185	WITHOUT_CLASSIFICATION	1.7399058481490664E-5	DOCUMENTATION
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999865717131416	WITHOUT_CLASSIFICATION	1.3428286858321242E-5	DOCUMENTATION
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999917647218564	WITHOUT_CLASSIFICATION	8.23527814370461E-6	DOCUMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9996438536596906	WITHOUT_CLASSIFICATION	3.561463403094502E-4	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999920202936905	WITHOUT_CLASSIFICATION	7.97970630958599E-6	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999992724385199	WITHOUT_CLASSIFICATION	7.275614800650128E-7	DOCUMENTATION
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.99996253581843	WITHOUT_CLASSIFICATION	3.7464181569922826E-5	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999345625852979	WITHOUT_CLASSIFICATION	6.543741470201739E-5	DOCUMENTATION
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999991859081591	WITHOUT_CLASSIFICATION	8.140918408801993E-7	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999992210159311	WITHOUT_CLASSIFICATION	7.789840688567292E-7	DOCUMENTATION
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999434686309632	WITHOUT_CLASSIFICATION	5.653136903691645E-5	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999710325554975	WITHOUT_CLASSIFICATION	2.896744450244805E-5	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.998734034954515	WITHOUT_CLASSIFICATION	0.0012659650454851254	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999718721799671	WITHOUT_CLASSIFICATION	2.8127820032924327E-5	DOCUMENTATION
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999951994530449	WITHOUT_CLASSIFICATION	4.800546955112284E-6	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999118206365227	WITHOUT_CLASSIFICATION	8.817936347733127E-5	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999991682720173	WITHOUT_CLASSIFICATION	8.317279826011691E-7	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.999998231953933	WITHOUT_CLASSIFICATION	1.7680460669538826E-6	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999967910110293	WITHOUT_CLASSIFICATION	3.2089889705613653E-6	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999148605013715	WITHOUT_CLASSIFICATION	8.513949862859977E-5	DOCUMENTATION
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999981496625687	WITHOUT_CLASSIFICATION	1.8503374313814041E-6	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9991465948022491	WITHOUT_CLASSIFICATION	8.534051977508257E-4	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9991465948022491	WITHOUT_CLASSIFICATION	8.534051977508257E-4	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9999230153057812	WITHOUT_CLASSIFICATION	7.698469421880734E-5	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9999929409791698	WITHOUT_CLASSIFICATION	7.0590208301953165E-6	DOCUMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9999458347867536	WITHOUT_CLASSIFICATION	5.416521324648673E-5	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9999799031902413	WITHOUT_CLASSIFICATION	2.0096809758589306E-5	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999809547091019	WITHOUT_CLASSIFICATION	1.904529089817095E-5	DOCUMENTATION
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9999946296435519	WITHOUT_CLASSIFICATION	5.370356448172628E-6	DOCUMENTATION
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9999804739897572	WITHOUT_CLASSIFICATION	1.9526010242854517E-5	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999753109038547	WITHOUT_CLASSIFICATION	2.4689096145326482E-5	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999753109038547	WITHOUT_CLASSIFICATION	2.4689096145326482E-5	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9988121703078169	WITHOUT_CLASSIFICATION	0.0011878296921830802	DOCUMENTATION
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999806860738735	WITHOUT_CLASSIFICATION	1.9313926126564E-5	DOCUMENTATION
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999742373235551	WITHOUT_CLASSIFICATION	2.576267644497537E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999826447317547	WITHOUT_CLASSIFICATION	1.7355268245264528E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999826447317547	WITHOUT_CLASSIFICATION	1.7355268245264528E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999826447317547	WITHOUT_CLASSIFICATION	1.7355268245264528E-5	DOCUMENTATION
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9997943775380697	WITHOUT_CLASSIFICATION	2.0562246193027485E-4	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9999821850563388	WITHOUT_CLASSIFICATION	1.7814943661109187E-5	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9995819482176211	WITHOUT_CLASSIFICATION	4.180517823788537E-4	DOCUMENTATION
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9999928666240321	WITHOUT_CLASSIFICATION	7.1333759679138705E-6	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999994623721729	WITHOUT_CLASSIFICATION	5.376278271842447E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999826009415185	WITHOUT_CLASSIFICATION	1.7399058481490664E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999826009415185	WITHOUT_CLASSIFICATION	1.7399058481490664E-5	DOCUMENTATION
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9999976208045995	WITHOUT_CLASSIFICATION	2.3791954005207743E-6	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999934725449531	WITHOUT_CLASSIFICATION	6.527455046850039E-6	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.999999105854485	WITHOUT_CLASSIFICATION	8.941455148934426E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999145803945729	WITHOUT_CLASSIFICATION	8.541960542711242E-5	DOCUMENTATION
// igndore it...	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999683256563481	WITHOUT_CLASSIFICATION	3.167434365196475E-5	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9999002324220587	WITHOUT_CLASSIFICATION	9.976757794124552E-5	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9999992990320475	WITHOUT_CLASSIFICATION	7.00967952450228E-7	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999974195171004	WITHOUT_CLASSIFICATION	2.5804828996788965E-6	DOCUMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999889785760548	WITHOUT_CLASSIFICATION	1.1021423945225002E-5	DOCUMENTATION
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999613524028786	WITHOUT_CLASSIFICATION	3.864759712127674E-5	DOCUMENTATION
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999914084606025	WITHOUT_CLASSIFICATION	8.591539397528694E-6	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999914084606025	WITHOUT_CLASSIFICATION	8.591539397528694E-6	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999914084606025	WITHOUT_CLASSIFICATION	8.591539397528694E-6	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999914084606025	WITHOUT_CLASSIFICATION	8.591539397528694E-6	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.9999914084606025	WITHOUT_CLASSIFICATION	8.591539397528694E-6	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999885483553776	WITHOUT_CLASSIFICATION	1.1451644622353585E-5	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999885483553776	WITHOUT_CLASSIFICATION	1.1451644622353585E-5	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999885483553776	WITHOUT_CLASSIFICATION	1.1451644622353585E-5	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999885483553776	WITHOUT_CLASSIFICATION	1.1451644622353585E-5	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999756186537984	WITHOUT_CLASSIFICATION	2.438134620165476E-5	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9991465948022491	WITHOUT_CLASSIFICATION	8.534051977508257E-4	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999909800152192	WITHOUT_CLASSIFICATION	9.019984780777018E-6	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999885483553776	WITHOUT_CLASSIFICATION	1.1451644622353585E-5	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9999921996807167	WITHOUT_CLASSIFICATION	7.800319283273317E-6	DOCUMENTATION
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999298425100535	WITHOUT_CLASSIFICATION	7.015748994646948E-5	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999495191844516	WITHOUT_CLASSIFICATION	5.0480815548460895E-5	DOCUMENTATION
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999905824098073	WITHOUT_CLASSIFICATION	9.417590192671722E-6	DOCUMENTATION
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999995228774808	WITHOUT_CLASSIFICATION	4.771225191078922E-7	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9999506256755551	WITHOUT_CLASSIFICATION	4.9374324444849735E-5	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999903644523341	WITHOUT_CLASSIFICATION	9.635547665779465E-6	DOCUMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9999989660353056	WITHOUT_CLASSIFICATION	1.0339646944450095E-6	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9999547538078267	WITHOUT_CLASSIFICATION	4.524619217340543E-5	DOCUMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9999927916628134	WITHOUT_CLASSIFICATION	7.208337186488414E-6	DOCUMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999986501778648	WITHOUT_CLASSIFICATION	1.3498221351731538E-6	DOCUMENTATION
// Set it!	WITHOUT_CLASSIFICATION	0.9996781568147565	WITHOUT_CLASSIFICATION	3.218431852435515E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9996693467326176	WITHOUT_CLASSIFICATION	3.306532673822506E-4	DOCUMENTATION
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999821848249042	WITHOUT_CLASSIFICATION	1.781517509582172E-5	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9999997907012694	WITHOUT_CLASSIFICATION	2.092987305942681E-7	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9999852698930085	WITHOUT_CLASSIFICATION	1.4730106991513024E-5	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999910150176449	WITHOUT_CLASSIFICATION	8.984982355162397E-6	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999158326505191	WITHOUT_CLASSIFICATION	8.416734948091377E-5	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999158326505191	WITHOUT_CLASSIFICATION	8.416734948091377E-5	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999745126703957	WITHOUT_CLASSIFICATION	2.548732960430289E-5	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999901732563564	WITHOUT_CLASSIFICATION	9.82674364356145E-6	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999743832253359	WITHOUT_CLASSIFICATION	2.5616774664162373E-5	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9999476132995424	WITHOUT_CLASSIFICATION	5.238670045764208E-5	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.999861128373025	WITHOUT_CLASSIFICATION	1.3887162697491282E-4	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.9999916592694431	WITHOUT_CLASSIFICATION	8.340730556865814E-6	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9999866731729905	WITHOUT_CLASSIFICATION	1.3326827009448883E-5	DOCUMENTATION
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9998408777591213	WITHOUT_CLASSIFICATION	1.5912224087870377E-4	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999700601719994	WITHOUT_CLASSIFICATION	2.993982800047992E-5	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999825222100971	WITHOUT_CLASSIFICATION	1.7477789902971837E-5	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999350622753412	WITHOUT_CLASSIFICATION	6.493772465880968E-5	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9987375963925418	WITHOUT_CLASSIFICATION	0.0012624036074581793	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999977105473725	WITHOUT_CLASSIFICATION	2.2894526274390604E-6	DOCUMENTATION
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999779491045916	WITHOUT_CLASSIFICATION	2.2050895408424883E-5	DOCUMENTATION
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999910476556817	WITHOUT_CLASSIFICATION	8.952344318178488E-6	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999485214938613	WITHOUT_CLASSIFICATION	5.147850613870388E-5	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999945426012179	WITHOUT_CLASSIFICATION	5.457398782144389E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999945426012179	WITHOUT_CLASSIFICATION	5.457398782144389E-6	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9998902843958638	WITHOUT_CLASSIFICATION	1.0971560413618222E-4	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9999998268527385	WITHOUT_CLASSIFICATION	1.731472615551119E-7	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9999638429612764	WITHOUT_CLASSIFICATION	3.6157038723582954E-5	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999638429612764	WITHOUT_CLASSIFICATION	3.6157038723582954E-5	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9997323005530782	WITHOUT_CLASSIFICATION	2.676994469218179E-4	DOCUMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999785375739892	WITHOUT_CLASSIFICATION	2.1462426010727602E-5	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.999248389946116	WITHOUT_CLASSIFICATION	7.516100538839035E-4	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999980447756389	WITHOUT_CLASSIFICATION	1.9552243610639253E-6	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9998180762963533	WITHOUT_CLASSIFICATION	1.819237036467092E-4	DOCUMENTATION
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999866683971236	WITHOUT_CLASSIFICATION	1.3331602876408099E-5	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999623503231161	WITHOUT_CLASSIFICATION	3.7649676883864265E-5	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999980447756389	WITHOUT_CLASSIFICATION	1.9552243610639253E-6	DOCUMENTATION
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.9999986852472728	WITHOUT_CLASSIFICATION	1.3147527271889708E-6	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999697872319134	WITHOUT_CLASSIFICATION	3.0212768086479593E-5	DOCUMENTATION
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.999996138251299	WITHOUT_CLASSIFICATION	3.861748701035693E-6	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9998793953883042	WITHOUT_CLASSIFICATION	1.2060461169589042E-4	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999960654171809	WITHOUT_CLASSIFICATION	3.934582819097145E-6	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999620857840508	WITHOUT_CLASSIFICATION	3.7914215949252346E-5	DOCUMENTATION
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999077015846615	WITHOUT_CLASSIFICATION	9.229841533852088E-5	DOCUMENTATION
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999701765270576	WITHOUT_CLASSIFICATION	2.9823472942395372E-5	DOCUMENTATION
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999993807375473	WITHOUT_CLASSIFICATION	6.192624526762223E-7	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999976053116559	WITHOUT_CLASSIFICATION	2.394688343931229E-6	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9999816199797441	WITHOUT_CLASSIFICATION	1.8380020255922506E-5	DOCUMENTATION
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.999991675031816	WITHOUT_CLASSIFICATION	8.324968184027618E-6	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999829932614833	WITHOUT_CLASSIFICATION	1.7006738516703103E-5	DOCUMENTATION
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999783441739392	WITHOUT_CLASSIFICATION	2.1655826060861826E-5	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999796113135481	WITHOUT_CLASSIFICATION	2.0388686451950945E-5	DOCUMENTATION
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999686855369959	WITHOUT_CLASSIFICATION	3.131446300418498E-5	DOCUMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.999901830201323	WITHOUT_CLASSIFICATION	9.816979867708359E-5	DOCUMENTATION
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.999807053007685	WITHOUT_CLASSIFICATION	1.9294699231509616E-4	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.999807053007685	WITHOUT_CLASSIFICATION	1.9294699231509616E-4	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999077015846615	WITHOUT_CLASSIFICATION	9.229841533852088E-5	DOCUMENTATION
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.999979197959196	WITHOUT_CLASSIFICATION	2.080204080404274E-5	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.999996495907588	WITHOUT_CLASSIFICATION	3.5040924119747737E-6	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.999513951293784	WITHOUT_CLASSIFICATION	4.8604870621604137E-4	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.999642024684295	WITHOUT_CLASSIFICATION	3.579753157051193E-4	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.99996438303598	WITHOUT_CLASSIFICATION	3.561696401997483E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999750296421605	WITHOUT_CLASSIFICATION	2.497035783951106E-5	DOCUMENTATION
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999775463106337	WITHOUT_CLASSIFICATION	2.245368936635185E-5	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999601338544307	WITHOUT_CLASSIFICATION	3.986614556922537E-5	DOCUMENTATION
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999878507890029	WITHOUT_CLASSIFICATION	1.2149210997133682E-5	DOCUMENTATION
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9999988446996191	WITHOUT_CLASSIFICATION	1.155300380911414E-6	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999943830629057	WITHOUT_CLASSIFICATION	5.616937094292726E-6	DOCUMENTATION
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999888882001232	WITHOUT_CLASSIFICATION	1.1111799876836708E-5	DOCUMENTATION
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999771559901296	WITHOUT_CLASSIFICATION	2.284400987035955E-5	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9999994687349169	WITHOUT_CLASSIFICATION	5.312650831693481E-7	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999739564348582	WITHOUT_CLASSIFICATION	2.6043565141743307E-5	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.999964544661659	WITHOUT_CLASSIFICATION	3.545533834093318E-5	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999995176326025	WITHOUT_CLASSIFICATION	4.823673974456727E-7	DOCUMENTATION
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999443095839639	WITHOUT_CLASSIFICATION	5.5690416036043964E-5	DOCUMENTATION
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999833443574419	WITHOUT_CLASSIFICATION	1.6655642558135276E-5	DOCUMENTATION
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999770829663792	WITHOUT_CLASSIFICATION	2.2917033620779115E-5	DOCUMENTATION
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999070445808873	WITHOUT_CLASSIFICATION	9.295541911280144E-5	DOCUMENTATION
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999880893984014	WITHOUT_CLASSIFICATION	1.1910601598476252E-5	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.999928885743315	WITHOUT_CLASSIFICATION	7.111425668507666E-5	DOCUMENTATION
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999845657909044	WITHOUT_CLASSIFICATION	1.54342090956042E-5	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999728174375528	WITHOUT_CLASSIFICATION	2.7182562447261916E-5	DOCUMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9998918837734566	WITHOUT_CLASSIFICATION	1.0811622654338833E-4	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999968486696451	WITHOUT_CLASSIFICATION	3.1513303549491745E-6	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999711411644208	WITHOUT_CLASSIFICATION	2.8858835579293403E-5	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999886347024913	WITHOUT_CLASSIFICATION	1.1365297508659647E-5	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999780358705773	WITHOUT_CLASSIFICATION	2.1964129422769483E-5	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999739564348582	WITHOUT_CLASSIFICATION	2.6043565141743307E-5	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999897742173186	WITHOUT_CLASSIFICATION	1.0225782681350806E-5	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999965080188468	WITHOUT_CLASSIFICATION	3.4919811533158246E-6	DOCUMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.99999533567436	WITHOUT_CLASSIFICATION	4.664325639974911E-6	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.999974855820817	WITHOUT_CLASSIFICATION	2.5144179182987853E-5	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999854857383199	WITHOUT_CLASSIFICATION	1.451426168020423E-5	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999904158729708	WITHOUT_CLASSIFICATION	9.584127029194611E-6	DOCUMENTATION
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999553685790877	WITHOUT_CLASSIFICATION	4.463142091224851E-5	DOCUMENTATION
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999762281523763	WITHOUT_CLASSIFICATION	2.3771847623728066E-5	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999893994613905	WITHOUT_CLASSIFICATION	1.0600538609474528E-5	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999892404130513	WITHOUT_CLASSIFICATION	1.0759586948853119E-5	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9999393813820113	WITHOUT_CLASSIFICATION	6.0618617988605555E-5	DOCUMENTATION
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.999999320302222	WITHOUT_CLASSIFICATION	6.796977780557868E-7	DOCUMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9991720424551166	WITHOUT_CLASSIFICATION	8.279575448832981E-4	DOCUMENTATION
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9999705583968044	WITHOUT_CLASSIFICATION	2.9441603195652218E-5	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999793072683999	WITHOUT_CLASSIFICATION	2.069273160015089E-5	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999991290188353	WITHOUT_CLASSIFICATION	8.709811648142527E-7	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999952540134511	WITHOUT_CLASSIFICATION	4.7459865488812114E-6	DOCUMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.9999605838145921	WITHOUT_CLASSIFICATION	3.941618540794762E-5	DOCUMENTATION
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.999958372298451	WITHOUT_CLASSIFICATION	4.162770154895052E-5	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.999985160179504	WITHOUT_CLASSIFICATION	1.4839820496021995E-5	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9998180762963533	WITHOUT_CLASSIFICATION	1.819237036467092E-4	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999906118787353	WITHOUT_CLASSIFICATION	9.38812126472615E-6	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999739564348582	WITHOUT_CLASSIFICATION	2.6043565141743307E-5	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9999466446434537	WITHOUT_CLASSIFICATION	5.3355356546264016E-5	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999867498428814	WITHOUT_CLASSIFICATION	1.3250157118523067E-5	DOCUMENTATION
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999743583917083	WITHOUT_CLASSIFICATION	2.564160829163531E-5	DOCUMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999743583917083	WITHOUT_CLASSIFICATION	2.564160829163531E-5	DOCUMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999501213657324	WITHOUT_CLASSIFICATION	4.9878634267596424E-5	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9999981095623706	WITHOUT_CLASSIFICATION	1.8904376293934262E-6	DOCUMENTATION
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999906559442774	WITHOUT_CLASSIFICATION	9.344055722613478E-6	DOCUMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9999947476462041	WITHOUT_CLASSIFICATION	5.2523537959247754E-6	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9999958850663778	WITHOUT_CLASSIFICATION	4.114933622249207E-6	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999962212726295	WITHOUT_CLASSIFICATION	3.778727370490406E-6	DOCUMENTATION
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9998637709223638	WITHOUT_CLASSIFICATION	1.3622907763617378E-4	DOCUMENTATION
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999910025277097	WITHOUT_CLASSIFICATION	8.99747229037687E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999717278711148	WITHOUT_CLASSIFICATION	2.8272128885177527E-5	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999717278711148	WITHOUT_CLASSIFICATION	2.8272128885177527E-5	DOCUMENTATION
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999977180203905	WITHOUT_CLASSIFICATION	2.281979609569146E-6	DOCUMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9998817870191228	WITHOUT_CLASSIFICATION	1.18212980877197E-4	DOCUMENTATION
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999939681434775	WITHOUT_CLASSIFICATION	6.031856522458579E-6	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999935174833806	WITHOUT_CLASSIFICATION	6.482516619423016E-6	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999795070305209	WITHOUT_CLASSIFICATION	2.0492969479117302E-5	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999613448468059	WITHOUT_CLASSIFICATION	3.8655153194224784E-5	DOCUMENTATION
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.999991545551809	WITHOUT_CLASSIFICATION	8.454448191005409E-6	DOCUMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999976596854289	WITHOUT_CLASSIFICATION	2.3403145711327964E-6	DOCUMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999629697474613	WITHOUT_CLASSIFICATION	3.7030252538670114E-5	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999591447459436	WITHOUT_CLASSIFICATION	4.085525405631616E-5	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.9999455447034912	WITHOUT_CLASSIFICATION	5.4455296508936354E-5	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999455447034912	WITHOUT_CLASSIFICATION	5.4455296508936354E-5	DOCUMENTATION
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999996960977797	WITHOUT_CLASSIFICATION	3.039022202450174E-7	DOCUMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9998893903183322	WITHOUT_CLASSIFICATION	1.1060968166765492E-4	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.999970265439843	WITHOUT_CLASSIFICATION	2.9734560156936925E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9997402933897188	WITHOUT_CLASSIFICATION	2.597066102811026E-4	DOCUMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999945155945764	WITHOUT_CLASSIFICATION	5.484405423485061E-6	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999258036709363	WITHOUT_CLASSIFICATION	7.419632906367695E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999286589105876	WITHOUT_CLASSIFICATION	7.134108941247022E-5	DOCUMENTATION
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999835006587391	WITHOUT_CLASSIFICATION	1.6499341260886522E-5	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999971684059388	WITHOUT_CLASSIFICATION	2.831594061175207E-6	DOCUMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999740892503464	WITHOUT_CLASSIFICATION	2.591074965362007E-5	DOCUMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999525788623453	WITHOUT_CLASSIFICATION	4.742113765471115E-5	DOCUMENTATION
/*implied*/	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9999786197659095	WITHOUT_CLASSIFICATION	2.1380234090493675E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999286589105876	WITHOUT_CLASSIFICATION	7.134108941247022E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999286589105876	WITHOUT_CLASSIFICATION	7.134108941247022E-5	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999853092410416	WITHOUT_CLASSIFICATION	1.4690758958471827E-5	DOCUMENTATION
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999933826063035	WITHOUT_CLASSIFICATION	6.617393696449043E-6	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9989486431874932	WITHOUT_CLASSIFICATION	0.0010513568125068021	DOCUMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999900861200148	WITHOUT_CLASSIFICATION	9.913879985181083E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9992541465706049	WITHOUT_CLASSIFICATION	7.458534293950279E-4	DOCUMENTATION
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.998793345172876	WITHOUT_CLASSIFICATION	0.0012066548271240487	DOCUMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.9999987985406098	WITHOUT_CLASSIFICATION	1.201459390198589E-6	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.999999127659588	WITHOUT_CLASSIFICATION	8.723404120596801E-7	DOCUMENTATION
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9990658840866499	WITHOUT_CLASSIFICATION	9.341159133501919E-4	DOCUMENTATION
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.99999173790114	WITHOUT_CLASSIFICATION	8.26209885996152E-6	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9992777911160647	WITHOUT_CLASSIFICATION	7.222088839352973E-4	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9999252486274605	WITHOUT_CLASSIFICATION	7.475137253957578E-5	DOCUMENTATION
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9998663269360176	WITHOUT_CLASSIFICATION	1.3367306398243847E-4	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999611648335381	WITHOUT_CLASSIFICATION	3.8835166461791566E-5	DOCUMENTATION
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999686296723592	WITHOUT_CLASSIFICATION	3.1370327640862445E-5	DOCUMENTATION
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999640293892255	WITHOUT_CLASSIFICATION	3.597061077456361E-5	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9987328183050206	WITHOUT_CLASSIFICATION	0.001267181694979328	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9997277396190055	WITHOUT_CLASSIFICATION	2.7226038099449954E-4	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999402444584875	WITHOUT_CLASSIFICATION	5.975554151251628E-5	DOCUMENTATION
//TODO:	WITHOUT_CLASSIFICATION	0.9954530861685874	WITHOUT_CLASSIFICATION	0.004546913831412606	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999810415137995	WITHOUT_CLASSIFICATION	1.8958486200484936E-5	DOCUMENTATION
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999916952800859	WITHOUT_CLASSIFICATION	8.304719914212586E-6	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999812421359954	WITHOUT_CLASSIFICATION	1.8757864004560253E-5	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999423737886565	WITHOUT_CLASSIFICATION	5.762621134343519E-5	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999690065572088	WITHOUT_CLASSIFICATION	3.0993442791162785E-5	DOCUMENTATION
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999857486003588	WITHOUT_CLASSIFICATION	1.4251399641132707E-5	DOCUMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999770382963316	WITHOUT_CLASSIFICATION	2.296170366841059E-5	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999924125382638	WITHOUT_CLASSIFICATION	7.587461736236079E-6	DOCUMENTATION
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999983845197871	WITHOUT_CLASSIFICATION	1.6154802129366215E-6	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.9998612278729669	WITHOUT_CLASSIFICATION	1.387721270330821E-4	DOCUMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.999944407233103	WITHOUT_CLASSIFICATION	5.559276689701737E-5	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999659232675535	WITHOUT_CLASSIFICATION	3.4076732446514813E-5	DOCUMENTATION
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9999282992583747	WITHOUT_CLASSIFICATION	7.170074162535512E-5	DOCUMENTATION
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9999868874481658	WITHOUT_CLASSIFICATION	1.311255183434626E-5	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999830247534434	WITHOUT_CLASSIFICATION	1.6975246556633E-5	DOCUMENTATION
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999616066039382	WITHOUT_CLASSIFICATION	3.839339606184741E-5	DOCUMENTATION
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999901566963905	WITHOUT_CLASSIFICATION	9.84330360964216E-6	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9999820723735391	WITHOUT_CLASSIFICATION	1.7927626460876975E-5	DOCUMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9982738017616042	WITHOUT_CLASSIFICATION	0.0017261982383958558	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999796440884975	WITHOUT_CLASSIFICATION	2.035591150252171E-5	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999917626264625	WITHOUT_CLASSIFICATION	8.237373537489581E-6	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.999858698965778	WITHOUT_CLASSIFICATION	1.4130103422206958E-4	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999489357266212	WITHOUT_CLASSIFICATION	5.10642733787714E-5	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.999858698965778	WITHOUT_CLASSIFICATION	1.4130103422206958E-4	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999979200773308	WITHOUT_CLASSIFICATION	2.079922669229666E-6	DOCUMENTATION
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.999992075623825	WITHOUT_CLASSIFICATION	7.924376175101296E-6	DOCUMENTATION
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.999920997656891	WITHOUT_CLASSIFICATION	7.900234310905518E-5	DOCUMENTATION
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999948184333125	WITHOUT_CLASSIFICATION	5.181566687502781E-6	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999714638300822	WITHOUT_CLASSIFICATION	2.8536169917776656E-5	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.999920997656891	WITHOUT_CLASSIFICATION	7.900234310905518E-5	DOCUMENTATION
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999933155927065	WITHOUT_CLASSIFICATION	6.684407293385627E-6	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999820725586107	WITHOUT_CLASSIFICATION	1.792744138927053E-5	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999788763829938	WITHOUT_CLASSIFICATION	2.1123617006215116E-5	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999749093298015	WITHOUT_CLASSIFICATION	2.5090670198485408E-5	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999881247757588	WITHOUT_CLASSIFICATION	1.1875224241103017E-5	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999872988325984	WITHOUT_CLASSIFICATION	1.2701167401536663E-5	DOCUMENTATION
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999939355502901	WITHOUT_CLASSIFICATION	6.064449709854589E-6	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9999989492292395	WITHOUT_CLASSIFICATION	1.0507707605819502E-6	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9999843215842329	WITHOUT_CLASSIFICATION	1.567841576706618E-5	DOCUMENTATION
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999946153211962	WITHOUT_CLASSIFICATION	5.384678803921708E-6	DOCUMENTATION
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999815106613251	WITHOUT_CLASSIFICATION	1.8489338674800514E-5	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.999991032048825	WITHOUT_CLASSIFICATION	8.967951174989108E-6	DOCUMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999998108631095	WITHOUT_CLASSIFICATION	1.8913689056755051E-7	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9998609882335345	WITHOUT_CLASSIFICATION	1.3901176646543336E-4	DOCUMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999902553588614	WITHOUT_CLASSIFICATION	9.744641138540242E-6	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9987595800783866	WITHOUT_CLASSIFICATION	0.0012404199216133902	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999893637081133	WITHOUT_CLASSIFICATION	1.063629188662301E-5	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999968474554458	WITHOUT_CLASSIFICATION	3.1525445541169447E-6	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999296335209943	WITHOUT_CLASSIFICATION	7.036647900567278E-5	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999593110090306	WITHOUT_CLASSIFICATION	4.068899096943066E-5	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9990678705795072	WITHOUT_CLASSIFICATION	9.321294204928626E-4	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9988638843809724	WITHOUT_CLASSIFICATION	0.0011361156190276614	DOCUMENTATION
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.999429658191477	WITHOUT_CLASSIFICATION	5.703418085229213E-4	DOCUMENTATION
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.999698899947156	WITHOUT_CLASSIFICATION	3.0110005284397144E-4	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9992738934338081	WITHOUT_CLASSIFICATION	7.261065661917797E-4	DOCUMENTATION
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999983610818401	WITHOUT_CLASSIFICATION	1.6389181598272014E-6	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9999529472141551	WITHOUT_CLASSIFICATION	4.7052785844892377E-5	DOCUMENTATION
//if its "id"	WITHOUT_CLASSIFICATION	0.9992705629290711	WITHOUT_CLASSIFICATION	7.294370709288831E-4	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9997552898488078	WITHOUT_CLASSIFICATION	2.447101511921909E-4	DOCUMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.999429658191477	WITHOUT_CLASSIFICATION	5.703418085229213E-4	DOCUMENTATION
//important!!	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.999429658191477	WITHOUT_CLASSIFICATION	5.703418085229213E-4	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999527848450109	WITHOUT_CLASSIFICATION	4.721515498915267E-5	DOCUMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9998796774795624	WITHOUT_CLASSIFICATION	1.2032252043762995E-4	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999593110090306	WITHOUT_CLASSIFICATION	4.068899096943066E-5	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// collections of values	WITHOUT_CLASSIFICATION	0.9999617063387601	WITHOUT_CLASSIFICATION	3.829366123984165E-5	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9990406768407315	WITHOUT_CLASSIFICATION	9.593231592685917E-4	DOCUMENTATION
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9994243214232963	WITHOUT_CLASSIFICATION	5.756785767037782E-4	DOCUMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9989978944803839	WITHOUT_CLASSIFICATION	0.001002105519616124	DOCUMENTATION
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999937254107946	WITHOUT_CLASSIFICATION	6.274589205489323E-6	DOCUMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.99992223668104	WITHOUT_CLASSIFICATION	7.776331896003549E-5	DOCUMENTATION
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999687693614757	WITHOUT_CLASSIFICATION	3.1230638524222826E-5	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999294887306831	WITHOUT_CLASSIFICATION	7.051126931687829E-5	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999651928230305	WITHOUT_CLASSIFICATION	3.4807176969495875E-5	DOCUMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9990832723713075	WITHOUT_CLASSIFICATION	9.167276286925697E-4	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999719247182668	WITHOUT_CLASSIFICATION	2.8075281733222026E-5	DOCUMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9987328183050206	WITHOUT_CLASSIFICATION	0.001267181694979328	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.998530207611277	WITHOUT_CLASSIFICATION	0.0014697923887230444	DOCUMENTATION
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999795452625838	WITHOUT_CLASSIFICATION	2.0454737416122503E-5	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9990687163359594	WITHOUT_CLASSIFICATION	9.312836640405662E-4	DOCUMENTATION
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9998788084747717	WITHOUT_CLASSIFICATION	1.2119152522825549E-4	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999992170000062	WITHOUT_CLASSIFICATION	7.829999938069161E-7	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9987328183050206	WITHOUT_CLASSIFICATION	0.001267181694979328	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999673141224334	WITHOUT_CLASSIFICATION	3.268587756643741E-5	DOCUMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999061050475965	WITHOUT_CLASSIFICATION	9.389495240356005E-5	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999976896149099	WITHOUT_CLASSIFICATION	2.310385090137146E-6	DOCUMENTATION
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9999899789794149	WITHOUT_CLASSIFICATION	1.0021020585110786E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999555529351782	WITHOUT_CLASSIFICATION	4.444706482162647E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999555529351782	WITHOUT_CLASSIFICATION	4.444706482162647E-5	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999783936824688	WITHOUT_CLASSIFICATION	2.160631753121017E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999555529351782	WITHOUT_CLASSIFICATION	4.444706482162647E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999555529351782	WITHOUT_CLASSIFICATION	4.444706482162647E-5	DOCUMENTATION
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9992586646904665	WITHOUT_CLASSIFICATION	7.413353095334393E-4	DOCUMENTATION
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9997593218897983	WITHOUT_CLASSIFICATION	2.4067811020162086E-4	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999825089093007	WITHOUT_CLASSIFICATION	1.7491090699240675E-5	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9999992028042657	WITHOUT_CLASSIFICATION	7.971957344571741E-7	DOCUMENTATION
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.999814504420124	WITHOUT_CLASSIFICATION	1.8549557987591035E-4	DOCUMENTATION
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999751070116512	WITHOUT_CLASSIFICATION	2.4892988348815135E-5	DOCUMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9997854085876265	WITHOUT_CLASSIFICATION	2.1459141237355575E-4	DOCUMENTATION
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9992672309911033	WITHOUT_CLASSIFICATION	7.327690088967206E-4	DOCUMENTATION
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9998927069169952	WITHOUT_CLASSIFICATION	1.0729308300488558E-4	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.99907912806822	WITHOUT_CLASSIFICATION	9.20871931780004E-4	DOCUMENTATION
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9998868346716069	WITHOUT_CLASSIFICATION	1.131653283930984E-4	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.9994461052060233	WITHOUT_CLASSIFICATION	5.538947939766663E-4	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9949206546982499	WITHOUT_CLASSIFICATION	0.005079345301750198	DOCUMENTATION
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9997104309514722	WITHOUT_CLASSIFICATION	2.895690485278734E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999232722592974	WITHOUT_CLASSIFICATION	7.672774070254426E-5	DOCUMENTATION
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.999893217939324	WITHOUT_CLASSIFICATION	1.0678206067611117E-4	DOCUMENTATION
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9950437803246288	WITHOUT_CLASSIFICATION	0.0049562196753711145	DOCUMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9994634106274957	WITHOUT_CLASSIFICATION	5.365893725042605E-4	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999904053791194	WITHOUT_CLASSIFICATION	9.594620880597666E-6	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.9998107911575305	WITHOUT_CLASSIFICATION	1.8920884246960225E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999232722592974	WITHOUT_CLASSIFICATION	7.672774070254426E-5	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9990678705795072	WITHOUT_CLASSIFICATION	9.321294204928626E-4	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9987845571624653	WITHOUT_CLASSIFICATION	0.0012154428375347579	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999976528402513	WITHOUT_CLASSIFICATION	2.3471597486922818E-5	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999706981773826	WITHOUT_CLASSIFICATION	2.9301822617391695E-5	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9989432802619126	WITHOUT_CLASSIFICATION	0.0010567197380874375	DOCUMENTATION
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999957155073239	WITHOUT_CLASSIFICATION	4.284492676029041E-6	DOCUMENTATION
// careful with this!	WITHOUT_CLASSIFICATION	0.9999657364051012	WITHOUT_CLASSIFICATION	3.426359489875616E-5	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999871632249239	WITHOUT_CLASSIFICATION	1.2836775076091205E-5	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999813904418854	WITHOUT_CLASSIFICATION	1.860955811461065E-5	DOCUMENTATION
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9972423689614348	WITHOUT_CLASSIFICATION	0.0027576310385651797	DOCUMENTATION
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9988771984439343	WITHOUT_CLASSIFICATION	0.0011228015560656077	DOCUMENTATION
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999671634889266	WITHOUT_CLASSIFICATION	3.283651107352628E-5	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999934124135555	WITHOUT_CLASSIFICATION	6.587586444527439E-6	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.999976371466658	WITHOUT_CLASSIFICATION	2.3628533341994265E-5	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9999932447038855	WITHOUT_CLASSIFICATION	6.755296114538253E-6	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.9999632609405114	WITHOUT_CLASSIFICATION	3.673905948871424E-5	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.99999190938717	WITHOUT_CLASSIFICATION	8.090612830058285E-6	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999966771334479	WITHOUT_CLASSIFICATION	3.322866552039086E-6	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999966864051789	WITHOUT_CLASSIFICATION	3.3135948211182954E-6	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999939854387313	WITHOUT_CLASSIFICATION	6.014561268725162E-6	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9995879800482996	WITHOUT_CLASSIFICATION	4.1201995170042676E-4	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9990712887875712	WITHOUT_CLASSIFICATION	9.287112124287704E-4	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999980261547505	WITHOUT_CLASSIFICATION	1.9738452493773953E-6	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999813904418854	WITHOUT_CLASSIFICATION	1.860955811461065E-5	DOCUMENTATION
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9988564435621434	WITHOUT_CLASSIFICATION	0.0011435564378565659	DOCUMENTATION
//do replacements	WITHOUT_CLASSIFICATION	0.9988733129144804	WITHOUT_CLASSIFICATION	0.0011266870855194623	DOCUMENTATION
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9986528419424326	WITHOUT_CLASSIFICATION	0.0013471580575674259	DOCUMENTATION
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.999937692358778	WITHOUT_CLASSIFICATION	6.230764122199283E-5	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.9988521671444486	WITHOUT_CLASSIFICATION	0.0011478328555514978	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.9994827759952994	WITHOUT_CLASSIFICATION	5.172240047005894E-4	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999350998598701	WITHOUT_CLASSIFICATION	6.490014012994285E-5	DOCUMENTATION
//sql = update;	WITHOUT_CLASSIFICATION	0.9994827759952994	WITHOUT_CLASSIFICATION	5.172240047005894E-4	DOCUMENTATION
//hilo config	WITHOUT_CLASSIFICATION	0.9988697929040716	WITHOUT_CLASSIFICATION	0.0011302070959283749	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9998712319673672	WITHOUT_CLASSIFICATION	1.2876803263279463E-4	DOCUMENTATION
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999936602492913	WITHOUT_CLASSIFICATION	6.339750708656383E-6	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.999952733964998	WITHOUT_CLASSIFICATION	4.726603500204286E-5	DOCUMENTATION
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9984749020364779	WITHOUT_CLASSIFICATION	0.0015250979635219805	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998604243611299	WITHOUT_CLASSIFICATION	1.3957563887008397E-4	DOCUMENTATION
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9998717696300493	WITHOUT_CLASSIFICATION	1.2823036995076025E-4	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9996558939138858	WITHOUT_CLASSIFICATION	3.4410608611424144E-4	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9998712319673672	WITHOUT_CLASSIFICATION	1.2876803263279463E-4	DOCUMENTATION
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.999969578125858	WITHOUT_CLASSIFICATION	3.042187414203451E-5	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9999976459584567	WITHOUT_CLASSIFICATION	2.3540415431565447E-6	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999557410950206	WITHOUT_CLASSIFICATION	4.425890497932116E-5	DOCUMENTATION
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999863156769305	WITHOUT_CLASSIFICATION	1.368432306952456E-5	DOCUMENTATION
// the default...	WITHOUT_CLASSIFICATION	0.9999766485441307	WITHOUT_CLASSIFICATION	2.3351455869273866E-5	DOCUMENTATION
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999996913784798	WITHOUT_CLASSIFICATION	3.0862152015812493E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998604243611299	WITHOUT_CLASSIFICATION	1.3957563887008397E-4	DOCUMENTATION
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999882669336315	WITHOUT_CLASSIFICATION	1.17330663685358E-5	DOCUMENTATION
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9997951121940298	WITHOUT_CLASSIFICATION	2.0488780597011877E-4	DOCUMENTATION
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999295880667294	WITHOUT_CLASSIFICATION	7.041193327062722E-5	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999421381207863	WITHOUT_CLASSIFICATION	5.786187921373852E-5	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999421381207863	WITHOUT_CLASSIFICATION	5.786187921373852E-5	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999421381207863	WITHOUT_CLASSIFICATION	5.786187921373852E-5	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999913656314919	WITHOUT_CLASSIFICATION	8.634368508122845E-6	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999913656314919	WITHOUT_CLASSIFICATION	8.634368508122845E-6	DOCUMENTATION
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9998812410946405	WITHOUT_CLASSIFICATION	1.1875890535951489E-4	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999756244117525	WITHOUT_CLASSIFICATION	2.437558824749061E-5	DOCUMENTATION
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999351603811308	WITHOUT_CLASSIFICATION	6.483961886915318E-5	DOCUMENTATION
// scroll backward	WITHOUT_CLASSIFICATION	0.9999353250670124	WITHOUT_CLASSIFICATION	6.467493298766983E-5	DOCUMENTATION
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.9999528389320094	WITHOUT_CLASSIFICATION	4.716106799050666E-5	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999283907687267	WITHOUT_CLASSIFICATION	7.160923127316781E-5	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999337343465919	WITHOUT_CLASSIFICATION	6.626565340801876E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999994930599169	WITHOUT_CLASSIFICATION	5.069400831190798E-7	DOCUMENTATION
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999375929746187	WITHOUT_CLASSIFICATION	6.240702538132408E-5	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999283907687267	WITHOUT_CLASSIFICATION	7.160923127316781E-5	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999337343465919	WITHOUT_CLASSIFICATION	6.626565340801876E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.999975886661631	WITHOUT_CLASSIFICATION	2.4113338369071106E-5	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9998437626819948	WITHOUT_CLASSIFICATION	1.5623731800512542E-4	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999555656295621	WITHOUT_CLASSIFICATION	4.443437043791402E-5	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9999992618141633	WITHOUT_CLASSIFICATION	7.381858366684149E-7	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9992143922930021	WITHOUT_CLASSIFICATION	7.856077069977799E-4	DOCUMENTATION
//checking for named queries	WITHOUT_CLASSIFICATION	0.999310918013768	WITHOUT_CLASSIFICATION	6.890819862319062E-4	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999462053541331	WITHOUT_CLASSIFICATION	5.379464586672492E-5	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999527909432429	WITHOUT_CLASSIFICATION	4.720905675714793E-5	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999836538334012	WITHOUT_CLASSIFICATION	1.6346166598931813E-5	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9995732826346367	WITHOUT_CLASSIFICATION	4.267173653632572E-4	DOCUMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.999976644885421	WITHOUT_CLASSIFICATION	2.3355114578919766E-5	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999887993173365	WITHOUT_CLASSIFICATION	1.120068266346132E-5	DOCUMENTATION
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9998242734963014	WITHOUT_CLASSIFICATION	1.757265036985113E-4	DOCUMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9992969670323718	WITHOUT_CLASSIFICATION	7.030329676280881E-4	DOCUMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999568603385506	WITHOUT_CLASSIFICATION	4.3139661449446595E-5	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999572214249153	WITHOUT_CLASSIFICATION	4.277857508463244E-5	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9998003573133473	WITHOUT_CLASSIFICATION	1.9964268665265066E-4	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999927785521109	WITHOUT_CLASSIFICATION	7.221447889161418E-6	DOCUMENTATION
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9869675089722098	WITHOUT_CLASSIFICATION	0.013032491027790121	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999945993686684	WITHOUT_CLASSIFICATION	5.400631331634341E-6	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999973357892028	WITHOUT_CLASSIFICATION	2.6642107971363735E-6	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9983736815126287	WITHOUT_CLASSIFICATION	0.0016263184873713094	DOCUMENTATION
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9995489343549163	WITHOUT_CLASSIFICATION	4.510656450836211E-4	DOCUMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999286606115297	WITHOUT_CLASSIFICATION	7.133938847021902E-5	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999928727807167	WITHOUT_CLASSIFICATION	7.12721928329564E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9987994269402573	WITHOUT_CLASSIFICATION	0.0012005730597428018	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9987994269402573	WITHOUT_CLASSIFICATION	0.0012005730597428018	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999963831927491	WITHOUT_CLASSIFICATION	3.6168072509120877E-6	DOCUMENTATION
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999996583611713	WITHOUT_CLASSIFICATION	3.4163882877022836E-7	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999672259990042	WITHOUT_CLASSIFICATION	3.277400099577604E-5	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9987328183050206	WITHOUT_CLASSIFICATION	0.001267181694979328	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999087911246483	WITHOUT_CLASSIFICATION	9.120887535174074E-5	DOCUMENTATION
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9992802466095655	WITHOUT_CLASSIFICATION	7.197533904345578E-4	DOCUMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9937552264096317	WITHOUT_CLASSIFICATION	0.006244773590368409	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999848566522902	WITHOUT_CLASSIFICATION	1.5143347709831197E-5	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999665817183493	WITHOUT_CLASSIFICATION	3.3418281650794034E-5	DOCUMENTATION
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999928890167752	WITHOUT_CLASSIFICATION	7.110983224799162E-5	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999928890167752	WITHOUT_CLASSIFICATION	7.110983224799162E-5	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999928890167752	WITHOUT_CLASSIFICATION	7.110983224799162E-5	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999928890167752	WITHOUT_CLASSIFICATION	7.110983224799162E-5	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999928890167752	WITHOUT_CLASSIFICATION	7.110983224799162E-5	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999928890167752	WITHOUT_CLASSIFICATION	7.110983224799162E-5	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999928890167752	WITHOUT_CLASSIFICATION	7.110983224799162E-5	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999928890167752	WITHOUT_CLASSIFICATION	7.110983224799162E-5	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999928890167752	WITHOUT_CLASSIFICATION	7.110983224799162E-5	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999928890167752	WITHOUT_CLASSIFICATION	7.110983224799162E-5	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999928890167752	WITHOUT_CLASSIFICATION	7.110983224799162E-5	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999925263007033	WITHOUT_CLASSIFICATION	7.4736992966617725E-6	DOCUMENTATION
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9998298681556298	WITHOUT_CLASSIFICATION	1.7013184437029367E-4	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9997665019241144	WITHOUT_CLASSIFICATION	2.334980758855547E-4	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999178412995515	WITHOUT_CLASSIFICATION	8.215870044848733E-5	DOCUMENTATION
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999696808409761	WITHOUT_CLASSIFICATION	3.0319159023901187E-5	DOCUMENTATION
// not for internal use:	WITHOUT_CLASSIFICATION	0.9999711631888741	WITHOUT_CLASSIFICATION	2.883681112584226E-5	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9997849139097468	WITHOUT_CLASSIFICATION	2.1508609025328206E-4	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9999875971283129	WITHOUT_CLASSIFICATION	1.2402871687261876E-5	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9997665019241144	WITHOUT_CLASSIFICATION	2.334980758855547E-4	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9997665019241144	WITHOUT_CLASSIFICATION	2.334980758855547E-4	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9997376835182794	WITHOUT_CLASSIFICATION	2.6231648172069275E-4	DOCUMENTATION
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.999993459823673	WITHOUT_CLASSIFICATION	6.5401763268991504E-6	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999976051014169	WITHOUT_CLASSIFICATION	2.394898583104226E-6	DOCUMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.999991904369287	WITHOUT_CLASSIFICATION	8.095630713125625E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9996693467326176	WITHOUT_CLASSIFICATION	3.306532673822506E-4	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999572214249153	WITHOUT_CLASSIFICATION	4.277857508463244E-5	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9987928464649549	WITHOUT_CLASSIFICATION	0.0012071535350450663	DOCUMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999806804408471	WITHOUT_CLASSIFICATION	1.93195591528868E-5	DOCUMENTATION
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999469690171466	WITHOUT_CLASSIFICATION	5.303098285333057E-5	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999425508220126	WITHOUT_CLASSIFICATION	5.744917798734364E-5	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999983518023566	WITHOUT_CLASSIFICATION	1.6481976433964305E-6	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999931428802988	WITHOUT_CLASSIFICATION	6.857119701193692E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999611071645098	WITHOUT_CLASSIFICATION	3.889283549018476E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999611071645098	WITHOUT_CLASSIFICATION	3.889283549018476E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999611071645098	WITHOUT_CLASSIFICATION	3.889283549018476E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999611071645098	WITHOUT_CLASSIFICATION	3.889283549018476E-5	DOCUMENTATION
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999310502136984	WITHOUT_CLASSIFICATION	6.894978630155876E-5	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9990826207028158	WITHOUT_CLASSIFICATION	9.173792971841854E-4	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9999487068441507	WITHOUT_CLASSIFICATION	5.129315584914969E-5	DOCUMENTATION
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9999671615181857	WITHOUT_CLASSIFICATION	3.283848181425384E-5	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999283238049821	WITHOUT_CLASSIFICATION	7.167619501791983E-5	DOCUMENTATION
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999325521626468	WITHOUT_CLASSIFICATION	6.744783735324255E-5	DOCUMENTATION
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9998976152254269	WITHOUT_CLASSIFICATION	1.0238477457313006E-4	DOCUMENTATION
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999786278756351	WITHOUT_CLASSIFICATION	2.1372124364929743E-5	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9992525648647366	WITHOUT_CLASSIFICATION	7.474351352634097E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999328032148513	WITHOUT_CLASSIFICATION	6.719678514869412E-5	DOCUMENTATION
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9998582452723133	WITHOUT_CLASSIFICATION	1.4175472768668224E-4	DOCUMENTATION
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999468986977728	WITHOUT_CLASSIFICATION	5.3101302227218063E-5	DOCUMENTATION
//no big deal	WITHOUT_CLASSIFICATION	0.9989641699515165	WITHOUT_CLASSIFICATION	0.001035830048483519	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.999908664141511	WITHOUT_CLASSIFICATION	9.13358584890539E-5	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.999908664141511	WITHOUT_CLASSIFICATION	9.13358584890539E-5	DOCUMENTATION
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999551149498082	WITHOUT_CLASSIFICATION	4.4885050191833337E-5	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9999387029007396	WITHOUT_CLASSIFICATION	6.129709926033603E-5	DOCUMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9995767747141607	WITHOUT_CLASSIFICATION	4.232252858392626E-4	DOCUMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.9999395077704967	WITHOUT_CLASSIFICATION	6.04922295034771E-5	DOCUMENTATION
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999421381207863	WITHOUT_CLASSIFICATION	5.786187921373852E-5	DOCUMENTATION
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9999725100386689	WITHOUT_CLASSIFICATION	2.7489961331129597E-5	DOCUMENTATION
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999285784915346	WITHOUT_CLASSIFICATION	7.14215084653983E-5	DOCUMENTATION
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9999798642643174	WITHOUT_CLASSIFICATION	2.0135735682558343E-5	DOCUMENTATION
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999207674540617	WITHOUT_CLASSIFICATION	7.923254593832976E-5	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9998532313782135	WITHOUT_CLASSIFICATION	1.467686217866016E-4	DOCUMENTATION
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999471444227035	WITHOUT_CLASSIFICATION	5.285557729650583E-5	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9999663531847491	WITHOUT_CLASSIFICATION	3.3646815250812255E-5	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.999940806956072	WITHOUT_CLASSIFICATION	5.919304392792188E-5	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999630409059097	WITHOUT_CLASSIFICATION	3.69590940903495E-5	DOCUMENTATION
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.999963980963761	WITHOUT_CLASSIFICATION	3.6019036239076574E-5	DOCUMENTATION
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.999984562493402	WITHOUT_CLASSIFICATION	1.5437506597979944E-5	DOCUMENTATION
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999909553914653	WITHOUT_CLASSIFICATION	9.04460853472046E-6	DOCUMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9998564098944346	WITHOUT_CLASSIFICATION	1.43590105565423E-4	DOCUMENTATION
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9998935897633479	WITHOUT_CLASSIFICATION	1.0641023665215351E-4	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999724943231971	WITHOUT_CLASSIFICATION	2.7505676802974773E-5	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999848621262893	WITHOUT_CLASSIFICATION	1.513787371058568E-5	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9999750276846554	WITHOUT_CLASSIFICATION	2.4972315344638644E-5	DOCUMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999524613093909	WITHOUT_CLASSIFICATION	4.753869060916967E-5	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9991014514456913	WITHOUT_CLASSIFICATION	8.985485543086789E-4	DOCUMENTATION
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.999984561888289	WITHOUT_CLASSIFICATION	1.543811171103947E-5	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9996778497291754	WITHOUT_CLASSIFICATION	3.2215027082457907E-4	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999937445502698	WITHOUT_CLASSIFICATION	6.255449730149046E-6	DOCUMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9997417701745486	WITHOUT_CLASSIFICATION	2.5822982545140846E-4	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9982901457540828	WITHOUT_CLASSIFICATION	0.0017098542459171597	DOCUMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.999951070349965	WITHOUT_CLASSIFICATION	4.8929650034901806E-5	DOCUMENTATION
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9956837987200075	WITHOUT_CLASSIFICATION	0.004316201279992588	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.999999702863238	WITHOUT_CLASSIFICATION	2.9713676196172113E-7	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.9999496532013048	WITHOUT_CLASSIFICATION	5.034679869526286E-5	DOCUMENTATION
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9995402136276447	WITHOUT_CLASSIFICATION	4.5978637235534903E-4	DOCUMENTATION
//handle empty collections	WITHOUT_CLASSIFICATION	0.999218182986455	WITHOUT_CLASSIFICATION	7.818170135450634E-4	DOCUMENTATION
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999993824210354	WITHOUT_CLASSIFICATION	6.175789647327484E-7	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9999439911957811	WITHOUT_CLASSIFICATION	5.6008804218861864E-5	DOCUMENTATION
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9999987064490736	WITHOUT_CLASSIFICATION	1.293550926401592E-6	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999938996443342	WITHOUT_CLASSIFICATION	6.1003556657295805E-6	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9994132130088998	WITHOUT_CLASSIFICATION	5.867869911001333E-4	DOCUMENTATION
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9989835618343568	WITHOUT_CLASSIFICATION	0.0010164381656432933	DOCUMENTATION
//use the id passed in	WITHOUT_CLASSIFICATION	0.9994799642708017	WITHOUT_CLASSIFICATION	5.200357291982919E-4	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9992274875128495	WITHOUT_CLASSIFICATION	7.725124871505089E-4	DOCUMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999409385377916	WITHOUT_CLASSIFICATION	5.906146220828411E-5	DOCUMENTATION
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9997671827250454	WITHOUT_CLASSIFICATION	2.3281727495451385E-4	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.999552293943997	WITHOUT_CLASSIFICATION	4.4770605600306246E-4	DOCUMENTATION
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9984590547311859	WITHOUT_CLASSIFICATION	0.001540945268814058	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9999770688772288	WITHOUT_CLASSIFICATION	2.29311227711036E-5	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.999374218293706	WITHOUT_CLASSIFICATION	6.257817062939043E-4	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9985001025641655	WITHOUT_CLASSIFICATION	0.001499897435834495	DOCUMENTATION
// look for a proxy	WITHOUT_CLASSIFICATION	0.9999904671238197	WITHOUT_CLASSIFICATION	9.532876180259905E-6	DOCUMENTATION
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9983213478349356	WITHOUT_CLASSIFICATION	0.0016786521650644203	DOCUMENTATION
//its the given optional object	WITHOUT_CLASSIFICATION	0.9992314868855654	WITHOUT_CLASSIFICATION	7.68513114434516E-4	DOCUMENTATION
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999937544144024	WITHOUT_CLASSIFICATION	6.24558559752144E-6	DOCUMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9993631401682965	WITHOUT_CLASSIFICATION	6.368598317035452E-4	DOCUMENTATION
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999898887290927	WITHOUT_CLASSIFICATION	1.0111270907286191E-5	DOCUMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999450296358809	WITHOUT_CLASSIFICATION	5.497036411901757E-5	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999997979007815	WITHOUT_CLASSIFICATION	2.020992183781451E-7	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9992794038430668	WITHOUT_CLASSIFICATION	7.205961569332287E-4	DOCUMENTATION
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.999982337599378	WITHOUT_CLASSIFICATION	1.7662400621968987E-5	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9999808836894004	WITHOUT_CLASSIFICATION	1.91163105995761E-5	DOCUMENTATION
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999991939295175	WITHOUT_CLASSIFICATION	8.060704824066596E-7	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9987328183050206	WITHOUT_CLASSIFICATION	0.001267181694979328	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9970891023894131	WITHOUT_CLASSIFICATION	0.002910897610587067	DOCUMENTATION
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9998932961995223	WITHOUT_CLASSIFICATION	1.0670380047769719E-4	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9999560730642223	WITHOUT_CLASSIFICATION	4.392693577781351E-5	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9935464185399129	WITHOUT_CLASSIFICATION	0.006453581460087095	DOCUMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999586485997373	WITHOUT_CLASSIFICATION	4.1351400262673596E-5	DOCUMENTATION
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.999954501838562	WITHOUT_CLASSIFICATION	4.54981614378963E-5	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.999986791909274	WITHOUT_CLASSIFICATION	1.3208090725997127E-5	DOCUMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999989313086803	WITHOUT_CLASSIFICATION	1.068691319601395E-6	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9993627158166644	WITHOUT_CLASSIFICATION	6.372841833355919E-4	DOCUMENTATION
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999991695063312	WITHOUT_CLASSIFICATION	8.304936688020016E-7	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9995211074842346	WITHOUT_CLASSIFICATION	4.7889251576546904E-4	DOCUMENTATION
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9998847134318332	WITHOUT_CLASSIFICATION	1.152865681669152E-4	DOCUMENTATION
//a composite key	WITHOUT_CLASSIFICATION	0.9987658850576054	WITHOUT_CLASSIFICATION	0.0012341149423946022	DOCUMENTATION
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999967665415666	WITHOUT_CLASSIFICATION	3.2334584334472435E-6	DOCUMENTATION
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.999959301440997	WITHOUT_CLASSIFICATION	4.0698559002984034E-5	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.9999471518861102	WITHOUT_CLASSIFICATION	5.284811388989027E-5	DOCUMENTATION
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9987595800783866	WITHOUT_CLASSIFICATION	0.0012404199216133902	DOCUMENTATION
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9999455867610633	WITHOUT_CLASSIFICATION	5.441323893667587E-5	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9999996266572339	WITHOUT_CLASSIFICATION	3.733427661292372E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9999609085924276	WITHOUT_CLASSIFICATION	3.909140757250437E-5	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9998398225942311	WITHOUT_CLASSIFICATION	1.6017740576896347E-4	DOCUMENTATION
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9998118548979302	WITHOUT_CLASSIFICATION	1.8814510206978423E-4	DOCUMENTATION
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9998197580855888	WITHOUT_CLASSIFICATION	1.8024191441116708E-4	DOCUMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9998211848747054	WITHOUT_CLASSIFICATION	1.788151252945313E-4	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9997057559617032	WITHOUT_CLASSIFICATION	2.9424403829679785E-4	DOCUMENTATION
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9990507909376997	WITHOUT_CLASSIFICATION	9.492090623002683E-4	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.999066458852572	WITHOUT_CLASSIFICATION	9.335411474279894E-4	DOCUMENTATION
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9998511669187116	WITHOUT_CLASSIFICATION	1.4883308128852213E-4	DOCUMENTATION
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999986250015	WITHOUT_CLASSIFICATION	1.3749984999112458E-6	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9999853468954736	WITHOUT_CLASSIFICATION	1.4653104526369707E-5	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999655440146057	WITHOUT_CLASSIFICATION	3.445598539427617E-5	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9999462361725959	WITHOUT_CLASSIFICATION	5.3763827404129315E-5	DOCUMENTATION
//the criteria instance	WITHOUT_CLASSIFICATION	0.9991936782606006	WITHOUT_CLASSIFICATION	8.06321739399482E-4	DOCUMENTATION
// the entity name	WITHOUT_CLASSIFICATION	0.9999795774305971	WITHOUT_CLASSIFICATION	2.04225694029565E-5	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9992341707199952	WITHOUT_CLASSIFICATION	7.658292800048477E-4	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9992341707199952	WITHOUT_CLASSIFICATION	7.658292800048477E-4	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9998649532361583	WITHOUT_CLASSIFICATION	1.3504676384166434E-4	DOCUMENTATION
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9991220060087544	WITHOUT_CLASSIFICATION	8.779939912455234E-4	DOCUMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999283021214501	WITHOUT_CLASSIFICATION	7.169787854981585E-5	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9998885652880789	WITHOUT_CLASSIFICATION	1.1143471192105138E-4	DOCUMENTATION
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999857685809929	WITHOUT_CLASSIFICATION	1.4231419007068154E-5	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999275815491788	WITHOUT_CLASSIFICATION	7.241845082113735E-5	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9998991968009892	WITHOUT_CLASSIFICATION	1.008031990108051E-4	DOCUMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9999882713559424	WITHOUT_CLASSIFICATION	1.172864405759053E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9998715228058537	WITHOUT_CLASSIFICATION	1.2847719414626148E-4	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999912819621831	WITHOUT_CLASSIFICATION	8.718037816965642E-6	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999955097662226	WITHOUT_CLASSIFICATION	4.490233777269732E-6	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9999590562798624	WITHOUT_CLASSIFICATION	4.094372013765111E-5	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999796599396251	WITHOUT_CLASSIFICATION	2.034006037484325E-5	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999793675423961	WITHOUT_CLASSIFICATION	2.063245760380734E-5	DOCUMENTATION
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999912782071633	WITHOUT_CLASSIFICATION	8.72179283670423E-6	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999114401532441	WITHOUT_CLASSIFICATION	8.855984675590238E-5	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999114401532441	WITHOUT_CLASSIFICATION	8.855984675590238E-5	DOCUMENTATION
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999943572289934	WITHOUT_CLASSIFICATION	5.642771006508995E-6	DOCUMENTATION
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999907713497262	WITHOUT_CLASSIFICATION	9.228650273788565E-6	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999812790790126	WITHOUT_CLASSIFICATION	1.8720920987489157E-5	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999828067735561	WITHOUT_CLASSIFICATION	1.7193226443866868E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999825369677332	WITHOUT_CLASSIFICATION	1.7463032266832627E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999565957774912	WITHOUT_CLASSIFICATION	4.3404222508901034E-5	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999565957774912	WITHOUT_CLASSIFICATION	4.3404222508901034E-5	DOCUMENTATION
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999593434652784	WITHOUT_CLASSIFICATION	4.065653472172301E-5	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999994596769912	WITHOUT_CLASSIFICATION	5.403230088338374E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.999929235856317	WITHOUT_CLASSIFICATION	7.076414368300488E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999998105066811	WITHOUT_CLASSIFICATION	1.8949331891800245E-7	DOCUMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.999923321295457	WITHOUT_CLASSIFICATION	7.667870454290096E-5	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999899645241651	WITHOUT_CLASSIFICATION	1.0035475834864644E-5	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999756186537984	WITHOUT_CLASSIFICATION	2.438134620165476E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999826009415185	WITHOUT_CLASSIFICATION	1.7399058481490664E-5	DOCUMENTATION
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.9999206737072638	WITHOUT_CLASSIFICATION	7.932629273617244E-5	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999988025218448	WITHOUT_CLASSIFICATION	1.1974781551258668E-6	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999920202936905	WITHOUT_CLASSIFICATION	7.97970630958599E-6	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999927636420342	WITHOUT_CLASSIFICATION	7.236357965830159E-6	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.9999914084606025	WITHOUT_CLASSIFICATION	8.591539397528694E-6	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9989486431874932	WITHOUT_CLASSIFICATION	0.0010513568125068021	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9998220430863558	WITHOUT_CLASSIFICATION	1.779569136442265E-4	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.999429658191477	WITHOUT_CLASSIFICATION	5.703418085229213E-4	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9988334647941367	WITHOUT_CLASSIFICATION	0.0011665352058632293	DOCUMENTATION
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999251280046288	WITHOUT_CLASSIFICATION	7.487199537115987E-5	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999593599751292	WITHOUT_CLASSIFICATION	4.064002487082025E-5	DOCUMENTATION
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999496392007968	WITHOUT_CLASSIFICATION	5.0360799203236365E-5	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999885483553776	WITHOUT_CLASSIFICATION	1.1451644622353585E-5	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9997392819045205	WITHOUT_CLASSIFICATION	2.60718095479509E-4	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9999453692738416	WITHOUT_CLASSIFICATION	5.463072615846264E-5	DOCUMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999318386932311	WITHOUT_CLASSIFICATION	6.816130676892938E-5	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.999945749788927	WITHOUT_CLASSIFICATION	5.4250211073021987E-5	DOCUMENTATION
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9999956960042499	WITHOUT_CLASSIFICATION	4.3039957501751866E-6	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9999985962154859	WITHOUT_CLASSIFICATION	1.4037845141148483E-6	DOCUMENTATION
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9999922077478103	WITHOUT_CLASSIFICATION	7.79225218972933E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999945426012179	WITHOUT_CLASSIFICATION	5.457398782144389E-6	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.997502672851558	WITHOUT_CLASSIFICATION	0.0024973271484420648	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9999803898830583	WITHOUT_CLASSIFICATION	1.9610116941713678E-5	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9976166223390146	WITHOUT_CLASSIFICATION	0.002383377660985429	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9988380917881038	WITHOUT_CLASSIFICATION	0.0011619082118962444	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9998049287869281	WITHOUT_CLASSIFICATION	1.950712130718063E-4	DOCUMENTATION
//may be final	WITHOUT_CLASSIFICATION	0.9998231025951219	WITHOUT_CLASSIFICATION	1.7689740487825695E-4	DOCUMENTATION
// may be final	WITHOUT_CLASSIFICATION	0.9999934567161722	WITHOUT_CLASSIFICATION	6.543283827709232E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9991325646849814	WITHOUT_CLASSIFICATION	8.674353150186573E-4	DOCUMENTATION
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999801007988677	WITHOUT_CLASSIFICATION	1.989920113228006E-5	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9999400637395898	WITHOUT_CLASSIFICATION	5.993626041009056E-5	DOCUMENTATION
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9990498166408799	WITHOUT_CLASSIFICATION	9.501833591200338E-4	DOCUMENTATION
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9998100684217364	WITHOUT_CLASSIFICATION	1.8993157826361788E-4	DOCUMENTATION
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999950275770194	WITHOUT_CLASSIFICATION	4.972422980581389E-6	DOCUMENTATION
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999815337896155	WITHOUT_CLASSIFICATION	1.8466210384445697E-5	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9991325646849814	WITHOUT_CLASSIFICATION	8.674353150186573E-4	DOCUMENTATION
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999476918542081	WITHOUT_CLASSIFICATION	5.2308145791948685E-5	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9993588670924703	WITHOUT_CLASSIFICATION	6.411329075296034E-4	DOCUMENTATION
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999335429445476	WITHOUT_CLASSIFICATION	6.645705545244565E-5	DOCUMENTATION
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9999954270745787	WITHOUT_CLASSIFICATION	4.5729254213350656E-6	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999475492438664	WITHOUT_CLASSIFICATION	5.245075613357263E-5	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9999511522974469	WITHOUT_CLASSIFICATION	4.8847702553026424E-5	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.999776896678729	WITHOUT_CLASSIFICATION	2.2310332127101616E-4	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9996465454410217	WITHOUT_CLASSIFICATION	3.5345455897829833E-4	DOCUMENTATION
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999898586136239	WITHOUT_CLASSIFICATION	1.0141386376179388E-5	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9992728417452581	WITHOUT_CLASSIFICATION	7.271582547418605E-4	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999968272574273	WITHOUT_CLASSIFICATION	3.1727425725828624E-6	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9992728417452581	WITHOUT_CLASSIFICATION	7.271582547418605E-4	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999969052855943	WITHOUT_CLASSIFICATION	3.0947144057791096E-6	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9971270258093045	WITHOUT_CLASSIFICATION	0.002872974190695661	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999969052855943	WITHOUT_CLASSIFICATION	3.0947144057791096E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999356896413502	WITHOUT_CLASSIFICATION	6.431035864980935E-5	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9999325248049886	WITHOUT_CLASSIFICATION	6.747519501137397E-5	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9943757298515571	WITHOUT_CLASSIFICATION	0.005624270148442811	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9943757298515571	WITHOUT_CLASSIFICATION	0.005624270148442811	DOCUMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9988280986487011	WITHOUT_CLASSIFICATION	0.0011719013512988883	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9988340347500915	WITHOUT_CLASSIFICATION	0.0011659652499085443	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9988280986487011	WITHOUT_CLASSIFICATION	0.0011719013512988883	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9990690953898048	WITHOUT_CLASSIFICATION	9.309046101952583E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9999564244375715	WITHOUT_CLASSIFICATION	4.3575562428517084E-5	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9988612403899613	WITHOUT_CLASSIFICATION	0.0011387596100387563	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9988812128523806	WITHOUT_CLASSIFICATION	0.0011187871476193133	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
//SQL statements	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9997701530313874	WITHOUT_CLASSIFICATION	2.2984696861265695E-4	DOCUMENTATION
//types	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999352880016044	WITHOUT_CLASSIFICATION	6.471199839562876E-5	DOCUMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9991504857786125	WITHOUT_CLASSIFICATION	8.495142213874393E-4	DOCUMENTATION
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999795920701472	WITHOUT_CLASSIFICATION	2.0407929852755598E-5	DOCUMENTATION
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999794620688532	WITHOUT_CLASSIFICATION	2.053793114674605E-5	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999778049790169	WITHOUT_CLASSIFICATION	2.2195020983136087E-5	DOCUMENTATION
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.999429658191477	WITHOUT_CLASSIFICATION	5.703418085229213E-4	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999789287391636	WITHOUT_CLASSIFICATION	2.1071260836459364E-5	DOCUMENTATION
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999462396038177	WITHOUT_CLASSIFICATION	5.3760396182248785E-5	DOCUMENTATION
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.99997732520332	WITHOUT_CLASSIFICATION	2.267479668004282E-5	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.999429658191477	WITHOUT_CLASSIFICATION	5.703418085229213E-4	DOCUMENTATION
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9994415452648182	WITHOUT_CLASSIFICATION	5.584547351817772E-4	DOCUMENTATION
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9988608940188074	WITHOUT_CLASSIFICATION	0.0011391059811925233	DOCUMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9997420024977086	WITHOUT_CLASSIFICATION	2.5799750229129714E-4	DOCUMENTATION
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9981322625223848	WITHOUT_CLASSIFICATION	0.0018677374776151447	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9999444537562288	WITHOUT_CLASSIFICATION	5.554624377138781E-5	DOCUMENTATION
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9999554556602452	WITHOUT_CLASSIFICATION	4.454433975473228E-5	DOCUMENTATION
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.9999045189040774	WITHOUT_CLASSIFICATION	9.548109592265304E-5	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9999775248349945	WITHOUT_CLASSIFICATION	2.2475165005430784E-5	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9988612403899613	WITHOUT_CLASSIFICATION	0.0011387596100387563	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999900342066328	WITHOUT_CLASSIFICATION	9.965793367160424E-6	DOCUMENTATION
//needed by arrays	WITHOUT_CLASSIFICATION	0.999289131040102	WITHOUT_CLASSIFICATION	7.108689598980313E-4	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9994640836281984	WITHOUT_CLASSIFICATION	5.359163718015971E-4	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9988508965426874	WITHOUT_CLASSIFICATION	0.0011491034573126193	DOCUMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999797202834827	WITHOUT_CLASSIFICATION	2.0279716517298412E-5	DOCUMENTATION
//create all the new entries	WITHOUT_CLASSIFICATION	0.99972745635147	WITHOUT_CLASSIFICATION	2.725436485300622E-4	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9990690953898048	WITHOUT_CLASSIFICATION	9.309046101952583E-4	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9990690953898048	WITHOUT_CLASSIFICATION	9.309046101952583E-4	DOCUMENTATION
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9995149225036069	WITHOUT_CLASSIFICATION	4.850774963931435E-4	DOCUMENTATION
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9997265191728015	WITHOUT_CLASSIFICATION	2.7348082719850337E-4	DOCUMENTATION
//==elementType ??	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//update all the modified entries	WITHOUT_CLASSIFICATION	0.99954845238946	WITHOUT_CLASSIFICATION	4.5154761053990884E-4	DOCUMENTATION
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9996102100336869	WITHOUT_CLASSIFICATION	3.8978996631315556E-4	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999589993868884	WITHOUT_CLASSIFICATION	4.100061311170434E-5	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999935361735557	WITHOUT_CLASSIFICATION	6.4638264443224295E-6	DOCUMENTATION
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.999951603027864	WITHOUT_CLASSIFICATION	4.839697213599464E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9996512710873116	WITHOUT_CLASSIFICATION	3.487289126884295E-4	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999623132775396	WITHOUT_CLASSIFICATION	3.7686722460440815E-5	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9991504857786125	WITHOUT_CLASSIFICATION	8.495142213874393E-4	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9988659056100817	WITHOUT_CLASSIFICATION	0.0011340943899183157	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999623132775396	WITHOUT_CLASSIFICATION	3.7686722460440815E-5	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999766485441307	WITHOUT_CLASSIFICATION	2.3351455869273866E-5	DOCUMENTATION
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.999998726187895	WITHOUT_CLASSIFICATION	1.2738121049418052E-6	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9996950918995914	WITHOUT_CLASSIFICATION	3.0490810040857685E-4	DOCUMENTATION
//TODO: check this....	WITHOUT_CLASSIFICATION	0.9977369526100187	WITHOUT_CLASSIFICATION	0.002263047389981356	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999272184334141	WITHOUT_CLASSIFICATION	7.278156658591262E-5	DOCUMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999747620038294	WITHOUT_CLASSIFICATION	2.5237996170531063E-5	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.999987844865716	WITHOUT_CLASSIFICATION	1.2155134284039742E-5	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999940650415924	WITHOUT_CLASSIFICATION	5.934958407666071E-6	DOCUMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999508193601242	WITHOUT_CLASSIFICATION	4.9180639875802396E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9987328183050206	WITHOUT_CLASSIFICATION	0.001267181694979328	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9987328183050206	WITHOUT_CLASSIFICATION	0.001267181694979328	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9995795137934014	WITHOUT_CLASSIFICATION	4.2048620659867954E-4	DOCUMENTATION
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9989244165797269	WITHOUT_CLASSIFICATION	0.0010755834202731682	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999623132775396	WITHOUT_CLASSIFICATION	3.7686722460440815E-5	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999272184334141	WITHOUT_CLASSIFICATION	7.278156658591262E-5	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.999987844865716	WITHOUT_CLASSIFICATION	1.2155134284039742E-5	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9994382373062317	WITHOUT_CLASSIFICATION	5.617626937682626E-4	DOCUMENTATION
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999264579549846	WITHOUT_CLASSIFICATION	7.354204501542991E-5	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999483279508836	WITHOUT_CLASSIFICATION	5.1672049116404306E-5	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9997124289418388	WITHOUT_CLASSIFICATION	2.8757105816120635E-4	DOCUMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999462951885463	WITHOUT_CLASSIFICATION	5.370481145381323E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999766485441307	WITHOUT_CLASSIFICATION	2.3351455869273866E-5	DOCUMENTATION
// JOINS	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9990658840866499	WITHOUT_CLASSIFICATION	9.341159133501919E-4	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9988711102474455	WITHOUT_CLASSIFICATION	0.0011288897525545654	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9996900999905708	WITHOUT_CLASSIFICATION	3.099000094292945E-4	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9993635134962783	WITHOUT_CLASSIFICATION	6.364865037216683E-4	DOCUMENTATION
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.999335342305298	WITHOUT_CLASSIFICATION	6.64657694701971E-4	DOCUMENTATION
//render the SQL	WITHOUT_CLASSIFICATION	0.9995869774834961	WITHOUT_CLASSIFICATION	4.1302251650388353E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999356896413502	WITHOUT_CLASSIFICATION	6.431035864980935E-5	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999823394399081	WITHOUT_CLASSIFICATION	1.7660560091922457E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999241966892112	WITHOUT_CLASSIFICATION	7.580331078885822E-5	DOCUMENTATION
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9984507630926118	WITHOUT_CLASSIFICATION	0.0015492369073881612	DOCUMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.997468801318321	WITHOUT_CLASSIFICATION	0.0025311986816789755	DOCUMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.99733486605007	WITHOUT_CLASSIFICATION	0.0026651339499298736	DOCUMENTATION
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999827509628377	WITHOUT_CLASSIFICATION	1.724903716230223E-5	DOCUMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.9999356709898634	WITHOUT_CLASSIFICATION	6.432901013665229E-5	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999170970011297	WITHOUT_CLASSIFICATION	8.290299887029161E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9999462053541331	WITHOUT_CLASSIFICATION	5.379464586672492E-5	DOCUMENTATION
//before add :-)	WITHOUT_CLASSIFICATION	0.9918864579304152	WITHOUT_CLASSIFICATION	0.008113542069584848	DOCUMENTATION
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999792956768992	WITHOUT_CLASSIFICATION	2.0704323100733133E-5	DOCUMENTATION
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9998749636846264	WITHOUT_CLASSIFICATION	1.2503631537361153E-4	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9990653556803947	WITHOUT_CLASSIFICATION	9.34644319605371E-4	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9999731779544984	WITHOUT_CLASSIFICATION	2.6822045501657335E-5	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9999843800689786	WITHOUT_CLASSIFICATION	1.561993102138513E-5	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9990078447830474	WITHOUT_CLASSIFICATION	9.921552169526065E-4	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9986310331838214	WITHOUT_CLASSIFICATION	0.0013689668161785335	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.999584010439079	WITHOUT_CLASSIFICATION	4.1598956092100107E-4	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9988343273260479	WITHOUT_CLASSIFICATION	0.0011656726739521035	DOCUMENTATION
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.999935617270787	WITHOUT_CLASSIFICATION	6.438272921305709E-5	DOCUMENTATION
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999975173802063	WITHOUT_CLASSIFICATION	2.4826197936897032E-6	DOCUMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9998438958453439	WITHOUT_CLASSIFICATION	1.5610415465604194E-4	DOCUMENTATION
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999865353054649	WITHOUT_CLASSIFICATION	1.3464694535055538E-5	DOCUMENTATION
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999220469935642	WITHOUT_CLASSIFICATION	7.795300643574793E-5	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9970133803721472	WITHOUT_CLASSIFICATION	0.0029866196278528073	DOCUMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999410453925596	WITHOUT_CLASSIFICATION	5.8954607440423054E-5	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999568603385506	WITHOUT_CLASSIFICATION	4.3139661449446595E-5	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999925826018226	WITHOUT_CLASSIFICATION	7.417398177431764E-6	DOCUMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999233384607983	WITHOUT_CLASSIFICATION	7.666153920173556E-5	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.995293132059709	WITHOUT_CLASSIFICATION	0.0047068679402908955	DOCUMENTATION
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9981877869184415	WITHOUT_CLASSIFICATION	0.001812213081558543	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9990288602380497	WITHOUT_CLASSIFICATION	9.711397619503777E-4	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.999977014202389	WITHOUT_CLASSIFICATION	2.2985797610938052E-5	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.999088034242932	WITHOUT_CLASSIFICATION	9.11965757067965E-4	DOCUMENTATION
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.999942663811882	WITHOUT_CLASSIFICATION	5.7336188118035575E-5	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999976053116559	WITHOUT_CLASSIFICATION	2.394688343931229E-6	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9993378574461358	WITHOUT_CLASSIFICATION	6.621425538642869E-4	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999906118787353	WITHOUT_CLASSIFICATION	9.38812126472615E-6	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999977643904358	WITHOUT_CLASSIFICATION	2.2356095641643144E-6	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.999638590180574	WITHOUT_CLASSIFICATION	3.614098194259659E-4	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.999862671256497	WITHOUT_CLASSIFICATION	1.3732874350294162E-4	DOCUMENTATION
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999950948668377	WITHOUT_CLASSIFICATION	4.905133162242601E-6	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.999638590180574	WITHOUT_CLASSIFICATION	3.614098194259659E-4	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999977643904358	WITHOUT_CLASSIFICATION	2.2356095641643144E-6	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.999862671256497	WITHOUT_CLASSIFICATION	1.3732874350294162E-4	DOCUMENTATION
// add the primary key	WITHOUT_CLASSIFICATION	0.9998745928957529	WITHOUT_CLASSIFICATION	1.2540710424714573E-4	DOCUMENTATION
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999399543635737	WITHOUT_CLASSIFICATION	6.004563642613345E-5	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999895744449339	WITHOUT_CLASSIFICATION	1.0425555066080077E-5	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9999807934938689	WITHOUT_CLASSIFICATION	1.9206506131042075E-5	DOCUMENTATION
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999699181195026	WITHOUT_CLASSIFICATION	3.0081880497411167E-5	DOCUMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9990121068375851	WITHOUT_CLASSIFICATION	9.87893162414887E-4	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9952774474218575	WITHOUT_CLASSIFICATION	0.004722552578142556	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9685843143434781	WITHOUT_CLASSIFICATION	0.03141568565652182	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9998282382297122	WITHOUT_CLASSIFICATION	1.7176177028768353E-4	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9998493215855433	WITHOUT_CLASSIFICATION	1.506784144566925E-4	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999395834105601	WITHOUT_CLASSIFICATION	6.0416589439857796E-5	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.999683869944683	WITHOUT_CLASSIFICATION	3.1613005531706064E-4	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999317193246666	WITHOUT_CLASSIFICATION	6.828067533336397E-5	DOCUMENTATION
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9996602666540881	WITHOUT_CLASSIFICATION	3.397333459117897E-4	DOCUMENTATION
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9997784703437289	WITHOUT_CLASSIFICATION	2.215296562710338E-4	DOCUMENTATION
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999915321659016	WITHOUT_CLASSIFICATION	8.46783409841657E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999992602510249	WITHOUT_CLASSIFICATION	7.397489751710694E-7	DOCUMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.999898436225852	WITHOUT_CLASSIFICATION	1.0156377414808192E-4	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.999978253177476	WITHOUT_CLASSIFICATION	2.1746822523957634E-5	DOCUMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9997381964163076	WITHOUT_CLASSIFICATION	2.6180358369239966E-4	DOCUMENTATION
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9995152806160955	WITHOUT_CLASSIFICATION	4.8471938390449217E-4	DOCUMENTATION
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9998630512673613	WITHOUT_CLASSIFICATION	1.3694873263871732E-4	DOCUMENTATION
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999782681885009	WITHOUT_CLASSIFICATION	2.1731811499200925E-5	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999753419317987	WITHOUT_CLASSIFICATION	2.4658068201226815E-5	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9997381964163076	WITHOUT_CLASSIFICATION	2.6180358369239966E-4	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9997381964163076	WITHOUT_CLASSIFICATION	2.6180358369239966E-4	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999889461593413	WITHOUT_CLASSIFICATION	1.1053840658800771E-5	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999889461593413	WITHOUT_CLASSIFICATION	1.1053840658800771E-5	DOCUMENTATION
// not supported	WITHOUT_CLASSIFICATION	0.9999750789731376	WITHOUT_CLASSIFICATION	2.4921026862308206E-5	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999992602510249	WITHOUT_CLASSIFICATION	7.397489751710694E-7	DOCUMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9989180858217815	WITHOUT_CLASSIFICATION	0.0010819141782184597	DOCUMENTATION
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999792254623232	WITHOUT_CLASSIFICATION	2.0774537676789574E-5	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9998227839811525	WITHOUT_CLASSIFICATION	1.7721601884757788E-4	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9998227839811525	WITHOUT_CLASSIFICATION	1.7721601884757788E-4	DOCUMENTATION
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.999783162235516	WITHOUT_CLASSIFICATION	2.1683776448388494E-4	DOCUMENTATION
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9992162010609691	WITHOUT_CLASSIFICATION	7.837989390308014E-4	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9998993160339413	WITHOUT_CLASSIFICATION	1.0068396605862711E-4	DOCUMENTATION
//skip the driving table	WITHOUT_CLASSIFICATION	0.9997093393211828	WITHOUT_CLASSIFICATION	2.9066067881726296E-4	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9998311426571959	WITHOUT_CLASSIFICATION	1.6885734280424374E-4	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999973333139168	WITHOUT_CLASSIFICATION	2.6666860832495654E-6	DOCUMENTATION
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9999409679173524	WITHOUT_CLASSIFICATION	5.9032082647580626E-5	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.998921763846483	WITHOUT_CLASSIFICATION	0.0010782361535169689	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.999658272939788	WITHOUT_CLASSIFICATION	3.4172706021198547E-4	DOCUMENTATION
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999929512842755	WITHOUT_CLASSIFICATION	7.0487157245805266E-6	DOCUMENTATION
//now render the select clause	WITHOUT_CLASSIFICATION	0.9997667270780006	WITHOUT_CLASSIFICATION	2.3327292199929874E-4	DOCUMENTATION
//now tie it all together	WITHOUT_CLASSIFICATION	0.9994410443169581	WITHOUT_CLASSIFICATION	5.589556830419611E-4	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9904844644785561	WITHOUT_CLASSIFICATION	0.009515535521443836	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999400828108285	WITHOUT_CLASSIFICATION	5.991718917164299E-5	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999365744452636	WITHOUT_CLASSIFICATION	6.34255547363096E-5	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999738700209229	WITHOUT_CLASSIFICATION	2.6129979077189223E-5	DOCUMENTATION
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9999746590216312	WITHOUT_CLASSIFICATION	2.5340978368850434E-5	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999165342458778	WITHOUT_CLASSIFICATION	8.34657541221495E-5	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999741058809267	WITHOUT_CLASSIFICATION	2.58941190732397E-5	DOCUMENTATION
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999912916861994	WITHOUT_CLASSIFICATION	8.708313800576332E-6	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999380993454624	WITHOUT_CLASSIFICATION	6.190065453761423E-5	DOCUMENTATION
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999828210559824	WITHOUT_CLASSIFICATION	1.717894401760959E-5	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.998734034954515	WITHOUT_CLASSIFICATION	0.0012659650454851254	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999488797890675	WITHOUT_CLASSIFICATION	5.112021093241815E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9986310331838214	WITHOUT_CLASSIFICATION	0.0013689668161785335	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9995880255613662	WITHOUT_CLASSIFICATION	4.1197443863389484E-4	DOCUMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.999997786679654	WITHOUT_CLASSIFICATION	2.2133203460468286E-6	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999301858102829	WITHOUT_CLASSIFICATION	6.981418971707131E-5	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999283013618814	WITHOUT_CLASSIFICATION	7.169863811862819E-5	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9988833880612297	WITHOUT_CLASSIFICATION	0.001116611938770256	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9988833880612297	WITHOUT_CLASSIFICATION	0.001116611938770256	DOCUMENTATION
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999900318503855	WITHOUT_CLASSIFICATION	9.968149614492446E-6	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.999937595005741	WITHOUT_CLASSIFICATION	6.240499425900302E-5	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999459147786016	WITHOUT_CLASSIFICATION	5.408522139837136E-5	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999459147786016	WITHOUT_CLASSIFICATION	5.408522139837136E-5	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999854857383199	WITHOUT_CLASSIFICATION	1.451426168020423E-5	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.999708303649922	WITHOUT_CLASSIFICATION	2.9169635007805013E-4	DOCUMENTATION
// do not do anything	WITHOUT_CLASSIFICATION	0.9999700952101656	WITHOUT_CLASSIFICATION	2.990478983452929E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9996693467326176	WITHOUT_CLASSIFICATION	3.306532673822506E-4	DOCUMENTATION
//cant instantiate	WITHOUT_CLASSIFICATION	0.9988771984439343	WITHOUT_CLASSIFICATION	0.0011228015560656077	DOCUMENTATION
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999484909085578	WITHOUT_CLASSIFICATION	5.150909144218797E-5	DOCUMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999500286079764	WITHOUT_CLASSIFICATION	4.997139202358099E-5	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.999941533231742	WITHOUT_CLASSIFICATION	5.846676825813061E-5	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.999941533231742	WITHOUT_CLASSIFICATION	5.846676825813061E-5	DOCUMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999953742629677	WITHOUT_CLASSIFICATION	4.6257370323035945E-6	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999251887697161	WITHOUT_CLASSIFICATION	7.481123028393936E-5	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999251887697161	WITHOUT_CLASSIFICATION	7.481123028393936E-5	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.999945347873778	WITHOUT_CLASSIFICATION	5.4652126221913975E-5	DOCUMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999464918004775	WITHOUT_CLASSIFICATION	5.350819952257546E-5	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
// Get the caller	WITHOUT_CLASSIFICATION	0.9999800466313671	WITHOUT_CLASSIFICATION	1.9953368632904496E-5	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999834918190291	WITHOUT_CLASSIFICATION	1.650818097086886E-5	DOCUMENTATION
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9997120883432228	WITHOUT_CLASSIFICATION	2.87911656777226E-4	DOCUMENTATION
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999925824606027	WITHOUT_CLASSIFICATION	7.417539397312594E-6	DOCUMENTATION
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9995760074461607	WITHOUT_CLASSIFICATION	4.2399255383925526E-4	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9996401799792185	WITHOUT_CLASSIFICATION	3.5982002078153096E-4	DOCUMENTATION
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9986431505073362	WITHOUT_CLASSIFICATION	0.0013568494926637603	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999881227201273	WITHOUT_CLASSIFICATION	1.1877279872730746E-5	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.9999033931157808	WITHOUT_CLASSIFICATION	9.660688421920212E-5	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999338436355683	WITHOUT_CLASSIFICATION	6.615636443172873E-5	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999931196984153	WITHOUT_CLASSIFICATION	6.88030158467256E-6	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
//for MySQL	WITHOUT_CLASSIFICATION	0.9988625240552333	WITHOUT_CLASSIFICATION	0.0011374759447666564	DOCUMENTATION
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9995941437150134	WITHOUT_CLASSIFICATION	4.0585628498668736E-4	DOCUMENTATION
//null caused some problems	WITHOUT_CLASSIFICATION	0.9963408170287522	WITHOUT_CLASSIFICATION	0.0036591829712478525	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999156381315328	WITHOUT_CLASSIFICATION	8.436186846718524E-5	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9988711326080623	WITHOUT_CLASSIFICATION	0.001128867391937816	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999871904445771	WITHOUT_CLASSIFICATION	1.2809555422974305E-5	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9998533643075892	WITHOUT_CLASSIFICATION	1.4663569241089465E-4	DOCUMENTATION
// deprecated option...	WITHOUT_CLASSIFICATION	0.9999499813985088	WITHOUT_CLASSIFICATION	5.00186014912737E-5	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9995944341795612	WITHOUT_CLASSIFICATION	4.055658204388904E-4	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9995412894028579	WITHOUT_CLASSIFICATION	4.5871059714203214E-4	DOCUMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999608469546577	WITHOUT_CLASSIFICATION	3.915304534231578E-5	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999963926839504	WITHOUT_CLASSIFICATION	3.6073160497170577E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9995944341795612	WITHOUT_CLASSIFICATION	4.055658204388904E-4	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9982558836584443	WITHOUT_CLASSIFICATION	0.0017441163415556388	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999840455233802	WITHOUT_CLASSIFICATION	1.595447661985589E-5	DOCUMENTATION
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999532051574318	WITHOUT_CLASSIFICATION	4.679484256828453E-5	DOCUMENTATION
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999964389455973	WITHOUT_CLASSIFICATION	3.5610544026288267E-6	DOCUMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999609049602652	WITHOUT_CLASSIFICATION	3.909503973478377E-5	DOCUMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9999886118852407	WITHOUT_CLASSIFICATION	1.1388114759215673E-5	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999904952342443	WITHOUT_CLASSIFICATION	9.504765755602287E-6	DOCUMENTATION
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9997325787675204	WITHOUT_CLASSIFICATION	2.6742123247956956E-4	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998731622147097	WITHOUT_CLASSIFICATION	1.268377852903528E-4	DOCUMENTATION
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999929331904609	WITHOUT_CLASSIFICATION	7.06680953912003E-6	DOCUMENTATION
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998731622147097	WITHOUT_CLASSIFICATION	1.268377852903528E-4	DOCUMENTATION
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999556919268197	WITHOUT_CLASSIFICATION	4.4308073180349194E-5	DOCUMENTATION
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9999789369210665	WITHOUT_CLASSIFICATION	2.1063078933449622E-5	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.9986294767703198	WITHOUT_CLASSIFICATION	0.0013705232296801636	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999778370336136	WITHOUT_CLASSIFICATION	2.2162966386285728E-5	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.9999611951020894	WITHOUT_CLASSIFICATION	3.880489791057864E-5	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999797650462147	WITHOUT_CLASSIFICATION	2.023495378526343E-5	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999743179427167	WITHOUT_CLASSIFICATION	2.5682057283232254E-5	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999425623354553	WITHOUT_CLASSIFICATION	5.74376645446408E-5	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999743179427167	WITHOUT_CLASSIFICATION	2.5682057283232254E-5	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999791891208979	WITHOUT_CLASSIFICATION	2.081087910201943E-5	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999963072480275	WITHOUT_CLASSIFICATION	3.692751972496284E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9999576250508141	WITHOUT_CLASSIFICATION	4.237494918582014E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999538812135147	WITHOUT_CLASSIFICATION	4.611878648516709E-5	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999797650462147	WITHOUT_CLASSIFICATION	2.023495378526343E-5	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999425623354553	WITHOUT_CLASSIFICATION	5.74376645446408E-5	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999791891208979	WITHOUT_CLASSIFICATION	2.081087910201943E-5	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9998456923334369	WITHOUT_CLASSIFICATION	1.543076665631611E-4	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9989371820877759	WITHOUT_CLASSIFICATION	0.0010628179122241083	DOCUMENTATION
//reset the id	WITHOUT_CLASSIFICATION	0.9996123708987561	WITHOUT_CLASSIFICATION	3.876291012438801E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.9996157968593828	WITHOUT_CLASSIFICATION	3.842031406171222E-4	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9999888729444084	WITHOUT_CLASSIFICATION	1.1127055591535433E-5	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999090090877327	WITHOUT_CLASSIFICATION	9.099091226724763E-5	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999365744452636	WITHOUT_CLASSIFICATION	6.34255547363096E-5	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999963072480275	WITHOUT_CLASSIFICATION	3.692751972496284E-6	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9999985412955317	WITHOUT_CLASSIFICATION	1.4587044682512562E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9991353500347836	WITHOUT_CLASSIFICATION	8.646499652165407E-4	DOCUMENTATION
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999463743454834	WITHOUT_CLASSIFICATION	5.362565451658616E-5	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999365744452636	WITHOUT_CLASSIFICATION	6.34255547363096E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9994289893861573	WITHOUT_CLASSIFICATION	5.710106138426065E-4	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999365744452636	WITHOUT_CLASSIFICATION	6.34255547363096E-5	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999062314990689	WITHOUT_CLASSIFICATION	9.376850093107765E-5	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999611648335381	WITHOUT_CLASSIFICATION	3.8835166461791566E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9995179386996197	WITHOUT_CLASSIFICATION	4.820613003803211E-4	DOCUMENTATION
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999873615873965	WITHOUT_CLASSIFICATION	1.2638412603532488E-5	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999810415137995	WITHOUT_CLASSIFICATION	1.8958486200484936E-5	DOCUMENTATION
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999349800049371	WITHOUT_CLASSIFICATION	6.501999506300707E-5	DOCUMENTATION
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999621929770989	WITHOUT_CLASSIFICATION	3.7807022901032496E-5	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9998382132210761	WITHOUT_CLASSIFICATION	1.617867789239572E-4	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9993032710404672	WITHOUT_CLASSIFICATION	6.967289595326943E-4	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9996277084552625	WITHOUT_CLASSIFICATION	3.722915447374965E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999932052131143	WITHOUT_CLASSIFICATION	6.794786885776546E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9996277084552625	WITHOUT_CLASSIFICATION	3.722915447374965E-4	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9997389486555585	WITHOUT_CLASSIFICATION	2.6105134444156906E-4	DOCUMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9988516116467766	WITHOUT_CLASSIFICATION	0.0011483883532233527	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999916319946205	WITHOUT_CLASSIFICATION	8.36800537953416E-6	DOCUMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999936942918828	WITHOUT_CLASSIFICATION	6.305708117202526E-6	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9999994349950178	WITHOUT_CLASSIFICATION	5.65004982266761E-7	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9995654508061642	WITHOUT_CLASSIFICATION	4.345491938358444E-4	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999938557744867	WITHOUT_CLASSIFICATION	6.144225513362394E-6	DOCUMENTATION
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999993725303263	WITHOUT_CLASSIFICATION	6.274696736111405E-7	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9993357973033455	WITHOUT_CLASSIFICATION	6.642026966545058E-4	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9993357973033455	WITHOUT_CLASSIFICATION	6.642026966545058E-4	DOCUMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999188269594541	WITHOUT_CLASSIFICATION	8.117304054588806E-5	DOCUMENTATION
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.999988955100265	WITHOUT_CLASSIFICATION	1.1044899735161935E-5	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9999782774671381	WITHOUT_CLASSIFICATION	2.172253286186869E-5	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9999983450370449	WITHOUT_CLASSIFICATION	1.6549629551514595E-6	DOCUMENTATION
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999934746271386	WITHOUT_CLASSIFICATION	6.525372861483809E-6	DOCUMENTATION
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9998562731601257	WITHOUT_CLASSIFICATION	1.437268398743637E-4	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9744960622225396	WITHOUT_CLASSIFICATION	0.025503937777460423	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999796440884975	WITHOUT_CLASSIFICATION	2.035591150252171E-5	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9989884708389668	WITHOUT_CLASSIFICATION	0.00101152916103318	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9984869996598441	WITHOUT_CLASSIFICATION	0.0015130003401558835	DOCUMENTATION
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9957802528510677	WITHOUT_CLASSIFICATION	0.0042197471489322	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999949513115538	WITHOUT_CLASSIFICATION	5.048688446173694E-6	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999948184333125	WITHOUT_CLASSIFICATION	5.181566687502781E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9988266431319017	WITHOUT_CLASSIFICATION	0.001173356868098233	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9993554060134693	WITHOUT_CLASSIFICATION	6.445939865307524E-4	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9993554060134693	WITHOUT_CLASSIFICATION	6.445939865307524E-4	DOCUMENTATION
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999982788783175	WITHOUT_CLASSIFICATION	1.7211216825389654E-6	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9998382132210761	WITHOUT_CLASSIFICATION	1.617867789239572E-4	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9988909668860094	WITHOUT_CLASSIFICATION	0.0011090331139905361	DOCUMENTATION
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9990859152262901	WITHOUT_CLASSIFICATION	9.140847737098977E-4	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999623652885662	WITHOUT_CLASSIFICATION	3.7634711433769046E-5	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999878112660262	WITHOUT_CLASSIFICATION	1.2188733973767395E-5	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.999689057249088	WITHOUT_CLASSIFICATION	3.1094275091203164E-4	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9987328183050206	WITHOUT_CLASSIFICATION	0.001267181694979328	DOCUMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9999608547412342	WITHOUT_CLASSIFICATION	3.9145258765802526E-5	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9999658262567487	WITHOUT_CLASSIFICATION	3.417374325129968E-5	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.9999494171707486	WITHOUT_CLASSIFICATION	5.058282925144164E-5	DOCUMENTATION
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999999171958206	WITHOUT_CLASSIFICATION	8.280417941942313E-8	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999106311474592	WITHOUT_CLASSIFICATION	8.93688525408145E-5	DOCUMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999915474319037	WITHOUT_CLASSIFICATION	8.452568096303765E-6	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999999408256943	WITHOUT_CLASSIFICATION	5.917430574521628E-8	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.99904919800783	WITHOUT_CLASSIFICATION	9.508019921699866E-4	DOCUMENTATION
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999896673375251	WITHOUT_CLASSIFICATION	1.0332662474837376E-5	DOCUMENTATION
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999466143715123	WITHOUT_CLASSIFICATION	5.338562848765207E-5	DOCUMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9999988350974517	WITHOUT_CLASSIFICATION	1.1649025482670737E-6	DOCUMENTATION
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999958072693715	WITHOUT_CLASSIFICATION	4.192730628537201E-6	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999119644659048	WITHOUT_CLASSIFICATION	8.803553409513947E-5	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9999214644818097	WITHOUT_CLASSIFICATION	7.853551819029253E-5	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999975100838999	WITHOUT_CLASSIFICATION	2.489916100192764E-6	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999971079836044	WITHOUT_CLASSIFICATION	2.892016395728985E-6	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999884878984442	WITHOUT_CLASSIFICATION	1.1512101555724526E-5	DOCUMENTATION
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999672512921856	WITHOUT_CLASSIFICATION	3.274870781441347E-5	DOCUMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9992992749742873	WITHOUT_CLASSIFICATION	7.007250257126691E-4	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.9998298476303362	WITHOUT_CLASSIFICATION	1.7015236966371218E-4	DOCUMENTATION
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999836100704841	WITHOUT_CLASSIFICATION	1.6389929515893575E-5	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9997309377977336	WITHOUT_CLASSIFICATION	2.690622022663678E-4	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999283907687267	WITHOUT_CLASSIFICATION	7.160923127316781E-5	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.999928562918374	WITHOUT_CLASSIFICATION	7.14370816260211E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999285454496224	WITHOUT_CLASSIFICATION	7.145455037760833E-5	DOCUMENTATION
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999798763764758	WITHOUT_CLASSIFICATION	2.0123623524228957E-5	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.999932922494598	WITHOUT_CLASSIFICATION	6.707750540196902E-5	DOCUMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9992961173537384	WITHOUT_CLASSIFICATION	7.038826462616613E-4	DOCUMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999972213258054	WITHOUT_CLASSIFICATION	2.7786741946436963E-6	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999862658783767	WITHOUT_CLASSIFICATION	1.373412162321845E-5	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999862658783767	WITHOUT_CLASSIFICATION	1.373412162321845E-5	DOCUMENTATION
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999820879465463	WITHOUT_CLASSIFICATION	1.791205345369641E-5	DOCUMENTATION
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9999930078079439	WITHOUT_CLASSIFICATION	6.992192056145288E-6	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9959391634346031	WITHOUT_CLASSIFICATION	0.00406083656539694	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9959391634346031	WITHOUT_CLASSIFICATION	0.00406083656539694	DOCUMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999564455853217	WITHOUT_CLASSIFICATION	4.3554414678218043E-5	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.99907912806822	WITHOUT_CLASSIFICATION	9.20871931780004E-4	DOCUMENTATION
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.9999942194653724	WITHOUT_CLASSIFICATION	5.780534627645289E-6	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999994078605657	WITHOUT_CLASSIFICATION	5.921394343659472E-7	DOCUMENTATION
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999390255339653	WITHOUT_CLASSIFICATION	6.097446603483738E-5	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999634025192129	WITHOUT_CLASSIFICATION	3.6597480787121834E-5	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999634025192129	WITHOUT_CLASSIFICATION	3.6597480787121834E-5	DOCUMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9991189778762013	WITHOUT_CLASSIFICATION	8.810221237987852E-4	DOCUMENTATION
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9990690953898048	WITHOUT_CLASSIFICATION	9.309046101952583E-4	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// includes last '.'	WITHOUT_CLASSIFICATION	0.9998644564360648	WITHOUT_CLASSIFICATION	1.3554356393509585E-4	DOCUMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999864493648642	WITHOUT_CLASSIFICATION	1.355063513569356E-5	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999998631845114	WITHOUT_CLASSIFICATION	1.3681548858500465E-7	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9998341195228921	WITHOUT_CLASSIFICATION	1.6588047710792866E-4	DOCUMENTATION
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999975153197056	WITHOUT_CLASSIFICATION	2.4846802943854965E-6	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999350031191322	WITHOUT_CLASSIFICATION	6.499688086773522E-5	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999805719069601	WITHOUT_CLASSIFICATION	1.942809303994175E-5	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999867670941223	WITHOUT_CLASSIFICATION	1.3232905877759418E-5	DOCUMENTATION
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999790172684461	WITHOUT_CLASSIFICATION	2.0982731553955214E-5	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9998934117034837	WITHOUT_CLASSIFICATION	1.0658829651637507E-4	DOCUMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9989643214302121	WITHOUT_CLASSIFICATION	0.0010356785697878805	DOCUMENTATION
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9999976947610419	WITHOUT_CLASSIFICATION	2.305238958169713E-6	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9996483631474806	WITHOUT_CLASSIFICATION	3.5163685251941065E-4	DOCUMENTATION
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999660833469193	WITHOUT_CLASSIFICATION	3.391665308068992E-5	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.999934980920886	WITHOUT_CLASSIFICATION	6.501907911403563E-5	DOCUMENTATION
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999856764427245	WITHOUT_CLASSIFICATION	1.4323557275557973E-5	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999923186434793	WITHOUT_CLASSIFICATION	7.681356520713806E-6	DOCUMENTATION
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999944039512397	WITHOUT_CLASSIFICATION	5.596048760313514E-6	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.999985635533738	WITHOUT_CLASSIFICATION	1.436446626207368E-5	DOCUMENTATION
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.999939986344651	WITHOUT_CLASSIFICATION	6.0013655349121646E-5	DOCUMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999789108507605	WITHOUT_CLASSIFICATION	2.108914923939523E-5	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9998797931802443	WITHOUT_CLASSIFICATION	1.2020681975572933E-4	DOCUMENTATION
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.999721322825277	WITHOUT_CLASSIFICATION	2.786771747229492E-4	DOCUMENTATION
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9990164601530652	WITHOUT_CLASSIFICATION	9.835398469346989E-4	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.9936909776058984	WITHOUT_CLASSIFICATION	0.006309022394101582	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.9999960670142475	WITHOUT_CLASSIFICATION	3.932985752462372E-6	DOCUMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999798486810999	WITHOUT_CLASSIFICATION	2.0151318900067978E-5	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999853138597112	WITHOUT_CLASSIFICATION	1.4686140288791598E-5	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999887993173365	WITHOUT_CLASSIFICATION	1.120068266346132E-5	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999927785521109	WITHOUT_CLASSIFICATION	7.221447889161418E-6	DOCUMENTATION
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.99991263733147	WITHOUT_CLASSIFICATION	8.736266853012726E-5	DOCUMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9998804656262981	WITHOUT_CLASSIFICATION	1.1953437370192986E-4	DOCUMENTATION
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999823060883083	WITHOUT_CLASSIFICATION	1.769391169164644E-5	DOCUMENTATION
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9990490049794413	WITHOUT_CLASSIFICATION	9.509950205587145E-4	DOCUMENTATION
//readResolveObject	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9987328183050206	WITHOUT_CLASSIFICATION	0.001267181694979328	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.999931741424824	WITHOUT_CLASSIFICATION	6.82585751759692E-5	DOCUMENTATION
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999917939933326	WITHOUT_CLASSIFICATION	8.206006667295096E-6	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999984491582525	WITHOUT_CLASSIFICATION	1.5508417475301193E-6	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9999626518676978	WITHOUT_CLASSIFICATION	3.734813230204996E-5	DOCUMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.9998394297140836	WITHOUT_CLASSIFICATION	1.605702859163973E-4	DOCUMENTATION
// Handle actions	WITHOUT_CLASSIFICATION	0.9999388611716309	WITHOUT_CLASSIFICATION	6.113882836909078E-5	DOCUMENTATION
// Print page	WITHOUT_CLASSIFICATION	0.999935268065966	WITHOUT_CLASSIFICATION	6.473193403403279E-5	DOCUMENTATION
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999355795562977	WITHOUT_CLASSIFICATION	6.442044370227946E-5	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9999563917459833	WITHOUT_CLASSIFICATION	4.3608254016774046E-5	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999960393213225	WITHOUT_CLASSIFICATION	3.960678677441462E-6	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999849332653356	WITHOUT_CLASSIFICATION	1.5066734664428548E-5	DOCUMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999866038287772	WITHOUT_CLASSIFICATION	1.3396171222790188E-5	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999810368210167	WITHOUT_CLASSIFICATION	1.896317898333498E-5	DOCUMENTATION
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999648356152437	WITHOUT_CLASSIFICATION	3.516438475627631E-5	DOCUMENTATION
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9995377345627718	WITHOUT_CLASSIFICATION	4.6226543722808523E-4	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999971712297159	WITHOUT_CLASSIFICATION	2.828770284009262E-6	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999672358066396	WITHOUT_CLASSIFICATION	3.276419336043701E-5	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9998574357911837	WITHOUT_CLASSIFICATION	1.4256420881631927E-4	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9999466916854948	WITHOUT_CLASSIFICATION	5.330831450517667E-5	DOCUMENTATION
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999553289337444	WITHOUT_CLASSIFICATION	4.4671066255627896E-5	DOCUMENTATION
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.999993396693937	WITHOUT_CLASSIFICATION	6.603306063003937E-6	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999976852866865	WITHOUT_CLASSIFICATION	2.3147133134180768E-6	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999964910403707	WITHOUT_CLASSIFICATION	3.508959629294066E-6	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999964910403707	WITHOUT_CLASSIFICATION	3.508959629294066E-6	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999986648467412	WITHOUT_CLASSIFICATION	1.3351532589235723E-6	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9999969214827181	WITHOUT_CLASSIFICATION	3.0785172818366277E-6	DOCUMENTATION
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999975596039705	WITHOUT_CLASSIFICATION	2.4403960295741205E-6	DOCUMENTATION
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999906748820927	WITHOUT_CLASSIFICATION	9.32511790726286E-6	DOCUMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999977265175327	WITHOUT_CLASSIFICATION	2.2734824673605455E-6	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999560392591698	WITHOUT_CLASSIFICATION	4.396074083022678E-5	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999452975350175	WITHOUT_CLASSIFICATION	5.4702464982516214E-5	DOCUMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999997742822183	WITHOUT_CLASSIFICATION	2.2571778155024193E-7	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999872266973306	WITHOUT_CLASSIFICATION	1.277330266922471E-5	DOCUMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999766018133439	WITHOUT_CLASSIFICATION	2.3398186656111396E-5	DOCUMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9999917760999302	WITHOUT_CLASSIFICATION	8.223900069766959E-6	DOCUMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9982650892640633	WITHOUT_CLASSIFICATION	0.0017349107359367066	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999459625409823	WITHOUT_CLASSIFICATION	5.403745901761892E-5	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999830775547012	WITHOUT_CLASSIFICATION	1.6922445298825572E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9996558939138858	WITHOUT_CLASSIFICATION	3.4410608611424144E-4	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9996558939138858	WITHOUT_CLASSIFICATION	3.4410608611424144E-4	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999820739696955	WITHOUT_CLASSIFICATION	1.7926030304475157E-5	DOCUMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9999744571754864	WITHOUT_CLASSIFICATION	2.554282451359646E-5	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9987137499279451	WITHOUT_CLASSIFICATION	0.00128625007205488	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.9999958630772368	WITHOUT_CLASSIFICATION	4.136922763260552E-6	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9998712319673672	WITHOUT_CLASSIFICATION	1.2876803263279463E-4	DOCUMENTATION
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999195109416043	WITHOUT_CLASSIFICATION	8.04890583957065E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.9993091043500785	WITHOUT_CLASSIFICATION	6.908956499216381E-4	DOCUMENTATION
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.9999990500100486	WITHOUT_CLASSIFICATION	9.499899513512372E-7	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999988988731946	WITHOUT_CLASSIFICATION	1.1011268054057636E-6	DOCUMENTATION
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999990634616718	WITHOUT_CLASSIFICATION	9.365383282605344E-7	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999758201625398	WITHOUT_CLASSIFICATION	2.417983746027572E-5	DOCUMENTATION
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9990083108563856	WITHOUT_CLASSIFICATION	9.916891436143845E-4	DOCUMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999858229902256	WITHOUT_CLASSIFICATION	1.4177009774405067E-5	DOCUMENTATION
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999825344569616	WITHOUT_CLASSIFICATION	1.7465543038366823E-5	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999236438724904	WITHOUT_CLASSIFICATION	7.635612750957542E-5	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999988709508244	WITHOUT_CLASSIFICATION	1.129049175599002E-6	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999986285080521	WITHOUT_CLASSIFICATION	1.371491947944272E-6	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999403978026908	WITHOUT_CLASSIFICATION	5.960219730926131E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999356945058373	WITHOUT_CLASSIFICATION	6.43054941626886E-5	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999958968730609	WITHOUT_CLASSIFICATION	4.1031269390618505E-6	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.999998455436297	WITHOUT_CLASSIFICATION	1.544563703009666E-6	DOCUMENTATION
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999992305766692	WITHOUT_CLASSIFICATION	7.694233307427426E-7	DOCUMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9998928208707519	WITHOUT_CLASSIFICATION	1.0717912924808629E-4	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999836538334012	WITHOUT_CLASSIFICATION	1.6346166598931813E-5	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9999859595306833	WITHOUT_CLASSIFICATION	1.4040469316708256E-5	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999916049454298	WITHOUT_CLASSIFICATION	8.395054570107717E-6	DOCUMENTATION
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9999789524605814	WITHOUT_CLASSIFICATION	2.1047539418609918E-5	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9999995608919834	WITHOUT_CLASSIFICATION	4.3910801659652303E-7	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999961437790195	WITHOUT_CLASSIFICATION	3.85622098052035E-6	DOCUMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9997875898160207	WITHOUT_CLASSIFICATION	2.1241018397932497E-4	DOCUMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999674649265299	WITHOUT_CLASSIFICATION	3.253507347020372E-5	DOCUMENTATION
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999783705830788	WITHOUT_CLASSIFICATION	2.1629416921260014E-5	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999955746219565	WITHOUT_CLASSIFICATION	4.425378043449491E-6	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.9999012176290214	WITHOUT_CLASSIFICATION	9.878237097866592E-5	DOCUMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999995594995502	WITHOUT_CLASSIFICATION	4.405004496911134E-7	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999938394786777	WITHOUT_CLASSIFICATION	6.160521322301516E-6	DOCUMENTATION
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999591129271403	WITHOUT_CLASSIFICATION	4.088707285967144E-5	DOCUMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999389574888633	WITHOUT_CLASSIFICATION	6.104251113668982E-5	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9999997503029667	WITHOUT_CLASSIFICATION	2.4969703328626093E-7	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.999954590442184	WITHOUT_CLASSIFICATION	4.540955781593737E-5	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.999954590442184	WITHOUT_CLASSIFICATION	4.540955781593737E-5	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999880499818753	WITHOUT_CLASSIFICATION	1.1950018124645653E-5	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999997774750216	WITHOUT_CLASSIFICATION	2.2252497848198336E-7	DOCUMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.9998612835117889	WITHOUT_CLASSIFICATION	1.3871648821098118E-4	DOCUMENTATION
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.999991832619267	WITHOUT_CLASSIFICATION	8.16738073296232E-6	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999807790052359	WITHOUT_CLASSIFICATION	1.9220994764108525E-5	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9994099271341307	WITHOUT_CLASSIFICATION	5.90072865869217E-4	DOCUMENTATION
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999958612837796	WITHOUT_CLASSIFICATION	4.138716220395157E-6	DOCUMENTATION
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9998990765204453	WITHOUT_CLASSIFICATION	1.0092347955471511E-4	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999810341900827	WITHOUT_CLASSIFICATION	1.896580991741029E-5	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999928890167752	WITHOUT_CLASSIFICATION	7.110983224799162E-5	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999928890167752	WITHOUT_CLASSIFICATION	7.110983224799162E-5	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9997665019241144	WITHOUT_CLASSIFICATION	2.334980758855547E-4	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9998631495270539	WITHOUT_CLASSIFICATION	1.368504729461214E-4	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999994607734877	WITHOUT_CLASSIFICATION	5.392265122620838E-7	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.999998502273041	WITHOUT_CLASSIFICATION	1.4977269590218394E-6	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.999954614073979	WITHOUT_CLASSIFICATION	4.538592602103982E-5	DOCUMENTATION
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999998078419828	WITHOUT_CLASSIFICATION	1.9215801714236594E-7	DOCUMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999976634459631	WITHOUT_CLASSIFICATION	2.3365540370099745E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9999939708799839	WITHOUT_CLASSIFICATION	6.029120016061774E-6	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999896542338889	WITHOUT_CLASSIFICATION	1.0345766111014165E-5	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999993466150014	WITHOUT_CLASSIFICATION	6.533849986063752E-7	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9998699949480566	WITHOUT_CLASSIFICATION	1.3000505194326519E-4	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.999890063956876	WITHOUT_CLASSIFICATION	1.099360431239486E-4	DOCUMENTATION
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.99896968641335	WITHOUT_CLASSIFICATION	0.001030313586649948	DOCUMENTATION
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9997817769372414	WITHOUT_CLASSIFICATION	2.182230627586866E-4	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999899198670682	WITHOUT_CLASSIFICATION	1.0080132931709724E-5	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999994612963585	WITHOUT_CLASSIFICATION	5.387036414787306E-7	DOCUMENTATION
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.999992128615291	WITHOUT_CLASSIFICATION	7.871384709049278E-6	DOCUMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9999982620668828	WITHOUT_CLASSIFICATION	1.7379331171841146E-6	DOCUMENTATION
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9999959925995356	WITHOUT_CLASSIFICATION	4.0074004643287E-6	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9999420176378582	WITHOUT_CLASSIFICATION	5.798236214191806E-5	DOCUMENTATION
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999905734661454	WITHOUT_CLASSIFICATION	9.426533854641916E-6	DOCUMENTATION
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.999988631530949	WITHOUT_CLASSIFICATION	1.136846905104453E-5	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999962212726295	WITHOUT_CLASSIFICATION	3.778727370490406E-6	DOCUMENTATION
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999999115442687	WITHOUT_CLASSIFICATION	8.845573139332445E-8	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999968474554458	WITHOUT_CLASSIFICATION	3.1525445541169447E-6	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999979420543802	WITHOUT_CLASSIFICATION	2.0579456197993876E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.999998147071318	WITHOUT_CLASSIFICATION	1.8529286821002658E-6	DOCUMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9999809073116791	WITHOUT_CLASSIFICATION	1.909268832089531E-5	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9994942299151056	WITHOUT_CLASSIFICATION	5.057700848944562E-4	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999893150151609	WITHOUT_CLASSIFICATION	1.068498483925799E-5	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999989224513413	WITHOUT_CLASSIFICATION	1.0775486587605549E-6	DOCUMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999983342226395	WITHOUT_CLASSIFICATION	1.6657773606101858E-6	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999957396932104	WITHOUT_CLASSIFICATION	4.260306789639194E-6	DOCUMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9999942514562247	WITHOUT_CLASSIFICATION	5.748543775316884E-6	DOCUMENTATION
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9999735194278986	WITHOUT_CLASSIFICATION	2.648057210135147E-5	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999059657551538	WITHOUT_CLASSIFICATION	9.403424484625638E-5	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999459625409823	WITHOUT_CLASSIFICATION	5.403745901761892E-5	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999975460434111	WITHOUT_CLASSIFICATION	2.453956588903467E-6	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999922970628184	WITHOUT_CLASSIFICATION	7.702937181651708E-6	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9991433116518016	WITHOUT_CLASSIFICATION	8.566883481982828E-4	DOCUMENTATION
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999992179737395	WITHOUT_CLASSIFICATION	7.820262605270626E-7	DOCUMENTATION
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9996199862234912	WITHOUT_CLASSIFICATION	3.8001377650874273E-4	DOCUMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9998975880619164	WITHOUT_CLASSIFICATION	1.0241193808351602E-4	DOCUMENTATION
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9999371941739731	WITHOUT_CLASSIFICATION	6.280582602686618E-5	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9965327166819092	WITHOUT_CLASSIFICATION	0.0034672833180909106	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9992525648647366	WITHOUT_CLASSIFICATION	7.474351352634097E-4	DOCUMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9999903449767091	WITHOUT_CLASSIFICATION	9.655023290935414E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.999999789307778	WITHOUT_CLASSIFICATION	2.106922220745848E-7	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999976896149099	WITHOUT_CLASSIFICATION	2.310385090137146E-6	DOCUMENTATION
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.999787521727875	WITHOUT_CLASSIFICATION	2.1247827212500308E-4	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999640029595909	WITHOUT_CLASSIFICATION	3.599704040918692E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999358489106243	WITHOUT_CLASSIFICATION	6.415108937569306E-5	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.999429658191477	WITHOUT_CLASSIFICATION	5.703418085229213E-4	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9987350097543116	WITHOUT_CLASSIFICATION	0.0012649902456883925	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.999993970522267	WITHOUT_CLASSIFICATION	6.029477733040837E-6	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999931310680551	WITHOUT_CLASSIFICATION	6.868931944842168E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999358489106243	WITHOUT_CLASSIFICATION	6.415108937569306E-5	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9992790424249683	WITHOUT_CLASSIFICATION	7.209575750317567E-4	DOCUMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9996909467931342	WITHOUT_CLASSIFICATION	3.090532068658852E-4	DOCUMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999976910965943	WITHOUT_CLASSIFICATION	2.3089034056971496E-6	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999945984924692	WITHOUT_CLASSIFICATION	5.401507530813183E-6	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9904349949393148	WITHOUT_CLASSIFICATION	0.00956500506068522	DOCUMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999991327477881	WITHOUT_CLASSIFICATION	8.672522118799136E-7	DOCUMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999991300556123	WITHOUT_CLASSIFICATION	8.69944387767287E-7	DOCUMENTATION
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.9999986740792414	WITHOUT_CLASSIFICATION	1.3259207586221933E-6	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9998687488532968	WITHOUT_CLASSIFICATION	1.3125114670310415E-4	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999942385069288	WITHOUT_CLASSIFICATION	5.76149307120693E-6	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9998550038121387	WITHOUT_CLASSIFICATION	1.4499618786125E-4	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.997891794519674	WITHOUT_CLASSIFICATION	0.0021082054803259935	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999862426493754	WITHOUT_CLASSIFICATION	1.3757350624488232E-5	DOCUMENTATION
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9984385885588408	WITHOUT_CLASSIFICATION	0.0015614114411591077	DOCUMENTATION
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9996233926459513	WITHOUT_CLASSIFICATION	3.766073540486487E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999975100838999	WITHOUT_CLASSIFICATION	2.489916100192764E-6	DOCUMENTATION
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999937714107374	WITHOUT_CLASSIFICATION	6.228589262598909E-6	DOCUMENTATION
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999965637860017	WITHOUT_CLASSIFICATION	3.436213998341987E-6	DOCUMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9965028484039269	WITHOUT_CLASSIFICATION	0.0034971515960731283	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999992353173472	WITHOUT_CLASSIFICATION	7.646826528688522E-7	DOCUMENTATION
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.999800795671858	WITHOUT_CLASSIFICATION	1.9920432814189804E-4	DOCUMENTATION
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999957987168187	WITHOUT_CLASSIFICATION	4.201283181321397E-6	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999297197490599	WITHOUT_CLASSIFICATION	7.028025094015289E-5	DOCUMENTATION
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999993198868511	WITHOUT_CLASSIFICATION	6.801131489884504E-7	DOCUMENTATION
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999892639355117	WITHOUT_CLASSIFICATION	1.0736064488385056E-5	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999276159289863	WITHOUT_CLASSIFICATION	7.238407101379553E-5	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9999809098482869	WITHOUT_CLASSIFICATION	1.909015171303795E-5	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.999940806956072	WITHOUT_CLASSIFICATION	5.919304392792188E-5	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9999911442192785	WITHOUT_CLASSIFICATION	8.85578072147432E-6	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.9999986674266333	WITHOUT_CLASSIFICATION	1.332573366689367E-6	DOCUMENTATION
// and perform the load	WITHOUT_CLASSIFICATION	0.9999934962675908	WITHOUT_CLASSIFICATION	6.503732409195843E-6	DOCUMENTATION
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.999628688736062	WITHOUT_CLASSIFICATION	3.713112639380224E-4	DOCUMENTATION
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9998385134033743	WITHOUT_CLASSIFICATION	1.6148659662574292E-4	DOCUMENTATION
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.999978031408554	WITHOUT_CLASSIFICATION	2.196859144590801E-5	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999919426503822	WITHOUT_CLASSIFICATION	8.05734961784212E-6	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999908857337724	WITHOUT_CLASSIFICATION	9.114266227574111E-6	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999996166886629	WITHOUT_CLASSIFICATION	3.833113371353195E-7	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999915612437384	WITHOUT_CLASSIFICATION	8.438756261455817E-6	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999992157715106	WITHOUT_CLASSIFICATION	7.842284893218568E-7	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9997057559617032	WITHOUT_CLASSIFICATION	2.9424403829679785E-4	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9998676782849925	WITHOUT_CLASSIFICATION	1.3232171500752717E-4	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9998676782849925	WITHOUT_CLASSIFICATION	1.3232171500752717E-4	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999275815491788	WITHOUT_CLASSIFICATION	7.241845082113735E-5	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999912819621831	WITHOUT_CLASSIFICATION	8.718037816965642E-6	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999828067735561	WITHOUT_CLASSIFICATION	1.7193226443866868E-5	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9448576859236585	DOCUMENTATION	0.0551423140763416	WITHOUT_CLASSIFICATION
// ignore	WITHOUT_CLASSIFICATION	0.9996693467326176	WITHOUT_CLASSIFICATION	3.306532673822506E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9996693467326176	WITHOUT_CLASSIFICATION	3.306532673822506E-4	DOCUMENTATION
//        }	WITHOUT_CLASSIFICATION	0.999954480414376	WITHOUT_CLASSIFICATION	4.5519585624049995E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9998220430863558	WITHOUT_CLASSIFICATION	1.779569136442265E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999641304540029	WITHOUT_CLASSIFICATION	3.5869545997102077E-4	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9997392819045205	WITHOUT_CLASSIFICATION	2.60718095479509E-4	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999975863919237	WITHOUT_CLASSIFICATION	2.413608076318497E-6	DOCUMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.999982947162644	WITHOUT_CLASSIFICATION	1.705283735605492E-5	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999973626852432	WITHOUT_CLASSIFICATION	2.6373147568657887E-6	DOCUMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9997733963799813	WITHOUT_CLASSIFICATION	2.266036200186156E-4	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9998886993273884	WITHOUT_CLASSIFICATION	1.1130067261165326E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999806257519948	WITHOUT_CLASSIFICATION	1.937424800526966E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999806257519948	WITHOUT_CLASSIFICATION	1.937424800526966E-5	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.999429658191477	WITHOUT_CLASSIFICATION	5.703418085229213E-4	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999349791446613	WITHOUT_CLASSIFICATION	6.50208553386974E-5	DOCUMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9987757044524715	WITHOUT_CLASSIFICATION	0.0012242955475284007	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999242679537578	WITHOUT_CLASSIFICATION	7.573204624221443E-5	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999823394399081	WITHOUT_CLASSIFICATION	1.7660560091922457E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999282983097127	WITHOUT_CLASSIFICATION	7.170169028726794E-5	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999990347893704	WITHOUT_CLASSIFICATION	9.652106296309076E-7	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9997066822228033	WITHOUT_CLASSIFICATION	2.9331777719657193E-4	DOCUMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9999975994481117	WITHOUT_CLASSIFICATION	2.4005518882193793E-6	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9999918250433091	WITHOUT_CLASSIFICATION	8.174956690958777E-6	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999942385069288	WITHOUT_CLASSIFICATION	5.76149307120693E-6	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9999816322285165	WITHOUT_CLASSIFICATION	1.8367771483456727E-5	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9987216768178115	WITHOUT_CLASSIFICATION	0.001278323182188461	DOCUMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999903698307749	WITHOUT_CLASSIFICATION	9.630169224965922E-6	DOCUMENTATION
//use the id column alias	WITHOUT_CLASSIFICATION	0.9996196921390575	WITHOUT_CLASSIFICATION	3.803078609424086E-4	DOCUMENTATION
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9996647731845546	WITHOUT_CLASSIFICATION	3.3522681544540656E-4	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9987328183050206	WITHOUT_CLASSIFICATION	0.001267181694979328	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9997770649538457	WITHOUT_CLASSIFICATION	2.2293504615420487E-4	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9999963928404569	WITHOUT_CLASSIFICATION	3.6071595430087603E-6	DOCUMENTATION
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9984965624556371	WITHOUT_CLASSIFICATION	0.0015034375443628287	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999925995279134	WITHOUT_CLASSIFICATION	7.400472086549059E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999925995279134	WITHOUT_CLASSIFICATION	7.400472086549059E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9995944341795612	WITHOUT_CLASSIFICATION	4.055658204388904E-4	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999993648982817	WITHOUT_CLASSIFICATION	6.351017183904389E-7	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.99885076046664	WITHOUT_CLASSIFICATION	0.0011492395333599864	DOCUMENTATION
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9986884881756656	WITHOUT_CLASSIFICATION	0.0013115118243343707	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999691473598743	WITHOUT_CLASSIFICATION	3.085264012574417E-5	DOCUMENTATION
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999134781403651	WITHOUT_CLASSIFICATION	8.652185963485833E-5	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999778370336136	WITHOUT_CLASSIFICATION	2.2162966386285728E-5	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999997274158486	WITHOUT_CLASSIFICATION	2.725841514041112E-7	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9998456923334369	WITHOUT_CLASSIFICATION	1.543076665631611E-4	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999975434578591	WITHOUT_CLASSIFICATION	2.4565421409089723E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999365744452636	WITHOUT_CLASSIFICATION	6.34255547363096E-5	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9999998540405398	WITHOUT_CLASSIFICATION	1.4595946012218103E-7	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.9999285205772767	WITHOUT_CLASSIFICATION	7.147942272332001E-5	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999982163889517	WITHOUT_CLASSIFICATION	1.7836110483045503E-6	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9999941860352188	WITHOUT_CLASSIFICATION	5.813964781181297E-6	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999887649084185	WITHOUT_CLASSIFICATION	1.1235091581564897E-5	DOCUMENTATION
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.9999751483043171	WITHOUT_CLASSIFICATION	2.48516956828168E-5	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999453901063096	WITHOUT_CLASSIFICATION	5.46098936903928E-5	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9998345918691667	WITHOUT_CLASSIFICATION	1.654081308333213E-4	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9999959845047667	WITHOUT_CLASSIFICATION	4.015495233302751E-6	DOCUMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999920738482467	WITHOUT_CLASSIFICATION	7.926151753243831E-6	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.999999971588014	WITHOUT_CLASSIFICATION	2.8411986041579906E-8	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999998631845114	WITHOUT_CLASSIFICATION	1.3681548858500465E-7	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.9999998208351762	WITHOUT_CLASSIFICATION	1.791648237422903E-7	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9997525278546994	WITHOUT_CLASSIFICATION	2.4747214530070646E-4	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9997525278546994	WITHOUT_CLASSIFICATION	2.4747214530070646E-4	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999828410004186	WITHOUT_CLASSIFICATION	1.7158999581407203E-5	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999791713832133	WITHOUT_CLASSIFICATION	2.0828616786616282E-5	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999921869107029	WITHOUT_CLASSIFICATION	7.813089297137633E-6	DOCUMENTATION
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999998972871934	WITHOUT_CLASSIFICATION	1.0271280653192483E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998604243611299	WITHOUT_CLASSIFICATION	1.3957563887008397E-4	DOCUMENTATION
//TODO find a decent name before documenting	DOCUMENTATION	0.999224625653223	WITHOUT_CLASSIFICATION	7.753743467770615E-4	DOCUMENTATION
