//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999181593861333	WITHOUT_CLASSIFICATION	8.184061386671064E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998646896617	WITHOUT_CLASSIFICATION	1.3531033829997124E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998646896617	WITHOUT_CLASSIFICATION	1.3531033829997124E-4	DOCUMENTATION
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9995248124451422	WITHOUT_CLASSIFICATION	4.751875548578268E-4	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999821743041966	WITHOUT_CLASSIFICATION	1.7825695803415423E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999415178852223	WITHOUT_CLASSIFICATION	5.8482114777695134E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999415178852223	WITHOUT_CLASSIFICATION	5.8482114777695134E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999231230252729	WITHOUT_CLASSIFICATION	7.687697472714961E-5	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999542107760284	WITHOUT_CLASSIFICATION	4.5789223971609405E-5	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999920921237566	WITHOUT_CLASSIFICATION	7.907876243409966E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999841796212251	WITHOUT_CLASSIFICATION	1.582037877484931E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9998913749775252	WITHOUT_CLASSIFICATION	1.0862502247480102E-4	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9998913749775252	WITHOUT_CLASSIFICATION	1.0862502247480102E-4	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9998336000525943	WITHOUT_CLASSIFICATION	1.663999474057268E-4	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9999964457089846	WITHOUT_CLASSIFICATION	3.554291015389063E-6	DOCUMENTATION
// decode row selection...	WITHOUT_CLASSIFICATION	0.9999665751656854	WITHOUT_CLASSIFICATION	3.342483431461556E-5	DOCUMENTATION
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999403815750256	WITHOUT_CLASSIFICATION	5.96184249742548E-5	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999986807660318	WITHOUT_CLASSIFICATION	1.31923396814487E-6	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.99983213645368	WITHOUT_CLASSIFICATION	1.678635463199879E-4	DOCUMENTATION
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.999428383004188	WITHOUT_CLASSIFICATION	5.716169958120442E-4	DOCUMENTATION
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.999992616459324	WITHOUT_CLASSIFICATION	7.383540675905003E-6	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999775158013314	WITHOUT_CLASSIFICATION	2.248419866866822E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999775158013314	WITHOUT_CLASSIFICATION	2.248419866866822E-5	DOCUMENTATION
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.999995301898215	WITHOUT_CLASSIFICATION	4.698101785071618E-6	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9998313116208681	WITHOUT_CLASSIFICATION	1.686883791319562E-4	DOCUMENTATION
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9985998263175857	WITHOUT_CLASSIFICATION	0.0014001736824143147	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999507855886048	WITHOUT_CLASSIFICATION	4.921441139516139E-5	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.999728437821395	WITHOUT_CLASSIFICATION	2.7156217860503255E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9398779980145403	DOCUMENTATION	0.060122001985459625	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9398779980145403	DOCUMENTATION	0.060122001985459625	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.999928834136863	WITHOUT_CLASSIFICATION	7.116586313698211E-5	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999988165791153	WITHOUT_CLASSIFICATION	1.1834208847111597E-6	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999998845359559	WITHOUT_CLASSIFICATION	1.1546404409953108E-7	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9998971505198546	WITHOUT_CLASSIFICATION	1.0284948014545491E-4	DOCUMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999528739255954	WITHOUT_CLASSIFICATION	4.7126074404675274E-5	DOCUMENTATION
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999950684309017	WITHOUT_CLASSIFICATION	4.931569098304171E-5	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999507172995814	WITHOUT_CLASSIFICATION	4.928270041855182E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999872719855013	WITHOUT_CLASSIFICATION	1.2728014498710588E-5	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9970229753135528	WITHOUT_CLASSIFICATION	0.0029770246864473204	DOCUMENTATION
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9999918292338696	WITHOUT_CLASSIFICATION	8.170766130348384E-6	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9996057902314582	WITHOUT_CLASSIFICATION	3.942097685417878E-4	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9970229753135528	WITHOUT_CLASSIFICATION	0.0029770246864473204	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9996057902314582	WITHOUT_CLASSIFICATION	3.942097685417878E-4	DOCUMENTATION
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.99975998725864	WITHOUT_CLASSIFICATION	2.4001274135986893E-4	DOCUMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9999998686586848	WITHOUT_CLASSIFICATION	1.3134131520074005E-7	DOCUMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999637967018422	WITHOUT_CLASSIFICATION	3.6203298157878824E-5	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999982832699857	WITHOUT_CLASSIFICATION	1.7167300141965841E-6	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999883060939176	WITHOUT_CLASSIFICATION	1.169390608231845E-5	DOCUMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999998752170391	WITHOUT_CLASSIFICATION	1.2478296080908532E-7	DOCUMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9979521254951135	WITHOUT_CLASSIFICATION	0.0020478745048864723	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9999824984633986	WITHOUT_CLASSIFICATION	1.7501536601420925E-5	DOCUMENTATION
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999991616586053	WITHOUT_CLASSIFICATION	8.383413948194284E-7	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9999386217534179	WITHOUT_CLASSIFICATION	6.137824658213924E-5	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9999877222853472	WITHOUT_CLASSIFICATION	1.2277714652932257E-5	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.999977712922735	WITHOUT_CLASSIFICATION	2.2287077264983E-5	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999997321407303	WITHOUT_CLASSIFICATION	2.6785926972322835E-7	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9999772956733611	WITHOUT_CLASSIFICATION	2.2704326638806008E-5	DOCUMENTATION
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9999997699552283	WITHOUT_CLASSIFICATION	2.3004477158453475E-7	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.99999302078111	WITHOUT_CLASSIFICATION	6.979218890051727E-6	DOCUMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9999904930746587	WITHOUT_CLASSIFICATION	9.506925341264694E-6	DOCUMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.999999170710029	WITHOUT_CLASSIFICATION	8.292899711191017E-7	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999891287404294	WITHOUT_CLASSIFICATION	1.0871259570570277E-5	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999955487771508	WITHOUT_CLASSIFICATION	4.4512228492618315E-6	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999884474045291	WITHOUT_CLASSIFICATION	1.1552595470836079E-5	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999998274660381	WITHOUT_CLASSIFICATION	1.7253396184238927E-7	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999948527060472	WITHOUT_CLASSIFICATION	5.147293952839629E-6	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999317020395376	WITHOUT_CLASSIFICATION	6.82979604624456E-5	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9999998024551555	WITHOUT_CLASSIFICATION	1.9754484448792587E-7	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.999954899584108	WITHOUT_CLASSIFICATION	4.5100415892048094E-5	DOCUMENTATION
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999983662595051	WITHOUT_CLASSIFICATION	1.6337404948931133E-6	DOCUMENTATION
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9999861602659315	WITHOUT_CLASSIFICATION	1.3839734068573845E-5	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.999991415375885	WITHOUT_CLASSIFICATION	8.584624115020413E-6	DOCUMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999637564199766	WITHOUT_CLASSIFICATION	3.624358002343838E-5	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.999992546460397	WITHOUT_CLASSIFICATION	7.45353960295653E-6	DOCUMENTATION
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999502819150121	WITHOUT_CLASSIFICATION	4.971808498776477E-5	DOCUMENTATION
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999936998952154	WITHOUT_CLASSIFICATION	6.300104784653458E-6	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999652029058966	WITHOUT_CLASSIFICATION	3.4797094103336105E-5	DOCUMENTATION
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999910882420119	WITHOUT_CLASSIFICATION	8.911757988105005E-6	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999990908924448	WITHOUT_CLASSIFICATION	9.091075552569012E-7	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999652029058966	WITHOUT_CLASSIFICATION	3.4797094103336105E-5	DOCUMENTATION
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.99999910446425	WITHOUT_CLASSIFICATION	8.955357499130272E-7	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.9998342812996748	WITHOUT_CLASSIFICATION	1.657187003251348E-4	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999904539845789	WITHOUT_CLASSIFICATION	9.546015421182316E-6	DOCUMENTATION
// construct the cache	WITHOUT_CLASSIFICATION	0.9999863947281992	WITHOUT_CLASSIFICATION	1.3605271800821192E-5	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999053852063368	WITHOUT_CLASSIFICATION	9.461479366329276E-5	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999053852063368	WITHOUT_CLASSIFICATION	9.461479366329276E-5	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9996059621593352	WITHOUT_CLASSIFICATION	3.940378406647202E-4	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999991401512923	WITHOUT_CLASSIFICATION	8.598487077407765E-7	DOCUMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9996476047381307	WITHOUT_CLASSIFICATION	3.523952618693039E-4	DOCUMENTATION
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999959509864245	WITHOUT_CLASSIFICATION	4.0490135754821145E-6	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.999999253000381	WITHOUT_CLASSIFICATION	7.469996190490331E-7	DOCUMENTATION
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999965064166112	WITHOUT_CLASSIFICATION	3.49358338870833E-6	DOCUMENTATION
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.99999443065307	WITHOUT_CLASSIFICATION	5.569346930038378E-6	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9999887575106114	WITHOUT_CLASSIFICATION	1.1242489388513404E-5	DOCUMENTATION
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999847250494331	WITHOUT_CLASSIFICATION	1.527495056682879E-5	DOCUMENTATION
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999777463184851	WITHOUT_CLASSIFICATION	2.2253681514879194E-5	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999951477854354	WITHOUT_CLASSIFICATION	4.852214564578411E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999951477854354	WITHOUT_CLASSIFICATION	4.852214564578411E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999878852672228	WITHOUT_CLASSIFICATION	1.211473277716135E-5	DOCUMENTATION
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999859445764432	WITHOUT_CLASSIFICATION	1.4055423556764914E-5	DOCUMENTATION
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9999872745362866	WITHOUT_CLASSIFICATION	1.2725463713561323E-5	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999951477854354	WITHOUT_CLASSIFICATION	4.852214564578411E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999878852672228	WITHOUT_CLASSIFICATION	1.211473277716135E-5	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999878852672228	WITHOUT_CLASSIFICATION	1.211473277716135E-5	DOCUMENTATION
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9999884385708476	WITHOUT_CLASSIFICATION	1.1561429152375468E-5	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9999686348153557	WITHOUT_CLASSIFICATION	3.1365184644321814E-5	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999965983128567	WITHOUT_CLASSIFICATION	3.4016871433409808E-6	DOCUMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999959906476621	WITHOUT_CLASSIFICATION	4.009352337945945E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999960499264562	WITHOUT_CLASSIFICATION	3.9500735438575115E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999960499264562	WITHOUT_CLASSIFICATION	3.9500735438575115E-6	DOCUMENTATION
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9992728529040327	WITHOUT_CLASSIFICATION	7.271470959673129E-4	DOCUMENTATION
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9991713291242742	WITHOUT_CLASSIFICATION	8.286708757258683E-4	DOCUMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999802116485023	WITHOUT_CLASSIFICATION	1.9788351497671458E-5	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999736693012086	WITHOUT_CLASSIFICATION	2.6330698791474325E-5	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999736693012086	WITHOUT_CLASSIFICATION	2.6330698791474325E-5	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9992613301049997	WITHOUT_CLASSIFICATION	7.386698950002043E-4	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999934394295518	WITHOUT_CLASSIFICATION	6.560570448297643E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.999356935718297	WITHOUT_CLASSIFICATION	6.430642817029927E-4	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999998136996769	WITHOUT_CLASSIFICATION	1.8630032313864315E-7	DOCUMENTATION
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.999922271949579	WITHOUT_CLASSIFICATION	7.772805042109168E-5	DOCUMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999974971610518	WITHOUT_CLASSIFICATION	2.5028389481958766E-6	DOCUMENTATION
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9991276833219918	WITHOUT_CLASSIFICATION	8.723166780082635E-4	DOCUMENTATION
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9999947761240048	WITHOUT_CLASSIFICATION	5.22387599521764E-6	DOCUMENTATION
//sort first by role name	WITHOUT_CLASSIFICATION	0.9997742131938075	WITHOUT_CLASSIFICATION	2.257868061923606E-4	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.999356935718297	WITHOUT_CLASSIFICATION	6.430642817029927E-4	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9997844327831943	WITHOUT_CLASSIFICATION	2.1556721680570027E-4	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999921026804798	WITHOUT_CLASSIFICATION	7.897319520155557E-6	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999921026804798	WITHOUT_CLASSIFICATION	7.897319520155557E-6	DOCUMENTATION
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999995539415844	WITHOUT_CLASSIFICATION	4.460584156232388E-7	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999980948808964	WITHOUT_CLASSIFICATION	1.9051191035339786E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999932859234321	WITHOUT_CLASSIFICATION	6.714076567995876E-6	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.993450453166534	WITHOUT_CLASSIFICATION	0.006549546833465893	DOCUMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9997737922737548	WITHOUT_CLASSIFICATION	2.2620772624520392E-4	DOCUMENTATION
//then by id	WITHOUT_CLASSIFICATION	0.9997899047941566	WITHOUT_CLASSIFICATION	2.1009520584337591E-4	DOCUMENTATION
// to be safe...	WITHOUT_CLASSIFICATION	0.9999980633618168	WITHOUT_CLASSIFICATION	1.9366381832443054E-6	DOCUMENTATION
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.999983435593268	WITHOUT_CLASSIFICATION	1.6564406731989983E-5	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999942444300076	WITHOUT_CLASSIFICATION	5.75556999231466E-6	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999942444300076	WITHOUT_CLASSIFICATION	5.75556999231466E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999033526360172	WITHOUT_CLASSIFICATION	9.664736398279297E-5	DOCUMENTATION
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999181593861333	WITHOUT_CLASSIFICATION	8.184061386671064E-5	DOCUMENTATION
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999900065411923	WITHOUT_CLASSIFICATION	9.993458807744456E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// invokespecial	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998646896617	WITHOUT_CLASSIFICATION	1.3531033829997124E-4	DOCUMENTATION
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999673671286085	WITHOUT_CLASSIFICATION	3.263287139144111E-5	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999654433337849	WITHOUT_CLASSIFICATION	3.4556666215085925E-5	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999664054191278	WITHOUT_CLASSIFICATION	3.3594580872076896E-5	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999789551483507	WITHOUT_CLASSIFICATION	2.1044851649430764E-5	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9999764785694676	WITHOUT_CLASSIFICATION	2.3521430532500286E-5	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9998860777029885	WITHOUT_CLASSIFICATION	1.1392229701140409E-4	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9998317393936422	WITHOUT_CLASSIFICATION	1.6826060635785994E-4	DOCUMENTATION
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999812550433764	WITHOUT_CLASSIFICATION	1.874495662353265E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// aastore // args	WITHOUT_CLASSIFICATION	0.9999789551483507	WITHOUT_CLASSIFICATION	2.1044851649430764E-5	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9995519862221546	WITHOUT_CLASSIFICATION	4.480137778454711E-4	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999824317923095	WITHOUT_CLASSIFICATION	1.756820769050199E-5	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999665164154548	WITHOUT_CLASSIFICATION	3.348358454528226E-5	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999866387115058	WITHOUT_CLASSIFICATION	1.3361288494135034E-5	DOCUMENTATION
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999968419440044	WITHOUT_CLASSIFICATION	3.158055995488825E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999415178852223	WITHOUT_CLASSIFICATION	5.8482114777695134E-5	DOCUMENTATION
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999793460789624	WITHOUT_CLASSIFICATION	2.0653921037564908E-5	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.999979089673405	WITHOUT_CLASSIFICATION	2.0910326594961204E-5	DOCUMENTATION
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999826846068349	WITHOUT_CLASSIFICATION	1.731539316512365E-5	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999874905098989	WITHOUT_CLASSIFICATION	1.2509490101203624E-5	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// aaload	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999775074270042	WITHOUT_CLASSIFICATION	2.2492572995785284E-5	DOCUMENTATION
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999619822449985	WITHOUT_CLASSIFICATION	3.8017755001413336E-5	DOCUMENTATION
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999650133449224	WITHOUT_CLASSIFICATION	3.498665507760439E-5	DOCUMENTATION
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.999956728258675	WITHOUT_CLASSIFICATION	4.3271741324895885E-5	DOCUMENTATION
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999852248915518	WITHOUT_CLASSIFICATION	1.47751084482294E-5	DOCUMENTATION
// register in exception table	WITHOUT_CLASSIFICATION	0.9999376082286948	WITHOUT_CLASSIFICATION	6.239177130521927E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998646896617	WITHOUT_CLASSIFICATION	1.3531033829997124E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998646896617	WITHOUT_CLASSIFICATION	1.3531033829997124E-4	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9998317393936422	WITHOUT_CLASSIFICATION	1.6826060635785994E-4	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999775074270042	WITHOUT_CLASSIFICATION	2.2492572995785284E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999231230252729	WITHOUT_CLASSIFICATION	7.687697472714961E-5	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999688993125525	WITHOUT_CLASSIFICATION	3.110068744756474E-5	DOCUMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9999666865464601	WITHOUT_CLASSIFICATION	3.331345353986853E-5	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999697896316948	WITHOUT_CLASSIFICATION	3.0210368305155522E-5	DOCUMENTATION
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999775964391419	WITHOUT_CLASSIFICATION	2.2403560858131577E-5	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999434482207117	WITHOUT_CLASSIFICATION	5.655177928829959E-5	DOCUMENTATION
//swallow	WITHOUT_CLASSIFICATION	0.9970229753135528	WITHOUT_CLASSIFICATION	0.0029770246864473204	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9996940791201698	WITHOUT_CLASSIFICATION	3.059208798301947E-4	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.99993634722454	WITHOUT_CLASSIFICATION	6.365277545997466E-5	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.99993634722454	WITHOUT_CLASSIFICATION	6.365277545997466E-5	DOCUMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999734080300784	WITHOUT_CLASSIFICATION	2.6591969921663588E-5	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999906072934129	WITHOUT_CLASSIFICATION	9.39270658715508E-6	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9995983276162913	WITHOUT_CLASSIFICATION	4.016723837087313E-4	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999673603890415	WITHOUT_CLASSIFICATION	3.2639610958515106E-5	DOCUMENTATION
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.999966387989593	WITHOUT_CLASSIFICATION	3.361201040700863E-5	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999751853031682	WITHOUT_CLASSIFICATION	2.4814696831826226E-5	DOCUMENTATION
// getfield // get each field	WITHOUT_CLASSIFICATION	0.99998044659121	WITHOUT_CLASSIFICATION	1.955340879005421E-5	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999542107760284	WITHOUT_CLASSIFICATION	4.5789223971609405E-5	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999776478708067	WITHOUT_CLASSIFICATION	2.2352129193362316E-5	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999776478708067	WITHOUT_CLASSIFICATION	2.2352129193362316E-5	DOCUMENTATION
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999776478708067	WITHOUT_CLASSIFICATION	2.2352129193362316E-5	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999923252334841	WITHOUT_CLASSIFICATION	7.674766515879194E-6	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999776478708067	WITHOUT_CLASSIFICATION	2.2352129193362316E-5	DOCUMENTATION
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.9999707409468666	WITHOUT_CLASSIFICATION	2.9259053133471044E-5	DOCUMENTATION
// int	WITHOUT_CLASSIFICATION	0.9998381590681308	WITHOUT_CLASSIFICATION	1.618409318693395E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998646896617	WITHOUT_CLASSIFICATION	1.3531033829997124E-4	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9998317393936422	WITHOUT_CLASSIFICATION	1.6826060635785994E-4	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999775074270042	WITHOUT_CLASSIFICATION	2.2492572995785284E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999775074270042	WITHOUT_CLASSIFICATION	2.2492572995785284E-5	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.999965019693593	WITHOUT_CLASSIFICATION	3.498030640700816E-5	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.9999819975173383	WITHOUT_CLASSIFICATION	1.8002482661703107E-5	DOCUMENTATION
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999846672210615	WITHOUT_CLASSIFICATION	1.533277893853087E-5	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.9999886266449668	WITHOUT_CLASSIFICATION	1.137335503311417E-5	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999841796212251	WITHOUT_CLASSIFICATION	1.582037877484931E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999841796212251	WITHOUT_CLASSIFICATION	1.582037877484931E-5	DOCUMENTATION
// not array	WITHOUT_CLASSIFICATION	0.9999886407977291	WITHOUT_CLASSIFICATION	1.1359202270816206E-5	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.999982781591691	WITHOUT_CLASSIFICATION	1.7218408309016318E-5	DOCUMENTATION
// boolean	WITHOUT_CLASSIFICATION	0.9998404031665957	WITHOUT_CLASSIFICATION	1.595968334042979E-4	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9998349274997993	WITHOUT_CLASSIFICATION	1.650725002006348E-4	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9998329951759042	WITHOUT_CLASSIFICATION	1.6700482409586382E-4	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9998317586847341	WITHOUT_CLASSIFICATION	1.682413152658886E-4	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9998913749775252	WITHOUT_CLASSIFICATION	1.0862502247480102E-4	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9998314392425255	WITHOUT_CLASSIFICATION	1.6856075747457801E-4	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9998314392425255	WITHOUT_CLASSIFICATION	1.6856075747457801E-4	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9998336000525943	WITHOUT_CLASSIFICATION	1.663999474057268E-4	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9998336000525943	WITHOUT_CLASSIFICATION	1.663999474057268E-4	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999825688735793	WITHOUT_CLASSIFICATION	1.74311264207019E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999825688735793	WITHOUT_CLASSIFICATION	1.74311264207019E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999517870703304	WITHOUT_CLASSIFICATION	4.8212929669518226E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999517870703304	WITHOUT_CLASSIFICATION	4.8212929669518226E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999841796212251	WITHOUT_CLASSIFICATION	1.582037877484931E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9998913749775252	WITHOUT_CLASSIFICATION	1.0862502247480102E-4	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9998314392425255	WITHOUT_CLASSIFICATION	1.6856075747457801E-4	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9998314392425255	WITHOUT_CLASSIFICATION	1.6856075747457801E-4	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9998336000525943	WITHOUT_CLASSIFICATION	1.663999474057268E-4	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999825688735793	WITHOUT_CLASSIFICATION	1.74311264207019E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999825688735793	WITHOUT_CLASSIFICATION	1.74311264207019E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999517870703304	WITHOUT_CLASSIFICATION	4.8212929669518226E-5	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.999971138666417	WITHOUT_CLASSIFICATION	2.88613335830073E-5	DOCUMENTATION
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9995622758522861	WITHOUT_CLASSIFICATION	4.3772414771399627E-4	DOCUMENTATION
//decrement the lock	WITHOUT_CLASSIFICATION	0.9998380041558926	WITHOUT_CLASSIFICATION	1.619958441074101E-4	DOCUMENTATION
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999772042591363	WITHOUT_CLASSIFICATION	2.2795740863715216E-5	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9997267941346626	WITHOUT_CLASSIFICATION	2.7320586533735667E-4	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9998313652598686	WITHOUT_CLASSIFICATION	1.6863474013147404E-4	DOCUMENTATION
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9986639487018361	WITHOUT_CLASSIFICATION	0.0013360512981638454	DOCUMENTATION
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9999998109591699	WITHOUT_CLASSIFICATION	1.890408301122214E-7	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9979846098778115	WITHOUT_CLASSIFICATION	0.0020153901221885884	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.999995182945875	WITHOUT_CLASSIFICATION	4.817054125049401E-6	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999522408421863	WITHOUT_CLASSIFICATION	4.7759157813639416E-5	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999594431337827	WITHOUT_CLASSIFICATION	4.0556866217389405E-5	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9996059621593352	WITHOUT_CLASSIFICATION	3.940378406647202E-4	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9998313652598686	WITHOUT_CLASSIFICATION	1.6863474013147404E-4	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9970229753135528	WITHOUT_CLASSIFICATION	0.0029770246864473204	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9970229753135528	WITHOUT_CLASSIFICATION	0.0029770246864473204	DOCUMENTATION
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999917270132291	WITHOUT_CLASSIFICATION	8.27298677096616E-6	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999060111468044	WITHOUT_CLASSIFICATION	9.3988853195456E-5	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999060111468044	WITHOUT_CLASSIFICATION	9.3988853195456E-5	DOCUMENTATION
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9999484846487537	WITHOUT_CLASSIFICATION	5.1515351246342034E-5	DOCUMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999579557298155	WITHOUT_CLASSIFICATION	4.204427018445552E-5	DOCUMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.9994606056949141	WITHOUT_CLASSIFICATION	5.393943050859141E-4	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999962557499031	WITHOUT_CLASSIFICATION	3.7442500968458646E-6	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999962557499031	WITHOUT_CLASSIFICATION	3.7442500968458646E-6	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999986807660318	WITHOUT_CLASSIFICATION	1.31923396814487E-6	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999987353013085	WITHOUT_CLASSIFICATION	1.264698691575604E-6	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999987353013085	WITHOUT_CLASSIFICATION	1.264698691575604E-6	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999680202162973	WITHOUT_CLASSIFICATION	3.1979783702709614E-5	DOCUMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999895808703803	WITHOUT_CLASSIFICATION	1.0419129619816421E-5	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.999992616459324	WITHOUT_CLASSIFICATION	7.383540675905003E-6	DOCUMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// MUTABLE	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// TODO:	WITHOUT_CLASSIFICATION	0.9811117143410093	WITHOUT_CLASSIFICATION	0.01888828565899071	DOCUMENTATION
// ID	WITHOUT_CLASSIFICATION	0.99983213645368	WITHOUT_CLASSIFICATION	1.678635463199879E-4	DOCUMENTATION
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999718865707362	WITHOUT_CLASSIFICATION	2.8113429263827693E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999689783349366	WITHOUT_CLASSIFICATION	3.102166506344512E-5	DOCUMENTATION
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999785212795617	WITHOUT_CLASSIFICATION	2.1478720438389304E-5	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999975844975574	WITHOUT_CLASSIFICATION	2.415502442607462E-6	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999507855886048	WITHOUT_CLASSIFICATION	4.921441139516139E-5	DOCUMENTATION
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999973879142462	WITHOUT_CLASSIFICATION	2.6120857538637943E-6	DOCUMENTATION
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// IMPORT	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.999965019693593	WITHOUT_CLASSIFICATION	3.498030640700816E-5	DOCUMENTATION
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.999965019693593	WITHOUT_CLASSIFICATION	3.498030640700816E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999775261344801	WITHOUT_CLASSIFICATION	2.2473865519994444E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.999992616459324	WITHOUT_CLASSIFICATION	7.383540675905003E-6	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999790252369504	WITHOUT_CLASSIFICATION	2.0974763049608423E-5	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999777831281104	WITHOUT_CLASSIFICATION	2.2216871889655203E-5	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9998313870674829	WITHOUT_CLASSIFICATION	1.6861293251701565E-4	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999775261344801	WITHOUT_CLASSIFICATION	2.2473865519994444E-5	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999790252369504	WITHOUT_CLASSIFICATION	2.0974763049608423E-5	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9998313870674829	WITHOUT_CLASSIFICATION	1.6861293251701565E-4	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999752112116687	WITHOUT_CLASSIFICATION	2.478878833124102E-5	DOCUMENTATION
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999752112116687	WITHOUT_CLASSIFICATION	2.478878833124102E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999775158013314	WITHOUT_CLASSIFICATION	2.248419866866822E-5	DOCUMENTATION
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// column index	WITHOUT_CLASSIFICATION	0.999979482283957	WITHOUT_CLASSIFICATION	2.0517716042928882E-5	DOCUMENTATION
//column unique-key	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9999998478328832	WITHOUT_CLASSIFICATION	1.521671166779469E-7	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999812197044231	WITHOUT_CLASSIFICATION	1.8780295576843325E-5	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999991582379709	WITHOUT_CLASSIFICATION	8.417620291122308E-7	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999875251306273	WITHOUT_CLASSIFICATION	1.2474869372678207E-5	DOCUMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999958206141004	WITHOUT_CLASSIFICATION	4.179385899628575E-6	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999985988868584	WITHOUT_CLASSIFICATION	1.4011131415734495E-6	DOCUMENTATION
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999875251306273	WITHOUT_CLASSIFICATION	1.2474869372678207E-5	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9998313116208681	WITHOUT_CLASSIFICATION	1.686883791319562E-4	DOCUMENTATION
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9998088529016576	WITHOUT_CLASSIFICATION	1.9114709834241905E-4	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999775261344801	WITHOUT_CLASSIFICATION	2.2473865519994444E-5	DOCUMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999514978127568	WITHOUT_CLASSIFICATION	4.850218724305865E-5	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.9999753574782662	WITHOUT_CLASSIFICATION	2.464252173383582E-5	DOCUMENTATION
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9999892472003479	WITHOUT_CLASSIFICATION	1.0752799652098735E-5	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999938167274298	WITHOUT_CLASSIFICATION	6.183272570162328E-6	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999762963929199	WITHOUT_CLASSIFICATION	2.3703607080210436E-5	DOCUMENTATION
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.999998130504403	WITHOUT_CLASSIFICATION	1.8694955969699554E-6	DOCUMENTATION
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999921657536864	WITHOUT_CLASSIFICATION	7.83424631359567E-6	DOCUMENTATION
//lazy = !join;	WITHOUT_CLASSIFICATION	0.999839390957835	WITHOUT_CLASSIFICATION	1.6060904216485582E-4	DOCUMENTATION
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999776307141304	WITHOUT_CLASSIFICATION	2.2369285869742844E-5	DOCUMENTATION
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.999965019693593	WITHOUT_CLASSIFICATION	3.498030640700816E-5	DOCUMENTATION
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9999944846817274	WITHOUT_CLASSIFICATION	5.515318272663608E-6	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999507855886048	WITHOUT_CLASSIFICATION	4.921441139516139E-5	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.9999657270790636	WITHOUT_CLASSIFICATION	3.427292093636225E-5	DOCUMENTATION
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999571667035976	WITHOUT_CLASSIFICATION	4.283329640246386E-5	DOCUMENTATION
// Bind the where	WITHOUT_CLASSIFICATION	0.9999909961728025	WITHOUT_CLASSIFICATION	9.003827197485356E-6	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999907932337762	WITHOUT_CLASSIFICATION	9.206766223781371E-6	DOCUMENTATION
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999908173824783	WITHOUT_CLASSIFICATION	9.182617521783716E-6	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999608114871777	WITHOUT_CLASSIFICATION	3.9188512822139014E-5	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999997458823046	WITHOUT_CLASSIFICATION	2.5411769550362663E-7	DOCUMENTATION
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9999961207947221	WITHOUT_CLASSIFICATION	3.879205277946195E-6	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9995831134290208	WITHOUT_CLASSIFICATION	4.168865709792226E-4	DOCUMENTATION
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9994699939516256	WITHOUT_CLASSIFICATION	5.300060483743937E-4	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9995362644398199	WITHOUT_CLASSIFICATION	4.637355601801509E-4	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9995362644398199	WITHOUT_CLASSIFICATION	4.637355601801509E-4	DOCUMENTATION
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9993831565365044	WITHOUT_CLASSIFICATION	6.168434634956172E-4	DOCUMENTATION
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999682058124069	WITHOUT_CLASSIFICATION	3.179418759313838E-5	DOCUMENTATION
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9992776142009205	WITHOUT_CLASSIFICATION	7.223857990793834E-4	DOCUMENTATION
// Transaction settings:	WITHOUT_CLASSIFICATION	0.9999662432804729	WITHOUT_CLASSIFICATION	3.375671952704856E-5	DOCUMENTATION
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.999384687546082	WITHOUT_CLASSIFICATION	6.153124539179449E-4	DOCUMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9993846084145882	WITHOUT_CLASSIFICATION	6.153915854118031E-4	DOCUMENTATION
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999729321326387	WITHOUT_CLASSIFICATION	2.7067867361224097E-5	DOCUMENTATION
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9999592279898343	WITHOUT_CLASSIFICATION	4.077201016580307E-5	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9994262814265568	WITHOUT_CLASSIFICATION	5.737185734432801E-4	DOCUMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.999664078513745	WITHOUT_CLASSIFICATION	3.3592148625495865E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9999801213478401	WITHOUT_CLASSIFICATION	1.9878652159891454E-5	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9999860740812674	WITHOUT_CLASSIFICATION	1.392591873261738E-5	DOCUMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9996931078345741	WITHOUT_CLASSIFICATION	3.068921654258582E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999586502492953	WITHOUT_CLASSIFICATION	4.134975070467972E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999525757837762	WITHOUT_CLASSIFICATION	4.742421622393142E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999981274917592	WITHOUT_CLASSIFICATION	1.8725082408666914E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999979078557877	WITHOUT_CLASSIFICATION	2.0921442123145445E-6	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9998506208251839	WITHOUT_CLASSIFICATION	1.4937917481604984E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999994485504814	WITHOUT_CLASSIFICATION	5.514495186576675E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9998007744418005	WITHOUT_CLASSIFICATION	1.9922555819962536E-4	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9998007744418005	WITHOUT_CLASSIFICATION	1.9922555819962536E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9996024492002473	WITHOUT_CLASSIFICATION	3.975507997526359E-4	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9996024492002473	WITHOUT_CLASSIFICATION	3.975507997526359E-4	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9995831134290208	WITHOUT_CLASSIFICATION	4.168865709792226E-4	DOCUMENTATION
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9995935133614795	WITHOUT_CLASSIFICATION	4.064866385204409E-4	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9996295784355206	WITHOUT_CLASSIFICATION	3.704215644794433E-4	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.999719467537141	WITHOUT_CLASSIFICATION	2.8053246285896747E-4	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999033526360172	WITHOUT_CLASSIFICATION	9.664736398279297E-5	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9996295784355206	WITHOUT_CLASSIFICATION	3.704215644794433E-4	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.999719467537141	WITHOUT_CLASSIFICATION	2.8053246285896747E-4	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9990746180845961	WITHOUT_CLASSIFICATION	9.253819154039839E-4	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999089645620336	WITHOUT_CLASSIFICATION	9.103543796642324E-5	DOCUMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.999997147249335	WITHOUT_CLASSIFICATION	2.852750665080994E-6	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999910481068304	WITHOUT_CLASSIFICATION	8.951893169590825E-6	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9997993196336696	WITHOUT_CLASSIFICATION	2.0068036633029635E-4	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.9996473388639224	WITHOUT_CLASSIFICATION	3.526611360776228E-4	DOCUMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999234158052336	WITHOUT_CLASSIFICATION	7.658419476640122E-5	DOCUMENTATION
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9986132119760603	WITHOUT_CLASSIFICATION	0.0013867880239396653	DOCUMENTATION
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9995541196625047	WITHOUT_CLASSIFICATION	4.458803374952417E-4	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999894303598874	WITHOUT_CLASSIFICATION	1.056964011269186E-5	DOCUMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999418536745889	WITHOUT_CLASSIFICATION	5.814632541112646E-5	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999811000064747	WITHOUT_CLASSIFICATION	1.8899993525239753E-5	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999932197592916	WITHOUT_CLASSIFICATION	6.780240708378348E-6	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9994393408829249	WITHOUT_CLASSIFICATION	5.606591170751617E-4	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999033526360172	WITHOUT_CLASSIFICATION	9.664736398279297E-5	DOCUMENTATION
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9994393408829249	WITHOUT_CLASSIFICATION	5.606591170751617E-4	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.999467248420594	WITHOUT_CLASSIFICATION	5.327515794059884E-4	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.999467248420594	WITHOUT_CLASSIFICATION	5.327515794059884E-4	DOCUMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999927134753692	WITHOUT_CLASSIFICATION	7.286524630806487E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9990746180845961	WITHOUT_CLASSIFICATION	9.253819154039839E-4	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9998717755721778	WITHOUT_CLASSIFICATION	1.2822442782228527E-4	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.9999999436615311	WITHOUT_CLASSIFICATION	5.6338468804033606E-8	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9998676432952199	WITHOUT_CLASSIFICATION	1.323567047801387E-4	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9998571195004647	WITHOUT_CLASSIFICATION	1.428804995351777E-4	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9996305718514287	WITHOUT_CLASSIFICATION	3.6942814857132884E-4	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9990746180845961	WITHOUT_CLASSIFICATION	9.253819154039839E-4	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9998571195004647	WITHOUT_CLASSIFICATION	1.428804995351777E-4	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9996305718514287	WITHOUT_CLASSIFICATION	3.6942814857132884E-4	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.999223741426882	WITHOUT_CLASSIFICATION	7.762585731180435E-4	DOCUMENTATION
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999777822497136	WITHOUT_CLASSIFICATION	2.2217750286424427E-5	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999907336097725	WITHOUT_CLASSIFICATION	9.266390227464017E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9990746180845961	WITHOUT_CLASSIFICATION	9.253819154039839E-4	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9990746180845961	WITHOUT_CLASSIFICATION	9.253819154039839E-4	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.99999391655361	WITHOUT_CLASSIFICATION	6.0834463899894705E-6	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999938547805687	WITHOUT_CLASSIFICATION	6.145219431317811E-6	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9998536207898939	WITHOUT_CLASSIFICATION	1.4637921010608433E-4	DOCUMENTATION
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999945678801491	WITHOUT_CLASSIFICATION	5.432119850937807E-6	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9994580759479461	WITHOUT_CLASSIFICATION	5.41924052053925E-4	DOCUMENTATION
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999983221145888	WITHOUT_CLASSIFICATION	1.6778854112309183E-6	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999968018234338	WITHOUT_CLASSIFICATION	3.1981765663344938E-6	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.999994094122168	WITHOUT_CLASSIFICATION	5.905877832064138E-6	DOCUMENTATION
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999544678597742	WITHOUT_CLASSIFICATION	4.553214022590447E-5	DOCUMENTATION
// then bind it	WITHOUT_CLASSIFICATION	0.9999812085831603	WITHOUT_CLASSIFICATION	1.8791416839733144E-5	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999824586163936	WITHOUT_CLASSIFICATION	1.7541383606377068E-5	DOCUMENTATION
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9999740757351149	WITHOUT_CLASSIFICATION	2.5924264885184602E-5	DOCUMENTATION
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999939699106102	WITHOUT_CLASSIFICATION	6.03008938976306E-6	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9999859398535756	WITHOUT_CLASSIFICATION	1.406014642421697E-5	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999506449401167	WITHOUT_CLASSIFICATION	4.935505988334118E-5	DOCUMENTATION
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999994869606396	WITHOUT_CLASSIFICATION	5.130393604204338E-7	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9998971505198546	WITHOUT_CLASSIFICATION	1.0284948014545491E-4	DOCUMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9995046779190565	WITHOUT_CLASSIFICATION	4.953220809434589E-4	DOCUMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9991790355226536	WITHOUT_CLASSIFICATION	8.209644773463084E-4	DOCUMENTATION
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.999719467537141	WITHOUT_CLASSIFICATION	2.8053246285896747E-4	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9996131616064234	WITHOUT_CLASSIFICATION	3.86838393576598E-4	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9998971505198546	WITHOUT_CLASSIFICATION	1.0284948014545491E-4	DOCUMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9999659339170812	WITHOUT_CLASSIFICATION	3.4066082918692544E-5	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999980018794193	WITHOUT_CLASSIFICATION	1.998120580683441E-6	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9996369556834547	WITHOUT_CLASSIFICATION	3.6304431654534514E-4	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9998239722557413	WITHOUT_CLASSIFICATION	1.7602774425872595E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999608535201214	WITHOUT_CLASSIFICATION	3.914647987860743E-4	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999799438281279	WITHOUT_CLASSIFICATION	2.0056171872121565E-5	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9999927279035138	WITHOUT_CLASSIFICATION	7.2720964861705615E-6	DOCUMENTATION
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999991109478599	WITHOUT_CLASSIFICATION	8.890521400235624E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508047536079	WITHOUT_CLASSIFICATION	4.919524639207663E-5	DOCUMENTATION
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9992887825978334	WITHOUT_CLASSIFICATION	7.112174021667152E-4	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999923080557116	WITHOUT_CLASSIFICATION	7.691944288482646E-6	DOCUMENTATION
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999952833448181	WITHOUT_CLASSIFICATION	4.716655181917908E-6	DOCUMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9999117003000622	WITHOUT_CLASSIFICATION	8.829969993775283E-5	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999821671234135	WITHOUT_CLASSIFICATION	1.7832876586577825E-5	DOCUMENTATION
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999852815117564	WITHOUT_CLASSIFICATION	1.471848824366312E-5	DOCUMENTATION
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9991511765647383	WITHOUT_CLASSIFICATION	8.488234352617875E-4	DOCUMENTATION
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9999996245771146	WITHOUT_CLASSIFICATION	3.754228854145283E-7	DOCUMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9995275462376645	WITHOUT_CLASSIFICATION	4.7245376233560774E-4	DOCUMENTATION
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999774942956103	WITHOUT_CLASSIFICATION	2.2505704389628767E-5	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999962869701967	WITHOUT_CLASSIFICATION	3.7130298032061272E-6	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9995420475982942	WITHOUT_CLASSIFICATION	4.579524017058543E-4	DOCUMENTATION
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.99993252628169	WITHOUT_CLASSIFICATION	6.747371830999328E-5	DOCUMENTATION
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999675419454895	WITHOUT_CLASSIFICATION	3.24580545105257E-5	DOCUMENTATION
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999967294388408	WITHOUT_CLASSIFICATION	3.2705611591966266E-5	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999593190352799	WITHOUT_CLASSIFICATION	4.0680964720140975E-5	DOCUMENTATION
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999951327672488	WITHOUT_CLASSIFICATION	4.8672327511990954E-5	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999580647387893	WITHOUT_CLASSIFICATION	4.1935261210585636E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999580647387893	WITHOUT_CLASSIFICATION	4.1935261210585636E-5	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999580647387893	WITHOUT_CLASSIFICATION	4.1935261210585636E-5	DOCUMENTATION
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999580647387893	WITHOUT_CLASSIFICATION	4.1935261210585636E-5	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9998986088456627	WITHOUT_CLASSIFICATION	1.013911543372751E-4	DOCUMENTATION
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9998889928336644	WITHOUT_CLASSIFICATION	1.1100716633562193E-4	DOCUMENTATION
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999649941355313	WITHOUT_CLASSIFICATION	3.5005864468750186E-5	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999691713240885	WITHOUT_CLASSIFICATION	3.082867591142478E-5	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999958112536694	WITHOUT_CLASSIFICATION	4.188746330605288E-5	DOCUMENTATION
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999640002154764	WITHOUT_CLASSIFICATION	3.599978452357844E-5	DOCUMENTATION
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999580647387893	WITHOUT_CLASSIFICATION	4.1935261210585636E-5	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999580647387893	WITHOUT_CLASSIFICATION	4.1935261210585636E-5	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999581681704608	WITHOUT_CLASSIFICATION	4.183182953925548E-5	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999580647387893	WITHOUT_CLASSIFICATION	4.1935261210585636E-5	DOCUMENTATION
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999688590232377	WITHOUT_CLASSIFICATION	3.114097676235189E-5	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999507292269068	WITHOUT_CLASSIFICATION	4.9270773093190574E-5	DOCUMENTATION
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9999849401700115	WITHOUT_CLASSIFICATION	1.5059829988508782E-5	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999927663864554	WITHOUT_CLASSIFICATION	7.233613544663176E-6	DOCUMENTATION
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999982343325258	WITHOUT_CLASSIFICATION	1.7656674742945013E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9996085131446251	WITHOUT_CLASSIFICATION	3.914868553749985E-4	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9996568552802059	WITHOUT_CLASSIFICATION	3.4314471979406537E-4	DOCUMENTATION
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.999223741426882	WITHOUT_CLASSIFICATION	7.762585731180435E-4	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999650572753318	WITHOUT_CLASSIFICATION	3.494272466823418E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508047536079	WITHOUT_CLASSIFICATION	4.919524639207663E-5	DOCUMENTATION
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999655011756953	WITHOUT_CLASSIFICATION	3.449882430485035E-5	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999776433196854	WITHOUT_CLASSIFICATION	2.235668031463155E-5	DOCUMENTATION
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.999993991561232	WITHOUT_CLASSIFICATION	6.008438767947168E-6	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9999911518735056	WITHOUT_CLASSIFICATION	8.848126494351563E-6	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9999830643635069	WITHOUT_CLASSIFICATION	1.6935636493067765E-5	DOCUMENTATION
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9999748115038677	WITHOUT_CLASSIFICATION	2.5188496132240034E-5	DOCUMENTATION
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999506791598459	WITHOUT_CLASSIFICATION	4.932084015408567E-5	DOCUMENTATION
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999533414488038	WITHOUT_CLASSIFICATION	4.665855119625529E-5	DOCUMENTATION
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999973481583886	WITHOUT_CLASSIFICATION	2.6518416114063422E-5	DOCUMENTATION
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999507384185041	WITHOUT_CLASSIFICATION	4.926158149590647E-5	DOCUMENTATION
// not null is implicit	WITHOUT_CLASSIFICATION	0.9999815725921799	WITHOUT_CLASSIFICATION	1.8427407820004815E-5	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9999375220387295	WITHOUT_CLASSIFICATION	6.247796127051804E-5	DOCUMENTATION
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.9999798845756612	WITHOUT_CLASSIFICATION	2.0115424338782204E-5	DOCUMENTATION
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999584233662823	WITHOUT_CLASSIFICATION	4.157663371771781E-5	DOCUMENTATION
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999778302672739	WITHOUT_CLASSIFICATION	2.2169732726001277E-5	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999587484374729	WITHOUT_CLASSIFICATION	4.125156252707617E-5	DOCUMENTATION
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9999756388029791	WITHOUT_CLASSIFICATION	2.4361197020821633E-5	DOCUMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999576066272723	WITHOUT_CLASSIFICATION	4.239337272761669E-5	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999923279257625	WITHOUT_CLASSIFICATION	7.672074237485649E-6	DOCUMENTATION
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9993064524882027	WITHOUT_CLASSIFICATION	6.935475117973256E-4	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9999986233038411	WITHOUT_CLASSIFICATION	1.3766961588014644E-6	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9999934029675969	WITHOUT_CLASSIFICATION	6.597032403088216E-6	DOCUMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9999702450412469	WITHOUT_CLASSIFICATION	2.975495875316008E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508047536079	WITHOUT_CLASSIFICATION	4.919524639207663E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9996085131446251	WITHOUT_CLASSIFICATION	3.914868553749985E-4	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999995359436799	WITHOUT_CLASSIFICATION	4.640563202645695E-7	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999945755689099	WITHOUT_CLASSIFICATION	5.424431090076408E-6	DOCUMENTATION
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999803635960038	WITHOUT_CLASSIFICATION	1.963640399619498E-5	DOCUMENTATION
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999927663864554	WITHOUT_CLASSIFICATION	7.233613544663176E-6	DOCUMENTATION
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999821148085831	WITHOUT_CLASSIFICATION	1.788519141694751E-5	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9994763100399892	WITHOUT_CLASSIFICATION	5.236899600109577E-4	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9998849603057213	WITHOUT_CLASSIFICATION	1.1503969427873515E-4	DOCUMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.999922766277863	WITHOUT_CLASSIFICATION	7.723372213697527E-5	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999416455444615	WITHOUT_CLASSIFICATION	5.835445553855205E-5	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999507643043322	WITHOUT_CLASSIFICATION	4.923569566786892E-5	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999514863246362	WITHOUT_CLASSIFICATION	4.851367536387442E-5	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999512596894213	WITHOUT_CLASSIFICATION	4.874031057859148E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508047536079	WITHOUT_CLASSIFICATION	4.919524639207663E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508047536079	WITHOUT_CLASSIFICATION	4.919524639207663E-5	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.999998194334449	WITHOUT_CLASSIFICATION	1.8056655510490798E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999718030136604	WITHOUT_CLASSIFICATION	2.819698633963752E-5	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999517147187452	WITHOUT_CLASSIFICATION	4.828528125474948E-5	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.999223741426882	WITHOUT_CLASSIFICATION	7.762585731180435E-4	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999927663864554	WITHOUT_CLASSIFICATION	7.233613544663176E-6	DOCUMENTATION
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999888643937267	WITHOUT_CLASSIFICATION	1.1135606273260291E-5	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9998331251336425	WITHOUT_CLASSIFICATION	1.6687486635743972E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508047536079	WITHOUT_CLASSIFICATION	4.919524639207663E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999890743483953	WITHOUT_CLASSIFICATION	1.092565160452571E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9990154932653857	WITHOUT_CLASSIFICATION	9.845067346143154E-4	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9999605841039249	WITHOUT_CLASSIFICATION	3.941589607511695E-5	DOCUMENTATION
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999704897071404	WITHOUT_CLASSIFICATION	2.9510292859658775E-5	DOCUMENTATION
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9999885377913517	WITHOUT_CLASSIFICATION	1.1462208648244473E-5	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999703041391532	WITHOUT_CLASSIFICATION	2.9695860846779788E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.999428383004188	WITHOUT_CLASSIFICATION	5.716169958120442E-4	DOCUMENTATION
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9996303883414892	WITHOUT_CLASSIFICATION	3.696116585107205E-4	DOCUMENTATION
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9994253123688394	WITHOUT_CLASSIFICATION	5.746876311605877E-4	DOCUMENTATION
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999927663864554	WITHOUT_CLASSIFICATION	7.233613544663176E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9996085131446251	WITHOUT_CLASSIFICATION	3.914868553749985E-4	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999971553877305	WITHOUT_CLASSIFICATION	2.8446122694386616E-6	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999985423813604	WITHOUT_CLASSIFICATION	1.4576186395853855E-6	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9998627499446542	WITHOUT_CLASSIFICATION	1.3725005534579365E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9996085131446251	WITHOUT_CLASSIFICATION	3.914868553749985E-4	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9998133665593988	WITHOUT_CLASSIFICATION	1.866334406012797E-4	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999890743483953	WITHOUT_CLASSIFICATION	1.092565160452571E-5	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9998061602391932	WITHOUT_CLASSIFICATION	1.938397608067998E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508047536079	WITHOUT_CLASSIFICATION	4.919524639207663E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9996438722798013	WITHOUT_CLASSIFICATION	3.561277201986919E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508047536079	WITHOUT_CLASSIFICATION	4.919524639207663E-5	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999991219515652	WITHOUT_CLASSIFICATION	8.780484348172551E-7	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999416455444615	WITHOUT_CLASSIFICATION	5.835445553855205E-5	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999507643043322	WITHOUT_CLASSIFICATION	4.923569566786892E-5	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999514863246362	WITHOUT_CLASSIFICATION	4.851367536387442E-5	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.999916346934919	WITHOUT_CLASSIFICATION	8.36530650809328E-5	DOCUMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.9999174916202822	WITHOUT_CLASSIFICATION	8.250837971776974E-5	DOCUMENTATION
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9998790362784029	WITHOUT_CLASSIFICATION	1.2096372159712672E-4	DOCUMENTATION
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.999996324898247	WITHOUT_CLASSIFICATION	3.675101753069652E-6	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.999999430249746	WITHOUT_CLASSIFICATION	5.69750253950925E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508047536079	WITHOUT_CLASSIFICATION	4.919524639207663E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9996085131446251	WITHOUT_CLASSIFICATION	3.914868553749985E-4	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999512596894213	WITHOUT_CLASSIFICATION	4.874031057859148E-5	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.999998194334449	WITHOUT_CLASSIFICATION	1.8056655510490798E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999488400183922	WITHOUT_CLASSIFICATION	5.115998160760784E-5	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999612377595354	WITHOUT_CLASSIFICATION	3.876224046462964E-5	DOCUMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999532984876883	WITHOUT_CLASSIFICATION	4.670151231164024E-5	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9991276833219918	WITHOUT_CLASSIFICATION	8.723166780082635E-4	DOCUMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9998832663219074	WITHOUT_CLASSIFICATION	1.1673367809273133E-4	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9999962665148745	WITHOUT_CLASSIFICATION	3.7334851254284293E-6	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999580647387893	WITHOUT_CLASSIFICATION	4.1935261210585636E-5	DOCUMENTATION
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999454690480046	WITHOUT_CLASSIFICATION	5.453095199533646E-5	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9999715611715562	WITHOUT_CLASSIFICATION	2.8438828443884614E-5	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9999674348385034	WITHOUT_CLASSIFICATION	3.256516149659678E-5	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999663348899229	WITHOUT_CLASSIFICATION	3.366511007714515E-5	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.999965019693593	WITHOUT_CLASSIFICATION	3.498030640700816E-5	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999580647387893	WITHOUT_CLASSIFICATION	4.1935261210585636E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999580647387893	WITHOUT_CLASSIFICATION	4.1935261210585636E-5	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999691713240885	WITHOUT_CLASSIFICATION	3.082867591142478E-5	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.999965019693593	WITHOUT_CLASSIFICATION	3.498030640700816E-5	DOCUMENTATION
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999542835769906	WITHOUT_CLASSIFICATION	4.571642300940821E-5	DOCUMENTATION
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999537764077461	WITHOUT_CLASSIFICATION	4.6223592253894555E-5	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999582881743968	WITHOUT_CLASSIFICATION	4.1711825603166244E-5	DOCUMENTATION
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999580647387893	WITHOUT_CLASSIFICATION	4.1935261210585636E-5	DOCUMENTATION
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999958750205469	WITHOUT_CLASSIFICATION	4.1249794531326955E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508047536079	WITHOUT_CLASSIFICATION	4.919524639207663E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508047536079	WITHOUT_CLASSIFICATION	4.919524639207663E-5	DOCUMENTATION
/*<String>*/	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999958112536694	WITHOUT_CLASSIFICATION	4.188746330605288E-5	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999580647387893	WITHOUT_CLASSIFICATION	4.1935261210585636E-5	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999923279257625	WITHOUT_CLASSIFICATION	7.672074237485649E-6	DOCUMENTATION
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9999424139492201	WITHOUT_CLASSIFICATION	5.7586050779874636E-5	DOCUMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999876242676737	WITHOUT_CLASSIFICATION	1.2375732326322316E-5	DOCUMENTATION
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999992080445388	WITHOUT_CLASSIFICATION	7.919554610765256E-7	DOCUMENTATION
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999168337518041	WITHOUT_CLASSIFICATION	8.316624819593734E-5	DOCUMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999951460729999	WITHOUT_CLASSIFICATION	4.853927000142291E-6	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9995617499359263	WITHOUT_CLASSIFICATION	4.3825006407381353E-4	DOCUMENTATION
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9991773780374459	WITHOUT_CLASSIFICATION	8.226219625540531E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999991109478599	WITHOUT_CLASSIFICATION	8.890521400235624E-7	DOCUMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999693608872074	WITHOUT_CLASSIFICATION	3.063911279245794E-5	DOCUMENTATION
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999934417538405	WITHOUT_CLASSIFICATION	6.558246159415188E-6	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999814511434665	WITHOUT_CLASSIFICATION	1.854885653353388E-5	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999545205489432	WITHOUT_CLASSIFICATION	4.54794510567372E-5	DOCUMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999854319736292	WITHOUT_CLASSIFICATION	1.4568026370841314E-5	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9998381012158322	WITHOUT_CLASSIFICATION	1.6189878416785497E-4	DOCUMENTATION
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999797994449712	WITHOUT_CLASSIFICATION	2.020055502881604E-5	DOCUMENTATION
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999980305284001	WITHOUT_CLASSIFICATION	1.9694715999121122E-5	DOCUMENTATION
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999813381266431	WITHOUT_CLASSIFICATION	1.866187335684291E-5	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999971837235144	WITHOUT_CLASSIFICATION	2.8162764856345363E-6	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999771593390677	WITHOUT_CLASSIFICATION	2.2840660932275945E-5	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999770501577393	WITHOUT_CLASSIFICATION	2.294984226070678E-5	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999847268915345	WITHOUT_CLASSIFICATION	1.527310846546981E-5	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999879179462932	WITHOUT_CLASSIFICATION	1.2082053706796072E-5	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9999970293255771	WITHOUT_CLASSIFICATION	2.9706744227631694E-6	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999489463695568	WITHOUT_CLASSIFICATION	5.105363044329231E-5	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999847268915345	WITHOUT_CLASSIFICATION	1.527310846546981E-5	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999682130271097	WITHOUT_CLASSIFICATION	3.178697289031639E-5	DOCUMENTATION
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999803150358337	WITHOUT_CLASSIFICATION	1.9684964166288756E-5	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999662816527113	WITHOUT_CLASSIFICATION	3.3718347288733156E-5	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999769166738669	WITHOUT_CLASSIFICATION	2.3083326133063015E-5	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999942895509234	WITHOUT_CLASSIFICATION	5.710449076654835E-6	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999552994814283	WITHOUT_CLASSIFICATION	4.4700518571632706E-5	DOCUMENTATION
// continue loop	WITHOUT_CLASSIFICATION	0.9999791918371594	WITHOUT_CLASSIFICATION	2.080816284052597E-5	DOCUMENTATION
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9998635210053456	WITHOUT_CLASSIFICATION	1.3647899465439714E-4	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9998635210053456	WITHOUT_CLASSIFICATION	1.3647899465439714E-4	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999968163905605	WITHOUT_CLASSIFICATION	3.1836094395245746E-6	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9999923543706967	WITHOUT_CLASSIFICATION	7.645629303310351E-6	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9999715940395385	WITHOUT_CLASSIFICATION	2.840596046143738E-5	DOCUMENTATION
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999965316112681	WITHOUT_CLASSIFICATION	3.4683887318990272E-6	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9999998091859704	WITHOUT_CLASSIFICATION	1.9081402944796193E-7	DOCUMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9999880391852243	WITHOUT_CLASSIFICATION	1.1960814775600359E-5	DOCUMENTATION
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999885235926802	WITHOUT_CLASSIFICATION	1.1476407319761751E-5	DOCUMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999955697590842	WITHOUT_CLASSIFICATION	4.43024091579441E-6	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999670267987508	WITHOUT_CLASSIFICATION	3.29732012492764E-5	DOCUMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999963337179036	WITHOUT_CLASSIFICATION	3.6662820963074613E-6	DOCUMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999972124119373	WITHOUT_CLASSIFICATION	2.787588062726047E-6	DOCUMENTATION
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999848852880009	WITHOUT_CLASSIFICATION	1.5114711999147452E-5	DOCUMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999959451700746	WITHOUT_CLASSIFICATION	4.054829925447467E-6	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.999996415481474	WITHOUT_CLASSIFICATION	3.5845185258753543E-6	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9997023595063006	WITHOUT_CLASSIFICATION	2.976404936994461E-4	DOCUMENTATION
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9984857530639705	WITHOUT_CLASSIFICATION	0.0015142469360295522	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.999932325421239	WITHOUT_CLASSIFICATION	6.767457876106773E-5	DOCUMENTATION
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9993881436381141	WITHOUT_CLASSIFICATION	6.118563618859099E-4	DOCUMENTATION
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9999589451563894	WITHOUT_CLASSIFICATION	4.1054843610557384E-5	DOCUMENTATION
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999732919655272	WITHOUT_CLASSIFICATION	2.6708034472845977E-5	DOCUMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999928401793511	WITHOUT_CLASSIFICATION	7.159820648952172E-6	DOCUMENTATION
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999732506119204	WITHOUT_CLASSIFICATION	2.6749388079465798E-5	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9999844937424782	WITHOUT_CLASSIFICATION	1.5506257521729375E-5	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999939536447432	WITHOUT_CLASSIFICATION	6.046355256861327E-6	DOCUMENTATION
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.99998904666149	WITHOUT_CLASSIFICATION	1.0953338509846822E-5	DOCUMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999567212747742	WITHOUT_CLASSIFICATION	4.327872522585586E-5	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999836939173495	WITHOUT_CLASSIFICATION	1.6306082650516008E-5	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999915822422374	WITHOUT_CLASSIFICATION	8.417757762618924E-6	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9999764572183576	WITHOUT_CLASSIFICATION	2.354278164241919E-5	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9999775198891773	WITHOUT_CLASSIFICATION	2.2480110822727438E-5	DOCUMENTATION
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999567693111796	WITHOUT_CLASSIFICATION	4.32306888204829E-5	DOCUMENTATION
//unwrap the object	WITHOUT_CLASSIFICATION	0.9998411387780266	WITHOUT_CLASSIFICATION	1.5886122197341743E-4	DOCUMENTATION
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9997434769948156	WITHOUT_CLASSIFICATION	2.565230051844204E-4	DOCUMENTATION
//return the proxied object	WITHOUT_CLASSIFICATION	0.9997643899960522	WITHOUT_CLASSIFICATION	2.356100039479186E-4	DOCUMENTATION
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9994354041168185	WITHOUT_CLASSIFICATION	5.645958831814872E-4	DOCUMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.9999775677581396	WITHOUT_CLASSIFICATION	2.2432241860313222E-5	DOCUMENTATION
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999827241382243	WITHOUT_CLASSIFICATION	1.7275861775751545E-5	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9999883193755442	WITHOUT_CLASSIFICATION	1.1680624455818706E-5	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9999767231221943	WITHOUT_CLASSIFICATION	2.3276877805676395E-5	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9996384963466639	WITHOUT_CLASSIFICATION	3.615036533360559E-4	DOCUMENTATION
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999895346234294	WITHOUT_CLASSIFICATION	1.0465376570598396E-5	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.999223741426882	WITHOUT_CLASSIFICATION	7.762585731180435E-4	DOCUMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.999223741426882	WITHOUT_CLASSIFICATION	7.762585731180435E-4	DOCUMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.999983059005543	WITHOUT_CLASSIFICATION	1.6940994457076383E-5	DOCUMENTATION
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9997773441419978	WITHOUT_CLASSIFICATION	2.2265585800222785E-4	DOCUMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999189705556357	WITHOUT_CLASSIFICATION	8.102944436437154E-5	DOCUMENTATION
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999898933322062	WITHOUT_CLASSIFICATION	1.0106667793796687E-5	DOCUMENTATION
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999945913572321	WITHOUT_CLASSIFICATION	5.408642767914375E-6	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9970568038152875	WITHOUT_CLASSIFICATION	0.002943196184712407	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9991678752830063	WITHOUT_CLASSIFICATION	8.32124716993722E-4	DOCUMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9994694494951374	WITHOUT_CLASSIFICATION	5.305505048626184E-4	DOCUMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999213265268756	WITHOUT_CLASSIFICATION	7.867347312433506E-5	DOCUMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9998890734272958	WITHOUT_CLASSIFICATION	1.1092657270408796E-4	DOCUMENTATION
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9991786318500673	WITHOUT_CLASSIFICATION	8.213681499326851E-4	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9998617531028231	WITHOUT_CLASSIFICATION	1.382468971768794E-4	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9996476047381307	WITHOUT_CLASSIFICATION	3.523952618693039E-4	DOCUMENTATION
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9991343318270097	WITHOUT_CLASSIFICATION	8.656681729903074E-4	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9991375663322207	WITHOUT_CLASSIFICATION	8.624336677791849E-4	DOCUMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9999287084087948	WITHOUT_CLASSIFICATION	7.129159120518463E-5	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.999986966822232	WITHOUT_CLASSIFICATION	1.3033177768136505E-5	DOCUMENTATION
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999992215186136	WITHOUT_CLASSIFICATION	7.784813862597032E-7	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999916204203547	WITHOUT_CLASSIFICATION	8.379579645397335E-6	DOCUMENTATION
// We've been here before	WITHOUT_CLASSIFICATION	0.9999213664900897	WITHOUT_CLASSIFICATION	7.863350991032404E-5	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999761933918875	WITHOUT_CLASSIFICATION	2.380660811251997E-5	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999916204203547	WITHOUT_CLASSIFICATION	8.379579645397335E-6	DOCUMENTATION
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999937546114964	WITHOUT_CLASSIFICATION	6.245388503569767E-6	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999716044563112	WITHOUT_CLASSIFICATION	2.8395543688814037E-5	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9993476902893892	WITHOUT_CLASSIFICATION	6.523097106109096E-4	DOCUMENTATION
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9997370668460565	WITHOUT_CLASSIFICATION	2.6293315394356425E-4	DOCUMENTATION
// force initialize!	WITHOUT_CLASSIFICATION	0.999977983138713	WITHOUT_CLASSIFICATION	2.201686128704703E-5	DOCUMENTATION
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999930463176075	WITHOUT_CLASSIFICATION	6.953682392449159E-6	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9991276833219918	WITHOUT_CLASSIFICATION	8.723166780082635E-4	DOCUMENTATION
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999461829572058	WITHOUT_CLASSIFICATION	5.3817042794102825E-5	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999990088826513	WITHOUT_CLASSIFICATION	9.911173487275924E-7	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999512796765466	WITHOUT_CLASSIFICATION	4.872032345330557E-5	DOCUMENTATION
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999916152457907	WITHOUT_CLASSIFICATION	8.384754209237427E-6	DOCUMENTATION
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999942649685211	WITHOUT_CLASSIFICATION	5.735031478982268E-6	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9999757468698802	WITHOUT_CLASSIFICATION	2.4253130119859762E-5	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999989905452111	WITHOUT_CLASSIFICATION	1.0094547888620974E-6	DOCUMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999983631425652	WITHOUT_CLASSIFICATION	1.6368574347363847E-6	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9959438340931789	WITHOUT_CLASSIFICATION	0.004056165906821106	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999975670003958	WITHOUT_CLASSIFICATION	2.4329996042456075E-6	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
//re-snapshot	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999560462866155	WITHOUT_CLASSIFICATION	4.39537133846109E-5	DOCUMENTATION
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9989591266523792	WITHOUT_CLASSIFICATION	0.0010408733476208595	DOCUMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9993823016459598	WITHOUT_CLASSIFICATION	6.176983540402331E-4	DOCUMENTATION
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999992755479175	WITHOUT_CLASSIFICATION	7.244520825842906E-7	DOCUMENTATION
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999906114347259	WITHOUT_CLASSIFICATION	9.388565274049757E-6	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999973016128089	WITHOUT_CLASSIFICATION	2.698387191136135E-6	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9999999038954795	WITHOUT_CLASSIFICATION	9.610452053186151E-8	DOCUMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999966416240407	WITHOUT_CLASSIFICATION	3.3583759593842116E-6	DOCUMENTATION
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9982424546797544	WITHOUT_CLASSIFICATION	0.0017575453202455834	DOCUMENTATION
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9997735131328447	WITHOUT_CLASSIFICATION	2.2648686715524903E-4	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9990483535393676	WITHOUT_CLASSIFICATION	9.516464606324651E-4	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9998381012158322	WITHOUT_CLASSIFICATION	1.6189878416785497E-4	DOCUMENTATION
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9995962742689007	WITHOUT_CLASSIFICATION	4.0372573109932324E-4	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9992803787175665	WITHOUT_CLASSIFICATION	7.196212824334841E-4	DOCUMENTATION
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9998922599804518	WITHOUT_CLASSIFICATION	1.0774001954813618E-4	DOCUMENTATION
//do the test	WITHOUT_CLASSIFICATION	0.9998635832278894	WITHOUT_CLASSIFICATION	1.3641677211065627E-4	DOCUMENTATION
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999994912466273	WITHOUT_CLASSIFICATION	5.087533726030869E-7	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9998162468434914	WITHOUT_CLASSIFICATION	1.8375315650867986E-4	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.999996862943896	WITHOUT_CLASSIFICATION	3.1370561039980836E-6	DOCUMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999906899583726	WITHOUT_CLASSIFICATION	9.310041627424176E-6	DOCUMENTATION
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.999991040162269	WITHOUT_CLASSIFICATION	8.959837730977993E-6	DOCUMENTATION
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999910405890234	WITHOUT_CLASSIFICATION	8.95941097666569E-6	DOCUMENTATION
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999953925972846	WITHOUT_CLASSIFICATION	4.60740271529582E-6	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999962463922841	WITHOUT_CLASSIFICATION	3.7536077159262823E-6	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999966678298048	WITHOUT_CLASSIFICATION	3.3321701952333754E-6	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9998501272630432	WITHOUT_CLASSIFICATION	1.4987273695674474E-4	DOCUMENTATION
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9994288630657993	WITHOUT_CLASSIFICATION	5.711369342008104E-4	DOCUMENTATION
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9997577212260329	WITHOUT_CLASSIFICATION	2.4227877396696562E-4	DOCUMENTATION
//count++;	WITHOUT_CLASSIFICATION	0.9970229753135528	WITHOUT_CLASSIFICATION	0.0029770246864473204	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.999836124526976	WITHOUT_CLASSIFICATION	1.6387547302408514E-4	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999251030787405	WITHOUT_CLASSIFICATION	7.489692125954997E-5	DOCUMENTATION
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9989283016482221	WITHOUT_CLASSIFICATION	0.0010716983517779206	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9993735189373061	WITHOUT_CLASSIFICATION	6.264810626939951E-4	DOCUMENTATION
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.999924157021431	WITHOUT_CLASSIFICATION	7.584297856900864E-5	DOCUMENTATION
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.999990011226577	WITHOUT_CLASSIFICATION	9.98877342290016E-6	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999733587242081	WITHOUT_CLASSIFICATION	2.6641275791851766E-5	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999361594494224	WITHOUT_CLASSIFICATION	6.384055057763784E-5	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.9998470391208162	WITHOUT_CLASSIFICATION	1.52960879183786E-4	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999951201860735	WITHOUT_CLASSIFICATION	4.879813926508154E-6	DOCUMENTATION
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.999998303355327	WITHOUT_CLASSIFICATION	1.6966446730442928E-6	DOCUMENTATION
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.999995383219016	WITHOUT_CLASSIFICATION	4.616780983947125E-6	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999699704235858	WITHOUT_CLASSIFICATION	3.0029576414230396E-5	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999627834925459	WITHOUT_CLASSIFICATION	3.721650745425356E-5	DOCUMENTATION
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999532198278662	WITHOUT_CLASSIFICATION	4.678017213377161E-5	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999590010844722	WITHOUT_CLASSIFICATION	4.0998915527697405E-5	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9999999104575462	WITHOUT_CLASSIFICATION	8.954245388473962E-8	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999853152794441	WITHOUT_CLASSIFICATION	1.468472055591019E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999549260052112	WITHOUT_CLASSIFICATION	4.5073994788909776E-5	DOCUMENTATION
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9999998905649851	WITHOUT_CLASSIFICATION	1.0943501492219762E-7	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999865308220243	WITHOUT_CLASSIFICATION	1.3469177975749895E-5	DOCUMENTATION
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999627189652229	WITHOUT_CLASSIFICATION	3.7281034777030334E-5	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999865308220243	WITHOUT_CLASSIFICATION	1.3469177975749895E-5	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999566607506578	WITHOUT_CLASSIFICATION	4.333924934216426E-5	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999875136625967	WITHOUT_CLASSIFICATION	1.2486337403331401E-5	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9999812214879606	WITHOUT_CLASSIFICATION	1.8778512039391812E-5	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999904569454491	WITHOUT_CLASSIFICATION	9.54305455097434E-6	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999919796125011	WITHOUT_CLASSIFICATION	8.020387498907549E-6	DOCUMENTATION
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999488310862533	WITHOUT_CLASSIFICATION	5.116891374678041E-5	DOCUMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999895231393587	WITHOUT_CLASSIFICATION	1.0476860641207783E-5	DOCUMENTATION
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999862894101896	WITHOUT_CLASSIFICATION	1.3710589810301045E-5	DOCUMENTATION
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999976144036415	WITHOUT_CLASSIFICATION	2.385596358450476E-6	DOCUMENTATION
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9999503906989154	WITHOUT_CLASSIFICATION	4.960930108460849E-5	DOCUMENTATION
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999777828879196	WITHOUT_CLASSIFICATION	2.2217112080497363E-5	DOCUMENTATION
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9999963235071992	WITHOUT_CLASSIFICATION	3.676492800844322E-6	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9991357384595085	WITHOUT_CLASSIFICATION	8.642615404914685E-4	DOCUMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9999997049978437	WITHOUT_CLASSIFICATION	2.950021562941987E-7	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.9998709721342156	WITHOUT_CLASSIFICATION	1.290278657844075E-4	DOCUMENTATION
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9999985126460628	WITHOUT_CLASSIFICATION	1.4873539371674479E-6	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9997119293528131	WITHOUT_CLASSIFICATION	2.8807064718689037E-4	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9997119293528131	WITHOUT_CLASSIFICATION	2.8807064718689037E-4	DOCUMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9998890734272958	WITHOUT_CLASSIFICATION	1.1092657270408796E-4	DOCUMENTATION
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999919469531693	WITHOUT_CLASSIFICATION	8.053046830754602E-6	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999994779245368	WITHOUT_CLASSIFICATION	5.220754631257503E-7	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999998311850649	WITHOUT_CLASSIFICATION	1.6881493515670636E-7	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.999999838190125	WITHOUT_CLASSIFICATION	1.6180987496345065E-7	DOCUMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999999592239771	WITHOUT_CLASSIFICATION	4.077602285617961E-8	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9999315461449095	WITHOUT_CLASSIFICATION	6.845385509036561E-5	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9995287630177158	WITHOUT_CLASSIFICATION	4.7123698228421787E-4	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.99997821890254	WITHOUT_CLASSIFICATION	2.178109746004647E-5	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9997330164347855	WITHOUT_CLASSIFICATION	2.669835652145071E-4	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999806188968992	WITHOUT_CLASSIFICATION	1.9381103100792518E-5	DOCUMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999968123810744	WITHOUT_CLASSIFICATION	3.187618925682093E-6	DOCUMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999758118131317	WITHOUT_CLASSIFICATION	2.418818686831053E-5	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999994412910524	WITHOUT_CLASSIFICATION	5.58708947490524E-7	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999824653304168	WITHOUT_CLASSIFICATION	1.7534669583148735E-5	DOCUMENTATION
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999074880336959	WITHOUT_CLASSIFICATION	9.251196630407043E-5	DOCUMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999673428509965	WITHOUT_CLASSIFICATION	3.26571490034579E-5	DOCUMENTATION
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9960663409737469	WITHOUT_CLASSIFICATION	0.003933659026253111	DOCUMENTATION
//use the current version	WITHOUT_CLASSIFICATION	0.9997921411466626	WITHOUT_CLASSIFICATION	2.0785885333749819E-4	DOCUMENTATION
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999968294186589	WITHOUT_CLASSIFICATION	3.1705813412229147E-6	DOCUMENTATION
// object loaded by update()	WITHOUT_CLASSIFICATION	0.999983242548897	WITHOUT_CLASSIFICATION	1.6757451103021706E-5	DOCUMENTATION
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.999961893789968	WITHOUT_CLASSIFICATION	3.810621003190586E-5	DOCUMENTATION
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9999867781333359	WITHOUT_CLASSIFICATION	1.3221866664052211E-5	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999819062394348	WITHOUT_CLASSIFICATION	1.809376056514493E-5	DOCUMENTATION
//even process null collections	WITHOUT_CLASSIFICATION	0.9992006560804201	WITHOUT_CLASSIFICATION	7.993439195799779E-4	DOCUMENTATION
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999971260793306	WITHOUT_CLASSIFICATION	2.873920669389244E-6	DOCUMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999239776583201	WITHOUT_CLASSIFICATION	7.602234167989903E-5	DOCUMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.9996446538053707	WITHOUT_CLASSIFICATION	3.5534619462925394E-4	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9996032716477454	WITHOUT_CLASSIFICATION	3.9672835225461724E-4	DOCUMENTATION
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9997674712416794	WITHOUT_CLASSIFICATION	2.3252875832064314E-4	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.999485925966382	WITHOUT_CLASSIFICATION	5.140740336181011E-4	DOCUMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999141061409568	WITHOUT_CLASSIFICATION	8.58938590432147E-5	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9997255389234461	WITHOUT_CLASSIFICATION	2.744610765538894E-4	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9996145081317035	WITHOUT_CLASSIFICATION	3.8549186829657224E-4	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999634738894686	WITHOUT_CLASSIFICATION	3.652611053135919E-5	DOCUMENTATION
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999285269322582	WITHOUT_CLASSIFICATION	7.147306774177412E-5	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.999974626326918	WITHOUT_CLASSIFICATION	2.5373673082018444E-5	DOCUMENTATION
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9999504809608707	WITHOUT_CLASSIFICATION	4.9519039129303453E-5	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9999177003882855	WITHOUT_CLASSIFICATION	8.229961171446789E-5	DOCUMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999812575451889	WITHOUT_CLASSIFICATION	1.8742454811075768E-5	DOCUMENTATION
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.999976555595424	WITHOUT_CLASSIFICATION	2.3444404575949336E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999513912057383	WITHOUT_CLASSIFICATION	4.860879426160578E-5	DOCUMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.9996023378251722	WITHOUT_CLASSIFICATION	3.976621748278339E-4	DOCUMENTATION
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9997132494244093	WITHOUT_CLASSIFICATION	2.8675057559077253E-4	DOCUMENTATION
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999874329007389	WITHOUT_CLASSIFICATION	1.2567099261116694E-5	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9999988357429297	WITHOUT_CLASSIFICATION	1.1642570703480479E-6	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.9999884542265556	WITHOUT_CLASSIFICATION	1.154577344453262E-5	DOCUMENTATION
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999985581374026	WITHOUT_CLASSIFICATION	1.4418625975138217E-6	DOCUMENTATION
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999746302607404	WITHOUT_CLASSIFICATION	2.5369739259580235E-5	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9996030813035799	WITHOUT_CLASSIFICATION	3.9691869642019816E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999513912057383	WITHOUT_CLASSIFICATION	4.860879426160578E-5	DOCUMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.999881651993464	WITHOUT_CLASSIFICATION	1.1834800653608049E-4	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999882157027546	WITHOUT_CLASSIFICATION	1.1784297245412935E-5	DOCUMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9997903557112973	WITHOUT_CLASSIFICATION	2.096442887028086E-4	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999308061785687	WITHOUT_CLASSIFICATION	6.919382143132664E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9998133665593988	WITHOUT_CLASSIFICATION	1.866334406012797E-4	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9998133665593988	WITHOUT_CLASSIFICATION	1.866334406012797E-4	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999997857152492	WITHOUT_CLASSIFICATION	2.1428475078835348E-7	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9997668524608251	WITHOUT_CLASSIFICATION	2.3314753917494147E-4	DOCUMENTATION
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9997605048880416	WITHOUT_CLASSIFICATION	2.3949511195839562E-4	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999770580679304	WITHOUT_CLASSIFICATION	2.2941932069607157E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999900185676064	WITHOUT_CLASSIFICATION	9.98143239365704E-6	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999948718127296	WITHOUT_CLASSIFICATION	5.128187270392236E-6	DOCUMENTATION
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999941040618276	WITHOUT_CLASSIFICATION	5.895938172306978E-6	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9998341432260094	WITHOUT_CLASSIFICATION	1.6585677399059696E-4	DOCUMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999973690581812	WITHOUT_CLASSIFICATION	2.6309418188514468E-6	DOCUMENTATION
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9997444946035808	WITHOUT_CLASSIFICATION	2.5550539641918204E-4	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9991979542870459	WITHOUT_CLASSIFICATION	8.020457129540908E-4	DOCUMENTATION
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9988944067818412	WITHOUT_CLASSIFICATION	0.0011055932181587578	DOCUMENTATION
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999948906383207	WITHOUT_CLASSIFICATION	5.109361679269479E-6	DOCUMENTATION
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999987650529857	WITHOUT_CLASSIFICATION	1.234947014283139E-6	DOCUMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999985457916818	WITHOUT_CLASSIFICATION	1.4542083181680123E-6	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999998308424038	WITHOUT_CLASSIFICATION	1.691575961699563E-7	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9997502616262078	WITHOUT_CLASSIFICATION	2.497383737921149E-4	DOCUMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9993828537675493	WITHOUT_CLASSIFICATION	6.17146232450591E-4	DOCUMENTATION
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999996158025133	WITHOUT_CLASSIFICATION	3.841974866176651E-7	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9993054983129	WITHOUT_CLASSIFICATION	6.945016870999895E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999647337346735	WITHOUT_CLASSIFICATION	3.526626532653407E-5	DOCUMENTATION
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.999995434299233	WITHOUT_CLASSIFICATION	4.565700767036656E-6	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9999989764541991	WITHOUT_CLASSIFICATION	1.0235458009142073E-6	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9997171580109073	WITHOUT_CLASSIFICATION	2.8284198909271966E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9998864886455558	WITHOUT_CLASSIFICATION	1.1351135444410433E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9999972837601303	WITHOUT_CLASSIFICATION	2.716239869724937E-6	DOCUMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.999996578933506	WITHOUT_CLASSIFICATION	3.4210664940027786E-6	DOCUMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.9970229753135528	WITHOUT_CLASSIFICATION	0.0029770246864473204	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999741276333184	WITHOUT_CLASSIFICATION	2.587236668155008E-5	DOCUMENTATION
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.998653604134489	WITHOUT_CLASSIFICATION	0.0013463958655109771	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9999993659422884	WITHOUT_CLASSIFICATION	6.340577115124927E-7	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999741276333184	WITHOUT_CLASSIFICATION	2.587236668155008E-5	DOCUMENTATION
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9999503002546	WITHOUT_CLASSIFICATION	4.9699745400088075E-5	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999709144650809	WITHOUT_CLASSIFICATION	2.9085534919104417E-5	DOCUMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999809441154945	WITHOUT_CLASSIFICATION	1.9055884505494804E-5	DOCUMENTATION
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.999846627062641	WITHOUT_CLASSIFICATION	1.5337293735904648E-4	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.999717624620585	WITHOUT_CLASSIFICATION	2.8237537941498664E-4	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999806188968992	WITHOUT_CLASSIFICATION	1.9381103100792518E-5	DOCUMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9984264667038885	WITHOUT_CLASSIFICATION	0.0015735332961115765	DOCUMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9995617499359263	WITHOUT_CLASSIFICATION	4.3825006407381353E-4	DOCUMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9993351077693974	WITHOUT_CLASSIFICATION	6.648922306026609E-4	DOCUMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9999913770359299	WITHOUT_CLASSIFICATION	8.622964070100958E-6	DOCUMENTATION
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9996496244667358	WITHOUT_CLASSIFICATION	3.503755332641597E-4	DOCUMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.999986159931689	WITHOUT_CLASSIFICATION	1.3840068310954888E-5	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9994805728909469	WITHOUT_CLASSIFICATION	5.194271090530016E-4	DOCUMENTATION
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999693701693866	WITHOUT_CLASSIFICATION	3.0629830613390176E-5	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999651729644891	WITHOUT_CLASSIFICATION	3.482703551096877E-5	DOCUMENTATION
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999832556576036	WITHOUT_CLASSIFICATION	1.674434239634053E-5	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999963536462351	WITHOUT_CLASSIFICATION	3.6463537648596715E-6	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999924608724031	WITHOUT_CLASSIFICATION	7.539127596981389E-6	DOCUMENTATION
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999942197870433	WITHOUT_CLASSIFICATION	5.780212956636932E-6	DOCUMENTATION
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999589795519979	WITHOUT_CLASSIFICATION	4.1020448002030415E-5	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999530509684422	WITHOUT_CLASSIFICATION	4.694903155777094E-5	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999768939952947	WITHOUT_CLASSIFICATION	2.31060047053008E-5	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999872078330146	WITHOUT_CLASSIFICATION	1.2792166985366714E-5	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9991276833219918	WITHOUT_CLASSIFICATION	8.723166780082635E-4	DOCUMENTATION
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9991276833219918	WITHOUT_CLASSIFICATION	8.723166780082635E-4	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999948798412512	WITHOUT_CLASSIFICATION	5.120158748724643E-6	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9998038211797683	WITHOUT_CLASSIFICATION	1.9617882023172624E-4	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999837976026471	WITHOUT_CLASSIFICATION	1.6202397352921134E-5	DOCUMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9991253771021597	WITHOUT_CLASSIFICATION	8.746228978403325E-4	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.9999777809670095	WITHOUT_CLASSIFICATION	2.2219032990568165E-5	DOCUMENTATION
// Error message constants.	WITHOUT_CLASSIFICATION	0.999964343231788	WITHOUT_CLASSIFICATION	3.56567682119446E-5	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999429570820785	WITHOUT_CLASSIFICATION	5.7042917921442476E-5	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999550772619615	WITHOUT_CLASSIFICATION	4.492273803840367E-5	DOCUMENTATION
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.9999959859681107	WITHOUT_CLASSIFICATION	4.014031889279752E-6	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9999878266183448	WITHOUT_CLASSIFICATION	1.2173381655107591E-5	DOCUMENTATION
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9999303590680683	WITHOUT_CLASSIFICATION	6.964093193170098E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999934713787754	WITHOUT_CLASSIFICATION	6.5286212246094685E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999934713787754	WITHOUT_CLASSIFICATION	6.5286212246094685E-6	DOCUMENTATION
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9998834128627985	WITHOUT_CLASSIFICATION	1.1658713720160748E-4	DOCUMENTATION
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999999029187613	WITHOUT_CLASSIFICATION	9.708123871136767E-8	DOCUMENTATION
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999856668087433	WITHOUT_CLASSIFICATION	1.4333191256654516E-5	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999966090063124	WITHOUT_CLASSIFICATION	3.3909936876050525E-6	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.999995927765952	WITHOUT_CLASSIFICATION	4.072234047928846E-6	DOCUMENTATION
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999862677491148	WITHOUT_CLASSIFICATION	1.3732250885293846E-5	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999589639433182	WITHOUT_CLASSIFICATION	4.103605668178036E-5	DOCUMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999790940797731	WITHOUT_CLASSIFICATION	2.0905920226777893E-5	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9999536731439747	WITHOUT_CLASSIFICATION	4.632685602523993E-5	DOCUMENTATION
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999963327582343	WITHOUT_CLASSIFICATION	3.667241765686833E-6	DOCUMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999984162894636	WITHOUT_CLASSIFICATION	1.5837105363793529E-6	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.99999074447841	WITHOUT_CLASSIFICATION	9.255521589940557E-6	DOCUMENTATION
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999548842670353	WITHOUT_CLASSIFICATION	4.511573296469952E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999934713787754	WITHOUT_CLASSIFICATION	6.5286212246094685E-6	DOCUMENTATION
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999704568923118	WITHOUT_CLASSIFICATION	2.9543107688235944E-5	DOCUMENTATION
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.999912321717114	WITHOUT_CLASSIFICATION	8.767828288599421E-5	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999996271300038	WITHOUT_CLASSIFICATION	3.7286999628785664E-7	DOCUMENTATION
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.999977110216203	WITHOUT_CLASSIFICATION	2.2889783797064884E-5	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999973456821512	WITHOUT_CLASSIFICATION	2.6543178489473967E-6	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9999480625781703	WITHOUT_CLASSIFICATION	5.193742182976515E-5	DOCUMENTATION
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999808398504031	WITHOUT_CLASSIFICATION	1.9160149596862854E-5	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999938631889128	WITHOUT_CLASSIFICATION	6.136811087133214E-6	DOCUMENTATION
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.999998080295358	WITHOUT_CLASSIFICATION	1.9197046420640057E-6	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999645762678165	WITHOUT_CLASSIFICATION	3.5423732183498045E-5	DOCUMENTATION
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9999858331566699	WITHOUT_CLASSIFICATION	1.4166843330114558E-5	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999429570820785	WITHOUT_CLASSIFICATION	5.7042917921442476E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999934713787754	WITHOUT_CLASSIFICATION	6.5286212246094685E-6	DOCUMENTATION
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.999991712335458	WITHOUT_CLASSIFICATION	8.287664541990445E-6	DOCUMENTATION
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999917157428849	WITHOUT_CLASSIFICATION	8.284257115090231E-6	DOCUMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9998488730399392	WITHOUT_CLASSIFICATION	1.5112696006077086E-4	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999948974762682	WITHOUT_CLASSIFICATION	5.102523731651067E-6	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999996779790342	WITHOUT_CLASSIFICATION	3.2202096580060387E-7	DOCUMENTATION
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999683290928728	WITHOUT_CLASSIFICATION	3.167090712723941E-5	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999551519196535	WITHOUT_CLASSIFICATION	4.4848080346479376E-5	DOCUMENTATION
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999995780495432	WITHOUT_CLASSIFICATION	4.219504568374526E-7	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999987167115909	WITHOUT_CLASSIFICATION	1.2832884091332445E-6	DOCUMENTATION
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.999968178710189	WITHOUT_CLASSIFICATION	3.182128981093719E-5	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999766846589436	WITHOUT_CLASSIFICATION	2.3315341056430164E-5	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9991283749312028	WITHOUT_CLASSIFICATION	8.716250687971025E-4	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999800720152275	WITHOUT_CLASSIFICATION	1.9927984772356174E-5	DOCUMENTATION
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999972313313079	WITHOUT_CLASSIFICATION	2.7686686920705483E-6	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999566607506578	WITHOUT_CLASSIFICATION	4.333924934216426E-5	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999992424959239	WITHOUT_CLASSIFICATION	7.575040761799403E-7	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.999997630559979	WITHOUT_CLASSIFICATION	2.369440021048433E-6	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999981861607293	WITHOUT_CLASSIFICATION	1.8138392706864447E-6	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999746420957901	WITHOUT_CLASSIFICATION	2.5357904209788652E-5	DOCUMENTATION
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999987963260386	WITHOUT_CLASSIFICATION	1.2036739613942029E-6	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.999557048733492	WITHOUT_CLASSIFICATION	4.429512665080095E-4	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.999557048733492	WITHOUT_CLASSIFICATION	4.429512665080095E-4	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9999477218589452	WITHOUT_CLASSIFICATION	5.227814105475819E-5	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9999959291524799	WITHOUT_CLASSIFICATION	4.070847520139644E-6	DOCUMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9999731375891973	WITHOUT_CLASSIFICATION	2.6862410802755106E-5	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9999786320811703	WITHOUT_CLASSIFICATION	2.13679188296401E-5	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999871257508208	WITHOUT_CLASSIFICATION	1.2874249179136203E-5	DOCUMENTATION
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.999994462541704	WITHOUT_CLASSIFICATION	5.5374582959862555E-6	DOCUMENTATION
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9999864353119032	WITHOUT_CLASSIFICATION	1.3564688096787735E-5	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999827955953137	WITHOUT_CLASSIFICATION	1.7204404686358155E-5	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999827955953137	WITHOUT_CLASSIFICATION	1.7204404686358155E-5	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9992677431555337	WITHOUT_CLASSIFICATION	7.322568444662607E-4	DOCUMENTATION
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999856793617484	WITHOUT_CLASSIFICATION	1.4320638251552643E-5	DOCUMENTATION
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999835764626787	WITHOUT_CLASSIFICATION	1.6423537321321316E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999895584228089	WITHOUT_CLASSIFICATION	1.044157719104312E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999895584228089	WITHOUT_CLASSIFICATION	1.044157719104312E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999895584228089	WITHOUT_CLASSIFICATION	1.044157719104312E-5	DOCUMENTATION
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9999479026750426	WITHOUT_CLASSIFICATION	5.209732495740244E-5	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9999838533070319	WITHOUT_CLASSIFICATION	1.6146692968119997E-5	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9998000456995932	WITHOUT_CLASSIFICATION	1.999543004066818E-4	DOCUMENTATION
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9999970992162903	WITHOUT_CLASSIFICATION	2.900783709613755E-6	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999996648464663	WITHOUT_CLASSIFICATION	3.351535336941962E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999934713787754	WITHOUT_CLASSIFICATION	6.5286212246094685E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999934713787754	WITHOUT_CLASSIFICATION	6.5286212246094685E-6	DOCUMENTATION
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9999985938047042	WITHOUT_CLASSIFICATION	1.406195295755172E-6	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999952850920093	WITHOUT_CLASSIFICATION	4.714907990740996E-6	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9999996583319456	WITHOUT_CLASSIFICATION	3.416680544961919E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999520375983664	WITHOUT_CLASSIFICATION	4.796240163349069E-5	DOCUMENTATION
// igndore it...	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999823133214621	WITHOUT_CLASSIFICATION	1.768667853786274E-5	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9999176727591536	WITHOUT_CLASSIFICATION	8.232724084648688E-5	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.999999771797293	WITHOUT_CLASSIFICATION	2.282027069899501E-7	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999970040295606	WITHOUT_CLASSIFICATION	2.995970439400492E-6	DOCUMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999932490406358	WITHOUT_CLASSIFICATION	6.750959364244079E-6	DOCUMENTATION
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.99997577332416	WITHOUT_CLASSIFICATION	2.4226675840094407E-5	DOCUMENTATION
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999945807828573	WITHOUT_CLASSIFICATION	5.419217142720141E-6	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999945807828573	WITHOUT_CLASSIFICATION	5.419217142720141E-6	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999945807828573	WITHOUT_CLASSIFICATION	5.419217142720141E-6	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999945807828573	WITHOUT_CLASSIFICATION	5.419217142720141E-6	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.9999945807828573	WITHOUT_CLASSIFICATION	5.419217142720141E-6	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999923527784398	WITHOUT_CLASSIFICATION	7.64722156024468E-6	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999923527784398	WITHOUT_CLASSIFICATION	7.64722156024468E-6	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999923527784398	WITHOUT_CLASSIFICATION	7.64722156024468E-6	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999923527784398	WITHOUT_CLASSIFICATION	7.64722156024468E-6	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999824993744563	WITHOUT_CLASSIFICATION	1.7500625543655722E-5	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.999557048733492	WITHOUT_CLASSIFICATION	4.429512665080095E-4	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.999994177091526	WITHOUT_CLASSIFICATION	5.822908473922365E-6	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999923527784398	WITHOUT_CLASSIFICATION	7.64722156024468E-6	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9999916154435333	WITHOUT_CLASSIFICATION	8.384556466630304E-6	DOCUMENTATION
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999577342766596	WITHOUT_CLASSIFICATION	4.226572334039344E-5	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999676692265518	WITHOUT_CLASSIFICATION	3.2330773448207537E-5	DOCUMENTATION
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999942009225965	WITHOUT_CLASSIFICATION	5.799077403487702E-6	DOCUMENTATION
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999997446440694	WITHOUT_CLASSIFICATION	2.553559306830501E-7	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9999705432131095	WITHOUT_CLASSIFICATION	2.9456786890568764E-5	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999912688119557	WITHOUT_CLASSIFICATION	8.731188044429982E-6	DOCUMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9999989810736243	WITHOUT_CLASSIFICATION	1.0189263756304527E-6	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9999662585296316	WITHOUT_CLASSIFICATION	3.374147036845541E-5	DOCUMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.999996734921527	WITHOUT_CLASSIFICATION	3.2650784731196227E-6	DOCUMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999994153102303	WITHOUT_CLASSIFICATION	5.846897696849034E-7	DOCUMENTATION
// Set it!	WITHOUT_CLASSIFICATION	0.9998569444732721	WITHOUT_CLASSIFICATION	1.4305552672776208E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.999844932216808	WITHOUT_CLASSIFICATION	1.5506778319187694E-4	DOCUMENTATION
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999879863793838	WITHOUT_CLASSIFICATION	1.2013620616230885E-5	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9999998124570125	WITHOUT_CLASSIFICATION	1.8754298741343488E-7	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9999855627030078	WITHOUT_CLASSIFICATION	1.4437296992200288E-5	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999944509111436	WITHOUT_CLASSIFICATION	5.549088856472544E-6	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999435023568163	WITHOUT_CLASSIFICATION	5.6497643183596136E-5	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999435023568163	WITHOUT_CLASSIFICATION	5.6497643183596136E-5	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999802292274629	WITHOUT_CLASSIFICATION	1.9770772537189126E-5	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999910453163792	WITHOUT_CLASSIFICATION	8.954683620760033E-6	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999801145776532	WITHOUT_CLASSIFICATION	1.9885422346676973E-5	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9999657640382797	WITHOUT_CLASSIFICATION	3.4235961720341784E-5	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.9999107956691585	WITHOUT_CLASSIFICATION	8.920433084148136E-5	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.9999944345275402	WITHOUT_CLASSIFICATION	5.565472459727083E-6	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9999912465400355	WITHOUT_CLASSIFICATION	8.753459964602712E-6	DOCUMENTATION
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999375159382181	WITHOUT_CLASSIFICATION	6.248406178192469E-5	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999823616381952	WITHOUT_CLASSIFICATION	1.763836180479834E-5	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999869205009815	WITHOUT_CLASSIFICATION	1.3079499018531695E-5	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999582001812467	WITHOUT_CLASSIFICATION	4.1799818753305155E-5	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9991299260427666	WITHOUT_CLASSIFICATION	8.700739572333622E-4	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999983474802016	WITHOUT_CLASSIFICATION	1.6525197983532569E-6	DOCUMENTATION
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999848178252333	WITHOUT_CLASSIFICATION	1.5182174766734767E-5	DOCUMENTATION
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999948034173484	WITHOUT_CLASSIFICATION	5.1965826516641155E-6	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999716287131967	WITHOUT_CLASSIFICATION	2.837128680332504E-5	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999937281801745	WITHOUT_CLASSIFICATION	6.27181982554067E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999937281801745	WITHOUT_CLASSIFICATION	6.27181982554067E-6	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9998994408570303	WITHOUT_CLASSIFICATION	1.0055914296969016E-4	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9999997068799004	WITHOUT_CLASSIFICATION	2.93120099745766E-7	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9999828254679721	WITHOUT_CLASSIFICATION	1.7174532027905545E-5	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999828254679721	WITHOUT_CLASSIFICATION	1.7174532027905545E-5	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9998731171102833	WITHOUT_CLASSIFICATION	1.268828897167784E-4	DOCUMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999837564349353	WITHOUT_CLASSIFICATION	1.6243565064775492E-5	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9992876948356599	WITHOUT_CLASSIFICATION	7.123051643400269E-4	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999991113638105	WITHOUT_CLASSIFICATION	8.88636189501128E-7	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9998686782540221	WITHOUT_CLASSIFICATION	1.313217459778101E-4	DOCUMENTATION
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999939981965865	WITHOUT_CLASSIFICATION	6.0018034135578104E-6	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999728424167589	WITHOUT_CLASSIFICATION	2.715758324109258E-5	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999991113638105	WITHOUT_CLASSIFICATION	8.88636189501128E-7	DOCUMENTATION
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.9999996420670837	WITHOUT_CLASSIFICATION	3.579329163033786E-7	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999815349103598	WITHOUT_CLASSIFICATION	1.846508964029958E-5	DOCUMENTATION
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999975510009432	WITHOUT_CLASSIFICATION	2.448999056728026E-6	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999186089174589	WITHOUT_CLASSIFICATION	8.139108254115826E-5	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999977223883953	WITHOUT_CLASSIFICATION	2.27761160458233E-6	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.999980046671744	WITHOUT_CLASSIFICATION	1.9953328256066345E-5	DOCUMENTATION
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999524367171995	WITHOUT_CLASSIFICATION	4.756328280054778E-5	DOCUMENTATION
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999805369687617	WITHOUT_CLASSIFICATION	1.946303123834309E-5	DOCUMENTATION
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999997607025131	WITHOUT_CLASSIFICATION	2.3929748692540416E-7	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.999995743477826	WITHOUT_CLASSIFICATION	4.2565221739105355E-6	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9999878017331378	WITHOUT_CLASSIFICATION	1.2198266862269805E-5	DOCUMENTATION
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999966735551463	WITHOUT_CLASSIFICATION	3.3264448536685275E-6	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999897373646391	WITHOUT_CLASSIFICATION	1.0262635360887689E-5	DOCUMENTATION
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999873544898701	WITHOUT_CLASSIFICATION	1.2645510130027064E-5	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999858812780595	WITHOUT_CLASSIFICATION	1.4118721940514846E-5	DOCUMENTATION
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999593696155042	WITHOUT_CLASSIFICATION	4.063038449585677E-5	DOCUMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999638648382763	WITHOUT_CLASSIFICATION	3.613516172369742E-5	DOCUMENTATION
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.999891523751613	WITHOUT_CLASSIFICATION	1.0847624838683178E-4	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.999891523751613	WITHOUT_CLASSIFICATION	1.0847624838683178E-4	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999524367171995	WITHOUT_CLASSIFICATION	4.756328280054778E-5	DOCUMENTATION
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9999841345764806	WITHOUT_CLASSIFICATION	1.586542351944479E-5	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.9999924543670897	WITHOUT_CLASSIFICATION	7.545632910290293E-6	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.9997927389195768	WITHOUT_CLASSIFICATION	2.0726108042326007E-4	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.9998314700942659	WITHOUT_CLASSIFICATION	1.6852990573417036E-4	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999840552458669	WITHOUT_CLASSIFICATION	1.5944754133137727E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999921026804798	WITHOUT_CLASSIFICATION	7.897319520155557E-6	DOCUMENTATION
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.999985461758627	WITHOUT_CLASSIFICATION	1.4538241372834255E-5	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999769272612582	WITHOUT_CLASSIFICATION	2.3072738741736043E-5	DOCUMENTATION
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999950584763627	WITHOUT_CLASSIFICATION	4.941523637285918E-6	DOCUMENTATION
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9999981501939956	WITHOUT_CLASSIFICATION	1.8498060044365648E-6	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999968630782053	WITHOUT_CLASSIFICATION	3.1369217946528443E-6	DOCUMENTATION
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.999993455812522	WITHOUT_CLASSIFICATION	6.54418747800691E-6	DOCUMENTATION
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999849891413122	WITHOUT_CLASSIFICATION	1.5010858687763229E-5	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9999997774112178	WITHOUT_CLASSIFICATION	2.2258878205660235E-7	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999906730009277	WITHOUT_CLASSIFICATION	9.3269990722154E-6	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999791765916828	WITHOUT_CLASSIFICATION	2.0823408317239517E-5	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999996962985271	WITHOUT_CLASSIFICATION	3.037014727743279E-7	DOCUMENTATION
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999753811863481	WITHOUT_CLASSIFICATION	2.461881365195745E-5	DOCUMENTATION
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999874731771421	WITHOUT_CLASSIFICATION	1.2526822858001223E-5	DOCUMENTATION
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999836743191635	WITHOUT_CLASSIFICATION	1.6325680836516654E-5	DOCUMENTATION
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999574678785356	WITHOUT_CLASSIFICATION	4.253212146444931E-5	DOCUMENTATION
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999805803424531	WITHOUT_CLASSIFICATION	1.941965754701661E-5	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999601453399252	WITHOUT_CLASSIFICATION	3.9854660074706456E-5	DOCUMENTATION
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999941067936144	WITHOUT_CLASSIFICATION	5.893206385543703E-6	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999837335684513	WITHOUT_CLASSIFICATION	1.6266431548809945E-5	DOCUMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999283116005143	WITHOUT_CLASSIFICATION	7.168839948571646E-5	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999982272677082	WITHOUT_CLASSIFICATION	1.772732291838483E-6	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999745155131086	WITHOUT_CLASSIFICATION	2.5484486891388646E-5	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999944921276721	WITHOUT_CLASSIFICATION	5.507872327869106E-6	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999829470055746	WITHOUT_CLASSIFICATION	1.7052994425449194E-5	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999950684309017	WITHOUT_CLASSIFICATION	4.931569098304171E-5	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999906730009277	WITHOUT_CLASSIFICATION	9.3269990722154E-6	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999927227705443	WITHOUT_CLASSIFICATION	7.277229455705231E-6	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999970892045387	WITHOUT_CLASSIFICATION	2.9107954613872356E-6	DOCUMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.999996821327309	WITHOUT_CLASSIFICATION	3.1786726908770433E-6	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999843449046248	WITHOUT_CLASSIFICATION	1.5655095375143172E-5	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999915441744841	WITHOUT_CLASSIFICATION	8.455825515889714E-6	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999955890895263	WITHOUT_CLASSIFICATION	4.4109104736181525E-6	DOCUMENTATION
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999725444619079	WITHOUT_CLASSIFICATION	2.7455538092141158E-5	DOCUMENTATION
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999866724770142	WITHOUT_CLASSIFICATION	1.3327522985833417E-5	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.999994999429334	WITHOUT_CLASSIFICATION	5.000570666002946E-6	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999925252706906	WITHOUT_CLASSIFICATION	7.474729309389181E-6	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9999612186899025	WITHOUT_CLASSIFICATION	3.878131009744095E-5	DOCUMENTATION
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.9999997637661968	WITHOUT_CLASSIFICATION	2.3623380315191101E-7	DOCUMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.999602070626335	WITHOUT_CLASSIFICATION	3.9792937366495596E-4	DOCUMENTATION
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9999848058369161	WITHOUT_CLASSIFICATION	1.5194163083916462E-5	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999950684309017	WITHOUT_CLASSIFICATION	4.931569098304171E-5	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.999990316801557	WITHOUT_CLASSIFICATION	9.683198443004832E-6	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.999999716645983	WITHOUT_CLASSIFICATION	2.8335401705175765E-7	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999934806348436	WITHOUT_CLASSIFICATION	6.519365156432052E-6	DOCUMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.9999532938345534	WITHOUT_CLASSIFICATION	4.670616544649821E-5	DOCUMENTATION
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9999778300013413	WITHOUT_CLASSIFICATION	2.2169998658739912E-5	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999934901063808	WITHOUT_CLASSIFICATION	6.509893619146126E-6	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9998686782540221	WITHOUT_CLASSIFICATION	1.313217459778101E-4	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999972895264746	WITHOUT_CLASSIFICATION	2.7104735254393354E-6	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999906730009277	WITHOUT_CLASSIFICATION	9.3269990722154E-6	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9999678091178865	WITHOUT_CLASSIFICATION	3.219088211348522E-5	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999927158647981	WITHOUT_CLASSIFICATION	7.284135201873576E-6	DOCUMENTATION
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999840444586037	WITHOUT_CLASSIFICATION	1.5955541396416903E-5	DOCUMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999840415061769	WITHOUT_CLASSIFICATION	1.5958493823143962E-5	DOCUMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999722039540355	WITHOUT_CLASSIFICATION	2.7796045964430636E-5	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9999991730889592	WITHOUT_CLASSIFICATION	8.269110407204204E-7	DOCUMENTATION
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999920594942927	WITHOUT_CLASSIFICATION	7.940505707284334E-6	DOCUMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9999953367945054	WITHOUT_CLASSIFICATION	4.663205494659934E-6	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9999978758669154	WITHOUT_CLASSIFICATION	2.1241330845609178E-6	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999901401711092	WITHOUT_CLASSIFICATION	9.85982889085925E-6	DOCUMENTATION
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9997940469862991	WITHOUT_CLASSIFICATION	2.059530137008786E-4	DOCUMENTATION
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.999995606046707	WITHOUT_CLASSIFICATION	4.393953293075169E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999857310025034	WITHOUT_CLASSIFICATION	1.4268997496543326E-5	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999857310025034	WITHOUT_CLASSIFICATION	1.4268997496543326E-5	DOCUMENTATION
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999989950272716	WITHOUT_CLASSIFICATION	1.004972728447358E-6	DOCUMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9998115527186423	WITHOUT_CLASSIFICATION	1.8844728135770255E-4	DOCUMENTATION
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999956251661224	WITHOUT_CLASSIFICATION	4.374833877676282E-6	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999901768985904	WITHOUT_CLASSIFICATION	9.823101409620217E-6	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999851454091996	WITHOUT_CLASSIFICATION	1.4854590800405036E-5	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999764995641088	WITHOUT_CLASSIFICATION	2.3500435891052008E-5	DOCUMENTATION
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999922098286064	WITHOUT_CLASSIFICATION	7.790171393634469E-6	DOCUMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999987745449438	WITHOUT_CLASSIFICATION	1.2254550561940461E-6	DOCUMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999847560203737	WITHOUT_CLASSIFICATION	1.524397962642042E-5	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999769238420141	WITHOUT_CLASSIFICATION	2.3076157985801176E-5	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.9999674367704425	WITHOUT_CLASSIFICATION	3.256322955755498E-5	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999674367704425	WITHOUT_CLASSIFICATION	3.256322955755498E-5	DOCUMENTATION
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999996574875374	WITHOUT_CLASSIFICATION	3.4251246254859163E-7	DOCUMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999213878394861	WITHOUT_CLASSIFICATION	7.861216051379578E-5	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999743420566729	WITHOUT_CLASSIFICATION	2.5657943327144034E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9995098343904658	WITHOUT_CLASSIFICATION	4.901656095341398E-4	DOCUMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999948016549358	WITHOUT_CLASSIFICATION	5.198345064146292E-6	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999699356193433	WITHOUT_CLASSIFICATION	3.0064380656639014E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508047536079	WITHOUT_CLASSIFICATION	4.919524639207663E-5	DOCUMENTATION
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.999987679739123	WITHOUT_CLASSIFICATION	1.2320260877146068E-5	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999971344237788	WITHOUT_CLASSIFICATION	2.8655762212452937E-6	DOCUMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999862687358276	WITHOUT_CLASSIFICATION	1.3731264172347862E-5	DOCUMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999656034561506	WITHOUT_CLASSIFICATION	3.439654384934029E-5	DOCUMENTATION
/*implied*/	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9999772840626568	WITHOUT_CLASSIFICATION	2.2715937343158056E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508047536079	WITHOUT_CLASSIFICATION	4.919524639207663E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508047536079	WITHOUT_CLASSIFICATION	4.919524639207663E-5	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999923080557116	WITHOUT_CLASSIFICATION	7.691944288482646E-6	DOCUMENTATION
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999960791287246	WITHOUT_CLASSIFICATION	3.920871275514793E-6	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9992613301049997	WITHOUT_CLASSIFICATION	7.386698950002043E-4	DOCUMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999927663864554	WITHOUT_CLASSIFICATION	7.233613544663176E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.999428383004188	WITHOUT_CLASSIFICATION	5.716169958120442E-4	DOCUMENTATION
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9991790355226536	WITHOUT_CLASSIFICATION	8.209644773463084E-4	DOCUMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.9999992506755104	WITHOUT_CLASSIFICATION	7.493244895916022E-7	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9999994374983638	WITHOUT_CLASSIFICATION	5.625016360725722E-7	DOCUMENTATION
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9993054983129	WITHOUT_CLASSIFICATION	6.945016870999895E-4	DOCUMENTATION
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999959290896551	WITHOUT_CLASSIFICATION	4.070910344864003E-6	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9994581793394337	WITHOUT_CLASSIFICATION	5.418206605662011E-4	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9999590841326356	WITHOUT_CLASSIFICATION	4.091586736440503E-5	DOCUMENTATION
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999034991106677	WITHOUT_CLASSIFICATION	9.650088933244342E-5	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999821923526728	WITHOUT_CLASSIFICATION	1.7807647327136658E-5	DOCUMENTATION
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999785402465176	WITHOUT_CLASSIFICATION	2.145975348239839E-5	DOCUMENTATION
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999776634507345	WITHOUT_CLASSIFICATION	2.233654926551612E-5	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9991276833219918	WITHOUT_CLASSIFICATION	8.723166780082635E-4	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9998235293683158	WITHOUT_CLASSIFICATION	1.764706316842924E-4	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999582881743968	WITHOUT_CLASSIFICATION	4.1711825603166244E-5	DOCUMENTATION
//TODO:	WITHOUT_CLASSIFICATION	0.9977331932372687	WITHOUT_CLASSIFICATION	0.0022668067627312073	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.999989054666649	WITHOUT_CLASSIFICATION	1.0945333350992017E-5	DOCUMENTATION
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999967920137455	WITHOUT_CLASSIFICATION	3.2079862545957042E-6	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999853883244428	WITHOUT_CLASSIFICATION	1.4611675557129302E-5	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999593669359206	WITHOUT_CLASSIFICATION	4.063306407934627E-5	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999730993667613	WITHOUT_CLASSIFICATION	2.6900633238699097E-5	DOCUMENTATION
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999845191257953	WITHOUT_CLASSIFICATION	1.5480874204650795E-5	DOCUMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999821219366488	WITHOUT_CLASSIFICATION	1.7878063351200825E-5	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999952245760438	WITHOUT_CLASSIFICATION	4.775423956190458E-6	DOCUMENTATION
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999988280030332	WITHOUT_CLASSIFICATION	1.1719969667575083E-6	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.9999090566921299	WITHOUT_CLASSIFICATION	9.094330787010677E-5	DOCUMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9999812453188958	WITHOUT_CLASSIFICATION	1.8754681104249444E-5	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.999988489478724	WITHOUT_CLASSIFICATION	1.1510521276025371E-5	DOCUMENTATION
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.999950639607462	WITHOUT_CLASSIFICATION	4.936039253807896E-5	DOCUMENTATION
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9999939862763236	WITHOUT_CLASSIFICATION	6.013723676328406E-6	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999876867392197	WITHOUT_CLASSIFICATION	1.2313260780262655E-5	DOCUMENTATION
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999803624199393	WITHOUT_CLASSIFICATION	1.963758006070522E-5	DOCUMENTATION
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999940805020592	WITHOUT_CLASSIFICATION	5.9194979407683465E-6	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9999913561082859	WITHOUT_CLASSIFICATION	8.64389171416853E-6	DOCUMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9991025274865156	WITHOUT_CLASSIFICATION	8.974725134845156E-4	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999850563683935	WITHOUT_CLASSIFICATION	1.4943631606495462E-5	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999932206474307	WITHOUT_CLASSIFICATION	6.779352569295074E-6	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9998929929656638	WITHOUT_CLASSIFICATION	1.0700703433626918E-4	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999665596900199	WITHOUT_CLASSIFICATION	3.3440309980013085E-5	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9998929929656638	WITHOUT_CLASSIFICATION	1.0700703433626918E-4	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999963640851185	WITHOUT_CLASSIFICATION	3.635914881400259E-6	DOCUMENTATION
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999910818899606	WITHOUT_CLASSIFICATION	8.918110039455907E-6	DOCUMENTATION
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9999447638614071	WITHOUT_CLASSIFICATION	5.523613859295788E-5	DOCUMENTATION
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999978372177142	WITHOUT_CLASSIFICATION	2.162782285894872E-6	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999831477776725	WITHOUT_CLASSIFICATION	1.6852222327570183E-5	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9999447638614071	WITHOUT_CLASSIFICATION	5.523613859295788E-5	DOCUMENTATION
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999967286444259	WITHOUT_CLASSIFICATION	3.2713555739589787E-6	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999902600845015	WITHOUT_CLASSIFICATION	9.739915498432534E-6	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999875196512357	WITHOUT_CLASSIFICATION	1.2480348764274382E-5	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999877270532684	WITHOUT_CLASSIFICATION	1.2272946731529783E-5	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999926176758052	WITHOUT_CLASSIFICATION	7.382324194816806E-6	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999909009295913	WITHOUT_CLASSIFICATION	9.099070408773405E-6	DOCUMENTATION
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999970700092737	WITHOUT_CLASSIFICATION	2.929990726172938E-6	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9999995201394155	WITHOUT_CLASSIFICATION	4.798605844876313E-7	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9999838865434878	WITHOUT_CLASSIFICATION	1.6113456512107264E-5	DOCUMENTATION
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999964786563655	WITHOUT_CLASSIFICATION	3.5213436344341486E-6	DOCUMENTATION
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999931635579388	WITHOUT_CLASSIFICATION	6.836442061142173E-6	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999894650408641	WITHOUT_CLASSIFICATION	1.0534959135943704E-5	DOCUMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999999185243517	WITHOUT_CLASSIFICATION	8.147564837839859E-8	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9999080595109506	WITHOUT_CLASSIFICATION	9.194048904934821E-5	DOCUMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999950368091296	WITHOUT_CLASSIFICATION	4.963190870422165E-6	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9991406800979008	WITHOUT_CLASSIFICATION	8.593199020992672E-4	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999946116440263	WITHOUT_CLASSIFICATION	5.388355973813194E-6	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.99999742711596	WITHOUT_CLASSIFICATION	2.5728840400238843E-6	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999523512084861	WITHOUT_CLASSIFICATION	4.764879151382427E-5	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9998871481761905	WITHOUT_CLASSIFICATION	1.1285182380946613E-4	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9994147090386283	WITHOUT_CLASSIFICATION	5.8529096137174E-4	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9994973741492793	WITHOUT_CLASSIFICATION	5.026258507206892E-4	DOCUMENTATION
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9996477118212661	WITHOUT_CLASSIFICATION	3.5228817873395236E-4	DOCUMENTATION
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9998022977663696	WITHOUT_CLASSIFICATION	1.97702233630448E-4	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9978261150471376	WITHOUT_CLASSIFICATION	0.002173884952862431	DOCUMENTATION
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999993785013691	WITHOUT_CLASSIFICATION	6.214986308191375E-7	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9999630080210689	WITHOUT_CLASSIFICATION	3.699197893120779E-5	DOCUMENTATION
//if its "id"	WITHOUT_CLASSIFICATION	0.9997525449481656	WITHOUT_CLASSIFICATION	2.4745505183441355E-4	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9998450834452364	WITHOUT_CLASSIFICATION	1.5491655476354075E-4	DOCUMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9996476047381307	WITHOUT_CLASSIFICATION	3.523952618693039E-4	DOCUMENTATION
//important!!	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9996476047381307	WITHOUT_CLASSIFICATION	3.523952618693039E-4	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999845213740016	WITHOUT_CLASSIFICATION	1.5478625998309585E-5	DOCUMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9998627499446542	WITHOUT_CLASSIFICATION	1.3725005534579365E-4	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9998871481761905	WITHOUT_CLASSIFICATION	1.1285182380946613E-4	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// collections of values	WITHOUT_CLASSIFICATION	0.9999775477967098	WITHOUT_CLASSIFICATION	2.2452203290214125E-5	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.999008826066678	WITHOUT_CLASSIFICATION	9.911739333220216E-4	DOCUMENTATION
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9997005929604527	WITHOUT_CLASSIFICATION	2.9940703954727373E-4	DOCUMENTATION
//special case	WITHOUT_CLASSIFICATION	0.999593639321741	WITHOUT_CLASSIFICATION	4.063606782590915E-4	DOCUMENTATION
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.999996406167408	WITHOUT_CLASSIFICATION	3.5938325918937934E-6	DOCUMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999087917046678	WITHOUT_CLASSIFICATION	9.120829533210175E-5	DOCUMENTATION
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999825617349265	WITHOUT_CLASSIFICATION	1.7438265073491905E-5	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999522570901491	WITHOUT_CLASSIFICATION	4.7742909850812094E-5	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999619563222887	WITHOUT_CLASSIFICATION	3.80436777113968E-5	DOCUMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9994214454184152	WITHOUT_CLASSIFICATION	5.785545815847533E-4	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999923536433998	WITHOUT_CLASSIFICATION	7.646356600298909E-6	DOCUMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9991276833219918	WITHOUT_CLASSIFICATION	8.723166780082635E-4	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9985270123394864	WITHOUT_CLASSIFICATION	0.0014729876605136163	DOCUMENTATION
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999852285675175	WITHOUT_CLASSIFICATION	1.4771432482550989E-5	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9993837546766633	WITHOUT_CLASSIFICATION	6.16245323336788E-4	DOCUMENTATION
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999248871307427	WITHOUT_CLASSIFICATION	7.511286925726176E-5	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999996671853585	WITHOUT_CLASSIFICATION	3.3281464147786706E-7	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9991276833219918	WITHOUT_CLASSIFICATION	8.723166780082635E-4	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999817159907993	WITHOUT_CLASSIFICATION	1.8284009200752254E-5	DOCUMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999122323189104	WITHOUT_CLASSIFICATION	8.776768108958926E-5	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999984862249752	WITHOUT_CLASSIFICATION	1.5137750248029684E-6	DOCUMENTATION
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9999915164320419	WITHOUT_CLASSIFICATION	8.483567958064756E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999872407019454	WITHOUT_CLASSIFICATION	1.2759298054610778E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999872407019454	WITHOUT_CLASSIFICATION	1.2759298054610778E-5	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999799438281279	WITHOUT_CLASSIFICATION	2.0056171872121565E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999872407019454	WITHOUT_CLASSIFICATION	1.2759298054610778E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999872407019454	WITHOUT_CLASSIFICATION	1.2759298054610778E-5	DOCUMENTATION
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9996460954399744	WITHOUT_CLASSIFICATION	3.5390456002558243E-4	DOCUMENTATION
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9998780083957863	WITHOUT_CLASSIFICATION	1.2199160421369913E-4	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999510016942953	WITHOUT_CLASSIFICATION	4.899830570472829E-5	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999510016942953	WITHOUT_CLASSIFICATION	4.899830570472829E-5	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999927279035138	WITHOUT_CLASSIFICATION	7.2720964861705615E-6	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9999996341106071	WITHOUT_CLASSIFICATION	3.6588939285439707E-7	DOCUMENTATION
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9998774084753423	WITHOUT_CLASSIFICATION	1.225915246577098E-4	DOCUMENTATION
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999917914314265	WITHOUT_CLASSIFICATION	8.208568573494047E-6	DOCUMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999286691336733	WITHOUT_CLASSIFICATION	7.133086632669912E-5	DOCUMENTATION
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9997451842358133	WITHOUT_CLASSIFICATION	2.5481576418665794E-4	DOCUMENTATION
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9999290288124392	WITHOUT_CLASSIFICATION	7.097118756086905E-5	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9996820569132371	WITHOUT_CLASSIFICATION	3.179430867630029E-4	DOCUMENTATION
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999289310211217	WITHOUT_CLASSIFICATION	7.106897887837578E-5	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.9996421883441076	WITHOUT_CLASSIFICATION	3.5781165589240254E-4	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9972374018472059	WITHOUT_CLASSIFICATION	0.0027625981527940346	DOCUMENTATION
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9998143827014085	WITHOUT_CLASSIFICATION	1.8561729859155443E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999549260052112	WITHOUT_CLASSIFICATION	4.5073994788909776E-5	DOCUMENTATION
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9999453927118772	WITHOUT_CLASSIFICATION	5.4607288122891343E-5	DOCUMENTATION
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9968521602553306	WITHOUT_CLASSIFICATION	0.0031478397446693543	DOCUMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9996479929890263	WITHOUT_CLASSIFICATION	3.5200701097373846E-4	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999860311800948	WITHOUT_CLASSIFICATION	1.3968819905263453E-5	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.999930406150891	WITHOUT_CLASSIFICATION	6.959384910898787E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999549260052112	WITHOUT_CLASSIFICATION	4.5073994788909776E-5	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9994147090386283	WITHOUT_CLASSIFICATION	5.8529096137174E-4	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9995869349184163	WITHOUT_CLASSIFICATION	4.130650815837661E-4	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999879179462932	WITHOUT_CLASSIFICATION	1.2082053706796072E-5	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999847268915345	WITHOUT_CLASSIFICATION	1.527310846546981E-5	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9996450169657468	WITHOUT_CLASSIFICATION	3.549830342531957E-4	DOCUMENTATION
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999974070306282	WITHOUT_CLASSIFICATION	2.5929693716371432E-6	DOCUMENTATION
// careful with this!	WITHOUT_CLASSIFICATION	0.9999775961672385	WITHOUT_CLASSIFICATION	2.2403832761571034E-5	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999889912207454	WITHOUT_CLASSIFICATION	1.1008779254750674E-5	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.999986002596981	WITHOUT_CLASSIFICATION	1.3997403018938607E-5	DOCUMENTATION
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9986905479022146	WITHOUT_CLASSIFICATION	0.0013094520977853465	DOCUMENTATION
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9996127639232023	WITHOUT_CLASSIFICATION	3.8723607679769906E-4	DOCUMENTATION
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999743242823508	WITHOUT_CLASSIFICATION	2.5675717649265864E-5	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999975562007082	WITHOUT_CLASSIFICATION	2.443799291754751E-6	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999789262097226	WITHOUT_CLASSIFICATION	2.1073790277378713E-5	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9999849748283025	WITHOUT_CLASSIFICATION	1.5025171697514702E-5	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.999979326768425	WITHOUT_CLASSIFICATION	2.067323157491886E-5	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.999995567728664	WITHOUT_CLASSIFICATION	4.4322713359661256E-6	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999983025655762	WITHOUT_CLASSIFICATION	1.6974344237803997E-6	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999982753980483	WITHOUT_CLASSIFICATION	1.7246019518058571E-6	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999960147904821	WITHOUT_CLASSIFICATION	3.985209517867896E-6	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9997624057977762	WITHOUT_CLASSIFICATION	2.3759420222387514E-4	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9993982166708423	WITHOUT_CLASSIFICATION	6.017833291576914E-4	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999984959235322	WITHOUT_CLASSIFICATION	1.5040764678457529E-6	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.999986002596981	WITHOUT_CLASSIFICATION	1.3997403018938607E-5	DOCUMENTATION
//ignore whitespace	WITHOUT_CLASSIFICATION	0.999608989977102	WITHOUT_CLASSIFICATION	3.910100228980222E-4	DOCUMENTATION
//do replacements	WITHOUT_CLASSIFICATION	0.9996131887512653	WITHOUT_CLASSIFICATION	3.8681124873473174E-4	DOCUMENTATION
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9991229618521389	WITHOUT_CLASSIFICATION	8.770381478611278E-4	DOCUMENTATION
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999674348385034	WITHOUT_CLASSIFICATION	3.256516149659678E-5	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999950684309017	WITHOUT_CLASSIFICATION	4.931569098304171E-5	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.9996025823907032	WITHOUT_CLASSIFICATION	3.9741760929687034E-4	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.999839390957835	WITHOUT_CLASSIFICATION	1.6060904216485582E-4	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999775777372945	WITHOUT_CLASSIFICATION	2.242226270552912E-5	DOCUMENTATION
//sql = update;	WITHOUT_CLASSIFICATION	0.999839390957835	WITHOUT_CLASSIFICATION	1.6060904216485582E-4	DOCUMENTATION
//hilo config	WITHOUT_CLASSIFICATION	0.9996075211360982	WITHOUT_CLASSIFICATION	3.924788639018811E-4	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999342237037384	WITHOUT_CLASSIFICATION	6.577629626158966E-5	DOCUMENTATION
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999969000313903	WITHOUT_CLASSIFICATION	3.0999686097643036E-6	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999768520834488	WITHOUT_CLASSIFICATION	2.314791655122515E-5	DOCUMENTATION
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9989020639219727	WITHOUT_CLASSIFICATION	0.001097936078027292	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999033526360172	WITHOUT_CLASSIFICATION	9.664736398279297E-5	DOCUMENTATION
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999311708899522	WITHOUT_CLASSIFICATION	6.882911004788923E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9996643243909122	WITHOUT_CLASSIFICATION	3.356756090877468E-4	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999342237037384	WITHOUT_CLASSIFICATION	6.577629626158966E-5	DOCUMENTATION
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999741340069255	WITHOUT_CLASSIFICATION	2.5865993074517307E-5	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9999973134561578	WITHOUT_CLASSIFICATION	2.6865438421217233E-6	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999732919655272	WITHOUT_CLASSIFICATION	2.6708034472845977E-5	DOCUMENTATION
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999961255915776	WITHOUT_CLASSIFICATION	3.874408422473712E-6	DOCUMENTATION
// the default...	WITHOUT_CLASSIFICATION	0.9999907903274342	WITHOUT_CLASSIFICATION	9.209672565672859E-6	DOCUMENTATION
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999999108468047	WITHOUT_CLASSIFICATION	8.91531953141429E-8	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999033526360172	WITHOUT_CLASSIFICATION	9.664736398279297E-5	DOCUMENTATION
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999926903395883	WITHOUT_CLASSIFICATION	7.309660411777179E-6	DOCUMENTATION
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998542780697154	WITHOUT_CLASSIFICATION	1.4572193028466448E-4	DOCUMENTATION
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999522408421863	WITHOUT_CLASSIFICATION	4.7759157813639416E-5	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999567646675978	WITHOUT_CLASSIFICATION	4.323533240217628E-5	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999567646675978	WITHOUT_CLASSIFICATION	4.323533240217628E-5	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999567646675978	WITHOUT_CLASSIFICATION	4.323533240217628E-5	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999894403406792	WITHOUT_CLASSIFICATION	1.0559659320816266E-5	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999894403406792	WITHOUT_CLASSIFICATION	1.0559659320816266E-5	DOCUMENTATION
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.99987200032206	WITHOUT_CLASSIFICATION	1.279996779398875E-4	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999844228951318	WITHOUT_CLASSIFICATION	1.557710486815431E-5	DOCUMENTATION
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999776618721639	WITHOUT_CLASSIFICATION	2.23381278361623E-5	DOCUMENTATION
// scroll backward	WITHOUT_CLASSIFICATION	0.9999776487125036	WITHOUT_CLASSIFICATION	2.2351287496390582E-5	DOCUMENTATION
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.9999759488522092	WITHOUT_CLASSIFICATION	2.4051147790765195E-5	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508002632371	WITHOUT_CLASSIFICATION	4.919973676279059E-5	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999548464470256	WITHOUT_CLASSIFICATION	4.515355297435202E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999950684309017	WITHOUT_CLASSIFICATION	4.931569098304171E-5	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999997010879781	WITHOUT_CLASSIFICATION	2.9891202193447427E-7	DOCUMENTATION
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999624353776494	WITHOUT_CLASSIFICATION	3.756462235063164E-5	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508002632371	WITHOUT_CLASSIFICATION	4.919973676279059E-5	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999548464470256	WITHOUT_CLASSIFICATION	4.515355297435202E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999950684309017	WITHOUT_CLASSIFICATION	4.931569098304171E-5	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999804788800835	WITHOUT_CLASSIFICATION	1.9521119916520044E-5	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999293262646939	WITHOUT_CLASSIFICATION	7.067373530610338E-5	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999631217609553	WITHOUT_CLASSIFICATION	3.687823904465477E-5	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9999997905918179	WITHOUT_CLASSIFICATION	2.0940818214516055E-7	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9995428842491288	WITHOUT_CLASSIFICATION	4.57115750871124E-4	DOCUMENTATION
//checking for named queries	WITHOUT_CLASSIFICATION	0.9994220111574899	WITHOUT_CLASSIFICATION	5.779888425101374E-4	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9970229753135528	WITHOUT_CLASSIFICATION	0.0029770246864473204	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.999965019693593	WITHOUT_CLASSIFICATION	3.498030640700816E-5	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999748756580386	WITHOUT_CLASSIFICATION	2.512434196137711E-5	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999891278902608	WITHOUT_CLASSIFICATION	1.0872109739210678E-5	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9997492960220485	WITHOUT_CLASSIFICATION	2.5070397795152896E-4	DOCUMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999865141728617	WITHOUT_CLASSIFICATION	1.3485827138412808E-5	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999900870942436	WITHOUT_CLASSIFICATION	9.912905756409333E-6	DOCUMENTATION
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9998933513758851	WITHOUT_CLASSIFICATION	1.066486241148145E-4	DOCUMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9985703050316366	WITHOUT_CLASSIFICATION	0.0014296949683634127	DOCUMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999614962591604	WITHOUT_CLASSIFICATION	3.8503740839573526E-5	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999522158797634	WITHOUT_CLASSIFICATION	4.77841202367636E-5	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9998975546932172	WITHOUT_CLASSIFICATION	1.0244530678278583E-4	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999910919635541	WITHOUT_CLASSIFICATION	8.908036446005995E-6	DOCUMENTATION
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9957947812659181	WITHOUT_CLASSIFICATION	0.004205218734081934	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999932686381436	WITHOUT_CLASSIFICATION	6.731361856258453E-6	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999976903591139	WITHOUT_CLASSIFICATION	2.3096408860051866E-6	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9990523675073814	WITHOUT_CLASSIFICATION	9.476324926185365E-4	DOCUMENTATION
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9996014686595142	WITHOUT_CLASSIFICATION	3.985313404857921E-4	DOCUMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999509234138282	WITHOUT_CLASSIFICATION	4.907658617170105E-5	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999514091890109	WITHOUT_CLASSIFICATION	4.859081098910386E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9991786318500673	WITHOUT_CLASSIFICATION	8.213681499326851E-4	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9991786318500673	WITHOUT_CLASSIFICATION	8.213681499326851E-4	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999977241500918	WITHOUT_CLASSIFICATION	2.275849908272659E-6	DOCUMENTATION
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999997763402445	WITHOUT_CLASSIFICATION	2.236597554197529E-7	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999809971143575	WITHOUT_CLASSIFICATION	1.900288564241843E-5	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9991276833219918	WITHOUT_CLASSIFICATION	8.723166780082635E-4	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999254613700268	WITHOUT_CLASSIFICATION	7.453862997316349E-5	DOCUMENTATION
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9996353743775106	WITHOUT_CLASSIFICATION	3.6462562248938305E-4	DOCUMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9971374695849484	WITHOUT_CLASSIFICATION	0.0028625304150516518	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.999994527535809	WITHOUT_CLASSIFICATION	5.4724641909934E-6	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.999986966822232	WITHOUT_CLASSIFICATION	1.3033177768136505E-5	DOCUMENTATION
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999512344611434	WITHOUT_CLASSIFICATION	4.876553885647179E-5	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999512344611434	WITHOUT_CLASSIFICATION	4.876553885647179E-5	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999512344611434	WITHOUT_CLASSIFICATION	4.876553885647179E-5	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999512344611434	WITHOUT_CLASSIFICATION	4.876553885647179E-5	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999512344611434	WITHOUT_CLASSIFICATION	4.876553885647179E-5	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999512344611434	WITHOUT_CLASSIFICATION	4.876553885647179E-5	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999512344611434	WITHOUT_CLASSIFICATION	4.876553885647179E-5	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999512344611434	WITHOUT_CLASSIFICATION	4.876553885647179E-5	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999512344611434	WITHOUT_CLASSIFICATION	4.876553885647179E-5	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999512344611434	WITHOUT_CLASSIFICATION	4.876553885647179E-5	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999512344611434	WITHOUT_CLASSIFICATION	4.876553885647179E-5	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999957596811399	WITHOUT_CLASSIFICATION	4.240318860077482E-6	DOCUMENTATION
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9998879770937802	WITHOUT_CLASSIFICATION	1.1202290621985943E-4	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999141227319198	WITHOUT_CLASSIFICATION	8.587726808018758E-5	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999197309225606	WITHOUT_CLASSIFICATION	8.026907743930544E-5	DOCUMENTATION
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999844959359058	WITHOUT_CLASSIFICATION	1.5504064094202638E-5	DOCUMENTATION
// not for internal use:	WITHOUT_CLASSIFICATION	0.9999790756870632	WITHOUT_CLASSIFICATION	2.092431293673769E-5	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.999872133909399	WITHOUT_CLASSIFICATION	1.2786609060106796E-4	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9999949311310966	WITHOUT_CLASSIFICATION	5.068868903438607E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999141227319198	WITHOUT_CLASSIFICATION	8.587726808018758E-5	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999141227319198	WITHOUT_CLASSIFICATION	8.587726808018758E-5	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9994823030714997	WITHOUT_CLASSIFICATION	5.176969285003507E-4	DOCUMENTATION
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999958234523443	WITHOUT_CLASSIFICATION	4.176547655794925E-6	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999994788903411	WITHOUT_CLASSIFICATION	5.211096588615445E-7	DOCUMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999926002131272	WITHOUT_CLASSIFICATION	7.39978687273129E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.999844932216808	WITHOUT_CLASSIFICATION	1.5506778319187694E-4	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999522158797634	WITHOUT_CLASSIFICATION	4.77841202367636E-5	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9994962160402876	WITHOUT_CLASSIFICATION	5.037839597124037E-4	DOCUMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999856775516975	WITHOUT_CLASSIFICATION	1.4322448302579173E-5	DOCUMENTATION
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999656258915103	WITHOUT_CLASSIFICATION	3.437410848969629E-5	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999638550167977	WITHOUT_CLASSIFICATION	3.6144983202243584E-5	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.999998000309828	WITHOUT_CLASSIFICATION	1.9996901719914674E-6	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999577972920766	WITHOUT_CLASSIFICATION	4.220270792341328E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999782898807139	WITHOUT_CLASSIFICATION	2.17101192860811E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999782898807139	WITHOUT_CLASSIFICATION	2.17101192860811E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999782898807139	WITHOUT_CLASSIFICATION	2.17101192860811E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999782898807139	WITHOUT_CLASSIFICATION	2.17101192860811E-5	DOCUMENTATION
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999950684309017	WITHOUT_CLASSIFICATION	4.931569098304171E-5	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999523142366061	WITHOUT_CLASSIFICATION	4.768576339395188E-5	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9984156816802099	WITHOUT_CLASSIFICATION	0.0015843183197901491	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999950684309017	WITHOUT_CLASSIFICATION	4.931569098304171E-5	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9999651668100226	WITHOUT_CLASSIFICATION	3.4833189977523516E-5	DOCUMENTATION
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9999676099588634	WITHOUT_CLASSIFICATION	3.239004113662898E-5	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999507978710642	WITHOUT_CLASSIFICATION	4.920212893584747E-5	DOCUMENTATION
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999590258315635	WITHOUT_CLASSIFICATION	4.097416843652597E-5	DOCUMENTATION
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9999294373342054	WITHOUT_CLASSIFICATION	7.056266579466126E-5	DOCUMENTATION
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999896614458222	WITHOUT_CLASSIFICATION	1.0338554177872411E-5	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9993673839614324	WITHOUT_CLASSIFICATION	6.326160385675602E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999534226629513	WITHOUT_CLASSIFICATION	4.6577337048705784E-5	DOCUMENTATION
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9998296693968686	WITHOUT_CLASSIFICATION	1.7033060313147202E-4	DOCUMENTATION
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.999965605669104	WITHOUT_CLASSIFICATION	3.439433089600964E-5	DOCUMENTATION
//no big deal	WITHOUT_CLASSIFICATION	0.9996355841129005	WITHOUT_CLASSIFICATION	3.6441588709951514E-4	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999679751867665	WITHOUT_CLASSIFICATION	3.202481323346623E-5	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999679751867665	WITHOUT_CLASSIFICATION	3.202481323346623E-5	DOCUMENTATION
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999198036680853	WITHOUT_CLASSIFICATION	8.019633191471157E-5	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9998337230481215	WITHOUT_CLASSIFICATION	1.6627695187858163E-4	DOCUMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9995229537149062	WITHOUT_CLASSIFICATION	4.7704628509380367E-4	DOCUMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999950684309017	WITHOUT_CLASSIFICATION	4.931569098304171E-5	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999950684309017	WITHOUT_CLASSIFICATION	4.931569098304171E-5	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.999951757331206	WITHOUT_CLASSIFICATION	4.824266879396918E-5	DOCUMENTATION
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999567646675978	WITHOUT_CLASSIFICATION	4.323533240217628E-5	DOCUMENTATION
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9999876364802492	WITHOUT_CLASSIFICATION	1.2363519750782875E-5	DOCUMENTATION
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999670466432621	WITHOUT_CLASSIFICATION	3.295335673795753E-5	DOCUMENTATION
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9999895575966998	WITHOUT_CLASSIFICATION	1.0442403300162529E-5	DOCUMENTATION
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999448795678538	WITHOUT_CLASSIFICATION	5.5120432146284666E-5	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999506449401167	WITHOUT_CLASSIFICATION	4.935505988334118E-5	DOCUMENTATION
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999417967513947	WITHOUT_CLASSIFICATION	5.820324860530598E-5	DOCUMENTATION
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999657423455085	WITHOUT_CLASSIFICATION	3.4257654491510075E-5	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.999985205748033	WITHOUT_CLASSIFICATION	1.4794251966889798E-5	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999675814086542	WITHOUT_CLASSIFICATION	3.241859134574948E-5	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999846338290328	WITHOUT_CLASSIFICATION	1.536617096715673E-5	DOCUMENTATION
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999855784436897	WITHOUT_CLASSIFICATION	1.4421556310339477E-5	DOCUMENTATION
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.99999154375485	WITHOUT_CLASSIFICATION	8.456245149975276E-6	DOCUMENTATION
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999895429250492	WITHOUT_CLASSIFICATION	1.0457074950757592E-5	DOCUMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9998822007805659	WITHOUT_CLASSIFICATION	1.1779921943417953E-4	DOCUMENTATION
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9998379343265019	WITHOUT_CLASSIFICATION	1.620656734980136E-4	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999860712863728	WITHOUT_CLASSIFICATION	1.3928713627227787E-5	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999917733601569	WITHOUT_CLASSIFICATION	8.226639843118852E-6	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9999821067634849	WITHOUT_CLASSIFICATION	1.7893236515077142E-5	DOCUMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999761512116856	WITHOUT_CLASSIFICATION	2.3848788314361908E-5	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9994174803384188	WITHOUT_CLASSIFICATION	5.82519661581158E-4	DOCUMENTATION
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.999990827017602	WITHOUT_CLASSIFICATION	9.172982398023749E-6	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.999836124526976	WITHOUT_CLASSIFICATION	1.6387547302408514E-4	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.999995670137845	WITHOUT_CLASSIFICATION	4.329862155041089E-6	DOCUMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9998555076257404	WITHOUT_CLASSIFICATION	1.444923742597008E-4	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.997085077863325	WITHOUT_CLASSIFICATION	0.0029149221366750458	DOCUMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9999630358245989	WITHOUT_CLASSIFICATION	3.69641754011841E-5	DOCUMENTATION
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9954487417836096	WITHOUT_CLASSIFICATION	0.004551258216390366	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999998308424038	WITHOUT_CLASSIFICATION	1.691575961699563E-7	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.9999681329036411	WITHOUT_CLASSIFICATION	3.1867096359011534E-5	DOCUMENTATION
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9996479066528448	WITHOUT_CLASSIFICATION	3.5209334715526606E-4	DOCUMENTATION
//handle empty collections	WITHOUT_CLASSIFICATION	0.9995014327641338	WITHOUT_CLASSIFICATION	4.985672358661901E-4	DOCUMENTATION
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999994099436305	WITHOUT_CLASSIFICATION	5.900563695175327E-7	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9999677896865946	WITHOUT_CLASSIFICATION	3.22103134053162E-5	DOCUMENTATION
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9999995388072177	WITHOUT_CLASSIFICATION	4.6119278227294805E-7	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999950736003244	WITHOUT_CLASSIFICATION	4.926399675690333E-6	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.999574072606786	WITHOUT_CLASSIFICATION	4.2592739321402454E-4	DOCUMENTATION
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9990398991299617	WITHOUT_CLASSIFICATION	9.601008700382083E-4	DOCUMENTATION
//use the id passed in	WITHOUT_CLASSIFICATION	0.9994597293145774	WITHOUT_CLASSIFICATION	5.402706854227205E-4	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9997119293528131	WITHOUT_CLASSIFICATION	2.8807064718689037E-4	DOCUMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999614150889291	WITHOUT_CLASSIFICATION	3.85849110708155E-5	DOCUMENTATION
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.999804403425061	WITHOUT_CLASSIFICATION	1.955965749388454E-4	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9994442674326008	WITHOUT_CLASSIFICATION	5.557325673991942E-4	DOCUMENTATION
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9993788689780234	WITHOUT_CLASSIFICATION	6.211310219765624E-4	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9999796860004652	WITHOUT_CLASSIFICATION	2.031399953487109E-5	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9996807508164245	WITHOUT_CLASSIFICATION	3.1924918357549434E-4	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9985973508657732	WITHOUT_CLASSIFICATION	0.0014026491342268746	DOCUMENTATION
// look for a proxy	WITHOUT_CLASSIFICATION	0.9999958996478072	WITHOUT_CLASSIFICATION	4.100352192730592E-6	DOCUMENTATION
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9987198117628214	WITHOUT_CLASSIFICATION	0.0012801882371785119	DOCUMENTATION
//its the given optional object	WITHOUT_CLASSIFICATION	0.9994126062290017	WITHOUT_CLASSIFICATION	5.873937709982017E-4	DOCUMENTATION
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999965082227176	WITHOUT_CLASSIFICATION	3.491777282471433E-6	DOCUMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.99969825080393	WITHOUT_CLASSIFICATION	3.017491960699596E-4	DOCUMENTATION
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999937673770202	WITHOUT_CLASSIFICATION	6.232622979735392E-6	DOCUMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999625946997581	WITHOUT_CLASSIFICATION	3.74053002418259E-5	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999499616155	WITHOUT_CLASSIFICATION	5.003838450129732E-8	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9994644713388928	WITHOUT_CLASSIFICATION	5.355286611071034E-4	DOCUMENTATION
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999812198203685	WITHOUT_CLASSIFICATION	1.878017963148767E-5	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9999731531535218	WITHOUT_CLASSIFICATION	2.6846846478245242E-5	DOCUMENTATION
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999994042254636	WITHOUT_CLASSIFICATION	5.957745364318741E-7	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9991276833219918	WITHOUT_CLASSIFICATION	8.723166780082635E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9986628112220121	WITHOUT_CLASSIFICATION	0.0013371887779878623	DOCUMENTATION
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.999927682773429	WITHOUT_CLASSIFICATION	7.231722657102527E-5	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9999776554597949	WITHOUT_CLASSIFICATION	2.2344540205054898E-5	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9974956110061501	WITHOUT_CLASSIFICATION	0.002504388993849786	DOCUMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999850514433978	WITHOUT_CLASSIFICATION	1.4948556602132406E-5	DOCUMENTATION
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9999494691522787	WITHOUT_CLASSIFICATION	5.0530847721254304E-5	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999961372132621	WITHOUT_CLASSIFICATION	3.862786737998644E-6	DOCUMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999996647225864	WITHOUT_CLASSIFICATION	3.352774136277098E-7	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9997025503046426	WITHOUT_CLASSIFICATION	2.9744969535741887E-4	DOCUMENTATION
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999996358891291	WITHOUT_CLASSIFICATION	3.6411087088861906E-7	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.999752477914903	WITHOUT_CLASSIFICATION	2.475220850971118E-4	DOCUMENTATION
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9998718944398483	WITHOUT_CLASSIFICATION	1.281055601517753E-4	DOCUMENTATION
//a composite key	WITHOUT_CLASSIFICATION	0.9995913469633916	WITHOUT_CLASSIFICATION	4.086530366085004E-4	DOCUMENTATION
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999982952390101	WITHOUT_CLASSIFICATION	1.7047609898814557E-6	DOCUMENTATION
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999766498036678	WITHOUT_CLASSIFICATION	2.3350196332160736E-5	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.9999526849838986	WITHOUT_CLASSIFICATION	4.7315016101532126E-5	DOCUMENTATION
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9991406800979008	WITHOUT_CLASSIFICATION	8.593199020992672E-4	DOCUMENTATION
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9999738498749614	WITHOUT_CLASSIFICATION	2.6150125038627664E-5	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9999997673046155	WITHOUT_CLASSIFICATION	2.326953845975235E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.999979090222535	WITHOUT_CLASSIFICATION	2.090977746504994E-5	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999572192539055	WITHOUT_CLASSIFICATION	4.278074609458133E-5	DOCUMENTATION
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.999884486065933	WITHOUT_CLASSIFICATION	1.1551393406687917E-4	DOCUMENTATION
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9998531472543217	WITHOUT_CLASSIFICATION	1.4685274567835248E-4	DOCUMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9997473737211461	WITHOUT_CLASSIFICATION	2.526262788539444E-4	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9998447999533975	WITHOUT_CLASSIFICATION	1.552000466025169E-4	DOCUMENTATION
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9994212113117015	WITHOUT_CLASSIFICATION	5.787886882984828E-4	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9993583741524531	WITHOUT_CLASSIFICATION	6.416258475468708E-4	DOCUMENTATION
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999131439617255	WITHOUT_CLASSIFICATION	8.685603827450956E-5	DOCUMENTATION
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999994645799458	WITHOUT_CLASSIFICATION	5.35420054222231E-7	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9999920677455759	WITHOUT_CLASSIFICATION	7.93225442401211E-6	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999807752420817	WITHOUT_CLASSIFICATION	1.922475791823476E-5	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9999651329297118	WITHOUT_CLASSIFICATION	3.4867070288140424E-5	DOCUMENTATION
//the criteria instance	WITHOUT_CLASSIFICATION	0.9994984388560845	WITHOUT_CLASSIFICATION	5.01561143915447E-4	DOCUMENTATION
// the entity name	WITHOUT_CLASSIFICATION	0.9999929038387085	WITHOUT_CLASSIFICATION	7.096161291551293E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9992161506054219	WITHOUT_CLASSIFICATION	7.838493945780744E-4	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9992161506054219	WITHOUT_CLASSIFICATION	7.838493945780744E-4	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999402483634584	WITHOUT_CLASSIFICATION	5.975163654166764E-5	DOCUMENTATION
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9994533625415927	WITHOUT_CLASSIFICATION	5.466374584073041E-4	DOCUMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999506657349573	WITHOUT_CLASSIFICATION	4.933426504266805E-5	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999285726888549	WITHOUT_CLASSIFICATION	7.142731114509445E-5	DOCUMENTATION
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999187778510445	WITHOUT_CLASSIFICATION	8.122214895539202E-5	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999647615438241	WITHOUT_CLASSIFICATION	3.523845617589288E-5	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999232558692723	WITHOUT_CLASSIFICATION	7.674413072770474E-5	DOCUMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.999992521489298	WITHOUT_CLASSIFICATION	7.478510702112589E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9998437674241449	WITHOUT_CLASSIFICATION	1.562325758550183E-4	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999942495745467	WITHOUT_CLASSIFICATION	5.750425453199257E-6	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999953507746329	WITHOUT_CLASSIFICATION	4.649225367085312E-6	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9999755837213262	WITHOUT_CLASSIFICATION	2.4416278673846238E-5	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.999960883297572	WITHOUT_CLASSIFICATION	3.911670242797469E-5	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999839855211667	WITHOUT_CLASSIFICATION	1.6014478833224867E-5	DOCUMENTATION
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.99999611018081	WITHOUT_CLASSIFICATION	3.8898191900299764E-6	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.999808869989466	WITHOUT_CLASSIFICATION	1.911300105339111E-4	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.999808869989466	WITHOUT_CLASSIFICATION	1.911300105339111E-4	DOCUMENTATION
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999973412036199	WITHOUT_CLASSIFICATION	2.6587963799968874E-6	DOCUMENTATION
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999955306469961	WITHOUT_CLASSIFICATION	4.469353003997316E-6	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999843718129487	WITHOUT_CLASSIFICATION	1.5628187051220704E-5	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999793637545407	WITHOUT_CLASSIFICATION	2.0636245459264893E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999877009366974	WITHOUT_CLASSIFICATION	1.2299063302660172E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999728892693995	WITHOUT_CLASSIFICATION	2.711073060039977E-5	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999728892693995	WITHOUT_CLASSIFICATION	2.711073060039977E-5	DOCUMENTATION
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999763969068699	WITHOUT_CLASSIFICATION	2.360309313014558E-5	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999998271943223	WITHOUT_CLASSIFICATION	1.72805677589727E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999509277812351	WITHOUT_CLASSIFICATION	4.907221876490012E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999998502937294	WITHOUT_CLASSIFICATION	1.4970627056697032E-7	DOCUMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9999688439851172	WITHOUT_CLASSIFICATION	3.1156014882829714E-5	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999940743018986	WITHOUT_CLASSIFICATION	5.925698101333011E-6	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999824993744563	WITHOUT_CLASSIFICATION	1.7500625543655722E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999934713787754	WITHOUT_CLASSIFICATION	6.5286212246094685E-6	DOCUMENTATION
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.999920181278728	WITHOUT_CLASSIFICATION	7.981872127209797E-5	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999996271300038	WITHOUT_CLASSIFICATION	3.7286999628785664E-7	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999948974762682	WITHOUT_CLASSIFICATION	5.102523731651067E-6	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999967044106617	WITHOUT_CLASSIFICATION	3.295589338394707E-6	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.9999945807828573	WITHOUT_CLASSIFICATION	5.419217142720141E-6	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9992613301049997	WITHOUT_CLASSIFICATION	7.386698950002043E-4	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.999793661245219	WITHOUT_CLASSIFICATION	2.063387547810388E-4	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9996476047381307	WITHOUT_CLASSIFICATION	3.523952618693039E-4	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.999646862691993	WITHOUT_CLASSIFICATION	3.531373080070526E-4	DOCUMENTATION
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999254934460842	WITHOUT_CLASSIFICATION	7.450655391586421E-5	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999706802921632	WITHOUT_CLASSIFICATION	2.9319707836807697E-5	DOCUMENTATION
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999665575608094	WITHOUT_CLASSIFICATION	3.34424391905875E-5	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999923527784398	WITHOUT_CLASSIFICATION	7.64722156024468E-6	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9998620545530456	WITHOUT_CLASSIFICATION	1.379454469544721E-4	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9999728703107235	WITHOUT_CLASSIFICATION	2.7129689276478326E-5	DOCUMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999580018424129	WITHOUT_CLASSIFICATION	4.1998157587061625E-5	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9999676382313927	WITHOUT_CLASSIFICATION	3.2361768607406295E-5	DOCUMENTATION
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9999971740263055	WITHOUT_CLASSIFICATION	2.8259736945165823E-6	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9999996191629289	WITHOUT_CLASSIFICATION	3.808370711020944E-7	DOCUMENTATION
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.999995835394966	WITHOUT_CLASSIFICATION	4.164605034103887E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999937281801745	WITHOUT_CLASSIFICATION	6.27181982554067E-6	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.9977868204808273	WITHOUT_CLASSIFICATION	0.0022131795191727174	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9996026680752182	WITHOUT_CLASSIFICATION	3.973319247817794E-4	DOCUMENTATION
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9999898418667804	WITHOUT_CLASSIFICATION	1.0158133219542384E-5	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9982077325904669	WITHOUT_CLASSIFICATION	0.0017922674095330905	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9994019051754537	WITHOUT_CLASSIFICATION	5.98094824546384E-4	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9998742527547799	WITHOUT_CLASSIFICATION	1.2574724522016218E-4	DOCUMENTATION
//may be final	WITHOUT_CLASSIFICATION	0.9999426960148762	WITHOUT_CLASSIFICATION	5.7303985123918214E-5	DOCUMENTATION
// may be final	WITHOUT_CLASSIFICATION	0.999997935344461	WITHOUT_CLASSIFICATION	2.0646555388866675E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9994516136382205	WITHOUT_CLASSIFICATION	5.483863617793998E-4	DOCUMENTATION
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999687306000205	WITHOUT_CLASSIFICATION	3.126939997946829E-5	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9999793360907071	WITHOUT_CLASSIFICATION	2.066390929289003E-5	DOCUMENTATION
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9993829346187545	WITHOUT_CLASSIFICATION	6.170653812455062E-4	DOCUMENTATION
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.999884089688955	WITHOUT_CLASSIFICATION	1.1591031104500379E-4	DOCUMENTATION
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999983617202066	WITHOUT_CLASSIFICATION	1.6382797934146873E-6	DOCUMENTATION
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999900296817968	WITHOUT_CLASSIFICATION	9.970318203130064E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9994516136382205	WITHOUT_CLASSIFICATION	5.483863617793998E-4	DOCUMENTATION
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.999962699400389	WITHOUT_CLASSIFICATION	3.730059961105555E-5	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.999680357024506	WITHOUT_CLASSIFICATION	3.1964297549406343E-4	DOCUMENTATION
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999620395859137	WITHOUT_CLASSIFICATION	3.796041408631184E-5	DOCUMENTATION
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9999973869914011	WITHOUT_CLASSIFICATION	2.6130085989902856E-6	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999659661913801	WITHOUT_CLASSIFICATION	3.403380861980687E-5	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9999675028913743	WITHOUT_CLASSIFICATION	3.249710862562343E-5	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9998830493280185	WITHOUT_CLASSIFICATION	1.1695067198150525E-4	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9998363075207071	WITHOUT_CLASSIFICATION	1.6369247929280936E-4	DOCUMENTATION
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999915968912583	WITHOUT_CLASSIFICATION	8.403108741736938E-6	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9995960861819321	WITHOUT_CLASSIFICATION	4.039138180678602E-4	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999978744516361	WITHOUT_CLASSIFICATION	2.1255483638894613E-6	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9995960861819321	WITHOUT_CLASSIFICATION	4.039138180678602E-4	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999984377598812	WITHOUT_CLASSIFICATION	1.562240118808737E-6	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.997867457299279	WITHOUT_CLASSIFICATION	0.002132542700721104	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999984377598812	WITHOUT_CLASSIFICATION	1.562240118808737E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999658161827031	WITHOUT_CLASSIFICATION	3.4183817296963066E-5	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9999627465864783	WITHOUT_CLASSIFICATION	3.725341352162115E-5	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9971998004262632	WITHOUT_CLASSIFICATION	0.002800199573736763	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9971998004262632	WITHOUT_CLASSIFICATION	0.002800199573736763	DOCUMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9991678752830063	WITHOUT_CLASSIFICATION	8.32124716993722E-4	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9991704402972186	WITHOUT_CLASSIFICATION	8.295597027813383E-4	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9991678752830063	WITHOUT_CLASSIFICATION	8.32124716993722E-4	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9993908902833608	WITHOUT_CLASSIFICATION	6.091097166391629E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.999984015834135	WITHOUT_CLASSIFICATION	1.5984165865077073E-5	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9996079307450952	WITHOUT_CLASSIFICATION	3.920692549047316E-4	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9992111433413987	WITHOUT_CLASSIFICATION	7.888566586012176E-4	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9998313870674829	WITHOUT_CLASSIFICATION	1.6861293251701565E-4	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.9970229753135528	WITHOUT_CLASSIFICATION	0.0029770246864473204	DOCUMENTATION
//SQL statements	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9998122610560348	WITHOUT_CLASSIFICATION	1.87738943965217E-4	DOCUMENTATION
//types	WITHOUT_CLASSIFICATION	0.9970229753135528	WITHOUT_CLASSIFICATION	0.0029770246864473204	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999776397589653	WITHOUT_CLASSIFICATION	2.2360241034720262E-5	DOCUMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.999395559146655	WITHOUT_CLASSIFICATION	6.044408533449561E-4	DOCUMENTATION
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999803203142942	WITHOUT_CLASSIFICATION	1.9679685705832795E-5	DOCUMENTATION
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999800979467016	WITHOUT_CLASSIFICATION	1.99020532984477E-5	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.999978237245352	WITHOUT_CLASSIFICATION	2.176275464795409E-5	DOCUMENTATION
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9996476047381307	WITHOUT_CLASSIFICATION	3.523952618693039E-4	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9970229753135528	WITHOUT_CLASSIFICATION	0.0029770246864473204	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999790528846496	WITHOUT_CLASSIFICATION	2.0947115350407697E-5	DOCUMENTATION
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999651216743878	WITHOUT_CLASSIFICATION	3.4878325612159875E-5	DOCUMENTATION
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999768355756002	WITHOUT_CLASSIFICATION	2.316442439973781E-5	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9996476047381307	WITHOUT_CLASSIFICATION	3.523952618693039E-4	DOCUMENTATION
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9997233824699076	WITHOUT_CLASSIFICATION	2.766175300924158E-4	DOCUMENTATION
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9996048582570614	WITHOUT_CLASSIFICATION	3.951417429386609E-4	DOCUMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9998608768966186	WITHOUT_CLASSIFICATION	1.3912310338145685E-4	DOCUMENTATION
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9989609207828913	WITHOUT_CLASSIFICATION	0.0010390792171086592	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.999962963905589	WITHOUT_CLASSIFICATION	3.70360944109627E-5	DOCUMENTATION
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9999592334078204	WITHOUT_CLASSIFICATION	4.0766592179522116E-5	DOCUMENTATION
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.999951322750886	WITHOUT_CLASSIFICATION	4.867724911397669E-5	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9999826616355985	WITHOUT_CLASSIFICATION	1.73383644014889E-5	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9996079307450952	WITHOUT_CLASSIFICATION	3.920692549047316E-4	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.999993777621372	WITHOUT_CLASSIFICATION	6.222378628058783E-6	DOCUMENTATION
//needed by arrays	WITHOUT_CLASSIFICATION	0.9997852236301769	WITHOUT_CLASSIFICATION	2.1477636982309353E-4	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9996060384083586	WITHOUT_CLASSIFICATION	3.939615916414663E-4	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9996027099170217	WITHOUT_CLASSIFICATION	3.9729008297822874E-4	DOCUMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999863158467218	WITHOUT_CLASSIFICATION	1.3684153278206116E-5	DOCUMENTATION
//create all the new entries	WITHOUT_CLASSIFICATION	0.9998285657568817	WITHOUT_CLASSIFICATION	1.7143424311831014E-4	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9993908902833608	WITHOUT_CLASSIFICATION	6.091097166391629E-4	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9993908902833608	WITHOUT_CLASSIFICATION	6.091097166391629E-4	DOCUMENTATION
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9996575933491219	WITHOUT_CLASSIFICATION	3.4240665087811547E-4	DOCUMENTATION
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9998281234116918	WITHOUT_CLASSIFICATION	1.7187658830816415E-4	DOCUMENTATION
//==elementType ??	WITHOUT_CLASSIFICATION	0.9996772285530291	WITHOUT_CLASSIFICATION	3.2277144697094796E-4	DOCUMENTATION
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9996860705349985	WITHOUT_CLASSIFICATION	3.139294650014129E-4	DOCUMENTATION
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9996092893224789	WITHOUT_CLASSIFICATION	3.9071067752109414E-4	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999788343782544	WITHOUT_CLASSIFICATION	2.116562174553712E-5	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999978133610772	WITHOUT_CLASSIFICATION	2.1866389228188067E-6	DOCUMENTATION
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999742159759213	WITHOUT_CLASSIFICATION	2.5784024078656104E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9996239175498194	WITHOUT_CLASSIFICATION	3.7608245018061405E-4	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999763586374949	WITHOUT_CLASSIFICATION	2.3641362505032566E-5	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.999395559146655	WITHOUT_CLASSIFICATION	6.044408533449561E-4	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9996055788133936	WITHOUT_CLASSIFICATION	3.944211866063401E-4	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999763586374949	WITHOUT_CLASSIFICATION	2.3641362505032566E-5	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999908237647671	WITHOUT_CLASSIFICATION	9.17623523279516E-6	DOCUMENTATION
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9999991745543751	WITHOUT_CLASSIFICATION	8.254456248088618E-7	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9997840572845237	WITHOUT_CLASSIFICATION	2.159427154762454E-4	DOCUMENTATION
//TODO: check this....	WITHOUT_CLASSIFICATION	0.9983353947511984	WITHOUT_CLASSIFICATION	0.0016646052488016529	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999314977394419	WITHOUT_CLASSIFICATION	6.850226055809058E-5	DOCUMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999539680657497	WITHOUT_CLASSIFICATION	4.6031934250390104E-5	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999883883511453	WITHOUT_CLASSIFICATION	1.1611648854651806E-5	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999966239792331	WITHOUT_CLASSIFICATION	3.3760207670625165E-6	DOCUMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999686879655166	WITHOUT_CLASSIFICATION	3.1312034483367084E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9991276833219918	WITHOUT_CLASSIFICATION	8.723166780082635E-4	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9991276833219918	WITHOUT_CLASSIFICATION	8.723166780082635E-4	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9996708976949013	WITHOUT_CLASSIFICATION	3.2910230509879454E-4	DOCUMENTATION
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9995408497656716	WITHOUT_CLASSIFICATION	4.591502343283972E-4	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999763586374949	WITHOUT_CLASSIFICATION	2.3641362505032566E-5	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999314977394419	WITHOUT_CLASSIFICATION	6.850226055809058E-5	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999883883511453	WITHOUT_CLASSIFICATION	1.1611648854651806E-5	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9996476864461036	WITHOUT_CLASSIFICATION	3.5231355389638095E-4	DOCUMENTATION
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999493690567369	WITHOUT_CLASSIFICATION	5.063094326303183E-5	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999662606168153	WITHOUT_CLASSIFICATION	3.373938318477593E-5	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9998275705975388	WITHOUT_CLASSIFICATION	1.724294024611385E-4	DOCUMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999834547917259	WITHOUT_CLASSIFICATION	1.6545208274101258E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999775158013314	WITHOUT_CLASSIFICATION	2.248419866866822E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999908237647671	WITHOUT_CLASSIFICATION	9.17623523279516E-6	DOCUMENTATION
// JOINS	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9993057092804774	WITHOUT_CLASSIFICATION	6.942907195226332E-4	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9996080568923436	WITHOUT_CLASSIFICATION	3.919431076563374E-4	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9998382009772224	WITHOUT_CLASSIFICATION	1.617990227774872E-4	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9995274272077067	WITHOUT_CLASSIFICATION	4.7257279229336236E-4	DOCUMENTATION
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9995076258242656	WITHOUT_CLASSIFICATION	4.923741757345515E-4	DOCUMENTATION
//render the SQL	WITHOUT_CLASSIFICATION	0.9998371365059625	WITHOUT_CLASSIFICATION	1.6286349403751735E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999658161827031	WITHOUT_CLASSIFICATION	3.4183817296963066E-5	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999903827507646	WITHOUT_CLASSIFICATION	9.617249235368508E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999331871595438	WITHOUT_CLASSIFICATION	6.681284045619723E-5	DOCUMENTATION
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9987493631058876	WITHOUT_CLASSIFICATION	0.0012506368941123955	DOCUMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9979911037259876	WITHOUT_CLASSIFICATION	0.0020088962740122795	DOCUMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9978459703059462	WITHOUT_CLASSIFICATION	0.002154029694053811	DOCUMENTATION
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999903132855248	WITHOUT_CLASSIFICATION	9.686714475251105E-6	DOCUMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.9999778342360782	WITHOUT_CLASSIFICATION	2.2165763921748676E-5	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9998907976301219	WITHOUT_CLASSIFICATION	1.092023698781289E-4	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999775158013314	WITHOUT_CLASSIFICATION	2.248419866866822E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9999650505460458	WITHOUT_CLASSIFICATION	3.494945395421641E-5	DOCUMENTATION
//before add :-)	WITHOUT_CLASSIFICATION	0.9972772220662679	WITHOUT_CLASSIFICATION	0.002722777933731975	DOCUMENTATION
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999910025852331	WITHOUT_CLASSIFICATION	8.997414766976109E-6	DOCUMENTATION
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999212371720541	WITHOUT_CLASSIFICATION	7.876282794595621E-5	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9993935504888342	WITHOUT_CLASSIFICATION	6.064495111659074E-4	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.999983095102518	WITHOUT_CLASSIFICATION	1.6904897481933402E-5	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9999838416504786	WITHOUT_CLASSIFICATION	1.615834952136535E-5	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9996671644370603	WITHOUT_CLASSIFICATION	3.328355629396912E-4	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9993340779304034	WITHOUT_CLASSIFICATION	6.65922069596528E-4	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9997265492796213	WITHOUT_CLASSIFICATION	2.7345072037857424E-4	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9995876954269702	WITHOUT_CLASSIFICATION	4.123045730296992E-4	DOCUMENTATION
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.999919363911323	WITHOUT_CLASSIFICATION	8.06360886770573E-5	DOCUMENTATION
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999976690514263	WITHOUT_CLASSIFICATION	2.330948573598162E-6	DOCUMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9998920854483941	WITHOUT_CLASSIFICATION	1.0791455160584479E-4	DOCUMENTATION
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999919673783545	WITHOUT_CLASSIFICATION	8.032621645422157E-6	DOCUMENTATION
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999446131476921	WITHOUT_CLASSIFICATION	5.538685230788068E-5	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9975598094560683	WITHOUT_CLASSIFICATION	0.0024401905439318194	DOCUMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.999961409529023	WITHOUT_CLASSIFICATION	3.8590470977045E-5	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999619534247549	WITHOUT_CLASSIFICATION	3.80465752450684E-5	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999953518843624	WITHOUT_CLASSIFICATION	4.6481156376805515E-6	DOCUMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999470389737506	WITHOUT_CLASSIFICATION	5.296102624948421E-5	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.996164755842731	WITHOUT_CLASSIFICATION	0.003835244157268884	DOCUMENTATION
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9982116746833943	WITHOUT_CLASSIFICATION	0.001788325316605595	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9992116888069742	WITHOUT_CLASSIFICATION	7.883111930258348E-4	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999867684778033	WITHOUT_CLASSIFICATION	1.3231522196683136E-5	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.9993361230672022	WITHOUT_CLASSIFICATION	6.638769327978052E-4	DOCUMENTATION
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999559498516161	WITHOUT_CLASSIFICATION	4.405014838395243E-5	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.999995743477826	WITHOUT_CLASSIFICATION	4.2565221739105355E-6	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9996954818386512	WITHOUT_CLASSIFICATION	3.045181613487607E-4	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999972895264746	WITHOUT_CLASSIFICATION	2.7104735254393354E-6	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999980434505545	WITHOUT_CLASSIFICATION	1.956549445405169E-6	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.999779547952004	WITHOUT_CLASSIFICATION	2.2045204799597872E-4	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999017226477236	WITHOUT_CLASSIFICATION	9.827735227638425E-5	DOCUMENTATION
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999980686329237	WITHOUT_CLASSIFICATION	1.9313670762820817E-6	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.999779547952004	WITHOUT_CLASSIFICATION	2.2045204799597872E-4	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999980434505545	WITHOUT_CLASSIFICATION	1.956549445405169E-6	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999017226477236	WITHOUT_CLASSIFICATION	9.827735227638425E-5	DOCUMENTATION
// add the primary key	WITHOUT_CLASSIFICATION	0.999912789296804	WITHOUT_CLASSIFICATION	8.72107031959742E-5	DOCUMENTATION
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999594695560446	WITHOUT_CLASSIFICATION	4.053044395528051E-5	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999979184555067	WITHOUT_CLASSIFICATION	2.081544493349166E-6	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9999862102225787	WITHOUT_CLASSIFICATION	1.37897774212891E-5	DOCUMENTATION
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999892086746958	WITHOUT_CLASSIFICATION	1.0791325304275813E-5	DOCUMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9988581132262496	WITHOUT_CLASSIFICATION	0.0011418867737504048	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9986268260384354	WITHOUT_CLASSIFICATION	0.0013731739615645763	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9847485723643435	WITHOUT_CLASSIFICATION	0.015251427635656525	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9999534804394702	WITHOUT_CLASSIFICATION	4.6519560529803196E-5	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9999288209131852	WITHOUT_CLASSIFICATION	7.117908681473544E-5	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999789290936245	WITHOUT_CLASSIFICATION	2.10709063754483E-5	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9997950461518031	WITHOUT_CLASSIFICATION	2.0495384819691384E-4	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999589726404	WITHOUT_CLASSIFICATION	4.1027359600009E-5	DOCUMENTATION
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9997561607415237	WITHOUT_CLASSIFICATION	2.4383925847623248E-4	DOCUMENTATION
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999674504198994	WITHOUT_CLASSIFICATION	3.254958010065988E-5	DOCUMENTATION
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999972705999052	WITHOUT_CLASSIFICATION	2.7294000947359854E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999995814332491	WITHOUT_CLASSIFICATION	4.185667508888508E-7	DOCUMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9998266771714087	WITHOUT_CLASSIFICATION	1.7332282859133756E-4	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.999994852944282	WITHOUT_CLASSIFICATION	5.147055717942094E-6	DOCUMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9998385677798687	WITHOUT_CLASSIFICATION	1.6143222013131274E-4	DOCUMENTATION
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9997357917215772	WITHOUT_CLASSIFICATION	2.6420827842282986E-4	DOCUMENTATION
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999280686450618	WITHOUT_CLASSIFICATION	7.193135493819682E-5	DOCUMENTATION
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999907862538494	WITHOUT_CLASSIFICATION	9.21374615056088E-6	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999789068036345	WITHOUT_CLASSIFICATION	2.1093196365539527E-5	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9998385677798687	WITHOUT_CLASSIFICATION	1.6143222013131274E-4	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9998385677798687	WITHOUT_CLASSIFICATION	1.6143222013131274E-4	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999920169343534	WITHOUT_CLASSIFICATION	7.983065646711906E-6	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999920169343534	WITHOUT_CLASSIFICATION	7.983065646711906E-6	DOCUMENTATION
// not supported	WITHOUT_CLASSIFICATION	0.9999908512343606	WITHOUT_CLASSIFICATION	9.148765639425128E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999995814332491	WITHOUT_CLASSIFICATION	4.185667508888508E-7	DOCUMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9995517791178478	WITHOUT_CLASSIFICATION	4.4822088215219167E-4	DOCUMENTATION
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999847141371054	WITHOUT_CLASSIFICATION	1.5285862894521173E-5	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9998892233698876	WITHOUT_CLASSIFICATION	1.1077663011244018E-4	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9998892233698876	WITHOUT_CLASSIFICATION	1.1077663011244018E-4	DOCUMENTATION
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9998787940359365	WITHOUT_CLASSIFICATION	1.2120596406358237E-4	DOCUMENTATION
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9996510902282378	WITHOUT_CLASSIFICATION	3.489097717621926E-4	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9999645667278244	WITHOUT_CLASSIFICATION	3.543327217556502E-5	DOCUMENTATION
//skip the driving table	WITHOUT_CLASSIFICATION	0.9997885847081609	WITHOUT_CLASSIFICATION	2.1141529183902233E-4	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9998223070684358	WITHOUT_CLASSIFICATION	1.7769293156412097E-4	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999994741434702	WITHOUT_CLASSIFICATION	5.258565298801639E-7	DOCUMENTATION
//render the where and from parts	WITHOUT_CLASSIFICATION	0.999943339702883	WITHOUT_CLASSIFICATION	5.666029711714933E-5	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9991501118363479	WITHOUT_CLASSIFICATION	8.498881636520711E-4	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9997473266589778	WITHOUT_CLASSIFICATION	2.5267334102220844E-4	DOCUMENTATION
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999971169981475	WITHOUT_CLASSIFICATION	2.883001852476841E-6	DOCUMENTATION
//now render the select clause	WITHOUT_CLASSIFICATION	0.9998256017766908	WITHOUT_CLASSIFICATION	1.7439822330916533E-4	DOCUMENTATION
//now tie it all together	WITHOUT_CLASSIFICATION	0.9997038056290523	WITHOUT_CLASSIFICATION	2.9619437094768853E-4	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9948121787956837	WITHOUT_CLASSIFICATION	0.0051878212043162154	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999483091435795	WITHOUT_CLASSIFICATION	5.16908564206534E-5	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999565289369897	WITHOUT_CLASSIFICATION	4.347106301026205E-5	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999892864115522	WITHOUT_CLASSIFICATION	1.0713588447785054E-5	DOCUMENTATION
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9999850365555256	WITHOUT_CLASSIFICATION	1.496344447434869E-5	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999123579729426	WITHOUT_CLASSIFICATION	8.764202705735917E-5	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999824510349699	WITHOUT_CLASSIFICATION	1.7548965030242168E-5	DOCUMENTATION
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999919503207438	WITHOUT_CLASSIFICATION	8.049679256170352E-6	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999505621074767	WITHOUT_CLASSIFICATION	4.943789252337071E-5	DOCUMENTATION
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999570006322581	WITHOUT_CLASSIFICATION	4.2999367741917294E-5	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9991283749312028	WITHOUT_CLASSIFICATION	8.716250687971025E-4	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999661352676684	WITHOUT_CLASSIFICATION	3.386473233162397E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9993340779304034	WITHOUT_CLASSIFICATION	6.65922069596528E-4	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9997046904355111	WITHOUT_CLASSIFICATION	2.9530956448893536E-4	DOCUMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999981186864524	WITHOUT_CLASSIFICATION	1.8813135476530431E-6	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999514987179621	WITHOUT_CLASSIFICATION	4.850128203785305E-5	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999506401933533	WITHOUT_CLASSIFICATION	4.935980664671745E-5	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9996110513084171	WITHOUT_CLASSIFICATION	3.889486915827905E-4	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9996110513084171	WITHOUT_CLASSIFICATION	3.889486915827905E-4	DOCUMENTATION
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999943411329972	WITHOUT_CLASSIFICATION	5.6588670027661215E-6	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999789469367818	WITHOUT_CLASSIFICATION	2.1053063218189018E-5	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999794779139437	WITHOUT_CLASSIFICATION	2.052208605627359E-5	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999794779139437	WITHOUT_CLASSIFICATION	2.052208605627359E-5	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999915441744841	WITHOUT_CLASSIFICATION	8.455825515889714E-6	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9996809794290944	WITHOUT_CLASSIFICATION	3.190205709055501E-4	DOCUMENTATION
// do not do anything	WITHOUT_CLASSIFICATION	0.9998993798069833	WITHOUT_CLASSIFICATION	1.0062019301669283E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.999844932216808	WITHOUT_CLASSIFICATION	1.5506778319187694E-4	DOCUMENTATION
//cant instantiate	WITHOUT_CLASSIFICATION	0.9996127639232023	WITHOUT_CLASSIFICATION	3.8723607679769906E-4	DOCUMENTATION
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999793205453872	WITHOUT_CLASSIFICATION	2.067945461274103E-5	DOCUMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.999971138666417	WITHOUT_CLASSIFICATION	2.88613335830073E-5	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999763717878084	WITHOUT_CLASSIFICATION	2.3628212191628964E-5	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999763717878084	WITHOUT_CLASSIFICATION	2.3628212191628964E-5	DOCUMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999964969877416	WITHOUT_CLASSIFICATION	3.5030122583473254E-6	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999608768578724	WITHOUT_CLASSIFICATION	3.912314212761199E-5	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999608768578724	WITHOUT_CLASSIFICATION	3.912314212761199E-5	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999772174586853	WITHOUT_CLASSIFICATION	2.2782541314778412E-5	DOCUMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.999968494113327	WITHOUT_CLASSIFICATION	3.1505886672897415E-5	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9970229753135528	WITHOUT_CLASSIFICATION	0.0029770246864473204	DOCUMENTATION
// Get the caller	WITHOUT_CLASSIFICATION	0.9999922658946114	WITHOUT_CLASSIFICATION	7.734105388597898E-6	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999879722743077	WITHOUT_CLASSIFICATION	1.2027725692301336E-5	DOCUMENTATION
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9998397074829488	WITHOUT_CLASSIFICATION	1.6029251705115664E-4	DOCUMENTATION
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999923724270581	WITHOUT_CLASSIFICATION	7.62757294199468E-6	DOCUMENTATION
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9997306126956377	WITHOUT_CLASSIFICATION	2.6938730436236317E-4	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9997966001885865	WITHOUT_CLASSIFICATION	2.033998114135157E-4	DOCUMENTATION
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9992001805405757	WITHOUT_CLASSIFICATION	7.998194594243929E-4	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999946126504663	WITHOUT_CLASSIFICATION	5.387349533819619E-6	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.999948509237554	WITHOUT_CLASSIFICATION	5.149076244596099E-5	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999608535201214	WITHOUT_CLASSIFICATION	3.914647987860743E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999608535201214	WITHOUT_CLASSIFICATION	3.914647987860743E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999608535201214	WITHOUT_CLASSIFICATION	3.914647987860743E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999608535201214	WITHOUT_CLASSIFICATION	3.914647987860743E-4	DOCUMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999568456884164	WITHOUT_CLASSIFICATION	4.315431158376342E-5	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999969781919532	WITHOUT_CLASSIFICATION	3.0218080468918602E-6	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
//for MySQL	WITHOUT_CLASSIFICATION	0.9996176496238827	WITHOUT_CLASSIFICATION	3.823503761173014E-4	DOCUMENTATION
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9997621478632358	WITHOUT_CLASSIFICATION	2.3785213676414015E-4	DOCUMENTATION
//null caused some problems	WITHOUT_CLASSIFICATION	0.9976864802571508	WITHOUT_CLASSIFICATION	0.0023135197428492092	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999500217320434	WITHOUT_CLASSIFICATION	4.997826795657587E-5	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9993485189132535	WITHOUT_CLASSIFICATION	6.514810867465881E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999893088926873	WITHOUT_CLASSIFICATION	1.0691107312652833E-5	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9998887647845206	WITHOUT_CLASSIFICATION	1.1123521547944311E-4	DOCUMENTATION
// deprecated option...	WITHOUT_CLASSIFICATION	0.9999671310679024	WITHOUT_CLASSIFICATION	3.286893209768972E-5	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9997653728103263	WITHOUT_CLASSIFICATION	2.3462718967370155E-4	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9997609792364592	WITHOUT_CLASSIFICATION	2.3902076354081448E-4	DOCUMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.999872170426836	WITHOUT_CLASSIFICATION	1.2782957316396032E-4	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999948798747562	WITHOUT_CLASSIFICATION	5.120125243777018E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9997653728103263	WITHOUT_CLASSIFICATION	2.3462718967370155E-4	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9994718525802914	WITHOUT_CLASSIFICATION	5.281474197085613E-4	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999879898773296	WITHOUT_CLASSIFICATION	1.201012267034651E-5	DOCUMENTATION
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999776883227847	WITHOUT_CLASSIFICATION	2.231167721534058E-5	DOCUMENTATION
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999983949926522	WITHOUT_CLASSIFICATION	1.6050073478357479E-6	DOCUMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.999954765867292	WITHOUT_CLASSIFICATION	4.523413270802219E-5	DOCUMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9999950261212686	WITHOUT_CLASSIFICATION	4.973878731420189E-6	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999915154061982	WITHOUT_CLASSIFICATION	8.484593801731554E-6	DOCUMENTATION
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9997942272425638	WITHOUT_CLASSIFICATION	2.05772757436267E-4	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999199972242163	WITHOUT_CLASSIFICATION	8.000277578369493E-5	DOCUMENTATION
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999954638249138	WITHOUT_CLASSIFICATION	4.536175086230027E-6	DOCUMENTATION
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999199972242163	WITHOUT_CLASSIFICATION	8.000277578369493E-5	DOCUMENTATION
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999703673666879	WITHOUT_CLASSIFICATION	2.9632633312070487E-5	DOCUMENTATION
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9999835480381865	WITHOUT_CLASSIFICATION	1.6451961813589004E-5	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.9969649576108128	WITHOUT_CLASSIFICATION	0.0030350423891872835	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.999981420309723	WITHOUT_CLASSIFICATION	1.8579690276890368E-5	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.9998209293728137	WITHOUT_CLASSIFICATION	1.7907062718637524E-4	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999913473326595	WITHOUT_CLASSIFICATION	8.652667340537701E-6	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.999979878674299	WITHOUT_CLASSIFICATION	2.012132570094947E-5	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999767574489856	WITHOUT_CLASSIFICATION	2.3242551014373213E-5	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.999979878674299	WITHOUT_CLASSIFICATION	2.012132570094947E-5	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999848165989085	WITHOUT_CLASSIFICATION	1.5183401091535524E-5	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999987228074112	WITHOUT_CLASSIFICATION	1.2771925887048197E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9999620521960053	WITHOUT_CLASSIFICATION	3.794780399462062E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999797154226989	WITHOUT_CLASSIFICATION	2.0284577301112928E-5	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999913473326595	WITHOUT_CLASSIFICATION	8.652667340537701E-6	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999767574489856	WITHOUT_CLASSIFICATION	2.3242551014373213E-5	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999848165989085	WITHOUT_CLASSIFICATION	1.5183401091535524E-5	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.999902036164624	WITHOUT_CLASSIFICATION	9.79638353758886E-5	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.999620648507656	WITHOUT_CLASSIFICATION	3.793514923440013E-4	DOCUMENTATION
//reset the id	WITHOUT_CLASSIFICATION	0.9998445076505548	WITHOUT_CLASSIFICATION	1.5549234944531258E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.9998480221123764	WITHOUT_CLASSIFICATION	1.519778876235984E-4	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9999947641266809	WITHOUT_CLASSIFICATION	5.235873319117784E-6	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9997677560695545	WITHOUT_CLASSIFICATION	2.322439304455698E-4	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999565289369897	WITHOUT_CLASSIFICATION	4.347106301026205E-5	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999987228074112	WITHOUT_CLASSIFICATION	1.2771925887048197E-6	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9999990473541904	WITHOUT_CLASSIFICATION	9.526458095865703E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9996483257392708	WITHOUT_CLASSIFICATION	3.516742607291624E-4	DOCUMENTATION
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999659661058168	WITHOUT_CLASSIFICATION	3.4033894183274704E-5	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999565289369897	WITHOUT_CLASSIFICATION	4.347106301026205E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9996386489258103	WITHOUT_CLASSIFICATION	3.613510741897638E-4	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999565289369897	WITHOUT_CLASSIFICATION	4.347106301026205E-5	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999350140393297	WITHOUT_CLASSIFICATION	6.498596067023156E-5	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999821923526728	WITHOUT_CLASSIFICATION	1.7807647327136658E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.999445677216582	WITHOUT_CLASSIFICATION	5.543227834180748E-4	DOCUMENTATION
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999896561165496	WITHOUT_CLASSIFICATION	1.0343883450499363E-5	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.999989054666649	WITHOUT_CLASSIFICATION	1.0945333350992017E-5	DOCUMENTATION
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999775070254384	WITHOUT_CLASSIFICATION	2.2492974561660952E-5	DOCUMENTATION
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999784855886712	WITHOUT_CLASSIFICATION	2.1514411328916167E-5	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999037658688239	WITHOUT_CLASSIFICATION	9.623413117613061E-5	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.999560837371201	WITHOUT_CLASSIFICATION	4.391626287990141E-4	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9998066555623834	WITHOUT_CLASSIFICATION	1.9334443761660452E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999911662435721	WITHOUT_CLASSIFICATION	8.833756427817927E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9970229753135528	WITHOUT_CLASSIFICATION	0.0029770246864473204	DOCUMENTATION
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9998066555623834	WITHOUT_CLASSIFICATION	1.9334443761660452E-4	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9998052453399137	WITHOUT_CLASSIFICATION	1.9475466008634583E-4	DOCUMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9996024198651915	WITHOUT_CLASSIFICATION	3.9758013480856825E-4	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999967163251865	WITHOUT_CLASSIFICATION	3.2836748136147287E-6	DOCUMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999938891253038	WITHOUT_CLASSIFICATION	6.110874696211384E-6	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9999997624181288	WITHOUT_CLASSIFICATION	2.3758187108306762E-7	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9997511718609936	WITHOUT_CLASSIFICATION	2.488281390063611E-4	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999938246928679	WITHOUT_CLASSIFICATION	6.175307132204196E-6	DOCUMENTATION
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999995577393007	WITHOUT_CLASSIFICATION	4.4226069933483354E-7	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.9970229753135528	WITHOUT_CLASSIFICATION	0.0029770246864473204	DOCUMENTATION
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9994430179641095	WITHOUT_CLASSIFICATION	5.569820358904308E-4	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9994430179641095	WITHOUT_CLASSIFICATION	5.569820358904308E-4	DOCUMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999469607673972	WITHOUT_CLASSIFICATION	5.3039232602904905E-5	DOCUMENTATION
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999831606080507	WITHOUT_CLASSIFICATION	1.683939194929494E-5	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9970229753135528	WITHOUT_CLASSIFICATION	0.0029770246864473204	DOCUMENTATION
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9999916428016116	WITHOUT_CLASSIFICATION	8.35719838855219E-6	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9999984375072389	WITHOUT_CLASSIFICATION	1.562492761010269E-6	DOCUMENTATION
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999965321545708	WITHOUT_CLASSIFICATION	3.46784542907844E-6	DOCUMENTATION
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9993835539459872	WITHOUT_CLASSIFICATION	6.164460540127233E-4	DOCUMENTATION
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9999339112492227	WITHOUT_CLASSIFICATION	6.608875077727079E-5	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9874349418023359	WITHOUT_CLASSIFICATION	0.012565058197664016	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999850563683935	WITHOUT_CLASSIFICATION	1.4943631606495462E-5	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9990468144666843	WITHOUT_CLASSIFICATION	9.531855333156945E-4	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9992289671214918	WITHOUT_CLASSIFICATION	7.710328785082745E-4	DOCUMENTATION
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9974777802796714	WITHOUT_CLASSIFICATION	0.002522219720328661	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.999997226251704	WITHOUT_CLASSIFICATION	2.7737482961235195E-6	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999978372177142	WITHOUT_CLASSIFICATION	2.162782285894872E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9991839961124205	WITHOUT_CLASSIFICATION	8.160038875795838E-4	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9998124026953388	WITHOUT_CLASSIFICATION	1.8759730466124877E-4	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9998124026953388	WITHOUT_CLASSIFICATION	1.8759730466124877E-4	DOCUMENTATION
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999981914025763	WITHOUT_CLASSIFICATION	1.8085974237937868E-6	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999037658688239	WITHOUT_CLASSIFICATION	9.623413117613061E-5	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9993157123614016	WITHOUT_CLASSIFICATION	6.8428763859847E-4	DOCUMENTATION
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9993884833918774	WITHOUT_CLASSIFICATION	6.115166081226874E-4	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999829850698134	WITHOUT_CLASSIFICATION	1.701493018650524E-5	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999923214824373	WITHOUT_CLASSIFICATION	7.678517562710691E-6	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9997885169010648	WITHOUT_CLASSIFICATION	2.1148309893516434E-4	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9975093436876891	WITHOUT_CLASSIFICATION	0.002490656312310847	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9991276833219918	WITHOUT_CLASSIFICATION	8.723166780082635E-4	DOCUMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9999893370957769	WITHOUT_CLASSIFICATION	1.0662904223145453E-5	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9999795781240639	WITHOUT_CLASSIFICATION	2.0421875936052613E-5	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.999982508774392	WITHOUT_CLASSIFICATION	1.749122560799548E-5	DOCUMENTATION
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999999214809595	WITHOUT_CLASSIFICATION	7.851904039276354E-8	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999731252342178	WITHOUT_CLASSIFICATION	2.6874765782209522E-5	DOCUMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999960789638506	WITHOUT_CLASSIFICATION	3.9210361494889E-6	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999999695474691	WITHOUT_CLASSIFICATION	3.0452530817007744E-8	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9993852857244188	WITHOUT_CLASSIFICATION	6.147142755813288E-4	DOCUMENTATION
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999938467423416	WITHOUT_CLASSIFICATION	6.153257658482505E-6	DOCUMENTATION
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999704878063683	WITHOUT_CLASSIFICATION	2.9512193631688823E-5	DOCUMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9999996815614789	WITHOUT_CLASSIFICATION	3.1843852109273186E-7	DOCUMENTATION
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999970154318312	WITHOUT_CLASSIFICATION	2.984568168795211E-6	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999598947009536	WITHOUT_CLASSIFICATION	4.0105299046402634E-5	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9999594654478813	WITHOUT_CLASSIFICATION	4.0534552118675515E-5	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999984176890757	WITHOUT_CLASSIFICATION	1.582310924272765E-6	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999985991459122	WITHOUT_CLASSIFICATION	1.4008540878664184E-6	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999904160615534	WITHOUT_CLASSIFICATION	9.58393844670811E-6	DOCUMENTATION
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999734934817012	WITHOUT_CLASSIFICATION	2.6506518298920194E-5	DOCUMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9995892484196578	WITHOUT_CLASSIFICATION	4.107515803421061E-4	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.9999208154856976	WITHOUT_CLASSIFICATION	7.918451430249361E-5	DOCUMENTATION
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999897552847105	WITHOUT_CLASSIFICATION	1.0244715289628257E-5	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.999864220514089	WITHOUT_CLASSIFICATION	1.357794859110406E-4	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999508002632371	WITHOUT_CLASSIFICATION	4.919973676279059E-5	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999510431373051	WITHOUT_CLASSIFICATION	4.895686269478335E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999522762021089	WITHOUT_CLASSIFICATION	4.77237978911591E-5	DOCUMENTATION
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999805959922825	WITHOUT_CLASSIFICATION	1.9404007717579887E-5	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999551665815535	WITHOUT_CLASSIFICATION	4.4833418446472746E-5	DOCUMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9996082767204958	WITHOUT_CLASSIFICATION	3.9172327950427174E-4	DOCUMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999968231738621	WITHOUT_CLASSIFICATION	3.1768261379308977E-6	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999888326968615	WITHOUT_CLASSIFICATION	1.1167303138568155E-5	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999888326968615	WITHOUT_CLASSIFICATION	1.1167303138568155E-5	DOCUMENTATION
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999921813366305	WITHOUT_CLASSIFICATION	7.818663369384318E-6	DOCUMENTATION
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9999957439504095	WITHOUT_CLASSIFICATION	4.256049590593156E-6	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9979992492360807	WITHOUT_CLASSIFICATION	0.0020007507639192156	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9979992492360807	WITHOUT_CLASSIFICATION	0.0020007507639192156	DOCUMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999804009960792	WITHOUT_CLASSIFICATION	1.9599003920771846E-5	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9996820569132371	WITHOUT_CLASSIFICATION	3.179430867630029E-4	DOCUMENTATION
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.999998445421807	WITHOUT_CLASSIFICATION	1.5545781929422195E-6	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999998042090947	WITHOUT_CLASSIFICATION	1.9579090539533236E-7	DOCUMENTATION
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999584918161899	WITHOUT_CLASSIFICATION	4.150818381008144E-5	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999580519989285	WITHOUT_CLASSIFICATION	4.1948001071622065E-5	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999580519989285	WITHOUT_CLASSIFICATION	4.1948001071622065E-5	DOCUMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9995804056360315	WITHOUT_CLASSIFICATION	4.195943639686348E-4	DOCUMENTATION
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9993908902833608	WITHOUT_CLASSIFICATION	6.091097166391629E-4	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999775088394481	WITHOUT_CLASSIFICATION	2.2491160551935623E-5	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999775088394481	WITHOUT_CLASSIFICATION	2.2491160551935623E-5	DOCUMENTATION
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999544882287577	WITHOUT_CLASSIFICATION	4.551177124236869E-5	DOCUMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999923587614267	WITHOUT_CLASSIFICATION	7.641238573308348E-6	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.999999903857262	WITHOUT_CLASSIFICATION	9.614273800366366E-8	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999161098302517	WITHOUT_CLASSIFICATION	8.389016974823673E-5	DOCUMENTATION
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999983903803924	WITHOUT_CLASSIFICATION	1.6096196075773966E-6	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999776045532218	WITHOUT_CLASSIFICATION	2.2395446778240514E-5	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.999972572268764	WITHOUT_CLASSIFICATION	2.7427731235958117E-5	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999876702159041	WITHOUT_CLASSIFICATION	1.232978409604538E-5	DOCUMENTATION
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999867998617722	WITHOUT_CLASSIFICATION	1.3200138227886444E-5	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999356698374225	WITHOUT_CLASSIFICATION	6.433016257746735E-5	DOCUMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9993439920060745	WITHOUT_CLASSIFICATION	6.560079939254435E-4	DOCUMENTATION
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9999990370130043	WITHOUT_CLASSIFICATION	9.629869957000125E-7	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9998995624149047	WITHOUT_CLASSIFICATION	1.0043758509528601E-4	DOCUMENTATION
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999728725080419	WITHOUT_CLASSIFICATION	2.7127491958100904E-5	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999775934290422	WITHOUT_CLASSIFICATION	2.2406570957737356E-5	DOCUMENTATION
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999943792104536	WITHOUT_CLASSIFICATION	5.62078954635153E-6	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999942974875589	WITHOUT_CLASSIFICATION	5.702512441051455E-6	DOCUMENTATION
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999965600240804	WITHOUT_CLASSIFICATION	3.439975919478426E-6	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999848056569379	WITHOUT_CLASSIFICATION	1.5194343062157174E-5	DOCUMENTATION
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.99995595164899	WITHOUT_CLASSIFICATION	4.4048351010046355E-5	DOCUMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999823319724224	WITHOUT_CLASSIFICATION	1.7668027577648818E-5	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9999371564227827	WITHOUT_CLASSIFICATION	6.284357721729479E-5	DOCUMENTATION
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9997571797740471	WITHOUT_CLASSIFICATION	2.428202259528189E-4	DOCUMENTATION
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9993004198153642	WITHOUT_CLASSIFICATION	6.995801846356748E-4	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.9970229753135528	WITHOUT_CLASSIFICATION	0.0029770246864473204	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.9999980790739302	WITHOUT_CLASSIFICATION	1.9209260698281205E-6	DOCUMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999889127549438	WITHOUT_CLASSIFICATION	1.1087245056134052E-5	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999940094567362	WITHOUT_CLASSIFICATION	5.990543263829922E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999900870942436	WITHOUT_CLASSIFICATION	9.912905756409333E-6	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999910919635541	WITHOUT_CLASSIFICATION	8.908036446005995E-6	DOCUMENTATION
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999638462095718	WITHOUT_CLASSIFICATION	3.615379042818346E-5	DOCUMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999355930790634	WITHOUT_CLASSIFICATION	6.440692093651694E-5	DOCUMENTATION
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999727300312609	WITHOUT_CLASSIFICATION	2.726996873909601E-5	DOCUMENTATION
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9993816754671478	WITHOUT_CLASSIFICATION	6.183245328520919E-4	DOCUMENTATION
//readResolveObject	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9991276833219918	WITHOUT_CLASSIFICATION	8.723166780082635E-4	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.999957929067982	WITHOUT_CLASSIFICATION	4.20709320180953E-5	DOCUMENTATION
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999946350584686	WITHOUT_CLASSIFICATION	5.3649415314005476E-6	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.999999008538343	WITHOUT_CLASSIFICATION	9.914616569202202E-7	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.999973381372608	WITHOUT_CLASSIFICATION	2.661862739199117E-5	DOCUMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999474826163051	WITHOUT_CLASSIFICATION	5.251738369486834E-5	DOCUMENTATION
// Handle actions	WITHOUT_CLASSIFICATION	0.9999786267687181	WITHOUT_CLASSIFICATION	2.1373231281963755E-5	DOCUMENTATION
// Print page	WITHOUT_CLASSIFICATION	0.9999775956741105	WITHOUT_CLASSIFICATION	2.240432588957757E-5	DOCUMENTATION
// Write HTML footer	WITHOUT_CLASSIFICATION	0.999978170872874	WITHOUT_CLASSIFICATION	2.182912712599009E-5	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9999835741040947	WITHOUT_CLASSIFICATION	1.642589590533495E-5	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999964791539742	WITHOUT_CLASSIFICATION	3.520846025918674E-6	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.999992135859998	WITHOUT_CLASSIFICATION	7.864140001972871E-6	DOCUMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999931146890981	WITHOUT_CLASSIFICATION	6.885310901781796E-6	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999890297429437	WITHOUT_CLASSIFICATION	1.0970257056290115E-5	DOCUMENTATION
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999888325110101	WITHOUT_CLASSIFICATION	1.1167488989872223E-5	DOCUMENTATION
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9997417499686944	WITHOUT_CLASSIFICATION	2.582500313056715E-4	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999990305034714	WITHOUT_CLASSIFICATION	9.694965286555405E-7	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999776294090873	WITHOUT_CLASSIFICATION	2.2370590912656823E-5	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9999191449380476	WITHOUT_CLASSIFICATION	8.08550619524589E-5	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.99996378685382	WITHOUT_CLASSIFICATION	3.6213146180029155E-5	DOCUMENTATION
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999725015727995	WITHOUT_CLASSIFICATION	2.7498427200439625E-5	DOCUMENTATION
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999951107423893	WITHOUT_CLASSIFICATION	4.889257610660539E-6	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999986027329048	WITHOUT_CLASSIFICATION	1.3972670952630458E-6	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999966825178951	WITHOUT_CLASSIFICATION	3.317482104927201E-6	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999966825178951	WITHOUT_CLASSIFICATION	3.317482104927201E-6	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999992499065903	WITHOUT_CLASSIFICATION	7.500934096210865E-7	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9999917216910277	WITHOUT_CLASSIFICATION	8.278308972203372E-6	DOCUMENTATION
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.999998789873495	WITHOUT_CLASSIFICATION	1.2101265050107503E-6	DOCUMENTATION
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999818999348821	WITHOUT_CLASSIFICATION	1.8100065118016803E-5	DOCUMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999979817047283	WITHOUT_CLASSIFICATION	2.0182952717310548E-6	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999690053650135	WITHOUT_CLASSIFICATION	3.099463498648695E-5	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999815996776548	WITHOUT_CLASSIFICATION	1.840032234524648E-5	DOCUMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.999999932761661	WITHOUT_CLASSIFICATION	6.723833899331104E-8	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999932978249654	WITHOUT_CLASSIFICATION	6.7021750346122395E-6	DOCUMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999820677654873	WITHOUT_CLASSIFICATION	1.7932234512757958E-5	DOCUMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.999994448351486	WITHOUT_CLASSIFICATION	5.551648513942834E-6	DOCUMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9988216278375597	WITHOUT_CLASSIFICATION	0.00117837216244036	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999687816943451	WITHOUT_CLASSIFICATION	3.1218305654888415E-5	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999888204345806	WITHOUT_CLASSIFICATION	1.1179565419354133E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9996643243909122	WITHOUT_CLASSIFICATION	3.356756090877468E-4	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9996643243909122	WITHOUT_CLASSIFICATION	3.356756090877468E-4	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999895808703803	WITHOUT_CLASSIFICATION	1.0419129619816421E-5	DOCUMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.999975947847749	WITHOUT_CLASSIFICATION	2.405215225098401E-5	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9992260820375793	WITHOUT_CLASSIFICATION	7.739179624206104E-4	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.9999956415041228	WITHOUT_CLASSIFICATION	4.358495877249511E-6	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999342237037384	WITHOUT_CLASSIFICATION	6.577629626158966E-5	DOCUMENTATION
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999461781043777	WITHOUT_CLASSIFICATION	5.3821895622463324E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.999535106873433	WITHOUT_CLASSIFICATION	4.6489312656694906E-4	DOCUMENTATION
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.9999995216743687	WITHOUT_CLASSIFICATION	4.783256312157288E-7	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999987054148483	WITHOUT_CLASSIFICATION	1.294585151682775E-6	DOCUMENTATION
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999998666051698	WITHOUT_CLASSIFICATION	1.333948301675567E-7	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999926845750626	WITHOUT_CLASSIFICATION	7.315424937300083E-6	DOCUMENTATION
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9990643255561193	WITHOUT_CLASSIFICATION	9.356744438806158E-4	DOCUMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999701628521365	WITHOUT_CLASSIFICATION	2.9837147863505296E-5	DOCUMENTATION
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999908093038846	WITHOUT_CLASSIFICATION	9.190696115349266E-6	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999467318112651	WITHOUT_CLASSIFICATION	5.326818873477201E-5	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999995359436799	WITHOUT_CLASSIFICATION	4.640563202645695E-7	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999991219515652	WITHOUT_CLASSIFICATION	8.780484348172551E-7	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999489851033176	WITHOUT_CLASSIFICATION	5.101489668248158E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999543067567656	WITHOUT_CLASSIFICATION	4.569324323450457E-5	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999951899098529	WITHOUT_CLASSIFICATION	4.810090147085933E-6	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999987112832374	WITHOUT_CLASSIFICATION	1.2887167626595548E-6	DOCUMENTATION
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999979091650978	WITHOUT_CLASSIFICATION	2.090834902100546E-6	DOCUMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.999874482213194	WITHOUT_CLASSIFICATION	1.2551778680609942E-4	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999891278902608	WITHOUT_CLASSIFICATION	1.0872109739210678E-5	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9999957478018423	WITHOUT_CLASSIFICATION	4.252198157751644E-6	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999966679346288	WITHOUT_CLASSIFICATION	3.332065371133026E-6	DOCUMENTATION
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9999899962852369	WITHOUT_CLASSIFICATION	1.0003714763086756E-5	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9999998637842327	WITHOUT_CLASSIFICATION	1.3621576736939282E-7	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999944028073251	WITHOUT_CLASSIFICATION	5.597192674911833E-6	DOCUMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9997491404112766	WITHOUT_CLASSIFICATION	2.508595887233697E-4	DOCUMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999876087308484	WITHOUT_CLASSIFICATION	1.2391269151656031E-5	DOCUMENTATION
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999927814205202	WITHOUT_CLASSIFICATION	7.218579479866454E-6	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999976576005304	WITHOUT_CLASSIFICATION	2.342399469648996E-6	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.9999610368766979	WITHOUT_CLASSIFICATION	3.896312330200927E-5	DOCUMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.999999876022432	WITHOUT_CLASSIFICATION	1.239775679722948E-7	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999976395568864	WITHOUT_CLASSIFICATION	2.360443113668512E-6	DOCUMENTATION
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999514910223628	WITHOUT_CLASSIFICATION	4.8508977637321253E-5	DOCUMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.999959000438147	WITHOUT_CLASSIFICATION	4.099956185301921E-5	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9999999107468543	WITHOUT_CLASSIFICATION	8.925314565063178E-8	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999529495274573	WITHOUT_CLASSIFICATION	4.705047254272702E-5	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999529495274573	WITHOUT_CLASSIFICATION	4.705047254272702E-5	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999946235757223	WITHOUT_CLASSIFICATION	5.376424277582278E-6	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.99999987925942	WITHOUT_CLASSIFICATION	1.20740579947795E-7	DOCUMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.9999251679978692	WITHOUT_CLASSIFICATION	7.483200213080975E-5	DOCUMENTATION
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9999944984111195	WITHOUT_CLASSIFICATION	5.501588880467012E-6	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999884488482822	WITHOUT_CLASSIFICATION	1.1551151717814964E-5	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9995601060562193	WITHOUT_CLASSIFICATION	4.3989394378076297E-4	DOCUMENTATION
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.999997948953053	WITHOUT_CLASSIFICATION	2.0510469468654633E-6	DOCUMENTATION
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999270845628307	WITHOUT_CLASSIFICATION	7.29154371691825E-5	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999873957864023	WITHOUT_CLASSIFICATION	1.2604213597755822E-5	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999512344611434	WITHOUT_CLASSIFICATION	4.876553885647179E-5	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999512344611434	WITHOUT_CLASSIFICATION	4.876553885647179E-5	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999141227319198	WITHOUT_CLASSIFICATION	8.587726808018758E-5	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999300592751131	WITHOUT_CLASSIFICATION	6.994072488689852E-5	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999995696669213	WITHOUT_CLASSIFICATION	4.3033307874287787E-7	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9999987209479035	WITHOUT_CLASSIFICATION	1.279052096432453E-6	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9999759292699074	WITHOUT_CLASSIFICATION	2.4070730092609075E-5	DOCUMENTATION
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999998618629408	WITHOUT_CLASSIFICATION	1.3813705914409636E-7	DOCUMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999988919831856	WITHOUT_CLASSIFICATION	1.1080168143358158E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9999960741806918	WITHOUT_CLASSIFICATION	3.925819308186495E-6	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999927845240475	WITHOUT_CLASSIFICATION	7.215475952511925E-6	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.999999455145073	WITHOUT_CLASSIFICATION	5.448549268958131E-7	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999256862175495	WITHOUT_CLASSIFICATION	7.431378245042874E-5	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9999673583848082	WITHOUT_CLASSIFICATION	3.264161519169248E-5	DOCUMENTATION
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.9992946836090159	WITHOUT_CLASSIFICATION	7.05316390984051E-4	DOCUMENTATION
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9999068343174515	WITHOUT_CLASSIFICATION	9.316568254845355E-5	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.999960507993675	WITHOUT_CLASSIFICATION	3.949200632505714E-5	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999994139001583	WITHOUT_CLASSIFICATION	5.860998416986609E-7	DOCUMENTATION
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999982826164058	WITHOUT_CLASSIFICATION	1.717383594223328E-6	DOCUMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.999998778717959	WITHOUT_CLASSIFICATION	1.2212820411194774E-6	DOCUMENTATION
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9999971292284558	WITHOUT_CLASSIFICATION	2.8707715440614563E-6	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9999697164721632	WITHOUT_CLASSIFICATION	3.028352783691472E-5	DOCUMENTATION
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999884250002202	WITHOUT_CLASSIFICATION	1.1574999779840249E-5	DOCUMENTATION
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999949909165148	WITHOUT_CLASSIFICATION	5.009083485214419E-6	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999901401711092	WITHOUT_CLASSIFICATION	9.85982889085925E-6	DOCUMENTATION
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999999526586756	WITHOUT_CLASSIFICATION	4.734132441283004E-8	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.99999742711596	WITHOUT_CLASSIFICATION	2.5728840400238843E-6	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999973426335264	WITHOUT_CLASSIFICATION	2.6573664736334354E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999994344353782	WITHOUT_CLASSIFICATION	5.655646218470609E-7	DOCUMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9999918334387757	WITHOUT_CLASSIFICATION	8.166561224270629E-6	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9998430653437272	WITHOUT_CLASSIFICATION	1.5693465627271926E-4	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999909272242363	WITHOUT_CLASSIFICATION	9.072775763728445E-6	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999982027577515	WITHOUT_CLASSIFICATION	1.797242248499174E-6	DOCUMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999987843576184	WITHOUT_CLASSIFICATION	1.2156423816077825E-6	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.999997223979296	WITHOUT_CLASSIFICATION	2.776020703931923E-6	DOCUMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9999980524043512	WITHOUT_CLASSIFICATION	1.947595648777431E-6	DOCUMENTATION
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9999863612421763	WITHOUT_CLASSIFICATION	1.3638757823598874E-5	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999426980447822	WITHOUT_CLASSIFICATION	5.730195521783743E-5	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999687816943451	WITHOUT_CLASSIFICATION	3.1218305654888415E-5	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999992295350796	WITHOUT_CLASSIFICATION	7.704649203538602E-7	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.999993253634241	WITHOUT_CLASSIFICATION	6.7463657590648364E-6	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9994791169791626	WITHOUT_CLASSIFICATION	5.208830208373105E-4	DOCUMENTATION
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.999999782602195	WITHOUT_CLASSIFICATION	2.173978050108118E-7	DOCUMENTATION
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9995655434590816	WITHOUT_CLASSIFICATION	4.3445654091845337E-4	DOCUMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999358888618872	WITHOUT_CLASSIFICATION	6.411113811285436E-5	DOCUMENTATION
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9999743185009349	WITHOUT_CLASSIFICATION	2.568149906507984E-5	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9989275868769455	WITHOUT_CLASSIFICATION	0.0010724131230545062	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9993673839614324	WITHOUT_CLASSIFICATION	6.326160385675602E-4	DOCUMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9999930166579564	WITHOUT_CLASSIFICATION	6.983342043540245E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999999549119313	WITHOUT_CLASSIFICATION	4.5088068678595306E-8	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999984862249752	WITHOUT_CLASSIFICATION	1.5137750248029684E-6	DOCUMENTATION
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.999765960286554	WITHOUT_CLASSIFICATION	2.34039713446163E-4	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999741316072814	WITHOUT_CLASSIFICATION	2.5868392718576507E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999658943733277	WITHOUT_CLASSIFICATION	3.4105626672299475E-5	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9996476047381307	WITHOUT_CLASSIFICATION	3.523952618693039E-4	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9991324068650181	WITHOUT_CLASSIFICATION	8.675931349817702E-4	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999972790416992	WITHOUT_CLASSIFICATION	2.720958300783904E-6	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999953384173583	WITHOUT_CLASSIFICATION	4.661582641733935E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999658943733277	WITHOUT_CLASSIFICATION	3.4105626672299475E-5	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.999069058612828	WITHOUT_CLASSIFICATION	9.309413871720019E-4	DOCUMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9998212469713175	WITHOUT_CLASSIFICATION	1.787530286824435E-4	DOCUMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999992597576143	WITHOUT_CLASSIFICATION	7.402423856927499E-7	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999958993156122	WITHOUT_CLASSIFICATION	4.100684387824514E-6	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9929816000590013	WITHOUT_CLASSIFICATION	0.007018399940998763	DOCUMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999994995000958	WITHOUT_CLASSIFICATION	5.004999042365077E-7	DOCUMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999975132795937	WITHOUT_CLASSIFICATION	2.4867204062148655E-6	DOCUMENTATION
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.9999996135283772	WITHOUT_CLASSIFICATION	3.864716228386963E-7	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999571293035197	WITHOUT_CLASSIFICATION	4.287069648038472E-5	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999978847777773	WITHOUT_CLASSIFICATION	2.115222222759712E-6	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.99990762397573	WITHOUT_CLASSIFICATION	9.237602427005326E-5	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9981482561390117	WITHOUT_CLASSIFICATION	0.0018517438609883163	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999929169976554	WITHOUT_CLASSIFICATION	7.0830023446021166E-6	DOCUMENTATION
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9995809776656638	WITHOUT_CLASSIFICATION	4.19022334336213E-4	DOCUMENTATION
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999071378871992	WITHOUT_CLASSIFICATION	9.286211280080261E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999984176890757	WITHOUT_CLASSIFICATION	1.582310924272765E-6	DOCUMENTATION
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999966683450038	WITHOUT_CLASSIFICATION	3.331654996183431E-6	DOCUMENTATION
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999949841910836	WITHOUT_CLASSIFICATION	5.015808916370117E-6	DOCUMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9965516909083499	WITHOUT_CLASSIFICATION	0.003448309091650062	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999996340375971	WITHOUT_CLASSIFICATION	3.659624029908022E-7	DOCUMENTATION
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999462519778389	WITHOUT_CLASSIFICATION	5.374802216101382E-5	DOCUMENTATION
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.99999863869429	WITHOUT_CLASSIFICATION	1.3613057100897958E-6	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999654633518879	WITHOUT_CLASSIFICATION	3.453664811208323E-5	DOCUMENTATION
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999989773920421	WITHOUT_CLASSIFICATION	1.0226079579065069E-6	DOCUMENTATION
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999953667546851	WITHOUT_CLASSIFICATION	4.633245314945285E-6	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999482249326495	WITHOUT_CLASSIFICATION	5.177506735064682E-5	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9999884398495386	WITHOUT_CLASSIFICATION	1.1560150461464683E-5	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999675814086542	WITHOUT_CLASSIFICATION	3.241859134574948E-5	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9999989350321117	WITHOUT_CLASSIFICATION	1.0649678882755296E-6	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.999999560180558	WITHOUT_CLASSIFICATION	4.398194420438625E-7	DOCUMENTATION
// and perform the load	WITHOUT_CLASSIFICATION	0.9999927951420514	WITHOUT_CLASSIFICATION	7.2048579485044765E-6	DOCUMENTATION
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9996167156511568	WITHOUT_CLASSIFICATION	3.832843488432005E-4	DOCUMENTATION
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999008928801568	WITHOUT_CLASSIFICATION	9.910711984325014E-5	DOCUMENTATION
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999790078193846	WITHOUT_CLASSIFICATION	2.0992180615371378E-5	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999969915865378	WITHOUT_CLASSIFICATION	3.008413462242273E-6	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999838592121908	WITHOUT_CLASSIFICATION	1.6140787809281293E-5	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999998094824455	WITHOUT_CLASSIFICATION	1.9051755465256547E-7	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.999995792724631	WITHOUT_CLASSIFICATION	4.20727536895386E-6	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.999999157865378	WITHOUT_CLASSIFICATION	8.42134622038595E-7	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9998447999533975	WITHOUT_CLASSIFICATION	1.552000466025169E-4	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999092575102765	WITHOUT_CLASSIFICATION	9.07424897235784E-5	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999092575102765	WITHOUT_CLASSIFICATION	9.07424897235784E-5	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999647615438241	WITHOUT_CLASSIFICATION	3.523845617589288E-5	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999942495745467	WITHOUT_CLASSIFICATION	5.750425453199257E-6	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999793637545407	WITHOUT_CLASSIFICATION	2.0636245459264893E-5	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9398779980145403	DOCUMENTATION	0.060122001985459625	WITHOUT_CLASSIFICATION
// ignore	WITHOUT_CLASSIFICATION	0.999844932216808	WITHOUT_CLASSIFICATION	1.5506778319187694E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.999844932216808	WITHOUT_CLASSIFICATION	1.5506778319187694E-4	DOCUMENTATION
//        }	WITHOUT_CLASSIFICATION	0.9999839337185087	WITHOUT_CLASSIFICATION	1.6066281491372056E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.999793661245219	WITHOUT_CLASSIFICATION	2.063387547810388E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.999831205744496	WITHOUT_CLASSIFICATION	1.6879425550388695E-4	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9998620545530456	WITHOUT_CLASSIFICATION	1.379454469544721E-4	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999982582760737	WITHOUT_CLASSIFICATION	1.7417239262646084E-6	DOCUMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999851143641125	WITHOUT_CLASSIFICATION	1.4885635887456295E-5	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999975670198357	WITHOUT_CLASSIFICATION	2.432980164278175E-6	DOCUMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9998767162075789	WITHOUT_CLASSIFICATION	1.2328379242110187E-4	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999594671693536	WITHOUT_CLASSIFICATION	4.0532830646443756E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999895080600788	WITHOUT_CLASSIFICATION	1.0491939921291821E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999895080600788	WITHOUT_CLASSIFICATION	1.0491939921291821E-5	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9996476047381307	WITHOUT_CLASSIFICATION	3.523952618693039E-4	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999775066708424	WITHOUT_CLASSIFICATION	2.2493329157578553E-5	DOCUMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9991652341062268	WITHOUT_CLASSIFICATION	8.347658937732173E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999559826146295	WITHOUT_CLASSIFICATION	4.401738537042846E-5	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999903827507646	WITHOUT_CLASSIFICATION	9.617249235368508E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999506388293289	WITHOUT_CLASSIFICATION	4.936117067097371E-5	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999991418843016	WITHOUT_CLASSIFICATION	8.581156983198229E-7	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9998290657182447	WITHOUT_CLASSIFICATION	1.7093428175527655E-4	DOCUMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9999992887513929	WITHOUT_CLASSIFICATION	7.112486071055263E-7	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9999963810526533	WITHOUT_CLASSIFICATION	3.618947346666072E-6	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999978847777773	WITHOUT_CLASSIFICATION	2.115222222759712E-6	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9999703868362829	WITHOUT_CLASSIFICATION	2.9613163717184492E-5	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9991688522194512	WITHOUT_CLASSIFICATION	8.31147780548863E-4	DOCUMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999938027922897	WITHOUT_CLASSIFICATION	6.197207710395395E-6	DOCUMENTATION
//use the id column alias	WITHOUT_CLASSIFICATION	0.9997231783032325	WITHOUT_CLASSIFICATION	2.7682169676748514E-4	DOCUMENTATION
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9998034369889254	WITHOUT_CLASSIFICATION	1.9656301107455183E-4	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9991276833219918	WITHOUT_CLASSIFICATION	8.723166780082635E-4	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9998636191565896	WITHOUT_CLASSIFICATION	1.3638084341030952E-4	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.999998366626952	WITHOUT_CLASSIFICATION	1.6333730480665554E-6	DOCUMENTATION
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9990819988234686	WITHOUT_CLASSIFICATION	9.180011765312948E-4	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999939919848959	WITHOUT_CLASSIFICATION	6.00801510409284E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999939919848959	WITHOUT_CLASSIFICATION	6.00801510409284E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9997653728103263	WITHOUT_CLASSIFICATION	2.3462718967370155E-4	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999996527630574	WITHOUT_CLASSIFICATION	3.4723694264846926E-7	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996023169726346	WITHOUT_CLASSIFICATION	3.976830273654571E-4	DOCUMENTATION
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9993122840265051	WITHOUT_CLASSIFICATION	6.877159734949975E-4	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999904539845789	WITHOUT_CLASSIFICATION	9.546015421182316E-6	DOCUMENTATION
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999188371771275	WITHOUT_CLASSIFICATION	8.116282287251819E-5	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.999981420309723	WITHOUT_CLASSIFICATION	1.8579690276890368E-5	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999998705664476	WITHOUT_CLASSIFICATION	1.2943355247818462E-7	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.999902036164624	WITHOUT_CLASSIFICATION	9.79638353758886E-5	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999982832699857	WITHOUT_CLASSIFICATION	1.7167300141965841E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999565289369897	WITHOUT_CLASSIFICATION	4.347106301026205E-5	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9999999673242688	WITHOUT_CLASSIFICATION	3.267573130715176E-8	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.9999121474009836	WITHOUT_CLASSIFICATION	8.78525990164066E-5	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999997321407303	WITHOUT_CLASSIFICATION	2.6785926972322835E-7	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9999933139905073	WITHOUT_CLASSIFICATION	6.686009492710073E-6	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999948527060472	WITHOUT_CLASSIFICATION	5.147293952839629E-6	DOCUMENTATION
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.9999830408157575	WITHOUT_CLASSIFICATION	1.6959184242501672E-5	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999317020395376	WITHOUT_CLASSIFICATION	6.82979604624456E-5	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9999024027318245	WITHOUT_CLASSIFICATION	9.759726817544249E-5	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9999976382779114	WITHOUT_CLASSIFICATION	2.3617220886055035E-6	DOCUMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.999996532682671	WITHOUT_CLASSIFICATION	3.4673173289844547E-6	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.999999883102358	WITHOUT_CLASSIFICATION	1.1689764204531414E-7	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.999999903857262	WITHOUT_CLASSIFICATION	9.614273800366366E-8	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.9999999614821558	WITHOUT_CLASSIFICATION	3.85178441812047E-8	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999053852063368	WITHOUT_CLASSIFICATION	9.461479366329276E-5	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999053852063368	WITHOUT_CLASSIFICATION	9.461479366329276E-5	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999934394295518	WITHOUT_CLASSIFICATION	6.560570448297643E-6	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999932859234321	WITHOUT_CLASSIFICATION	6.714076567995876E-6	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999821620074486	WITHOUT_CLASSIFICATION	1.7837992551469988E-5	DOCUMENTATION
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.999999873080518	WITHOUT_CLASSIFICATION	1.2691948211713177E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999033526360172	WITHOUT_CLASSIFICATION	9.664736398279297E-5	DOCUMENTATION
//TODO find a decent name before documenting	DOCUMENTATION	0.9995603324574165	WITHOUT_CLASSIFICATION	4.396675425835635E-4	DOCUMENTATION
