//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999017274472424	WITHOUT_CLASSIFICATION	9.827255275766761E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998074458847775	WITHOUT_CLASSIFICATION	1.925541152225897E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998074458847775	WITHOUT_CLASSIFICATION	1.925541152225897E-4	DOCUMENTATION
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9993657690179614	WITHOUT_CLASSIFICATION	6.342309820387269E-4	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999795771307753	WITHOUT_CLASSIFICATION	2.0422869224713463E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999459296054897	WITHOUT_CLASSIFICATION	5.407039451033959E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999459296054897	WITHOUT_CLASSIFICATION	5.407039451033959E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9998911854552447	WITHOUT_CLASSIFICATION	1.0881454475536991E-4	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.999942733561733	WITHOUT_CLASSIFICATION	5.726643826688765E-5	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999914919119306	WITHOUT_CLASSIFICATION	8.508088069433343E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999783663387001	WITHOUT_CLASSIFICATION	2.1633661299914264E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9998512116323358	WITHOUT_CLASSIFICATION	1.48788367664125E-4	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9998512116323358	WITHOUT_CLASSIFICATION	1.48788367664125E-4	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9997700549414712	WITHOUT_CLASSIFICATION	2.299450585288261E-4	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9999963055318918	WITHOUT_CLASSIFICATION	3.694468108264699E-6	DOCUMENTATION
// decode row selection...	WITHOUT_CLASSIFICATION	0.9999623792645554	WITHOUT_CLASSIFICATION	3.762073544443999E-5	DOCUMENTATION
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999223242839242	WITHOUT_CLASSIFICATION	7.767571607576986E-5	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999980938687102	WITHOUT_CLASSIFICATION	1.9061312899008085E-6	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9997676498124012	WITHOUT_CLASSIFICATION	2.3235018759878688E-4	DOCUMENTATION
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.999335351713351	WITHOUT_CLASSIFICATION	6.64648286648978E-4	DOCUMENTATION
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999900548986093	WITHOUT_CLASSIFICATION	9.945101390705377E-6	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999688850431045	WITHOUT_CLASSIFICATION	3.111495689534233E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999688850431045	WITHOUT_CLASSIFICATION	3.111495689534233E-5	DOCUMENTATION
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9999938055658055	WITHOUT_CLASSIFICATION	6.194434194521135E-6	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9983322868556973	WITHOUT_CLASSIFICATION	0.0016677131443026242	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.999942820261344	WITHOUT_CLASSIFICATION	5.717973865599831E-5	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.9997891566614331	WITHOUT_CLASSIFICATION	2.1084333856699814E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9424349344991295	DOCUMENTATION	0.0575650655008705	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9424349344991295	DOCUMENTATION	0.0575650655008705	WITHOUT_CLASSIFICATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999020770955975	WITHOUT_CLASSIFICATION	9.792290440243749E-5	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999986927388146	WITHOUT_CLASSIFICATION	1.3072611854391075E-6	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999999093395527	WITHOUT_CLASSIFICATION	9.06604473161728E-8	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9998670883957581	WITHOUT_CLASSIFICATION	1.3291160424199817E-4	DOCUMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999451240679126	WITHOUT_CLASSIFICATION	5.487593208737693E-5	DOCUMENTATION
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942710560714	WITHOUT_CLASSIFICATION	5.728943928599667E-5	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999427492749444	WITHOUT_CLASSIFICATION	5.7250725055675996E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999872641021472	WITHOUT_CLASSIFICATION	1.2735897852896034E-5	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9955572575942645	WITHOUT_CLASSIFICATION	0.004442742405735451	DOCUMENTATION
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9999924493715615	WITHOUT_CLASSIFICATION	7.550628438520161E-6	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9994126489286008	WITHOUT_CLASSIFICATION	5.873510713990972E-4	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9955572575942645	WITHOUT_CLASSIFICATION	0.004442742405735451	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9994126489286008	WITHOUT_CLASSIFICATION	5.873510713990972E-4	DOCUMENTATION
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9996969998885005	WITHOUT_CLASSIFICATION	3.030001114995435E-4	DOCUMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9999998319488084	WITHOUT_CLASSIFICATION	1.6805119164751273E-7	DOCUMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999602376182399	WITHOUT_CLASSIFICATION	3.9762381760011186E-5	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999982083080338	WITHOUT_CLASSIFICATION	1.7916919663020289E-6	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999889020102464	WITHOUT_CLASSIFICATION	1.1097989753510274E-5	DOCUMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.999999903707173	WITHOUT_CLASSIFICATION	9.629282706537042E-8	DOCUMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9971845756605706	WITHOUT_CLASSIFICATION	0.0028154243394294056	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9999814044480854	WITHOUT_CLASSIFICATION	1.8595551914620736E-5	DOCUMENTATION
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999995466198823	WITHOUT_CLASSIFICATION	4.5338011765976603E-7	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9999253983198634	WITHOUT_CLASSIFICATION	7.460168013662471E-5	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9999890219132203	WITHOUT_CLASSIFICATION	1.0978086779665177E-5	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999692225298787	WITHOUT_CLASSIFICATION	3.077747012119434E-5	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999994563804719	WITHOUT_CLASSIFICATION	5.436195280608301E-7	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.99996382090356	WITHOUT_CLASSIFICATION	3.617909644005435E-5	DOCUMENTATION
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9999997465407904	WITHOUT_CLASSIFICATION	2.5345920964653526E-7	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999912116632286	WITHOUT_CLASSIFICATION	8.788336771383468E-6	DOCUMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9999897784330491	WITHOUT_CLASSIFICATION	1.022156695096715E-5	DOCUMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999991417686532	WITHOUT_CLASSIFICATION	8.582313468792984E-7	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999926663301625	WITHOUT_CLASSIFICATION	7.333669837435875E-6	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.999997060721766	WITHOUT_CLASSIFICATION	2.9392782340629396E-6	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999894022460597	WITHOUT_CLASSIFICATION	1.0597753940225755E-5	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999998829547985	WITHOUT_CLASSIFICATION	1.17045201545071E-7	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999937984498947	WITHOUT_CLASSIFICATION	6.201550105341581E-6	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999617572561612	WITHOUT_CLASSIFICATION	3.8242743838899916E-5	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9999997176967077	WITHOUT_CLASSIFICATION	2.8230329230952755E-7	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999517266902584	WITHOUT_CLASSIFICATION	4.827330974148583E-5	DOCUMENTATION
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999978198302051	WITHOUT_CLASSIFICATION	2.180169794886125E-6	DOCUMENTATION
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9999777857738531	WITHOUT_CLASSIFICATION	2.2214226146898772E-5	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999844209592256	WITHOUT_CLASSIFICATION	1.5579040774417708E-5	DOCUMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999213459294133	WITHOUT_CLASSIFICATION	7.8654070586707E-5	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999951303473517	WITHOUT_CLASSIFICATION	4.869652648258131E-6	DOCUMENTATION
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999428330585087	WITHOUT_CLASSIFICATION	5.7166941491256614E-5	DOCUMENTATION
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999898139914616	WITHOUT_CLASSIFICATION	1.018600853839553E-5	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999518730201249	WITHOUT_CLASSIFICATION	4.812697987511174E-5	DOCUMENTATION
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999876801469435	WITHOUT_CLASSIFICATION	1.2319853056354002E-5	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999990726920026	WITHOUT_CLASSIFICATION	9.273079973578382E-7	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999518730201249	WITHOUT_CLASSIFICATION	4.812697987511174E-5	DOCUMENTATION
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999990543332992	WITHOUT_CLASSIFICATION	9.456667008371139E-7	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.999829531546856	WITHOUT_CLASSIFICATION	1.7046845314396664E-4	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999862539843868	WITHOUT_CLASSIFICATION	1.3746015613232609E-5	DOCUMENTATION
// construct the cache	WITHOUT_CLASSIFICATION	0.9999849898447163	WITHOUT_CLASSIFICATION	1.501015528366219E-5	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9998576805531922	WITHOUT_CLASSIFICATION	1.423194468077954E-4	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9998576805531922	WITHOUT_CLASSIFICATION	1.423194468077954E-4	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9994129189430695	WITHOUT_CLASSIFICATION	5.870810569304923E-4	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999991568404799	WITHOUT_CLASSIFICATION	8.431595200750887E-7	DOCUMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9995611975777217	WITHOUT_CLASSIFICATION	4.388024222783338E-4	DOCUMENTATION
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999926880253157	WITHOUT_CLASSIFICATION	7.311974684357485E-6	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.9999991075650543	WITHOUT_CLASSIFICATION	8.924349457469609E-7	DOCUMENTATION
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999960895742106	WITHOUT_CLASSIFICATION	3.910425789461671E-6	DOCUMENTATION
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999931452928935	WITHOUT_CLASSIFICATION	6.854707106384287E-6	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9999872503519709	WITHOUT_CLASSIFICATION	1.2749648029002818E-5	DOCUMENTATION
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999831355498981	WITHOUT_CLASSIFICATION	1.6864450101839894E-5	DOCUMENTATION
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.999974511050863	WITHOUT_CLASSIFICATION	2.5488949136981023E-5	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999942688358561	WITHOUT_CLASSIFICATION	5.731164143860165E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999942688358561	WITHOUT_CLASSIFICATION	5.731164143860165E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999853643992146	WITHOUT_CLASSIFICATION	1.463560078534973E-5	DOCUMENTATION
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999871092290189	WITHOUT_CLASSIFICATION	1.2890770981214553E-5	DOCUMENTATION
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9999854237969638	WITHOUT_CLASSIFICATION	1.4576203036335231E-5	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999942688358561	WITHOUT_CLASSIFICATION	5.731164143860165E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999853643992146	WITHOUT_CLASSIFICATION	1.463560078534973E-5	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999853643992146	WITHOUT_CLASSIFICATION	1.463560078534973E-5	DOCUMENTATION
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9999859310828152	WITHOUT_CLASSIFICATION	1.406891718474835E-5	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9999642633324412	WITHOUT_CLASSIFICATION	3.5736667558962106E-5	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999955196891792	WITHOUT_CLASSIFICATION	4.480310820842416E-6	DOCUMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999946569854314	WITHOUT_CLASSIFICATION	5.343014568622791E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999959389854017	WITHOUT_CLASSIFICATION	4.061014598228347E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999959389854017	WITHOUT_CLASSIFICATION	4.061014598228347E-6	DOCUMENTATION
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9991011168590064	WITHOUT_CLASSIFICATION	8.988831409936095E-4	DOCUMENTATION
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9989734880009681	WITHOUT_CLASSIFICATION	0.001026511999031925	DOCUMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.999968842501726	WITHOUT_CLASSIFICATION	3.11574982739544E-5	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999649010471421	WITHOUT_CLASSIFICATION	3.5098952857856374E-5	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999649010471421	WITHOUT_CLASSIFICATION	3.5098952857856374E-5	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9990836966095326	WITHOUT_CLASSIFICATION	9.163033904674586E-4	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999919510822942	WITHOUT_CLASSIFICATION	8.048917705722798E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9989550725474213	WITHOUT_CLASSIFICATION	0.0010449274525786687	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999998438288916	WITHOUT_CLASSIFICATION	1.561711083676397E-7	DOCUMENTATION
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9998899823991783	WITHOUT_CLASSIFICATION	1.1001760082169654E-4	DOCUMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999981012527792	WITHOUT_CLASSIFICATION	1.8987472208196146E-6	DOCUMENTATION
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9989071060171031	WITHOUT_CLASSIFICATION	0.0010928939828968502	DOCUMENTATION
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9999929505698538	WITHOUT_CLASSIFICATION	7.049430146201484E-6	DOCUMENTATION
//sort first by role name	WITHOUT_CLASSIFICATION	0.9997099149089335	WITHOUT_CLASSIFICATION	2.900850910664421E-4	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9989550725474213	WITHOUT_CLASSIFICATION	0.0010449274525786687	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9996672848130925	WITHOUT_CLASSIFICATION	3.327151869075307E-4	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999903047013639	WITHOUT_CLASSIFICATION	9.695298636171025E-6	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999903047013639	WITHOUT_CLASSIFICATION	9.695298636171025E-6	DOCUMENTATION
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999995802771314	WITHOUT_CLASSIFICATION	4.197228685511089E-7	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.99999600599826	WITHOUT_CLASSIFICATION	3.994001740072777E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999918553004732	WITHOUT_CLASSIFICATION	8.144699526737437E-6	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9927730374113982	WITHOUT_CLASSIFICATION	0.007226962588601794	DOCUMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9997092936452744	WITHOUT_CLASSIFICATION	2.907063547256083E-4	DOCUMENTATION
//then by id	WITHOUT_CLASSIFICATION	0.9996764562787023	WITHOUT_CLASSIFICATION	3.2354372129763715E-4	DOCUMENTATION
// to be safe...	WITHOUT_CLASSIFICATION	0.9999970299680158	WITHOUT_CLASSIFICATION	2.970031984179412E-6	DOCUMENTATION
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.999980395033432	WITHOUT_CLASSIFICATION	1.9604966568110107E-5	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999919277188943	WITHOUT_CLASSIFICATION	8.072281105660992E-6	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999919277188943	WITHOUT_CLASSIFICATION	8.072281105660992E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998924913826407	WITHOUT_CLASSIFICATION	1.0750861735922826E-4	DOCUMENTATION
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999017274472424	WITHOUT_CLASSIFICATION	9.827255275766761E-5	DOCUMENTATION
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999897655458406	WITHOUT_CLASSIFICATION	1.0234454159374495E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// invokespecial	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998074458847775	WITHOUT_CLASSIFICATION	1.925541152225897E-4	DOCUMENTATION
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999619019603352	WITHOUT_CLASSIFICATION	3.809803966477041E-5	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999611587544989	WITHOUT_CLASSIFICATION	3.884124550114104E-5	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999621337506505	WITHOUT_CLASSIFICATION	3.78662493495311E-5	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999689384810271	WITHOUT_CLASSIFICATION	3.10615189729944E-5	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9999663679451395	WITHOUT_CLASSIFICATION	3.363205486058942E-5	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9998380532868933	WITHOUT_CLASSIFICATION	1.6194671310669245E-4	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999779875548027	WITHOUT_CLASSIFICATION	2.2012445197330483E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// aastore // args	WITHOUT_CLASSIFICATION	0.9999689384810271	WITHOUT_CLASSIFICATION	3.10615189729944E-5	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9993963878009631	WITHOUT_CLASSIFICATION	6.036121990369053E-4	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999790034668281	WITHOUT_CLASSIFICATION	2.0996533171843654E-5	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999622687190893	WITHOUT_CLASSIFICATION	3.7731280910649304E-5	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999847312139306	WITHOUT_CLASSIFICATION	1.5268786069377637E-5	DOCUMENTATION
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999967814843231	WITHOUT_CLASSIFICATION	3.2185156768984257E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999459296054897	WITHOUT_CLASSIFICATION	5.407039451033959E-5	DOCUMENTATION
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999746307074079	WITHOUT_CLASSIFICATION	2.5369292592172395E-5	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999707156304507	WITHOUT_CLASSIFICATION	2.92843695492985E-5	DOCUMENTATION
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999794521142643	WITHOUT_CLASSIFICATION	2.0547885735709395E-5	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999847545493996	WITHOUT_CLASSIFICATION	1.5245450600312026E-5	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// aaload	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999589540100072	WITHOUT_CLASSIFICATION	4.104598999273676E-5	DOCUMENTATION
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999630951189202	WITHOUT_CLASSIFICATION	3.690488107976273E-5	DOCUMENTATION
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999604204331065	WITHOUT_CLASSIFICATION	3.957956689353942E-5	DOCUMENTATION
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999830529304446	WITHOUT_CLASSIFICATION	1.6947069555374354E-5	DOCUMENTATION
// register in exception table	WITHOUT_CLASSIFICATION	0.9999292748029918	WITHOUT_CLASSIFICATION	7.072519700823655E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998074458847775	WITHOUT_CLASSIFICATION	1.925541152225897E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998074458847775	WITHOUT_CLASSIFICATION	1.925541152225897E-4	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9998911854552447	WITHOUT_CLASSIFICATION	1.0881454475536991E-4	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999641458453624	WITHOUT_CLASSIFICATION	3.585415463765068E-5	DOCUMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9999602906048409	WITHOUT_CLASSIFICATION	3.970939515901089E-5	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999639263712192	WITHOUT_CLASSIFICATION	3.6073628780816787E-5	DOCUMENTATION
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999690018216547	WITHOUT_CLASSIFICATION	3.099817834536396E-5	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999422351294359	WITHOUT_CLASSIFICATION	5.776487056399545E-5	DOCUMENTATION
//swallow	WITHOUT_CLASSIFICATION	0.9955572575942645	WITHOUT_CLASSIFICATION	0.004442742405735451	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9995944961044336	WITHOUT_CLASSIFICATION	4.055038955662819E-4	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999229637206877	WITHOUT_CLASSIFICATION	7.703627931230038E-5	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999229637206877	WITHOUT_CLASSIFICATION	7.703627931230038E-5	DOCUMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999688204198806	WITHOUT_CLASSIFICATION	3.11795801195039E-5	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999898836175377	WITHOUT_CLASSIFICATION	1.0116382462250187E-5	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9994150509811944	WITHOUT_CLASSIFICATION	5.849490188056573E-4	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999618987503436	WITHOUT_CLASSIFICATION	3.810124965645533E-5	DOCUMENTATION
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999607292004062	WITHOUT_CLASSIFICATION	3.9270799593690964E-5	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999785166463487	WITHOUT_CLASSIFICATION	2.1483353651336095E-5	DOCUMENTATION
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999775766822355	WITHOUT_CLASSIFICATION	2.242331776437402E-5	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.999942733561733	WITHOUT_CLASSIFICATION	5.726643826688765E-5	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999747984711597	WITHOUT_CLASSIFICATION	2.5201528840438358E-5	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999747984711597	WITHOUT_CLASSIFICATION	2.5201528840438358E-5	DOCUMENTATION
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999747984711597	WITHOUT_CLASSIFICATION	2.5201528840438358E-5	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999921629367843	WITHOUT_CLASSIFICATION	7.837063215700837E-6	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999747984711597	WITHOUT_CLASSIFICATION	2.5201528840438358E-5	DOCUMENTATION
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.99996345737693	WITHOUT_CLASSIFICATION	3.654262306992565E-5	DOCUMENTATION
// int	WITHOUT_CLASSIFICATION	0.9997745699349494	WITHOUT_CLASSIFICATION	2.2543006505053553E-4	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9998074458847775	WITHOUT_CLASSIFICATION	1.925541152225897E-4	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.999960506089685	WITHOUT_CLASSIFICATION	3.949391031488709E-5	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.9999744023198525	WITHOUT_CLASSIFICATION	2.559768014757305E-5	DOCUMENTATION
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999786125566257	WITHOUT_CLASSIFICATION	2.138744337429684E-5	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.9999881716621464	WITHOUT_CLASSIFICATION	1.1828337853631548E-5	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999783663387001	WITHOUT_CLASSIFICATION	2.1633661299914264E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999783663387001	WITHOUT_CLASSIFICATION	2.1633661299914264E-5	DOCUMENTATION
// not array	WITHOUT_CLASSIFICATION	0.9999836846234557	WITHOUT_CLASSIFICATION	1.631537654435131E-5	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.999982075252773	WITHOUT_CLASSIFICATION	1.7924747226960876E-5	DOCUMENTATION
// boolean	WITHOUT_CLASSIFICATION	0.9997786875284344	WITHOUT_CLASSIFICATION	2.2131247156576645E-4	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9997680833869479	WITHOUT_CLASSIFICATION	2.3191661305207984E-4	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9997671057038792	WITHOUT_CLASSIFICATION	2.3289429612080183E-4	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9997671867687251	WITHOUT_CLASSIFICATION	2.3281323127479197E-4	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9998512116323358	WITHOUT_CLASSIFICATION	1.48788367664125E-4	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9997700549414712	WITHOUT_CLASSIFICATION	2.299450585288261E-4	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9997700549414712	WITHOUT_CLASSIFICATION	2.299450585288261E-4	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.999975913552829	WITHOUT_CLASSIFICATION	2.4086447170927314E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.999975913552829	WITHOUT_CLASSIFICATION	2.4086447170927314E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999440197703784	WITHOUT_CLASSIFICATION	5.5980229621720404E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999440197703784	WITHOUT_CLASSIFICATION	5.5980229621720404E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999783663387001	WITHOUT_CLASSIFICATION	2.1633661299914264E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9998512116323358	WITHOUT_CLASSIFICATION	1.48788367664125E-4	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9997700549414712	WITHOUT_CLASSIFICATION	2.299450585288261E-4	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.999975913552829	WITHOUT_CLASSIFICATION	2.4086447170927314E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.999975913552829	WITHOUT_CLASSIFICATION	2.4086447170927314E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999440197703784	WITHOUT_CLASSIFICATION	5.5980229621720404E-5	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999645212302584	WITHOUT_CLASSIFICATION	3.547876974161739E-5	DOCUMENTATION
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9993356326622217	WITHOUT_CLASSIFICATION	6.643673377783692E-4	DOCUMENTATION
//decrement the lock	WITHOUT_CLASSIFICATION	0.999762389498371	WITHOUT_CLASSIFICATION	2.376105016289329E-4	DOCUMENTATION
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999763408212592	WITHOUT_CLASSIFICATION	2.3659178740763E-5	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9996744477277325	WITHOUT_CLASSIFICATION	3.255522722675768E-4	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9997664682549732	WITHOUT_CLASSIFICATION	2.335317450267395E-4	DOCUMENTATION
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9982089333784753	WITHOUT_CLASSIFICATION	0.0017910666215247228	DOCUMENTATION
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9999997968628507	WITHOUT_CLASSIFICATION	2.0313714932964062E-7	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9975183672465813	WITHOUT_CLASSIFICATION	0.0024816327534186917	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999972247528814	WITHOUT_CLASSIFICATION	2.775247118667992E-6	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999445306260356	WITHOUT_CLASSIFICATION	5.54693739644166E-5	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999502640558151	WITHOUT_CLASSIFICATION	4.973594418491391E-5	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9994129189430695	WITHOUT_CLASSIFICATION	5.870810569304923E-4	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9997664682549732	WITHOUT_CLASSIFICATION	2.335317450267395E-4	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9955572575942645	WITHOUT_CLASSIFICATION	0.004442742405735451	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9955572575942645	WITHOUT_CLASSIFICATION	0.004442742405735451	DOCUMENTATION
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999836756317371	WITHOUT_CLASSIFICATION	1.6324368262881356E-5	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9998986781324863	WITHOUT_CLASSIFICATION	1.0132186751372356E-4	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9998986781324863	WITHOUT_CLASSIFICATION	1.0132186751372356E-4	DOCUMENTATION
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9999385450287397	WITHOUT_CLASSIFICATION	6.145497126026937E-5	DOCUMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999325733779956	WITHOUT_CLASSIFICATION	6.742662200435833E-5	DOCUMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.9992734607244171	WITHOUT_CLASSIFICATION	7.2653927558281E-4	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999958702153061	WITHOUT_CLASSIFICATION	4.129784693865976E-6	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999958702153061	WITHOUT_CLASSIFICATION	4.129784693865976E-6	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999980938687102	WITHOUT_CLASSIFICATION	1.9061312899008085E-6	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999991438324194	WITHOUT_CLASSIFICATION	8.561675804601021E-7	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999991438324194	WITHOUT_CLASSIFICATION	8.561675804601021E-7	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999565305070119	WITHOUT_CLASSIFICATION	4.346949298795084E-5	DOCUMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999855653557022	WITHOUT_CLASSIFICATION	1.4434644297806994E-5	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999900548986093	WITHOUT_CLASSIFICATION	9.945101390705377E-6	DOCUMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// MUTABLE	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// TODO:	WITHOUT_CLASSIFICATION	0.974302470499168	WITHOUT_CLASSIFICATION	0.02569752950083209	DOCUMENTATION
// ID	WITHOUT_CLASSIFICATION	0.9997676498124012	WITHOUT_CLASSIFICATION	2.3235018759878688E-4	DOCUMENTATION
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999679496706294	WITHOUT_CLASSIFICATION	3.205032937055578E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999650398551472	WITHOUT_CLASSIFICATION	3.4960144852783384E-5	DOCUMENTATION
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999740790896711	WITHOUT_CLASSIFICATION	2.5920910328989784E-5	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999965271699521	WITHOUT_CLASSIFICATION	3.472830047883595E-6	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.999942820261344	WITHOUT_CLASSIFICATION	5.717973865599831E-5	DOCUMENTATION
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.999997219486784	WITHOUT_CLASSIFICATION	2.7805132160186665E-6	DOCUMENTATION
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// IMPORT	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.999960506089685	WITHOUT_CLASSIFICATION	3.949391031488709E-5	DOCUMENTATION
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.999960506089685	WITHOUT_CLASSIFICATION	3.949391031488709E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999688985773646	WITHOUT_CLASSIFICATION	3.110142263539593E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999900548986093	WITHOUT_CLASSIFICATION	9.945101390705377E-6	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999712442538341	WITHOUT_CLASSIFICATION	2.8755746165950748E-5	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.99996928705254	WITHOUT_CLASSIFICATION	3.071294746004688E-5	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9997664162068819	WITHOUT_CLASSIFICATION	2.335837931180486E-4	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999688985773646	WITHOUT_CLASSIFICATION	3.110142263539593E-5	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999712442538341	WITHOUT_CLASSIFICATION	2.8755746165950748E-5	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9997664162068819	WITHOUT_CLASSIFICATION	2.335837931180486E-4	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999719718874721	WITHOUT_CLASSIFICATION	2.8028112527819843E-5	DOCUMENTATION
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999719718874721	WITHOUT_CLASSIFICATION	2.8028112527819843E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999688850431045	WITHOUT_CLASSIFICATION	3.111495689534233E-5	DOCUMENTATION
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// column index	WITHOUT_CLASSIFICATION	0.9999717703088862	WITHOUT_CLASSIFICATION	2.8229691113896875E-5	DOCUMENTATION
//column unique-key	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9999998199912807	WITHOUT_CLASSIFICATION	1.800087193651992E-7	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999715654800209	WITHOUT_CLASSIFICATION	2.843451997917738E-5	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999988486548794	WITHOUT_CLASSIFICATION	1.1513451204728914E-6	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.999986246576863	WITHOUT_CLASSIFICATION	1.3753423137092913E-5	DOCUMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999939447979942	WITHOUT_CLASSIFICATION	6.055202005809019E-6	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999984665519929	WITHOUT_CLASSIFICATION	1.5334480071742887E-6	DOCUMENTATION
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.999986246576863	WITHOUT_CLASSIFICATION	1.3753423137092913E-5	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9997759278403354	WITHOUT_CLASSIFICATION	2.240721596645683E-4	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999688985773646	WITHOUT_CLASSIFICATION	3.110142263539593E-5	DOCUMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999422555714806	WITHOUT_CLASSIFICATION	5.774442851948196E-5	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.999970107478722	WITHOUT_CLASSIFICATION	2.989252127807941E-5	DOCUMENTATION
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9999899429324746	WITHOUT_CLASSIFICATION	1.0057067525475283E-5	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999936878925761	WITHOUT_CLASSIFICATION	6.312107423822096E-6	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999657863406288	WITHOUT_CLASSIFICATION	3.4213659371222654E-5	DOCUMENTATION
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999982851350586	WITHOUT_CLASSIFICATION	1.714864941416866E-6	DOCUMENTATION
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999890931622386	WITHOUT_CLASSIFICATION	1.0906837761341854E-5	DOCUMENTATION
//lazy = !join;	WITHOUT_CLASSIFICATION	0.99976163879153	WITHOUT_CLASSIFICATION	2.3836120847004605E-4	DOCUMENTATION
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999690558874076	WITHOUT_CLASSIFICATION	3.094411259238357E-5	DOCUMENTATION
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.999960506089685	WITHOUT_CLASSIFICATION	3.949391031488709E-5	DOCUMENTATION
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9999944563497097	WITHOUT_CLASSIFICATION	5.543650290368424E-6	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.999942820261344	WITHOUT_CLASSIFICATION	5.717973865599831E-5	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.9999615504342612	WITHOUT_CLASSIFICATION	3.844956573884229E-5	DOCUMENTATION
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999524605280651	WITHOUT_CLASSIFICATION	4.7539471934978645E-5	DOCUMENTATION
// Bind the where	WITHOUT_CLASSIFICATION	0.9999867217515789	WITHOUT_CLASSIFICATION	1.327824842114895E-5	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999875229435993	WITHOUT_CLASSIFICATION	1.2477056400742774E-5	DOCUMENTATION
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999875625061084	WITHOUT_CLASSIFICATION	1.2437493891473403E-5	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999545895608184	WITHOUT_CLASSIFICATION	4.5410439181558275E-5	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999996321727536	WITHOUT_CLASSIFICATION	3.678272464327321E-7	DOCUMENTATION
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9999970651141427	WITHOUT_CLASSIFICATION	2.9348858573548406E-6	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9993692642885869	WITHOUT_CLASSIFICATION	6.307357114131032E-4	DOCUMENTATION
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9992583732203252	WITHOUT_CLASSIFICATION	7.416267796747071E-4	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9996176136202319	WITHOUT_CLASSIFICATION	3.8238637976808885E-4	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9996176136202319	WITHOUT_CLASSIFICATION	3.8238637976808885E-4	DOCUMENTATION
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9992488828567979	WITHOUT_CLASSIFICATION	7.511171432021824E-4	DOCUMENTATION
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999634220082287	WITHOUT_CLASSIFICATION	3.657799177123592E-5	DOCUMENTATION
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9991150902401745	WITHOUT_CLASSIFICATION	8.849097598254704E-4	DOCUMENTATION
// Transaction settings:	WITHOUT_CLASSIFICATION	0.9999621199071991	WITHOUT_CLASSIFICATION	3.788009280094382E-5	DOCUMENTATION
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9992507008776553	WITHOUT_CLASSIFICATION	7.492991223446051E-4	DOCUMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9992498619219251	WITHOUT_CLASSIFICATION	7.501380780749012E-4	DOCUMENTATION
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999694329055355	WITHOUT_CLASSIFICATION	3.056709446441663E-5	DOCUMENTATION
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9999456916798142	WITHOUT_CLASSIFICATION	5.43083201858603E-5	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9992976827386255	WITHOUT_CLASSIFICATION	7.023172613744826E-4	DOCUMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9997304071485776	WITHOUT_CLASSIFICATION	2.695928514223534E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9999774254455271	WITHOUT_CLASSIFICATION	2.257455447283959E-5	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9999875921329259	WITHOUT_CLASSIFICATION	1.2407867074031633E-5	DOCUMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9997498950368501	WITHOUT_CLASSIFICATION	2.501049631499932E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999518142383417	WITHOUT_CLASSIFICATION	4.818576165832676E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999450629712642	WITHOUT_CLASSIFICATION	5.4937028735881383E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999973667329833	WITHOUT_CLASSIFICATION	2.6332670166367583E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999966593909074	WITHOUT_CLASSIFICATION	3.3406090925949494E-6	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9998691556673599	WITHOUT_CLASSIFICATION	1.308443326400712E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999990385187283	WITHOUT_CLASSIFICATION	9.614812717113888E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9997261673452881	WITHOUT_CLASSIFICATION	2.7383265471185684E-4	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9997261673452881	WITHOUT_CLASSIFICATION	2.7383265471185684E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9994063387342457	WITHOUT_CLASSIFICATION	5.936612657542716E-4	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9994063387342457	WITHOUT_CLASSIFICATION	5.936612657542716E-4	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9993692642885869	WITHOUT_CLASSIFICATION	6.307357114131032E-4	DOCUMENTATION
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9994387945248351	WITHOUT_CLASSIFICATION	5.612054751648605E-4	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9996226239304242	WITHOUT_CLASSIFICATION	3.773760695757775E-4	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9996649383814074	WITHOUT_CLASSIFICATION	3.3506161859264905E-4	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998924913826407	WITHOUT_CLASSIFICATION	1.0750861735922826E-4	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9996226239304242	WITHOUT_CLASSIFICATION	3.773760695757775E-4	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9996649383814074	WITHOUT_CLASSIFICATION	3.3506161859264905E-4	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9988255342078058	WITHOUT_CLASSIFICATION	0.0011744657921941685	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9998932145013368	WITHOUT_CLASSIFICATION	1.0678549866321378E-4	DOCUMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999966934567154	WITHOUT_CLASSIFICATION	3.3065432846360585E-6	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999914743602168	WITHOUT_CLASSIFICATION	8.525639783058079E-6	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9997663648642745	WITHOUT_CLASSIFICATION	2.3363513572550193E-4	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.9994411877394556	WITHOUT_CLASSIFICATION	5.588122605444596E-4	DOCUMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9998994983144882	WITHOUT_CLASSIFICATION	1.0050168551183867E-4	DOCUMENTATION
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9980461768883294	WITHOUT_CLASSIFICATION	0.0019538231116706336	DOCUMENTATION
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9991009231461758	WITHOUT_CLASSIFICATION	8.990768538242855E-4	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999889812527964	WITHOUT_CLASSIFICATION	1.1018747203552722E-5	DOCUMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999394329629869	WITHOUT_CLASSIFICATION	6.056703701306048E-5	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999810149323631	WITHOUT_CLASSIFICATION	1.898506763686986E-5	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999923232681001	WITHOUT_CLASSIFICATION	7.676731899868147E-6	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9992907181218993	WITHOUT_CLASSIFICATION	7.092818781006415E-4	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998924913826407	WITHOUT_CLASSIFICATION	1.0750861735922826E-4	DOCUMENTATION
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9992907181218993	WITHOUT_CLASSIFICATION	7.092818781006415E-4	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9993359185557618	WITHOUT_CLASSIFICATION	6.640814442382507E-4	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9993359185557618	WITHOUT_CLASSIFICATION	6.640814442382507E-4	DOCUMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999914817300039	WITHOUT_CLASSIFICATION	8.518269996119643E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9988255342078058	WITHOUT_CLASSIFICATION	0.0011744657921941685	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9998297754768786	WITHOUT_CLASSIFICATION	1.7022452312138986E-4	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.999999896665351	WITHOUT_CLASSIFICATION	1.0333464893215035E-7	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9998710131629854	WITHOUT_CLASSIFICATION	1.2898683701451967E-4	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9998032688409015	WITHOUT_CLASSIFICATION	1.9673115909857786E-4	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9994145698482199	WITHOUT_CLASSIFICATION	5.854301517801869E-4	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9988255342078058	WITHOUT_CLASSIFICATION	0.0011744657921941685	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9998032688409015	WITHOUT_CLASSIFICATION	1.9673115909857786E-4	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9994145698482199	WITHOUT_CLASSIFICATION	5.854301517801869E-4	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.9990224848449564	WITHOUT_CLASSIFICATION	9.775151550435973E-4	DOCUMENTATION
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999691254447346	WITHOUT_CLASSIFICATION	3.087455526542792E-5	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999886549706352	WITHOUT_CLASSIFICATION	1.134502936491576E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9988255342078058	WITHOUT_CLASSIFICATION	0.0011744657921941685	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9988255342078058	WITHOUT_CLASSIFICATION	0.0011744657921941685	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.9999900246771233	WITHOUT_CLASSIFICATION	9.975322876737486E-6	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999899313868362	WITHOUT_CLASSIFICATION	1.0068613163865963E-5	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9997875375737854	WITHOUT_CLASSIFICATION	2.1246242621461347E-4	DOCUMENTATION
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999933554884465	WITHOUT_CLASSIFICATION	6.644511553591058E-6	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9993026634148358	WITHOUT_CLASSIFICATION	6.973365851642093E-4	DOCUMENTATION
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999977317517007	WITHOUT_CLASSIFICATION	2.268248299323894E-6	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999953104917214	WITHOUT_CLASSIFICATION	4.689508278685438E-6	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999941533826292	WITHOUT_CLASSIFICATION	5.846617370799027E-6	DOCUMENTATION
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999450556161591	WITHOUT_CLASSIFICATION	5.494438384083552E-5	DOCUMENTATION
// then bind it	WITHOUT_CLASSIFICATION	0.9999715811984333	WITHOUT_CLASSIFICATION	2.8418801566626328E-5	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999833375580832	WITHOUT_CLASSIFICATION	1.666244191677946E-5	DOCUMENTATION
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9999709591926061	WITHOUT_CLASSIFICATION	2.9040807393795782E-5	DOCUMENTATION
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999916038763833	WITHOUT_CLASSIFICATION	8.396123616723891E-6	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9999793259687668	WITHOUT_CLASSIFICATION	2.067403123311928E-5	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.999999264603495	WITHOUT_CLASSIFICATION	7.353965049968276E-7	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9998670883957581	WITHOUT_CLASSIFICATION	1.3291160424199817E-4	DOCUMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9994016385519535	WITHOUT_CLASSIFICATION	5.98361448046487E-4	DOCUMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9989675342256593	WITHOUT_CLASSIFICATION	0.0010324657743406608	DOCUMENTATION
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9996649383814074	WITHOUT_CLASSIFICATION	3.3506161859264905E-4	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9994552842104591	WITHOUT_CLASSIFICATION	5.447157895408852E-4	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9998670883957581	WITHOUT_CLASSIFICATION	1.3291160424199817E-4	DOCUMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.999952040340218	WITHOUT_CLASSIFICATION	4.795965978203119E-5	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999968953867449	WITHOUT_CLASSIFICATION	3.1046132551621643E-6	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9996932526507925	WITHOUT_CLASSIFICATION	3.0674734920750244E-4	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.999794278515069	WITHOUT_CLASSIFICATION	2.0572148493092388E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9994193354922097	WITHOUT_CLASSIFICATION	5.806645077902469E-4	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999841648338994	WITHOUT_CLASSIFICATION	1.583516610057223E-5	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9999899224403689	WITHOUT_CLASSIFICATION	1.0077559631156614E-5	DOCUMENTATION
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999992046832676	WITHOUT_CLASSIFICATION	7.95316732293415E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942916749226	WITHOUT_CLASSIFICATION	5.7083250774012E-5	DOCUMENTATION
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9990364875185056	WITHOUT_CLASSIFICATION	9.635124814944479E-4	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999898938457978	WITHOUT_CLASSIFICATION	1.0106154202245089E-5	DOCUMENTATION
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999953303230165	WITHOUT_CLASSIFICATION	4.669676983483657E-6	DOCUMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9998855207502689	WITHOUT_CLASSIFICATION	1.1447924973118091E-4	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999734492943245	WITHOUT_CLASSIFICATION	2.6550705675573967E-5	DOCUMENTATION
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999845486915424	WITHOUT_CLASSIFICATION	1.5451308457690185E-5	DOCUMENTATION
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9989071060171031	WITHOUT_CLASSIFICATION	0.0010928939828968502	DOCUMENTATION
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9999994831925962	WITHOUT_CLASSIFICATION	5.168074038162098E-7	DOCUMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9993481024335409	WITHOUT_CLASSIFICATION	6.518975664591105E-4	DOCUMENTATION
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999813842850583	WITHOUT_CLASSIFICATION	1.8615714941650204E-5	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.999994492189795	WITHOUT_CLASSIFICATION	5.507810205019949E-6	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9993418145070495	WITHOUT_CLASSIFICATION	6.581854929504917E-4	DOCUMENTATION
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999158484820277	WITHOUT_CLASSIFICATION	8.415151797223595E-5	DOCUMENTATION
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999962600357651	WITHOUT_CLASSIFICATION	3.7399642348836555E-5	DOCUMENTATION
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999622241197917	WITHOUT_CLASSIFICATION	3.7775880208288624E-5	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999524014268496	WITHOUT_CLASSIFICATION	4.7598573150350335E-5	DOCUMENTATION
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999430698838507	WITHOUT_CLASSIFICATION	5.693011614929194E-5	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999514306813911	WITHOUT_CLASSIFICATION	4.856931860884847E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999514306813911	WITHOUT_CLASSIFICATION	4.856931860884847E-5	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999514306813911	WITHOUT_CLASSIFICATION	4.856931860884847E-5	DOCUMENTATION
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999514306813911	WITHOUT_CLASSIFICATION	4.856931860884847E-5	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9998824669356858	WITHOUT_CLASSIFICATION	1.1753306431411697E-4	DOCUMENTATION
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9998687609591853	WITHOUT_CLASSIFICATION	1.312390408146935E-4	DOCUMENTATION
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999960362449744	WITHOUT_CLASSIFICATION	3.9637550256042323E-5	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999652746413568	WITHOUT_CLASSIFICATION	3.472535864322359E-5	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999514942949845	WITHOUT_CLASSIFICATION	4.8505705015559954E-5	DOCUMENTATION
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999672392910609	WITHOUT_CLASSIFICATION	3.2760708939115886E-5	DOCUMENTATION
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999514306813911	WITHOUT_CLASSIFICATION	4.856931860884847E-5	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999514306813911	WITHOUT_CLASSIFICATION	4.856931860884847E-5	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999515538891159	WITHOUT_CLASSIFICATION	4.844611088409844E-5	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999514306813911	WITHOUT_CLASSIFICATION	4.856931860884847E-5	DOCUMENTATION
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.999965643516553	WITHOUT_CLASSIFICATION	3.435648344690615E-5	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999428024555377	WITHOUT_CLASSIFICATION	5.7197544462290345E-5	DOCUMENTATION
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9999800707367676	WITHOUT_CLASSIFICATION	1.992926323227671E-5	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999949022177508	WITHOUT_CLASSIFICATION	5.097782249216509E-6	DOCUMENTATION
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999988003023013	WITHOUT_CLASSIFICATION	1.199697698808293E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.999527459090971	WITHOUT_CLASSIFICATION	4.725409090290068E-4	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9995751606285197	WITHOUT_CLASSIFICATION	4.248393714803077E-4	DOCUMENTATION
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.9990224848449564	WITHOUT_CLASSIFICATION	9.775151550435973E-4	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.999960536441463	WITHOUT_CLASSIFICATION	3.9463558537092185E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942916749226	WITHOUT_CLASSIFICATION	5.7083250774012E-5	DOCUMENTATION
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.999961149362115	WITHOUT_CLASSIFICATION	3.88506378850008E-5	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999691145464908	WITHOUT_CLASSIFICATION	3.088545350919113E-5	DOCUMENTATION
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9999940603772669	WITHOUT_CLASSIFICATION	5.939622733133692E-6	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9999894826334794	WITHOUT_CLASSIFICATION	1.0517366520648815E-5	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9999809931639219	WITHOUT_CLASSIFICATION	1.900683607808054E-5	DOCUMENTATION
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9999698245105451	WITHOUT_CLASSIFICATION	3.0175489454964926E-5	DOCUMENTATION
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999427167708201	WITHOUT_CLASSIFICATION	5.728322917983972E-5	DOCUMENTATION
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999457232612647	WITHOUT_CLASSIFICATION	5.427673873527676E-5	DOCUMENTATION
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999796187079368	WITHOUT_CLASSIFICATION	2.0381292063207668E-5	DOCUMENTATION
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999427740649905	WITHOUT_CLASSIFICATION	5.7225935009482716E-5	DOCUMENTATION
// not null is implicit	WITHOUT_CLASSIFICATION	0.9999746643972257	WITHOUT_CLASSIFICATION	2.533560277428475E-5	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.999915781795127	WITHOUT_CLASSIFICATION	8.421820487306258E-5	DOCUMENTATION
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.999977146619946	WITHOUT_CLASSIFICATION	2.285338005403188E-5	DOCUMENTATION
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999561179062474	WITHOUT_CLASSIFICATION	4.3882093752525814E-5	DOCUMENTATION
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999702862277573	WITHOUT_CLASSIFICATION	2.9713772242666093E-5	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999519034512208	WITHOUT_CLASSIFICATION	4.809654877930267E-5	DOCUMENTATION
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9999681548209133	WITHOUT_CLASSIFICATION	3.1845179086705024E-5	DOCUMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999492217031775	WITHOUT_CLASSIFICATION	5.077829682257969E-5	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999911897440923	WITHOUT_CLASSIFICATION	8.810255907697475E-6	DOCUMENTATION
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9992424172067549	WITHOUT_CLASSIFICATION	7.575827932451918E-4	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9999980735694232	WITHOUT_CLASSIFICATION	1.9264305768236877E-6	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9999894424091365	WITHOUT_CLASSIFICATION	1.0557590863447487E-5	DOCUMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9999684706735267	WITHOUT_CLASSIFICATION	3.1529326473306155E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942916749226	WITHOUT_CLASSIFICATION	5.7083250774012E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.999527459090971	WITHOUT_CLASSIFICATION	4.725409090290068E-4	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999991892257908	WITHOUT_CLASSIFICATION	8.107742092660444E-7	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999927426065168	WITHOUT_CLASSIFICATION	7.257393483151634E-6	DOCUMENTATION
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999776159261021	WITHOUT_CLASSIFICATION	2.238407389786433E-5	DOCUMENTATION
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999949022177508	WITHOUT_CLASSIFICATION	5.097782249216509E-6	DOCUMENTATION
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999797807038242	WITHOUT_CLASSIFICATION	2.0219296175885023E-5	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9992534473235241	WITHOUT_CLASSIFICATION	7.46552676476027E-4	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.999903461392286	WITHOUT_CLASSIFICATION	9.653860771389726E-5	DOCUMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999186627987643	WITHOUT_CLASSIFICATION	8.133720123570594E-5	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999284135033765	WITHOUT_CLASSIFICATION	7.158649662355116E-5	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999427327768007	WITHOUT_CLASSIFICATION	5.72672231994092E-5	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999439129960856	WITHOUT_CLASSIFICATION	5.608700391446597E-5	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999430655834598	WITHOUT_CLASSIFICATION	5.6934416540047904E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942916749226	WITHOUT_CLASSIFICATION	5.7083250774012E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942916749226	WITHOUT_CLASSIFICATION	5.7083250774012E-5	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999976669508462	WITHOUT_CLASSIFICATION	2.3330491538053046E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999682201474034	WITHOUT_CLASSIFICATION	3.1779852596631806E-5	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.999938556976141	WITHOUT_CLASSIFICATION	6.144302385900905E-5	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9990224848449564	WITHOUT_CLASSIFICATION	9.775151550435973E-4	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999949022177508	WITHOUT_CLASSIFICATION	5.097782249216509E-6	DOCUMENTATION
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999852107942957	WITHOUT_CLASSIFICATION	1.4789205704341397E-5	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.999788864175557	WITHOUT_CLASSIFICATION	2.1113582444298322E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942916749226	WITHOUT_CLASSIFICATION	5.7083250774012E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999867700504717	WITHOUT_CLASSIFICATION	1.3229949528403362E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9987451902539561	WITHOUT_CLASSIFICATION	0.0012548097460438406	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9999505023923242	WITHOUT_CLASSIFICATION	4.949760767581399E-5	DOCUMENTATION
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999770558491536	WITHOUT_CLASSIFICATION	2.2944150846361358E-5	DOCUMENTATION
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9999870977412568	WITHOUT_CLASSIFICATION	1.2902258743316011E-5	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999639854451102	WITHOUT_CLASSIFICATION	3.601455488974031E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.999335351713351	WITHOUT_CLASSIFICATION	6.64648286648978E-4	DOCUMENTATION
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9994556293923721	WITHOUT_CLASSIFICATION	5.443706076277863E-4	DOCUMENTATION
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9993095171917444	WITHOUT_CLASSIFICATION	6.904828082556018E-4	DOCUMENTATION
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999949022177508	WITHOUT_CLASSIFICATION	5.097782249216509E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.999527459090971	WITHOUT_CLASSIFICATION	4.725409090290068E-4	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999984482238081	WITHOUT_CLASSIFICATION	1.5517761919290715E-6	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999986662692797	WITHOUT_CLASSIFICATION	1.3337307202611605E-6	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999076798168351	WITHOUT_CLASSIFICATION	9.232018316481812E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.999527459090971	WITHOUT_CLASSIFICATION	4.725409090290068E-4	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.999780498444272	WITHOUT_CLASSIFICATION	2.195015557281326E-4	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999867700504717	WITHOUT_CLASSIFICATION	1.3229949528403362E-5	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9997387944870736	WITHOUT_CLASSIFICATION	2.6120551292641047E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942916749226	WITHOUT_CLASSIFICATION	5.7083250774012E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9994942887752235	WITHOUT_CLASSIFICATION	5.057112247764943E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942916749226	WITHOUT_CLASSIFICATION	5.7083250774012E-5	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999987812425389	WITHOUT_CLASSIFICATION	1.2187574610811013E-6	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999284135033765	WITHOUT_CLASSIFICATION	7.158649662355116E-5	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999427327768007	WITHOUT_CLASSIFICATION	5.72672231994092E-5	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999439129960856	WITHOUT_CLASSIFICATION	5.608700391446597E-5	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9998957604681006	WITHOUT_CLASSIFICATION	1.0423953189937889E-4	DOCUMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.9999043230801613	WITHOUT_CLASSIFICATION	9.567691983868391E-5	DOCUMENTATION
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9998443798429318	WITHOUT_CLASSIFICATION	1.5562015706814593E-4	DOCUMENTATION
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999952137847486	WITHOUT_CLASSIFICATION	4.786215251291539E-6	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999994866964981	WITHOUT_CLASSIFICATION	5.133035019612503E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942916749226	WITHOUT_CLASSIFICATION	5.7083250774012E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.999527459090971	WITHOUT_CLASSIFICATION	4.725409090290068E-4	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999430655834598	WITHOUT_CLASSIFICATION	5.6934416540047904E-5	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999976669508462	WITHOUT_CLASSIFICATION	2.3330491538053046E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999811319494659	WITHOUT_CLASSIFICATION	1.8868050533984213E-5	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999787795731243	WITHOUT_CLASSIFICATION	2.1220426875693776E-5	DOCUMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999460603567784	WITHOUT_CLASSIFICATION	5.393964322149874E-5	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9989071060171031	WITHOUT_CLASSIFICATION	0.0010928939828968502	DOCUMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9998618906332055	WITHOUT_CLASSIFICATION	1.3810936679447232E-4	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9999951021740535	WITHOUT_CLASSIFICATION	4.89782594643634E-6	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999514306813911	WITHOUT_CLASSIFICATION	4.856931860884847E-5	DOCUMENTATION
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999506232953066	WITHOUT_CLASSIFICATION	4.9376704693352746E-5	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9999593741126878	WITHOUT_CLASSIFICATION	4.0625887312185734E-5	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9999580681299146	WITHOUT_CLASSIFICATION	4.1931870085469604E-5	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999589189961942	WITHOUT_CLASSIFICATION	4.108100380578452E-5	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.999960506089685	WITHOUT_CLASSIFICATION	3.949391031488709E-5	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999514306813911	WITHOUT_CLASSIFICATION	4.856931860884847E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999514306813911	WITHOUT_CLASSIFICATION	4.856931860884847E-5	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999652746413568	WITHOUT_CLASSIFICATION	3.472535864322359E-5	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.999960506089685	WITHOUT_CLASSIFICATION	3.949391031488709E-5	DOCUMENTATION
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999447794736654	WITHOUT_CLASSIFICATION	5.522052633447313E-5	DOCUMENTATION
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999458207678098	WITHOUT_CLASSIFICATION	5.417923219023648E-5	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999515262623249	WITHOUT_CLASSIFICATION	4.847373767516139E-5	DOCUMENTATION
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999514306813911	WITHOUT_CLASSIFICATION	4.856931860884847E-5	DOCUMENTATION
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999970739104997	WITHOUT_CLASSIFICATION	2.92608950027898E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942916749226	WITHOUT_CLASSIFICATION	5.7083250774012E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942916749226	WITHOUT_CLASSIFICATION	5.7083250774012E-5	DOCUMENTATION
/*<String>*/	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999514942949845	WITHOUT_CLASSIFICATION	4.8505705015559954E-5	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999514306813911	WITHOUT_CLASSIFICATION	4.856931860884847E-5	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999911897440923	WITHOUT_CLASSIFICATION	8.810255907697475E-6	DOCUMENTATION
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9999471379936887	WITHOUT_CLASSIFICATION	5.286200631121271E-5	DOCUMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999884713630536	WITHOUT_CLASSIFICATION	1.1528636946407337E-5	DOCUMENTATION
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.999999247932942	WITHOUT_CLASSIFICATION	7.520670580605649E-7	DOCUMENTATION
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.999890546388215	WITHOUT_CLASSIFICATION	1.0945361178506637E-4	DOCUMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999937581707941	WITHOUT_CLASSIFICATION	6.2418292059627115E-6	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.999465336441142	WITHOUT_CLASSIFICATION	5.346635588581061E-4	DOCUMENTATION
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9989593271076462	WITHOUT_CLASSIFICATION	0.0010406728923538146	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999992046832676	WITHOUT_CLASSIFICATION	7.95316732293415E-7	DOCUMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999656266266195	WITHOUT_CLASSIFICATION	3.437337338058425E-5	DOCUMENTATION
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999921544394342	WITHOUT_CLASSIFICATION	7.845560565691193E-6	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999790456099851	WITHOUT_CLASSIFICATION	2.0954390014947234E-5	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999488564411259	WITHOUT_CLASSIFICATION	5.114355887410707E-5	DOCUMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999811012601786	WITHOUT_CLASSIFICATION	1.889873982134087E-5	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9997633897773229	WITHOUT_CLASSIFICATION	2.3661022267697568E-4	DOCUMENTATION
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999770388796654	WITHOUT_CLASSIFICATION	2.2961120334592323E-5	DOCUMENTATION
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999775667279032	WITHOUT_CLASSIFICATION	2.243327209679237E-5	DOCUMENTATION
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999783714268062	WITHOUT_CLASSIFICATION	2.1628573193732323E-5	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999963396183503	WITHOUT_CLASSIFICATION	3.6603816496846626E-6	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999971380479063	WITHOUT_CLASSIFICATION	2.86195209369829E-5	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999713412475003	WITHOUT_CLASSIFICATION	2.8658752499802825E-5	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999817506456099	WITHOUT_CLASSIFICATION	1.8249354390152726E-5	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999985418280996	WITHOUT_CLASSIFICATION	1.4581719004008102E-5	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9999960924728541	WITHOUT_CLASSIFICATION	3.907527145892447E-6	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999403695170349	WITHOUT_CLASSIFICATION	5.963048296511797E-5	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999817506456099	WITHOUT_CLASSIFICATION	1.8249354390152726E-5	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999697762301348	WITHOUT_CLASSIFICATION	3.0223769865147383E-5	DOCUMENTATION
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999769111140757	WITHOUT_CLASSIFICATION	2.30888859242834E-5	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999549085849424	WITHOUT_CLASSIFICATION	4.509141505770762E-5	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999825470043999	WITHOUT_CLASSIFICATION	1.745299560003889E-5	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999969579334449	WITHOUT_CLASSIFICATION	3.0420665551876152E-6	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999484707151781	WITHOUT_CLASSIFICATION	5.15292848218595E-5	DOCUMENTATION
// continue loop	WITHOUT_CLASSIFICATION	0.9999709005321902	WITHOUT_CLASSIFICATION	2.9099467809889063E-5	DOCUMENTATION
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9998315368926461	WITHOUT_CLASSIFICATION	1.6846310735382742E-4	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9998315368926461	WITHOUT_CLASSIFICATION	1.6846310735382742E-4	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999956870350976	WITHOUT_CLASSIFICATION	4.312964902469729E-6	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9999916065682131	WITHOUT_CLASSIFICATION	8.39343178697344E-6	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9999658733490191	WITHOUT_CLASSIFICATION	3.412665098088964E-5	DOCUMENTATION
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999954933133987	WITHOUT_CLASSIFICATION	4.506686601311099E-6	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9999997817294005	WITHOUT_CLASSIFICATION	2.1827059945293995E-7	DOCUMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9999893319567162	WITHOUT_CLASSIFICATION	1.066804328387516E-5	DOCUMENTATION
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999769330717156	WITHOUT_CLASSIFICATION	2.3066928284271817E-5	DOCUMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999940059828587	WITHOUT_CLASSIFICATION	5.994017141296525E-6	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999613789835462	WITHOUT_CLASSIFICATION	3.8621016453857355E-5	DOCUMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999976069136769	WITHOUT_CLASSIFICATION	2.3930863231943687E-6	DOCUMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999971709168632	WITHOUT_CLASSIFICATION	2.829083136818149E-6	DOCUMENTATION
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999863591471624	WITHOUT_CLASSIFICATION	1.3640852837597848E-5	DOCUMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999962160141568	WITHOUT_CLASSIFICATION	3.7839858432446554E-6	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9999922385720947	WITHOUT_CLASSIFICATION	7.761427905376345E-6	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.999691737398905	WITHOUT_CLASSIFICATION	3.082626010949518E-4	DOCUMENTATION
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9983114197791054	WITHOUT_CLASSIFICATION	0.001688580220894641	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999095403392669	WITHOUT_CLASSIFICATION	9.045966073300013E-5	DOCUMENTATION
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9992805069658264	WITHOUT_CLASSIFICATION	7.194930341736653E-4	DOCUMENTATION
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9999524974206082	WITHOUT_CLASSIFICATION	4.750257939170882E-5	DOCUMENTATION
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999679597560497	WITHOUT_CLASSIFICATION	3.204024395035628E-5	DOCUMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.999991850091432	WITHOUT_CLASSIFICATION	8.149908567982805E-6	DOCUMENTATION
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999678972434954	WITHOUT_CLASSIFICATION	3.210275650462474E-5	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9999882537211873	WITHOUT_CLASSIFICATION	1.1746278812844817E-5	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999930231578241	WITHOUT_CLASSIFICATION	6.976842175849025E-6	DOCUMENTATION
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999871321944411	WITHOUT_CLASSIFICATION	1.2867805558766103E-5	DOCUMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999544538617183	WITHOUT_CLASSIFICATION	4.5546138281751474E-5	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999876863273489	WITHOUT_CLASSIFICATION	1.231367265104507E-5	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999924035983774	WITHOUT_CLASSIFICATION	7.596401622638387E-6	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9999640999943461	WITHOUT_CLASSIFICATION	3.59000056539117E-5	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9999688897139336	WITHOUT_CLASSIFICATION	3.111028606627177E-5	DOCUMENTATION
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999479461074066	WITHOUT_CLASSIFICATION	5.2053892593399866E-5	DOCUMENTATION
//unwrap the object	WITHOUT_CLASSIFICATION	0.9997628035200402	WITHOUT_CLASSIFICATION	2.37196479959867E-4	DOCUMENTATION
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9996432977857859	WITHOUT_CLASSIFICATION	3.56702214214149E-4	DOCUMENTATION
//return the proxied object	WITHOUT_CLASSIFICATION	0.9997164469515045	WITHOUT_CLASSIFICATION	2.835530484955429E-4	DOCUMENTATION
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9992940267427771	WITHOUT_CLASSIFICATION	7.059732572228884E-4	DOCUMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.9999689336242719	WITHOUT_CLASSIFICATION	3.106637572815812E-5	DOCUMENTATION
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999804761161242	WITHOUT_CLASSIFICATION	1.9523883875857324E-5	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9999860925023523	WITHOUT_CLASSIFICATION	1.3907497647612506E-5	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9999745351147934	WITHOUT_CLASSIFICATION	2.5464885206698648E-5	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9995680327479222	WITHOUT_CLASSIFICATION	4.319672520778521E-4	DOCUMENTATION
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999885557214173	WITHOUT_CLASSIFICATION	1.1444278582643224E-5	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9990224848449564	WITHOUT_CLASSIFICATION	9.775151550435973E-4	DOCUMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9990224848449564	WITHOUT_CLASSIFICATION	9.775151550435973E-4	DOCUMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999782005185839	WITHOUT_CLASSIFICATION	2.1799481416082748E-5	DOCUMENTATION
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9997486215778418	WITHOUT_CLASSIFICATION	2.513784221580921E-4	DOCUMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9998728419007289	WITHOUT_CLASSIFICATION	1.2715809927113525E-4	DOCUMENTATION
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999870789763653	WITHOUT_CLASSIFICATION	1.2921023634683622E-5	DOCUMENTATION
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999944956117228	WITHOUT_CLASSIFICATION	5.504388277190373E-6	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9956271006173483	WITHOUT_CLASSIFICATION	0.004372899382651809	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9989697965178258	WITHOUT_CLASSIFICATION	0.0010302034821741595	DOCUMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9994083155642106	WITHOUT_CLASSIFICATION	5.916844357893359E-4	DOCUMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999123691437425	WITHOUT_CLASSIFICATION	8.763085625749207E-5	DOCUMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9998807891798738	WITHOUT_CLASSIFICATION	1.192108201262992E-4	DOCUMENTATION
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9989705612744516	WITHOUT_CLASSIFICATION	0.0010294387255483355	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9997197509921091	WITHOUT_CLASSIFICATION	2.802490078908824E-4	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9995611975777217	WITHOUT_CLASSIFICATION	4.388024222783338E-4	DOCUMENTATION
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9989156439328607	WITHOUT_CLASSIFICATION	0.0010843560671392684	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.998685446823993	WITHOUT_CLASSIFICATION	0.001314553176007086	DOCUMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.999906026599865	WITHOUT_CLASSIFICATION	9.397340013494833E-5	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999859916132811	WITHOUT_CLASSIFICATION	1.400838671900018E-5	DOCUMENTATION
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.999999300423497	WITHOUT_CLASSIFICATION	6.995765029786901E-7	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999918989965696	WITHOUT_CLASSIFICATION	8.101003430317632E-6	DOCUMENTATION
// We've been here before	WITHOUT_CLASSIFICATION	0.9999219631387054	WITHOUT_CLASSIFICATION	7.803686129467731E-5	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999631135648548	WITHOUT_CLASSIFICATION	3.6886435145270456E-5	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999918989965696	WITHOUT_CLASSIFICATION	8.101003430317632E-6	DOCUMENTATION
// if either its role changed,	WITHOUT_CLASSIFICATION	0.99999185952456	WITHOUT_CLASSIFICATION	8.140475439898124E-6	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.999961521967421	WITHOUT_CLASSIFICATION	3.847803257899323E-5	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9992081300641641	WITHOUT_CLASSIFICATION	7.91869935835904E-4	DOCUMENTATION
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9996697906636626	WITHOUT_CLASSIFICATION	3.302093363374416E-4	DOCUMENTATION
// force initialize!	WITHOUT_CLASSIFICATION	0.9999690316639559	WITHOUT_CLASSIFICATION	3.0968336044080724E-5	DOCUMENTATION
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999913189268114	WITHOUT_CLASSIFICATION	8.681073188764135E-6	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9989071060171031	WITHOUT_CLASSIFICATION	0.0010928939828968502	DOCUMENTATION
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999374327701378	WITHOUT_CLASSIFICATION	6.256722986222714E-5	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999987177535554	WITHOUT_CLASSIFICATION	1.282246444596207E-6	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999435963597367	WITHOUT_CLASSIFICATION	5.6403640263224236E-5	DOCUMENTATION
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999904794012712	WITHOUT_CLASSIFICATION	9.520598728891392E-6	DOCUMENTATION
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999948217427328	WITHOUT_CLASSIFICATION	5.178257267130545E-6	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9999812049583627	WITHOUT_CLASSIFICATION	1.879504163723583E-5	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999988151059208	WITHOUT_CLASSIFICATION	1.1848940791840561E-6	DOCUMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999978092484737	WITHOUT_CLASSIFICATION	2.1907515263189655E-6	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9968735348451063	WITHOUT_CLASSIFICATION	0.003126465154893717	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999968293972072	WITHOUT_CLASSIFICATION	3.1706027927413886E-6	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
//re-snapshot	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999429813186292	WITHOUT_CLASSIFICATION	5.70186813707217E-5	DOCUMENTATION
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9985141069335273	WITHOUT_CLASSIFICATION	0.0014858930664726953	DOCUMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999992868151483	WITHOUT_CLASSIFICATION	7.131848518022667E-7	DOCUMENTATION
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999874345110688	WITHOUT_CLASSIFICATION	1.256548893132158E-5	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999965856539744	WITHOUT_CLASSIFICATION	3.414346025593567E-6	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9999998547458877	WITHOUT_CLASSIFICATION	1.4525411223080768E-7	DOCUMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999990664237454	WITHOUT_CLASSIFICATION	9.335762545829751E-7	DOCUMENTATION
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9989635822629513	WITHOUT_CLASSIFICATION	0.001036417737048692	DOCUMENTATION
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9997583649200398	WITHOUT_CLASSIFICATION	2.416350799601061E-4	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9991137621701451	WITHOUT_CLASSIFICATION	8.862378298549362E-4	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9997633897773229	WITHOUT_CLASSIFICATION	2.3661022267697568E-4	DOCUMENTATION
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9995118562281076	WITHOUT_CLASSIFICATION	4.8814377189244256E-4	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9988914271189289	WITHOUT_CLASSIFICATION	0.0011085728810711517	DOCUMENTATION
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9999130441765087	WITHOUT_CLASSIFICATION	8.695582349126834E-5	DOCUMENTATION
//do the test	WITHOUT_CLASSIFICATION	0.999801304630589	WITHOUT_CLASSIFICATION	1.9869536941095471E-4	DOCUMENTATION
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999992059983052	WITHOUT_CLASSIFICATION	7.940016949503806E-7	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9997173804725124	WITHOUT_CLASSIFICATION	2.8261952748764613E-4	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999968471440218	WITHOUT_CLASSIFICATION	3.152855978233897E-6	DOCUMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.999989125152501	WITHOUT_CLASSIFICATION	1.0874847499035337E-5	DOCUMENTATION
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999886731478883	WITHOUT_CLASSIFICATION	1.1326852111622927E-5	DOCUMENTATION
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999886738426387	WITHOUT_CLASSIFICATION	1.1326157361384907E-5	DOCUMENTATION
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.99999253499239	WITHOUT_CLASSIFICATION	7.465007610010262E-6	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999952942419481	WITHOUT_CLASSIFICATION	4.705758051817915E-6	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999941644192122	WITHOUT_CLASSIFICATION	5.835580787777856E-6	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9997803393342438	WITHOUT_CLASSIFICATION	2.196606657560508E-4	DOCUMENTATION
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9991011425306285	WITHOUT_CLASSIFICATION	8.988574693713784E-4	DOCUMENTATION
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9997074725688585	WITHOUT_CLASSIFICATION	2.92527431141509E-4	DOCUMENTATION
//count++;	WITHOUT_CLASSIFICATION	0.9955572575942645	WITHOUT_CLASSIFICATION	0.004442742405735451	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9997781954766798	WITHOUT_CLASSIFICATION	2.2180452332019721E-4	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999105441053937	WITHOUT_CLASSIFICATION	8.945589460625437E-5	DOCUMENTATION
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9984058730280856	WITHOUT_CLASSIFICATION	0.0015941269719144638	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9990147333852993	WITHOUT_CLASSIFICATION	9.852666147006292E-4	DOCUMENTATION
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999091682589881	WITHOUT_CLASSIFICATION	9.083174101185855E-5	DOCUMENTATION
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999897754479182	WITHOUT_CLASSIFICATION	1.0224552081798243E-5	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999709931064277	WITHOUT_CLASSIFICATION	2.900689357242176E-5	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999251378759577	WITHOUT_CLASSIFICATION	7.486212404227643E-5	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.9999092938495895	WITHOUT_CLASSIFICATION	9.070615041047995E-5	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.999994701351195	WITHOUT_CLASSIFICATION	5.298648804979805E-6	DOCUMENTATION
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.9999991117091699	WITHOUT_CLASSIFICATION	8.882908300002764E-7	DOCUMENTATION
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999958791772023	WITHOUT_CLASSIFICATION	4.120822797680563E-6	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999639793753572	WITHOUT_CLASSIFICATION	3.6020624642825566E-5	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999572580054716	WITHOUT_CLASSIFICATION	4.2741994528346744E-5	DOCUMENTATION
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999458495201935	WITHOUT_CLASSIFICATION	5.41504798066115E-5	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999508310797092	WITHOUT_CLASSIFICATION	4.916892029069772E-5	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9999998533193125	WITHOUT_CLASSIFICATION	1.4668068756187623E-7	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999845292022672	WITHOUT_CLASSIFICATION	1.5470797732847823E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.999951221572163	WITHOUT_CLASSIFICATION	4.877842783699467E-5	DOCUMENTATION
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9999998831651045	WITHOUT_CLASSIFICATION	1.1683489544243404E-7	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999816379138019	WITHOUT_CLASSIFICATION	1.83620861981325E-5	DOCUMENTATION
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999571986454331	WITHOUT_CLASSIFICATION	4.2801354566908656E-5	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999816379138019	WITHOUT_CLASSIFICATION	1.83620861981325E-5	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999403520468867	WITHOUT_CLASSIFICATION	5.964795311336099E-5	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999857052981376	WITHOUT_CLASSIFICATION	1.4294701862364276E-5	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9999725701288049	WITHOUT_CLASSIFICATION	2.7429871195080897E-5	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999851545410066	WITHOUT_CLASSIFICATION	1.4845458993382475E-5	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999909699836856	WITHOUT_CLASSIFICATION	9.030016314302184E-6	DOCUMENTATION
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999178042902954	WITHOUT_CLASSIFICATION	8.219570970456715E-5	DOCUMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999921701717208	WITHOUT_CLASSIFICATION	7.829828279098893E-6	DOCUMENTATION
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999872772847125	WITHOUT_CLASSIFICATION	1.2722715287446747E-5	DOCUMENTATION
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999981525137359	WITHOUT_CLASSIFICATION	1.8474862641775388E-6	DOCUMENTATION
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9999392478734929	WITHOUT_CLASSIFICATION	6.075212650712876E-5	DOCUMENTATION
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999736110055186	WITHOUT_CLASSIFICATION	2.6388994481344204E-5	DOCUMENTATION
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9999963115696553	WITHOUT_CLASSIFICATION	3.6884303447008982E-6	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9987522079646846	WITHOUT_CLASSIFICATION	0.001247792035315429	DOCUMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.999999481649848	WITHOUT_CLASSIFICATION	5.183501520250168E-7	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.9998717355487908	WITHOUT_CLASSIFICATION	1.282644512090469E-4	DOCUMENTATION
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9999987549680616	WITHOUT_CLASSIFICATION	1.2450319383800876E-6	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.999572803166979	WITHOUT_CLASSIFICATION	4.271968330209609E-4	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.999572803166979	WITHOUT_CLASSIFICATION	4.271968330209609E-4	DOCUMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9998807891798738	WITHOUT_CLASSIFICATION	1.192108201262992E-4	DOCUMENTATION
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999925392561668	WITHOUT_CLASSIFICATION	7.460743833151914E-6	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999990934923121	WITHOUT_CLASSIFICATION	9.06507687949716E-7	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999997621654821	WITHOUT_CLASSIFICATION	2.3783451787379194E-7	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999997444176947	WITHOUT_CLASSIFICATION	2.555823052715097E-7	DOCUMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999999558577838	WITHOUT_CLASSIFICATION	4.414221620885542E-8	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9999510057846837	WITHOUT_CLASSIFICATION	4.899421531629658E-5	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9994714420924968	WITHOUT_CLASSIFICATION	5.285579075031403E-4	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999791360815767	WITHOUT_CLASSIFICATION	2.0863918423286895E-5	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9996703570681393	WITHOUT_CLASSIFICATION	3.2964293186057167E-4	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999748420624256	WITHOUT_CLASSIFICATION	2.515793757442611E-5	DOCUMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999964207071583	WITHOUT_CLASSIFICATION	3.5792928416468362E-6	DOCUMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999710965957841	WITHOUT_CLASSIFICATION	2.890340421592154E-5	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999994322544025	WITHOUT_CLASSIFICATION	5.677455976084132E-7	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.999978097792451	WITHOUT_CLASSIFICATION	2.1902207549027347E-5	DOCUMENTATION
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9998992230574387	WITHOUT_CLASSIFICATION	1.0077694256130281E-4	DOCUMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999620631031444	WITHOUT_CLASSIFICATION	3.793689685567036E-5	DOCUMENTATION
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9956861978550197	WITHOUT_CLASSIFICATION	0.004313802144980408	DOCUMENTATION
//use the current version	WITHOUT_CLASSIFICATION	0.9998031177286305	WITHOUT_CLASSIFICATION	1.9688227136953674E-4	DOCUMENTATION
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999966218000914	WITHOUT_CLASSIFICATION	3.3781999086674346E-6	DOCUMENTATION
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999798238471517	WITHOUT_CLASSIFICATION	2.01761528482463E-5	DOCUMENTATION
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9999590866826098	WITHOUT_CLASSIFICATION	4.091331739022353E-5	DOCUMENTATION
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9999841456407047	WITHOUT_CLASSIFICATION	1.5854359295313974E-5	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999793263152827	WITHOUT_CLASSIFICATION	2.0673684717231485E-5	DOCUMENTATION
//even process null collections	WITHOUT_CLASSIFICATION	0.9989594176771859	WITHOUT_CLASSIFICATION	0.00104058232281406	DOCUMENTATION
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999961385797054	WITHOUT_CLASSIFICATION	3.861420294642129E-6	DOCUMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999384192736264	WITHOUT_CLASSIFICATION	6.158072637354302E-5	DOCUMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.9994444034340938	WITHOUT_CLASSIFICATION	5.55596565906102E-4	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9994086331665027	WITHOUT_CLASSIFICATION	5.913668334972627E-4	DOCUMENTATION
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9997464321397365	WITHOUT_CLASSIFICATION	2.5356786026352286E-4	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9994483371640972	WITHOUT_CLASSIFICATION	5.516628359027083E-4	DOCUMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999209285591861	WITHOUT_CLASSIFICATION	7.907144081387004E-5	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.999604416659977	WITHOUT_CLASSIFICATION	3.955833400230784E-4	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9995364576395369	WITHOUT_CLASSIFICATION	4.635423604630426E-4	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999566924446756	WITHOUT_CLASSIFICATION	4.330755532443684E-5	DOCUMENTATION
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9998976136984347	WITHOUT_CLASSIFICATION	1.0238630156526545E-4	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.999967771074814	WITHOUT_CLASSIFICATION	3.2228925185986156E-5	DOCUMENTATION
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9999373603217407	WITHOUT_CLASSIFICATION	6.263967825933182E-5	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9999022880015461	WITHOUT_CLASSIFICATION	9.771199845389576E-5	DOCUMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999764540320355	WITHOUT_CLASSIFICATION	2.3545967964413937E-5	DOCUMENTATION
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.999972099853133	WITHOUT_CLASSIFICATION	2.7900146867112846E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999434247368245	WITHOUT_CLASSIFICATION	5.657526317554381E-5	DOCUMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.9994062008710668	WITHOUT_CLASSIFICATION	5.937991289332785E-4	DOCUMENTATION
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9995760430451942	WITHOUT_CLASSIFICATION	4.239569548058616E-4	DOCUMENTATION
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999886456451579	WITHOUT_CLASSIFICATION	1.1354354842025744E-5	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9999986482861637	WITHOUT_CLASSIFICATION	1.351713836226346E-6	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.9999839406004923	WITHOUT_CLASSIFICATION	1.605939950768196E-5	DOCUMENTATION
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999989156854703	WITHOUT_CLASSIFICATION	1.0843145297122946E-6	DOCUMENTATION
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999691843733852	WITHOUT_CLASSIFICATION	3.081562661483638E-5	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9994935871747958	WITHOUT_CLASSIFICATION	5.064128252042625E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999434247368245	WITHOUT_CLASSIFICATION	5.657526317554381E-5	DOCUMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9998609394320499	WITHOUT_CLASSIFICATION	1.390605679500694E-4	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999799536134578	WITHOUT_CLASSIFICATION	2.004638654214725E-5	DOCUMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9999095555172549	WITHOUT_CLASSIFICATION	9.044448274511129E-5	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999096726315108	WITHOUT_CLASSIFICATION	9.032736848923825E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.999780498444272	WITHOUT_CLASSIFICATION	2.195015557281326E-4	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.999780498444272	WITHOUT_CLASSIFICATION	2.195015557281326E-4	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999997658750474	WITHOUT_CLASSIFICATION	2.3412495264762932E-7	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9996536853045392	WITHOUT_CLASSIFICATION	3.4631469546070575E-4	DOCUMENTATION
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9996093691759197	WITHOUT_CLASSIFICATION	3.906308240803051E-4	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999745839987247	WITHOUT_CLASSIFICATION	2.5416001275341603E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.999986490796043	WITHOUT_CLASSIFICATION	1.350920395704386E-5	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.999993536891217	WITHOUT_CLASSIFICATION	6.463108783022309E-6	DOCUMENTATION
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999900200830848	WITHOUT_CLASSIFICATION	9.979916915212795E-6	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9997813447858394	WITHOUT_CLASSIFICATION	2.1865521416077348E-4	DOCUMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999964188130426	WITHOUT_CLASSIFICATION	3.581186957293603E-6	DOCUMENTATION
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9997156563204492	WITHOUT_CLASSIFICATION	2.8434367955076586E-4	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9990037054983345	WITHOUT_CLASSIFICATION	9.962945016655025E-4	DOCUMENTATION
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9984967502058527	WITHOUT_CLASSIFICATION	0.0015032497941471971	DOCUMENTATION
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999929420273913	WITHOUT_CLASSIFICATION	7.057972608637541E-6	DOCUMENTATION
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999983318538636	WITHOUT_CLASSIFICATION	1.6681461365320322E-6	DOCUMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999980938321	WITHOUT_CLASSIFICATION	1.9061678999732006E-6	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999998213757932	WITHOUT_CLASSIFICATION	1.7862420664285156E-7	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9997568560824038	WITHOUT_CLASSIFICATION	2.4314391759621917E-4	DOCUMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999996189793156	WITHOUT_CLASSIFICATION	3.8102068442328047E-7	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9991653567330804	WITHOUT_CLASSIFICATION	8.34643266919607E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999560708074656	WITHOUT_CLASSIFICATION	4.3929192534447416E-5	DOCUMENTATION
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.9999927345458639	WITHOUT_CLASSIFICATION	7.2654541359883616E-6	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9999982659527897	WITHOUT_CLASSIFICATION	1.7340472102322225E-6	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9996393555232282	WITHOUT_CLASSIFICATION	3.6064447677185574E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9998598480102368	WITHOUT_CLASSIFICATION	1.4015198976324218E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.999995921950941	WITHOUT_CLASSIFICATION	4.078049058955204E-6	DOCUMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.999998144274921	WITHOUT_CLASSIFICATION	1.8557250789657444E-6	DOCUMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.9955572575942645	WITHOUT_CLASSIFICATION	0.004442742405735451	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999707769599034	WITHOUT_CLASSIFICATION	2.9223040096597027E-5	DOCUMENTATION
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9980196831061798	WITHOUT_CLASSIFICATION	0.001980316893820072	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9999991685632774	WITHOUT_CLASSIFICATION	8.314367225675617E-7	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999707769599034	WITHOUT_CLASSIFICATION	2.9223040096597027E-5	DOCUMENTATION
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9999457808214084	WITHOUT_CLASSIFICATION	5.421917859167124E-5	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999631888543591	WITHOUT_CLASSIFICATION	3.681114564101117E-5	DOCUMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999796351257209	WITHOUT_CLASSIFICATION	2.0364874279063615E-5	DOCUMENTATION
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.99978051558518	WITHOUT_CLASSIFICATION	2.1948441482001218E-4	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9995687345765594	WITHOUT_CLASSIFICATION	4.3126542344057705E-4	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999748420624256	WITHOUT_CLASSIFICATION	2.515793757442611E-5	DOCUMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9980501283864062	WITHOUT_CLASSIFICATION	0.0019498716135937968	DOCUMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.999465336441142	WITHOUT_CLASSIFICATION	5.346635588581061E-4	DOCUMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9992952567358635	WITHOUT_CLASSIFICATION	7.047432641365555E-4	DOCUMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.999987505549489	WITHOUT_CLASSIFICATION	1.2494450511020075E-5	DOCUMENTATION
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9995478693691353	WITHOUT_CLASSIFICATION	4.5213063086469357E-4	DOCUMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999819951076434	WITHOUT_CLASSIFICATION	1.800489235664892E-5	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9991489177569232	WITHOUT_CLASSIFICATION	8.510822430769817E-4	DOCUMENTATION
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999647165946693	WITHOUT_CLASSIFICATION	3.528340533069831E-5	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999479168680606	WITHOUT_CLASSIFICATION	5.208313193935802E-5	DOCUMENTATION
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999776350049118	WITHOUT_CLASSIFICATION	2.2364995088240043E-5	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999959035801859	WITHOUT_CLASSIFICATION	4.096419814130503E-6	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999940614552469	WITHOUT_CLASSIFICATION	5.9385447530837665E-6	DOCUMENTATION
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999927297464392	WITHOUT_CLASSIFICATION	7.2702535608498525E-6	DOCUMENTATION
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999521393392015	WITHOUT_CLASSIFICATION	4.786066079847339E-5	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999441904409757	WITHOUT_CLASSIFICATION	5.5809559024281924E-5	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999757689056512	WITHOUT_CLASSIFICATION	2.4231094348815618E-5	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999911238761093	WITHOUT_CLASSIFICATION	8.876123890739911E-6	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9989071060171031	WITHOUT_CLASSIFICATION	0.0010928939828968502	DOCUMENTATION
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9989071060171031	WITHOUT_CLASSIFICATION	0.0010928939828968502	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999940805865105	WITHOUT_CLASSIFICATION	5.9194134894499445E-6	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9997446813827382	WITHOUT_CLASSIFICATION	2.5531861726181586E-4	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999789283876676	WITHOUT_CLASSIFICATION	2.1071612332329297E-5	DOCUMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9988712076262624	WITHOUT_CLASSIFICATION	0.0011287923737376034	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.999969357662416	WITHOUT_CLASSIFICATION	3.064233758401267E-5	DOCUMENTATION
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999606488238765	WITHOUT_CLASSIFICATION	3.9351176123425465E-5	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999322814692305	WITHOUT_CLASSIFICATION	6.771853076944821E-5	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999481160712185	WITHOUT_CLASSIFICATION	5.188392878155716E-5	DOCUMENTATION
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.9999943780074573	WITHOUT_CLASSIFICATION	5.6219925427416756E-6	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9999865230066822	WITHOUT_CLASSIFICATION	1.34769933177446E-5	DOCUMENTATION
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9999290059908917	WITHOUT_CLASSIFICATION	7.099400910828057E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999912493140576	WITHOUT_CLASSIFICATION	8.750685942385885E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999912493140576	WITHOUT_CLASSIFICATION	8.750685942385885E-6	DOCUMENTATION
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999524254709091	WITHOUT_CLASSIFICATION	4.757452909094366E-5	DOCUMENTATION
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999999302526791	WITHOUT_CLASSIFICATION	6.974732088817404E-8	DOCUMENTATION
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999832119109722	WITHOUT_CLASSIFICATION	1.6788089027895894E-5	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999970711979758	WITHOUT_CLASSIFICATION	2.928802024332038E-6	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999953102984134	WITHOUT_CLASSIFICATION	4.689701586558309E-6	DOCUMENTATION
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999856216612911	WITHOUT_CLASSIFICATION	1.4378338708958784E-5	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999589266769585	WITHOUT_CLASSIFICATION	4.1073323041451964E-5	DOCUMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999736518473367	WITHOUT_CLASSIFICATION	2.6348152663360905E-5	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9999460715422639	WITHOUT_CLASSIFICATION	5.392845773621692E-5	DOCUMENTATION
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999954758061834	WITHOUT_CLASSIFICATION	4.5241938166599685E-6	DOCUMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999982917037009	WITHOUT_CLASSIFICATION	1.7082962990170354E-6	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999884401437464	WITHOUT_CLASSIFICATION	1.1559856253584562E-5	DOCUMENTATION
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999715545335712	WITHOUT_CLASSIFICATION	2.84454664286903E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999912493140576	WITHOUT_CLASSIFICATION	8.750685942385885E-6	DOCUMENTATION
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999647208547813	WITHOUT_CLASSIFICATION	3.5279145218801135E-5	DOCUMENTATION
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999035804499882	WITHOUT_CLASSIFICATION	9.64195500118443E-5	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999994480731179	WITHOUT_CLASSIFICATION	5.519268821364537E-7	DOCUMENTATION
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9999748733861826	WITHOUT_CLASSIFICATION	2.5126613817298492E-5	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999963524941001	WITHOUT_CLASSIFICATION	3.6475058998370597E-6	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9999242819036877	WITHOUT_CLASSIFICATION	7.571809631229249E-5	DOCUMENTATION
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999784116122499	WITHOUT_CLASSIFICATION	2.1588387750196078E-5	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999932446757641	WITHOUT_CLASSIFICATION	6.755324235932976E-6	DOCUMENTATION
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999981901687455	WITHOUT_CLASSIFICATION	1.809831254589212E-6	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999524855984492	WITHOUT_CLASSIFICATION	4.751440155068292E-5	DOCUMENTATION
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.999982447010926	WITHOUT_CLASSIFICATION	1.7552989074055246E-5	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999322814692305	WITHOUT_CLASSIFICATION	6.771853076944821E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999912493140576	WITHOUT_CLASSIFICATION	8.750685942385885E-6	DOCUMENTATION
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999899263469322	WITHOUT_CLASSIFICATION	1.00736530679299E-5	DOCUMENTATION
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999941790763255	WITHOUT_CLASSIFICATION	5.820923674532214E-6	DOCUMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9997671839269587	WITHOUT_CLASSIFICATION	2.3281607304133844E-4	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.999996874261932	WITHOUT_CLASSIFICATION	3.125738068034207E-6	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999997273668174	WITHOUT_CLASSIFICATION	2.726331825545421E-7	DOCUMENTATION
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.999972567127447	WITHOUT_CLASSIFICATION	2.743287255299432E-5	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999484479772206	WITHOUT_CLASSIFICATION	5.155202277934976E-5	DOCUMENTATION
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999993117856789	WITHOUT_CLASSIFICATION	6.882143210699124E-7	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999992538575629	WITHOUT_CLASSIFICATION	7.461424370116671E-7	DOCUMENTATION
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999626091987165	WITHOUT_CLASSIFICATION	3.739080128344504E-5	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999769991669538	WITHOUT_CLASSIFICATION	2.3000833046170037E-5	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9989082240416741	WITHOUT_CLASSIFICATION	0.001091775958325918	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999758178504959	WITHOUT_CLASSIFICATION	2.4182149504103518E-5	DOCUMENTATION
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999965479776521	WITHOUT_CLASSIFICATION	3.4520223479692268E-6	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999403520468867	WITHOUT_CLASSIFICATION	5.964795311336099E-5	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999994153120045	WITHOUT_CLASSIFICATION	5.846879954770565E-7	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999986439871048	WITHOUT_CLASSIFICATION	1.356012895192259E-6	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999977604100632	WITHOUT_CLASSIFICATION	2.2395899367967468E-6	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999593099914129	WITHOUT_CLASSIFICATION	4.069000858697322E-5	DOCUMENTATION
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.999999117633493	WITHOUT_CLASSIFICATION	8.823665069135876E-7	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9994161439335436	WITHOUT_CLASSIFICATION	5.838560664563779E-4	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9994161439335436	WITHOUT_CLASSIFICATION	5.838560664563779E-4	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9999462212374972	WITHOUT_CLASSIFICATION	5.3778762502909824E-5	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9999936641909715	WITHOUT_CLASSIFICATION	6.335809028584084E-6	DOCUMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9999631865555785	WITHOUT_CLASSIFICATION	3.681344442158621E-5	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.999975328193189	WITHOUT_CLASSIFICATION	2.467180681102453E-5	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999830958034285	WITHOUT_CLASSIFICATION	1.6904196571505888E-5	DOCUMENTATION
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9999954087988684	WITHOUT_CLASSIFICATION	4.591201131612488E-6	DOCUMENTATION
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.999983962167304	WITHOUT_CLASSIFICATION	1.603783269594828E-5	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999878656334259	WITHOUT_CLASSIFICATION	1.2134366574181047E-5	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999878656334259	WITHOUT_CLASSIFICATION	1.2134366574181047E-5	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9990103482347257	WITHOUT_CLASSIFICATION	9.89651765274304E-4	DOCUMENTATION
// Transform the tree.	WITHOUT_CLASSIFICATION	0.999984173838196	WITHOUT_CLASSIFICATION	1.5826161803894194E-5	DOCUMENTATION
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999785667568706	WITHOUT_CLASSIFICATION	2.1433243129454198E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999876057326107	WITHOUT_CLASSIFICATION	1.2394267389350428E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999876057326107	WITHOUT_CLASSIFICATION	1.2394267389350428E-5	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999876057326107	WITHOUT_CLASSIFICATION	1.2394267389350428E-5	DOCUMENTATION
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9999290430707929	WITHOUT_CLASSIFICATION	7.095692920713226E-5	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9999786326484605	WITHOUT_CLASSIFICATION	2.136735153943234E-5	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9997795322026591	WITHOUT_CLASSIFICATION	2.2046779734095218E-4	DOCUMENTATION
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9999962434051124	WITHOUT_CLASSIFICATION	3.7565948876788265E-6	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999996180127824	WITHOUT_CLASSIFICATION	3.819872176715681E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999912493140576	WITHOUT_CLASSIFICATION	8.750685942385885E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999912493140576	WITHOUT_CLASSIFICATION	8.750685942385885E-6	DOCUMENTATION
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9999984672571126	WITHOUT_CLASSIFICATION	1.5327428873247895E-6	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999950002597493	WITHOUT_CLASSIFICATION	4.999740250754728E-6	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9999996788040588	WITHOUT_CLASSIFICATION	3.211959412885098E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999487063959258	WITHOUT_CLASSIFICATION	5.1293604074050945E-5	DOCUMENTATION
// igndore it...	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999832771561369	WITHOUT_CLASSIFICATION	1.672284386309038E-5	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9998966982263111	WITHOUT_CLASSIFICATION	1.0330177368897814E-4	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9999996377397598	WITHOUT_CLASSIFICATION	3.622602402344282E-7	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999976421896293	WITHOUT_CLASSIFICATION	2.35781037062468E-6	DOCUMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999919575314603	WITHOUT_CLASSIFICATION	8.042468539629224E-6	DOCUMENTATION
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999729447465717	WITHOUT_CLASSIFICATION	2.7055253428228023E-5	DOCUMENTATION
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999945938004241	WITHOUT_CLASSIFICATION	5.406199575910943E-6	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999945938004241	WITHOUT_CLASSIFICATION	5.406199575910943E-6	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999945938004241	WITHOUT_CLASSIFICATION	5.406199575910943E-6	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999945938004241	WITHOUT_CLASSIFICATION	5.406199575910943E-6	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.9999945938004241	WITHOUT_CLASSIFICATION	5.406199575910943E-6	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999921532496537	WITHOUT_CLASSIFICATION	7.846750346220559E-6	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999921532496537	WITHOUT_CLASSIFICATION	7.846750346220559E-6	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999921532496537	WITHOUT_CLASSIFICATION	7.846750346220559E-6	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999921532496537	WITHOUT_CLASSIFICATION	7.846750346220559E-6	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999797689637017	WITHOUT_CLASSIFICATION	2.0231036298358206E-5	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9994161439335436	WITHOUT_CLASSIFICATION	5.838560664563779E-4	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.999992975638817	WITHOUT_CLASSIFICATION	7.024361183013503E-6	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999921532496537	WITHOUT_CLASSIFICATION	7.846750346220559E-6	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9999902037456616	WITHOUT_CLASSIFICATION	9.796254338269686E-6	DOCUMENTATION
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999549840680979	WITHOUT_CLASSIFICATION	4.501593190202897E-5	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999630273898272	WITHOUT_CLASSIFICATION	3.697261017285382E-5	DOCUMENTATION
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999941520053114	WITHOUT_CLASSIFICATION	5.847994688593085E-6	DOCUMENTATION
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999996356722284	WITHOUT_CLASSIFICATION	3.643277715696411E-7	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9999662625994222	WITHOUT_CLASSIFICATION	3.37374005777975E-5	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999927603321538	WITHOUT_CLASSIFICATION	7.2396678462520795E-6	DOCUMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9999989028915459	WITHOUT_CLASSIFICATION	1.0971084540665349E-6	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9999705388849853	WITHOUT_CLASSIFICATION	2.9461115014764807E-5	DOCUMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.999995036505359	WITHOUT_CLASSIFICATION	4.963494640929018E-6	DOCUMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999991489210067	WITHOUT_CLASSIFICATION	8.510789931837562E-7	DOCUMENTATION
// Set it!	WITHOUT_CLASSIFICATION	0.9998045985844397	WITHOUT_CLASSIFICATION	1.9540141556021953E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9997830555512219	WITHOUT_CLASSIFICATION	2.1694444877819638E-4	DOCUMENTATION
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999861354204785	WITHOUT_CLASSIFICATION	1.3864579521460976E-5	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.99999986347392	WITHOUT_CLASSIFICATION	1.3652608002143646E-7	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9999883564039551	WITHOUT_CLASSIFICATION	1.164359604487663E-5	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999935910218162	WITHOUT_CLASSIFICATION	6.408978183864194E-6	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999395874753173	WITHOUT_CLASSIFICATION	6.041252468275881E-5	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999395874753173	WITHOUT_CLASSIFICATION	6.041252468275881E-5	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999775183844826	WITHOUT_CLASSIFICATION	2.2481615517398718E-5	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999893589277421	WITHOUT_CLASSIFICATION	1.0641072257991838E-5	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999774222683823	WITHOUT_CLASSIFICATION	2.2577731617689063E-5	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9999613274899704	WITHOUT_CLASSIFICATION	3.867251002965765E-5	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.9998900343744507	WITHOUT_CLASSIFICATION	1.0996562554932097E-4	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.999993165516603	WITHOUT_CLASSIFICATION	6.834483397055213E-6	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9999910055082585	WITHOUT_CLASSIFICATION	8.994491741605164E-6	DOCUMENTATION
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999161702934691	WITHOUT_CLASSIFICATION	8.382970653096489E-5	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999738100106393	WITHOUT_CLASSIFICATION	2.6189989360612597E-5	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999807462946662	WITHOUT_CLASSIFICATION	1.9253705333876886E-5	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999514100610439	WITHOUT_CLASSIFICATION	4.858993895599383E-5	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9989103612707247	WITHOUT_CLASSIFICATION	0.0010896387292752305	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999988605558814	WITHOUT_CLASSIFICATION	1.139444118554018E-6	DOCUMENTATION
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999848660597094	WITHOUT_CLASSIFICATION	1.5133940290693288E-5	DOCUMENTATION
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999938871512803	WITHOUT_CLASSIFICATION	6.112848719618346E-6	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999661577459434	WITHOUT_CLASSIFICATION	3.384225405651762E-5	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.999995385095118	WITHOUT_CLASSIFICATION	4.614904881976049E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.999995385095118	WITHOUT_CLASSIFICATION	4.614904881976049E-6	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9998897597553339	WITHOUT_CLASSIFICATION	1.1024024466609667E-4	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9999998406111343	WITHOUT_CLASSIFICATION	1.593888655963149E-7	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9999800988745869	WITHOUT_CLASSIFICATION	1.9901125413131633E-5	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999800988745869	WITHOUT_CLASSIFICATION	1.9901125413131633E-5	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9998284019531801	WITHOUT_CLASSIFICATION	1.7159804681979342E-4	DOCUMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.999979930252319	WITHOUT_CLASSIFICATION	2.0069747680995483E-5	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9990978325934898	WITHOUT_CLASSIFICATION	9.021674065101752E-4	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999986267860719	WITHOUT_CLASSIFICATION	1.3732139280367281E-6	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9998421977155038	WITHOUT_CLASSIFICATION	1.5780228449634412E-4	DOCUMENTATION
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999920279362905	WITHOUT_CLASSIFICATION	7.972063709471124E-6	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999611139479	WITHOUT_CLASSIFICATION	3.8886052100054245E-5	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999986267860719	WITHOUT_CLASSIFICATION	1.3732139280367281E-6	DOCUMENTATION
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.9999995528757557	WITHOUT_CLASSIFICATION	4.4712424437392395E-7	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999760127010894	WITHOUT_CLASSIFICATION	2.398729891051842E-5	DOCUMENTATION
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999973733253	WITHOUT_CLASSIFICATION	2.626674700010478E-6	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.999918677597681	WITHOUT_CLASSIFICATION	8.132240231903615E-5	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999966806802834	WITHOUT_CLASSIFICATION	3.3193197167157446E-6	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.999978285085725	WITHOUT_CLASSIFICATION	2.1714914275016744E-5	DOCUMENTATION
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.999945977321763	WITHOUT_CLASSIFICATION	5.4022678236859794E-5	DOCUMENTATION
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999743562569354	WITHOUT_CLASSIFICATION	2.5643743064657763E-5	DOCUMENTATION
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.999999750734483	WITHOUT_CLASSIFICATION	2.492655170680586E-7	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999969123202368	WITHOUT_CLASSIFICATION	3.08767976333626E-6	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9999860165655956	WITHOUT_CLASSIFICATION	1.3983434404299367E-5	DOCUMENTATION
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.999995929485844	WITHOUT_CLASSIFICATION	4.0705141559755795E-6	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999878446098803	WITHOUT_CLASSIFICATION	1.2155390119553762E-5	DOCUMENTATION
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999818036115824	WITHOUT_CLASSIFICATION	1.819638841752581E-5	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999837207346839	WITHOUT_CLASSIFICATION	1.6279265316071336E-5	DOCUMENTATION
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999701817426491	WITHOUT_CLASSIFICATION	2.9818257350941066E-5	DOCUMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999568119074138	WITHOUT_CLASSIFICATION	4.318809258618516E-5	DOCUMENTATION
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9998656921093728	WITHOUT_CLASSIFICATION	1.3430789062722126E-4	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9998656921093728	WITHOUT_CLASSIFICATION	1.3430789062722126E-4	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.999945977321763	WITHOUT_CLASSIFICATION	5.4022678236859794E-5	DOCUMENTATION
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9999917724086765	WITHOUT_CLASSIFICATION	8.227591323449327E-6	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.9999947548758236	WITHOUT_CLASSIFICATION	5.245124176505084E-6	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.9997421639004588	WITHOUT_CLASSIFICATION	2.5783609954125903E-4	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.9997664314669003	WITHOUT_CLASSIFICATION	2.335685330997755E-4	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.999981435426046	WITHOUT_CLASSIFICATION	1.8564573953912044E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999903047013639	WITHOUT_CLASSIFICATION	9.695298636171025E-6	DOCUMENTATION
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999857230241939	WITHOUT_CLASSIFICATION	1.4276975806038422E-5	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999751985533821	WITHOUT_CLASSIFICATION	2.4801446617916334E-5	DOCUMENTATION
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999935886587404	WITHOUT_CLASSIFICATION	6.411341259550089E-6	DOCUMENTATION
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9999978298922549	WITHOUT_CLASSIFICATION	2.1701077450778E-6	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999963520180197	WITHOUT_CLASSIFICATION	3.6479819802872877E-6	DOCUMENTATION
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999916177954208	WITHOUT_CLASSIFICATION	8.38220457925459E-6	DOCUMENTATION
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999825884620926	WITHOUT_CLASSIFICATION	1.7411537907304904E-5	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9999996815844947	WITHOUT_CLASSIFICATION	3.1841550533995166E-7	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999855044913063	WITHOUT_CLASSIFICATION	1.4495508693638168E-5	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999763576167953	WITHOUT_CLASSIFICATION	2.3642383204687412E-5	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.999999605917002	WITHOUT_CLASSIFICATION	3.9408299802571456E-7	DOCUMENTATION
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.999968862782868	WITHOUT_CLASSIFICATION	3.1137217131990505E-5	DOCUMENTATION
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999858948979841	WITHOUT_CLASSIFICATION	1.4105102015966863E-5	DOCUMENTATION
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999799426875828	WITHOUT_CLASSIFICATION	2.0057312417104568E-5	DOCUMENTATION
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.999947451405227	WITHOUT_CLASSIFICATION	5.254859477298885E-5	DOCUMENTATION
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999781117281558	WITHOUT_CLASSIFICATION	2.1888271844237568E-5	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999488096438301	WITHOUT_CLASSIFICATION	5.1190356169887104E-5	DOCUMENTATION
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999913731428638	WITHOUT_CLASSIFICATION	8.626857136215262E-6	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999790278816093	WITHOUT_CLASSIFICATION	2.0972118390597363E-5	DOCUMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999175431843801	WITHOUT_CLASSIFICATION	8.245681561992426E-5	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999970031381333	WITHOUT_CLASSIFICATION	2.996861866666782E-6	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999843415519434	WITHOUT_CLASSIFICATION	1.5658448056656384E-5	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999930579806653	WITHOUT_CLASSIFICATION	6.9420193347226375E-6	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999802166760817	WITHOUT_CLASSIFICATION	1.978332391827539E-5	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942710560714	WITHOUT_CLASSIFICATION	5.728943928599667E-5	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999855044913063	WITHOUT_CLASSIFICATION	1.4495508693638168E-5	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999918641263906	WITHOUT_CLASSIFICATION	8.135873609377954E-6	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.999996488509694	WITHOUT_CLASSIFICATION	3.5114903060417477E-6	DOCUMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999964813552443	WITHOUT_CLASSIFICATION	3.518644755742604E-6	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999821538725248	WITHOUT_CLASSIFICATION	1.7846127475148484E-5	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999916381705246	WITHOUT_CLASSIFICATION	8.361829475448465E-6	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999946162895992	WITHOUT_CLASSIFICATION	5.383710400868537E-6	DOCUMENTATION
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999715545036523	WITHOUT_CLASSIFICATION	2.8445496347613702E-5	DOCUMENTATION
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999812106667921	WITHOUT_CLASSIFICATION	1.8789333207805866E-5	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999936408238759	WITHOUT_CLASSIFICATION	6.3591761241587325E-6	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999933308794938	WITHOUT_CLASSIFICATION	6.669120506137001E-6	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9999562354634208	WITHOUT_CLASSIFICATION	4.3764536579233834E-5	DOCUMENTATION
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.9999996131029413	WITHOUT_CLASSIFICATION	3.8689705869565617E-7	DOCUMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9994406574064728	WITHOUT_CLASSIFICATION	5.593425935272253E-4	DOCUMENTATION
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9999772774935839	WITHOUT_CLASSIFICATION	2.2722506416139323E-5	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942710560714	WITHOUT_CLASSIFICATION	5.728943928599667E-5	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999859948844189	WITHOUT_CLASSIFICATION	1.4005115581229906E-5	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999996939042548	WITHOUT_CLASSIFICATION	3.0609574517802345E-7	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999917378244719	WITHOUT_CLASSIFICATION	8.262175528074341E-6	DOCUMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.999940547772374	WITHOUT_CLASSIFICATION	5.945222762604603E-5	DOCUMENTATION
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9999728920951327	WITHOUT_CLASSIFICATION	2.7107904867240595E-5	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999931273698015	WITHOUT_CLASSIFICATION	6.8726301984353035E-6	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9998421977155038	WITHOUT_CLASSIFICATION	1.5780228449634412E-4	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999965000035195	WITHOUT_CLASSIFICATION	3.499996480509717E-6	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999855044913063	WITHOUT_CLASSIFICATION	1.4495508693638168E-5	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9999620573127647	WITHOUT_CLASSIFICATION	3.7942687235342E-5	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999910927222663	WITHOUT_CLASSIFICATION	8.907277733758285E-6	DOCUMENTATION
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999848283709345	WITHOUT_CLASSIFICATION	1.5171629065544837E-5	DOCUMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999848283709345	WITHOUT_CLASSIFICATION	1.5171629065544837E-5	DOCUMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999686186475556	WITHOUT_CLASSIFICATION	3.1381352444388165E-5	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9999987537667364	WITHOUT_CLASSIFICATION	1.2462332636723835E-6	DOCUMENTATION
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999909692936317	WITHOUT_CLASSIFICATION	9.030706368218186E-6	DOCUMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9999941331386315	WITHOUT_CLASSIFICATION	5.8668613684805906E-6	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9999981065214304	WITHOUT_CLASSIFICATION	1.893478569575221E-6	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999886111968519	WITHOUT_CLASSIFICATION	1.1388803148100113E-5	DOCUMENTATION
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9997599032639206	WITHOUT_CLASSIFICATION	2.4009673607950204E-4	DOCUMENTATION
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999945537496908	WITHOUT_CLASSIFICATION	5.446250309246423E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.999984436173957	WITHOUT_CLASSIFICATION	1.5563826042918254E-5	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.999984436173957	WITHOUT_CLASSIFICATION	1.5563826042918254E-5	DOCUMENTATION
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999983093103062	WITHOUT_CLASSIFICATION	1.6906896937637776E-6	DOCUMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9997235183373889	WITHOUT_CLASSIFICATION	2.764816626110195E-4	DOCUMENTATION
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999963423540326	WITHOUT_CLASSIFICATION	3.657645967302867E-6	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999747797111088	WITHOUT_CLASSIFICATION	2.522028889121407E-5	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999816826162623	WITHOUT_CLASSIFICATION	1.831738373778676E-5	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999740665084514	WITHOUT_CLASSIFICATION	2.593349154857733E-5	DOCUMENTATION
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.999991722009035	WITHOUT_CLASSIFICATION	8.277990965105127E-6	DOCUMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999981579847108	WITHOUT_CLASSIFICATION	1.8420152892341987E-6	DOCUMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999786778373035	WITHOUT_CLASSIFICATION	2.1322162696437255E-5	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999761579118237	WITHOUT_CLASSIFICATION	2.384208817626231E-5	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.9999653950332373	WITHOUT_CLASSIFICATION	3.460496676272039E-5	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999653950332373	WITHOUT_CLASSIFICATION	3.460496676272039E-5	DOCUMENTATION
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999144503532	WITHOUT_CLASSIFICATION	8.554964684823004E-8	DOCUMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9998934270512985	WITHOUT_CLASSIFICATION	1.0657294870155027E-4	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999635599065397	WITHOUT_CLASSIFICATION	3.6440093460205385E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9995191180583032	WITHOUT_CLASSIFICATION	4.8088194169691734E-4	DOCUMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999943983579896	WITHOUT_CLASSIFICATION	5.601642010419955E-6	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999511292368095	WITHOUT_CLASSIFICATION	4.887076319041095E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942916749226	WITHOUT_CLASSIFICATION	5.7083250774012E-5	DOCUMENTATION
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.999983594987966	WITHOUT_CLASSIFICATION	1.640501203405817E-5	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999961382848754	WITHOUT_CLASSIFICATION	3.861715124550805E-6	DOCUMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999850563946479	WITHOUT_CLASSIFICATION	1.4943605352122056E-5	DOCUMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999625696416298	WITHOUT_CLASSIFICATION	3.743035837017983E-5	DOCUMENTATION
/*implied*/	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9999790232616831	WITHOUT_CLASSIFICATION	2.0976738316859368E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942916749226	WITHOUT_CLASSIFICATION	5.7083250774012E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942916749226	WITHOUT_CLASSIFICATION	5.7083250774012E-5	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999898938457978	WITHOUT_CLASSIFICATION	1.0106154202245089E-5	DOCUMENTATION
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.999995116844706	WITHOUT_CLASSIFICATION	4.88315529397115E-6	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9990836966095326	WITHOUT_CLASSIFICATION	9.163033904674586E-4	DOCUMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999949022177508	WITHOUT_CLASSIFICATION	5.097782249216509E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.999335351713351	WITHOUT_CLASSIFICATION	6.64648286648978E-4	DOCUMENTATION
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9989675342256593	WITHOUT_CLASSIFICATION	0.0010324657743406608	DOCUMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.9999991920173795	WITHOUT_CLASSIFICATION	8.079826203940791E-7	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9999993781881582	WITHOUT_CLASSIFICATION	6.218118417707475E-7	DOCUMENTATION
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9991653567330804	WITHOUT_CLASSIFICATION	8.34643266919607E-4	DOCUMENTATION
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999938235394142	WITHOUT_CLASSIFICATION	6.176460585689029E-6	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9993505937972927	WITHOUT_CLASSIFICATION	6.494062027072784E-4	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.999943852925913	WITHOUT_CLASSIFICATION	5.614707408704451E-5	DOCUMENTATION
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9998864752151702	WITHOUT_CLASSIFICATION	1.1352478482989054E-4	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999788602589423	WITHOUT_CLASSIFICATION	2.113974105769843E-5	DOCUMENTATION
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999751063985277	WITHOUT_CLASSIFICATION	2.48936014722885E-5	DOCUMENTATION
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999751934607228	WITHOUT_CLASSIFICATION	2.4806539277177116E-5	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9989071060171031	WITHOUT_CLASSIFICATION	0.0010928939828968502	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.999785934116935	WITHOUT_CLASSIFICATION	2.1406588306509015E-4	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999515262623249	WITHOUT_CLASSIFICATION	4.847373767516139E-5	DOCUMENTATION
//TODO:	WITHOUT_CLASSIFICATION	0.9967475038752546	WITHOUT_CLASSIFICATION	0.003252496124745414	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999882984898433	WITHOUT_CLASSIFICATION	1.1701510156743346E-5	DOCUMENTATION
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999942961278829	WITHOUT_CLASSIFICATION	5.7038721169914485E-6	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999832427777117	WITHOUT_CLASSIFICATION	1.6757222288354484E-5	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999527044996634	WITHOUT_CLASSIFICATION	4.7295500336570617E-5	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999748467547912	WITHOUT_CLASSIFICATION	2.5153245208747964E-5	DOCUMENTATION
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999822485915302	WITHOUT_CLASSIFICATION	1.7751408469885974E-5	DOCUMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999800290413833	WITHOUT_CLASSIFICATION	1.997095861677138E-5	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999948112916596	WITHOUT_CLASSIFICATION	5.188708340445054E-6	DOCUMENTATION
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999986454097344	WITHOUT_CLASSIFICATION	1.354590265640806E-6	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.999885438079822	WITHOUT_CLASSIFICATION	1.1456192017798107E-4	DOCUMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.999973961905326	WITHOUT_CLASSIFICATION	2.6038094674008735E-5	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999840436299116	WITHOUT_CLASSIFICATION	1.5956370088441986E-5	DOCUMENTATION
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9999426796957138	WITHOUT_CLASSIFICATION	5.732030428624119E-5	DOCUMENTATION
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9999906457014902	WITHOUT_CLASSIFICATION	9.354298509785745E-6	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999843021835467	WITHOUT_CLASSIFICATION	1.5697816453288975E-5	DOCUMENTATION
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999744387738243	WITHOUT_CLASSIFICATION	2.5561226175709012E-5	DOCUMENTATION
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999939507701845	WITHOUT_CLASSIFICATION	6.049229815558681E-6	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9999900304808587	WITHOUT_CLASSIFICATION	9.969519141318886E-6	DOCUMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9988099682072801	WITHOUT_CLASSIFICATION	0.0011900317927198989	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999841363281927	WITHOUT_CLASSIFICATION	1.5863671807375823E-5	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999931339307839	WITHOUT_CLASSIFICATION	6.866069216171902E-6	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9998751604434186	WITHOUT_CLASSIFICATION	1.248395565814286E-4	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999589945257226	WITHOUT_CLASSIFICATION	4.1005474277493334E-5	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9998751604434186	WITHOUT_CLASSIFICATION	1.248395565814286E-4	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999944131427096	WITHOUT_CLASSIFICATION	5.58685729029438E-6	DOCUMENTATION
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999929564080408	WITHOUT_CLASSIFICATION	7.043591959203436E-6	DOCUMENTATION
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9999422492879524	WITHOUT_CLASSIFICATION	5.775071204759838E-5	DOCUMENTATION
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999974214263421	WITHOUT_CLASSIFICATION	2.578573657842993E-6	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999751562780751	WITHOUT_CLASSIFICATION	2.4843721924996335E-5	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9999422492879524	WITHOUT_CLASSIFICATION	5.775071204759838E-5	DOCUMENTATION
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999958415839105	WITHOUT_CLASSIFICATION	4.158416089492638E-6	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999873385278197	WITHOUT_CLASSIFICATION	1.2661472180269678E-5	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999863555827089	WITHOUT_CLASSIFICATION	1.3644417291066595E-5	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999853509338923	WITHOUT_CLASSIFICATION	1.4649066107766415E-5	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999910182466678	WITHOUT_CLASSIFICATION	8.98175333217927E-6	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999902430014918	WITHOUT_CLASSIFICATION	9.756998508178915E-6	DOCUMENTATION
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999963156050666	WITHOUT_CLASSIFICATION	3.68439493336709E-6	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9999993403239851	WITHOUT_CLASSIFICATION	6.596760149570038E-7	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.999987133082763	WITHOUT_CLASSIFICATION	1.2866917237051332E-5	DOCUMENTATION
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999966322514673	WITHOUT_CLASSIFICATION	3.3677485327279675E-6	DOCUMENTATION
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999916887623712	WITHOUT_CLASSIFICATION	8.311237628775058E-6	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999918401863334	WITHOUT_CLASSIFICATION	8.159813666604963E-6	DOCUMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999999129489441	WITHOUT_CLASSIFICATION	8.705105599699832E-8	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9998557437304773	WITHOUT_CLASSIFICATION	1.4425626952278874E-4	DOCUMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999942695854586	WITHOUT_CLASSIFICATION	5.730414541441006E-6	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9989272834006067	WITHOUT_CLASSIFICATION	0.0010727165993933657	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999921855487379	WITHOUT_CLASSIFICATION	7.814451262081737E-6	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999983696908046	WITHOUT_CLASSIFICATION	1.6303091954636638E-6	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999437681004625	WITHOUT_CLASSIFICATION	5.623189953758963E-5	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9997570364884253	WITHOUT_CLASSIFICATION	2.4296351157458094E-4	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9992940662994696	WITHOUT_CLASSIFICATION	7.059337005303573E-4	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9994181798260298	WITHOUT_CLASSIFICATION	5.818201739702616E-4	DOCUMENTATION
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9995611975777217	WITHOUT_CLASSIFICATION	4.388024222783338E-4	DOCUMENTATION
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9997530798517852	WITHOUT_CLASSIFICATION	2.4692014821475994E-4	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9973944501675021	WITHOUT_CLASSIFICATION	0.0026055498324980128	DOCUMENTATION
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999988668918708	WITHOUT_CLASSIFICATION	1.1331081292091464E-6	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9999631978742288	WITHOUT_CLASSIFICATION	3.680212577123918E-5	DOCUMENTATION
//if its "id"	WITHOUT_CLASSIFICATION	0.9996060370502331	WITHOUT_CLASSIFICATION	3.93962949766814E-4	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9998073583147301	WITHOUT_CLASSIFICATION	1.926416852698503E-4	DOCUMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9995611975777217	WITHOUT_CLASSIFICATION	4.388024222783338E-4	DOCUMENTATION
//important!!	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9995611975777217	WITHOUT_CLASSIFICATION	4.388024222783338E-4	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999774717250764	WITHOUT_CLASSIFICATION	2.2528274923504404E-5	DOCUMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999076798168351	WITHOUT_CLASSIFICATION	9.232018316481812E-5	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9997570364884253	WITHOUT_CLASSIFICATION	2.4296351157458094E-4	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// collections of values	WITHOUT_CLASSIFICATION	0.9999754039034502	WITHOUT_CLASSIFICATION	2.4596096549859653E-5	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9987466450020045	WITHOUT_CLASSIFICATION	0.0012533549979954304	DOCUMENTATION
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9996834916802395	WITHOUT_CLASSIFICATION	3.165083197605281E-4	DOCUMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9994957568177963	WITHOUT_CLASSIFICATION	5.042431822036145E-4	DOCUMENTATION
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999960793836031	WITHOUT_CLASSIFICATION	3.920616396882173E-6	DOCUMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.999883429333966	WITHOUT_CLASSIFICATION	1.1657066603394747E-4	DOCUMENTATION
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999823153582815	WITHOUT_CLASSIFICATION	1.7684641718373798E-5	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999436498371754	WITHOUT_CLASSIFICATION	5.635016282464174E-5	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999620299013684	WITHOUT_CLASSIFICATION	3.797009863155409E-5	DOCUMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9993015847064283	WITHOUT_CLASSIFICATION	6.984152935716573E-4	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999874342250004	WITHOUT_CLASSIFICATION	1.2565774999591472E-5	DOCUMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9989071060171031	WITHOUT_CLASSIFICATION	0.0010928939828968502	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9983576783798557	WITHOUT_CLASSIFICATION	0.0016423216201442868	DOCUMENTATION
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999844985182061	WITHOUT_CLASSIFICATION	1.550148179383413E-5	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9993285228997837	WITHOUT_CLASSIFICATION	6.714771002163709E-4	DOCUMENTATION
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999206198210544	WITHOUT_CLASSIFICATION	7.938017894553016E-5	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999995893645325	WITHOUT_CLASSIFICATION	4.1063546746811694E-7	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9989071060171031	WITHOUT_CLASSIFICATION	0.0010928939828968502	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999791135456396	WITHOUT_CLASSIFICATION	2.0886454360379435E-5	DOCUMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9998930118535007	WITHOUT_CLASSIFICATION	1.0698814649940996E-4	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999974273615683	WITHOUT_CLASSIFICATION	2.57263843167822E-6	DOCUMENTATION
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9999882522608526	WITHOUT_CLASSIFICATION	1.1747739147377446E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999819958927525	WITHOUT_CLASSIFICATION	1.800410724749523E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999819958927525	WITHOUT_CLASSIFICATION	1.800410724749523E-5	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999841648338994	WITHOUT_CLASSIFICATION	1.583516610057223E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999819958927525	WITHOUT_CLASSIFICATION	1.800410724749523E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999819958927525	WITHOUT_CLASSIFICATION	1.800410724749523E-5	DOCUMENTATION
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9995144782672898	WITHOUT_CLASSIFICATION	4.8552173271023584E-4	DOCUMENTATION
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9998531491850867	WITHOUT_CLASSIFICATION	1.4685081491320651E-4	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999431636704862	WITHOUT_CLASSIFICATION	5.6836329513881536E-5	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999431636704862	WITHOUT_CLASSIFICATION	5.6836329513881536E-5	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999899224403689	WITHOUT_CLASSIFICATION	1.0077559631156614E-5	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.999999711963669	WITHOUT_CLASSIFICATION	2.8803633106296616E-7	DOCUMENTATION
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9998661554249803	WITHOUT_CLASSIFICATION	1.3384457501965254E-4	DOCUMENTATION
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999857592966871	WITHOUT_CLASSIFICATION	1.4240703312812758E-5	DOCUMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.999906026599865	WITHOUT_CLASSIFICATION	9.397340013494833E-5	DOCUMENTATION
//Cope with [,]	WITHOUT_CLASSIFICATION	0.999621190437414	WITHOUT_CLASSIFICATION	3.7880956258604293E-4	DOCUMENTATION
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9999220627009552	WITHOUT_CLASSIFICATION	7.793729904480794E-5	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9995118455842936	WITHOUT_CLASSIFICATION	4.8815441570632464E-4	DOCUMENTATION
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999239695614016	WITHOUT_CLASSIFICATION	7.603043859836953E-5	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.9995984152365889	WITHOUT_CLASSIFICATION	4.0158476341115013E-4	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9959597677729735	WITHOUT_CLASSIFICATION	0.004040232227026502	DOCUMENTATION
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9997100274519412	WITHOUT_CLASSIFICATION	2.8997254805886575E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.999951221572163	WITHOUT_CLASSIFICATION	4.877842783699467E-5	DOCUMENTATION
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9999382744986465	WITHOUT_CLASSIFICATION	6.172550135349151E-5	DOCUMENTATION
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9962165619141399	WITHOUT_CLASSIFICATION	0.003783438085860002	DOCUMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.999604525378603	WITHOUT_CLASSIFICATION	3.954746213970323E-4	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999924797104641	WITHOUT_CLASSIFICATION	7.520289535843843E-6	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.9999068031355304	WITHOUT_CLASSIFICATION	9.319686446966165E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.999951221572163	WITHOUT_CLASSIFICATION	4.877842783699467E-5	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9992940662994696	WITHOUT_CLASSIFICATION	7.059337005303573E-4	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9993728018040774	WITHOUT_CLASSIFICATION	6.271981959225866E-4	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.999985418280996	WITHOUT_CLASSIFICATION	1.4581719004008102E-5	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999817506456099	WITHOUT_CLASSIFICATION	1.8249354390152726E-5	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9994665036537284	WITHOUT_CLASSIFICATION	5.33496346271535E-4	DOCUMENTATION
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999968100280715	WITHOUT_CLASSIFICATION	3.1899719284511308E-6	DOCUMENTATION
// careful with this!	WITHOUT_CLASSIFICATION	0.9999748239804611	WITHOUT_CLASSIFICATION	2.5176019538846257E-5	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999895484963441	WITHOUT_CLASSIFICATION	1.045150365582457E-5	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999845772701573	WITHOUT_CLASSIFICATION	1.5422729842724067E-5	DOCUMENTATION
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9986161506047146	WITHOUT_CLASSIFICATION	0.0013838493952853983	DOCUMENTATION
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9994212954550739	WITHOUT_CLASSIFICATION	5.78704544926123E-4	DOCUMENTATION
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999688342200767	WITHOUT_CLASSIFICATION	3.116577992323915E-5	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999966565868631	WITHOUT_CLASSIFICATION	3.343413136918459E-6	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999821521304721	WITHOUT_CLASSIFICATION	1.7847869527796222E-5	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9999828195289167	WITHOUT_CLASSIFICATION	1.7180471083350796E-5	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.9999706750640444	WITHOUT_CLASSIFICATION	2.9324935955608385E-5	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999957087280379	WITHOUT_CLASSIFICATION	4.291271962085416E-6	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999982397245092	WITHOUT_CLASSIFICATION	1.7602754907753724E-6	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999983275375733	WITHOUT_CLASSIFICATION	1.6724624266803023E-6	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999959482353141	WITHOUT_CLASSIFICATION	4.051764685912786E-6	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9996469038831242	WITHOUT_CLASSIFICATION	3.530961168758602E-4	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9992692086028897	WITHOUT_CLASSIFICATION	7.307913971103006E-4	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999987621646703	WITHOUT_CLASSIFICATION	1.2378353297212689E-6	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999845772701573	WITHOUT_CLASSIFICATION	1.5422729842724067E-5	DOCUMENTATION
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9994100587439811	WITHOUT_CLASSIFICATION	5.89941256018878E-4	DOCUMENTATION
//do replacements	WITHOUT_CLASSIFICATION	0.9994181172444397	WITHOUT_CLASSIFICATION	5.818827555603521E-4	DOCUMENTATION
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9988796893186955	WITHOUT_CLASSIFICATION	0.0011203106813044827	DOCUMENTATION
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999580681299146	WITHOUT_CLASSIFICATION	4.1931870085469604E-5	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942710560714	WITHOUT_CLASSIFICATION	5.728943928599667E-5	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.9994066262904908	WITHOUT_CLASSIFICATION	5.933737095092179E-4	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.99976163879153	WITHOUT_CLASSIFICATION	2.3836120847004605E-4	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999689184587796	WITHOUT_CLASSIFICATION	3.108154122038738E-5	DOCUMENTATION
//sql = update;	WITHOUT_CLASSIFICATION	0.99976163879153	WITHOUT_CLASSIFICATION	2.3836120847004605E-4	DOCUMENTATION
//hilo config	WITHOUT_CLASSIFICATION	0.9994142807588478	WITHOUT_CLASSIFICATION	5.857192411522558E-4	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999024144406296	WITHOUT_CLASSIFICATION	9.758555937049196E-5	DOCUMENTATION
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999953560151122	WITHOUT_CLASSIFICATION	4.643984887827272E-6	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999694626427164	WITHOUT_CLASSIFICATION	3.0537357283627416E-5	DOCUMENTATION
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9983769515441406	WITHOUT_CLASSIFICATION	0.001623048455859382	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998924913826407	WITHOUT_CLASSIFICATION	1.0750861735922826E-4	DOCUMENTATION
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999221949868485	WITHOUT_CLASSIFICATION	7.780501315151225E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9995742411609622	WITHOUT_CLASSIFICATION	4.2575883903781805E-4	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999024144406296	WITHOUT_CLASSIFICATION	9.758555937049196E-5	DOCUMENTATION
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999725302087715	WITHOUT_CLASSIFICATION	2.7469791228440193E-5	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9999979374850634	WITHOUT_CLASSIFICATION	2.0625149365894563E-6	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999679597560497	WITHOUT_CLASSIFICATION	3.204024395035628E-5	DOCUMENTATION
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999935685309861	WITHOUT_CLASSIFICATION	6.431469013981549E-6	DOCUMENTATION
// the default...	WITHOUT_CLASSIFICATION	0.9999875229435993	WITHOUT_CLASSIFICATION	1.2477056400742774E-5	DOCUMENTATION
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999998889322056	WITHOUT_CLASSIFICATION	1.1106779443552123E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998924913826407	WITHOUT_CLASSIFICATION	1.0750861735922826E-4	DOCUMENTATION
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999921888508524	WITHOUT_CLASSIFICATION	7.811149147583408E-6	DOCUMENTATION
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998340771128437	WITHOUT_CLASSIFICATION	1.6592288715635626E-4	DOCUMENTATION
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999445306260356	WITHOUT_CLASSIFICATION	5.54693739644166E-5	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999950109915728	WITHOUT_CLASSIFICATION	4.989008427200409E-5	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999950109915728	WITHOUT_CLASSIFICATION	4.989008427200409E-5	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999950109915728	WITHOUT_CLASSIFICATION	4.989008427200409E-5	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999920562643382	WITHOUT_CLASSIFICATION	7.943735661769312E-6	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999920562643382	WITHOUT_CLASSIFICATION	7.943735661769312E-6	DOCUMENTATION
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9998573323730485	WITHOUT_CLASSIFICATION	1.4266762695150235E-4	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999793643251801	WITHOUT_CLASSIFICATION	2.063567481983495E-5	DOCUMENTATION
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999689345767993	WITHOUT_CLASSIFICATION	3.106542320078E-5	DOCUMENTATION
// scroll backward	WITHOUT_CLASSIFICATION	0.999969026834691	WITHOUT_CLASSIFICATION	3.0973165308973924E-5	DOCUMENTATION
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.9999709217670957	WITHOUT_CLASSIFICATION	2.9078232904334624E-5	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999428990422053	WITHOUT_CLASSIFICATION	5.710095779464339E-5	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999947848402517	WITHOUT_CLASSIFICATION	5.2151597482972646E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942710560714	WITHOUT_CLASSIFICATION	5.728943928599667E-5	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.999999644759212	WITHOUT_CLASSIFICATION	3.552407880033133E-7	DOCUMENTATION
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999559105666362	WITHOUT_CLASSIFICATION	4.408943336381528E-5	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999428990422053	WITHOUT_CLASSIFICATION	5.710095779464339E-5	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999947848402517	WITHOUT_CLASSIFICATION	5.2151597482972646E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942710560714	WITHOUT_CLASSIFICATION	5.728943928599667E-5	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.999973518547177	WITHOUT_CLASSIFICATION	2.6481452823052424E-5	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9998828879856679	WITHOUT_CLASSIFICATION	1.17112014332111E-4	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999653422608232	WITHOUT_CLASSIFICATION	3.465773917675164E-5	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.999999726870156	WITHOUT_CLASSIFICATION	2.7312984403657126E-7	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9993821644635216	WITHOUT_CLASSIFICATION	6.178355364785174E-4	DOCUMENTATION
//checking for named queries	WITHOUT_CLASSIFICATION	0.9992443774284271	WITHOUT_CLASSIFICATION	7.556225715728602E-4	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9955572575942645	WITHOUT_CLASSIFICATION	0.004442742405735451	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.999960506089685	WITHOUT_CLASSIFICATION	3.949391031488709E-5	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999688306555973	WITHOUT_CLASSIFICATION	3.116934440282122E-5	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999845513536436	WITHOUT_CLASSIFICATION	1.5448646356338493E-5	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9995904909518843	WITHOUT_CLASSIFICATION	4.0950904811564825E-4	DOCUMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999814609918831	WITHOUT_CLASSIFICATION	1.8539008116806807E-5	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999874072569168	WITHOUT_CLASSIFICATION	1.2592743083278958E-5	DOCUMENTATION
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9998861235810714	WITHOUT_CLASSIFICATION	1.1387641892861781E-4	DOCUMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9971587136222951	WITHOUT_CLASSIFICATION	0.002841286377704818	DOCUMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999558131967665	WITHOUT_CLASSIFICATION	4.4186803233490144E-5	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.999939872484956	WITHOUT_CLASSIFICATION	6.0127515043915125E-5	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9998340865850558	WITHOUT_CLASSIFICATION	1.6591341494412115E-4	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999921294826191	WITHOUT_CLASSIFICATION	7.870517380903312E-6	DOCUMENTATION
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9935668580640636	WITHOUT_CLASSIFICATION	0.0064331419359363266	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999945762349842	WITHOUT_CLASSIFICATION	5.423765015765717E-6	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999976181497855	WITHOUT_CLASSIFICATION	2.38185021448154E-6	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9988460915645845	WITHOUT_CLASSIFICATION	0.0011539084354154933	DOCUMENTATION
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.999634692442625	WITHOUT_CLASSIFICATION	3.6530755737503056E-4	DOCUMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999429220340819	WITHOUT_CLASSIFICATION	5.707796591807E-5	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999436013331953	WITHOUT_CLASSIFICATION	5.639866680478177E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9989705612744516	WITHOUT_CLASSIFICATION	0.0010294387255483355	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9989705612744516	WITHOUT_CLASSIFICATION	0.0010294387255483355	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999963870958393	WITHOUT_CLASSIFICATION	3.612904160782151E-6	DOCUMENTATION
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999998280014741	WITHOUT_CLASSIFICATION	1.7199852581490533E-7	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999773519598055	WITHOUT_CLASSIFICATION	2.26480401945315E-5	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9989071060171031	WITHOUT_CLASSIFICATION	0.0010928939828968502	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999167907629058	WITHOUT_CLASSIFICATION	8.320923709408079E-5	DOCUMENTATION
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9994958941132001	WITHOUT_CLASSIFICATION	5.041058867999964E-4	DOCUMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9957552384475002	WITHOUT_CLASSIFICATION	0.0042447615524996655	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999922092189731	WITHOUT_CLASSIFICATION	7.790781026859359E-6	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999859916132811	WITHOUT_CLASSIFICATION	1.400838671900018E-5	DOCUMENTATION
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999432873791867	WITHOUT_CLASSIFICATION	5.671262081321625E-5	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999432873791867	WITHOUT_CLASSIFICATION	5.671262081321625E-5	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999432873791867	WITHOUT_CLASSIFICATION	5.671262081321625E-5	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999432873791867	WITHOUT_CLASSIFICATION	5.671262081321625E-5	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999432873791867	WITHOUT_CLASSIFICATION	5.671262081321625E-5	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999432873791867	WITHOUT_CLASSIFICATION	5.671262081321625E-5	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999432873791867	WITHOUT_CLASSIFICATION	5.671262081321625E-5	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999432873791867	WITHOUT_CLASSIFICATION	5.671262081321625E-5	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999432873791867	WITHOUT_CLASSIFICATION	5.671262081321625E-5	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999432873791867	WITHOUT_CLASSIFICATION	5.671262081321625E-5	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999432873791867	WITHOUT_CLASSIFICATION	5.671262081321625E-5	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999960819043873	WITHOUT_CLASSIFICATION	3.918095612714252E-6	DOCUMENTATION
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9998374546758007	WITHOUT_CLASSIFICATION	1.6254532419931957E-4	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9998090404787886	WITHOUT_CLASSIFICATION	1.9095952121133875E-4	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999215908882949	WITHOUT_CLASSIFICATION	7.840911170514729E-5	DOCUMENTATION
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999775026781713	WITHOUT_CLASSIFICATION	2.2497321828686156E-5	DOCUMENTATION
// not for internal use:	WITHOUT_CLASSIFICATION	0.9999756349607554	WITHOUT_CLASSIFICATION	2.4365039244661382E-5	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9998899444401156	WITHOUT_CLASSIFICATION	1.1005555988437765E-4	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9999951182333016	WITHOUT_CLASSIFICATION	4.881766698480752E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9998090404787886	WITHOUT_CLASSIFICATION	1.9095952121133875E-4	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9998090404787886	WITHOUT_CLASSIFICATION	1.9095952121133875E-4	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9992381035443174	WITHOUT_CLASSIFICATION	7.618964556825918E-4	DOCUMENTATION
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999951417957147	WITHOUT_CLASSIFICATION	4.8582042853276685E-6	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999986771886331	WITHOUT_CLASSIFICATION	1.3228113669340169E-6	DOCUMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999931250397908	WITHOUT_CLASSIFICATION	6.8749602092363055E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9997830555512219	WITHOUT_CLASSIFICATION	2.1694444877819638E-4	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.999939872484956	WITHOUT_CLASSIFICATION	6.0127515043915125E-5	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9991747175609884	WITHOUT_CLASSIFICATION	8.252824390116715E-4	DOCUMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999841717690107	WITHOUT_CLASSIFICATION	1.582823098930439E-5	DOCUMENTATION
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999611980860142	WITHOUT_CLASSIFICATION	3.880191398566137E-5	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999582737470316	WITHOUT_CLASSIFICATION	4.172625296832031E-5	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999983716272912	WITHOUT_CLASSIFICATION	1.6283727087995026E-6	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999474150197104	WITHOUT_CLASSIFICATION	5.2584980289544705E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999771910089071	WITHOUT_CLASSIFICATION	2.2808991092809705E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999771910089071	WITHOUT_CLASSIFICATION	2.2808991092809705E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999771910089071	WITHOUT_CLASSIFICATION	2.2808991092809705E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999771910089071	WITHOUT_CLASSIFICATION	2.2808991092809705E-5	DOCUMENTATION
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942710560714	WITHOUT_CLASSIFICATION	5.728943928599667E-5	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999442564774951	WITHOUT_CLASSIFICATION	5.5743522504996685E-5	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9990477599365922	WITHOUT_CLASSIFICATION	9.522400634077708E-4	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942710560714	WITHOUT_CLASSIFICATION	5.728943928599667E-5	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9999578227811928	WITHOUT_CLASSIFICATION	4.217721880710552E-5	DOCUMENTATION
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9999663993102222	WITHOUT_CLASSIFICATION	3.3600689777780064E-5	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999427233173577	WITHOUT_CLASSIFICATION	5.7276682642408765E-5	DOCUMENTATION
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999453225567464	WITHOUT_CLASSIFICATION	5.46774432535711E-5	DOCUMENTATION
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9999259342251194	WITHOUT_CLASSIFICATION	7.406577488061367E-5	DOCUMENTATION
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999854454391115	WITHOUT_CLASSIFICATION	1.4554560888574758E-5	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9991601149988607	WITHOUT_CLASSIFICATION	8.398850011392262E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999462452171467	WITHOUT_CLASSIFICATION	5.3754782853418776E-5	DOCUMENTATION
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.99986280336466	WITHOUT_CLASSIFICATION	1.3719663533990703E-4	DOCUMENTATION
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999611969900057	WITHOUT_CLASSIFICATION	3.8803009994191754E-5	DOCUMENTATION
//no big deal	WITHOUT_CLASSIFICATION	0.9994632493383396	WITHOUT_CLASSIFICATION	5.367506616603437E-4	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999599924114785	WITHOUT_CLASSIFICATION	4.000758852152534E-5	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999599924114785	WITHOUT_CLASSIFICATION	4.000758852152534E-5	DOCUMENTATION
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999355969182436	WITHOUT_CLASSIFICATION	6.440308175633633E-5	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.9997548733790876	WITHOUT_CLASSIFICATION	2.4512662091234413E-4	DOCUMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9995040855619245	WITHOUT_CLASSIFICATION	4.95914438075417E-4	DOCUMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942710560714	WITHOUT_CLASSIFICATION	5.728943928599667E-5	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999942710560714	WITHOUT_CLASSIFICATION	5.728943928599667E-5	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.9999404282841177	WITHOUT_CLASSIFICATION	5.95717158823409E-5	DOCUMENTATION
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999950109915728	WITHOUT_CLASSIFICATION	4.989008427200409E-5	DOCUMENTATION
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9999859756337963	WITHOUT_CLASSIFICATION	1.4024366203715037E-5	DOCUMENTATION
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999645165847084	WITHOUT_CLASSIFICATION	3.548341529165046E-5	DOCUMENTATION
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9999893474484761	WITHOUT_CLASSIFICATION	1.0652551523795335E-5	DOCUMENTATION
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999266499029867	WITHOUT_CLASSIFICATION	7.335009701327161E-5	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9998857281619515	WITHOUT_CLASSIFICATION	1.142718380485519E-4	DOCUMENTATION
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999590706294458	WITHOUT_CLASSIFICATION	4.092937055422115E-5	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9999780621793597	WITHOUT_CLASSIFICATION	2.1937820640406514E-5	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999449644955266	WITHOUT_CLASSIFICATION	5.503550447343916E-5	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999794072534556	WITHOUT_CLASSIFICATION	2.059274654444968E-5	DOCUMENTATION
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999806264094655	WITHOUT_CLASSIFICATION	1.9373590534513002E-5	DOCUMENTATION
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999894747801507	WITHOUT_CLASSIFICATION	1.0525219849364391E-5	DOCUMENTATION
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999914689155462	WITHOUT_CLASSIFICATION	8.531084453800383E-6	DOCUMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9998447430752886	WITHOUT_CLASSIFICATION	1.552569247113887E-4	DOCUMENTATION
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999133977618889	WITHOUT_CLASSIFICATION	8.660223811107107E-5	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999771853664227	WITHOUT_CLASSIFICATION	2.281463357742749E-5	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.999989841213001	WITHOUT_CLASSIFICATION	1.0158786999009416E-5	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.999974579578076	WITHOUT_CLASSIFICATION	2.5420421923985313E-5	DOCUMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.999961269551525	WITHOUT_CLASSIFICATION	3.873044847496355E-5	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9992899294488327	WITHOUT_CLASSIFICATION	7.100705511674706E-4	DOCUMENTATION
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999923126392921	WITHOUT_CLASSIFICATION	7.68736070783245E-6	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9997781954766798	WITHOUT_CLASSIFICATION	2.2180452332019721E-4	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999962034796183	WITHOUT_CLASSIFICATION	3.796520381719433E-6	DOCUMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9998044378469239	WITHOUT_CLASSIFICATION	1.95562153076168E-4	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9968778869173316	WITHOUT_CLASSIFICATION	0.003122113082668464	DOCUMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9999788768940229	WITHOUT_CLASSIFICATION	2.1123105977142437E-5	DOCUMENTATION
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.997004916070471	WITHOUT_CLASSIFICATION	0.002995083929528877	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999998213757932	WITHOUT_CLASSIFICATION	1.7862420664285156E-7	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.9999626050933826	WITHOUT_CLASSIFICATION	3.739490661728169E-5	DOCUMENTATION
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9996829737503756	WITHOUT_CLASSIFICATION	3.170262496244284E-4	DOCUMENTATION
//handle empty collections	WITHOUT_CLASSIFICATION	0.9993823837606368	WITHOUT_CLASSIFICATION	6.176162393630887E-4	DOCUMENTATION
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999990925458975	WITHOUT_CLASSIFICATION	9.074541024620897E-7	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9999605915131387	WITHOUT_CLASSIFICATION	3.9408486861373665E-5	DOCUMENTATION
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9999993783659247	WITHOUT_CLASSIFICATION	6.21634075310642E-7	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999925394654866	WITHOUT_CLASSIFICATION	7.460534513421731E-6	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9993642766761716	WITHOUT_CLASSIFICATION	6.357233238283955E-4	DOCUMENTATION
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9987773951271449	WITHOUT_CLASSIFICATION	0.0012226048728551041	DOCUMENTATION
//use the id passed in	WITHOUT_CLASSIFICATION	0.9992876764786288	WITHOUT_CLASSIFICATION	7.123235213711293E-4	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.999572803166979	WITHOUT_CLASSIFICATION	4.271968330209609E-4	DOCUMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999589521203909	WITHOUT_CLASSIFICATION	4.104787960900821E-5	DOCUMENTATION
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9997379072222882	WITHOUT_CLASSIFICATION	2.6209277771190004E-4	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9996085942286994	WITHOUT_CLASSIFICATION	3.9140577130055E-4	DOCUMENTATION
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9991460810045114	WITHOUT_CLASSIFICATION	8.539189954886432E-4	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9999750146196975	WITHOUT_CLASSIFICATION	2.498538030244835E-5	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9995800657522417	WITHOUT_CLASSIFICATION	4.199342477582963E-4	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9983852293642197	WITHOUT_CLASSIFICATION	0.0016147706357802333	DOCUMENTATION
// look for a proxy	WITHOUT_CLASSIFICATION	0.9999947045335145	WITHOUT_CLASSIFICATION	5.295466485481012E-6	DOCUMENTATION
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9987986952812685	WITHOUT_CLASSIFICATION	0.0012013047187314867	DOCUMENTATION
//its the given optional object	WITHOUT_CLASSIFICATION	0.9992328727545428	WITHOUT_CLASSIFICATION	7.671272454573794E-4	DOCUMENTATION
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999962129322709	WITHOUT_CLASSIFICATION	3.787067729001928E-6	DOCUMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9995912514732884	WITHOUT_CLASSIFICATION	4.0874852671153345E-4	DOCUMENTATION
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999932316023529	WITHOUT_CLASSIFICATION	6.768397647133946E-6	DOCUMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999511651982658	WITHOUT_CLASSIFICATION	4.8834801734209377E-5	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999265665239	WITHOUT_CLASSIFICATION	7.343347612317255E-8	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9993011570074831	WITHOUT_CLASSIFICATION	6.988429925169941E-4	DOCUMENTATION
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999787272603639	WITHOUT_CLASSIFICATION	2.1272739636152467E-5	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9999681558440119	WITHOUT_CLASSIFICATION	3.184415598805226E-5	DOCUMENTATION
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999992566210066	WITHOUT_CLASSIFICATION	7.433789933477216E-7	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9989071060171031	WITHOUT_CLASSIFICATION	0.0010928939828968502	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9979443993372058	WITHOUT_CLASSIFICATION	0.0020556006627942104	DOCUMENTATION
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9999338188398913	WITHOUT_CLASSIFICATION	6.618116010870133E-5	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.999974783047081	WITHOUT_CLASSIFICATION	2.5216952918976207E-5	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9960593641093355	WITHOUT_CLASSIFICATION	0.003940635890664416	DOCUMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999789295823369	WITHOUT_CLASSIFICATION	2.1070417663058323E-5	DOCUMENTATION
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9999783581158372	WITHOUT_CLASSIFICATION	2.1641884162813796E-5	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999951936667594	WITHOUT_CLASSIFICATION	4.806333240650562E-6	DOCUMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999994951079327	WITHOUT_CLASSIFICATION	5.048920672195059E-7	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9996218858267623	WITHOUT_CLASSIFICATION	3.7811417323784744E-4	DOCUMENTATION
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999996489330918	WITHOUT_CLASSIFICATION	3.510669082336207E-7	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9997256971380868	WITHOUT_CLASSIFICATION	2.7430286191317606E-4	DOCUMENTATION
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9999288553024523	WITHOUT_CLASSIFICATION	7.114469754760902E-5	DOCUMENTATION
//a composite key	WITHOUT_CLASSIFICATION	0.9993784837011588	WITHOUT_CLASSIFICATION	6.215162988411541E-4	DOCUMENTATION
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999987574062453	WITHOUT_CLASSIFICATION	1.2425937546143492E-6	DOCUMENTATION
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999727543147167	WITHOUT_CLASSIFICATION	2.7245685283377767E-5	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.9999447303168676	WITHOUT_CLASSIFICATION	5.526968313231926E-5	DOCUMENTATION
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9989272834006067	WITHOUT_CLASSIFICATION	0.0010727165993933657	DOCUMENTATION
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9999769973437239	WITHOUT_CLASSIFICATION	2.3002656276047982E-5	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9999998175570042	WITHOUT_CLASSIFICATION	1.8244299577337472E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9999750543887043	WITHOUT_CLASSIFICATION	2.4945611295689787E-5	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999341807522246	WITHOUT_CLASSIFICATION	6.581924777535693E-5	DOCUMENTATION
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.999830386306423	WITHOUT_CLASSIFICATION	1.6961369357713292E-4	DOCUMENTATION
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9998492237727711	WITHOUT_CLASSIFICATION	1.5077622722887296E-4	DOCUMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9998062581983532	WITHOUT_CLASSIFICATION	1.937418016468312E-4	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9998212848733175	WITHOUT_CLASSIFICATION	1.787151266824822E-4	DOCUMENTATION
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9992484547325609	WITHOUT_CLASSIFICATION	7.515452674390526E-4	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9991658796001809	WITHOUT_CLASSIFICATION	8.341203998191162E-4	DOCUMENTATION
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9998779391092993	WITHOUT_CLASSIFICATION	1.2206089070073546E-4	DOCUMENTATION
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999993614635553	WITHOUT_CLASSIFICATION	6.385364447443177E-7	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.999990046371585	WITHOUT_CLASSIFICATION	9.953628415089191E-6	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999749070885644	WITHOUT_CLASSIFICATION	2.5092911435595684E-5	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9999605218086378	WITHOUT_CLASSIFICATION	3.947819136218633E-5	DOCUMENTATION
//the criteria instance	WITHOUT_CLASSIFICATION	0.9993567945038205	WITHOUT_CLASSIFICATION	6.432054961794389E-4	DOCUMENTATION
// the entity name	WITHOUT_CLASSIFICATION	0.9999903784323173	WITHOUT_CLASSIFICATION	9.621567682647828E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9990197984085133	WITHOUT_CLASSIFICATION	9.802015914867348E-4	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9990197984085133	WITHOUT_CLASSIFICATION	9.802015914867348E-4	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999309155879826	WITHOUT_CLASSIFICATION	6.908441201732705E-5	DOCUMENTATION
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9993354801414609	WITHOUT_CLASSIFICATION	6.645198585391751E-4	DOCUMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999427105268905	WITHOUT_CLASSIFICATION	5.728947310944869E-5	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999123044575793	WITHOUT_CLASSIFICATION	8.769554242068398E-5	DOCUMENTATION
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999523438961349	WITHOUT_CLASSIFICATION	4.765610386516174E-5	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999602376298263	WITHOUT_CLASSIFICATION	3.976237017363393E-5	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9998853250819372	WITHOUT_CLASSIFICATION	1.1467491806272796E-4	DOCUMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9999890203109869	WITHOUT_CLASSIFICATION	1.0979689013018464E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9998001106727461	WITHOUT_CLASSIFICATION	1.9988932725399639E-4	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999935267539273	WITHOUT_CLASSIFICATION	6.473246072706104E-6	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999920612218406	WITHOUT_CLASSIFICATION	7.938778159520001E-6	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9999723381339779	WITHOUT_CLASSIFICATION	2.7661866022116654E-5	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999639684657512	WITHOUT_CLASSIFICATION	3.603153424878648E-5	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999819413165091	WITHOUT_CLASSIFICATION	1.8058683490887794E-5	DOCUMENTATION
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999952658114691	WITHOUT_CLASSIFICATION	4.734188530903851E-6	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9997751652468849	WITHOUT_CLASSIFICATION	2.2483475311502445E-4	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9997751652468849	WITHOUT_CLASSIFICATION	2.2483475311502445E-4	DOCUMENTATION
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999968981112861	WITHOUT_CLASSIFICATION	3.101888713996991E-6	DOCUMENTATION
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999947559540269	WITHOUT_CLASSIFICATION	5.244045973064069E-6	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999814897877516	WITHOUT_CLASSIFICATION	1.8510212248453453E-5	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999794697309862	WITHOUT_CLASSIFICATION	2.0530269013864195E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999859307440718	WITHOUT_CLASSIFICATION	1.4069255928157668E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.999968332483239	WITHOUT_CLASSIFICATION	3.1667516761009215E-5	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.999968332483239	WITHOUT_CLASSIFICATION	3.1667516761009215E-5	DOCUMENTATION
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999679777988183	WITHOUT_CLASSIFICATION	3.202220118173119E-5	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999997417793188	WITHOUT_CLASSIFICATION	2.5822068120830655E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999518066784773	WITHOUT_CLASSIFICATION	4.819332152277449E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999998711957013	WITHOUT_CLASSIFICATION	1.288042985905695E-7	DOCUMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9999467763479535	WITHOUT_CLASSIFICATION	5.322365204654801E-5	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999929822785364	WITHOUT_CLASSIFICATION	7.0177214636487665E-6	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999797689637017	WITHOUT_CLASSIFICATION	2.0231036298358206E-5	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999912493140576	WITHOUT_CLASSIFICATION	8.750685942385885E-6	DOCUMENTATION
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.999936525486254	WITHOUT_CLASSIFICATION	6.347451374593433E-5	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999994480731179	WITHOUT_CLASSIFICATION	5.519268821364537E-7	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.999996874261932	WITHOUT_CLASSIFICATION	3.125738068034207E-6	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999950892212729	WITHOUT_CLASSIFICATION	4.9107787271020345E-6	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.9999945938004241	WITHOUT_CLASSIFICATION	5.406199575910943E-6	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9990836966095326	WITHOUT_CLASSIFICATION	9.163033904674586E-4	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9998490330036728	WITHOUT_CLASSIFICATION	1.5096699632721007E-4	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9995611975777217	WITHOUT_CLASSIFICATION	4.388024222783338E-4	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9994794945290398	WITHOUT_CLASSIFICATION	5.205054709601671E-4	DOCUMENTATION
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9998848193966061	WITHOUT_CLASSIFICATION	1.1518060339387373E-4	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999673036470373	WITHOUT_CLASSIFICATION	3.2696352962716455E-5	DOCUMENTATION
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999624736787662	WITHOUT_CLASSIFICATION	3.7526321233687856E-5	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999921532496537	WITHOUT_CLASSIFICATION	7.846750346220559E-6	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9998115711721423	WITHOUT_CLASSIFICATION	1.8842882785785966E-4	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9999641662305463	WITHOUT_CLASSIFICATION	3.583376945373833E-5	DOCUMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999477144171149	WITHOUT_CLASSIFICATION	5.2285582885114956E-5	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9999602801028886	WITHOUT_CLASSIFICATION	3.9719897111361716E-5	DOCUMENTATION
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.999996422368286	WITHOUT_CLASSIFICATION	3.5776317141329574E-6	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9999995059988636	WITHOUT_CLASSIFICATION	4.940011364617651E-7	DOCUMENTATION
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9999956098077497	WITHOUT_CLASSIFICATION	4.390192250297631E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.999995385095118	WITHOUT_CLASSIFICATION	4.614904881976049E-6	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.997495818577722	WITHOUT_CLASSIFICATION	0.002504181422277941	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9994067570478882	WITHOUT_CLASSIFICATION	5.932429521118995E-4	DOCUMENTATION
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9999837853232743	WITHOUT_CLASSIFICATION	1.6214676725738832E-5	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9982214560131168	WITHOUT_CLASSIFICATION	0.0017785439868831703	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9990256082583423	WITHOUT_CLASSIFICATION	9.743917416577985E-4	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9998334691163767	WITHOUT_CLASSIFICATION	1.6653088362323564E-4	DOCUMENTATION
//may be final	WITHOUT_CLASSIFICATION	0.9999095502617069	WITHOUT_CLASSIFICATION	9.044973829303626E-5	DOCUMENTATION
// may be final	WITHOUT_CLASSIFICATION	0.9999969196899993	WITHOUT_CLASSIFICATION	3.0803100008371504E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9993331847259822	WITHOUT_CLASSIFICATION	6.668152740177757E-4	DOCUMENTATION
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999852813128347	WITHOUT_CLASSIFICATION	1.4718687165217933E-5	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9999711079906953	WITHOUT_CLASSIFICATION	2.8892009304701057E-5	DOCUMENTATION
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9992477707579246	WITHOUT_CLASSIFICATION	7.522292420753584E-4	DOCUMENTATION
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9998249256982118	WITHOUT_CLASSIFICATION	1.750743017883085E-4	DOCUMENTATION
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999987178097909	WITHOUT_CLASSIFICATION	1.282190209133422E-6	DOCUMENTATION
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999887103260797	WITHOUT_CLASSIFICATION	1.1289673920349564E-5	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9993331847259822	WITHOUT_CLASSIFICATION	6.668152740177757E-4	DOCUMENTATION
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999638642473836	WITHOUT_CLASSIFICATION	3.613575261636183E-5	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9995932417718709	WITHOUT_CLASSIFICATION	4.0675822812918087E-4	DOCUMENTATION
// empty means no scoping	WITHOUT_CLASSIFICATION	0.999957268766712	WITHOUT_CLASSIFICATION	4.2731233288048995E-5	DOCUMENTATION
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9999967317334978	WITHOUT_CLASSIFICATION	3.268266502159957E-6	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999541776218541	WITHOUT_CLASSIFICATION	4.582237814593243E-5	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9999649816363778	WITHOUT_CLASSIFICATION	3.501836362221161E-5	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9998473843952895	WITHOUT_CLASSIFICATION	1.5261560471046978E-4	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9997725028397841	WITHOUT_CLASSIFICATION	2.2749716021591644E-4	DOCUMENTATION
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999927481679131	WITHOUT_CLASSIFICATION	7.251832086842607E-6	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.999336003430992	WITHOUT_CLASSIFICATION	6.639965690079792E-4	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999977714390776	WITHOUT_CLASSIFICATION	2.2285609224485146E-6	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.999336003430992	WITHOUT_CLASSIFICATION	6.639965690079792E-4	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999981067066537	WITHOUT_CLASSIFICATION	1.89329334632196E-6	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9973069876039818	WITHOUT_CLASSIFICATION	0.0026930123960180502	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999981067066537	WITHOUT_CLASSIFICATION	1.89329334632196E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999569728414339	WITHOUT_CLASSIFICATION	4.302715856608952E-5	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9999501990468185	WITHOUT_CLASSIFICATION	4.980095318149758E-5	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.995924076610912	WITHOUT_CLASSIFICATION	0.004075923389088053	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.995924076610912	WITHOUT_CLASSIFICATION	0.004075923389088053	DOCUMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9989697965178258	WITHOUT_CLASSIFICATION	0.0010302034821741595	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9989735501130325	WITHOUT_CLASSIFICATION	0.0010264498869675027	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9989697965178258	WITHOUT_CLASSIFICATION	0.0010302034821741595	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9992606822985789	WITHOUT_CLASSIFICATION	7.393177014211928E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.999980041986517	WITHOUT_CLASSIFICATION	1.995801348291253E-5	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9994134123681641	WITHOUT_CLASSIFICATION	5.865876318359119E-4	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.999021697795231	WITHOUT_CLASSIFICATION	9.78302204768986E-4	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9997664162068819	WITHOUT_CLASSIFICATION	2.335837931180486E-4	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.9955572575942645	WITHOUT_CLASSIFICATION	0.004442742405735451	DOCUMENTATION
//SQL statements	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9997709544933402	WITHOUT_CLASSIFICATION	2.2904550665972214E-4	DOCUMENTATION
//types	WITHOUT_CLASSIFICATION	0.9955572575942645	WITHOUT_CLASSIFICATION	0.004442742405735451	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999689863532415	WITHOUT_CLASSIFICATION	3.1013646758512756E-5	DOCUMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9992518893891426	WITHOUT_CLASSIFICATION	7.481106108574402E-4	DOCUMENTATION
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999757691453155	WITHOUT_CLASSIFICATION	2.4230854684466338E-5	DOCUMENTATION
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999754449184372	WITHOUT_CLASSIFICATION	2.455508156284554E-5	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999825936859409	WITHOUT_CLASSIFICATION	1.7406314059150037E-5	DOCUMENTATION
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9995611975777217	WITHOUT_CLASSIFICATION	4.388024222783338E-4	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9955572575942645	WITHOUT_CLASSIFICATION	0.004442742405735451	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999831659814987	WITHOUT_CLASSIFICATION	1.6834018501321353E-5	DOCUMENTATION
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999606347402727	WITHOUT_CLASSIFICATION	3.936525972725607E-5	DOCUMENTATION
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999814413414789	WITHOUT_CLASSIFICATION	1.855865852110138E-5	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9995611975777217	WITHOUT_CLASSIFICATION	4.388024222783338E-4	DOCUMENTATION
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9996437335097993	WITHOUT_CLASSIFICATION	3.5626649020076203E-4	DOCUMENTATION
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9994105344057858	WITHOUT_CLASSIFICATION	5.894655942141765E-4	DOCUMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9998207275415135	WITHOUT_CLASSIFICATION	1.7927245848647466E-4	DOCUMENTATION
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9985255743710485	WITHOUT_CLASSIFICATION	0.0014744256289515722	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9999537152958653	WITHOUT_CLASSIFICATION	4.628470413475124E-5	DOCUMENTATION
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9999482155236677	WITHOUT_CLASSIFICATION	5.178447633215294E-5	DOCUMENTATION
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.9999424618538088	WITHOUT_CLASSIFICATION	5.753814619123415E-5	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9999866038966343	WITHOUT_CLASSIFICATION	1.3396103365690395E-5	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9994134123681641	WITHOUT_CLASSIFICATION	5.865876318359119E-4	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999937884081124	WITHOUT_CLASSIFICATION	6.211591887670723E-6	DOCUMENTATION
//needed by arrays	WITHOUT_CLASSIFICATION	0.9996682762131235	WITHOUT_CLASSIFICATION	3.317237868764403E-4	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9995254719211596	WITHOUT_CLASSIFICATION	4.7452807884040295E-4	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9994065888721052	WITHOUT_CLASSIFICATION	5.934111278947233E-4	DOCUMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999830787895068	WITHOUT_CLASSIFICATION	1.6921210493201617E-5	DOCUMENTATION
//create all the new entries	WITHOUT_CLASSIFICATION	0.9997630360163261	WITHOUT_CLASSIFICATION	2.3696398367397496E-4	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9992606822985789	WITHOUT_CLASSIFICATION	7.393177014211928E-4	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9992606822985789	WITHOUT_CLASSIFICATION	7.393177014211928E-4	DOCUMENTATION
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9995305053261329	WITHOUT_CLASSIFICATION	4.6949467386713444E-4	DOCUMENTATION
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9997624950908783	WITHOUT_CLASSIFICATION	2.375049091215608E-4	DOCUMENTATION
//==elementType ??	WITHOUT_CLASSIFICATION	0.9995186220749477	WITHOUT_CLASSIFICATION	4.813779250522572E-4	DOCUMENTATION
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9995660791358043	WITHOUT_CLASSIFICATION	4.339208641956049E-4	DOCUMENTATION
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9995971776370024	WITHOUT_CLASSIFICATION	4.028223629975673E-4	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999735092194242	WITHOUT_CLASSIFICATION	2.6490780575859905E-5	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999968293122707	WITHOUT_CLASSIFICATION	3.170687729347212E-6	DOCUMENTATION
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999615603730911	WITHOUT_CLASSIFICATION	3.84396269089142E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9995321420796905	WITHOUT_CLASSIFICATION	4.6785792030946586E-4	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999706438033004	WITHOUT_CLASSIFICATION	2.9356196699688924E-5	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9992518893891426	WITHOUT_CLASSIFICATION	7.481106108574402E-4	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9994120818252636	WITHOUT_CLASSIFICATION	5.87918174736305E-4	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999706438033004	WITHOUT_CLASSIFICATION	2.9356196699688924E-5	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999875474124624	WITHOUT_CLASSIFICATION	1.2452587537458966E-5	DOCUMENTATION
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9999987755816102	WITHOUT_CLASSIFICATION	1.224418389844053E-6	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.999737682869305	WITHOUT_CLASSIFICATION	2.6231713069505615E-4	DOCUMENTATION
//TODO: check this....	WITHOUT_CLASSIFICATION	0.9980092972584536	WITHOUT_CLASSIFICATION	0.00199070274154641	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999251157646233	WITHOUT_CLASSIFICATION	7.488423537669833E-5	DOCUMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999595242444521	WITHOUT_CLASSIFICATION	4.047575554785037E-5	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999890626811734	WITHOUT_CLASSIFICATION	1.0937318826619598E-5	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999953120671491	WITHOUT_CLASSIFICATION	4.687932850940529E-6	DOCUMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999644777342066	WITHOUT_CLASSIFICATION	3.552226579337661E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9989071060171031	WITHOUT_CLASSIFICATION	0.0010928939828968502	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9989071060171031	WITHOUT_CLASSIFICATION	0.0010928939828968502	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9996297147629082	WITHOUT_CLASSIFICATION	3.702852370918151E-4	DOCUMENTATION
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9994046553206389	WITHOUT_CLASSIFICATION	5.953446793610816E-4	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999706438033004	WITHOUT_CLASSIFICATION	2.9356196699688924E-5	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999251157646233	WITHOUT_CLASSIFICATION	7.488423537669833E-5	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999890626811734	WITHOUT_CLASSIFICATION	1.0937318826619598E-5	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9995335748995006	WITHOUT_CLASSIFICATION	4.664251004995146E-4	DOCUMENTATION
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999531427656081	WITHOUT_CLASSIFICATION	4.685723439190711E-5	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.999962137527506	WITHOUT_CLASSIFICATION	3.786247249406826E-5	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9997824596751907	WITHOUT_CLASSIFICATION	2.1754032480936133E-4	DOCUMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999744670096657	WITHOUT_CLASSIFICATION	2.5532990334335123E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999688850431045	WITHOUT_CLASSIFICATION	3.111495689534233E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.9999875474124624	WITHOUT_CLASSIFICATION	1.2452587537458966E-5	DOCUMENTATION
// JOINS	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9991653567330804	WITHOUT_CLASSIFICATION	8.34643266919607E-4	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9994161308162608	WITHOUT_CLASSIFICATION	5.838691837392006E-4	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9998055042301196	WITHOUT_CLASSIFICATION	1.944957698804386E-4	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9994849404218931	WITHOUT_CLASSIFICATION	5.150595781069807E-4	DOCUMENTATION
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9994620050571478	WITHOUT_CLASSIFICATION	5.379949428521789E-4	DOCUMENTATION
//render the SQL	WITHOUT_CLASSIFICATION	0.9997619210647302	WITHOUT_CLASSIFICATION	2.3807893526991584E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999569728414339	WITHOUT_CLASSIFICATION	4.302715856608952E-5	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870070830797	WITHOUT_CLASSIFICATION	1.2992916920265401E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999112145138753	WITHOUT_CLASSIFICATION	8.878548612468704E-5	DOCUMENTATION
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.998445260425868	WITHOUT_CLASSIFICATION	0.0015547395741319643	DOCUMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9969305847690901	WITHOUT_CLASSIFICATION	0.003069415230909882	DOCUMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9966777375095719	WITHOUT_CLASSIFICATION	0.0033222624904280366	DOCUMENTATION
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999876904573194	WITHOUT_CLASSIFICATION	1.2309542680576615E-5	DOCUMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.9999693300969953	WITHOUT_CLASSIFICATION	3.06699030046268E-5	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9998747520984789	WITHOUT_CLASSIFICATION	1.2524790152114093E-4	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999688850431045	WITHOUT_CLASSIFICATION	3.111495689534233E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9999605462196713	WITHOUT_CLASSIFICATION	3.9453780328706006E-5	DOCUMENTATION
//before add :-)	WITHOUT_CLASSIFICATION	0.9956525138296218	WITHOUT_CLASSIFICATION	0.00434748617037817	DOCUMENTATION
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999886082315497	WITHOUT_CLASSIFICATION	1.1391768450360231E-5	DOCUMENTATION
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.999904790793488	WITHOUT_CLASSIFICATION	9.520920651190349E-5	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9992597512218429	WITHOUT_CLASSIFICATION	7.402487781571498E-4	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9999807031784543	WITHOUT_CLASSIFICATION	1.9296821545676957E-5	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9999813199052573	WITHOUT_CLASSIFICATION	1.8680094742710602E-5	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9995253721123043	WITHOUT_CLASSIFICATION	4.746278876956485E-4	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9990641441110003	WITHOUT_CLASSIFICATION	9.358558889997857E-4	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.999667669611422	WITHOUT_CLASSIFICATION	3.3233038857808555E-4	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9993853786657718	WITHOUT_CLASSIFICATION	6.146213342281243E-4	DOCUMENTATION
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9999285372907692	WITHOUT_CLASSIFICATION	7.146270923080046E-5	DOCUMENTATION
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.999997461071697	WITHOUT_CLASSIFICATION	2.538928302927456E-6	DOCUMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9998697192365158	WITHOUT_CLASSIFICATION	1.3028076348418945E-4	DOCUMENTATION
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999902939828378	WITHOUT_CLASSIFICATION	9.70601716212732E-6	DOCUMENTATION
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999341373196108	WITHOUT_CLASSIFICATION	6.586268038918102E-5	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9969186646964839	WITHOUT_CLASSIFICATION	0.0030813353035161113	DOCUMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999527116680929	WITHOUT_CLASSIFICATION	4.7288331907069075E-5	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999559140063214	WITHOUT_CLASSIFICATION	4.40859936784257E-5	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999937796063973	WITHOUT_CLASSIFICATION	6.2203936026000865E-6	DOCUMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999379379514732	WITHOUT_CLASSIFICATION	6.206204852675411E-5	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.9956561541930563	WITHOUT_CLASSIFICATION	0.004343845806943707	DOCUMENTATION
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9977434752508264	WITHOUT_CLASSIFICATION	0.002256524749173539	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9988834394815489	WITHOUT_CLASSIFICATION	0.0011165605184511246	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999828485456019	WITHOUT_CLASSIFICATION	1.7151454398055013E-5	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.9992006216747369	WITHOUT_CLASSIFICATION	7.99378325262995E-4	DOCUMENTATION
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999557256027144	WITHOUT_CLASSIFICATION	4.4274397285475944E-5	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999969123202368	WITHOUT_CLASSIFICATION	3.08767976333626E-6	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9995785622216555	WITHOUT_CLASSIFICATION	4.21437778344385E-4	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999965000035195	WITHOUT_CLASSIFICATION	3.499996480509717E-6	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999979766235093	WITHOUT_CLASSIFICATION	2.0233764906729097E-6	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9997337302001572	WITHOUT_CLASSIFICATION	2.662697998428178E-4	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9998837030806785	WITHOUT_CLASSIFICATION	1.1629691932149454E-4	DOCUMENTATION
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.999997516057442	WITHOUT_CLASSIFICATION	2.483942558063388E-6	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9997337302001572	WITHOUT_CLASSIFICATION	2.662697998428178E-4	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999979766235093	WITHOUT_CLASSIFICATION	2.0233764906729097E-6	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9998837030806785	WITHOUT_CLASSIFICATION	1.1629691932149454E-4	DOCUMENTATION
// add the primary key	WITHOUT_CLASSIFICATION	0.999896950348015	WITHOUT_CLASSIFICATION	1.0304965198500277E-4	DOCUMENTATION
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999530335342688	WITHOUT_CLASSIFICATION	4.696646573119783E-5	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999956201441977	WITHOUT_CLASSIFICATION	4.3798558023161675E-6	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9999849042840394	WITHOUT_CLASSIFICATION	1.5095715960620861E-5	DOCUMENTATION
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999912866441868	WITHOUT_CLASSIFICATION	8.713355813114552E-6	DOCUMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9988287617069583	WITHOUT_CLASSIFICATION	0.001171238293041665	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9978997684111361	WITHOUT_CLASSIFICATION	0.0021002315888638463	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9813585640551844	WITHOUT_CLASSIFICATION	0.018641435944815578	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.999929738632254	WITHOUT_CLASSIFICATION	7.026136774598545E-5	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9999007028980792	WITHOUT_CLASSIFICATION	9.929710192090232E-5	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999708286833806	WITHOUT_CLASSIFICATION	2.9171316619400476E-5	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9997442915945144	WITHOUT_CLASSIFICATION	2.557084054856175E-4	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999510544639018	WITHOUT_CLASSIFICATION	4.894553609818096E-5	DOCUMENTATION
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9997119671737438	WITHOUT_CLASSIFICATION	2.880328262562665E-4	DOCUMENTATION
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999527348904539	WITHOUT_CLASSIFICATION	4.726510954608693E-5	DOCUMENTATION
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.999995347813206	WITHOUT_CLASSIFICATION	4.652186793990972E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.99999950812702	WITHOUT_CLASSIFICATION	4.918729800275428E-7	DOCUMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9999362920911774	WITHOUT_CLASSIFICATION	6.370790882267851E-5	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.99999179118103	WITHOUT_CLASSIFICATION	8.208818970000538E-6	DOCUMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9998777842656663	WITHOUT_CLASSIFICATION	1.222157343336642E-4	DOCUMENTATION
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9996987464583609	WITHOUT_CLASSIFICATION	3.0125354163913504E-4	DOCUMENTATION
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.999939758231119	WITHOUT_CLASSIFICATION	6.024176888088078E-5	DOCUMENTATION
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999882555272837	WITHOUT_CLASSIFICATION	1.1744472716352153E-5	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999782586250934	WITHOUT_CLASSIFICATION	2.174137490662801E-5	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9998777842656663	WITHOUT_CLASSIFICATION	1.222157343336642E-4	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9998777842656663	WITHOUT_CLASSIFICATION	1.222157343336642E-4	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999938990986432	WITHOUT_CLASSIFICATION	6.10090135675314E-6	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999938990986432	WITHOUT_CLASSIFICATION	6.10090135675314E-6	DOCUMENTATION
// not supported	WITHOUT_CLASSIFICATION	0.9999897501444768	WITHOUT_CLASSIFICATION	1.0249855523186038E-5	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.99999950812702	WITHOUT_CLASSIFICATION	4.918729800275428E-7	DOCUMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9994091332827721	WITHOUT_CLASSIFICATION	5.908667172279449E-4	DOCUMENTATION
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.99998152768477	WITHOUT_CLASSIFICATION	1.8472315229994806E-5	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9998809837633563	WITHOUT_CLASSIFICATION	1.1901623664370166E-4	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9998809837633563	WITHOUT_CLASSIFICATION	1.1901623664370166E-4	DOCUMENTATION
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9998607832831004	WITHOUT_CLASSIFICATION	1.3921671689971757E-4	DOCUMENTATION
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9994697251479842	WITHOUT_CLASSIFICATION	5.302748520158088E-4	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9999468165065897	WITHOUT_CLASSIFICATION	5.318349341046615E-5	DOCUMENTATION
//skip the driving table	WITHOUT_CLASSIFICATION	0.9997535209933047	WITHOUT_CLASSIFICATION	2.464790066952823E-4	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.999784366537975	WITHOUT_CLASSIFICATION	2.1563346202509178E-4	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999993108602614	WITHOUT_CLASSIFICATION	6.891397385887558E-7	DOCUMENTATION
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9999407375678327	WITHOUT_CLASSIFICATION	5.9262432167213836E-5	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9987280512668697	WITHOUT_CLASSIFICATION	0.0012719487331302843	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9996987933665359	WITHOUT_CLASSIFICATION	3.012066334640793E-4	DOCUMENTATION
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.999995168582711	WITHOUT_CLASSIFICATION	4.831417289073102E-6	DOCUMENTATION
//now render the select clause	WITHOUT_CLASSIFICATION	0.9997939772677723	WITHOUT_CLASSIFICATION	2.060227322277244E-4	DOCUMENTATION
//now tie it all together	WITHOUT_CLASSIFICATION	0.999577448531163	WITHOUT_CLASSIFICATION	4.2255146883698254E-4	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.994093689582376	WITHOUT_CLASSIFICATION	0.005906310417624058	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999463873519017	WITHOUT_CLASSIFICATION	5.361264809839136E-5	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999497816892676	WITHOUT_CLASSIFICATION	5.021831073240791E-5	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999852154377616	WITHOUT_CLASSIFICATION	1.4784562238335546E-5	DOCUMENTATION
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9999827172890166	WITHOUT_CLASSIFICATION	1.728271098339969E-5	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999560578368447	WITHOUT_CLASSIFICATION	4.394216315533985E-5	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999784354710396	WITHOUT_CLASSIFICATION	2.1564528960374487E-5	DOCUMENTATION
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999885208902526	WITHOUT_CLASSIFICATION	1.1479109747357682E-5	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999443016402153	WITHOUT_CLASSIFICATION	5.56983597847028E-5	DOCUMENTATION
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999164395528373	WITHOUT_CLASSIFICATION	8.356044716280455E-5	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9989082240416741	WITHOUT_CLASSIFICATION	0.001091775958325918	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999692963783301	WITHOUT_CLASSIFICATION	3.0703621669912665E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9990641441110003	WITHOUT_CLASSIFICATION	9.358558889997857E-4	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9996564644989764	WITHOUT_CLASSIFICATION	3.4353550102362684E-4	DOCUMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999981290462765	WITHOUT_CLASSIFICATION	1.8709537234293889E-6	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999439989126474	WITHOUT_CLASSIFICATION	5.600108735254905E-5	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999426813774974	WITHOUT_CLASSIFICATION	5.731862250267604E-5	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9994249762628411	WITHOUT_CLASSIFICATION	5.750237371589059E-4	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9994249762628411	WITHOUT_CLASSIFICATION	5.750237371589059E-4	DOCUMENTATION
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999941730707084	WITHOUT_CLASSIFICATION	5.826929291689773E-6	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999703625512859	WITHOUT_CLASSIFICATION	2.963744871406947E-5	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999755263208845	WITHOUT_CLASSIFICATION	2.4473679115568445E-5	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999755263208845	WITHOUT_CLASSIFICATION	2.4473679115568445E-5	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999916381705246	WITHOUT_CLASSIFICATION	8.361829475448465E-6	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9996280800612203	WITHOUT_CLASSIFICATION	3.7191993877978916E-4	DOCUMENTATION
// do not do anything	WITHOUT_CLASSIFICATION	0.9999025465932391	WITHOUT_CLASSIFICATION	9.745340676085763E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9997830555512219	WITHOUT_CLASSIFICATION	2.1694444877819638E-4	DOCUMENTATION
//cant instantiate	WITHOUT_CLASSIFICATION	0.9994212954550739	WITHOUT_CLASSIFICATION	5.78704544926123E-4	DOCUMENTATION
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999701192351493	WITHOUT_CLASSIFICATION	2.9880764850576525E-5	DOCUMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999645212302584	WITHOUT_CLASSIFICATION	3.547876974161739E-5	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999660410387439	WITHOUT_CLASSIFICATION	3.395896125609827E-5	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999660410387439	WITHOUT_CLASSIFICATION	3.395896125609827E-5	DOCUMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999953196977824	WITHOUT_CLASSIFICATION	4.68030221762938E-6	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.999945089654972	WITHOUT_CLASSIFICATION	5.4910345027920644E-5	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.999945089654972	WITHOUT_CLASSIFICATION	5.4910345027920644E-5	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999676263711151	WITHOUT_CLASSIFICATION	3.23736288849392E-5	DOCUMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999635403440825	WITHOUT_CLASSIFICATION	3.645965591740483E-5	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9955572575942645	WITHOUT_CLASSIFICATION	0.004442742405735451	DOCUMENTATION
// Get the caller	WITHOUT_CLASSIFICATION	0.9999897012525806	WITHOUT_CLASSIFICATION	1.0298747419404298E-5	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999869351357249	WITHOUT_CLASSIFICATION	1.306486427507371E-5	DOCUMENTATION
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9997812236641289	WITHOUT_CLASSIFICATION	2.187763358710137E-4	DOCUMENTATION
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999930385212598	WITHOUT_CLASSIFICATION	6.961478740261251E-6	DOCUMENTATION
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9996299720858477	WITHOUT_CLASSIFICATION	3.700279141523324E-4	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9997285873355838	WITHOUT_CLASSIFICATION	2.714126644161678E-4	DOCUMENTATION
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.999032304865323	WITHOUT_CLASSIFICATION	9.676951346768419E-4	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.999993590014299	WITHOUT_CLASSIFICATION	6.4099857009885466E-6	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.9999311594016105	WITHOUT_CLASSIFICATION	6.884059838947112E-5	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9994193354922097	WITHOUT_CLASSIFICATION	5.806645077902469E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9994193354922097	WITHOUT_CLASSIFICATION	5.806645077902469E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9994193354922097	WITHOUT_CLASSIFICATION	5.806645077902469E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9994193354922097	WITHOUT_CLASSIFICATION	5.806645077902469E-4	DOCUMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999489533850922	WITHOUT_CLASSIFICATION	5.104661490786134E-5	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999958098680434	WITHOUT_CLASSIFICATION	4.19013195667986E-6	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
//for MySQL	WITHOUT_CLASSIFICATION	0.9994327143676472	WITHOUT_CLASSIFICATION	5.672856323526579E-4	DOCUMENTATION
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9996959871187118	WITHOUT_CLASSIFICATION	3.0401288128824837E-4	DOCUMENTATION
//null caused some problems	WITHOUT_CLASSIFICATION	0.9969837016964214	WITHOUT_CLASSIFICATION	0.003016298303578698	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999318171205092	WITHOUT_CLASSIFICATION	6.818287949084313E-5	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9991313027908796	WITHOUT_CLASSIFICATION	8.686972091202892E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999906137744327	WITHOUT_CLASSIFICATION	9.386225567372867E-6	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9998754787723647	WITHOUT_CLASSIFICATION	1.2452122763531858E-4	DOCUMENTATION
// deprecated option...	WITHOUT_CLASSIFICATION	0.9999632789602048	WITHOUT_CLASSIFICATION	3.6721039795240904E-5	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.999657719851317	WITHOUT_CLASSIFICATION	3.422801486830041E-4	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9995519609711627	WITHOUT_CLASSIFICATION	4.4803902883723773E-4	DOCUMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999520861472594	WITHOUT_CLASSIFICATION	4.791385274054183E-5	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999955488809588	WITHOUT_CLASSIFICATION	4.4511190412360354E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.999657719851317	WITHOUT_CLASSIFICATION	3.422801486830041E-4	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.999149112022799	WITHOUT_CLASSIFICATION	8.508879772010172E-4	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999896473170018	WITHOUT_CLASSIFICATION	1.03526829981971E-5	DOCUMENTATION
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999670937485577	WITHOUT_CLASSIFICATION	3.290625144234676E-5	DOCUMENTATION
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999976291391599	WITHOUT_CLASSIFICATION	2.3708608401686136E-6	DOCUMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999584489440567	WITHOUT_CLASSIFICATION	4.155105594335654E-5	DOCUMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.999994013456748	WITHOUT_CLASSIFICATION	5.986543252070853E-6	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999897178179139	WITHOUT_CLASSIFICATION	1.0282182086133742E-5	DOCUMENTATION
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9997456758432386	WITHOUT_CLASSIFICATION	2.5432415676136403E-4	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998980299342908	WITHOUT_CLASSIFICATION	1.0197006570915455E-4	DOCUMENTATION
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999938393933288	WITHOUT_CLASSIFICATION	6.160606671262371E-6	DOCUMENTATION
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9998980299342908	WITHOUT_CLASSIFICATION	1.0197006570915455E-4	DOCUMENTATION
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999691695719382	WITHOUT_CLASSIFICATION	3.083042806185904E-5	DOCUMENTATION
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9999799079410785	WITHOUT_CLASSIFICATION	2.009205892152717E-5	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.9983254110682644	WITHOUT_CLASSIFICATION	0.001674588931735588	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999824546117355	WITHOUT_CLASSIFICATION	1.7545388264485465E-5	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.9998074605535963	WITHOUT_CLASSIFICATION	1.9253944640371462E-4	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999878226234418	WITHOUT_CLASSIFICATION	1.2177376558144448E-5	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999770746799457	WITHOUT_CLASSIFICATION	2.2925320054312146E-5	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999632566384358	WITHOUT_CLASSIFICATION	3.674336156427337E-5	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999770746799457	WITHOUT_CLASSIFICATION	2.2925320054312146E-5	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999819480496135	WITHOUT_CLASSIFICATION	1.8051950386472246E-5	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999986075655455	WITHOUT_CLASSIFICATION	1.3924344545073054E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9999565560114777	WITHOUT_CLASSIFICATION	4.344398852215948E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999654539923993	WITHOUT_CLASSIFICATION	3.4546007600683216E-5	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999878226234418	WITHOUT_CLASSIFICATION	1.2177376558144448E-5	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999632566384358	WITHOUT_CLASSIFICATION	3.674336156427337E-5	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999819480496135	WITHOUT_CLASSIFICATION	1.8051950386472246E-5	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9998758438488646	WITHOUT_CLASSIFICATION	1.241561511353254E-4	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9994402334193883	WITHOUT_CLASSIFICATION	5.597665806117241E-4	DOCUMENTATION
//reset the id	WITHOUT_CLASSIFICATION	0.9997733473057766	WITHOUT_CLASSIFICATION	2.266526942234481E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.999775643706375	WITHOUT_CLASSIFICATION	2.2435629362512903E-4	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9999927689344706	WITHOUT_CLASSIFICATION	7.2310655293676274E-6	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9998870057192901	WITHOUT_CLASSIFICATION	1.129942807098984E-4	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999497816892676	WITHOUT_CLASSIFICATION	5.021831073240791E-5	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999986075655455	WITHOUT_CLASSIFICATION	1.3924344545073054E-6	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9999988615169217	WITHOUT_CLASSIFICATION	1.1384830782218005E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9995269381588597	WITHOUT_CLASSIFICATION	4.7306184114028995E-4	DOCUMENTATION
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999614459665973	WITHOUT_CLASSIFICATION	3.855403340263176E-5	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999497816892676	WITHOUT_CLASSIFICATION	5.021831073240791E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9994552445406809	WITHOUT_CLASSIFICATION	5.447554593190887E-4	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999497816892676	WITHOUT_CLASSIFICATION	5.021831073240791E-5	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.999932402102479	WITHOUT_CLASSIFICATION	6.75978975210272E-5	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999788602589423	WITHOUT_CLASSIFICATION	2.113974105769843E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.999272113424308	WITHOUT_CLASSIFICATION	7.278865756919509E-4	DOCUMENTATION
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999871471248615	WITHOUT_CLASSIFICATION	1.2852875138622387E-5	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999882984898433	WITHOUT_CLASSIFICATION	1.1701510156743346E-5	DOCUMENTATION
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999688685503935	WITHOUT_CLASSIFICATION	3.113144960649967E-5	DOCUMENTATION
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999803084586462	WITHOUT_CLASSIFICATION	1.9691541353901243E-5	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9998729635280077	WITHOUT_CLASSIFICATION	1.2703647199223568E-4	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9995013573792456	WITHOUT_CLASSIFICATION	4.9864262075435E-4	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9997340533354862	WITHOUT_CLASSIFICATION	2.6594666451389067E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999926202613323	WITHOUT_CLASSIFICATION	7.379738667640846E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9955572575942645	WITHOUT_CLASSIFICATION	0.004442742405735451	DOCUMENTATION
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9997340533354862	WITHOUT_CLASSIFICATION	2.6594666451389067E-4	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9997706023621381	WITHOUT_CLASSIFICATION	2.2939763786192704E-4	DOCUMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9994063656667133	WITHOUT_CLASSIFICATION	5.936343332867696E-4	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999951439176538	WITHOUT_CLASSIFICATION	4.856082346203514E-6	DOCUMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999944081889617	WITHOUT_CLASSIFICATION	5.591811038274283E-6	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9999997271112896	WITHOUT_CLASSIFICATION	2.728887104636955E-7	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9997083927922841	WITHOUT_CLASSIFICATION	2.916072077159471E-4	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999937041952726	WITHOUT_CLASSIFICATION	6.29580472747329E-6	DOCUMENTATION
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999996451335453	WITHOUT_CLASSIFICATION	3.548664546825418E-7	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.9955572575942645	WITHOUT_CLASSIFICATION	0.004442742405735451	DOCUMENTATION
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9994108740999691	WITHOUT_CLASSIFICATION	5.891259000308015E-4	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9994108740999691	WITHOUT_CLASSIFICATION	5.891259000308015E-4	DOCUMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999429103568022	WITHOUT_CLASSIFICATION	5.708964319784201E-5	DOCUMENTATION
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999934734791437	WITHOUT_CLASSIFICATION	6.526520856281528E-6	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9955572575942645	WITHOUT_CLASSIFICATION	0.004442742405735451	DOCUMENTATION
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9999907463226947	WITHOUT_CLASSIFICATION	9.25367730531403E-6	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9999990544703619	WITHOUT_CLASSIFICATION	9.455296380857222E-7	DOCUMENTATION
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.999996512802957	WITHOUT_CLASSIFICATION	3.4871970429311343E-6	DOCUMENTATION
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9992495038114992	WITHOUT_CLASSIFICATION	7.50496188500795E-4	DOCUMENTATION
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9999021807775775	WITHOUT_CLASSIFICATION	9.7819222422498E-5	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9814627197044321	WITHOUT_CLASSIFICATION	0.018537280295567893	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999841363281927	WITHOUT_CLASSIFICATION	1.5863671807375823E-5	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.998787076712042	WITHOUT_CLASSIFICATION	0.0012129232879579369	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9988080463652277	WITHOUT_CLASSIFICATION	0.001191953634772379	DOCUMENTATION
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9966436427319018	WITHOUT_CLASSIFICATION	0.0033563572680983425	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999958212898212	WITHOUT_CLASSIFICATION	4.178710178736745E-6	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999974214263421	WITHOUT_CLASSIFICATION	2.578573657842993E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9989774582049002	WITHOUT_CLASSIFICATION	0.0010225417950997756	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9997478852138024	WITHOUT_CLASSIFICATION	2.521147861975503E-4	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9997478852138024	WITHOUT_CLASSIFICATION	2.521147861975503E-4	DOCUMENTATION
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999989937814487	WITHOUT_CLASSIFICATION	1.0062185512336035E-6	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9998729635280077	WITHOUT_CLASSIFICATION	1.2703647199223568E-4	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9991430878785887	WITHOUT_CLASSIFICATION	8.569121214112461E-4	DOCUMENTATION
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9992863263851567	WITHOUT_CLASSIFICATION	7.136736148432227E-4	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999818302383207	WITHOUT_CLASSIFICATION	1.816976167934194E-5	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999903384694746	WITHOUT_CLASSIFICATION	9.661530525489863E-6	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9997479969023808	WITHOUT_CLASSIFICATION	2.520030976192563E-4	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9965331633148804	WITHOUT_CLASSIFICATION	0.003466836685119572	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9989071060171031	WITHOUT_CLASSIFICATION	0.0010928939828968502	DOCUMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.999979295306543	WITHOUT_CLASSIFICATION	2.0704693457050965E-5	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9999734348872251	WITHOUT_CLASSIFICATION	2.6565112774911385E-5	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.9999751911838897	WITHOUT_CLASSIFICATION	2.4808816110370425E-5	DOCUMENTATION
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999999518503	WITHOUT_CLASSIFICATION	4.814969999416408E-8	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999538895854596	WITHOUT_CLASSIFICATION	4.6110414540274466E-5	DOCUMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999934425902735	WITHOUT_CLASSIFICATION	6.557409726569404E-6	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999999883415457	WITHOUT_CLASSIFICATION	1.165845423884956E-8	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9992495732502495	WITHOUT_CLASSIFICATION	7.504267497504162E-4	DOCUMENTATION
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999924901645866	WITHOUT_CLASSIFICATION	7.509835413399744E-6	DOCUMENTATION
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999643614432641	WITHOUT_CLASSIFICATION	3.563855673594156E-5	DOCUMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9999995396083206	WITHOUT_CLASSIFICATION	4.603916794338942E-7	DOCUMENTATION
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.99999697724631	WITHOUT_CLASSIFICATION	3.0227536899539435E-6	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999401997139505	WITHOUT_CLASSIFICATION	5.980028604936443E-5	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9999472756276225	WITHOUT_CLASSIFICATION	5.272437237752016E-5	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999986485391896	WITHOUT_CLASSIFICATION	1.3514608104389973E-6	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999985163569438	WITHOUT_CLASSIFICATION	1.4836430560982437E-6	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999900345788395	WITHOUT_CLASSIFICATION	9.965421160513132E-6	DOCUMENTATION
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999652849331272	WITHOUT_CLASSIFICATION	3.471506687284132E-5	DOCUMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9994702138356232	WITHOUT_CLASSIFICATION	5.297861643768794E-4	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.9999071647146852	WITHOUT_CLASSIFICATION	9.283528531479503E-5	DOCUMENTATION
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999881579882788	WITHOUT_CLASSIFICATION	1.1842011721291397E-5	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9998249830871725	WITHOUT_CLASSIFICATION	1.7501691282756802E-4	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999428990422053	WITHOUT_CLASSIFICATION	5.710095779464339E-5	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999429506280261	WITHOUT_CLASSIFICATION	5.704937197395096E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999433450372477	WITHOUT_CLASSIFICATION	5.665496275231414E-5	DOCUMENTATION
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.999975150855135	WITHOUT_CLASSIFICATION	2.4849144865043574E-5	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999558715340299	WITHOUT_CLASSIFICATION	4.412846597014389E-5	DOCUMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9995381795810198	WITHOUT_CLASSIFICATION	4.618204189802487E-4	DOCUMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999982395202361	WITHOUT_CLASSIFICATION	1.7604797638869418E-6	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999859537539495	WITHOUT_CLASSIFICATION	1.4046246050537086E-5	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999859537539495	WITHOUT_CLASSIFICATION	1.4046246050537086E-5	DOCUMENTATION
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999903427203469	WITHOUT_CLASSIFICATION	9.657279653113359E-6	DOCUMENTATION
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.999994941612925	WITHOUT_CLASSIFICATION	5.058387074902248E-6	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9968181113712388	WITHOUT_CLASSIFICATION	0.0031818886287611797	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9968181113712388	WITHOUT_CLASSIFICATION	0.0031818886287611797	DOCUMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.999977437658337	WITHOUT_CLASSIFICATION	2.2562341662972526E-5	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9995118455842936	WITHOUT_CLASSIFICATION	4.8815441570632464E-4	DOCUMENTATION
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.9999981781083092	WITHOUT_CLASSIFICATION	1.8218916907372823E-6	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999996673135384	WITHOUT_CLASSIFICATION	3.3268646153444785E-7	DOCUMENTATION
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999511933192431	WITHOUT_CLASSIFICATION	4.880668075693425E-5	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999480689949072	WITHOUT_CLASSIFICATION	5.19310050927698E-5	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999480689949072	WITHOUT_CLASSIFICATION	5.19310050927698E-5	DOCUMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9995051294667132	WITHOUT_CLASSIFICATION	4.94870533286719E-4	DOCUMENTATION
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9992606822985789	WITHOUT_CLASSIFICATION	7.393177014211928E-4	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999339850692874	WITHOUT_CLASSIFICATION	6.601493071252385E-5	DOCUMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999905453191245	WITHOUT_CLASSIFICATION	9.454680875625786E-6	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999998802341188	WITHOUT_CLASSIFICATION	1.1976588126951112E-7	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.999892413434386	WITHOUT_CLASSIFICATION	1.0758656561416906E-4	DOCUMENTATION
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999974854608122	WITHOUT_CLASSIFICATION	2.5145391878242797E-6	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999689473580592	WITHOUT_CLASSIFICATION	3.1052641940813305E-5	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999765571500336	WITHOUT_CLASSIFICATION	2.3442849966346394E-5	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999892925587281	WITHOUT_CLASSIFICATION	1.0707441271907655E-5	DOCUMENTATION
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999843514368952	WITHOUT_CLASSIFICATION	1.564856310473276E-5	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999291443518845	WITHOUT_CLASSIFICATION	7.085564811555864E-5	DOCUMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.999113840106416	WITHOUT_CLASSIFICATION	8.861598935839436E-4	DOCUMENTATION
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9999986885435549	WITHOUT_CLASSIFICATION	1.3114564451925077E-6	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9998455286845784	WITHOUT_CLASSIFICATION	1.5447131542147382E-4	DOCUMENTATION
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999621576685686	WITHOUT_CLASSIFICATION	3.784233143139156E-5	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999688709316222	WITHOUT_CLASSIFICATION	3.1129068377730696E-5	DOCUMENTATION
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999925829350448	WITHOUT_CLASSIFICATION	7.417064955270118E-6	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999944547968683	WITHOUT_CLASSIFICATION	5.545203131687832E-6	DOCUMENTATION
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999961144391243	WITHOUT_CLASSIFICATION	3.885560875731914E-6	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999849114929649	WITHOUT_CLASSIFICATION	1.5088507035261686E-5	DOCUMENTATION
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999428614220147	WITHOUT_CLASSIFICATION	5.713857798534865E-5	DOCUMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999776406797696	WITHOUT_CLASSIFICATION	2.2359320230400256E-5	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9999199217795064	WITHOUT_CLASSIFICATION	8.00782204936243E-5	DOCUMENTATION
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9997104220324425	WITHOUT_CLASSIFICATION	2.895779675573762E-4	DOCUMENTATION
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.999211058407273	WITHOUT_CLASSIFICATION	7.889415927270181E-4	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.9955572575942645	WITHOUT_CLASSIFICATION	0.004442742405735451	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.9999981788767436	WITHOUT_CLASSIFICATION	1.8211232564116636E-6	DOCUMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999872216011785	WITHOUT_CLASSIFICATION	1.2778398821561014E-5	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999934981530103	WITHOUT_CLASSIFICATION	6.5018469897587105E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999874072569168	WITHOUT_CLASSIFICATION	1.2592743083278958E-5	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999921294826191	WITHOUT_CLASSIFICATION	7.870517380903312E-6	DOCUMENTATION
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999455217479054	WITHOUT_CLASSIFICATION	5.447825209457873E-5	DOCUMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999154192998317	WITHOUT_CLASSIFICATION	8.458070016819475E-5	DOCUMENTATION
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999843258487757	WITHOUT_CLASSIFICATION	1.5674151224229864E-5	DOCUMENTATION
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9992467712904894	WITHOUT_CLASSIFICATION	7.532287095106168E-4	DOCUMENTATION
//readResolveObject	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9989071060171031	WITHOUT_CLASSIFICATION	0.0010928939828968502	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999476173752636	WITHOUT_CLASSIFICATION	5.2382624736331306E-5	DOCUMENTATION
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999927674220095	WITHOUT_CLASSIFICATION	7.2325779905970574E-6	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999989951943589	WITHOUT_CLASSIFICATION	1.0048056410838094E-6	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9999772763802948	WITHOUT_CLASSIFICATION	2.2723619705136557E-5	DOCUMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999281658960161	WITHOUT_CLASSIFICATION	7.183410398400583E-5	DOCUMENTATION
// Handle actions	WITHOUT_CLASSIFICATION	0.999970532978438	WITHOUT_CLASSIFICATION	2.9467021561994118E-5	DOCUMENTATION
// Print page	WITHOUT_CLASSIFICATION	0.9999689987510856	WITHOUT_CLASSIFICATION	3.1001248914407434E-5	DOCUMENTATION
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999697060552886	WITHOUT_CLASSIFICATION	3.0293944711516517E-5	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9999829541247391	WITHOUT_CLASSIFICATION	1.7045875260859216E-5	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999950792650465	WITHOUT_CLASSIFICATION	4.92073495345363E-6	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999895545510892	WITHOUT_CLASSIFICATION	1.0445448910759554E-5	DOCUMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999917394466495	WITHOUT_CLASSIFICATION	8.260553350449941E-6	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.99998526817343	WITHOUT_CLASSIFICATION	1.4731826569950257E-5	DOCUMENTATION
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999833961530759	WITHOUT_CLASSIFICATION	1.6603846924140285E-5	DOCUMENTATION
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9997391692464815	WITHOUT_CLASSIFICATION	2.6083075351843876E-4	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999987083994767	WITHOUT_CLASSIFICATION	1.2916005233493638E-6	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.999980687010197	WITHOUT_CLASSIFICATION	1.931298980299466E-5	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9998951355704792	WITHOUT_CLASSIFICATION	1.0486442952095376E-4	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9999683402487572	WITHOUT_CLASSIFICATION	3.165975124269708E-5	DOCUMENTATION
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999715350873493	WITHOUT_CLASSIFICATION	2.8464912650693805E-5	DOCUMENTATION
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999961770986234	WITHOUT_CLASSIFICATION	3.822901376651448E-6	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999990866508586	WITHOUT_CLASSIFICATION	9.133491414615245E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999976778214948	WITHOUT_CLASSIFICATION	2.3221785050774313E-6	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999976778214948	WITHOUT_CLASSIFICATION	2.3221785050774313E-6	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999992194571141	WITHOUT_CLASSIFICATION	7.805428857962797E-7	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9999971549418625	WITHOUT_CLASSIFICATION	2.8450581375151283E-6	DOCUMENTATION
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999983999423478	WITHOUT_CLASSIFICATION	1.600057652213911E-6	DOCUMENTATION
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.999992007976202	WITHOUT_CLASSIFICATION	7.992023798012202E-6	DOCUMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999987751355457	WITHOUT_CLASSIFICATION	1.2248644542428347E-6	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999563676254721	WITHOUT_CLASSIFICATION	4.363237452786147E-5	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999676048692379	WITHOUT_CLASSIFICATION	3.239513076213347E-5	DOCUMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999999008957573	WITHOUT_CLASSIFICATION	9.91042426830922E-8	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.999991998156522	WITHOUT_CLASSIFICATION	8.001843478065261E-6	DOCUMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999833087131497	WITHOUT_CLASSIFICATION	1.6691286850284912E-5	DOCUMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9999941026976797	WITHOUT_CLASSIFICATION	5.8973023202119575E-6	DOCUMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.998233765897885	WITHOUT_CLASSIFICATION	0.00176623410211488	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999586639950332	WITHOUT_CLASSIFICATION	4.133600496690834E-5	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999863240975297	WITHOUT_CLASSIFICATION	1.3675902470253552E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9995742411609622	WITHOUT_CLASSIFICATION	4.2575883903781805E-4	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9995742411609622	WITHOUT_CLASSIFICATION	4.2575883903781805E-4	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999855653557022	WITHOUT_CLASSIFICATION	1.4434644297806994E-5	DOCUMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9999699502608527	WITHOUT_CLASSIFICATION	3.004973914725642E-5	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9990430600012944	WITHOUT_CLASSIFICATION	9.569399987055736E-4	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.9999968641333056	WITHOUT_CLASSIFICATION	3.1358666943540356E-6	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999024144406296	WITHOUT_CLASSIFICATION	9.758555937049196E-5	DOCUMENTATION
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999374242249094	WITHOUT_CLASSIFICATION	6.257577509054962E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.9994474726793839	WITHOUT_CLASSIFICATION	5.525273206160928E-4	DOCUMENTATION
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.9999994025934442	WITHOUT_CLASSIFICATION	5.974065557132437E-7	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999993047512777	WITHOUT_CLASSIFICATION	6.952487223787879E-7	DOCUMENTATION
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999997711943311	WITHOUT_CLASSIFICATION	2.288056688485834E-7	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999875385177592	WITHOUT_CLASSIFICATION	1.2461482240755442E-5	DOCUMENTATION
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9988078622357408	WITHOUT_CLASSIFICATION	0.0011921377642591302	DOCUMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999462422643854	WITHOUT_CLASSIFICATION	5.3757735614583035E-5	DOCUMENTATION
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.999991679025913	WITHOUT_CLASSIFICATION	8.320974086971814E-6	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999399327500724	WITHOUT_CLASSIFICATION	6.006724992752358E-5	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999991892257908	WITHOUT_CLASSIFICATION	8.107742092660444E-7	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999987812425389	WITHOUT_CLASSIFICATION	1.2187574610811013E-6	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999297073809691	WITHOUT_CLASSIFICATION	7.029261903092144E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999561180542178	WITHOUT_CLASSIFICATION	4.3881945782248175E-5	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.999996317145232	WITHOUT_CLASSIFICATION	3.6828547679451154E-6	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999985897106511	WITHOUT_CLASSIFICATION	1.4102893489392822E-6	DOCUMENTATION
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999997213323997	WITHOUT_CLASSIFICATION	2.786676003119121E-7	DOCUMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999145009811796	WITHOUT_CLASSIFICATION	8.549901882045941E-5	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999845513536436	WITHOUT_CLASSIFICATION	1.5448646356338493E-5	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9999938222454261	WITHOUT_CLASSIFICATION	6.177754573853934E-6	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999970294379252	WITHOUT_CLASSIFICATION	2.970562074704549E-6	DOCUMENTATION
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9999866569207326	WITHOUT_CLASSIFICATION	1.3343079267454152E-5	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9999998194884134	WITHOUT_CLASSIFICATION	1.8051158653077552E-7	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999940323613843	WITHOUT_CLASSIFICATION	5.967638615676987E-6	DOCUMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9996619350820479	WITHOUT_CLASSIFICATION	3.3806491795199296E-4	DOCUMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999829005591914	WITHOUT_CLASSIFICATION	1.709944080855275E-5	DOCUMENTATION
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999892243133709	WITHOUT_CLASSIFICATION	1.0775686629044755E-5	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999969556130073	WITHOUT_CLASSIFICATION	3.0443869926319428E-6	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.9999517695697288	WITHOUT_CLASSIFICATION	4.823043027126214E-5	DOCUMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999998844936104	WITHOUT_CLASSIFICATION	1.1550638951005211E-7	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999970215031272	WITHOUT_CLASSIFICATION	2.978496872844811E-6	DOCUMENTATION
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.999933419567748	WITHOUT_CLASSIFICATION	6.658043225209005E-5	DOCUMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999508296388447	WITHOUT_CLASSIFICATION	4.9170361155134876E-5	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9999998426427922	WITHOUT_CLASSIFICATION	1.573572077937139E-7	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999394073481718	WITHOUT_CLASSIFICATION	6.059265182826988E-5	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999394073481718	WITHOUT_CLASSIFICATION	6.059265182826988E-5	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999920543958354	WITHOUT_CLASSIFICATION	7.9456041645119E-6	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.999999910236538	WITHOUT_CLASSIFICATION	8.976346191772268E-8	DOCUMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.999864088313227	WITHOUT_CLASSIFICATION	1.3591168677286943E-4	DOCUMENTATION
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9999935592245511	WITHOUT_CLASSIFICATION	6.4407754488507354E-6	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999891521217358	WITHOUT_CLASSIFICATION	1.0847878264254142E-5	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9993846894708103	WITHOUT_CLASSIFICATION	6.15310529189786E-4	DOCUMENTATION
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999975982216428	WITHOUT_CLASSIFICATION	2.4017783572140755E-6	DOCUMENTATION
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999258760454279	WITHOUT_CLASSIFICATION	7.412395457197846E-5	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999830477202117	WITHOUT_CLASSIFICATION	1.6952279788236768E-5	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999432873791867	WITHOUT_CLASSIFICATION	5.671262081321625E-5	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999432873791867	WITHOUT_CLASSIFICATION	5.671262081321625E-5	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9998090404787886	WITHOUT_CLASSIFICATION	1.9095952121133875E-4	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9998580836818632	WITHOUT_CLASSIFICATION	1.4191631813678462E-4	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999995798048047	WITHOUT_CLASSIFICATION	4.2019519536701017E-7	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9999989941399083	WITHOUT_CLASSIFICATION	1.0058600916585846E-6	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9999694613646679	WITHOUT_CLASSIFICATION	3.053863533206266E-5	DOCUMENTATION
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999998746200833	WITHOUT_CLASSIFICATION	1.253799166723659E-7	DOCUMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999985851813796	WITHOUT_CLASSIFICATION	1.4148186204220316E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.999996471170935	WITHOUT_CLASSIFICATION	3.5288290650609875E-6	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999914329861118	WITHOUT_CLASSIFICATION	8.567013888226978E-6	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999996146993444	WITHOUT_CLASSIFICATION	3.85300655673531E-7	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999143276156649	WITHOUT_CLASSIFICATION	8.567238433519308E-5	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9999534947590861	WITHOUT_CLASSIFICATION	4.65052409138451E-5	DOCUMENTATION
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.9991162189813971	WITHOUT_CLASSIFICATION	8.83781018602885E-4	DOCUMENTATION
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9998502954332565	WITHOUT_CLASSIFICATION	1.4970456674332522E-4	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999685504760575	WITHOUT_CLASSIFICATION	3.144952394257658E-5	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999994151800436	WITHOUT_CLASSIFICATION	5.848199562603709E-7	DOCUMENTATION
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999986484407483	WITHOUT_CLASSIFICATION	1.3515592516986963E-6	DOCUMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9999992316731949	WITHOUT_CLASSIFICATION	7.683268050251413E-7	DOCUMENTATION
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9999971939568008	WITHOUT_CLASSIFICATION	2.806043199377335E-6	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9999646245556432	WITHOUT_CLASSIFICATION	3.5375444356822076E-5	DOCUMENTATION
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999888392981583	WITHOUT_CLASSIFICATION	1.116070184174305E-5	DOCUMENTATION
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999921252127507	WITHOUT_CLASSIFICATION	7.874787249358127E-6	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999886111968519	WITHOUT_CLASSIFICATION	1.1388803148100113E-5	DOCUMENTATION
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999999412694155	WITHOUT_CLASSIFICATION	5.8730584503935315E-8	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999983696908046	WITHOUT_CLASSIFICATION	1.6303091954636638E-6	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999979468135868	WITHOUT_CLASSIFICATION	2.0531864133394144E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999993678962755	WITHOUT_CLASSIFICATION	6.321037244480051E-7	DOCUMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9999881360258999	WITHOUT_CLASSIFICATION	1.186397410021815E-5	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9997672165215189	WITHOUT_CLASSIFICATION	2.3278347848121014E-4	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999900470777583	WITHOUT_CLASSIFICATION	9.952922241701947E-6	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999993848763233	WITHOUT_CLASSIFICATION	6.151236767042183E-7	DOCUMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999988939165754	WITHOUT_CLASSIFICATION	1.1060834246830007E-6	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999957728654398	WITHOUT_CLASSIFICATION	4.227134560153958E-6	DOCUMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9999977189077964	WITHOUT_CLASSIFICATION	2.281092203548709E-6	DOCUMENTATION
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9999857772647867	WITHOUT_CLASSIFICATION	1.4222735213314898E-5	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999313292655608	WITHOUT_CLASSIFICATION	6.867073443906529E-5	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999586639950332	WITHOUT_CLASSIFICATION	4.133600496690834E-5	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999989608331978	WITHOUT_CLASSIFICATION	1.0391668022259304E-6	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.999993720411424	WITHOUT_CLASSIFICATION	6.279588575991015E-6	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9992047085038549	WITHOUT_CLASSIFICATION	7.952914961451181E-4	DOCUMENTATION
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999996690009036	WITHOUT_CLASSIFICATION	3.309990963820051E-7	DOCUMENTATION
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.999770680655153	WITHOUT_CLASSIFICATION	2.2931934484707862E-4	DOCUMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999409844685649	WITHOUT_CLASSIFICATION	5.9015531435176386E-5	DOCUMENTATION
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9999674088234757	WITHOUT_CLASSIFICATION	3.2591176524301206E-5	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9986964166591294	WITHOUT_CLASSIFICATION	0.001303583340870539	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9991601149988607	WITHOUT_CLASSIFICATION	8.398850011392262E-4	DOCUMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9999929906434454	WITHOUT_CLASSIFICATION	7.009356554532742E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999999108077552	WITHOUT_CLASSIFICATION	8.91922448158081E-8	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999974273615683	WITHOUT_CLASSIFICATION	2.57263843167822E-6	DOCUMENTATION
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.999823581853416	WITHOUT_CLASSIFICATION	1.7641814658389776E-4	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999732631623433	WITHOUT_CLASSIFICATION	2.673683765665351E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999571061063275	WITHOUT_CLASSIFICATION	4.289389367246583E-5	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9995611975777217	WITHOUT_CLASSIFICATION	4.388024222783338E-4	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.998912506838758	WITHOUT_CLASSIFICATION	0.0010874931612419737	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999974763426063	WITHOUT_CLASSIFICATION	2.523657393765345E-6	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999975827721311	WITHOUT_CLASSIFICATION	2.4172278688148866E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999571061063275	WITHOUT_CLASSIFICATION	4.289389367246583E-5	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9988795705176277	WITHOUT_CLASSIFICATION	0.0011204294823723973	DOCUMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9997828416093234	WITHOUT_CLASSIFICATION	2.1715839067667096E-4	DOCUMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999990245484489	WITHOUT_CLASSIFICATION	9.754515510274233E-7	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999966162123173	WITHOUT_CLASSIFICATION	3.3837876828589377E-6	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9888463328697819	WITHOUT_CLASSIFICATION	0.011153667130218184	DOCUMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999993984712544	WITHOUT_CLASSIFICATION	6.015287457035877E-7	DOCUMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.999996471350886	WITHOUT_CLASSIFICATION	3.5286491139177332E-6	DOCUMENTATION
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.9999993900452694	WITHOUT_CLASSIFICATION	6.099547305742749E-7	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999359549876313	WITHOUT_CLASSIFICATION	6.404501236871463E-5	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999977904973767	WITHOUT_CLASSIFICATION	2.2095026232983064E-6	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9998978271646067	WITHOUT_CLASSIFICATION	1.0217283539317492E-4	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9974131430423202	WITHOUT_CLASSIFICATION	0.002586856957679811	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999921161833898	WITHOUT_CLASSIFICATION	7.88381661011554E-6	DOCUMENTATION
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.999319528180099	WITHOUT_CLASSIFICATION	6.804718199010655E-4	DOCUMENTATION
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9998403454367367	WITHOUT_CLASSIFICATION	1.596545632633827E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999986485391896	WITHOUT_CLASSIFICATION	1.3514608104389973E-6	DOCUMENTATION
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999977026884658	WITHOUT_CLASSIFICATION	2.297311534236994E-6	DOCUMENTATION
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999961472360291	WITHOUT_CLASSIFICATION	3.852763970938297E-6	DOCUMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9959471039007576	WITHOUT_CLASSIFICATION	0.004052896099242512	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999997193796323	WITHOUT_CLASSIFICATION	2.806203676765835E-7	DOCUMENTATION
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999314036738346	WITHOUT_CLASSIFICATION	6.859632616535363E-5	DOCUMENTATION
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999977619235975	WITHOUT_CLASSIFICATION	2.2380764025927862E-6	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999636193471011	WITHOUT_CLASSIFICATION	3.6380652898904057E-5	DOCUMENTATION
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999993734055901	WITHOUT_CLASSIFICATION	6.265944099092596E-7	DOCUMENTATION
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999933453239754	WITHOUT_CLASSIFICATION	6.654676024574016E-6	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999164071268204	WITHOUT_CLASSIFICATION	8.35928731795738E-5	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9999927292085241	WITHOUT_CLASSIFICATION	7.270791475936752E-6	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999449644955266	WITHOUT_CLASSIFICATION	5.503550447343916E-5	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9999985614419835	WITHOUT_CLASSIFICATION	1.4385580164953451E-6	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.9999989352688087	WITHOUT_CLASSIFICATION	1.0647311914099164E-6	DOCUMENTATION
// and perform the load	WITHOUT_CLASSIFICATION	0.9999945750057787	WITHOUT_CLASSIFICATION	5.424994221369785E-6	DOCUMENTATION
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9995345144941967	WITHOUT_CLASSIFICATION	4.654855058032433E-4	DOCUMENTATION
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999207608792691	WITHOUT_CLASSIFICATION	7.923912073100751E-5	DOCUMENTATION
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999773684899599	WITHOUT_CLASSIFICATION	2.2631510040177967E-5	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999957017244837	WITHOUT_CLASSIFICATION	4.298275516213559E-6	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999904318831996	WITHOUT_CLASSIFICATION	9.568116800466958E-6	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999997381445159	WITHOUT_CLASSIFICATION	2.618554840257131E-7	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.999997176489633	WITHOUT_CLASSIFICATION	2.823510366874397E-6	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999994184705088	WITHOUT_CLASSIFICATION	5.815294911647799E-7	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9998212848733175	WITHOUT_CLASSIFICATION	1.787151266824822E-4	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9998922490747045	WITHOUT_CLASSIFICATION	1.0775092529542234E-4	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9998922490747045	WITHOUT_CLASSIFICATION	1.0775092529542234E-4	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999602376298263	WITHOUT_CLASSIFICATION	3.976237017363393E-5	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999935267539273	WITHOUT_CLASSIFICATION	6.473246072706104E-6	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999794697309862	WITHOUT_CLASSIFICATION	2.0530269013864195E-5	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9424349344991295	DOCUMENTATION	0.0575650655008705	WITHOUT_CLASSIFICATION
// ignore	WITHOUT_CLASSIFICATION	0.9997830555512219	WITHOUT_CLASSIFICATION	2.1694444877819638E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9997830555512219	WITHOUT_CLASSIFICATION	2.1694444877819638E-4	DOCUMENTATION
//        }	WITHOUT_CLASSIFICATION	0.9999788862371863	WITHOUT_CLASSIFICATION	2.1113762813598694E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9998490330036728	WITHOUT_CLASSIFICATION	1.5096699632721007E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9997662365903881	WITHOUT_CLASSIFICATION	2.3376340961195685E-4	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9998115711721423	WITHOUT_CLASSIFICATION	1.8842882785785966E-4	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999990716320308	WITHOUT_CLASSIFICATION	9.283679691952859E-7	DOCUMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999859092531957	WITHOUT_CLASSIFICATION	1.409074680417644E-5	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999986626396394	WITHOUT_CLASSIFICATION	1.337360360588346E-6	DOCUMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9998405040572811	WITHOUT_CLASSIFICATION	1.594959427188735E-4	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999666758923667	WITHOUT_CLASSIFICATION	3.332410763332918E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999887977536397	WITHOUT_CLASSIFICATION	1.1202246360188052E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999887977536397	WITHOUT_CLASSIFICATION	1.1202246360188052E-5	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9995611975777217	WITHOUT_CLASSIFICATION	4.388024222783338E-4	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999688676380893	WITHOUT_CLASSIFICATION	3.1132361910603685E-5	DOCUMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9989574946277687	WITHOUT_CLASSIFICATION	0.0010425053722312111	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999391351318088	WITHOUT_CLASSIFICATION	6.086486819123001E-5	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870070830797	WITHOUT_CLASSIFICATION	1.2992916920265401E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999426780159918	WITHOUT_CLASSIFICATION	5.7321984008191616E-5	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999990920456122	WITHOUT_CLASSIFICATION	9.079543876946884E-7	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9998043058149659	WITHOUT_CLASSIFICATION	1.9569418503401385E-4	DOCUMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9999990964520407	WITHOUT_CLASSIFICATION	9.03547959332282E-7	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9999953093286305	WITHOUT_CLASSIFICATION	4.690671369472718E-6	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999977904973767	WITHOUT_CLASSIFICATION	2.2095026232983064E-6	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9999816439265983	WITHOUT_CLASSIFICATION	1.8356073401800532E-5	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9987828064643911	WITHOUT_CLASSIFICATION	0.0012171935356088284	DOCUMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999925609821384	WITHOUT_CLASSIFICATION	7.439017861555773E-6	DOCUMENTATION
//use the id column alias	WITHOUT_CLASSIFICATION	0.9996668733568895	WITHOUT_CLASSIFICATION	3.3312664311056116E-4	DOCUMENTATION
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9997478287734589	WITHOUT_CLASSIFICATION	2.5217122654109375E-4	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9989071060171031	WITHOUT_CLASSIFICATION	0.0010928939828968502	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9998173981064912	WITHOUT_CLASSIFICATION	1.8260189350871486E-4	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9999984504932231	WITHOUT_CLASSIFICATION	1.5495067768964539E-6	DOCUMENTATION
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9987414997963416	WITHOUT_CLASSIFICATION	0.0012585002036583366	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.999995026119911	WITHOUT_CLASSIFICATION	4.973880089045777E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.999995026119911	WITHOUT_CLASSIFICATION	4.973880089045777E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.999657719851317	WITHOUT_CLASSIFICATION	3.422801486830041E-4	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999997632734534	WITHOUT_CLASSIFICATION	2.3672654658099225E-7	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9994061531822498	WITHOUT_CLASSIFICATION	5.93846817750226E-4	DOCUMENTATION
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9990131054034391	WITHOUT_CLASSIFICATION	9.868945965609182E-4	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999862539843868	WITHOUT_CLASSIFICATION	1.3746015613232609E-5	DOCUMENTATION
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999181371315573	WITHOUT_CLASSIFICATION	8.186286844264577E-5	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999824546117355	WITHOUT_CLASSIFICATION	1.7545388264485465E-5	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999998446353681	WITHOUT_CLASSIFICATION	1.553646320074056E-7	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9998758438488646	WITHOUT_CLASSIFICATION	1.241561511353254E-4	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999982083080338	WITHOUT_CLASSIFICATION	1.7916919663020289E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999497816892676	WITHOUT_CLASSIFICATION	5.021831073240791E-5	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9999999308962936	WITHOUT_CLASSIFICATION	6.910370647322324E-8	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.9999291667098976	WITHOUT_CLASSIFICATION	7.083329010241502E-5	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999994563804719	WITHOUT_CLASSIFICATION	5.436195280608301E-7	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9999901918930584	WITHOUT_CLASSIFICATION	9.808106941568807E-6	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999937984498947	WITHOUT_CLASSIFICATION	6.201550105341581E-6	DOCUMENTATION
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.9999846790282314	WITHOUT_CLASSIFICATION	1.5320971768617617E-5	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999617572561612	WITHOUT_CLASSIFICATION	3.8242743838899916E-5	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9998841873671998	WITHOUT_CLASSIFICATION	1.1581263280015284E-4	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9999941540184986	WITHOUT_CLASSIFICATION	5.845981501390484E-6	DOCUMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999963541563373	WITHOUT_CLASSIFICATION	3.6458436627126525E-6	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9999999147561957	WITHOUT_CLASSIFICATION	8.524380435617818E-8	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999998802341188	WITHOUT_CLASSIFICATION	1.1976588126951112E-7	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.9999999273443101	WITHOUT_CLASSIFICATION	7.265568986746298E-8	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9998576805531922	WITHOUT_CLASSIFICATION	1.423194468077954E-4	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9998576805531922	WITHOUT_CLASSIFICATION	1.423194468077954E-4	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999919510822942	WITHOUT_CLASSIFICATION	8.048917705722798E-6	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999918553004732	WITHOUT_CLASSIFICATION	8.144699526737437E-6	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999939817794711	WITHOUT_CLASSIFICATION	6.0182205290177255E-6	DOCUMENTATION
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.999999926558641	WITHOUT_CLASSIFICATION	7.34413589710753E-8	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9998924913826407	WITHOUT_CLASSIFICATION	1.0750861735922826E-4	DOCUMENTATION
//TODO find a decent name before documenting	DOCUMENTATION	0.9994983684922437	WITHOUT_CLASSIFICATION	5.01631507756325E-4	DOCUMENTATION
