//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999835239764195	WITHOUT_CLASSIFICATION	1.647602358044966E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999965910896013	WITHOUT_CLASSIFICATION	3.4089103986056077E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999965910896013	WITHOUT_CLASSIFICATION	3.4089103986056077E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999965910896013	WITHOUT_CLASSIFICATION	3.4089103986056077E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999965910896013	WITHOUT_CLASSIFICATION	3.4089103986056077E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999965910896013	WITHOUT_CLASSIFICATION	3.4089103986056077E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999965910896013	WITHOUT_CLASSIFICATION	3.4089103986056077E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999965910896013	WITHOUT_CLASSIFICATION	3.4089103986056077E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999946722059888	WITHOUT_CLASSIFICATION	5.3277940111293915E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999946722059888	WITHOUT_CLASSIFICATION	5.3277940111293915E-6	DOCUMENTATION
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9999657112795888	WITHOUT_CLASSIFICATION	3.4288720411184417E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999978399364898	WITHOUT_CLASSIFICATION	2.160063510035028E-6	DOCUMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999938772440805	WITHOUT_CLASSIFICATION	6.122755919477755E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999804896725788	WITHOUT_CLASSIFICATION	1.951032742126138E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999804896725788	WITHOUT_CLASSIFICATION	1.951032742126138E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999991617731614	WITHOUT_CLASSIFICATION	8.382268385723052E-7	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999995239647885	WITHOUT_CLASSIFICATION	4.760352114546723E-7	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999991465348185	WITHOUT_CLASSIFICATION	8.534651815610444E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999900323137052	WITHOUT_CLASSIFICATION	9.967686294757407E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999977850165332	WITHOUT_CLASSIFICATION	2.214983466754879E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999977850165332	WITHOUT_CLASSIFICATION	2.214983466754879E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999954181593524	WITHOUT_CLASSIFICATION	4.581840647539591E-6	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9999897065426546	WITHOUT_CLASSIFICATION	1.0293457345429477E-5	DOCUMENTATION
// decode row selection...	WITHOUT_CLASSIFICATION	0.9999988060207236	WITHOUT_CLASSIFICATION	1.193979276526729E-6	DOCUMENTATION
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999997256218749	WITHOUT_CLASSIFICATION	2.7437812521514894E-7	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999997682294711	WITHOUT_CLASSIFICATION	2.3177052875945175E-7	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999770238289059	WITHOUT_CLASSIFICATION	2.2976171094130686E-5	DOCUMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9999845026695551	WITHOUT_CLASSIFICATION	1.549733044493091E-5	DOCUMENTATION
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.99996492284591	WITHOUT_CLASSIFICATION	3.507715409003471E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999691074611404	WITHOUT_CLASSIFICATION	3.0892538859511166E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9998904117419366	WITHOUT_CLASSIFICATION	1.0958825806344738E-4	DOCUMENTATION
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999764259026024	WITHOUT_CLASSIFICATION	2.3574097397675745E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999669281325083	WITHOUT_CLASSIFICATION	3.307186749175615E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999985127413544	WITHOUT_CLASSIFICATION	1.4872586456596474E-6	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999675941382248	WITHOUT_CLASSIFICATION	3.240586177524273E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999675941382248	WITHOUT_CLASSIFICATION	3.240586177524273E-5	DOCUMENTATION
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.999999940842151	WITHOUT_CLASSIFICATION	5.915784898999518E-8	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999758802743256	WITHOUT_CLASSIFICATION	2.4119725674429927E-5	DOCUMENTATION
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999991268788377	WITHOUT_CLASSIFICATION	8.731211622513855E-7	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999999045729107	WITHOUT_CLASSIFICATION	9.542708936335175E-8	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.9999974624569058	WITHOUT_CLASSIFICATION	2.5375430941491363E-6	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9997520793888893	WITHOUT_CLASSIFICATION	2.4792061111066375E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9997520793888893	WITHOUT_CLASSIFICATION	2.4792061111066375E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999994342631428	WITHOUT_CLASSIFICATION	5.657368572581351E-7	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999999609902078	WITHOUT_CLASSIFICATION	3.9009792267464434E-8	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999999021001982	WITHOUT_CLASSIFICATION	9.789980176309066E-8	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999937401910067	WITHOUT_CLASSIFICATION	6.259808993330452E-6	DOCUMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999981398509712	WITHOUT_CLASSIFICATION	1.8601490288296971E-6	DOCUMENTATION
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950124138322	WITHOUT_CLASSIFICATION	4.987586167849089E-6	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999871656326685	WITHOUT_CLASSIFICATION	1.2834367331357568E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999980461870044	WITHOUT_CLASSIFICATION	1.95381299559401E-6	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9999610346927664	WITHOUT_CLASSIFICATION	3.896530723358253E-5	DOCUMENTATION
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9999991641359446	WITHOUT_CLASSIFICATION	8.358640552929607E-7	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9999758628787501	WITHOUT_CLASSIFICATION	2.413712124999342E-5	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9999610346927664	WITHOUT_CLASSIFICATION	3.896530723358253E-5	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9999758628787501	WITHOUT_CLASSIFICATION	2.413712124999342E-5	DOCUMENTATION
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999953425684156	WITHOUT_CLASSIFICATION	4.6574315843638065E-6	DOCUMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9999998103862278	WITHOUT_CLASSIFICATION	1.8961377229975529E-7	DOCUMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999996283808146	WITHOUT_CLASSIFICATION	3.716191854926239E-7	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999989034811069	WITHOUT_CLASSIFICATION	1.0965188931333357E-6	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999996388551228	WITHOUT_CLASSIFICATION	3.611448772424695E-7	DOCUMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999992978937645	WITHOUT_CLASSIFICATION	7.021062354614752E-7	DOCUMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9999995387401456	WITHOUT_CLASSIFICATION	4.612598544329399E-7	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9999493441091071	WITHOUT_CLASSIFICATION	5.065589089306906E-5	DOCUMENTATION
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999988964174148	WITHOUT_CLASSIFICATION	1.1035825851249477E-6	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9999973072915723	WITHOUT_CLASSIFICATION	2.6927084276481986E-6	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9999904939197617	WITHOUT_CLASSIFICATION	9.50608023830193E-6	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999949721838417	WITHOUT_CLASSIFICATION	5.027816158258351E-6	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999183412331	WITHOUT_CLASSIFICATION	8.165876679360332E-8	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9999984880102212	WITHOUT_CLASSIFICATION	1.5119897788312399E-6	DOCUMENTATION
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.999999595240777	WITHOUT_CLASSIFICATION	4.0475922303918895E-7	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999996397356089	WITHOUT_CLASSIFICATION	3.602643910437778E-7	DOCUMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9999973154946492	WITHOUT_CLASSIFICATION	2.684505350785978E-6	DOCUMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999998045788416	WITHOUT_CLASSIFICATION	1.954211583059345E-7	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.99999949027663	WITHOUT_CLASSIFICATION	5.097233699765516E-7	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999989858701558	WITHOUT_CLASSIFICATION	1.0141298441944678E-6	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999994143947832	WITHOUT_CLASSIFICATION	5.856052167770786E-7	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999964943980023	WITHOUT_CLASSIFICATION	3.5056019977331984E-6	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999969499853876	WITHOUT_CLASSIFICATION	3.0500146124072476E-6	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999953355937143	WITHOUT_CLASSIFICATION	4.664406285724259E-6	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.999999377647725	WITHOUT_CLASSIFICATION	6.223522750531615E-7	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999961183448051	WITHOUT_CLASSIFICATION	3.881655194867727E-6	DOCUMENTATION
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999988522537456	WITHOUT_CLASSIFICATION	1.1477462544606755E-6	DOCUMENTATION
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.999998608965979	WITHOUT_CLASSIFICATION	1.391034020924785E-6	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.999999843663166	WITHOUT_CLASSIFICATION	1.5633683414455254E-7	DOCUMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999997494766731	WITHOUT_CLASSIFICATION	2.5052332677371096E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.999998101723128	WITHOUT_CLASSIFICATION	1.8982768719214492E-6	DOCUMENTATION
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999988357960771	WITHOUT_CLASSIFICATION	1.1642039229232643E-6	DOCUMENTATION
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999970215942169	WITHOUT_CLASSIFICATION	2.9784057831792814E-6	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999976139531421	WITHOUT_CLASSIFICATION	2.386046857875301E-6	DOCUMENTATION
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999977192286089	WITHOUT_CLASSIFICATION	2.280771391046663E-6	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999993646388098	WITHOUT_CLASSIFICATION	6.353611902722447E-7	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999976139531421	WITHOUT_CLASSIFICATION	2.386046857875301E-6	DOCUMENTATION
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.99999975024998	WITHOUT_CLASSIFICATION	2.497500199987883E-7	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999997405326996	WITHOUT_CLASSIFICATION	2.594673004566472E-7	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999963749554274	WITHOUT_CLASSIFICATION	3.625044572561326E-6	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999961969432367	WITHOUT_CLASSIFICATION	3.8030567633462374E-6	DOCUMENTATION
// construct the cache	WITHOUT_CLASSIFICATION	0.9999973643925818	WITHOUT_CLASSIFICATION	2.6356074181994536E-6	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999994378831127	WITHOUT_CLASSIFICATION	5.621168873504044E-7	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999994378831127	WITHOUT_CLASSIFICATION	5.621168873504044E-7	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999841548593971	WITHOUT_CLASSIFICATION	1.5845140602987998E-5	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.999999958169921	WITHOUT_CLASSIFICATION	4.1830078909814146E-8	DOCUMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9999923323611258	WITHOUT_CLASSIFICATION	7.667638874110554E-6	DOCUMENTATION
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999998268482729	WITHOUT_CLASSIFICATION	1.7315172698883304E-7	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.9999992174456275	WITHOUT_CLASSIFICATION	7.825543724645752E-7	DOCUMENTATION
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.999998335281074	WITHOUT_CLASSIFICATION	1.664718926090013E-6	DOCUMENTATION
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999963411253963	WITHOUT_CLASSIFICATION	3.658874603817237E-6	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9999963467966869	WITHOUT_CLASSIFICATION	3.653203313090578E-6	DOCUMENTATION
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999991040295232	WITHOUT_CLASSIFICATION	8.959704768677906E-7	DOCUMENTATION
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999959502856234	WITHOUT_CLASSIFICATION	4.049714376703947E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999994280816557	WITHOUT_CLASSIFICATION	5.71918344251358E-7	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999994280816557	WITHOUT_CLASSIFICATION	5.71918344251358E-7	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999992117590916	WITHOUT_CLASSIFICATION	7.882409083913883E-7	DOCUMENTATION
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999980963428637	WITHOUT_CLASSIFICATION	1.9036571362954926E-6	DOCUMENTATION
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.999994794446852	WITHOUT_CLASSIFICATION	5.205553148004066E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999994280816557	WITHOUT_CLASSIFICATION	5.71918344251358E-7	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999992117590916	WITHOUT_CLASSIFICATION	7.882409083913883E-7	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999992117590916	WITHOUT_CLASSIFICATION	7.882409083913883E-7	DOCUMENTATION
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9999992976268663	WITHOUT_CLASSIFICATION	7.023731335109527E-7	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9999979264380868	WITHOUT_CLASSIFICATION	2.0735619130753416E-6	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999976601038287	WITHOUT_CLASSIFICATION	2.3398961712902884E-6	DOCUMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999996307302218	WITHOUT_CLASSIFICATION	3.692697781245719E-7	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999982860421471	WITHOUT_CLASSIFICATION	1.7139578527894155E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999982860421471	WITHOUT_CLASSIFICATION	1.7139578527894155E-6	DOCUMENTATION
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999983099977113	WITHOUT_CLASSIFICATION	1.6900022887780078E-6	DOCUMENTATION
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999966946278918	WITHOUT_CLASSIFICATION	3.3053721082749606E-6	DOCUMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999977130235653	WITHOUT_CLASSIFICATION	2.286976434722156E-6	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999975645648582	WITHOUT_CLASSIFICATION	2.4354351418861844E-6	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999975645648582	WITHOUT_CLASSIFICATION	2.4354351418861844E-6	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9999766628897234	WITHOUT_CLASSIFICATION	2.333711027657398E-5	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999991140535563	WITHOUT_CLASSIFICATION	8.859464435072283E-7	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999949282115752	WITHOUT_CLASSIFICATION	5.071788424793538E-6	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999991029570686	WITHOUT_CLASSIFICATION	8.970429313511455E-7	DOCUMENTATION
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999998641405766	WITHOUT_CLASSIFICATION	1.358594233930711E-7	DOCUMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999987659269518	WITHOUT_CLASSIFICATION	1.2340730482652298E-6	DOCUMENTATION
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.999996630289301	WITHOUT_CLASSIFICATION	3.3697106990354865E-6	DOCUMENTATION
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9999997042473152	WITHOUT_CLASSIFICATION	2.957526847247744E-7	DOCUMENTATION
//sort first by role name	WITHOUT_CLASSIFICATION	0.9999905923437057	WITHOUT_CLASSIFICATION	9.407656294421728E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999949282115752	WITHOUT_CLASSIFICATION	5.071788424793538E-6	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.999943891926219	WITHOUT_CLASSIFICATION	5.610807378099603E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899306794587	WITHOUT_CLASSIFICATION	1.0069320541288585E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899306794587	WITHOUT_CLASSIFICATION	1.0069320541288585E-5	DOCUMENTATION
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999995272094422	WITHOUT_CLASSIFICATION	4.727905578480512E-7	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999997032991236	WITHOUT_CLASSIFICATION	2.9670087634785886E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999999742458497	WITHOUT_CLASSIFICATION	2.5754150284194812E-8	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9999894699338846	WITHOUT_CLASSIFICATION	1.0530066115464465E-5	DOCUMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9999876457911352	WITHOUT_CLASSIFICATION	1.235420886470062E-5	DOCUMENTATION
//then by id	WITHOUT_CLASSIFICATION	0.9999616523063338	WITHOUT_CLASSIFICATION	3.834769366618736E-5	DOCUMENTATION
// to be safe...	WITHOUT_CLASSIFICATION	0.9999969241976476	WITHOUT_CLASSIFICATION	3.075802352360339E-6	DOCUMENTATION
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9999998610497273	WITHOUT_CLASSIFICATION	1.3895027272341367E-7	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.999997769892415	WITHOUT_CLASSIFICATION	2.230107585089771E-6	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.999997769892415	WITHOUT_CLASSIFICATION	2.230107585089771E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999977465976663	WITHOUT_CLASSIFICATION	2.2534023336785147E-6	DOCUMENTATION
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999835239764195	WITHOUT_CLASSIFICATION	1.647602358044966E-5	DOCUMENTATION
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999962216896415	WITHOUT_CLASSIFICATION	3.7783103585375428E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999965910896013	WITHOUT_CLASSIFICATION	3.4089103986056077E-6	DOCUMENTATION
// invokespecial	WITHOUT_CLASSIFICATION	0.9999986873545613	WITHOUT_CLASSIFICATION	1.3126454386810062E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999946722059888	WITHOUT_CLASSIFICATION	5.3277940111293915E-6	DOCUMENTATION
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999979789766321	WITHOUT_CLASSIFICATION	2.0210233678550336E-6	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999966197195048	WITHOUT_CLASSIFICATION	3.380280495056853E-6	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999954399355386	WITHOUT_CLASSIFICATION	4.560064461367957E-6	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999985143266557	WITHOUT_CLASSIFICATION	1.4856733443588676E-6	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9999994962900599	WITHOUT_CLASSIFICATION	5.03709940042413E-7	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9999930722309823	WITHOUT_CLASSIFICATION	6.927769017681316E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999912440120368	WITHOUT_CLASSIFICATION	8.755987963184486E-6	DOCUMENTATION
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999975860502783	WITHOUT_CLASSIFICATION	2.4139497216636034E-6	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999978399364898	WITHOUT_CLASSIFICATION	2.160063510035028E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999978040606788	WITHOUT_CLASSIFICATION	2.1959393211397327E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999978040606788	WITHOUT_CLASSIFICATION	2.1959393211397327E-6	DOCUMENTATION
// aastore // args	WITHOUT_CLASSIFICATION	0.9999971744616067	WITHOUT_CLASSIFICATION	2.8255383933697804E-6	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.999990522398575	WITHOUT_CLASSIFICATION	9.477601425051584E-6	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999998046832028	WITHOUT_CLASSIFICATION	1.9531679712358148E-7	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999961631612724	WITHOUT_CLASSIFICATION	3.836838727617569E-6	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999980980837079	WITHOUT_CLASSIFICATION	1.9019162920989783E-6	DOCUMENTATION
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999967478041981	WITHOUT_CLASSIFICATION	3.252195801956239E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999804896725788	WITHOUT_CLASSIFICATION	1.951032742126138E-5	DOCUMENTATION
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999988624333549	WITHOUT_CLASSIFICATION	1.137566645066584E-6	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999888247943066	WITHOUT_CLASSIFICATION	1.1175205693513324E-5	DOCUMENTATION
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999975411027064	WITHOUT_CLASSIFICATION	2.45889729358604E-6	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999989583576819	WITHOUT_CLASSIFICATION	1.0416423180614974E-6	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9999952035565997	WITHOUT_CLASSIFICATION	4.796443400266566E-6	DOCUMENTATION
// aaload	WITHOUT_CLASSIFICATION	0.9999962380799592	WITHOUT_CLASSIFICATION	3.761920040792804E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999963215003516	WITHOUT_CLASSIFICATION	3.6784996483288872E-6	DOCUMENTATION
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999997772231145	WITHOUT_CLASSIFICATION	2.2277688547711107E-7	DOCUMENTATION
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999957618959676	WITHOUT_CLASSIFICATION	4.2381040324335965E-6	DOCUMENTATION
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999806255946901	WITHOUT_CLASSIFICATION	1.9374405309784027E-5	DOCUMENTATION
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999982873814549	WITHOUT_CLASSIFICATION	1.7126185450800903E-6	DOCUMENTATION
// register in exception table	WITHOUT_CLASSIFICATION	0.999998849212933	WITHOUT_CLASSIFICATION	1.1507870670043716E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999965910896013	WITHOUT_CLASSIFICATION	3.4089103986056077E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999965910896013	WITHOUT_CLASSIFICATION	3.4089103986056077E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999946722059888	WITHOUT_CLASSIFICATION	5.3277940111293915E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999946722059888	WITHOUT_CLASSIFICATION	5.3277940111293915E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999912440120368	WITHOUT_CLASSIFICATION	8.755987963184486E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999978040606788	WITHOUT_CLASSIFICATION	2.1959393211397327E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999963215003516	WITHOUT_CLASSIFICATION	3.6784996483288872E-6	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999991617731614	WITHOUT_CLASSIFICATION	8.382268385723052E-7	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.999998910739796	WITHOUT_CLASSIFICATION	1.0892602040641807E-6	DOCUMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9999988996051415	WITHOUT_CLASSIFICATION	1.1003948584906708E-6	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999994347538769	WITHOUT_CLASSIFICATION	5.652461231752776E-7	DOCUMENTATION
// iload_3 // i	WITHOUT_CLASSIFICATION	0.999996605163394	WITHOUT_CLASSIFICATION	3.394836606105074E-6	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.9999993430826193	WITHOUT_CLASSIFICATION	6.569173808187579E-7	DOCUMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.999995168544105	WITHOUT_CLASSIFICATION	4.831455895043886E-6	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999976057609797	WITHOUT_CLASSIFICATION	2.394239020287041E-6	DOCUMENTATION
//swallow	WITHOUT_CLASSIFICATION	0.9999580402636425	WITHOUT_CLASSIFICATION	4.195973635745717E-5	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9999934417683082	WITHOUT_CLASSIFICATION	6.5582316917412665E-6	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.999990734231801	WITHOUT_CLASSIFICATION	9.265768199000051E-6	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.999990734231801	WITHOUT_CLASSIFICATION	9.265768199000051E-6	DOCUMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999991807667181	WITHOUT_CLASSIFICATION	8.192332819563509E-7	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999984881642056	WITHOUT_CLASSIFICATION	1.5118357945419888E-6	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9999956460496355	WITHOUT_CLASSIFICATION	4.353950364448585E-6	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999984258389158	WITHOUT_CLASSIFICATION	1.5741610840475967E-6	DOCUMENTATION
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999991145752326	WITHOUT_CLASSIFICATION	8.854247674646752E-7	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999994260205446	WITHOUT_CLASSIFICATION	5.739794554053562E-7	DOCUMENTATION
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999976031537678	WITHOUT_CLASSIFICATION	2.396846232177052E-6	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999995239647885	WITHOUT_CLASSIFICATION	4.760352114546723E-7	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999941767522346	WITHOUT_CLASSIFICATION	5.823247765420689E-6	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999983587714584	WITHOUT_CLASSIFICATION	1.6412285416611259E-6	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999983587714584	WITHOUT_CLASSIFICATION	1.6412285416611259E-6	DOCUMENTATION
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999993016518121	WITHOUT_CLASSIFICATION	6.983481879213549E-7	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999975657671935	WITHOUT_CLASSIFICATION	2.434232806513255E-6	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999994154860427	WITHOUT_CLASSIFICATION	5.845139573244872E-7	DOCUMENTATION
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.9999996554542115	WITHOUT_CLASSIFICATION	3.4454578849386263E-7	DOCUMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999913113050661	WITHOUT_CLASSIFICATION	8.688694933769333E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999946722059888	WITHOUT_CLASSIFICATION	5.3277940111293915E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999912440120368	WITHOUT_CLASSIFICATION	8.755987963184486E-6	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999978399364898	WITHOUT_CLASSIFICATION	2.160063510035028E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999963215003516	WITHOUT_CLASSIFICATION	3.6784996483288872E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999963215003516	WITHOUT_CLASSIFICATION	3.6784996483288872E-6	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999995715541236	WITHOUT_CLASSIFICATION	4.284458764400574E-7	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999995715541236	WITHOUT_CLASSIFICATION	4.284458764400574E-7	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.999995899197046	WITHOUT_CLASSIFICATION	4.100802953991532E-6	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999982784068462	WITHOUT_CLASSIFICATION	1.7215931538863878E-6	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999982784068462	WITHOUT_CLASSIFICATION	1.7215931538863878E-6	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999961047500362	WITHOUT_CLASSIFICATION	3.895249963869802E-6	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.9999885227457367	WITHOUT_CLASSIFICATION	1.1477254263335644E-5	DOCUMENTATION
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999978826562147	WITHOUT_CLASSIFICATION	2.117343785353138E-6	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.9999984107643625	WITHOUT_CLASSIFICATION	1.589235637497196E-6	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999996062207359	WITHOUT_CLASSIFICATION	3.9377926405616824E-7	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999900323137052	WITHOUT_CLASSIFICATION	9.967686294757407E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999900323137052	WITHOUT_CLASSIFICATION	9.967686294757407E-6	DOCUMENTATION
// not array	WITHOUT_CLASSIFICATION	0.9999956128504283	WITHOUT_CLASSIFICATION	4.387149571727293E-6	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.9999941643008148	WITHOUT_CLASSIFICATION	5.835699185208706E-6	DOCUMENTATION
// boolean	WITHOUT_CLASSIFICATION	0.9999962032274369	WITHOUT_CLASSIFICATION	3.7967725631533192E-6	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.999992338133899	WITHOUT_CLASSIFICATION	7.661866100976828E-6	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9999950961851204	WITHOUT_CLASSIFICATION	4.903814879562223E-6	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9999929220457692	WITHOUT_CLASSIFICATION	7.077954230899234E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999977850165332	WITHOUT_CLASSIFICATION	2.214983466754879E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999955398256682	WITHOUT_CLASSIFICATION	4.46017433169257E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999955398256682	WITHOUT_CLASSIFICATION	4.46017433169257E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999954181593524	WITHOUT_CLASSIFICATION	4.581840647539591E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999954181593524	WITHOUT_CLASSIFICATION	4.581840647539591E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999970618830087	WITHOUT_CLASSIFICATION	2.9381169911478727E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999970618830087	WITHOUT_CLASSIFICATION	2.9381169911478727E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999974281749738	WITHOUT_CLASSIFICATION	2.57182502619704E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999974281749738	WITHOUT_CLASSIFICATION	2.57182502619704E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999900323137052	WITHOUT_CLASSIFICATION	9.967686294757407E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999977850165332	WITHOUT_CLASSIFICATION	2.214983466754879E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999955398256682	WITHOUT_CLASSIFICATION	4.46017433169257E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999955398256682	WITHOUT_CLASSIFICATION	4.46017433169257E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999954181593524	WITHOUT_CLASSIFICATION	4.581840647539591E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999970618830087	WITHOUT_CLASSIFICATION	2.9381169911478727E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999970618830087	WITHOUT_CLASSIFICATION	2.9381169911478727E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999974281749738	WITHOUT_CLASSIFICATION	2.57182502619704E-6	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999985878790467	WITHOUT_CLASSIFICATION	1.4121209532718473E-6	DOCUMENTATION
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9999687373263884	WITHOUT_CLASSIFICATION	3.126267361169313E-5	DOCUMENTATION
//decrement the lock	WITHOUT_CLASSIFICATION	0.999948957148712	WITHOUT_CLASSIFICATION	5.104285128809652E-5	DOCUMENTATION
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.999999509313829	WITHOUT_CLASSIFICATION	4.906861710464021E-7	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9999945551264762	WITHOUT_CLASSIFICATION	5.444873523829594E-6	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999947380210463	WITHOUT_CLASSIFICATION	5.261978953775491E-6	DOCUMENTATION
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9999970522311404	WITHOUT_CLASSIFICATION	2.9477688595767856E-6	DOCUMENTATION
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.999999775495215	WITHOUT_CLASSIFICATION	2.24504784988658E-7	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999894614670616	WITHOUT_CLASSIFICATION	1.053853293838873E-5	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999998274239782	WITHOUT_CLASSIFICATION	1.7257602183839106E-7	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999994552389522	WITHOUT_CLASSIFICATION	5.447610477404688E-7	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999989864208508	WITHOUT_CLASSIFICATION	1.0135791491593046E-6	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999841548593971	WITHOUT_CLASSIFICATION	1.5845140602987998E-5	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999947380210463	WITHOUT_CLASSIFICATION	5.261978953775491E-6	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9999333392520021	WITHOUT_CLASSIFICATION	6.666074799779414E-5	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9999333392520021	WITHOUT_CLASSIFICATION	6.666074799779414E-5	DOCUMENTATION
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999998247174546	WITHOUT_CLASSIFICATION	1.7528254533204384E-7	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999989519073095	WITHOUT_CLASSIFICATION	1.0480926904587479E-6	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999989519073095	WITHOUT_CLASSIFICATION	1.0480926904587479E-6	DOCUMENTATION
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9999957106985885	WITHOUT_CLASSIFICATION	4.289301411451624E-6	DOCUMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999990802066071	WITHOUT_CLASSIFICATION	9.197933928026506E-7	DOCUMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.999998965082972	WITHOUT_CLASSIFICATION	1.0349170279352028E-6	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.999998714709599	WITHOUT_CLASSIFICATION	1.2852904009846518E-6	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.999998714709599	WITHOUT_CLASSIFICATION	1.2852904009846518E-6	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999997682294711	WITHOUT_CLASSIFICATION	2.3177052875945175E-7	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999997478062994	WITHOUT_CLASSIFICATION	2.521937005972473E-7	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999997478062994	WITHOUT_CLASSIFICATION	2.521937005972473E-7	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.999999637596969	WITHOUT_CLASSIFICATION	3.624030309869017E-7	DOCUMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999986633016059	WITHOUT_CLASSIFICATION	1.3366983940119994E-6	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999981380942414	WITHOUT_CLASSIFICATION	1.861905758523546E-6	DOCUMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999653181564305	WITHOUT_CLASSIFICATION	3.468184356947141E-5	DOCUMENTATION
// MUTABLE	WITHOUT_CLASSIFICATION	0.9999868990597974	WITHOUT_CLASSIFICATION	1.3100940202587783E-5	DOCUMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.9999852112431646	WITHOUT_CLASSIFICATION	1.4788756835454296E-5	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999770238289059	WITHOUT_CLASSIFICATION	2.2976171094130686E-5	DOCUMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999814660281637	WITHOUT_CLASSIFICATION	1.8533971836284956E-5	DOCUMENTATION
// TODO:	WITHOUT_CLASSIFICATION	0.9995239153078477	WITHOUT_CLASSIFICATION	4.760846921524487E-4	DOCUMENTATION
// ID	WITHOUT_CLASSIFICATION	0.9999827076346949	WITHOUT_CLASSIFICATION	1.7292365305089157E-5	DOCUMENTATION
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999652043720973	WITHOUT_CLASSIFICATION	3.47956279025763E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999691074611404	WITHOUT_CLASSIFICATION	3.0892538859511166E-5	DOCUMENTATION
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999988588402609	WITHOUT_CLASSIFICATION	1.1411597390500858E-6	DOCUMENTATION
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999995520143008	WITHOUT_CLASSIFICATION	4.4798569915324943E-7	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999997141242252	WITHOUT_CLASSIFICATION	2.8587577491352274E-7	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999691074611404	WITHOUT_CLASSIFICATION	3.0892538859511166E-5	DOCUMENTATION
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999995437349075	WITHOUT_CLASSIFICATION	4.562650924963824E-7	DOCUMENTATION
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.999999435193405	WITHOUT_CLASSIFICATION	5.648065950520361E-7	DOCUMENTATION
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999708898692157	WITHOUT_CLASSIFICATION	2.9110130784222293E-5	DOCUMENTATION
// IMPORT	WITHOUT_CLASSIFICATION	0.9999846888882513	WITHOUT_CLASSIFICATION	1.531111174870008E-5	DOCUMENTATION
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.999960687035579	WITHOUT_CLASSIFICATION	3.931296442102652E-5	DOCUMENTATION
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999431498136401	WITHOUT_CLASSIFICATION	5.6850186359887354E-5	DOCUMENTATION
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.999931860036467	WITHOUT_CLASSIFICATION	6.813996353310638E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999669281325083	WITHOUT_CLASSIFICATION	3.307186749175615E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.99996200358232	WITHOUT_CLASSIFICATION	3.799641768000649E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999985127413544	WITHOUT_CLASSIFICATION	1.4872586456596474E-6	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999978270186057	WITHOUT_CLASSIFICATION	2.1729813943756628E-6	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999987977336638	WITHOUT_CLASSIFICATION	1.2022663362374917E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.999981305420274	WITHOUT_CLASSIFICATION	1.8694579726015498E-5	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999770238289059	WITHOUT_CLASSIFICATION	2.2976171094130686E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.99996200358232	WITHOUT_CLASSIFICATION	3.799641768000649E-5	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999978270186057	WITHOUT_CLASSIFICATION	2.1729813943756628E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.999981305420274	WITHOUT_CLASSIFICATION	1.8694579726015498E-5	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999994291547939	WITHOUT_CLASSIFICATION	5.708452061150659E-7	DOCUMENTATION
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999694806430867	WITHOUT_CLASSIFICATION	3.0519356913323546E-5	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999995824237659	WITHOUT_CLASSIFICATION	4.175762342101359E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999675941382248	WITHOUT_CLASSIFICATION	3.240586177524273E-5	DOCUMENTATION
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999815238256379	WITHOUT_CLASSIFICATION	1.8476174362123814E-5	DOCUMENTATION
// column index	WITHOUT_CLASSIFICATION	0.9999971213733254	WITHOUT_CLASSIFICATION	2.878626674673045E-6	DOCUMENTATION
//column unique-key	WITHOUT_CLASSIFICATION	0.9999803507500638	WITHOUT_CLASSIFICATION	1.9649249936201734E-5	DOCUMENTATION
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9999997989187087	WITHOUT_CLASSIFICATION	2.0108129126958274E-7	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999285831433813	WITHOUT_CLASSIFICATION	7.141685661866032E-5	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999994875794939	WITHOUT_CLASSIFICATION	5.124205060150361E-7	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.999999913232678	WITHOUT_CLASSIFICATION	8.676732198306698E-8	DOCUMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.99999985476172	WITHOUT_CLASSIFICATION	1.4523827994041883E-7	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999980565482914	WITHOUT_CLASSIFICATION	1.9434517085550084E-6	DOCUMENTATION
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.999999929746572	WITHOUT_CLASSIFICATION	7.025342787282874E-8	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999845922538626	WITHOUT_CLASSIFICATION	1.540774613742659E-5	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999582302738358	WITHOUT_CLASSIFICATION	4.176972616413742E-5	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999758802743256	WITHOUT_CLASSIFICATION	2.4119725674429927E-5	DOCUMENTATION
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999992696392119	WITHOUT_CLASSIFICATION	7.303607880836524E-7	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9999819981001168	WITHOUT_CLASSIFICATION	1.8001899883261463E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.99996200358232	WITHOUT_CLASSIFICATION	3.799641768000649E-5	DOCUMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999994726665146	WITHOUT_CLASSIFICATION	5.27333485407251E-7	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999992356614587	WITHOUT_CLASSIFICATION	7.643385414066477E-7	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.9999975164216648	WITHOUT_CLASSIFICATION	2.48357833512754E-6	DOCUMENTATION
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9999993392421431	WITHOUT_CLASSIFICATION	6.607578569459234E-7	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999993460111337	WITHOUT_CLASSIFICATION	6.539888662271703E-7	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.999994809179852	WITHOUT_CLASSIFICATION	5.190820148015531E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999983488101158	WITHOUT_CLASSIFICATION	1.6511898841370856E-6	DOCUMENTATION
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999997043086474	WITHOUT_CLASSIFICATION	2.956913526085617E-7	DOCUMENTATION
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9999780393152138	WITHOUT_CLASSIFICATION	2.196068478615342E-5	DOCUMENTATION
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999735002887887	WITHOUT_CLASSIFICATION	2.6499711211319734E-5	DOCUMENTATION
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999873571709547	WITHOUT_CLASSIFICATION	1.2642829045358648E-5	DOCUMENTATION
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.999983310391483	WITHOUT_CLASSIFICATION	1.668960851692235E-5	DOCUMENTATION
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9999992471714835	WITHOUT_CLASSIFICATION	7.528285166718258E-7	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999999045729107	WITHOUT_CLASSIFICATION	9.542708936335175E-8	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.9999981497077522	WITHOUT_CLASSIFICATION	1.8502922477813579E-6	DOCUMENTATION
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999992717437938	WITHOUT_CLASSIFICATION	7.282562061426285E-7	DOCUMENTATION
// Bind the where	WITHOUT_CLASSIFICATION	0.9999954270107201	WITHOUT_CLASSIFICATION	4.572989279899029E-6	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999975349775073	WITHOUT_CLASSIFICATION	2.465022492704366E-6	DOCUMENTATION
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999979716373141	WITHOUT_CLASSIFICATION	2.028362685947611E-6	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999983795166928	WITHOUT_CLASSIFICATION	1.620483307305528E-6	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999997411871901	WITHOUT_CLASSIFICATION	2.58812809763381E-7	DOCUMENTATION
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.999998434304828	WITHOUT_CLASSIFICATION	1.5656951720547943E-6	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999943872712681	WITHOUT_CLASSIFICATION	5.6127287318399185E-6	DOCUMENTATION
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9999847245762657	WITHOUT_CLASSIFICATION	1.527542373420813E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.999955514633766	WITHOUT_CLASSIFICATION	4.4485366233946115E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.999955514633766	WITHOUT_CLASSIFICATION	4.4485366233946115E-5	DOCUMENTATION
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9999869745549436	WITHOUT_CLASSIFICATION	1.3025445056423645E-5	DOCUMENTATION
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999990831616631	WITHOUT_CLASSIFICATION	9.1683833696174E-7	DOCUMENTATION
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9999965701894387	WITHOUT_CLASSIFICATION	3.4298105612814727E-6	DOCUMENTATION
// Transaction settings:	WITHOUT_CLASSIFICATION	0.9999910738953225	WITHOUT_CLASSIFICATION	8.926104677530155E-6	DOCUMENTATION
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9999868119863216	WITHOUT_CLASSIFICATION	1.3188013678455537E-5	DOCUMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9999890073056785	WITHOUT_CLASSIFICATION	1.0992694321356954E-5	DOCUMENTATION
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999991677715072	WITHOUT_CLASSIFICATION	8.32228492731101E-7	DOCUMENTATION
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9999999290101759	WITHOUT_CLASSIFICATION	7.098982412259052E-8	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.999989055870289	WITHOUT_CLASSIFICATION	1.0944129711058127E-5	DOCUMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9999873654330256	WITHOUT_CLASSIFICATION	1.263456697449325E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.9999858716892137	WITHOUT_CLASSIFICATION	1.4128310786276033E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9999989182444023	WITHOUT_CLASSIFICATION	1.081755597718821E-6	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9999998224685376	WITHOUT_CLASSIFICATION	1.7753146241790145E-7	DOCUMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9999960420194144	WITHOUT_CLASSIFICATION	3.957980585637765E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999964842725045	WITHOUT_CLASSIFICATION	3.5157274955731164E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985464017976	WITHOUT_CLASSIFICATION	1.4535982024223456E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999993823393862	WITHOUT_CLASSIFICATION	6.176606138751567E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999972759684227	WITHOUT_CLASSIFICATION	2.7240315772647835E-6	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9999987189104974	WITHOUT_CLASSIFICATION	1.2810895025290531E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999984218002801	WITHOUT_CLASSIFICATION	1.5781997199577689E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999934959288737	WITHOUT_CLASSIFICATION	6.504071126325979E-6	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.9999934959288737	WITHOUT_CLASSIFICATION	6.504071126325979E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999549109077033	WITHOUT_CLASSIFICATION	4.5089092296747917E-5	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999549109077033	WITHOUT_CLASSIFICATION	4.5089092296747917E-5	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999943872712681	WITHOUT_CLASSIFICATION	5.6127287318399185E-6	DOCUMENTATION
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9999939635310247	WITHOUT_CLASSIFICATION	6.036468975263261E-6	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999828678164319	WITHOUT_CLASSIFICATION	1.7132183568203164E-5	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999934841203887	WITHOUT_CLASSIFICATION	6.5158796113228445E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999977465976663	WITHOUT_CLASSIFICATION	2.2534023336785147E-6	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999828678164319	WITHOUT_CLASSIFICATION	1.7132183568203164E-5	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999934841203887	WITHOUT_CLASSIFICATION	6.5158796113228445E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999889108425486	WITHOUT_CLASSIFICATION	1.1089157451341158E-5	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999976053795984	WITHOUT_CLASSIFICATION	2.394620401698829E-6	DOCUMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999920735554907	WITHOUT_CLASSIFICATION	7.926444509327016E-6	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999938195764917	WITHOUT_CLASSIFICATION	6.180423508287634E-6	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9999988818576948	WITHOUT_CLASSIFICATION	1.118142305202912E-6	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.9999898625848567	WITHOUT_CLASSIFICATION	1.0137415143281229E-5	DOCUMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999972807560711	WITHOUT_CLASSIFICATION	2.719243928919055E-6	DOCUMENTATION
//override on some subclasses	WITHOUT_CLASSIFICATION	0.999986734130537	WITHOUT_CLASSIFICATION	1.3265869462943172E-5	DOCUMENTATION
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999781864780424	WITHOUT_CLASSIFICATION	2.181352195757656E-5	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999997558802776	WITHOUT_CLASSIFICATION	2.441197224874424E-7	DOCUMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.999998059359232	WITHOUT_CLASSIFICATION	1.940640767992318E-6	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.999999742882015	WITHOUT_CLASSIFICATION	2.571179849544983E-7	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999992994276496	WITHOUT_CLASSIFICATION	7.005723503262835E-7	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9999962639394885	WITHOUT_CLASSIFICATION	3.736060511518549E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999977465976663	WITHOUT_CLASSIFICATION	2.2534023336785147E-6	DOCUMENTATION
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9999968194658335	WITHOUT_CLASSIFICATION	3.18053416638393E-6	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999914753904242	WITHOUT_CLASSIFICATION	8.524609575765953E-6	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999914753904242	WITHOUT_CLASSIFICATION	8.524609575765953E-6	DOCUMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999997710573566	WITHOUT_CLASSIFICATION	2.2894264336990857E-7	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999889108425486	WITHOUT_CLASSIFICATION	1.1089157451341158E-5	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.999997996390815	WITHOUT_CLASSIFICATION	2.00360918508847E-6	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.999999860923932	WITHOUT_CLASSIFICATION	1.390760680446769E-7	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9999970065573319	WITHOUT_CLASSIFICATION	2.993442668131591E-6	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999778352549437	WITHOUT_CLASSIFICATION	2.216474505627673E-5	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999733230714299	WITHOUT_CLASSIFICATION	2.667692857002867E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999889108425486	WITHOUT_CLASSIFICATION	1.1089157451341158E-5	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999778352549437	WITHOUT_CLASSIFICATION	2.216474505627673E-5	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999733230714299	WITHOUT_CLASSIFICATION	2.667692857002867E-5	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.9999831626346908	WITHOUT_CLASSIFICATION	1.6837365309304503E-5	DOCUMENTATION
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999899967174557	WITHOUT_CLASSIFICATION	1.000328254433186E-5	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999979937553484	WITHOUT_CLASSIFICATION	2.0062446515951053E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999889108425486	WITHOUT_CLASSIFICATION	1.1089157451341158E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999889108425486	WITHOUT_CLASSIFICATION	1.1089157451341158E-5	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.9999934839359869	WITHOUT_CLASSIFICATION	6.51606401311517E-6	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999968814415189	WITHOUT_CLASSIFICATION	3.1185584810477516E-6	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9999794541658243	WITHOUT_CLASSIFICATION	2.054583417564608E-5	DOCUMENTATION
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999990227274826	WITHOUT_CLASSIFICATION	9.772725172839122E-7	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999894430182809	WITHOUT_CLASSIFICATION	1.0556981719111648E-5	DOCUMENTATION
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999979032202606	WITHOUT_CLASSIFICATION	2.096779739434747E-6	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999998036501346	WITHOUT_CLASSIFICATION	1.9634986533111804E-7	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.999998118819691	WITHOUT_CLASSIFICATION	1.8811803089827454E-6	DOCUMENTATION
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999983335288258	WITHOUT_CLASSIFICATION	1.6664711742091645E-6	DOCUMENTATION
// then bind it	WITHOUT_CLASSIFICATION	0.9999936534039017	WITHOUT_CLASSIFICATION	6.346596098318354E-6	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.999999146364424	WITHOUT_CLASSIFICATION	8.536355759627045E-7	DOCUMENTATION
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9999970283352748	WITHOUT_CLASSIFICATION	2.971664725301541E-6	DOCUMENTATION
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999997044206167	WITHOUT_CLASSIFICATION	2.955793833393779E-7	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9999997403439645	WITHOUT_CLASSIFICATION	2.5965603539433153E-7	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996481347435	WITHOUT_CLASSIFICATION	3.5186525650888424E-6	DOCUMENTATION
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999998945677396	WITHOUT_CLASSIFICATION	1.0543226038893362E-7	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999937401910067	WITHOUT_CLASSIFICATION	6.259808993330452E-6	DOCUMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9999895613581707	WITHOUT_CLASSIFICATION	1.0438641829249022E-5	DOCUMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9999833859823006	WITHOUT_CLASSIFICATION	1.661401769945923E-5	DOCUMENTATION
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9999990058545443	WITHOUT_CLASSIFICATION	9.9414545578175E-7	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9999926286409085	WITHOUT_CLASSIFICATION	7.371359091369767E-6	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999743044715848	WITHOUT_CLASSIFICATION	2.569552841513637E-5	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999743044715848	WITHOUT_CLASSIFICATION	2.569552841513637E-5	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999937401910067	WITHOUT_CLASSIFICATION	6.259808993330452E-6	DOCUMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9999993413132772	WITHOUT_CLASSIFICATION	6.586867228574937E-7	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999990256245117	WITHOUT_CLASSIFICATION	9.743754883113015E-7	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9999932726552129	WITHOUT_CLASSIFICATION	6.7273447871089495E-6	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.999981631076974	WITHOUT_CLASSIFICATION	1.8368923025915718E-5	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999923916773469	WITHOUT_CLASSIFICATION	7.608322653182294E-6	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.999998509294043	WITHOUT_CLASSIFICATION	1.4907059571011994E-6	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9999985492719656	WITHOUT_CLASSIFICATION	1.4507280343849235E-6	DOCUMENTATION
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.999999184154017	WITHOUT_CLASSIFICATION	8.158459830854407E-7	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999999651352219	WITHOUT_CLASSIFICATION	3.486477815388579E-8	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998665693186	WITHOUT_CLASSIFICATION	1.334306813935136E-6	DOCUMENTATION
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9999956880283258	WITHOUT_CLASSIFICATION	4.311971674075611E-6	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999987701398149	WITHOUT_CLASSIFICATION	1.2298601851378728E-6	DOCUMENTATION
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999979715908413	WITHOUT_CLASSIFICATION	2.028409158858034E-6	DOCUMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9999643415189851	WITHOUT_CLASSIFICATION	3.565848101496958E-5	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999998437921696	WITHOUT_CLASSIFICATION	1.5620783046308327E-7	DOCUMENTATION
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996499151512	WITHOUT_CLASSIFICATION	3.500848487976366E-7	DOCUMENTATION
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9999960816948438	WITHOUT_CLASSIFICATION	3.918305156187684E-6	DOCUMENTATION
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9999998685433149	WITHOUT_CLASSIFICATION	1.3145668505465764E-7	DOCUMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9994476135848842	WITHOUT_CLASSIFICATION	5.523864151158089E-4	DOCUMENTATION
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986148867475	WITHOUT_CLASSIFICATION	1.3851132524754426E-6	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999997085686625	WITHOUT_CLASSIFICATION	2.914313374865687E-7	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9999983743147463	WITHOUT_CLASSIFICATION	1.6256852537321045E-6	DOCUMENTATION
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999995548169119	WITHOUT_CLASSIFICATION	4.451830880583175E-7	DOCUMENTATION
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999980493825241	WITHOUT_CLASSIFICATION	1.950617475876338E-6	DOCUMENTATION
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999963830712373	WITHOUT_CLASSIFICATION	3.61692876279494E-6	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999947267588334	WITHOUT_CLASSIFICATION	5.2732411666430964E-6	DOCUMENTATION
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996780147613	WITHOUT_CLASSIFICATION	3.2198523871331917E-6	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999850400663591	WITHOUT_CLASSIFICATION	1.4959933640967687E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999856307512436	WITHOUT_CLASSIFICATION	1.4369248756441392E-5	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999842901666339	WITHOUT_CLASSIFICATION	1.5709833366052908E-5	DOCUMENTATION
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999965904216211	WITHOUT_CLASSIFICATION	3.40957837883739E-6	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9999982022315093	WITHOUT_CLASSIFICATION	1.797768490619168E-6	DOCUMENTATION
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9999984176015205	WITHOUT_CLASSIFICATION	1.5823984794808256E-6	DOCUMENTATION
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999969100397343	WITHOUT_CLASSIFICATION	3.0899602656133317E-6	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985331562818	WITHOUT_CLASSIFICATION	1.4668437180627055E-6	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996486223263	WITHOUT_CLASSIFICATION	3.5137767369434825E-6	DOCUMENTATION
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999927306330149	WITHOUT_CLASSIFICATION	7.269366985145647E-6	DOCUMENTATION
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999939343021677	WITHOUT_CLASSIFICATION	6.065697832393051E-6	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999965621614049	WITHOUT_CLASSIFICATION	3.4378385952015492E-6	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999945733832715	WITHOUT_CLASSIFICATION	5.426616728498489E-6	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999833552075087	WITHOUT_CLASSIFICATION	1.6644792491311807E-5	DOCUMENTATION
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.999994817891332	WITHOUT_CLASSIFICATION	5.182108668049981E-6	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987565300101	WITHOUT_CLASSIFICATION	1.243469989802813E-6	DOCUMENTATION
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9999997472762876	WITHOUT_CLASSIFICATION	2.5272371246410345E-7	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999988869773385	WITHOUT_CLASSIFICATION	1.1130226614830694E-6	DOCUMENTATION
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999997652005989	WITHOUT_CLASSIFICATION	2.3479940124178813E-7	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999955998795621	WITHOUT_CLASSIFICATION	4.400120437919177E-6	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.999978548107908	WITHOUT_CLASSIFICATION	2.1451892092060144E-5	DOCUMENTATION
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.999995148575773	WITHOUT_CLASSIFICATION	4.851424226980618E-6	DOCUMENTATION
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.9999934598769645	WITHOUT_CLASSIFICATION	6.540123035588439E-6	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999800145812228	WITHOUT_CLASSIFICATION	1.9985418777309982E-5	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999854231430667	WITHOUT_CLASSIFICATION	1.4576856933175604E-5	DOCUMENTATION
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999728742015455	WITHOUT_CLASSIFICATION	2.7125798454508357E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998665693186	WITHOUT_CLASSIFICATION	1.334306813935136E-6	DOCUMENTATION
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999855307251048	WITHOUT_CLASSIFICATION	1.4469274895197337E-5	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999800808792846	WITHOUT_CLASSIFICATION	1.9919120715370124E-5	DOCUMENTATION
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9999992681894694	WITHOUT_CLASSIFICATION	7.318105305115415E-7	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9999986029876559	WITHOUT_CLASSIFICATION	1.3970123441414636E-6	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.999996657726574	WITHOUT_CLASSIFICATION	3.342273425941903E-6	DOCUMENTATION
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999825905548402	WITHOUT_CLASSIFICATION	1.7409445159808117E-5	DOCUMENTATION
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.99999832665585	WITHOUT_CLASSIFICATION	1.67334415009281E-6	DOCUMENTATION
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960231484549	WITHOUT_CLASSIFICATION	3.976851545097596E-6	DOCUMENTATION
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999925427693327	WITHOUT_CLASSIFICATION	7.457230667205262E-6	DOCUMENTATION
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99998481268649	WITHOUT_CLASSIFICATION	1.5187313510174917E-5	DOCUMENTATION
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999961046454137	WITHOUT_CLASSIFICATION	3.895354586345883E-6	DOCUMENTATION
// not null is implicit	WITHOUT_CLASSIFICATION	0.9999982997340141	WITHOUT_CLASSIFICATION	1.700265985988293E-6	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9999998405531018	WITHOUT_CLASSIFICATION	1.5944689813333674E-7	DOCUMENTATION
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.9999991622934141	WITHOUT_CLASSIFICATION	8.377065858151757E-7	DOCUMENTATION
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999988626365328	WITHOUT_CLASSIFICATION	1.1373634671040508E-6	DOCUMENTATION
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989531925716	WITHOUT_CLASSIFICATION	1.0468074284827731E-6	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999988756931153	WITHOUT_CLASSIFICATION	1.1243068846961615E-6	DOCUMENTATION
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9999990583549375	WITHOUT_CLASSIFICATION	9.416450625001319E-7	DOCUMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999983464233314	WITHOUT_CLASSIFICATION	1.653576668679069E-6	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999998275125523	WITHOUT_CLASSIFICATION	1.724874476299036E-7	DOCUMENTATION
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9999996150668778	WITHOUT_CLASSIFICATION	3.8493312216064E-7	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9999999351372153	WITHOUT_CLASSIFICATION	6.486278468349345E-8	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9999968924617345	WITHOUT_CLASSIFICATION	3.107538265536165E-6	DOCUMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9999979265165423	WITHOUT_CLASSIFICATION	2.07348345774951E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998665693186	WITHOUT_CLASSIFICATION	1.334306813935136E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999955998795621	WITHOUT_CLASSIFICATION	4.400120437919177E-6	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999992340264544	WITHOUT_CLASSIFICATION	7.659735456443255E-7	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.999999220904295	WITHOUT_CLASSIFICATION	7.79095704953327E-7	DOCUMENTATION
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999989073587501	WITHOUT_CLASSIFICATION	1.0926412498688156E-6	DOCUMENTATION
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999986962047674	WITHOUT_CLASSIFICATION	1.3037952326250067E-6	DOCUMENTATION
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999995682949205	WITHOUT_CLASSIFICATION	4.317050794307059E-7	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999984402973987	WITHOUT_CLASSIFICATION	1.5597026013409783E-6	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9999909709305926	WITHOUT_CLASSIFICATION	9.029069407303951E-6	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9999956406979064	WITHOUT_CLASSIFICATION	4.359302093613603E-6	DOCUMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999985103235207	WITHOUT_CLASSIFICATION	1.4896764793301883E-6	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999995492165048	WITHOUT_CLASSIFICATION	4.507834951402529E-7	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999994892529611	WITHOUT_CLASSIFICATION	5.107470388951849E-7	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999997093524883	WITHOUT_CLASSIFICATION	2.9064751178833065E-7	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999996978021911	WITHOUT_CLASSIFICATION	3.0219780892576994E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998665693186	WITHOUT_CLASSIFICATION	1.334306813935136E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998665693186	WITHOUT_CLASSIFICATION	1.334306813935136E-6	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999998319769611	WITHOUT_CLASSIFICATION	1.6802303885903278E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999995838563187	WITHOUT_CLASSIFICATION	4.1614368131216476E-7	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999980915377061	WITHOUT_CLASSIFICATION	1.9084622938447328E-6	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9999901064801135	WITHOUT_CLASSIFICATION	9.893519886567964E-6	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999985631441364	WITHOUT_CLASSIFICATION	1.43685586362579E-6	DOCUMENTATION
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.999999871423551	WITHOUT_CLASSIFICATION	1.285764490907505E-7	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9999982513496004	WITHOUT_CLASSIFICATION	1.7486503995713274E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998665693186	WITHOUT_CLASSIFICATION	1.334306813935136E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999988543164494	WITHOUT_CLASSIFICATION	1.1456835505939619E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9999961466319374	WITHOUT_CLASSIFICATION	3.853368062660954E-6	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9999972610529547	WITHOUT_CLASSIFICATION	2.7389470453566653E-6	DOCUMENTATION
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999726115028402	WITHOUT_CLASSIFICATION	2.7388497159796264E-5	DOCUMENTATION
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9999993442937982	WITHOUT_CLASSIFICATION	6.557062017040891E-7	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999967013646923	WITHOUT_CLASSIFICATION	3.298635307614388E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9998904117419366	WITHOUT_CLASSIFICATION	1.0958825806344738E-4	DOCUMENTATION
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9999852866390998	WITHOUT_CLASSIFICATION	1.4713360900082891E-5	DOCUMENTATION
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9999837773792648	WITHOUT_CLASSIFICATION	1.622262073519311E-5	DOCUMENTATION
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.999999293339195	WITHOUT_CLASSIFICATION	7.066608050407274E-7	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999955998795621	WITHOUT_CLASSIFICATION	4.400120437919177E-6	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999997205867787	WITHOUT_CLASSIFICATION	2.794132213548633E-7	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999999700792734	WITHOUT_CLASSIFICATION	2.992072652723656E-8	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999993265883367	WITHOUT_CLASSIFICATION	6.73411663313672E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999955998795621	WITHOUT_CLASSIFICATION	4.400120437919177E-6	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999935820132881	WITHOUT_CLASSIFICATION	6.417986711843992E-6	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999988543164494	WITHOUT_CLASSIFICATION	1.1456835505939619E-6	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9999970341079406	WITHOUT_CLASSIFICATION	2.9658920594339417E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998665693186	WITHOUT_CLASSIFICATION	1.334306813935136E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9999979536003141	WITHOUT_CLASSIFICATION	2.0463996858895396E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998665693186	WITHOUT_CLASSIFICATION	1.334306813935136E-6	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999998130946463	WITHOUT_CLASSIFICATION	1.8690535380841447E-7	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999995492165048	WITHOUT_CLASSIFICATION	4.507834951402529E-7	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999994892529611	WITHOUT_CLASSIFICATION	5.107470388951849E-7	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999997093524883	WITHOUT_CLASSIFICATION	2.9064751178833065E-7	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999994984408743	WITHOUT_CLASSIFICATION	5.015591255958126E-7	DOCUMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.9999949735749184	WITHOUT_CLASSIFICATION	5.026425081578012E-6	DOCUMENTATION
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999931902123896	WITHOUT_CLASSIFICATION	6.809787610353676E-6	DOCUMENTATION
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999955531881012	WITHOUT_CLASSIFICATION	4.446811898770942E-6	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999999140683375	WITHOUT_CLASSIFICATION	8.593166242966074E-8	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998665693186	WITHOUT_CLASSIFICATION	1.334306813935136E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999955998795621	WITHOUT_CLASSIFICATION	4.400120437919177E-6	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999996978021911	WITHOUT_CLASSIFICATION	3.0219780892576994E-7	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999998319769611	WITHOUT_CLASSIFICATION	1.6802303885903278E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999872863689204	WITHOUT_CLASSIFICATION	1.2713631079687458E-5	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996453175642	WITHOUT_CLASSIFICATION	3.546824358082668E-6	DOCUMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999974893156213	WITHOUT_CLASSIFICATION	2.510684378784187E-6	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9999964732448544	WITHOUT_CLASSIFICATION	3.526755145515571E-6	DOCUMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9999980875277772	WITHOUT_CLASSIFICATION	1.9124722228368166E-6	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9999998149503825	WITHOUT_CLASSIFICATION	1.8504961747262262E-7	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999833552075087	WITHOUT_CLASSIFICATION	1.6644792491311807E-5	DOCUMENTATION
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999849885107083	WITHOUT_CLASSIFICATION	1.501148929166219E-5	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9999989601675894	WITHOUT_CLASSIFICATION	1.0398324105395964E-6	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9999987256131696	WITHOUT_CLASSIFICATION	1.2743868304049706E-6	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999995034619071	WITHOUT_CLASSIFICATION	4.965380928679259E-7	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.999999281591434	WITHOUT_CLASSIFICATION	7.184085660006246E-7	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999850400663591	WITHOUT_CLASSIFICATION	1.4959933640967687E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999856307512436	WITHOUT_CLASSIFICATION	1.4369248756441392E-5	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985331562818	WITHOUT_CLASSIFICATION	1.4668437180627055E-6	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.999999281591434	WITHOUT_CLASSIFICATION	7.184085660006246E-7	DOCUMENTATION
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999991328978414	WITHOUT_CLASSIFICATION	8.67102158598317E-7	DOCUMENTATION
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999994602332811	WITHOUT_CLASSIFICATION	5.397667189337461E-7	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999959007016122	WITHOUT_CLASSIFICATION	4.099298387798447E-6	DOCUMENTATION
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999861047618108	WITHOUT_CLASSIFICATION	1.3895238189075458E-5	DOCUMENTATION
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999996652941678	WITHOUT_CLASSIFICATION	3.347058321372535E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998665693186	WITHOUT_CLASSIFICATION	1.334306813935136E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998665693186	WITHOUT_CLASSIFICATION	1.334306813935136E-6	DOCUMENTATION
/*<String>*/	WITHOUT_CLASSIFICATION	0.9999112927333103	WITHOUT_CLASSIFICATION	8.870726668972527E-5	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996486223263	WITHOUT_CLASSIFICATION	3.5137767369434825E-6	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999965621614049	WITHOUT_CLASSIFICATION	3.4378385952015492E-6	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999998275125523	WITHOUT_CLASSIFICATION	1.724874476299036E-7	DOCUMENTATION
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9999958059933626	WITHOUT_CLASSIFICATION	4.194006637404449E-6	DOCUMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999998114389813	WITHOUT_CLASSIFICATION	1.8856101876680474E-7	DOCUMENTATION
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999975052691473	WITHOUT_CLASSIFICATION	2.4947308527035482E-6	DOCUMENTATION
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999826572354448	WITHOUT_CLASSIFICATION	1.7342764555193672E-5	DOCUMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999989897367919	WITHOUT_CLASSIFICATION	1.0102632080010622E-6	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.999999013628547	WITHOUT_CLASSIFICATION	9.863714529308894E-7	DOCUMENTATION
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9999814594225866	WITHOUT_CLASSIFICATION	1.8540577413330927E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9999258645378671	WITHOUT_CLASSIFICATION	7.413546213287948E-5	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999999651352219	WITHOUT_CLASSIFICATION	3.486477815388579E-8	DOCUMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999963798234206	WITHOUT_CLASSIFICATION	3.620176579441223E-6	DOCUMENTATION
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999996197489559	WITHOUT_CLASSIFICATION	3.8025104406348386E-7	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.999998378846767	WITHOUT_CLASSIFICATION	1.621153232981412E-6	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999962786206559	WITHOUT_CLASSIFICATION	3.7213793441134818E-6	DOCUMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.999999396185147	WITHOUT_CLASSIFICATION	6.03814852961174E-7	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9999875624010656	WITHOUT_CLASSIFICATION	1.2437598934411101E-5	DOCUMENTATION
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999948825875535	WITHOUT_CLASSIFICATION	5.1174124464954795E-6	DOCUMENTATION
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999969220430358	WITHOUT_CLASSIFICATION	3.0779569642279236E-6	DOCUMENTATION
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999998182273364	WITHOUT_CLASSIFICATION	1.8177266365423577E-7	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.999998886983441	WITHOUT_CLASSIFICATION	1.1130165590041498E-6	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9996776024660338	WITHOUT_CLASSIFICATION	3.223975339662637E-4	DOCUMENTATION
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999994640267469	WITHOUT_CLASSIFICATION	5.359732531693236E-7	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999994508602837	WITHOUT_CLASSIFICATION	5.491397163031944E-7	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999995330810314	WITHOUT_CLASSIFICATION	4.669189685460995E-7	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999997884555951	WITHOUT_CLASSIFICATION	2.1154440483162718E-7	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9999992806103947	WITHOUT_CLASSIFICATION	7.193896054310055E-7	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.999996400764242	WITHOUT_CLASSIFICATION	3.599235757941468E-6	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999997513477238	WITHOUT_CLASSIFICATION	2.4865227623106444E-7	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999928049617933	WITHOUT_CLASSIFICATION	7.195038206735295E-6	DOCUMENTATION
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999998749874288	WITHOUT_CLASSIFICATION	1.2501257125264948E-7	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991775612714	WITHOUT_CLASSIFICATION	8.224387285059916E-7	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999997765714554	WITHOUT_CLASSIFICATION	2.2342854442740665E-7	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.999999782197896	WITHOUT_CLASSIFICATION	2.1780210411639978E-7	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999995659588035	WITHOUT_CLASSIFICATION	4.3404119645566004E-7	DOCUMENTATION
// continue loop	WITHOUT_CLASSIFICATION	0.9999984590013821	WITHOUT_CLASSIFICATION	1.5409986179007445E-6	DOCUMENTATION
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9999911003569256	WITHOUT_CLASSIFICATION	8.899643074307058E-6	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9999910053087091	WITHOUT_CLASSIFICATION	8.994691290902426E-6	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999995745273539	WITHOUT_CLASSIFICATION	4.2547264604862745E-7	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.9999996943723288	WITHOUT_CLASSIFICATION	3.0562767123269264E-7	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9999942902976819	WITHOUT_CLASSIFICATION	5.709702318138423E-6	DOCUMENTATION
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999995898540912	WITHOUT_CLASSIFICATION	4.1014590872350996E-7	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9999993076435774	WITHOUT_CLASSIFICATION	6.923564226825786E-7	DOCUMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9999973350195832	WITHOUT_CLASSIFICATION	2.6649804167585582E-6	DOCUMENTATION
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999975432279451	WITHOUT_CLASSIFICATION	2.456772054867789E-6	DOCUMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999985209325963	WITHOUT_CLASSIFICATION	1.4790674037458633E-6	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999965124551609	WITHOUT_CLASSIFICATION	3.487544838999581E-6	DOCUMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999997142221014	WITHOUT_CLASSIFICATION	2.85777898546037E-7	DOCUMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999967465450056	WITHOUT_CLASSIFICATION	3.253454994485708E-6	DOCUMENTATION
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999854918376774	WITHOUT_CLASSIFICATION	1.4508162322662135E-5	DOCUMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999996560324981	WITHOUT_CLASSIFICATION	3.4396750193941864E-7	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.999999947481726	WITHOUT_CLASSIFICATION	5.251827390422543E-8	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9999821021499832	WITHOUT_CLASSIFICATION	1.7897850016829843E-5	DOCUMENTATION
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9999939621338803	WITHOUT_CLASSIFICATION	6.037866119709247E-6	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999972409533862	WITHOUT_CLASSIFICATION	2.7590466138986E-6	DOCUMENTATION
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9999942788626133	WITHOUT_CLASSIFICATION	5.721137386741512E-6	DOCUMENTATION
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9999989870641592	WITHOUT_CLASSIFICATION	1.0129358407873504E-6	DOCUMENTATION
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999990869628037	WITHOUT_CLASSIFICATION	9.130371961883865E-7	DOCUMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999994727398295	WITHOUT_CLASSIFICATION	5.272601705406267E-7	DOCUMENTATION
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999979307061773	WITHOUT_CLASSIFICATION	2.0692938226844463E-6	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9999995801919302	WITHOUT_CLASSIFICATION	4.1980806975080395E-7	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999996904763979	WITHOUT_CLASSIFICATION	3.09523602070936E-7	DOCUMENTATION
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999992624517309	WITHOUT_CLASSIFICATION	7.375482691874951E-7	DOCUMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999992306100917	WITHOUT_CLASSIFICATION	7.693899082775792E-7	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999997777473373	WITHOUT_CLASSIFICATION	2.2225266260139947E-7	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999999017670111	WITHOUT_CLASSIFICATION	9.823298882343781E-8	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.99999976737717	WITHOUT_CLASSIFICATION	2.32622830066537E-7	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9999969734160845	WITHOUT_CLASSIFICATION	3.026583915513633E-6	DOCUMENTATION
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999989278689857	WITHOUT_CLASSIFICATION	1.0721310143151974E-6	DOCUMENTATION
//unwrap the object	WITHOUT_CLASSIFICATION	0.9999909599590936	WITHOUT_CLASSIFICATION	9.040040906308927E-6	DOCUMENTATION
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999947642217666	WITHOUT_CLASSIFICATION	5.235778233367707E-6	DOCUMENTATION
//return the proxied object	WITHOUT_CLASSIFICATION	0.9999933648960645	WITHOUT_CLASSIFICATION	6.6351039354304916E-6	DOCUMENTATION
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999926508827188	WITHOUT_CLASSIFICATION	7.349117281110224E-6	DOCUMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.9999972846155837	WITHOUT_CLASSIFICATION	2.715384416285758E-6	DOCUMENTATION
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999982890489201	WITHOUT_CLASSIFICATION	1.7109510798480222E-6	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9999965219736003	WITHOUT_CLASSIFICATION	3.478026399713014E-6	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.999996845716901	WITHOUT_CLASSIFICATION	3.1542830990958395E-6	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999983678315082	WITHOUT_CLASSIFICATION	1.6321684918718893E-6	DOCUMENTATION
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999962679730845	WITHOUT_CLASSIFICATION	3.7320269154710015E-6	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9999876924771112	WITHOUT_CLASSIFICATION	1.2307522888980723E-5	DOCUMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9999893858019044	WITHOUT_CLASSIFICATION	1.0614198095550042E-5	DOCUMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999996102930916	WITHOUT_CLASSIFICATION	3.8970690837597915E-7	DOCUMENTATION
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.99999876134863	WITHOUT_CLASSIFICATION	1.238651370053962E-6	DOCUMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999972668686398	WITHOUT_CLASSIFICATION	2.7331313602186857E-6	DOCUMENTATION
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999993022502457	WITHOUT_CLASSIFICATION	6.977497542707204E-7	DOCUMENTATION
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999977331816515	WITHOUT_CLASSIFICATION	2.2668183484920543E-6	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9999871157672733	WITHOUT_CLASSIFICATION	1.2884232726793971E-5	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9999966265816759	WITHOUT_CLASSIFICATION	3.3734183240551776E-6	DOCUMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9999971107335084	WITHOUT_CLASSIFICATION	2.8892664915307815E-6	DOCUMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999983442135376	WITHOUT_CLASSIFICATION	1.655786462346875E-6	DOCUMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999940929099743	WITHOUT_CLASSIFICATION	5.9070900257315505E-6	DOCUMENTATION
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.99998164508455	WITHOUT_CLASSIFICATION	1.835491544994992E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999673669236527	WITHOUT_CLASSIFICATION	3.263307634736056E-5	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9999981745949799	WITHOUT_CLASSIFICATION	1.8254050201888366E-6	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9999465056809423	WITHOUT_CLASSIFICATION	5.349431905760316E-5	DOCUMENTATION
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9999768547167772	WITHOUT_CLASSIFICATION	2.3145283222759674E-5	DOCUMENTATION
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9999862061329086	WITHOUT_CLASSIFICATION	1.3793867091497907E-5	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999529816962581	WITHOUT_CLASSIFICATION	4.701830374191872E-5	DOCUMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9999810144232876	WITHOUT_CLASSIFICATION	1.8985576712329475E-5	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999971415924553	WITHOUT_CLASSIFICATION	2.8584075445669986E-6	DOCUMENTATION
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999998234967628	WITHOUT_CLASSIFICATION	1.7650323735068952E-7	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999951302166156	WITHOUT_CLASSIFICATION	4.869783384383238E-6	DOCUMENTATION
// We've been here before	WITHOUT_CLASSIFICATION	0.9999804935804928	WITHOUT_CLASSIFICATION	1.950641950721939E-5	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999916720737901	WITHOUT_CLASSIFICATION	8.32792620985168E-6	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999951302166156	WITHOUT_CLASSIFICATION	4.869783384383238E-6	DOCUMENTATION
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999994107197205	WITHOUT_CLASSIFICATION	5.892802794839298E-7	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999984180211716	WITHOUT_CLASSIFICATION	1.5819788283806476E-6	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9999989991779258	WITHOUT_CLASSIFICATION	1.0008220742892957E-6	DOCUMENTATION
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9999981093531296	WITHOUT_CLASSIFICATION	1.890646870417915E-6	DOCUMENTATION
// force initialize!	WITHOUT_CLASSIFICATION	0.999997110684931	WITHOUT_CLASSIFICATION	2.8893150689750595E-6	DOCUMENTATION
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999977125796572	WITHOUT_CLASSIFICATION	2.2874203428057276E-6	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9997940388520269	WITHOUT_CLASSIFICATION	2.0596114797310775E-4	DOCUMENTATION
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999985429471654	WITHOUT_CLASSIFICATION	1.4570528346543016E-6	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999991403927766	WITHOUT_CLASSIFICATION	8.596072233600122E-7	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999608737315704	WITHOUT_CLASSIFICATION	3.912626842969971E-5	DOCUMENTATION
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999811534246662	WITHOUT_CLASSIFICATION	1.884657533379381E-5	DOCUMENTATION
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999985217412038	WITHOUT_CLASSIFICATION	1.4782587961587388E-6	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9999998999867302	WITHOUT_CLASSIFICATION	1.0001326985000004E-7	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999986814282377	WITHOUT_CLASSIFICATION	1.3185717623312805E-6	DOCUMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999997154530506	WITHOUT_CLASSIFICATION	2.8454694934178694E-7	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9999992656824926	WITHOUT_CLASSIFICATION	7.343175074493709E-7	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9999763224523676	WITHOUT_CLASSIFICATION	2.367754763247906E-5	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9999763224523676	WITHOUT_CLASSIFICATION	2.367754763247906E-5	DOCUMENTATION
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999991148526058	WITHOUT_CLASSIFICATION	8.851473942160698E-7	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9999633768341492	WITHOUT_CLASSIFICATION	3.662316585085825E-5	DOCUMENTATION
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9999699007262068	WITHOUT_CLASSIFICATION	3.009927379323927E-5	DOCUMENTATION
//re-snapshot	WITHOUT_CLASSIFICATION	0.9999745192366069	WITHOUT_CLASSIFICATION	2.5480763393182798E-5	DOCUMENTATION
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999968501100477	WITHOUT_CLASSIFICATION	3.1498899523557505E-6	DOCUMENTATION
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9999974645183954	WITHOUT_CLASSIFICATION	2.5354816045422975E-6	DOCUMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9999869250725429	WITHOUT_CLASSIFICATION	1.3074927457117816E-5	DOCUMENTATION
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999997108526362	WITHOUT_CLASSIFICATION	2.8914736390185126E-7	DOCUMENTATION
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999988250306815	WITHOUT_CLASSIFICATION	1.1749693184932591E-6	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999967836229048	WITHOUT_CLASSIFICATION	3.2163770951881517E-6	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.999998921421668	WITHOUT_CLASSIFICATION	1.0785783319320604E-6	DOCUMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.999999554351206	WITHOUT_CLASSIFICATION	4.456487940011722E-7	DOCUMENTATION
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9999922095136349	WITHOUT_CLASSIFICATION	7.790486365068349E-6	DOCUMENTATION
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9999991419359282	WITHOUT_CLASSIFICATION	8.580640718011878E-7	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999892827646243	WITHOUT_CLASSIFICATION	1.0717235375691474E-5	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9999875624010656	WITHOUT_CLASSIFICATION	1.2437598934411101E-5	DOCUMENTATION
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9999971917859481	WITHOUT_CLASSIFICATION	2.8082140518857118E-6	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999939944303524	WITHOUT_CLASSIFICATION	6.0055696476526756E-6	DOCUMENTATION
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9999918628734001	WITHOUT_CLASSIFICATION	8.13712659990414E-6	DOCUMENTATION
//do the test	WITHOUT_CLASSIFICATION	0.9999865314665907	WITHOUT_CLASSIFICATION	1.3468533409348645E-5	DOCUMENTATION
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999989160672497	WITHOUT_CLASSIFICATION	1.0839327503244984E-6	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.999978155529302	WITHOUT_CLASSIFICATION	2.184447069793271E-5	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999988014772359	WITHOUT_CLASSIFICATION	1.1985227641248296E-6	DOCUMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.999999460087468	WITHOUT_CLASSIFICATION	5.399125321097673E-7	DOCUMENTATION
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999990877671014	WITHOUT_CLASSIFICATION	9.122328985775101E-7	DOCUMENTATION
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999993172902858	WITHOUT_CLASSIFICATION	6.827097141825104E-7	DOCUMENTATION
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.99999977176453	WITHOUT_CLASSIFICATION	2.2823546991519844E-7	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.999996999037888	WITHOUT_CLASSIFICATION	3.0009621120979085E-6	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999999638695972	WITHOUT_CLASSIFICATION	3.613040279276263E-8	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9999716539134953	WITHOUT_CLASSIFICATION	2.8346086504822656E-5	DOCUMENTATION
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999842840157711	WITHOUT_CLASSIFICATION	1.5715984228956966E-5	DOCUMENTATION
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9999927747362134	WITHOUT_CLASSIFICATION	7.225263786529301E-6	DOCUMENTATION
//count++;	WITHOUT_CLASSIFICATION	0.9999400301285024	WITHOUT_CLASSIFICATION	5.9969871497713054E-5	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.999988851036076	WITHOUT_CLASSIFICATION	1.1148963924054514E-5	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999836853017282	WITHOUT_CLASSIFICATION	1.631469827170735E-5	DOCUMENTATION
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999848443975989	WITHOUT_CLASSIFICATION	1.5155602400969271E-5	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9999802640912073	WITHOUT_CLASSIFICATION	1.9735908792696828E-5	DOCUMENTATION
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999888138851862	WITHOUT_CLASSIFICATION	1.1186114813802635E-5	DOCUMENTATION
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999982196921613	WITHOUT_CLASSIFICATION	1.7803078386288656E-6	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999990287420858	WITHOUT_CLASSIFICATION	9.712579141880637E-7	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999979382164083	WITHOUT_CLASSIFICATION	2.0617835917154864E-6	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.9999949811438847	WITHOUT_CLASSIFICATION	5.018856115235073E-6	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999971497301742	WITHOUT_CLASSIFICATION	2.8502698258989562E-6	DOCUMENTATION
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.999999654513978	WITHOUT_CLASSIFICATION	3.4548602208692334E-7	DOCUMENTATION
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999949463916747	WITHOUT_CLASSIFICATION	5.053608325262143E-6	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999998116327256	WITHOUT_CLASSIFICATION	1.8836727441544673E-7	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999959630414404	WITHOUT_CLASSIFICATION	4.036958559563304E-6	DOCUMENTATION
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986957789957	WITHOUT_CLASSIFICATION	1.3042210042389365E-6	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983126225583	WITHOUT_CLASSIFICATION	1.6873774416729483E-6	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.999999901085677	WITHOUT_CLASSIFICATION	9.891432290694977E-8	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999976142882091	WITHOUT_CLASSIFICATION	2.3857117909036745E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9999258645378671	WITHOUT_CLASSIFICATION	7.413546213287948E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9999258645378671	WITHOUT_CLASSIFICATION	7.413546213287948E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999976365851405	WITHOUT_CLASSIFICATION	2.363414859565204E-6	DOCUMENTATION
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9999998691081289	WITHOUT_CLASSIFICATION	1.308918711589832E-7	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999961859982648	WITHOUT_CLASSIFICATION	3.8140017351268274E-6	DOCUMENTATION
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999949139825176	WITHOUT_CLASSIFICATION	5.086017482355954E-6	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999961859982648	WITHOUT_CLASSIFICATION	3.8140017351268274E-6	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999990131377368	WITHOUT_CLASSIFICATION	9.868622632019014E-7	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999968076755568	WITHOUT_CLASSIFICATION	3.1923244432581944E-6	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9999983632249932	WITHOUT_CLASSIFICATION	1.63677500675293E-6	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999993150378587	WITHOUT_CLASSIFICATION	6.849621412251628E-7	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999985640573633	WITHOUT_CLASSIFICATION	1.435942636714138E-6	DOCUMENTATION
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999910753968864	WITHOUT_CLASSIFICATION	8.924603113700935E-6	DOCUMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999987417939987	WITHOUT_CLASSIFICATION	1.2582060012375008E-6	DOCUMENTATION
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999954289695964	WITHOUT_CLASSIFICATION	4.571030403645465E-6	DOCUMENTATION
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999980491815443	WITHOUT_CLASSIFICATION	1.950818455586502E-6	DOCUMENTATION
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9999997339400801	WITHOUT_CLASSIFICATION	2.660599198866591E-7	DOCUMENTATION
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999989913845867	WITHOUT_CLASSIFICATION	1.0086154133268388E-6	DOCUMENTATION
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9999983772683507	WITHOUT_CLASSIFICATION	1.6227316492608759E-6	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999947003623693	WITHOUT_CLASSIFICATION	5.299637630769538E-6	DOCUMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9999997199321465	WITHOUT_CLASSIFICATION	2.8006785348287235E-7	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.9999987433409375	WITHOUT_CLASSIFICATION	1.256659062418442E-6	DOCUMENTATION
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.999999608732046	WITHOUT_CLASSIFICATION	3.912679539421695E-7	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999577599254064	WITHOUT_CLASSIFICATION	4.224007459356946E-5	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999577599254064	WITHOUT_CLASSIFICATION	4.224007459356946E-5	DOCUMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9999816898341056	WITHOUT_CLASSIFICATION	1.8310165894320087E-5	DOCUMENTATION
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999993855549402	WITHOUT_CLASSIFICATION	6.144450598074854E-7	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999998765129635	WITHOUT_CLASSIFICATION	1.234870365029213E-7	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999999069743573	WITHOUT_CLASSIFICATION	9.302564283529233E-8	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.999999714216139	WITHOUT_CLASSIFICATION	2.857838610045055E-7	DOCUMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.999998152663251	WITHOUT_CLASSIFICATION	1.8473367491159786E-6	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9999997066180164	WITHOUT_CLASSIFICATION	2.933819836256158E-7	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999984401513691	WITHOUT_CLASSIFICATION	1.5598486308948527E-6	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999957310377212	WITHOUT_CLASSIFICATION	4.268962278781812E-6	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999998191389886	WITHOUT_CLASSIFICATION	1.8086101128802366E-7	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999996291417562	WITHOUT_CLASSIFICATION	3.708582438608138E-7	DOCUMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999999658246949	WITHOUT_CLASSIFICATION	3.41753051172474E-8	DOCUMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.999999939888733	WITHOUT_CLASSIFICATION	6.011126703846865E-8	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.999999302051983	WITHOUT_CLASSIFICATION	6.979480171393213E-7	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999869740914222	WITHOUT_CLASSIFICATION	1.302590857779935E-5	DOCUMENTATION
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999999303952014	WITHOUT_CLASSIFICATION	6.960479856206964E-8	DOCUMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.999998259274613	WITHOUT_CLASSIFICATION	1.740725386982876E-6	DOCUMENTATION
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9999985546992188	WITHOUT_CLASSIFICATION	1.4453007811599799E-6	DOCUMENTATION
//use the current version	WITHOUT_CLASSIFICATION	0.9999689374214821	WITHOUT_CLASSIFICATION	3.106257851802662E-5	DOCUMENTATION
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999997457241541	WITHOUT_CLASSIFICATION	2.542758459193524E-7	DOCUMENTATION
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999991734897978	WITHOUT_CLASSIFICATION	8.265102022036365E-7	DOCUMENTATION
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.999999566036234	WITHOUT_CLASSIFICATION	4.33963765987045E-7	DOCUMENTATION
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9999998576229766	WITHOUT_CLASSIFICATION	1.4237702349224794E-7	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999992083946371	WITHOUT_CLASSIFICATION	7.916053629894516E-7	DOCUMENTATION
//even process null collections	WITHOUT_CLASSIFICATION	0.9999942777130809	WITHOUT_CLASSIFICATION	5.722286919039453E-6	DOCUMENTATION
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999974368685226	WITHOUT_CLASSIFICATION	2.5631314773591193E-6	DOCUMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.9999990435372913	WITHOUT_CLASSIFICATION	9.564627086583298E-7	DOCUMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.999994012218236	WITHOUT_CLASSIFICATION	5.987781764061356E-6	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9999739786732015	WITHOUT_CLASSIFICATION	2.602132679857025E-5	DOCUMENTATION
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9999289767049001	WITHOUT_CLASSIFICATION	7.102329509987755E-5	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9998618798931356	WITHOUT_CLASSIFICATION	1.381201068644586E-4	DOCUMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999976982587488	WITHOUT_CLASSIFICATION	2.3017412512065064E-6	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999940313872675	WITHOUT_CLASSIFICATION	5.968612732538319E-6	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9999957999471553	WITHOUT_CLASSIFICATION	4.200052844774407E-6	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999838714208829	WITHOUT_CLASSIFICATION	1.6128579117122284E-5	DOCUMENTATION
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999993725373046	WITHOUT_CLASSIFICATION	6.274626952869692E-7	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999987879475833	WITHOUT_CLASSIFICATION	1.212052416673905E-6	DOCUMENTATION
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9999979888200005	WITHOUT_CLASSIFICATION	2.011179999447147E-6	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.999998529019094	WITHOUT_CLASSIFICATION	1.4709809059688887E-6	DOCUMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999955888876505	WITHOUT_CLASSIFICATION	4.4111123495534875E-6	DOCUMENTATION
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999990186114718	WITHOUT_CLASSIFICATION	9.813885282952252E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999934714347262	WITHOUT_CLASSIFICATION	6.528565273763644E-6	DOCUMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.9999792721790601	WITHOUT_CLASSIFICATION	2.0727820939910347E-5	DOCUMENTATION
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9999982797086362	WITHOUT_CLASSIFICATION	1.7202913638121705E-6	DOCUMENTATION
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999998436742936	WITHOUT_CLASSIFICATION	1.563257063578869E-7	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9999999105657138	WITHOUT_CLASSIFICATION	8.943428617651257E-8	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.9999995098582288	WITHOUT_CLASSIFICATION	4.901417711421135E-7	DOCUMENTATION
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.999999747049189	WITHOUT_CLASSIFICATION	2.5295081099385126E-7	DOCUMENTATION
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999997399133258	WITHOUT_CLASSIFICATION	2.6008667422406727E-7	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9999995546433007	WITHOUT_CLASSIFICATION	4.4535669929598645E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999919505206993	WITHOUT_CLASSIFICATION	8.049479300702277E-6	DOCUMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999992838940148	WITHOUT_CLASSIFICATION	7.161059851565203E-7	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999996944527108	WITHOUT_CLASSIFICATION	3.0554728928464674E-7	DOCUMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9999807367714814	WITHOUT_CLASSIFICATION	1.926322851873923E-5	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999832722759806	WITHOUT_CLASSIFICATION	1.672772401935633E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999935820132881	WITHOUT_CLASSIFICATION	6.417986711843992E-6	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999935820132881	WITHOUT_CLASSIFICATION	6.417986711843992E-6	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999998699878583	WITHOUT_CLASSIFICATION	1.3001214159741831E-7	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999813594994345	WITHOUT_CLASSIFICATION	1.8640500565611745E-5	DOCUMENTATION
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999867800425416	WITHOUT_CLASSIFICATION	1.321995745835123E-5	DOCUMENTATION
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999976670530417	WITHOUT_CLASSIFICATION	2.3329469582501026E-6	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.999999411124262	WITHOUT_CLASSIFICATION	5.888757379587296E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999997423246624	WITHOUT_CLASSIFICATION	2.576753376415048E-7	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999992037588731	WITHOUT_CLASSIFICATION	7.962411270099941E-7	DOCUMENTATION
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999998642822089	WITHOUT_CLASSIFICATION	1.3571779105072013E-7	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9999928200270306	WITHOUT_CLASSIFICATION	7.179972969443498E-6	DOCUMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999993946071349	WITHOUT_CLASSIFICATION	6.053928649477959E-7	DOCUMENTATION
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999969335304698	WITHOUT_CLASSIFICATION	3.0664695302630317E-6	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9999599633932731	WITHOUT_CLASSIFICATION	4.0036606726939585E-5	DOCUMENTATION
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.999887118554602	WITHOUT_CLASSIFICATION	1.1288144539808276E-4	DOCUMENTATION
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.99999858748974	WITHOUT_CLASSIFICATION	1.412510259945318E-6	DOCUMENTATION
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999990350489545	WITHOUT_CLASSIFICATION	9.64951045548549E-7	DOCUMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999998069331401	WITHOUT_CLASSIFICATION	1.9306685997816345E-7	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999996481550802	WITHOUT_CLASSIFICATION	3.5184491979313154E-7	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.9999639389231301	WITHOUT_CLASSIFICATION	3.60610768698786E-5	DOCUMENTATION
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999682842803403	WITHOUT_CLASSIFICATION	3.171571965960026E-5	DOCUMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999959141380323	WITHOUT_CLASSIFICATION	4.085861967742354E-6	DOCUMENTATION
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999993433086836	WITHOUT_CLASSIFICATION	6.566913165254913E-7	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9999852220395424	WITHOUT_CLASSIFICATION	1.477796045761095E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999906877150827	WITHOUT_CLASSIFICATION	9.312284917297363E-5	DOCUMENTATION
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999989062330219	WITHOUT_CLASSIFICATION	1.093766978123248E-6	DOCUMENTATION
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.999998509218996	WITHOUT_CLASSIFICATION	1.490781003981515E-6	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9999989822411369	WITHOUT_CLASSIFICATION	1.0177588630018721E-6	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.999999109271447	WITHOUT_CLASSIFICATION	8.90728552974048E-7	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999010002936803	WITHOUT_CLASSIFICATION	9.899970631970409E-5	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999966261019112	WITHOUT_CLASSIFICATION	3.373898088863891E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999906877150827	WITHOUT_CLASSIFICATION	9.312284917297363E-5	DOCUMENTATION
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.999998515584419	WITHOUT_CLASSIFICATION	1.4844155810891085E-6	DOCUMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.999999448479667	WITHOUT_CLASSIFICATION	5.515203330245865E-7	DOCUMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.999803254193601	WITHOUT_CLASSIFICATION	1.9674580639891006E-4	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999862233705785	WITHOUT_CLASSIFICATION	1.3776629421456629E-5	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999999218526548	WITHOUT_CLASSIFICATION	7.814734520136759E-8	DOCUMENTATION
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999993540238511	WITHOUT_CLASSIFICATION	6.459761487969517E-7	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9999998553047406	WITHOUT_CLASSIFICATION	1.4469525944704467E-7	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999998809374635	WITHOUT_CLASSIFICATION	1.1906253654056398E-7	DOCUMENTATION
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9999993284395612	WITHOUT_CLASSIFICATION	6.715604388102159E-7	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999862233705785	WITHOUT_CLASSIFICATION	1.3776629421456629E-5	DOCUMENTATION
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999993088754934	WITHOUT_CLASSIFICATION	6.91124506635442E-7	DOCUMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999998736204132	WITHOUT_CLASSIFICATION	1.263795868523288E-7	DOCUMENTATION
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999991465986389	WITHOUT_CLASSIFICATION	8.534013612592293E-7	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999049954194036	WITHOUT_CLASSIFICATION	9.500458059641772E-5	DOCUMENTATION
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9999987862665245	WITHOUT_CLASSIFICATION	1.2137334755588856E-6	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999996291417562	WITHOUT_CLASSIFICATION	3.708582438608138E-7	DOCUMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9999974674326745	WITHOUT_CLASSIFICATION	2.5325673255336804E-6	DOCUMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9999982057535121	WITHOUT_CLASSIFICATION	1.7942464880262557E-6	DOCUMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999887234228069	WITHOUT_CLASSIFICATION	1.1276577193115387E-5	DOCUMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9999983065807712	WITHOUT_CLASSIFICATION	1.6934192288627897E-6	DOCUMENTATION
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999642719486673	WITHOUT_CLASSIFICATION	3.572805133273111E-5	DOCUMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999983456587789	WITHOUT_CLASSIFICATION	1.6543412210742906E-6	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9999982596693664	WITHOUT_CLASSIFICATION	1.7403306336514896E-6	DOCUMENTATION
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999848761464194	WITHOUT_CLASSIFICATION	1.5123853580502984E-5	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9999731604385187	WITHOUT_CLASSIFICATION	2.6839561481332516E-5	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999971886532176	WITHOUT_CLASSIFICATION	2.8113467824026597E-6	DOCUMENTATION
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999391834237331	WITHOUT_CLASSIFICATION	6.0816576266862146E-5	DOCUMENTATION
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999998531794299	WITHOUT_CLASSIFICATION	1.4682057022734985E-7	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999997708771793	WITHOUT_CLASSIFICATION	2.2912282072931786E-7	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.999996035242456	WITHOUT_CLASSIFICATION	3.964757543996788E-6	DOCUMENTATION
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999996545736148	WITHOUT_CLASSIFICATION	3.4542638527485134E-7	DOCUMENTATION
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.999998386358429	WITHOUT_CLASSIFICATION	1.613641571057222E-6	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.99999730398154	WITHOUT_CLASSIFICATION	2.696018460063868E-6	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999969226567303	WITHOUT_CLASSIFICATION	3.07734326958854E-6	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999959921714496	WITHOUT_CLASSIFICATION	4.007828550362017E-6	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9999872301685302	WITHOUT_CLASSIFICATION	1.276983146975631E-5	DOCUMENTATION
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9999891355562601	WITHOUT_CLASSIFICATION	1.0864443739902675E-5	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999977728412983	WITHOUT_CLASSIFICATION	2.2271587017708864E-6	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9999992930435091	WITHOUT_CLASSIFICATION	7.069564908101725E-7	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999998107148191	WITHOUT_CLASSIFICATION	1.892851808353011E-7	DOCUMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.999981371503849	WITHOUT_CLASSIFICATION	1.8628496150950706E-5	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.999991646209219	WITHOUT_CLASSIFICATION	8.353790781033386E-6	DOCUMENTATION
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999976115499305	WITHOUT_CLASSIFICATION	2.3884500695548135E-6	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971122123761	WITHOUT_CLASSIFICATION	2.8877876238394145E-6	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999924797260576	WITHOUT_CLASSIFICATION	7.520273942320779E-6	DOCUMENTATION
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.9999998462520141	WITHOUT_CLASSIFICATION	1.5374798584223078E-7	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9999943715552826	WITHOUT_CLASSIFICATION	5.628444717300107E-6	DOCUMENTATION
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9999960157412242	WITHOUT_CLASSIFICATION	3.984258775802975E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999983962212736	WITHOUT_CLASSIFICATION	1.6037787263986886E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999983962212736	WITHOUT_CLASSIFICATION	1.6037787263986886E-6	DOCUMENTATION
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999990530617257	WITHOUT_CLASSIFICATION	9.469382742831229E-7	DOCUMENTATION
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999956286750338	WITHOUT_CLASSIFICATION	4.371324966268716E-6	DOCUMENTATION
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999907587455805	WITHOUT_CLASSIFICATION	9.241254419438627E-6	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999988879280829	WITHOUT_CLASSIFICATION	1.1120719171781918E-6	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999884400612407	WITHOUT_CLASSIFICATION	1.1559938759479934E-5	DOCUMENTATION
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999969198298446	WITHOUT_CLASSIFICATION	3.080170155381535E-6	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999991511478344	WITHOUT_CLASSIFICATION	8.48852165538074E-7	DOCUMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999972563244703	WITHOUT_CLASSIFICATION	2.7436755296786874E-6	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9999955337912212	WITHOUT_CLASSIFICATION	4.466208778803871E-6	DOCUMENTATION
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999999373198871	WITHOUT_CLASSIFICATION	6.268011292512814E-8	DOCUMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999998630227698	WITHOUT_CLASSIFICATION	1.36977230291223E-7	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999997475879759	WITHOUT_CLASSIFICATION	2.524120240168308E-7	DOCUMENTATION
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999998232713319	WITHOUT_CLASSIFICATION	1.7672866815103E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999983962212736	WITHOUT_CLASSIFICATION	1.6037787263986886E-6	DOCUMENTATION
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999987424510997	WITHOUT_CLASSIFICATION	1.2575489003621036E-6	DOCUMENTATION
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999985143723275	WITHOUT_CLASSIFICATION	1.4856276725678551E-6	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999995647798882	WITHOUT_CLASSIFICATION	4.352201119621809E-7	DOCUMENTATION
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.999999689940322	WITHOUT_CLASSIFICATION	3.1005967801234017E-7	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999961450927005	WITHOUT_CLASSIFICATION	3.854907299468455E-6	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9999937249934227	WITHOUT_CLASSIFICATION	6.275006577338319E-6	DOCUMENTATION
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999997740819359	WITHOUT_CLASSIFICATION	2.2591806422114867E-7	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999986912714997	WITHOUT_CLASSIFICATION	1.3087285003325889E-6	DOCUMENTATION
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999986662977242	WITHOUT_CLASSIFICATION	1.3337022758435562E-6	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999997754820554	WITHOUT_CLASSIFICATION	2.2451794465027205E-7	DOCUMENTATION
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9999990747588917	WITHOUT_CLASSIFICATION	9.252411082942875E-7	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971122123761	WITHOUT_CLASSIFICATION	2.8877876238394145E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999983962212736	WITHOUT_CLASSIFICATION	1.6037787263986886E-6	DOCUMENTATION
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999988476826441	WITHOUT_CLASSIFICATION	1.152317355803448E-6	DOCUMENTATION
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999978596949275	WITHOUT_CLASSIFICATION	2.140305072564455E-6	DOCUMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999954426272158	WITHOUT_CLASSIFICATION	4.557372784231688E-6	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999933975180998	WITHOUT_CLASSIFICATION	6.602481900214431E-6	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.999987227415432	WITHOUT_CLASSIFICATION	1.2772584568109406E-5	DOCUMENTATION
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999995923314393	WITHOUT_CLASSIFICATION	4.0766856075526626E-7	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99999140927482	WITHOUT_CLASSIFICATION	8.590725180063937E-6	DOCUMENTATION
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999993201243315	WITHOUT_CLASSIFICATION	6.798756686073194E-7	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999956512162482	WITHOUT_CLASSIFICATION	4.3487837518460764E-6	DOCUMENTATION
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999997394281285	WITHOUT_CLASSIFICATION	2.6057187159923486E-7	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999998225026405	WITHOUT_CLASSIFICATION	1.774973594801805E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997361413796165	WITHOUT_CLASSIFICATION	2.638586203834822E-4	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999979520333296	WITHOUT_CLASSIFICATION	2.047966670335629E-6	DOCUMENTATION
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999965408773245	WITHOUT_CLASSIFICATION	3.459122675519541E-6	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999990131377368	WITHOUT_CLASSIFICATION	9.868622632019014E-7	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999966257880032	WITHOUT_CLASSIFICATION	3.3742119967510435E-6	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999998226946047	WITHOUT_CLASSIFICATION	1.7730539528155027E-7	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999986358608931	WITHOUT_CLASSIFICATION	1.3641391068144382E-6	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999939823517348	WITHOUT_CLASSIFICATION	6.017648265214047E-6	DOCUMENTATION
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999995455056472	WITHOUT_CLASSIFICATION	4.5449435282267747E-7	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999940830397859	WITHOUT_CLASSIFICATION	5.91696021409296E-6	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999940830397859	WITHOUT_CLASSIFICATION	5.91696021409296E-6	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9999993506114558	WITHOUT_CLASSIFICATION	6.493885442556465E-7	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9999998897489562	WITHOUT_CLASSIFICATION	1.1025104381649643E-7	DOCUMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9999999155788228	WITHOUT_CLASSIFICATION	8.442117718812237E-8	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.999999065401097	WITHOUT_CLASSIFICATION	9.345989029463707E-7	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999948713888269	WITHOUT_CLASSIFICATION	5.128611173022356E-6	DOCUMENTATION
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9999926432042933	WITHOUT_CLASSIFICATION	7.356795706764376E-6	DOCUMENTATION
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9999952249653495	WITHOUT_CLASSIFICATION	4.7750346504166014E-6	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999999283045824	WITHOUT_CLASSIFICATION	7.169541766093949E-8	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999999283045824	WITHOUT_CLASSIFICATION	7.169541766093949E-8	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9999967754705165	WITHOUT_CLASSIFICATION	3.2245294834945297E-6	DOCUMENTATION
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999886721331801	WITHOUT_CLASSIFICATION	1.1327866819814535E-5	DOCUMENTATION
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999949539052768	WITHOUT_CLASSIFICATION	5.046094723176107E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999989292855691	WITHOUT_CLASSIFICATION	1.0707144308995143E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999989292855691	WITHOUT_CLASSIFICATION	1.0707144308995143E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999989292855691	WITHOUT_CLASSIFICATION	1.0707144308995143E-6	DOCUMENTATION
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9999999031482038	WITHOUT_CLASSIFICATION	9.685179624169466E-8	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9999991606346832	WITHOUT_CLASSIFICATION	8.393653167419379E-7	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9999996113427655	WITHOUT_CLASSIFICATION	3.886572345143508E-7	DOCUMENTATION
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9999995096930858	WITHOUT_CLASSIFICATION	4.903069141382865E-7	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999989344034678	WITHOUT_CLASSIFICATION	1.0655965322049012E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999983962212736	WITHOUT_CLASSIFICATION	1.6037787263986886E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999983962212736	WITHOUT_CLASSIFICATION	1.6037787263986886E-6	DOCUMENTATION
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.999999888197258	WITHOUT_CLASSIFICATION	1.1180274193247239E-7	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999999392029514	WITHOUT_CLASSIFICATION	6.079704860341335E-8	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9999997255251272	WITHOUT_CLASSIFICATION	2.7447487280988355E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999992628850832	WITHOUT_CLASSIFICATION	7.371149167391981E-7	DOCUMENTATION
// igndore it...	WITHOUT_CLASSIFICATION	0.9999977227719561	WITHOUT_CLASSIFICATION	2.277228043957578E-6	DOCUMENTATION
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999964097901036	WITHOUT_CLASSIFICATION	3.590209896386496E-6	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9999922123067427	WITHOUT_CLASSIFICATION	7.78769325718406E-6	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9999990580879485	WITHOUT_CLASSIFICATION	9.419120514635618E-7	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.999999010075085	WITHOUT_CLASSIFICATION	9.8992491500236E-7	DOCUMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999966568525457	WITHOUT_CLASSIFICATION	3.3431474543165097E-6	DOCUMENTATION
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999950874429614	WITHOUT_CLASSIFICATION	4.912557038637943E-6	DOCUMENTATION
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999773494197681	WITHOUT_CLASSIFICATION	2.2650580231971704E-5	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999773494197681	WITHOUT_CLASSIFICATION	2.2650580231971704E-5	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999811645873572	WITHOUT_CLASSIFICATION	1.8835412642907957E-5	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999811645873572	WITHOUT_CLASSIFICATION	1.8835412642907957E-5	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.9999820234448827	WITHOUT_CLASSIFICATION	1.7976555117160486E-5	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999788960217981	WITHOUT_CLASSIFICATION	2.1103978201818366E-5	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999788960217981	WITHOUT_CLASSIFICATION	2.1103978201818366E-5	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999818568693024	WITHOUT_CLASSIFICATION	1.8143130697574466E-5	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999700200508802	WITHOUT_CLASSIFICATION	2.997994911983704E-5	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999981963922642	WITHOUT_CLASSIFICATION	1.8036077357282696E-6	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999940830397859	WITHOUT_CLASSIFICATION	5.91696021409296E-6	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999995259466132	WITHOUT_CLASSIFICATION	4.740533867902348E-7	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999700200508802	WITHOUT_CLASSIFICATION	2.997994911983704E-5	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9999975892938158	WITHOUT_CLASSIFICATION	2.4107061842469766E-6	DOCUMENTATION
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999982455771257	WITHOUT_CLASSIFICATION	1.7544228742023613E-6	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999826563193033	WITHOUT_CLASSIFICATION	1.73436806966504E-5	DOCUMENTATION
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.999982121219959	WITHOUT_CLASSIFICATION	1.7878780040935562E-5	DOCUMENTATION
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999997022512105	WITHOUT_CLASSIFICATION	2.9774878947028463E-7	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9999989597959972	WITHOUT_CLASSIFICATION	1.0402040028946344E-6	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999991792776848	WITHOUT_CLASSIFICATION	8.207223151168909E-7	DOCUMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9999976053820688	WITHOUT_CLASSIFICATION	2.394617931199346E-6	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9999746483654325	WITHOUT_CLASSIFICATION	2.535163456752386E-5	DOCUMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9999989295611015	WITHOUT_CLASSIFICATION	1.0704388985313667E-6	DOCUMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999983373256124	WITHOUT_CLASSIFICATION	1.6626743876400434E-6	DOCUMENTATION
// Set it!	WITHOUT_CLASSIFICATION	0.999993493905411	WITHOUT_CLASSIFICATION	6.5060945888952695E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999966234148753	WITHOUT_CLASSIFICATION	3.3765851246969665E-6	DOCUMENTATION
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999960433392661	WITHOUT_CLASSIFICATION	3.956660733922849E-6	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.999999735163083	WITHOUT_CLASSIFICATION	2.648369168960546E-7	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9999983770045368	WITHOUT_CLASSIFICATION	1.6229954633243021E-6	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999971654213179	WITHOUT_CLASSIFICATION	2.834578682104565E-6	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999985492595675	WITHOUT_CLASSIFICATION	1.4507404325327042E-6	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999985492595675	WITHOUT_CLASSIFICATION	1.4507404325327042E-6	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999975919016417	WITHOUT_CLASSIFICATION	2.4080983583971823E-6	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999926747522379	WITHOUT_CLASSIFICATION	7.325247762122751E-6	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999984893818926	WITHOUT_CLASSIFICATION	1.5106181073129257E-6	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9999904664069245	WITHOUT_CLASSIFICATION	9.533593075566056E-6	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.9999979017595108	WITHOUT_CLASSIFICATION	2.0982404892942502E-6	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.9999995028158164	WITHOUT_CLASSIFICATION	4.971841835342727E-7	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.999999655169008	WITHOUT_CLASSIFICATION	3.448309920056858E-7	DOCUMENTATION
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999992762704037	WITHOUT_CLASSIFICATION	7.237295963945572E-7	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999901202312861	WITHOUT_CLASSIFICATION	9.879768713879438E-6	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999993694395723	WITHOUT_CLASSIFICATION	6.305604276853482E-7	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999989012453889	WITHOUT_CLASSIFICATION	1.0987546111741103E-6	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997361413796165	WITHOUT_CLASSIFICATION	2.638586203834822E-4	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999991449598937	WITHOUT_CLASSIFICATION	8.550401063321944E-7	DOCUMENTATION
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999983205247275	WITHOUT_CLASSIFICATION	1.6794752725043934E-6	DOCUMENTATION
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999994481946237	WITHOUT_CLASSIFICATION	5.518053762199903E-7	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999973124404642	WITHOUT_CLASSIFICATION	2.6875595358934526E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999990060100411	WITHOUT_CLASSIFICATION	9.93989958895873E-7	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999990060100411	WITHOUT_CLASSIFICATION	9.93989958895873E-7	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9999988627862214	WITHOUT_CLASSIFICATION	1.1372137786760666E-6	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.999997904644151	WITHOUT_CLASSIFICATION	2.09535584912068E-6	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.999999423853525	WITHOUT_CLASSIFICATION	5.76146474905582E-7	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999987575339792	WITHOUT_CLASSIFICATION	1.2424660208274338E-6	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9999986856505868	WITHOUT_CLASSIFICATION	1.314349413122108E-6	DOCUMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999978430087291	WITHOUT_CLASSIFICATION	2.156991270941434E-6	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9999973440256638	WITHOUT_CLASSIFICATION	2.655974336305712E-6	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.999997007365092	WITHOUT_CLASSIFICATION	2.992634907987857E-6	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999997930487453	WITHOUT_CLASSIFICATION	2.069512546960171E-7	DOCUMENTATION
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999998220266676	WITHOUT_CLASSIFICATION	1.779733323137081E-7	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999992909590493	WITHOUT_CLASSIFICATION	7.090409507734121E-7	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.999997007365092	WITHOUT_CLASSIFICATION	2.992634907987857E-6	DOCUMENTATION
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.999999437874633	WITHOUT_CLASSIFICATION	5.621253670168453E-7	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999996489773139	WITHOUT_CLASSIFICATION	3.510226861411476E-7	DOCUMENTATION
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.999999491421941	WITHOUT_CLASSIFICATION	5.085780590112963E-7	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999969367197805	WITHOUT_CLASSIFICATION	3.0632802194419923E-6	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999998923802139	WITHOUT_CLASSIFICATION	1.076197860801539E-7	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999987441353614	WITHOUT_CLASSIFICATION	1.255864638624172E-6	DOCUMENTATION
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999993004032757	WITHOUT_CLASSIFICATION	6.995967242489774E-7	DOCUMENTATION
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999981990959066	WITHOUT_CLASSIFICATION	1.8009040933981522E-6	DOCUMENTATION
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999986146819253	WITHOUT_CLASSIFICATION	1.3853180746447E-6	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999993926675457	WITHOUT_CLASSIFICATION	6.073324542421858E-7	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9999994641372537	WITHOUT_CLASSIFICATION	5.358627462721544E-7	DOCUMENTATION
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999995918228282	WITHOUT_CLASSIFICATION	4.081771717555111E-7	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999905037682463	WITHOUT_CLASSIFICATION	9.496231753769462E-6	DOCUMENTATION
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.999999159333361	WITHOUT_CLASSIFICATION	8.406666388927403E-7	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999905544585738	WITHOUT_CLASSIFICATION	9.445541426248128E-6	DOCUMENTATION
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999996546273181	WITHOUT_CLASSIFICATION	3.4537268199992744E-7	DOCUMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999998825340202	WITHOUT_CLASSIFICATION	1.1746597976520806E-7	DOCUMENTATION
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9999934254940638	WITHOUT_CLASSIFICATION	6.57450593627695E-6	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9999940690495601	WITHOUT_CLASSIFICATION	5.930950439846432E-6	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999990997911284	WITHOUT_CLASSIFICATION	9.002088715234571E-7	DOCUMENTATION
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9999996366272217	WITHOUT_CLASSIFICATION	3.6337277837399816E-7	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.9999983700975317	WITHOUT_CLASSIFICATION	1.629902468279802E-6	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.999999527020675	WITHOUT_CLASSIFICATION	4.7297932493096325E-7	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.9999840054424266	WITHOUT_CLASSIFICATION	1.5994557573459855E-5	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999997522735895	WITHOUT_CLASSIFICATION	2.4772641058994003E-7	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999899306794587	WITHOUT_CLASSIFICATION	1.0069320541288585E-5	DOCUMENTATION
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999987352322276	WITHOUT_CLASSIFICATION	1.2647677724495754E-6	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999993658847917	WITHOUT_CLASSIFICATION	6.341152083318533E-7	DOCUMENTATION
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999976778543467	WITHOUT_CLASSIFICATION	2.322145653285901E-6	DOCUMENTATION
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9999938408311043	WITHOUT_CLASSIFICATION	6.159168895741985E-6	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999992878321574	WITHOUT_CLASSIFICATION	7.121678425724508E-7	DOCUMENTATION
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999966385963378	WITHOUT_CLASSIFICATION	3.3614036621470767E-6	DOCUMENTATION
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999996557720329	WITHOUT_CLASSIFICATION	3.442279672026426E-7	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9999998789922099	WITHOUT_CLASSIFICATION	1.210077901089607E-7	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999997831954096	WITHOUT_CLASSIFICATION	2.1680459044354887E-7	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999997302890999	WITHOUT_CLASSIFICATION	2.697109000783736E-7	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.999996090580796	WITHOUT_CLASSIFICATION	3.909419204031403E-6	DOCUMENTATION
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999980727138714	WITHOUT_CLASSIFICATION	1.927286128456292E-6	DOCUMENTATION
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999981958038092	WITHOUT_CLASSIFICATION	1.8041961907966025E-6	DOCUMENTATION
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999964617840894	WITHOUT_CLASSIFICATION	3.5382159105679027E-6	DOCUMENTATION
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999992992256211	WITHOUT_CLASSIFICATION	7.007743788585946E-7	DOCUMENTATION
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999986153521486	WITHOUT_CLASSIFICATION	1.3846478514623357E-6	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999955537850239	WITHOUT_CLASSIFICATION	4.446214976007186E-6	DOCUMENTATION
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999997639222998	WITHOUT_CLASSIFICATION	2.3607770024225526E-7	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999879524340949	WITHOUT_CLASSIFICATION	1.2047565905235617E-5	DOCUMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999994756261734	WITHOUT_CLASSIFICATION	5.243738265772592E-7	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999999251721771	WITHOUT_CLASSIFICATION	7.482782297816596E-8	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.999999118385011	WITHOUT_CLASSIFICATION	8.816149889624222E-7	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999986312272529	WITHOUT_CLASSIFICATION	1.3687727471255852E-6	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999976714225983	WITHOUT_CLASSIFICATION	2.3285774016992648E-6	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999973333421858	WITHOUT_CLASSIFICATION	2.6666578142784243E-6	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999998278196034	WITHOUT_CLASSIFICATION	1.721803964997849E-7	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.999995738868805	WITHOUT_CLASSIFICATION	4.261131194978926E-6	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999922584810045	WITHOUT_CLASSIFICATION	7.741518995523494E-6	DOCUMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999979912757565	WITHOUT_CLASSIFICATION	2.0087242434320773E-6	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999991658611052	WITHOUT_CLASSIFICATION	8.341388947866632E-7	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999993126034973	WITHOUT_CLASSIFICATION	6.87396502656649E-7	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999992976465462	WITHOUT_CLASSIFICATION	7.023534537980515E-7	DOCUMENTATION
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999971801142491	WITHOUT_CLASSIFICATION	2.8198857509461427E-6	DOCUMENTATION
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999990089579198	WITHOUT_CLASSIFICATION	9.910420802556008E-7	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999997610335867	WITHOUT_CLASSIFICATION	2.389664132909932E-7	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999988301489486	WITHOUT_CLASSIFICATION	1.169851051352422E-6	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9999974453220336	WITHOUT_CLASSIFICATION	2.554677966466794E-6	DOCUMENTATION
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.9999998919500612	WITHOUT_CLASSIFICATION	1.0804993878230655E-7	DOCUMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9999890550427057	WITHOUT_CLASSIFICATION	1.0944957294153087E-5	DOCUMENTATION
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9999847475120037	WITHOUT_CLASSIFICATION	1.5252487996167265E-5	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999973333421858	WITHOUT_CLASSIFICATION	2.6666578142784243E-6	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999974174556618	WITHOUT_CLASSIFICATION	2.5825443381009087E-6	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999990094449002	WITHOUT_CLASSIFICATION	9.905550998208763E-7	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999827047750095	WITHOUT_CLASSIFICATION	1.7295224990440446E-5	DOCUMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.9999990505647336	WITHOUT_CLASSIFICATION	9.494352664676552E-7	DOCUMENTATION
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9999988254856002	WITHOUT_CLASSIFICATION	1.174514399847304E-6	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999995287700144	WITHOUT_CLASSIFICATION	4.712299855402247E-7	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999997930487453	WITHOUT_CLASSIFICATION	2.069512546960171E-7	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999998862156412	WITHOUT_CLASSIFICATION	1.1378435889611905E-7	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999997831954096	WITHOUT_CLASSIFICATION	2.1680459044354887E-7	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9999986676051362	WITHOUT_CLASSIFICATION	1.3323948637351997E-6	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.999995015755292	WITHOUT_CLASSIFICATION	4.984244707950834E-6	DOCUMENTATION
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999988253969135	WITHOUT_CLASSIFICATION	1.1746030865174437E-6	DOCUMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999987317620652	WITHOUT_CLASSIFICATION	1.268237934773364E-6	DOCUMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999984771517227	WITHOUT_CLASSIFICATION	1.522848277284787E-6	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9999979212133076	WITHOUT_CLASSIFICATION	2.0787866925130533E-6	DOCUMENTATION
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999982527299464	WITHOUT_CLASSIFICATION	1.7472700535756492E-6	DOCUMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9999991454890117	WITHOUT_CLASSIFICATION	8.545109883149943E-7	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9999964064808826	WITHOUT_CLASSIFICATION	3.5935191173991547E-6	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999991722753185	WITHOUT_CLASSIFICATION	8.277246814187252E-7	DOCUMENTATION
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999983471927519	WITHOUT_CLASSIFICATION	1.6528072480384465E-6	DOCUMENTATION
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999989578353351	WITHOUT_CLASSIFICATION	1.042164664878916E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999988181585336	WITHOUT_CLASSIFICATION	1.1818414663303561E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999988181585336	WITHOUT_CLASSIFICATION	1.1818414663303561E-6	DOCUMENTATION
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999997561272956	WITHOUT_CLASSIFICATION	2.4387270431956196E-7	DOCUMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999948249247961	WITHOUT_CLASSIFICATION	5.175075203890483E-6	DOCUMENTATION
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999998779025022	WITHOUT_CLASSIFICATION	1.2209749782151866E-7	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999964551112622	WITHOUT_CLASSIFICATION	3.5448887376306044E-6	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999989955690041	WITHOUT_CLASSIFICATION	1.004430995898723E-6	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999992551175748	WITHOUT_CLASSIFICATION	7.448824250787178E-7	DOCUMENTATION
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999906888829115	WITHOUT_CLASSIFICATION	9.311117088437302E-6	DOCUMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999992571189892	WITHOUT_CLASSIFICATION	7.428810108855597E-7	DOCUMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999998183485802	WITHOUT_CLASSIFICATION	1.816514197152191E-7	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9999997780450376	WITHOUT_CLASSIFICATION	2.219549624584841E-7	DOCUMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999981294257395	WITHOUT_CLASSIFICATION	1.870574260534358E-6	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.9999982866233247	WITHOUT_CLASSIFICATION	1.7133766753871057E-6	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999977763183967	WITHOUT_CLASSIFICATION	2.223681603277857E-6	DOCUMENTATION
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.999999964090639	WITHOUT_CLASSIFICATION	3.590936099282548E-8	DOCUMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999986471924589	WITHOUT_CLASSIFICATION	1.3528075411332022E-6	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999978909960429	WITHOUT_CLASSIFICATION	2.109003957151109E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9999988538852062	WITHOUT_CLASSIFICATION	1.1461147938144032E-6	DOCUMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999961978472687	WITHOUT_CLASSIFICATION	3.8021527312999284E-6	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999984303063723	WITHOUT_CLASSIFICATION	1.5696936276515206E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998665693186	WITHOUT_CLASSIFICATION	1.334306813935136E-6	DOCUMENTATION
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999994684737568	WITHOUT_CLASSIFICATION	5.315262432114146E-7	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999888912257537	WITHOUT_CLASSIFICATION	1.1108774246196785E-5	DOCUMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999978094125712	WITHOUT_CLASSIFICATION	2.190587428769868E-6	DOCUMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999994109609288	WITHOUT_CLASSIFICATION	5.890390712625854E-7	DOCUMENTATION
/*implied*/	WITHOUT_CLASSIFICATION	0.9999594627307511	WITHOUT_CLASSIFICATION	4.053726924879074E-5	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9999985698192614	WITHOUT_CLASSIFICATION	1.4301807386776726E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998665693186	WITHOUT_CLASSIFICATION	1.334306813935136E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998665693186	WITHOUT_CLASSIFICATION	1.334306813935136E-6	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999987701398149	WITHOUT_CLASSIFICATION	1.2298601851378728E-6	DOCUMENTATION
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999996772876977	WITHOUT_CLASSIFICATION	3.2271230240250073E-7	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.999991525501997	WITHOUT_CLASSIFICATION	8.474498003000885E-6	DOCUMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999990546823271	WITHOUT_CLASSIFICATION	9.453176729170055E-7	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9998904117419366	WITHOUT_CLASSIFICATION	1.0958825806344738E-4	DOCUMENTATION
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.999979096847687	WITHOUT_CLASSIFICATION	2.0903152312940373E-5	DOCUMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.9999998844075683	WITHOUT_CLASSIFICATION	1.155924316889988E-7	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9999971445675672	WITHOUT_CLASSIFICATION	2.855432432964552E-6	DOCUMENTATION
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9999966198635791	WITHOUT_CLASSIFICATION	3.3801364209547514E-6	DOCUMENTATION
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999994278709504	WITHOUT_CLASSIFICATION	5.721290495802854E-7	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9999955729859608	WITHOUT_CLASSIFICATION	4.4270140392834536E-6	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9999992926284578	WITHOUT_CLASSIFICATION	7.073715422020382E-7	DOCUMENTATION
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999973171701467	WITHOUT_CLASSIFICATION	2.6828298532291954E-6	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999985516033253	WITHOUT_CLASSIFICATION	1.44839667462794E-6	DOCUMENTATION
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999897182888006	WITHOUT_CLASSIFICATION	1.0281711199503512E-5	DOCUMENTATION
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999989581685919	WITHOUT_CLASSIFICATION	1.0418314082084871E-6	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999767495028729	WITHOUT_CLASSIFICATION	2.325049712704117E-5	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999910482989083	WITHOUT_CLASSIFICATION	8.951701091743083E-6	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.999998853448229	WITHOUT_CLASSIFICATION	1.146551770934861E-6	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999959007016122	WITHOUT_CLASSIFICATION	4.099298387798447E-6	DOCUMENTATION
//TODO:	WITHOUT_CLASSIFICATION	0.9987885478076689	WITHOUT_CLASSIFICATION	0.0012114521923311888	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999997361542086	WITHOUT_CLASSIFICATION	2.638457914386846E-7	DOCUMENTATION
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999998029873877	WITHOUT_CLASSIFICATION	1.97012612185169E-7	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999994540324978	WITHOUT_CLASSIFICATION	5.459675021303185E-7	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999946758063014	WITHOUT_CLASSIFICATION	5.32419369859872E-6	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999988509952499	WITHOUT_CLASSIFICATION	1.1490047500826122E-6	DOCUMENTATION
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999967070877104	WITHOUT_CLASSIFICATION	3.2929122897135527E-6	DOCUMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999994015765449	WITHOUT_CLASSIFICATION	5.984234550903126E-7	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999949176389374	WITHOUT_CLASSIFICATION	5.082361062587828E-6	DOCUMENTATION
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.999999655395262	WITHOUT_CLASSIFICATION	3.4460473794180485E-7	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.999994301740614	WITHOUT_CLASSIFICATION	5.698259386081291E-6	DOCUMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9999965204466326	WITHOUT_CLASSIFICATION	3.479553367438709E-6	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.999997445834452	WITHOUT_CLASSIFICATION	2.554165547975563E-6	DOCUMENTATION
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9999948089934766	WITHOUT_CLASSIFICATION	5.191006523459023E-6	DOCUMENTATION
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9999987733952286	WITHOUT_CLASSIFICATION	1.2266047713968797E-6	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999947843785141	WITHOUT_CLASSIFICATION	5.215621485914627E-6	DOCUMENTATION
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999985656705672	WITHOUT_CLASSIFICATION	1.4343294327748842E-6	DOCUMENTATION
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999984909592298	WITHOUT_CLASSIFICATION	1.5090407702293595E-6	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9999940085780841	WITHOUT_CLASSIFICATION	5.991421915995466E-6	DOCUMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9999934966593468	WITHOUT_CLASSIFICATION	6.5033406533095745E-6	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999883600653411	WITHOUT_CLASSIFICATION	1.163993465878477E-5	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999990182013896	WITHOUT_CLASSIFICATION	9.817986104412911E-7	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999970176651833	WITHOUT_CLASSIFICATION	2.9823348165861713E-6	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999990132599672	WITHOUT_CLASSIFICATION	9.867400328076063E-7	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999970176651833	WITHOUT_CLASSIFICATION	2.9823348165861713E-6	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999998915722205	WITHOUT_CLASSIFICATION	1.0842777950012269E-7	DOCUMENTATION
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999949889043039	WITHOUT_CLASSIFICATION	5.011095696072176E-6	DOCUMENTATION
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9999912429322	WITHOUT_CLASSIFICATION	8.757067799980944E-6	DOCUMENTATION
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999986754901761	WITHOUT_CLASSIFICATION	1.3245098238963522E-6	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999991574075519	WITHOUT_CLASSIFICATION	8.425924482016324E-7	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9999922728209568	WITHOUT_CLASSIFICATION	7.727179043242349E-6	DOCUMENTATION
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999986245563146	WITHOUT_CLASSIFICATION	1.3754436853900182E-6	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999967412097759	WITHOUT_CLASSIFICATION	3.258790224183322E-6	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.999996195439054	WITHOUT_CLASSIFICATION	3.804560945962654E-6	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999998714811478	WITHOUT_CLASSIFICATION	1.2851885222754183E-7	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999989273166431	WITHOUT_CLASSIFICATION	1.0726833568932779E-6	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999984839155054	WITHOUT_CLASSIFICATION	1.5160844946477082E-6	DOCUMENTATION
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999995578175264	WITHOUT_CLASSIFICATION	4.421824735373081E-7	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.999999413681078	WITHOUT_CLASSIFICATION	5.86318922028485E-7	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.999997092438708	WITHOUT_CLASSIFICATION	2.9075612920321874E-6	DOCUMENTATION
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999995953370923	WITHOUT_CLASSIFICATION	4.046629077882669E-7	DOCUMENTATION
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999995262348199	WITHOUT_CLASSIFICATION	4.737651800224938E-7	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999996517729695	WITHOUT_CLASSIFICATION	3.4822703054729564E-7	DOCUMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999998802671703	WITHOUT_CLASSIFICATION	1.1973282964314218E-7	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9999980851476963	WITHOUT_CLASSIFICATION	1.9148523036973944E-6	DOCUMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999990361623973	WITHOUT_CLASSIFICATION	9.638376027225422E-7	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9999941055832723	WITHOUT_CLASSIFICATION	5.894416727794208E-6	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999921810050802	WITHOUT_CLASSIFICATION	7.818994919712863E-6	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999998569739017	WITHOUT_CLASSIFICATION	1.4302609831513748E-7	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999935429582393	WITHOUT_CLASSIFICATION	6.457041760657936E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9994454319075339	WITHOUT_CLASSIFICATION	5.545680924660915E-4	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999904710009607	WITHOUT_CLASSIFICATION	9.528999039356302E-6	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9999839288754901	WITHOUT_CLASSIFICATION	1.6071124509879968E-5	DOCUMENTATION
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999804362734221	WITHOUT_CLASSIFICATION	1.9563726577841572E-5	DOCUMENTATION
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9999940127118964	WITHOUT_CLASSIFICATION	5.987288103719928E-6	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.9999701918538246	WITHOUT_CLASSIFICATION	2.9808146175429647E-5	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9999816639325319	WITHOUT_CLASSIFICATION	1.83360674681009E-5	DOCUMENTATION
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999993259323033	WITHOUT_CLASSIFICATION	6.740676967296818E-7	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999951808513622	WITHOUT_CLASSIFICATION	4.8191486378773435E-6	DOCUMENTATION
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.999995786275517	WITHOUT_CLASSIFICATION	4.213724483052113E-6	DOCUMENTATION
//if its "id"	WITHOUT_CLASSIFICATION	0.9999768329633758	WITHOUT_CLASSIFICATION	2.3167036624217195E-5	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9999926865934387	WITHOUT_CLASSIFICATION	7.313406561294506E-6	DOCUMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999853979981749	WITHOUT_CLASSIFICATION	1.4602001825163078E-5	DOCUMENTATION
//important!!	WITHOUT_CLASSIFICATION	0.9999508477862892	WITHOUT_CLASSIFICATION	4.9152213710806104E-5	DOCUMENTATION
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9999977431386119	WITHOUT_CLASSIFICATION	2.2568613880544135E-6	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999884120712431	WITHOUT_CLASSIFICATION	1.158792875678388E-5	DOCUMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9999918139222154	WITHOUT_CLASSIFICATION	8.186077784587378E-6	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999993265883367	WITHOUT_CLASSIFICATION	6.73411663313672E-7	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9994454319075339	WITHOUT_CLASSIFICATION	5.545680924660915E-4	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9998971002479798	WITHOUT_CLASSIFICATION	1.0289975202015317E-4	DOCUMENTATION
// collections of values	WITHOUT_CLASSIFICATION	0.9999993872692547	WITHOUT_CLASSIFICATION	6.127307452112571E-7	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9999290875645571	WITHOUT_CLASSIFICATION	7.091243544289965E-5	DOCUMENTATION
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999990503174899	WITHOUT_CLASSIFICATION	9.496825100568023E-7	DOCUMENTATION
//special case	WITHOUT_CLASSIFICATION	0.999987399635101	WITHOUT_CLASSIFICATION	1.2600364899084464E-5	DOCUMENTATION
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.999985980613915	WITHOUT_CLASSIFICATION	1.4019386085112444E-5	DOCUMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999800003050144	WITHOUT_CLASSIFICATION	1.999969498551356E-5	DOCUMENTATION
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999972646316736	WITHOUT_CLASSIFICATION	2.7353683263768396E-6	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999949585034655	WITHOUT_CLASSIFICATION	5.0414965343969885E-6	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999987830840149	WITHOUT_CLASSIFICATION	1.2169159851529634E-6	DOCUMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9999918730836828	WITHOUT_CLASSIFICATION	8.126916317248915E-6	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999998351526241	WITHOUT_CLASSIFICATION	1.648473759674893E-7	DOCUMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9999687479187931	WITHOUT_CLASSIFICATION	3.1252081206961354E-5	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.999970038602141	WITHOUT_CLASSIFICATION	2.996139785899446E-5	DOCUMENTATION
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9999852922298799	WITHOUT_CLASSIFICATION	1.4707770120077421E-5	DOCUMENTATION
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.999999820887725	WITHOUT_CLASSIFICATION	1.7911227507552507E-7	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9999924099865355	WITHOUT_CLASSIFICATION	7.5900134644729975E-6	DOCUMENTATION
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999808635338157	WITHOUT_CLASSIFICATION	1.913646618436925E-5	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999990990514193	WITHOUT_CLASSIFICATION	9.009485806902843E-7	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.9998971002479798	WITHOUT_CLASSIFICATION	1.0289975202015317E-4	DOCUMENTATION
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9999943678343652	WITHOUT_CLASSIFICATION	5.632165634804116E-6	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999996138568256	WITHOUT_CLASSIFICATION	3.861431744386877E-7	DOCUMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999949806588947	WITHOUT_CLASSIFICATION	5.019341105304844E-6	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999992011020472	WITHOUT_CLASSIFICATION	7.988979528639395E-7	DOCUMENTATION
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9999972656728713	WITHOUT_CLASSIFICATION	2.7343271287569903E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999929226889906	WITHOUT_CLASSIFICATION	7.0773110093879246E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999929226889906	WITHOUT_CLASSIFICATION	7.0773110093879246E-6	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999992328285143	WITHOUT_CLASSIFICATION	7.671714856627674E-7	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999929226889906	WITHOUT_CLASSIFICATION	7.0773110093879246E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999929226889906	WITHOUT_CLASSIFICATION	7.0773110093879246E-6	DOCUMENTATION
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9999748355018413	WITHOUT_CLASSIFICATION	2.5164498158675794E-5	DOCUMENTATION
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.99999901766781	WITHOUT_CLASSIFICATION	9.823321899781283E-7	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999998180242391	WITHOUT_CLASSIFICATION	1.8197576093724713E-7	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999998264589374	WITHOUT_CLASSIFICATION	1.7354106273031627E-7	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999991278541568	WITHOUT_CLASSIFICATION	8.721458432979635E-7	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9999992752236815	WITHOUT_CLASSIFICATION	7.247763186174544E-7	DOCUMENTATION
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9999911770214709	WITHOUT_CLASSIFICATION	8.822978529125375E-6	DOCUMENTATION
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999987537628888	WITHOUT_CLASSIFICATION	1.2462371111225217E-6	DOCUMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999786193842097	WITHOUT_CLASSIFICATION	2.1380615790259257E-5	DOCUMENTATION
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9999763446079701	WITHOUT_CLASSIFICATION	2.3655392029771143E-5	DOCUMENTATION
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9999979032410918	WITHOUT_CLASSIFICATION	2.0967589081492883E-6	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999744175231199	WITHOUT_CLASSIFICATION	2.558247688012108E-5	DOCUMENTATION
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999909669761183	WITHOUT_CLASSIFICATION	9.033023881598872E-6	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.9999951252989642	WITHOUT_CLASSIFICATION	4.8747010358402395E-6	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999977120478077	WITHOUT_CLASSIFICATION	2.2879521922729455E-6	DOCUMENTATION
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9999947757652828	WITHOUT_CLASSIFICATION	5.224234717197801E-6	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999976365851405	WITHOUT_CLASSIFICATION	2.363414859565204E-6	DOCUMENTATION
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9999945970146916	WITHOUT_CLASSIFICATION	5.402985308375372E-6	DOCUMENTATION
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9999845093115782	WITHOUT_CLASSIFICATION	1.549068842173179E-5	DOCUMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9999951560754499	WITHOUT_CLASSIFICATION	4.8439245501951714E-6	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999977651645893	WITHOUT_CLASSIFICATION	2.234835410764151E-6	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.999991810083385	WITHOUT_CLASSIFICATION	8.189916614947436E-6	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999976365851405	WITHOUT_CLASSIFICATION	2.363414859565204E-6	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999904710009607	WITHOUT_CLASSIFICATION	9.528999039356302E-6	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9999944609939211	WITHOUT_CLASSIFICATION	5.539006078815571E-6	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999997884555951	WITHOUT_CLASSIFICATION	2.1154440483162718E-7	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999997513477238	WITHOUT_CLASSIFICATION	2.4865227623106444E-7	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9997309037722508	WITHOUT_CLASSIFICATION	2.6909622774916005E-4	DOCUMENTATION
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999992674010242	WITHOUT_CLASSIFICATION	7.325989757948993E-7	DOCUMENTATION
// careful with this!	WITHOUT_CLASSIFICATION	0.9999950879570381	WITHOUT_CLASSIFICATION	4.912042961864623E-6	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999981599861731	WITHOUT_CLASSIFICATION	1.8400138268670925E-6	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999929486754737	WITHOUT_CLASSIFICATION	7.051324526169093E-6	DOCUMENTATION
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999927298572084	WITHOUT_CLASSIFICATION	7.270142791508949E-6	DOCUMENTATION
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9999921416909563	WITHOUT_CLASSIFICATION	7.858309043738105E-6	DOCUMENTATION
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999983117410961	WITHOUT_CLASSIFICATION	1.6882589038876085E-6	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999988825445446	WITHOUT_CLASSIFICATION	1.1174554554622589E-6	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999988747275027	WITHOUT_CLASSIFICATION	1.1252724972803342E-6	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9999776460396502	WITHOUT_CLASSIFICATION	2.235396034977165E-5	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.9999998528017062	WITHOUT_CLASSIFICATION	1.471982937483195E-7	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999975706962199	WITHOUT_CLASSIFICATION	2.4293037801346324E-6	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999984359473904	WITHOUT_CLASSIFICATION	1.564052609670151E-6	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999997680547614	WITHOUT_CLASSIFICATION	2.319452385441138E-7	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999995707495659	WITHOUT_CLASSIFICATION	4.292504341266584E-7	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.9999896566093038	WITHOUT_CLASSIFICATION	1.0343390696141959E-5	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999951342524384	WITHOUT_CLASSIFICATION	4.8657475616739146E-6	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.999999750030595	WITHOUT_CLASSIFICATION	2.49969404974194E-7	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999929486754737	WITHOUT_CLASSIFICATION	7.051324526169093E-6	DOCUMENTATION
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9999934339620093	WITHOUT_CLASSIFICATION	6.566037990569508E-6	DOCUMENTATION
//do replacements	WITHOUT_CLASSIFICATION	0.9999890501205805	WITHOUT_CLASSIFICATION	1.0949879419539938E-5	DOCUMENTATION
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9999927739358552	WITHOUT_CLASSIFICATION	7.226064144930178E-6	DOCUMENTATION
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999991662186328	WITHOUT_CLASSIFICATION	8.337813671410757E-7	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990740170541	WITHOUT_CLASSIFICATION	9.259829459269845E-7	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.9999864500967361	WITHOUT_CLASSIFICATION	1.3549903263733504E-5	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.9999828455220932	WITHOUT_CLASSIFICATION	1.715447790685523E-5	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999956632745389	WITHOUT_CLASSIFICATION	4.336725461038302E-6	DOCUMENTATION
//sql = update;	WITHOUT_CLASSIFICATION	0.9999918859037903	WITHOUT_CLASSIFICATION	8.1140962097032E-6	DOCUMENTATION
//hilo config	WITHOUT_CLASSIFICATION	0.9999792159546886	WITHOUT_CLASSIFICATION	2.0784045311328667E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999986912189903	WITHOUT_CLASSIFICATION	1.3087810097260594E-6	DOCUMENTATION
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999997709789039	WITHOUT_CLASSIFICATION	2.2902109607769013E-7	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.999995547578631	WITHOUT_CLASSIFICATION	4.452421368980208E-6	DOCUMENTATION
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.999999226951917	WITHOUT_CLASSIFICATION	7.730480830596447E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999977465976663	WITHOUT_CLASSIFICATION	2.2534023336785147E-6	DOCUMENTATION
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999965121731779	WITHOUT_CLASSIFICATION	3.4878268220787177E-6	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999717580272782	WITHOUT_CLASSIFICATION	2.8241972721790458E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999986912189903	WITHOUT_CLASSIFICATION	1.3087810097260594E-6	DOCUMENTATION
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999983872311715	WITHOUT_CLASSIFICATION	1.6127688284438377E-6	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9999797604495081	WITHOUT_CLASSIFICATION	2.0239550491879505E-5	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.9999989077508051	WITHOUT_CLASSIFICATION	1.0922491948549688E-6	DOCUMENTATION
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999993463806714	WITHOUT_CLASSIFICATION	6.536193284410108E-7	DOCUMENTATION
// the default...	WITHOUT_CLASSIFICATION	0.9999968747044637	WITHOUT_CLASSIFICATION	3.1252955362193445E-6	DOCUMENTATION
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999998099149836	WITHOUT_CLASSIFICATION	1.900850164420157E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999977465976663	WITHOUT_CLASSIFICATION	2.2534023336785147E-6	DOCUMENTATION
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999995540338507	WITHOUT_CLASSIFICATION	4.459661493333014E-7	DOCUMENTATION
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998988513868	WITHOUT_CLASSIFICATION	1.0114861320615442E-6	DOCUMENTATION
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993564652365	WITHOUT_CLASSIFICATION	6.435347634094926E-7	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999967091801546	WITHOUT_CLASSIFICATION	3.290819845334075E-6	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999975303136711	WITHOUT_CLASSIFICATION	2.46968632892637E-6	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983087740318	WITHOUT_CLASSIFICATION	1.6912259681870843E-6	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999965230321531	WITHOUT_CLASSIFICATION	3.4769678467980587E-6	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999965230321531	WITHOUT_CLASSIFICATION	3.4769678467980587E-6	DOCUMENTATION
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999903012393884	WITHOUT_CLASSIFICATION	9.698760611664284E-6	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999975235991113	WITHOUT_CLASSIFICATION	2.4764008886608195E-6	DOCUMENTATION
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999969665896947	WITHOUT_CLASSIFICATION	3.033410305250925E-6	DOCUMENTATION
// scroll backward	WITHOUT_CLASSIFICATION	0.9999974530089951	WITHOUT_CLASSIFICATION	2.5469910049245317E-6	DOCUMENTATION
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.9999987889119116	WITHOUT_CLASSIFICATION	1.2110880884253909E-6	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99999223685649	WITHOUT_CLASSIFICATION	7.76314351009794E-6	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999824000168268	WITHOUT_CLASSIFICATION	1.759998317312828E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999948757311928	WITHOUT_CLASSIFICATION	5.124268807148456E-6	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999998924988528	WITHOUT_CLASSIFICATION	1.075011472140044E-7	DOCUMENTATION
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999970560115355	WITHOUT_CLASSIFICATION	2.9439884645092614E-6	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.99999223685649	WITHOUT_CLASSIFICATION	7.76314351009794E-6	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999824000168268	WITHOUT_CLASSIFICATION	1.759998317312828E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999948757311928	WITHOUT_CLASSIFICATION	5.124268807148456E-6	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9999919336083812	WITHOUT_CLASSIFICATION	8.066391618860894E-6	DOCUMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.9999701147772508	WITHOUT_CLASSIFICATION	2.9885222749235533E-5	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999994812544746	WITHOUT_CLASSIFICATION	5.187455253752984E-7	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999978402515557	WITHOUT_CLASSIFICATION	2.1597484442621993E-6	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999989116654641	WITHOUT_CLASSIFICATION	1.0883345358653E-6	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9999998111857816	WITHOUT_CLASSIFICATION	1.8881421835552592E-7	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9999877137276598	WITHOUT_CLASSIFICATION	1.2286272340196499E-5	DOCUMENTATION
//checking for named queries	WITHOUT_CLASSIFICATION	0.9999763105475535	WITHOUT_CLASSIFICATION	2.368945244644888E-5	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9999404908090987	WITHOUT_CLASSIFICATION	5.9509190901346315E-5	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999981833769361	WITHOUT_CLASSIFICATION	1.816623063859341E-6	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999983791660206	WITHOUT_CLASSIFICATION	1.6208339793520442E-6	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999811824976191	WITHOUT_CLASSIFICATION	1.881750238081869E-5	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9999804888365382	WITHOUT_CLASSIFICATION	1.9511163461712553E-5	DOCUMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999954840475589	WITHOUT_CLASSIFICATION	4.515952441081292E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999958281242085	WITHOUT_CLASSIFICATION	4.171875791506344E-6	DOCUMENTATION
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999733301548939	WITHOUT_CLASSIFICATION	2.6669845106144717E-5	DOCUMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9999738509623839	WITHOUT_CLASSIFICATION	2.6149037616112854E-5	DOCUMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999379544639682	WITHOUT_CLASSIFICATION	6.204553603184675E-5	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.999998513335489	WITHOUT_CLASSIFICATION	1.4866645109975002E-6	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999930335086942	WITHOUT_CLASSIFICATION	6.9664913058954335E-6	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999977604481415	WITHOUT_CLASSIFICATION	2.2395518585745596E-6	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999980488853117	WITHOUT_CLASSIFICATION	1.951114688362488E-6	DOCUMENTATION
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9999989448168984	WITHOUT_CLASSIFICATION	1.055183101529266E-6	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999996945148913	WITHOUT_CLASSIFICATION	3.054851087096863E-7	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999997842266865	WITHOUT_CLASSIFICATION	2.15773313550074E-7	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9999970706136858	WITHOUT_CLASSIFICATION	2.9293863142087843E-6	DOCUMENTATION
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999940159958345	WITHOUT_CLASSIFICATION	5.984004165514656E-6	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999956954876513	WITHOUT_CLASSIFICATION	4.3045123486475494E-6	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.999979643538811	WITHOUT_CLASSIFICATION	2.0356461189121163E-5	DOCUMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999953961879142	WITHOUT_CLASSIFICATION	4.603812085787586E-6	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999894928482252	WITHOUT_CLASSIFICATION	1.0507151774743011E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999673669236527	WITHOUT_CLASSIFICATION	3.263307634736056E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999673669236527	WITHOUT_CLASSIFICATION	3.263307634736056E-5	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999992685939674	WITHOUT_CLASSIFICATION	7.314060327090691E-7	DOCUMENTATION
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999998800316513	WITHOUT_CLASSIFICATION	1.1996834870087892E-7	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999991548483957	WITHOUT_CLASSIFICATION	8.451516042390257E-7	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997361413796165	WITHOUT_CLASSIFICATION	2.638586203834822E-4	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999972907295271	WITHOUT_CLASSIFICATION	2.7092704728610497E-6	DOCUMENTATION
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9999984641787767	WITHOUT_CLASSIFICATION	1.5358212233058854E-6	DOCUMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9998947807715397	WITHOUT_CLASSIFICATION	1.0521922846020895E-4	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999971959554652	WITHOUT_CLASSIFICATION	2.8040445349215237E-6	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999971415924553	WITHOUT_CLASSIFICATION	2.8584075445669986E-6	DOCUMENTATION
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992808981883	WITHOUT_CLASSIFICATION	7.191018116536118E-7	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991985970275	WITHOUT_CLASSIFICATION	8.01402972496207E-7	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999201391217	WITHOUT_CLASSIFICATION	7.986087828934094E-7	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985785195606	WITHOUT_CLASSIFICATION	1.421480439353337E-6	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991200414226	WITHOUT_CLASSIFICATION	8.799585773993528E-7	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999988240769383	WITHOUT_CLASSIFICATION	1.1759230617331298E-6	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999999203422485	WITHOUT_CLASSIFICATION	7.96577514891728E-7	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995740098672	WITHOUT_CLASSIFICATION	4.259901329329526E-7	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996686394019	WITHOUT_CLASSIFICATION	3.3136059804494703E-7	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985885764135	WITHOUT_CLASSIFICATION	1.4114235864389322E-6	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990201533834	WITHOUT_CLASSIFICATION	9.79846616613076E-7	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999995323991056	WITHOUT_CLASSIFICATION	4.676008944720698E-7	DOCUMENTATION
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9999907397936921	WITHOUT_CLASSIFICATION	9.260206307904992E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999983043189745	WITHOUT_CLASSIFICATION	1.6956810255586462E-6	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999979724131638	WITHOUT_CLASSIFICATION	2.027586836172859E-6	DOCUMENTATION
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999998597288505	WITHOUT_CLASSIFICATION	1.4027114938540183E-7	DOCUMENTATION
// not for internal use:	WITHOUT_CLASSIFICATION	0.9999959361732896	WITHOUT_CLASSIFICATION	4.063826710444906E-6	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999998745475048	WITHOUT_CLASSIFICATION	1.254524951566331E-7	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9999980990946568	WITHOUT_CLASSIFICATION	1.9009053431622776E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999983043189745	WITHOUT_CLASSIFICATION	1.6956810255586462E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999983043189745	WITHOUT_CLASSIFICATION	1.6956810255586462E-6	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9999893322395192	WITHOUT_CLASSIFICATION	1.066776048064933E-5	DOCUMENTATION
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999995644557674	WITHOUT_CLASSIFICATION	4.3554423256454004E-7	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999994439496641	WITHOUT_CLASSIFICATION	5.560503358557661E-7	DOCUMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999949180204856	WITHOUT_CLASSIFICATION	5.081979514415686E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999966234148753	WITHOUT_CLASSIFICATION	3.3765851246969665E-6	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999930335086942	WITHOUT_CLASSIFICATION	6.9664913058954335E-6	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9999983463109051	WITHOUT_CLASSIFICATION	1.6536890948680152E-6	DOCUMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999986881644809	WITHOUT_CLASSIFICATION	1.3118355190713526E-6	DOCUMENTATION
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999995196044386	WITHOUT_CLASSIFICATION	4.803955614277982E-7	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999969789627787	WITHOUT_CLASSIFICATION	3.0210372212417997E-6	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999992607738462	WITHOUT_CLASSIFICATION	7.39226153820665E-7	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999942997652469	WITHOUT_CLASSIFICATION	5.7002347531090015E-6	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999932762847746	WITHOUT_CLASSIFICATION	6.723715225408952E-6	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999932762847746	WITHOUT_CLASSIFICATION	6.723715225408952E-6	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999918306291217	WITHOUT_CLASSIFICATION	8.16937087830802E-6	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999918306291217	WITHOUT_CLASSIFICATION	8.16937087830802E-6	DOCUMENTATION
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999954161641003	WITHOUT_CLASSIFICATION	4.58383589974525E-6	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999936157690444	WITHOUT_CLASSIFICATION	6.384230955613263E-6	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9999896223554026	WITHOUT_CLASSIFICATION	1.0377644597481406E-5	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999940419105604	WITHOUT_CLASSIFICATION	5.958089439555058E-6	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9999996649435934	WITHOUT_CLASSIFICATION	3.350564066315855E-7	DOCUMENTATION
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9999992807287585	WITHOUT_CLASSIFICATION	7.192712414229843E-7	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999997773773229	WITHOUT_CLASSIFICATION	2.2262267710621326E-6	DOCUMENTATION
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983870343421	WITHOUT_CLASSIFICATION	1.6129656579766742E-6	DOCUMENTATION
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.999999372607865	WITHOUT_CLASSIFICATION	6.2739213496161E-7	DOCUMENTATION
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999990280495168	WITHOUT_CLASSIFICATION	9.71950483193914E-7	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999869393632058	WITHOUT_CLASSIFICATION	1.3060636794078807E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9999258645378671	WITHOUT_CLASSIFICATION	7.413546213287948E-5	DOCUMENTATION
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999983592449775	WITHOUT_CLASSIFICATION	1.6407550225056792E-6	DOCUMENTATION
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9999966600112022	WITHOUT_CLASSIFICATION	3.3399887978076926E-6	DOCUMENTATION
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999971695661416	WITHOUT_CLASSIFICATION	2.8304338582812313E-6	DOCUMENTATION
//no big deal	WITHOUT_CLASSIFICATION	0.9999878915880311	WITHOUT_CLASSIFICATION	1.2108411968826593E-5	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999979194828109	WITHOUT_CLASSIFICATION	2.080517189085339E-6	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999979194828109	WITHOUT_CLASSIFICATION	2.080517189085339E-6	DOCUMENTATION
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999997502656607	WITHOUT_CLASSIFICATION	2.497343393130018E-7	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.999995092903398	WITHOUT_CLASSIFICATION	4.907096602024534E-6	DOCUMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999990423270368	WITHOUT_CLASSIFICATION	9.576729631036474E-7	DOCUMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999813766126919	WITHOUT_CLASSIFICATION	1.8623387307996504E-5	DOCUMENTATION
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993592790585	WITHOUT_CLASSIFICATION	6.407209414802558E-7	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987804496815	WITHOUT_CLASSIFICATION	1.219550318518619E-6	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.9999940036449725	WITHOUT_CLASSIFICATION	5.996355027473946E-6	DOCUMENTATION
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999974016835698	WITHOUT_CLASSIFICATION	2.5983164302159695E-6	DOCUMENTATION
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9999997292104008	WITHOUT_CLASSIFICATION	2.707895992113278E-7	DOCUMENTATION
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999999093820965	WITHOUT_CLASSIFICATION	9.061790358367138E-8	DOCUMENTATION
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9999999557330728	WITHOUT_CLASSIFICATION	4.42669272331083E-8	DOCUMENTATION
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999997385461865	WITHOUT_CLASSIFICATION	2.6145381353565963E-7	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996481347435	WITHOUT_CLASSIFICATION	3.5186525650888424E-6	DOCUMENTATION
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.999998614929584	WITHOUT_CLASSIFICATION	1.3850704160161573E-6	DOCUMENTATION
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999989655489001	WITHOUT_CLASSIFICATION	1.0344510999253553E-6	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9999956138015522	WITHOUT_CLASSIFICATION	4.386198447794396E-6	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999992563286251	WITHOUT_CLASSIFICATION	7.43671374914675E-7	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999896343748318	WITHOUT_CLASSIFICATION	1.0365625168261773E-5	DOCUMENTATION
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999790936177635	WITHOUT_CLASSIFICATION	2.0906382236517523E-5	DOCUMENTATION
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999957675085405	WITHOUT_CLASSIFICATION	4.232491459534782E-6	DOCUMENTATION
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999993431980808	WITHOUT_CLASSIFICATION	6.568019193158656E-7	DOCUMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999996931166002	WITHOUT_CLASSIFICATION	3.068833998235899E-7	DOCUMENTATION
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999986652666566	WITHOUT_CLASSIFICATION	1.3347333433607696E-6	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999930130182889	WITHOUT_CLASSIFICATION	6.986981711145458E-6	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999977411172275	WITHOUT_CLASSIFICATION	2.2588827725299354E-6	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9999963420654906	WITHOUT_CLASSIFICATION	3.6579345092719347E-6	DOCUMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999968825046862	WITHOUT_CLASSIFICATION	3.117495313673327E-6	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9999778277867001	WITHOUT_CLASSIFICATION	2.217221329999954E-5	DOCUMENTATION
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999991209932945	WITHOUT_CLASSIFICATION	8.790067055333754E-7	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.999988851036076	WITHOUT_CLASSIFICATION	1.1148963924054514E-5	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.999999960204626	WITHOUT_CLASSIFICATION	3.97953739610829E-8	DOCUMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999625437940715	WITHOUT_CLASSIFICATION	3.7456205928535836E-5	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9996931220416714	WITHOUT_CLASSIFICATION	3.068779583285375E-4	DOCUMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9999955726335131	WITHOUT_CLASSIFICATION	4.427366486826946E-6	DOCUMENTATION
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9999832787672938	WITHOUT_CLASSIFICATION	1.6721232706222027E-5	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.9999971797674266	WITHOUT_CLASSIFICATION	2.8202325733615963E-6	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999996481550802	WITHOUT_CLASSIFICATION	3.5184491979313154E-7	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.9999993003331893	WITHOUT_CLASSIFICATION	6.996668107661457E-7	DOCUMENTATION
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999981747596167	WITHOUT_CLASSIFICATION	1.825240383351964E-6	DOCUMENTATION
//handle empty collections	WITHOUT_CLASSIFICATION	0.9999971588437765	WITHOUT_CLASSIFICATION	2.8411562233755673E-6	DOCUMENTATION
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999979930001213	WITHOUT_CLASSIFICATION	2.0069998787231114E-6	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.999999466598288	WITHOUT_CLASSIFICATION	5.334017119394398E-7	DOCUMENTATION
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9999997073664725	WITHOUT_CLASSIFICATION	2.9263352751035956E-7	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999982634160931	WITHOUT_CLASSIFICATION	1.7365839069637885E-6	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9999980903546158	WITHOUT_CLASSIFICATION	1.909645384112913E-6	DOCUMENTATION
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999762087402476	WITHOUT_CLASSIFICATION	2.3791259752417566E-5	DOCUMENTATION
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999863431205809	WITHOUT_CLASSIFICATION	1.365687941917015E-5	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999577599254064	WITHOUT_CLASSIFICATION	4.224007459356946E-5	DOCUMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999970432346181	WITHOUT_CLASSIFICATION	2.956765381797155E-6	DOCUMENTATION
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.999984681452459	WITHOUT_CLASSIFICATION	1.5318547541021425E-5	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9999968319129819	WITHOUT_CLASSIFICATION	3.1680870179726954E-6	DOCUMENTATION
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9999965279680372	WITHOUT_CLASSIFICATION	3.4720319627295567E-6	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9999881723532779	WITHOUT_CLASSIFICATION	1.1827646722064202E-5	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999966646598698	WITHOUT_CLASSIFICATION	3.3353401301786818E-6	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9999964504435856	WITHOUT_CLASSIFICATION	3.549556414374682E-6	DOCUMENTATION
// look for a proxy	WITHOUT_CLASSIFICATION	0.9999937302977606	WITHOUT_CLASSIFICATION	6.26970223938752E-6	DOCUMENTATION
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9999971562628329	WITHOUT_CLASSIFICATION	2.843737166988837E-6	DOCUMENTATION
//its the given optional object	WITHOUT_CLASSIFICATION	0.9999950238015718	WITHOUT_CLASSIFICATION	4.976198428253999E-6	DOCUMENTATION
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999966640683473	WITHOUT_CLASSIFICATION	3.335931652724492E-6	DOCUMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9999939243852296	WITHOUT_CLASSIFICATION	6.075614770351794E-6	DOCUMENTATION
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.99999868672757	WITHOUT_CLASSIFICATION	1.3132724299886774E-6	DOCUMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999956005616892	WITHOUT_CLASSIFICATION	4.399438310721918E-6	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999999186691554	WITHOUT_CLASSIFICATION	8.13308447075055E-8	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999969167741999	WITHOUT_CLASSIFICATION	3.0832258000458448E-6	DOCUMENTATION
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999932283851494	WITHOUT_CLASSIFICATION	6.771614850572757E-6	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9999994119609281	WITHOUT_CLASSIFICATION	5.880390718556613E-7	DOCUMENTATION
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999997274766658	WITHOUT_CLASSIFICATION	2.7252333431910556E-7	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9999979729260976	WITHOUT_CLASSIFICATION	2.0270739024248434E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999906877150827	WITHOUT_CLASSIFICATION	9.312284917297363E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999906877150827	WITHOUT_CLASSIFICATION	9.312284917297363E-5	DOCUMENTATION
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9999919845591586	WITHOUT_CLASSIFICATION	8.015440841341368E-6	DOCUMENTATION
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9999992012042631	WITHOUT_CLASSIFICATION	7.987957369872102E-7	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9999991990693904	WITHOUT_CLASSIFICATION	8.00930609588758E-7	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9999950691865579	WITHOUT_CLASSIFICATION	4.93081344214891E-6	DOCUMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999987829353955	WITHOUT_CLASSIFICATION	1.2170646045520545E-6	DOCUMENTATION
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9999990282027741	WITHOUT_CLASSIFICATION	9.717972259169834E-7	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999999702954476	WITHOUT_CLASSIFICATION	2.9704552337986938E-8	DOCUMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999999457853941	WITHOUT_CLASSIFICATION	5.42146059645918E-8	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9999936880741241	WITHOUT_CLASSIFICATION	6.311925875837875E-6	DOCUMENTATION
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.999999268336089	WITHOUT_CLASSIFICATION	7.316639109104002E-7	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999965126885015	WITHOUT_CLASSIFICATION	3.4873114984045273E-6	DOCUMENTATION
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9999951601096588	WITHOUT_CLASSIFICATION	4.839890341188979E-6	DOCUMENTATION
//a composite key	WITHOUT_CLASSIFICATION	0.9999928240095467	WITHOUT_CLASSIFICATION	7.175990453210376E-6	DOCUMENTATION
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999988792402479	WITHOUT_CLASSIFICATION	1.1207597520883435E-6	DOCUMENTATION
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999883762281098	WITHOUT_CLASSIFICATION	1.1623771890304656E-5	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.9999986902090936	WITHOUT_CLASSIFICATION	1.309790906334554E-6	DOCUMENTATION
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.999986516414825	WITHOUT_CLASSIFICATION	1.3483585174896754E-5	DOCUMENTATION
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9999996560718746	WITHOUT_CLASSIFICATION	3.439281254147854E-7	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9999993971141968	WITHOUT_CLASSIFICATION	6.028858031274456E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9999987124884576	WITHOUT_CLASSIFICATION	1.287511542362245E-6	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999961314864999	WITHOUT_CLASSIFICATION	3.868513500151557E-6	DOCUMENTATION
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9998771785905655	WITHOUT_CLASSIFICATION	1.2282140943453528E-4	DOCUMENTATION
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9999798207224206	WITHOUT_CLASSIFICATION	2.0179277579417142E-5	DOCUMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9999989615471757	WITHOUT_CLASSIFICATION	1.0384528242255798E-6	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999983926473305	WITHOUT_CLASSIFICATION	1.6073526694863388E-6	DOCUMENTATION
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9999985121158652	WITHOUT_CLASSIFICATION	1.4878841347730931E-6	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999902924535323	WITHOUT_CLASSIFICATION	9.707546467738037E-6	DOCUMENTATION
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999894130122313	WITHOUT_CLASSIFICATION	1.0586987768682294E-5	DOCUMENTATION
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999989928207504	WITHOUT_CLASSIFICATION	1.0071792495474154E-6	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.99999846973219	WITHOUT_CLASSIFICATION	1.5302678100330767E-6	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999988536072902	WITHOUT_CLASSIFICATION	1.1463927097812524E-6	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9999953128667144	WITHOUT_CLASSIFICATION	4.687133285613455E-6	DOCUMENTATION
//the criteria instance	WITHOUT_CLASSIFICATION	0.9999853289531445	WITHOUT_CLASSIFICATION	1.467104685554155E-5	DOCUMENTATION
// the entity name	WITHOUT_CLASSIFICATION	0.9999937418611745	WITHOUT_CLASSIFICATION	6.258138825469947E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9999701448711767	WITHOUT_CLASSIFICATION	2.985512882322203E-5	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9999701448711767	WITHOUT_CLASSIFICATION	2.985512882322203E-5	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999934989483618	WITHOUT_CLASSIFICATION	6.501051638293333E-6	DOCUMENTATION
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9999931491511649	WITHOUT_CLASSIFICATION	6.850848835114519E-6	DOCUMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.999998234908492	WITHOUT_CLASSIFICATION	1.7650915079781086E-6	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999986637982395	WITHOUT_CLASSIFICATION	1.336201760461292E-6	DOCUMENTATION
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999975805663242	WITHOUT_CLASSIFICATION	2.4194336757336135E-6	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999977782902302	WITHOUT_CLASSIFICATION	2.221709769801967E-6	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999979936519886	WITHOUT_CLASSIFICATION	2.0063480113241967E-6	DOCUMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9999997525316475	WITHOUT_CLASSIFICATION	2.474683525605323E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9999984495893683	WITHOUT_CLASSIFICATION	1.5504106316352592E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999995619283	WITHOUT_CLASSIFICATION	4.380716999952769E-7	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999990086432644	WITHOUT_CLASSIFICATION	9.91356735532086E-7	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9999979635557303	WITHOUT_CLASSIFICATION	2.036444269693993E-6	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999986364100996	WITHOUT_CLASSIFICATION	1.3635899003535712E-6	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999969105138514	WITHOUT_CLASSIFICATION	3.089486148577048E-6	DOCUMENTATION
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999988642022105	WITHOUT_CLASSIFICATION	1.135797789459638E-6	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999923929476355	WITHOUT_CLASSIFICATION	7.607052364596595E-6	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999923929476355	WITHOUT_CLASSIFICATION	7.607052364596595E-6	DOCUMENTATION
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999949633287514	WITHOUT_CLASSIFICATION	5.036671248637919E-6	DOCUMENTATION
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.999996952972488	WITHOUT_CLASSIFICATION	3.0470275120972894E-6	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999945572391212	WITHOUT_CLASSIFICATION	5.442760878766675E-6	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999995494369597	WITHOUT_CLASSIFICATION	4.505630402825598E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9999258645378671	WITHOUT_CLASSIFICATION	7.413546213287948E-5	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9999010002936803	WITHOUT_CLASSIFICATION	9.899970631970409E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999969505469749	WITHOUT_CLASSIFICATION	3.0494530250499325E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999975623483955	WITHOUT_CLASSIFICATION	2.4376516045225628E-6	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.9999975623483955	WITHOUT_CLASSIFICATION	2.4376516045225628E-6	DOCUMENTATION
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999987732931838	WITHOUT_CLASSIFICATION	1.2267068161734474E-6	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999998433863349	WITHOUT_CLASSIFICATION	1.566136651963324E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.999998343579647	WITHOUT_CLASSIFICATION	1.6564203529126198E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999998411366565	WITHOUT_CLASSIFICATION	1.5886334355446653E-7	DOCUMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9999991784152482	WITHOUT_CLASSIFICATION	8.215847517658327E-7	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999049954194036	WITHOUT_CLASSIFICATION	9.500458059641772E-5	DOCUMENTATION
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999996635501207	WITHOUT_CLASSIFICATION	3.3644987927125924E-7	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999981963922642	WITHOUT_CLASSIFICATION	1.8036077357282696E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999983962212736	WITHOUT_CLASSIFICATION	1.6037787263986886E-6	DOCUMENTATION
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.9999994100551545	WITHOUT_CLASSIFICATION	5.899448454425216E-7	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999995647798882	WITHOUT_CLASSIFICATION	4.352201119621809E-7	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999933975180998	WITHOUT_CLASSIFICATION	6.602481900214431E-6	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.999997900660676	WITHOUT_CLASSIFICATION	2.0993393239498704E-6	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.9999820234448827	WITHOUT_CLASSIFICATION	1.7976555117160486E-5	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.999991525501997	WITHOUT_CLASSIFICATION	8.474498003000885E-6	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999964335746038	WITHOUT_CLASSIFICATION	3.5664253961613154E-6	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9999950268212069	WITHOUT_CLASSIFICATION	4.973178793174778E-6	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9999855468625268	WITHOUT_CLASSIFICATION	1.4453137473136994E-5	DOCUMENTATION
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999958920081453	WITHOUT_CLASSIFICATION	4.107991854644791E-6	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999989977251764	WITHOUT_CLASSIFICATION	1.0022748235506207E-6	DOCUMENTATION
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999989788646764	WITHOUT_CLASSIFICATION	1.0211353236277268E-6	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999818568693024	WITHOUT_CLASSIFICATION	1.8143130697574466E-5	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999976833450973	WITHOUT_CLASSIFICATION	2.3166549027442657E-6	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9999990319993529	WITHOUT_CLASSIFICATION	9.68000647061883E-7	DOCUMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.999999168358075	WITHOUT_CLASSIFICATION	8.316419248839268E-7	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9999994048931186	WITHOUT_CLASSIFICATION	5.951068814571799E-7	DOCUMENTATION
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9999993223120488	WITHOUT_CLASSIFICATION	6.776879511420974E-7	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9999993938632034	WITHOUT_CLASSIFICATION	6.061367967088468E-7	DOCUMENTATION
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.999999678578172	WITHOUT_CLASSIFICATION	3.214218280668783E-7	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999990060100411	WITHOUT_CLASSIFICATION	9.93989958895873E-7	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.99998946791475	WITHOUT_CLASSIFICATION	1.053208525002158E-5	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9999800380634756	WITHOUT_CLASSIFICATION	1.996193652445518E-5	DOCUMENTATION
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9999996583803266	WITHOUT_CLASSIFICATION	3.4161967348787487E-7	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9999881448218411	WITHOUT_CLASSIFICATION	1.185517815888441E-5	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9999933107773156	WITHOUT_CLASSIFICATION	6.689222684381575E-6	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9999739756544604	WITHOUT_CLASSIFICATION	2.6024345539507584E-5	DOCUMENTATION
//may be final	WITHOUT_CLASSIFICATION	0.9999824182239963	WITHOUT_CLASSIFICATION	1.7581776003771478E-5	DOCUMENTATION
// may be final	WITHOUT_CLASSIFICATION	0.9999966783081702	WITHOUT_CLASSIFICATION	3.321691829754717E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999922596318139	WITHOUT_CLASSIFICATION	7.74036818614101E-6	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999942939612294	WITHOUT_CLASSIFICATION	5.706038770569699E-6	DOCUMENTATION
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999995854989077	WITHOUT_CLASSIFICATION	4.1450109234120144E-7	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9999968988920346	WITHOUT_CLASSIFICATION	3.101107965359086E-6	DOCUMENTATION
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999817178322274	WITHOUT_CLASSIFICATION	1.828216777257514E-5	DOCUMENTATION
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999997448367774	WITHOUT_CLASSIFICATION	2.551632225568371E-7	DOCUMENTATION
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999998347098416	WITHOUT_CLASSIFICATION	1.6529015852101985E-7	DOCUMENTATION
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999979048937814	WITHOUT_CLASSIFICATION	2.095106218546257E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999922596318139	WITHOUT_CLASSIFICATION	7.74036818614101E-6	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999942939612294	WITHOUT_CLASSIFICATION	5.706038770569699E-6	DOCUMENTATION
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999979856952325	WITHOUT_CLASSIFICATION	2.0143047675642747E-6	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9999962910633954	WITHOUT_CLASSIFICATION	3.7089366047442387E-6	DOCUMENTATION
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999985405302315	WITHOUT_CLASSIFICATION	1.459469768546659E-6	DOCUMENTATION
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9999987675699259	WITHOUT_CLASSIFICATION	1.232430074114012E-6	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999893403100734	WITHOUT_CLASSIFICATION	1.0659689926612352E-5	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9999994780464623	WITHOUT_CLASSIFICATION	5.219535377949226E-7	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999906427179205	WITHOUT_CLASSIFICATION	9.357282079525515E-6	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9999828409270962	WITHOUT_CLASSIFICATION	1.7159072903858436E-5	DOCUMENTATION
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999767991276856	WITHOUT_CLASSIFICATION	2.3200872314375614E-5	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9999148171651498	WITHOUT_CLASSIFICATION	8.518283485011444E-5	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999989097062935	WITHOUT_CLASSIFICATION	1.0902937065441761E-6	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9999148171651498	WITHOUT_CLASSIFICATION	8.518283485011444E-5	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999999417158638	WITHOUT_CLASSIFICATION	5.828413612608122E-8	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999942127794056	WITHOUT_CLASSIFICATION	5.787220594376129E-6	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999998271164969	WITHOUT_CLASSIFICATION	1.728835030865166E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986278477155	WITHOUT_CLASSIFICATION	1.372152284432429E-6	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9999993691454696	WITHOUT_CLASSIFICATION	6.308545304460802E-7	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9998279358123346	WITHOUT_CLASSIFICATION	1.7206418766526387E-4	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9998279358123346	WITHOUT_CLASSIFICATION	1.7206418766526387E-4	DOCUMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9999942597123999	WITHOUT_CLASSIFICATION	5.740287600127266E-6	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9999955819850214	WITHOUT_CLASSIFICATION	4.418014978591563E-6	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9999862072082806	WITHOUT_CLASSIFICATION	1.3792791719309655E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999910436583073	WITHOUT_CLASSIFICATION	8.95634169283127E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9999906356088583	WITHOUT_CLASSIFICATION	9.364391141680059E-6	DOCUMENTATION
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9999997996408307	WITHOUT_CLASSIFICATION	2.0035916933483517E-7	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999921868884577	WITHOUT_CLASSIFICATION	7.813111542210441E-6	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9999935375823392	WITHOUT_CLASSIFICATION	6.462417660755367E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.999981305420274	WITHOUT_CLASSIFICATION	1.8694579726015498E-5	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.9999574916494267	WITHOUT_CLASSIFICATION	4.2508350573271835E-5	DOCUMENTATION
//SQL statements	WITHOUT_CLASSIFICATION	0.9999709001884342	WITHOUT_CLASSIFICATION	2.9099811565888884E-5	DOCUMENTATION
//extra information about the element type	WITHOUT_CLASSIFICATION	0.999960366120638	WITHOUT_CLASSIFICATION	3.963387936193612E-5	DOCUMENTATION
//types	WITHOUT_CLASSIFICATION	0.9999575464966615	WITHOUT_CLASSIFICATION	4.245350333853693E-5	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.999995576545211	WITHOUT_CLASSIFICATION	4.423454789065864E-6	DOCUMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9999934954350446	WITHOUT_CLASSIFICATION	6.5045649554395495E-6	DOCUMENTATION
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999994796744022	WITHOUT_CLASSIFICATION	5.203255977462133E-7	DOCUMENTATION
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999977638216572	WITHOUT_CLASSIFICATION	2.236178342874926E-6	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.999998337805741	WITHOUT_CLASSIFICATION	1.662194258967415E-6	DOCUMENTATION
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9999980338486611	WITHOUT_CLASSIFICATION	1.966151338812041E-6	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9998566043138954	WITHOUT_CLASSIFICATION	1.4339568610462477E-4	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999938389174766	WITHOUT_CLASSIFICATION	6.16108252339313E-6	DOCUMENTATION
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999651519148512	WITHOUT_CLASSIFICATION	3.484808514885661E-5	DOCUMENTATION
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999984207968292	WITHOUT_CLASSIFICATION	1.579203170786401E-6	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9999915596257395	WITHOUT_CLASSIFICATION	8.440374260427E-6	DOCUMENTATION
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9999920440345433	WITHOUT_CLASSIFICATION	7.955965456684723E-6	DOCUMENTATION
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9998998134528129	WITHOUT_CLASSIFICATION	1.0018654718722804E-4	DOCUMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.9999991430759044	WITHOUT_CLASSIFICATION	8.569240956767776E-7	DOCUMENTATION
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9999913790804358	WITHOUT_CLASSIFICATION	8.620919564298855E-6	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9999988731552529	WITHOUT_CLASSIFICATION	1.1268447470602363E-6	DOCUMENTATION
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9999953559690756	WITHOUT_CLASSIFICATION	4.644030924375657E-6	DOCUMENTATION
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.999995127563255	WITHOUT_CLASSIFICATION	4.872436744985895E-6	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9999969608425071	WITHOUT_CLASSIFICATION	3.039157492840143E-6	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999921868884577	WITHOUT_CLASSIFICATION	7.813111542210441E-6	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999984811069831	WITHOUT_CLASSIFICATION	1.518893017008727E-6	DOCUMENTATION
//needed by arrays	WITHOUT_CLASSIFICATION	0.999987707357177	WITHOUT_CLASSIFICATION	1.2292642823030817E-5	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9995027655364508	WITHOUT_CLASSIFICATION	4.972344635492179E-4	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9999824164181137	WITHOUT_CLASSIFICATION	1.7583581886318603E-5	DOCUMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999979990751737	WITHOUT_CLASSIFICATION	2.0009248262827983E-6	DOCUMENTATION
//create all the new entries	WITHOUT_CLASSIFICATION	0.9999851590592492	WITHOUT_CLASSIFICATION	1.4840940750803662E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999910436583073	WITHOUT_CLASSIFICATION	8.95634169283127E-6	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999910436583073	WITHOUT_CLASSIFICATION	8.95634169283127E-6	DOCUMENTATION
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999886907374047	WITHOUT_CLASSIFICATION	1.1309262595279248E-5	DOCUMENTATION
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9999880280682284	WITHOUT_CLASSIFICATION	1.1971931771575147E-5	DOCUMENTATION
//==elementType ??	WITHOUT_CLASSIFICATION	0.9999711626149945	WITHOUT_CLASSIFICATION	2.8837385005478516E-5	DOCUMENTATION
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999936026695629	WITHOUT_CLASSIFICATION	6.397330437042497E-6	DOCUMENTATION
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9999974770312432	WITHOUT_CLASSIFICATION	2.5229687567770955E-6	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999994713077291	WITHOUT_CLASSIFICATION	5.286922709435486E-7	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999991059150849	WITHOUT_CLASSIFICATION	8.94084914960155E-7	DOCUMENTATION
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999993347130071	WITHOUT_CLASSIFICATION	6.652869929093509E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999675795811442	WITHOUT_CLASSIFICATION	3.242041885575463E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999983761877638	WITHOUT_CLASSIFICATION	1.6238122362361756E-6	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9999926896634547	WITHOUT_CLASSIFICATION	7.310336545305287E-6	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.999829997768686	WITHOUT_CLASSIFICATION	1.7000223131401852E-4	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9999637506337323	WITHOUT_CLASSIFICATION	3.6249366267610775E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999983761877638	WITHOUT_CLASSIFICATION	1.6238122362361756E-6	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.999987769560162	WITHOUT_CLASSIFICATION	1.223043983803666E-5	DOCUMENTATION
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.999998292029654	WITHOUT_CLASSIFICATION	1.707970346153458E-6	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999829391139394	WITHOUT_CLASSIFICATION	1.7060886060595415E-5	DOCUMENTATION
//TODO: check this....	WITHOUT_CLASSIFICATION	0.999449341134681	WITHOUT_CLASSIFICATION	5.506588653190974E-4	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.999829997768686	WITHOUT_CLASSIFICATION	1.7000223131401852E-4	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999984677832789	WITHOUT_CLASSIFICATION	1.5322167211440434E-6	DOCUMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999984227861479	WITHOUT_CLASSIFICATION	1.5772138520964702E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999994782539695	WITHOUT_CLASSIFICATION	5.217460304481654E-7	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999998131434026	WITHOUT_CLASSIFICATION	1.868565974059529E-7	DOCUMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9997926215576639	WITHOUT_CLASSIFICATION	2.0737844233616277E-4	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999943695026067	WITHOUT_CLASSIFICATION	5.6304973933230676E-6	DOCUMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999992581881431	WITHOUT_CLASSIFICATION	7.418118569934919E-7	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999738135584302	WITHOUT_CLASSIFICATION	2.6186441569896516E-5	DOCUMENTATION
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999974994147168	WITHOUT_CLASSIFICATION	2.500585283199037E-6	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.999997431855113	WITHOUT_CLASSIFICATION	2.568144886983314E-6	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999990726838835	WITHOUT_CLASSIFICATION	9.273161165115107E-7	DOCUMENTATION
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.9999995516956572	WITHOUT_CLASSIFICATION	4.4830434267293076E-7	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999983761877638	WITHOUT_CLASSIFICATION	1.6238122362361756E-6	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999984677832789	WITHOUT_CLASSIFICATION	1.5322167211440434E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999994782539695	WITHOUT_CLASSIFICATION	5.217460304481654E-7	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999838685833542	WITHOUT_CLASSIFICATION	1.6131416645873644E-5	DOCUMENTATION
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999996575445972	WITHOUT_CLASSIFICATION	3.424554028714963E-7	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999973192141071	WITHOUT_CLASSIFICATION	2.6807858930337523E-6	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.999829997768686	WITHOUT_CLASSIFICATION	1.7000223131401852E-4	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9999986234784096	WITHOUT_CLASSIFICATION	1.376521590392643E-6	DOCUMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999706170415207	WITHOUT_CLASSIFICATION	2.938295847929564E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9999691074611404	WITHOUT_CLASSIFICATION	3.0892538859511166E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999675941382248	WITHOUT_CLASSIFICATION	3.240586177524273E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999738135584302	WITHOUT_CLASSIFICATION	2.6186441569896516E-5	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.999987769560162	WITHOUT_CLASSIFICATION	1.223043983803666E-5	DOCUMENTATION
// JOINS	WITHOUT_CLASSIFICATION	0.9999853632450504	WITHOUT_CLASSIFICATION	1.4636754949690917E-5	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9999951275338244	WITHOUT_CLASSIFICATION	4.872466175623138E-6	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9999910603281769	WITHOUT_CLASSIFICATION	8.93967182306937E-6	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9999980070416046	WITHOUT_CLASSIFICATION	1.99295839534972E-6	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9999953144332859	WITHOUT_CLASSIFICATION	4.685566714030653E-6	DOCUMENTATION
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9999913318865511	WITHOUT_CLASSIFICATION	8.668113448802846E-6	DOCUMENTATION
//render the SQL	WITHOUT_CLASSIFICATION	0.9999674649406838	WITHOUT_CLASSIFICATION	3.253505931619921E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986278477155	WITHOUT_CLASSIFICATION	1.372152284432429E-6	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993572612531	WITHOUT_CLASSIFICATION	6.427387469637891E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999469309308829	WITHOUT_CLASSIFICATION	5.3069069117020175E-5	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999984882195302	WITHOUT_CLASSIFICATION	1.511780469803964E-6	DOCUMENTATION
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999938597232476	WITHOUT_CLASSIFICATION	6.140276752478834E-6	DOCUMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999949252721354	WITHOUT_CLASSIFICATION	5.074727864657827E-6	DOCUMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999916621941942	WITHOUT_CLASSIFICATION	8.337805805660357E-6	DOCUMENTATION
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999997659052953	WITHOUT_CLASSIFICATION	2.3409470462157725E-7	DOCUMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.9999950460751096	WITHOUT_CLASSIFICATION	4.9539248904317975E-6	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.999996912984725	WITHOUT_CLASSIFICATION	3.0870152749722646E-6	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999675941382248	WITHOUT_CLASSIFICATION	3.240586177524273E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999469309308829	WITHOUT_CLASSIFICATION	5.3069069117020175E-5	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999746107286884	WITHOUT_CLASSIFICATION	2.5389271311550266E-5	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.9999879475886997	WITHOUT_CLASSIFICATION	1.2052411300330648E-5	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9999028278928439	WITHOUT_CLASSIFICATION	9.717210715601506E-5	DOCUMENTATION
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9999504561623348	WITHOUT_CLASSIFICATION	4.954383766528898E-5	DOCUMENTATION
//before add :-)	WITHOUT_CLASSIFICATION	0.9999743268138236	WITHOUT_CLASSIFICATION	2.567318617647526E-5	DOCUMENTATION
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999993313660073	WITHOUT_CLASSIFICATION	6.68633992620193E-7	DOCUMENTATION
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999987195089909	WITHOUT_CLASSIFICATION	1.280491009095289E-6	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9999892916687425	WITHOUT_CLASSIFICATION	1.0708331257529944E-5	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9999994111234342	WITHOUT_CLASSIFICATION	5.888765658618311E-7	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9999968738847754	WITHOUT_CLASSIFICATION	3.1261152245445958E-6	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9999937542936415	WITHOUT_CLASSIFICATION	6.245706358452412E-6	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999937740865236	WITHOUT_CLASSIFICATION	6.2259134764207926E-6	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9999980902487968	WITHOUT_CLASSIFICATION	1.9097512031678252E-6	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9999861207474324	WITHOUT_CLASSIFICATION	1.3879252567649892E-5	DOCUMENTATION
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9999990420704898	WITHOUT_CLASSIFICATION	9.579295101326918E-7	DOCUMENTATION
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999844588525695	WITHOUT_CLASSIFICATION	1.5541147430457253E-5	DOCUMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.999999421010626	WITHOUT_CLASSIFICATION	5.789893739768145E-7	DOCUMENTATION
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999981130412479	WITHOUT_CLASSIFICATION	1.8869587521367249E-6	DOCUMENTATION
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999995965999174	WITHOUT_CLASSIFICATION	4.0340008250209996E-7	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.999968846501098	WITHOUT_CLASSIFICATION	3.1153498902119525E-5	DOCUMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9999877432894918	WITHOUT_CLASSIFICATION	1.2256710508310108E-5	DOCUMENTATION
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999979596293378	WITHOUT_CLASSIFICATION	2.0403706622902054E-6	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999987001803013	WITHOUT_CLASSIFICATION	1.299819698684346E-6	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999997664904571	WITHOUT_CLASSIFICATION	2.3350954301421092E-7	DOCUMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999995862214676	WITHOUT_CLASSIFICATION	4.137785324794321E-7	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.9998032015947035	WITHOUT_CLASSIFICATION	1.9679840529643049E-4	DOCUMENTATION
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9999799129824631	WITHOUT_CLASSIFICATION	2.0087017536945084E-5	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9999970000361428	WITHOUT_CLASSIFICATION	2.999963857115766E-6	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999984946494893	WITHOUT_CLASSIFICATION	1.505350510714134E-6	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.9998799169402403	WITHOUT_CLASSIFICATION	1.2008305975973593E-4	DOCUMENTATION
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999997143276802	WITHOUT_CLASSIFICATION	2.856723198388016E-7	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999993926675457	WITHOUT_CLASSIFICATION	6.073324542421858E-7	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999994054672549	WITHOUT_CLASSIFICATION	5.945327451246988E-7	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999998862156412	WITHOUT_CLASSIFICATION	1.1378435889611905E-7	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.999998691110011	WITHOUT_CLASSIFICATION	1.308889989026407E-6	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999994478100133	WITHOUT_CLASSIFICATION	5.521899866674349E-7	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999978555499652	WITHOUT_CLASSIFICATION	2.1444500347498734E-6	DOCUMENTATION
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999999576132743	WITHOUT_CLASSIFICATION	4.238672574609059E-8	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999994478100133	WITHOUT_CLASSIFICATION	5.521899866674349E-7	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.999998691110011	WITHOUT_CLASSIFICATION	1.308889989026407E-6	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999978555499652	WITHOUT_CLASSIFICATION	2.1444500347498734E-6	DOCUMENTATION
// add the primary key	WITHOUT_CLASSIFICATION	0.9999976753075344	WITHOUT_CLASSIFICATION	2.3246924655380316E-6	DOCUMENTATION
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.999999329666747	WITHOUT_CLASSIFICATION	6.70333253044893E-7	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999999264755529	WITHOUT_CLASSIFICATION	7.352444714818807E-8	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.999994148006117	WITHOUT_CLASSIFICATION	5.85199388310202E-6	DOCUMENTATION
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999999809980754	WITHOUT_CLASSIFICATION	1.9001924572948722E-8	DOCUMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9999790496588525	WITHOUT_CLASSIFICATION	2.095034114744922E-5	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9999952015576474	WITHOUT_CLASSIFICATION	4.798442352587522E-6	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999984250159946	WITHOUT_CLASSIFICATION	1.5749840054145386E-6	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9999994501043958	WITHOUT_CLASSIFICATION	5.498956041817696E-7	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9999970653323782	WITHOUT_CLASSIFICATION	2.9346676218409735E-6	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999963374009101	WITHOUT_CLASSIFICATION	3.6625990899144198E-6	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999994472116615	WITHOUT_CLASSIFICATION	5.527883386395903E-7	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999988646550804	WITHOUT_CLASSIFICATION	1.1353449196889069E-6	DOCUMENTATION
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9999699598342165	WITHOUT_CLASSIFICATION	3.0040165783516157E-5	DOCUMENTATION
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999998527647769	WITHOUT_CLASSIFICATION	1.4723522316144053E-7	DOCUMENTATION
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999988847012282	WITHOUT_CLASSIFICATION	1.1152987717049455E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999998912153232	WITHOUT_CLASSIFICATION	1.0878467679320175E-7	DOCUMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.999997869169306	WITHOUT_CLASSIFICATION	2.1308306940722987E-6	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999999735807703	WITHOUT_CLASSIFICATION	2.6419229699558734E-8	DOCUMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9999989118059555	WITHOUT_CLASSIFICATION	1.0881940445674634E-6	DOCUMENTATION
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9999994868876095	WITHOUT_CLASSIFICATION	5.131123905464292E-7	DOCUMENTATION
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999994846271357	WITHOUT_CLASSIFICATION	5.153728642285392E-7	DOCUMENTATION
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999975843590817	WITHOUT_CLASSIFICATION	2.4156409184112453E-6	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999998128806716	WITHOUT_CLASSIFICATION	1.8711932836958734E-7	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.99999918399264	WITHOUT_CLASSIFICATION	8.160073599785489E-7	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.99999918399264	WITHOUT_CLASSIFICATION	8.160073599785489E-7	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999988325152482	WITHOUT_CLASSIFICATION	1.167484751868982E-6	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999988325152482	WITHOUT_CLASSIFICATION	1.167484751868982E-6	DOCUMENTATION
// not supported	WITHOUT_CLASSIFICATION	0.9999977238055421	WITHOUT_CLASSIFICATION	2.2761944579346246E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999998912153232	WITHOUT_CLASSIFICATION	1.0878467679320175E-7	DOCUMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9999990046358932	WITHOUT_CLASSIFICATION	9.9536410673338E-7	DOCUMENTATION
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999992943979047	WITHOUT_CLASSIFICATION	7.056020952261341E-7	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999801093511083	WITHOUT_CLASSIFICATION	1.9890648891732936E-5	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999801093511083	WITHOUT_CLASSIFICATION	1.9890648891732936E-5	DOCUMENTATION
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999959235354831	WITHOUT_CLASSIFICATION	4.0764645169844305E-6	DOCUMENTATION
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9999987057881229	WITHOUT_CLASSIFICATION	1.2942118770968652E-6	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9999979499494108	WITHOUT_CLASSIFICATION	2.050050589133036E-6	DOCUMENTATION
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999932914721219	WITHOUT_CLASSIFICATION	6.708527878065785E-6	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999725874943507	WITHOUT_CLASSIFICATION	2.741250564935555E-5	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999999698528883	WITHOUT_CLASSIFICATION	3.01471117308519E-8	DOCUMENTATION
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9999714202934649	WITHOUT_CLASSIFICATION	2.857970653512512E-5	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9999986390675536	WITHOUT_CLASSIFICATION	1.3609324463281015E-6	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9999705131304676	WITHOUT_CLASSIFICATION	2.9486869532417605E-5	DOCUMENTATION
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999952430179565	WITHOUT_CLASSIFICATION	4.756982043534625E-6	DOCUMENTATION
//now render the select clause	WITHOUT_CLASSIFICATION	0.9999882865820546	WITHOUT_CLASSIFICATION	1.171341794538624E-5	DOCUMENTATION
//now tie it all together	WITHOUT_CLASSIFICATION	0.9999924155110336	WITHOUT_CLASSIFICATION	7.584488966348446E-6	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999963597130966	WITHOUT_CLASSIFICATION	3.640286903307434E-6	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9999748432876505	WITHOUT_CLASSIFICATION	2.5156712349572556E-5	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9999987040376774	WITHOUT_CLASSIFICATION	1.295962322537498E-6	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999981227261001	WITHOUT_CLASSIFICATION	1.8772738998015855E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999947961397757	WITHOUT_CLASSIFICATION	5.203860224366624E-6	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999993453997005	WITHOUT_CLASSIFICATION	6.546002995866388E-7	DOCUMENTATION
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9999999293510992	WITHOUT_CLASSIFICATION	7.064890089303009E-8	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999998908071178	WITHOUT_CLASSIFICATION	1.0919288222646707E-7	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999998046368901	WITHOUT_CLASSIFICATION	1.9536310981161167E-7	DOCUMENTATION
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999990936820384	WITHOUT_CLASSIFICATION	9.063179616373414E-7	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999993411233103	WITHOUT_CLASSIFICATION	6.588766896298132E-7	DOCUMENTATION
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999983969783709	WITHOUT_CLASSIFICATION	1.6030216292011156E-6	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997361413796165	WITHOUT_CLASSIFICATION	2.638586203834822E-4	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999986118921733	WITHOUT_CLASSIFICATION	1.3881078267704151E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999469309308829	WITHOUT_CLASSIFICATION	5.3069069117020175E-5	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999937740865236	WITHOUT_CLASSIFICATION	6.2259134764207926E-6	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999900233916413	WITHOUT_CLASSIFICATION	9.976608358729355E-6	DOCUMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999997156925632	WITHOUT_CLASSIFICATION	2.84307436855773E-7	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999990769858143	WITHOUT_CLASSIFICATION	9.230141856993865E-6	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999978464261305	WITHOUT_CLASSIFICATION	2.153573869394338E-6	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9999563981883941	WITHOUT_CLASSIFICATION	4.36018116058407E-5	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9999563981883941	WITHOUT_CLASSIFICATION	4.36018116058407E-5	DOCUMENTATION
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999995367774731	WITHOUT_CLASSIFICATION	4.6322252697830833E-7	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999943016543242	WITHOUT_CLASSIFICATION	5.698345675792077E-6	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999932717390975	WITHOUT_CLASSIFICATION	6.728260902520232E-6	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999932717390975	WITHOUT_CLASSIFICATION	6.728260902520232E-6	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999993126034973	WITHOUT_CLASSIFICATION	6.87396502656649E-7	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.999997344098488	WITHOUT_CLASSIFICATION	2.6559015120732377E-6	DOCUMENTATION
// do not do anything	WITHOUT_CLASSIFICATION	0.9999253381941257	WITHOUT_CLASSIFICATION	7.466180587431804E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999966234148753	WITHOUT_CLASSIFICATION	3.3765851246969665E-6	DOCUMENTATION
//cant instantiate	WITHOUT_CLASSIFICATION	0.999981832056987	WITHOUT_CLASSIFICATION	1.816794301307079E-5	DOCUMENTATION
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999983775500696	WITHOUT_CLASSIFICATION	1.6224499303207044E-6	DOCUMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9999958788087294	WITHOUT_CLASSIFICATION	4.121191270616958E-6	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999985878790467	WITHOUT_CLASSIFICATION	1.4121209532718473E-6	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999996539825178	WITHOUT_CLASSIFICATION	3.460174822866418E-7	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999996539825178	WITHOUT_CLASSIFICATION	3.460174822866418E-7	DOCUMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999999278852915	WITHOUT_CLASSIFICATION	7.211470854934907E-8	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999977907646138	WITHOUT_CLASSIFICATION	2.2092353861539747E-6	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999977907646138	WITHOUT_CLASSIFICATION	2.2092353861539747E-6	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999995759915257	WITHOUT_CLASSIFICATION	4.240084743927873E-7	DOCUMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.999995088112308	WITHOUT_CLASSIFICATION	4.911887692105992E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9990251307738429	WITHOUT_CLASSIFICATION	9.748692261569762E-4	DOCUMENTATION
// Get the caller	WITHOUT_CLASSIFICATION	0.999996764519051	WITHOUT_CLASSIFICATION	3.235480948979577E-6	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999982161013343	WITHOUT_CLASSIFICATION	1.7838986657338383E-6	DOCUMENTATION
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999988401889929	WITHOUT_CLASSIFICATION	1.1598110070472595E-6	DOCUMENTATION
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999995820135291	WITHOUT_CLASSIFICATION	4.179864709173215E-7	DOCUMENTATION
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9999926510139819	WITHOUT_CLASSIFICATION	7.348986018027233E-6	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9999982562801388	WITHOUT_CLASSIFICATION	1.7437198610697278E-6	DOCUMENTATION
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.999995376064892	WITHOUT_CLASSIFICATION	4.623935108107355E-6	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999999926682468	WITHOUT_CLASSIFICATION	7.331753212179711E-9	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.9999998567292365	WITHOUT_CLASSIFICATION	1.4327076359884546E-7	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999923916773469	WITHOUT_CLASSIFICATION	7.608322653182294E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999923916773469	WITHOUT_CLASSIFICATION	7.608322653182294E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999923916773469	WITHOUT_CLASSIFICATION	7.608322653182294E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999923916773469	WITHOUT_CLASSIFICATION	7.608322653182294E-6	DOCUMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999974031781796	WITHOUT_CLASSIFICATION	2.596821820344668E-6	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999995397790585	WITHOUT_CLASSIFICATION	4.6022094145334664E-7	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9999699566497996	WITHOUT_CLASSIFICATION	3.0043350200429182E-5	DOCUMENTATION
//for MySQL	WITHOUT_CLASSIFICATION	0.999902980181531	WITHOUT_CLASSIFICATION	9.701981846895881E-5	DOCUMENTATION
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9999936774830788	WITHOUT_CLASSIFICATION	6.3225169212194865E-6	DOCUMENTATION
//null caused some problems	WITHOUT_CLASSIFICATION	0.9999939509025514	WITHOUT_CLASSIFICATION	6.049097448555599E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9999258645378671	WITHOUT_CLASSIFICATION	7.413546213287948E-5	DOCUMENTATION
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999967819296266	WITHOUT_CLASSIFICATION	3.2180703733090236E-6	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999728480214339	WITHOUT_CLASSIFICATION	2.7151978566062974E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9999258645378671	WITHOUT_CLASSIFICATION	7.413546213287948E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9999258645378671	WITHOUT_CLASSIFICATION	7.413546213287948E-5	DOCUMENTATION
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999996626846243	WITHOUT_CLASSIFICATION	3.3731537578413007E-7	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9999977505329926	WITHOUT_CLASSIFICATION	2.2494670074822634E-6	DOCUMENTATION
// deprecated option...	WITHOUT_CLASSIFICATION	0.9999992034824013	WITHOUT_CLASSIFICATION	7.965175986793454E-7	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999958479646828	WITHOUT_CLASSIFICATION	4.152035317241185E-6	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999979073942217	WITHOUT_CLASSIFICATION	2.0926057782845375E-6	DOCUMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999986983115786	WITHOUT_CLASSIFICATION	1.3016884213706076E-6	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999747551039668	WITHOUT_CLASSIFICATION	2.5244896033163503E-5	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999958479646828	WITHOUT_CLASSIFICATION	4.152035317241185E-6	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9999992794800944	WITHOUT_CLASSIFICATION	7.205199057262276E-7	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999995221804797	WITHOUT_CLASSIFICATION	4.77819520268652E-7	DOCUMENTATION
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999995993240475	WITHOUT_CLASSIFICATION	4.0067595252113887E-7	DOCUMENTATION
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999992618417747	WITHOUT_CLASSIFICATION	7.381582251993785E-7	DOCUMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.999999603099007	WITHOUT_CLASSIFICATION	3.969009928685776E-7	DOCUMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9999992778422447	WITHOUT_CLASSIFICATION	7.221577551765727E-7	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999988162833454	WITHOUT_CLASSIFICATION	1.1837166545786142E-6	DOCUMENTATION
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9999933562695884	WITHOUT_CLASSIFICATION	6.643730411591723E-6	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999995813763509	WITHOUT_CLASSIFICATION	4.1862364904303973E-7	DOCUMENTATION
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999891398270316	WITHOUT_CLASSIFICATION	1.086017296829132E-5	DOCUMENTATION
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993458924863	WITHOUT_CLASSIFICATION	6.541075136694301E-7	DOCUMENTATION
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999986875973419	WITHOUT_CLASSIFICATION	1.3124026580513455E-6	DOCUMENTATION
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9999986390482569	WITHOUT_CLASSIFICATION	1.3609517431074901E-6	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.9999657415349275	WITHOUT_CLASSIFICATION	3.425846507252387E-5	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999997188300812	WITHOUT_CLASSIFICATION	2.811699188230787E-7	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.9999951414417046	WITHOUT_CLASSIFICATION	4.8585582953232265E-6	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999998019825879	WITHOUT_CLASSIFICATION	1.980174120939562E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999984517233488	WITHOUT_CLASSIFICATION	1.5482766511575744E-6	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999996802365052	WITHOUT_CLASSIFICATION	3.197634948471533E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999984517233488	WITHOUT_CLASSIFICATION	1.5482766511575744E-6	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999993792058623	WITHOUT_CLASSIFICATION	6.20794137693654E-7	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999998369029882	WITHOUT_CLASSIFICATION	1.6309701173759955E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.999996056159459	WITHOUT_CLASSIFICATION	3.9438405410282365E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999690203145487	WITHOUT_CLASSIFICATION	3.097968545129771E-5	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999998019825879	WITHOUT_CLASSIFICATION	1.980174120939562E-7	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999996802365052	WITHOUT_CLASSIFICATION	3.197634948471533E-7	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999993792058623	WITHOUT_CLASSIFICATION	6.20794137693654E-7	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999988922380384	WITHOUT_CLASSIFICATION	1.10776196156877E-6	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9999623999542502	WITHOUT_CLASSIFICATION	3.760004574984332E-5	DOCUMENTATION
//reset the id	WITHOUT_CLASSIFICATION	0.9999803426054196	WITHOUT_CLASSIFICATION	1.9657394580480233E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.9999896632454228	WITHOUT_CLASSIFICATION	1.0336754577195645E-5	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9999998369855941	WITHOUT_CLASSIFICATION	1.6301440587708527E-7	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.999999206237689	WITHOUT_CLASSIFICATION	7.937623108916918E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999947961397757	WITHOUT_CLASSIFICATION	5.203860224366624E-6	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999998369029882	WITHOUT_CLASSIFICATION	1.6309701173759955E-7	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9999988356451021	WITHOUT_CLASSIFICATION	1.1643548978406669E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9999963623308754	WITHOUT_CLASSIFICATION	3.6376691245758415E-6	DOCUMENTATION
// superclass entity-name	WITHOUT_CLASSIFICATION	0.999998592394014	WITHOUT_CLASSIFICATION	1.4076059859951151E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999947961397757	WITHOUT_CLASSIFICATION	5.203860224366624E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999469309308829	WITHOUT_CLASSIFICATION	5.3069069117020175E-5	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.9999946767240159	WITHOUT_CLASSIFICATION	5.32327598404358E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999947961397757	WITHOUT_CLASSIFICATION	5.203860224366624E-6	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999997170195616	WITHOUT_CLASSIFICATION	2.829804384455944E-7	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999985516033253	WITHOUT_CLASSIFICATION	1.44839667462794E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999469309308829	WITHOUT_CLASSIFICATION	5.3069069117020175E-5	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9999412329915071	WITHOUT_CLASSIFICATION	5.876700849286385E-5	DOCUMENTATION
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999957855699648	WITHOUT_CLASSIFICATION	4.2144300352205196E-6	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999997361542086	WITHOUT_CLASSIFICATION	2.638457914386846E-7	DOCUMENTATION
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999953942354229	WITHOUT_CLASSIFICATION	4.605764577108115E-6	DOCUMENTATION
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999998120069261	WITHOUT_CLASSIFICATION	1.879930738800379E-7	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999980552224286	WITHOUT_CLASSIFICATION	1.9447775714953356E-6	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999965862112731	WITHOUT_CLASSIFICATION	3.4137887269729044E-6	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9999899136038405	WITHOUT_CLASSIFICATION	1.0086396159386045E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.999906877150827	WITHOUT_CLASSIFICATION	9.312284917297363E-5	DOCUMENTATION
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999993513367371	WITHOUT_CLASSIFICATION	6.48663262852505E-7	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9990251307738429	WITHOUT_CLASSIFICATION	9.748692261569762E-4	DOCUMENTATION
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9999839387991406	WITHOUT_CLASSIFICATION	1.6061200859461914E-5	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9999943904504082	WITHOUT_CLASSIFICATION	5.609549591852737E-6	DOCUMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9999961095531286	WITHOUT_CLASSIFICATION	3.890446871423312E-6	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999767495028729	WITHOUT_CLASSIFICATION	2.325049712704117E-5	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.999999615298779	WITHOUT_CLASSIFICATION	3.8470122095024733E-7	DOCUMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999996838392579	WITHOUT_CLASSIFICATION	3.161607421167761E-7	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9999995833896856	WITHOUT_CLASSIFICATION	4.16610314317225E-7	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9999917768924302	WITHOUT_CLASSIFICATION	8.223107569763117E-6	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999983616646092	WITHOUT_CLASSIFICATION	1.6383353907713407E-6	DOCUMENTATION
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999959933647069	WITHOUT_CLASSIFICATION	4.0066352931094425E-6	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.9990285089607207	WITHOUT_CLASSIFICATION	9.714910392793261E-4	DOCUMENTATION
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999990168282422	WITHOUT_CLASSIFICATION	9.831717577473025E-7	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999986067128697	WITHOUT_CLASSIFICATION	1.3932871303643726E-6	DOCUMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999968373321156	WITHOUT_CLASSIFICATION	3.162667884471476E-6	DOCUMENTATION
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999948242013883	WITHOUT_CLASSIFICATION	5.175798611730707E-6	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9999333392520021	WITHOUT_CLASSIFICATION	6.666074799779414E-5	DOCUMENTATION
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9999989534318173	WITHOUT_CLASSIFICATION	1.0465681826037834E-6	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9999977823432507	WITHOUT_CLASSIFICATION	2.217656749334936E-6	DOCUMENTATION
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999958432367639	WITHOUT_CLASSIFICATION	4.156763236047173E-6	DOCUMENTATION
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9999750719776966	WITHOUT_CLASSIFICATION	2.4928022303456742E-5	DOCUMENTATION
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9999970013187508	WITHOUT_CLASSIFICATION	2.998681249158934E-6	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9993185770685927	WITHOUT_CLASSIFICATION	6.81422931407323E-4	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999883600653411	WITHOUT_CLASSIFICATION	1.163993465878477E-5	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999682044455586	WITHOUT_CLASSIFICATION	3.179555444147758E-5	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9998735583280277	WITHOUT_CLASSIFICATION	1.264416719722053E-4	DOCUMENTATION
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9999790187886721	WITHOUT_CLASSIFICATION	2.0981211327875986E-5	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999969682606987	WITHOUT_CLASSIFICATION	3.0317393011520457E-6	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.998442263724766	WITHOUT_CLASSIFICATION	0.001557736275234053	DOCUMENTATION
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999985438485535	WITHOUT_CLASSIFICATION	1.456151446487177E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999469309308829	WITHOUT_CLASSIFICATION	5.3069069117020175E-5	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.999997923780614	WITHOUT_CLASSIFICATION	2.0762193860144202E-6	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999399935752356	WITHOUT_CLASSIFICATION	6.0006424764413714E-5	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999399935752356	WITHOUT_CLASSIFICATION	6.0006424764413714E-5	DOCUMENTATION
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999998672780944	WITHOUT_CLASSIFICATION	1.327219055105935E-7	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999980552224286	WITHOUT_CLASSIFICATION	1.9447775714953356E-6	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9999918401378289	WITHOUT_CLASSIFICATION	8.159862171094596E-6	DOCUMENTATION
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999988020711901	WITHOUT_CLASSIFICATION	1.1979288099712383E-6	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999998334380455	WITHOUT_CLASSIFICATION	1.6656195449417223E-7	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999997586338683	WITHOUT_CLASSIFICATION	2.4136613173208766E-7	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9999744875490171	WITHOUT_CLASSIFICATION	2.5512450982806474E-5	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9998854922114225	WITHOUT_CLASSIFICATION	1.1450778857745647E-4	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.999998786619313	WITHOUT_CLASSIFICATION	1.213380687016149E-6	DOCUMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9999994369290207	WITHOUT_CLASSIFICATION	5.630709793173766E-7	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.9999985213572372	WITHOUT_CLASSIFICATION	1.4786427628984546E-6	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.999995706254062	WITHOUT_CLASSIFICATION	4.293745937991226E-6	DOCUMENTATION
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999997762632387	WITHOUT_CLASSIFICATION	2.2373676130006197E-7	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999984588676809	WITHOUT_CLASSIFICATION	1.5411323190320684E-6	DOCUMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999978196058734	WITHOUT_CLASSIFICATION	2.1803941265229785E-6	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999997859613494	WITHOUT_CLASSIFICATION	2.1403865061864473E-7	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999946802473825	WITHOUT_CLASSIFICATION	5.319752617437445E-6	DOCUMENTATION
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.999999768868238	WITHOUT_CLASSIFICATION	2.3113176184525737E-7	DOCUMENTATION
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999990557977828	WITHOUT_CLASSIFICATION	9.442022170809881E-7	DOCUMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9999998535749606	WITHOUT_CLASSIFICATION	1.464250394890669E-7	DOCUMENTATION
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999993250422823	WITHOUT_CLASSIFICATION	6.749577177538571E-7	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999991958141746	WITHOUT_CLASSIFICATION	8.041858253587739E-7	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9999999413274994	WITHOUT_CLASSIFICATION	5.8672500640081846E-8	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999998898479172	WITHOUT_CLASSIFICATION	1.1015208285675072E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.998442263724766	WITHOUT_CLASSIFICATION	0.001557736275234053	DOCUMENTATION
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.999999799975933	WITHOUT_CLASSIFICATION	2.0002406690803715E-7	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.999998291213404	WITHOUT_CLASSIFICATION	1.7087865960115272E-6	DOCUMENTATION
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999987212576871	WITHOUT_CLASSIFICATION	1.2787423128776812E-6	DOCUMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999972549237363	WITHOUT_CLASSIFICATION	2.7450762637123477E-6	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.9999984290264844	WITHOUT_CLASSIFICATION	1.5709735156229167E-6	DOCUMENTATION
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999998367870047	WITHOUT_CLASSIFICATION	1.632129952782527E-7	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9999853130022988	WITHOUT_CLASSIFICATION	1.4686997701206043E-5	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999930351120228	WITHOUT_CLASSIFICATION	6.9648879771745006E-6	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999986135200016	WITHOUT_CLASSIFICATION	1.386479998303319E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999968795553783	WITHOUT_CLASSIFICATION	3.1204446216681936E-6	DOCUMENTATION
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999970838593871	WITHOUT_CLASSIFICATION	2.916140612882425E-6	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999997137293437	WITHOUT_CLASSIFICATION	2.8627065627869023E-7	DOCUMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9999904270733503	WITHOUT_CLASSIFICATION	9.572926649689516E-6	DOCUMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999995628804014	WITHOUT_CLASSIFICATION	4.371195986322005E-7	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999999286541132	WITHOUT_CLASSIFICATION	7.13458867633083E-8	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999999286541132	WITHOUT_CLASSIFICATION	7.13458867633083E-8	DOCUMENTATION
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999982570685891	WITHOUT_CLASSIFICATION	1.7429314108360773E-6	DOCUMENTATION
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9999982792850277	WITHOUT_CLASSIFICATION	1.7207149723833663E-6	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.999366398997544	WITHOUT_CLASSIFICATION	6.336010024559543E-4	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.999366398997544	WITHOUT_CLASSIFICATION	6.336010024559543E-4	DOCUMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999985973139272	WITHOUT_CLASSIFICATION	1.4026860727493612E-6	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999744175231199	WITHOUT_CLASSIFICATION	2.558247688012108E-5	DOCUMENTATION
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.9999999669230659	WITHOUT_CLASSIFICATION	3.307693408343059E-8	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.999998864324671	WITHOUT_CLASSIFICATION	1.13567532893246E-6	DOCUMENTATION
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999900891825887	WITHOUT_CLASSIFICATION	9.9108174113472E-6	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999953124053578	WITHOUT_CLASSIFICATION	4.687594642233718E-6	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999976759987461	WITHOUT_CLASSIFICATION	2.3240012538766002E-6	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999976759987461	WITHOUT_CLASSIFICATION	2.3240012538766002E-6	DOCUMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999964915967455	WITHOUT_CLASSIFICATION	3.5084032545312196E-6	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9999986279665082	WITHOUT_CLASSIFICATION	1.3720334918440317E-6	DOCUMENTATION
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9999688700567013	WITHOUT_CLASSIFICATION	3.112994329872012E-5	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.999994900736976	WITHOUT_CLASSIFICATION	5.099263023997365E-6	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.999994900736976	WITHOUT_CLASSIFICATION	5.099263023997365E-6	DOCUMENTATION
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999986259063184	WITHOUT_CLASSIFICATION	1.3740936815703149E-6	DOCUMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999959997148871	WITHOUT_CLASSIFICATION	4.000285113004774E-6	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999992871697113	WITHOUT_CLASSIFICATION	7.1283028874391E-7	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999985180608971	WITHOUT_CLASSIFICATION	1.4819391028132892E-6	DOCUMENTATION
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999974845506413	WITHOUT_CLASSIFICATION	2.515449358605404E-6	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999991026481483	WITHOUT_CLASSIFICATION	8.973518517965603E-7	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999977571906054	WITHOUT_CLASSIFICATION	2.2428093945705766E-6	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999921102662261	WITHOUT_CLASSIFICATION	7.889733773835593E-6	DOCUMENTATION
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999992116123428	WITHOUT_CLASSIFICATION	7.88387657061293E-7	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999942580501857	WITHOUT_CLASSIFICATION	5.7419498141844775E-6	DOCUMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9999956627675974	WITHOUT_CLASSIFICATION	4.337232402543515E-6	DOCUMENTATION
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9999980315195227	WITHOUT_CLASSIFICATION	1.9684804772980087E-6	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9999924721600038	WITHOUT_CLASSIFICATION	7.527839996317246E-6	DOCUMENTATION
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999994960567243	WITHOUT_CLASSIFICATION	5.039432756490015E-7	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999921371485985	WITHOUT_CLASSIFICATION	7.862851401588918E-6	DOCUMENTATION
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999987669348696	WITHOUT_CLASSIFICATION	1.2330651305344994E-6	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999976271612087	WITHOUT_CLASSIFICATION	2.3728387913314446E-6	DOCUMENTATION
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999985284991478	WITHOUT_CLASSIFICATION	1.4715008521696716E-6	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999992050586709	WITHOUT_CLASSIFICATION	7.94941329071618E-7	DOCUMENTATION
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999994821501037	WITHOUT_CLASSIFICATION	5.178498963963281E-7	DOCUMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999996444737859	WITHOUT_CLASSIFICATION	3.5552621419595846E-7	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9999982901038547	WITHOUT_CLASSIFICATION	1.7098961453082588E-6	DOCUMENTATION
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.999977054380755	WITHOUT_CLASSIFICATION	2.294561924495257E-5	DOCUMENTATION
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999924272196826	WITHOUT_CLASSIFICATION	7.572780317310154E-6	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.9999708373507316	WITHOUT_CLASSIFICATION	2.9162649268424384E-5	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.9999951403825669	WITHOUT_CLASSIFICATION	4.859617433147735E-6	DOCUMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999988006280889	WITHOUT_CLASSIFICATION	1.1993719110462814E-6	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.999970178689953	WITHOUT_CLASSIFICATION	2.982131004709214E-5	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999985920385497	WITHOUT_CLASSIFICATION	1.4079614502857667E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999958281242085	WITHOUT_CLASSIFICATION	4.171875791506344E-6	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999980488853117	WITHOUT_CLASSIFICATION	1.951114688362488E-6	DOCUMENTATION
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999998051581984	WITHOUT_CLASSIFICATION	1.9484180159493446E-7	DOCUMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999994905702767	WITHOUT_CLASSIFICATION	5.09429723413575E-7	DOCUMENTATION
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9999882226972042	WITHOUT_CLASSIFICATION	1.1777302795666618E-5	DOCUMENTATION
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999944589166467	WITHOUT_CLASSIFICATION	5.541083353212374E-6	DOCUMENTATION
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9999793895407205	WITHOUT_CLASSIFICATION	2.0610459279416376E-5	DOCUMENTATION
//readResolveObject	WITHOUT_CLASSIFICATION	0.9999873951554501	WITHOUT_CLASSIFICATION	1.2604844549991908E-5	DOCUMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9999980007724579	WITHOUT_CLASSIFICATION	1.9992275420566153E-6	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999946764310814	WITHOUT_CLASSIFICATION	5.323568918597465E-6	DOCUMENTATION
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999988545274722	WITHOUT_CLASSIFICATION	1.1454725278271339E-6	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999997288707837	WITHOUT_CLASSIFICATION	2.7112921621996343E-7	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9999844573916712	WITHOUT_CLASSIFICATION	1.5542608328733745E-5	DOCUMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999976730001597	WITHOUT_CLASSIFICATION	2.3269998403336583E-6	DOCUMENTATION
// Handle actions	WITHOUT_CLASSIFICATION	0.9999982395725874	WITHOUT_CLASSIFICATION	1.7604274126938136E-6	DOCUMENTATION
// Print page	WITHOUT_CLASSIFICATION	0.9999946333067692	WITHOUT_CLASSIFICATION	5.366693230800119E-6	DOCUMENTATION
// Write HTML footer	WITHOUT_CLASSIFICATION	0.999996190165758	WITHOUT_CLASSIFICATION	3.8098342420007457E-6	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9999952995730939	WITHOUT_CLASSIFICATION	4.700426906075931E-6	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999897412361692	WITHOUT_CLASSIFICATION	1.0258763830783228E-5	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999982065041745	WITHOUT_CLASSIFICATION	1.7934958254355467E-6	DOCUMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999983828475969	WITHOUT_CLASSIFICATION	1.6171524030881717E-6	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999872250418751	WITHOUT_CLASSIFICATION	1.2774958124855362E-5	DOCUMENTATION
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999994933416116	WITHOUT_CLASSIFICATION	5.066583882745536E-7	DOCUMENTATION
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9999997067916091	WITHOUT_CLASSIFICATION	2.93208390987376E-7	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999999912775623	WITHOUT_CLASSIFICATION	8.722437661503837E-9	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999968338687311	WITHOUT_CLASSIFICATION	3.166131268989951E-6	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9999981912555556	WITHOUT_CLASSIFICATION	1.808744444357965E-6	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9999936155002229	WITHOUT_CLASSIFICATION	6.384499777001837E-6	DOCUMENTATION
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999862935808224	WITHOUT_CLASSIFICATION	1.3706419177555055E-5	DOCUMENTATION
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.99999962123532	WITHOUT_CLASSIFICATION	3.7876468000876205E-7	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999996489489357	WITHOUT_CLASSIFICATION	3.510510643816677E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999962856476243	WITHOUT_CLASSIFICATION	3.714352375751347E-6	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999962856476243	WITHOUT_CLASSIFICATION	3.714352375751347E-6	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999997566775531	WITHOUT_CLASSIFICATION	2.4332244690882555E-7	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9999996024628945	WITHOUT_CLASSIFICATION	3.9753710541479974E-7	DOCUMENTATION
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999999700955062	WITHOUT_CLASSIFICATION	2.990449379082411E-8	DOCUMENTATION
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999992273405608	WITHOUT_CLASSIFICATION	7.726594392943836E-7	DOCUMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999991998669898	WITHOUT_CLASSIFICATION	8.001330101849304E-7	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999993338292755	WITHOUT_CLASSIFICATION	6.661707245560011E-7	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999999065354476	WITHOUT_CLASSIFICATION	9.346455238295904E-8	DOCUMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999999642368469	WITHOUT_CLASSIFICATION	3.5763153219604124E-8	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999997361276535	WITHOUT_CLASSIFICATION	2.6387234652081815E-7	DOCUMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999993337337504	WITHOUT_CLASSIFICATION	6.662662496028249E-7	DOCUMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9999995883099267	WITHOUT_CLASSIFICATION	4.116900731717492E-7	DOCUMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.9999829748340092	WITHOUT_CLASSIFICATION	1.7025165990768708E-5	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999994656268543	WITHOUT_CLASSIFICATION	5.343731456390443E-7	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999995580606172	WITHOUT_CLASSIFICATION	4.4193938276937546E-7	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999717580272782	WITHOUT_CLASSIFICATION	2.8241972721790458E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999717580272782	WITHOUT_CLASSIFICATION	2.8241972721790458E-5	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999996147246231	WITHOUT_CLASSIFICATION	3.8527537702814524E-7	DOCUMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.999999421198831	WITHOUT_CLASSIFICATION	5.788011688803791E-7	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999979458668594	WITHOUT_CLASSIFICATION	2.054133140667267E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.999957293903985	WITHOUT_CLASSIFICATION	4.270609601504698E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999986912189903	WITHOUT_CLASSIFICATION	1.3087810097260594E-6	DOCUMENTATION
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999900221619865	WITHOUT_CLASSIFICATION	9.977838013462838E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.9999644558247358	WITHOUT_CLASSIFICATION	3.554417526421568E-5	DOCUMENTATION
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.9999996086842883	WITHOUT_CLASSIFICATION	3.9131571174772907E-7	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.999999855889011	WITHOUT_CLASSIFICATION	1.4411098892224957E-7	DOCUMENTATION
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.999999761073574	WITHOUT_CLASSIFICATION	2.389264259258482E-7	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999998602532334	WITHOUT_CLASSIFICATION	1.3974676670029832E-7	DOCUMENTATION
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999975961948426	WITHOUT_CLASSIFICATION	2.403805157363775E-6	DOCUMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999998009115872	WITHOUT_CLASSIFICATION	1.990884127252442E-7	DOCUMENTATION
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999993095243591	WITHOUT_CLASSIFICATION	6.90475641025072E-7	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999966395837417	WITHOUT_CLASSIFICATION	3.3604162581626294E-6	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999992340264544	WITHOUT_CLASSIFICATION	7.659735456443255E-7	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999998130946463	WITHOUT_CLASSIFICATION	1.8690535380841447E-7	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999982086463514	WITHOUT_CLASSIFICATION	1.7913536485964244E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999993681142886	WITHOUT_CLASSIFICATION	6.318857114166955E-7	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999999888955194	WITHOUT_CLASSIFICATION	1.1104480530117703E-8	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999997430747455	WITHOUT_CLASSIFICATION	2.569252545231389E-7	DOCUMENTATION
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999999128334172	WITHOUT_CLASSIFICATION	8.716658280082572E-8	DOCUMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999998415215078	WITHOUT_CLASSIFICATION	1.5847849219796826E-7	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.9999870230529918	WITHOUT_CLASSIFICATION	1.2976947008171686E-5	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999811824976191	WITHOUT_CLASSIFICATION	1.881750238081869E-5	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9999998114822468	WITHOUT_CLASSIFICATION	1.885177531488615E-7	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999999580553006	WITHOUT_CLASSIFICATION	4.1944699336214445E-8	DOCUMENTATION
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.99999984418975	WITHOUT_CLASSIFICATION	1.5581024997746177E-7	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9999999701059568	WITHOUT_CLASSIFICATION	2.9894043227340176E-8	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999979190639293	WITHOUT_CLASSIFICATION	2.080936070727532E-6	DOCUMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9999730681255382	WITHOUT_CLASSIFICATION	2.6931874461801042E-5	DOCUMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999990023124287	WITHOUT_CLASSIFICATION	9.976875713222782E-7	DOCUMENTATION
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999979441154342	WITHOUT_CLASSIFICATION	2.0558845657931798E-6	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999992394892867	WITHOUT_CLASSIFICATION	7.605107131745721E-7	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.99999991628556	WITHOUT_CLASSIFICATION	8.371444011051043E-8	DOCUMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999998879382939	WITHOUT_CLASSIFICATION	1.1206170611694834E-7	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999990897997847	WITHOUT_CLASSIFICATION	9.10200215425609E-7	DOCUMENTATION
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999995763617774	WITHOUT_CLASSIFICATION	4.236382225459034E-7	DOCUMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999994623951124	WITHOUT_CLASSIFICATION	5.376048875526057E-7	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9999999426987571	WITHOUT_CLASSIFICATION	5.7301242962868795E-8	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999996856569643	WITHOUT_CLASSIFICATION	3.14343035676687E-7	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999996856569643	WITHOUT_CLASSIFICATION	3.14343035676687E-7	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999991599295303	WITHOUT_CLASSIFICATION	8.400704697766114E-7	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999994148856683	WITHOUT_CLASSIFICATION	5.851143317639598E-7	DOCUMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.9999997618592457	WITHOUT_CLASSIFICATION	2.3814075426603825E-7	DOCUMENTATION
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.999999763093522	WITHOUT_CLASSIFICATION	2.3690647801602102E-7	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999999670910795	WITHOUT_CLASSIFICATION	3.290892041680375E-8	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999994122535307	WITHOUT_CLASSIFICATION	5.877464692586579E-7	DOCUMENTATION
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999986747431402	WITHOUT_CLASSIFICATION	1.3252568598145752E-6	DOCUMENTATION
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999990843498379	WITHOUT_CLASSIFICATION	9.156501620737911E-7	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999889883920643	WITHOUT_CLASSIFICATION	1.101160793566059E-5	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987317615803	WITHOUT_CLASSIFICATION	1.2682384197191743E-6	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999989625202004	WITHOUT_CLASSIFICATION	1.0374797995475082E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999983043189745	WITHOUT_CLASSIFICATION	1.6956810255586462E-6	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999963930224695	WITHOUT_CLASSIFICATION	3.606977530465837E-6	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999992899152439	WITHOUT_CLASSIFICATION	7.100847559842323E-7	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9999996450979701	WITHOUT_CLASSIFICATION	3.5490202991101547E-7	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9999973083888773	WITHOUT_CLASSIFICATION	2.6916111225522846E-6	DOCUMENTATION
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999991784630354	WITHOUT_CLASSIFICATION	8.215369645605379E-7	DOCUMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999998992089584	WITHOUT_CLASSIFICATION	1.0079104161510045E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9999991853342589	WITHOUT_CLASSIFICATION	8.146657410477243E-7	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999997218533396	WITHOUT_CLASSIFICATION	2.7814666046015954E-7	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999986034274551	WITHOUT_CLASSIFICATION	1.3965725449477892E-6	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.999998305644631	WITHOUT_CLASSIFICATION	1.6943553689514737E-6	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.99999957281638	WITHOUT_CLASSIFICATION	4.271836200433407E-7	DOCUMENTATION
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.9999933656225278	WITHOUT_CLASSIFICATION	6.634377472128358E-6	DOCUMENTATION
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9999992591026894	WITHOUT_CLASSIFICATION	7.40897310502511E-7	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999887331100745	WITHOUT_CLASSIFICATION	1.1266889925477799E-5	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999997291027446	WITHOUT_CLASSIFICATION	2.708972553477952E-7	DOCUMENTATION
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999998669343996	WITHOUT_CLASSIFICATION	1.33065600434311E-7	DOCUMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9999997759863073	WITHOUT_CLASSIFICATION	2.2401369276839462E-7	DOCUMENTATION
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9999997925236391	WITHOUT_CLASSIFICATION	2.0747636080973632E-7	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9999995652890078	WITHOUT_CLASSIFICATION	4.3471099218996927E-7	DOCUMENTATION
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.999999411448608	WITHOUT_CLASSIFICATION	5.885513920360102E-7	DOCUMENTATION
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999999362066376	WITHOUT_CLASSIFICATION	6.379336244882051E-8	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999991722753185	WITHOUT_CLASSIFICATION	8.277246814187252E-7	DOCUMENTATION
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999999669497345	WITHOUT_CLASSIFICATION	3.3050265458210285E-8	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999998569739017	WITHOUT_CLASSIFICATION	1.4302609831513748E-7	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999984680567581	WITHOUT_CLASSIFICATION	1.5319432418508149E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999997807076952	WITHOUT_CLASSIFICATION	2.1929230476927765E-7	DOCUMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9999997153598097	WITHOUT_CLASSIFICATION	2.8464019027871173E-7	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.99998957300825	WITHOUT_CLASSIFICATION	1.0426991749946748E-5	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999998947947156	WITHOUT_CLASSIFICATION	1.0520528431616793E-7	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999995505510104	WITHOUT_CLASSIFICATION	4.494489895111382E-7	DOCUMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999996445691787	WITHOUT_CLASSIFICATION	3.5543082136843044E-7	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999996982264687	WITHOUT_CLASSIFICATION	3.017735312087405E-7	DOCUMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9999994777602954	WITHOUT_CLASSIFICATION	5.222397045421448E-7	DOCUMENTATION
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9999998614065349	WITHOUT_CLASSIFICATION	1.3859346517457137E-7	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999998112709586	WITHOUT_CLASSIFICATION	1.8872904150589486E-7	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999994656268543	WITHOUT_CLASSIFICATION	5.343731456390443E-7	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999997484831858	WITHOUT_CLASSIFICATION	2.5151681410375206E-7	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999993707580092	WITHOUT_CLASSIFICATION	6.292419908375842E-7	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9999981114340996	WITHOUT_CLASSIFICATION	1.8885659004361699E-6	DOCUMENTATION
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999998361062954	WITHOUT_CLASSIFICATION	1.6389370457076316E-7	DOCUMENTATION
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9999996434330164	WITHOUT_CLASSIFICATION	3.565669835550968E-7	DOCUMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999978348308115	WITHOUT_CLASSIFICATION	2.165169188531386E-6	DOCUMENTATION
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9999997164929684	WITHOUT_CLASSIFICATION	2.8350703162173553E-7	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.999999921059295	WITHOUT_CLASSIFICATION	7.894070491928604E-8	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999869393632058	WITHOUT_CLASSIFICATION	1.3060636794078807E-5	DOCUMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9999989342256134	WITHOUT_CLASSIFICATION	1.0657743865826948E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999999579265841	WITHOUT_CLASSIFICATION	4.2073415950421715E-8	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999992011020472	WITHOUT_CLASSIFICATION	7.988979528639395E-7	DOCUMENTATION
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999996769557271	WITHOUT_CLASSIFICATION	3.2304427290173004E-7	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999999247023504	WITHOUT_CLASSIFICATION	7.529764955382348E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984016934114	WITHOUT_CLASSIFICATION	1.598306588680371E-6	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.999997782377117	WITHOUT_CLASSIFICATION	2.21762288302081E-6	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999949999069594	WITHOUT_CLASSIFICATION	5.000093040654842E-6	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999998873257719	WITHOUT_CLASSIFICATION	1.1267422801298881E-7	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999980142906645	WITHOUT_CLASSIFICATION	1.9857093354931557E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999984016934114	WITHOUT_CLASSIFICATION	1.598306588680371E-6	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9999927929648851	WITHOUT_CLASSIFICATION	7.207035114847395E-6	DOCUMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.999999423299103	WITHOUT_CLASSIFICATION	5.767008971154973E-7	DOCUMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.999999831975631	WITHOUT_CLASSIFICATION	1.6802436892380694E-7	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999998772711916	WITHOUT_CLASSIFICATION	1.2272880846483305E-7	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999987576059717	WITHOUT_CLASSIFICATION	1.2423940283040582E-6	DOCUMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999999282986528	WITHOUT_CLASSIFICATION	7.17013471837931E-8	DOCUMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.999999616427775	WITHOUT_CLASSIFICATION	3.835722249867855E-7	DOCUMENTATION
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.9999999912638777	WITHOUT_CLASSIFICATION	8.736122304790298E-9	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999996731579439	WITHOUT_CLASSIFICATION	3.268420560014918E-7	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999999582486747	WITHOUT_CLASSIFICATION	4.175132527236258E-8	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999957122986646	WITHOUT_CLASSIFICATION	4.2877013353575435E-6	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9999895502008004	WITHOUT_CLASSIFICATION	1.0449799199510523E-5	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.999999815253973	WITHOUT_CLASSIFICATION	1.8474602710832228E-7	DOCUMENTATION
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9999994580160824	WITHOUT_CLASSIFICATION	5.419839176196024E-7	DOCUMENTATION
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999987261160382	WITHOUT_CLASSIFICATION	1.2738839617674698E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999998898479172	WITHOUT_CLASSIFICATION	1.1015208285675072E-7	DOCUMENTATION
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999998400098555	WITHOUT_CLASSIFICATION	1.5999014444036855E-7	DOCUMENTATION
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999995637014066	WITHOUT_CLASSIFICATION	4.3629859329733783E-7	DOCUMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9999976205816778	WITHOUT_CLASSIFICATION	2.3794183220899763E-6	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999980352176201	WITHOUT_CLASSIFICATION	1.9647823798811984E-6	DOCUMENTATION
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999999714662224	WITHOUT_CLASSIFICATION	2.853377747090056E-8	DOCUMENTATION
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999950297194354	WITHOUT_CLASSIFICATION	4.9702805646542956E-6	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999358207134051	WITHOUT_CLASSIFICATION	6.417928659479843E-5	DOCUMENTATION
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999995667481997	WITHOUT_CLASSIFICATION	4.332518003194308E-7	DOCUMENTATION
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999994167276915	WITHOUT_CLASSIFICATION	5.832723083689419E-7	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999998058084031	WITHOUT_CLASSIFICATION	1.9419159683326505E-7	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9999997041399612	WITHOUT_CLASSIFICATION	2.95860038723324E-7	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999992563286251	WITHOUT_CLASSIFICATION	7.43671374914675E-7	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9999999686762193	WITHOUT_CLASSIFICATION	3.132378075621051E-8	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.9999984772149242	WITHOUT_CLASSIFICATION	1.5227850758609586E-6	DOCUMENTATION
// and perform the load	WITHOUT_CLASSIFICATION	0.9999970154877984	WITHOUT_CLASSIFICATION	2.9845122016553702E-6	DOCUMENTATION
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999607817560079	WITHOUT_CLASSIFICATION	3.921824399220251E-5	DOCUMENTATION
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999960035018106	WITHOUT_CLASSIFICATION	3.996498189383811E-6	DOCUMENTATION
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999890524370393	WITHOUT_CLASSIFICATION	1.0947562960662547E-5	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999994541238877	WITHOUT_CLASSIFICATION	5.458761123555724E-7	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999993555168593	WITHOUT_CLASSIFICATION	6.444831408141272E-7	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999999075325264	WITHOUT_CLASSIFICATION	9.246747365011143E-8	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999990339694437	WITHOUT_CLASSIFICATION	9.660305563114142E-7	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999981943170725	WITHOUT_CLASSIFICATION	1.8056829275779864E-6	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999983926473305	WITHOUT_CLASSIFICATION	1.6073526694863388E-6	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999700591437432	WITHOUT_CLASSIFICATION	2.9940856256935714E-5	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999700591437432	WITHOUT_CLASSIFICATION	2.9940856256935714E-5	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999977782902302	WITHOUT_CLASSIFICATION	2.221709769801967E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999995619283	WITHOUT_CLASSIFICATION	4.380716999952769E-7	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999995494369597	WITHOUT_CLASSIFICATION	4.505630402825598E-7	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9997520793888893	WITHOUT_CLASSIFICATION	2.4792061111066375E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999966234148753	WITHOUT_CLASSIFICATION	3.3765851246969665E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999966234148753	WITHOUT_CLASSIFICATION	3.3765851246969665E-6	DOCUMENTATION
//        }	WITHOUT_CLASSIFICATION	0.9999721635635123	WITHOUT_CLASSIFICATION	2.7836436487704273E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999964335746038	WITHOUT_CLASSIFICATION	3.5664253961613154E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9999034967972614	WITHOUT_CLASSIFICATION	9.6503202738587E-5	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999976833450973	WITHOUT_CLASSIFICATION	2.3166549027442657E-6	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999999786297458	WITHOUT_CLASSIFICATION	2.1370254274017918E-8	DOCUMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999985054770019	WITHOUT_CLASSIFICATION	1.4945229981046836E-6	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999987007207646	WITHOUT_CLASSIFICATION	1.2992792355272826E-6	DOCUMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999989494122831	WITHOUT_CLASSIFICATION	1.0505877169042755E-6	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999999821129734	WITHOUT_CLASSIFICATION	1.788702657254977E-8	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996393041553	WITHOUT_CLASSIFICATION	3.60695844811317E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996393041553	WITHOUT_CLASSIFICATION	3.60695844811317E-7	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9999974310424206	WITHOUT_CLASSIFICATION	2.5689575794536135E-6	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999738135584302	WITHOUT_CLASSIFICATION	2.6186441569896516E-5	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999943695026067	WITHOUT_CLASSIFICATION	5.6304973933230676E-6	DOCUMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9999933587013383	WITHOUT_CLASSIFICATION	6.64129866164528E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999469309308829	WITHOUT_CLASSIFICATION	5.3069069117020175E-5	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999958060154768	WITHOUT_CLASSIFICATION	4.193984523258811E-6	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999993572612531	WITHOUT_CLASSIFICATION	6.427387469637891E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999469309308829	WITHOUT_CLASSIFICATION	5.3069069117020175E-5	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999997714362305	WITHOUT_CLASSIFICATION	2.285637694371599E-7	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9999989200062553	WITHOUT_CLASSIFICATION	1.0799937446951587E-6	DOCUMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9999997828922012	WITHOUT_CLASSIFICATION	2.1710779878353395E-7	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9999996523433499	WITHOUT_CLASSIFICATION	3.476566500347199E-7	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999999582486747	WITHOUT_CLASSIFICATION	4.175132527236258E-8	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9999995732536224	WITHOUT_CLASSIFICATION	4.267463775533583E-7	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9999336906939077	WITHOUT_CLASSIFICATION	6.630930609231144E-5	DOCUMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999998343999026	WITHOUT_CLASSIFICATION	1.6560009747347075E-7	DOCUMENTATION
//use the id column alias	WITHOUT_CLASSIFICATION	0.9999873726476679	WITHOUT_CLASSIFICATION	1.2627352331975254E-5	DOCUMENTATION
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999980768850247	WITHOUT_CLASSIFICATION	1.9231149752586606E-6	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9999974111002409	WITHOUT_CLASSIFICATION	2.5888997590639577E-6	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9999719812479956	WITHOUT_CLASSIFICATION	2.8018752004389886E-5	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9999999658872764	WITHOUT_CLASSIFICATION	3.4112723578624164E-8	DOCUMENTATION
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9999936707011724	WITHOUT_CLASSIFICATION	6.32929882758275E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.999997975338303	WITHOUT_CLASSIFICATION	2.0246616968807582E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.999997975338303	WITHOUT_CLASSIFICATION	2.0246616968807582E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999958479646828	WITHOUT_CLASSIFICATION	4.152035317241185E-6	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999999116494123	WITHOUT_CLASSIFICATION	8.835058763228363E-8	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9999258645378671	WITHOUT_CLASSIFICATION	7.413546213287948E-5	DOCUMENTATION
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9999952070187317	WITHOUT_CLASSIFICATION	4.792981268308411E-6	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999961969432367	WITHOUT_CLASSIFICATION	3.8030567633462374E-6	DOCUMENTATION
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999998290067077	WITHOUT_CLASSIFICATION	1.709932922719019E-7	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999997188300812	WITHOUT_CLASSIFICATION	2.811699188230787E-7	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999998591439566	WITHOUT_CLASSIFICATION	1.4085604336763424E-7	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999988922380384	WITHOUT_CLASSIFICATION	1.10776196156877E-6	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999989034811069	WITHOUT_CLASSIFICATION	1.0965188931333357E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999947961397757	WITHOUT_CLASSIFICATION	5.203860224366624E-6	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9999999809397142	WITHOUT_CLASSIFICATION	1.9060285812133256E-8	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.9999987631995954	WITHOUT_CLASSIFICATION	1.2368004046090035E-6	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999999183412331	WITHOUT_CLASSIFICATION	8.165876679360332E-8	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9999985766213942	WITHOUT_CLASSIFICATION	1.4233786058542344E-6	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999969499853876	WITHOUT_CLASSIFICATION	3.0500146124072476E-6	DOCUMENTATION
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.9999994761910399	WITHOUT_CLASSIFICATION	5.238089600889244E-7	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999953355937143	WITHOUT_CLASSIFICATION	4.664406285724259E-6	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9999991456334995	WITHOUT_CLASSIFICATION	8.543665004275655E-7	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.999999768648159	WITHOUT_CLASSIFICATION	2.3135184107456195E-7	DOCUMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999995699672568	WITHOUT_CLASSIFICATION	4.3003274327104884E-7	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9999989997629006	WITHOUT_CLASSIFICATION	1.0002370993832445E-6	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999992871697113	WITHOUT_CLASSIFICATION	7.1283028874391E-7	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.9999999302847593	WITHOUT_CLASSIFICATION	6.971524070686377E-8	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999994378831127	WITHOUT_CLASSIFICATION	5.621168873504044E-7	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999994378831127	WITHOUT_CLASSIFICATION	5.621168873504044E-7	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999991140535563	WITHOUT_CLASSIFICATION	8.859464435072283E-7	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999999742458497	WITHOUT_CLASSIFICATION	2.5754150284194812E-8	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999996022762022	WITHOUT_CLASSIFICATION	3.9772379782353853E-7	DOCUMENTATION
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999998302016276	WITHOUT_CLASSIFICATION	1.6979837230138528E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999977465976663	WITHOUT_CLASSIFICATION	2.2534023336785147E-6	DOCUMENTATION
//TODO find a decent name before documenting	DOCUMENTATION	0.9928423897142494	WITHOUT_CLASSIFICATION	0.007157610285750529	DOCUMENTATION
