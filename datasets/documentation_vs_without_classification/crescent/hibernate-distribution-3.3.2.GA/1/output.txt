//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999313098761796	WITHOUT_CLASSIFICATION	6.869012382039046E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999535637460133	WITHOUT_CLASSIFICATION	4.643625398663515E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999535637460133	WITHOUT_CLASSIFICATION	4.643625398663515E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999535637460133	WITHOUT_CLASSIFICATION	4.643625398663515E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999535637460133	WITHOUT_CLASSIFICATION	4.643625398663515E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999535637460133	WITHOUT_CLASSIFICATION	4.643625398663515E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999535637460133	WITHOUT_CLASSIFICATION	4.643625398663515E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999535637460133	WITHOUT_CLASSIFICATION	4.643625398663515E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999614985385339	WITHOUT_CLASSIFICATION	3.850146146622191E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999614985385339	WITHOUT_CLASSIFICATION	3.850146146622191E-5	DOCUMENTATION
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9999899646826802	WITHOUT_CLASSIFICATION	1.0035317319793291E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999924543721275	WITHOUT_CLASSIFICATION	7.5456278725624906E-6	DOCUMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999918065109789	WITHOUT_CLASSIFICATION	8.193489021074788E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.999983970958105	WITHOUT_CLASSIFICATION	1.602904189499005E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.999983970958105	WITHOUT_CLASSIFICATION	1.602904189499005E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999983501534971	WITHOUT_CLASSIFICATION	1.6498465029100526E-6	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999968466004364	WITHOUT_CLASSIFICATION	3.1533995634731123E-6	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999961954645058	WITHOUT_CLASSIFICATION	3.8045354940889643E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999378568940307	WITHOUT_CLASSIFICATION	6.214310596935841E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999552967173339	WITHOUT_CLASSIFICATION	4.47032826661764E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999552967173339	WITHOUT_CLASSIFICATION	4.47032826661764E-5	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999574656098056	WITHOUT_CLASSIFICATION	4.253439019447301E-5	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.999994003575092	WITHOUT_CLASSIFICATION	5.996424908014585E-6	DOCUMENTATION
// decode row selection...	WITHOUT_CLASSIFICATION	0.9999950118690478	WITHOUT_CLASSIFICATION	4.988130952239277E-6	DOCUMENTATION
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999976224804018	WITHOUT_CLASSIFICATION	2.3775195982209293E-6	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999996978667617	WITHOUT_CLASSIFICATION	3.021332383860387E-7	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9998379889240707	WITHOUT_CLASSIFICATION	1.6201107592929716E-4	DOCUMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9998444023504134	WITHOUT_CLASSIFICATION	1.5559764958661838E-4	DOCUMENTATION
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9998821254171527	WITHOUT_CLASSIFICATION	1.1787458284725131E-4	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998805664403554	WITHOUT_CLASSIFICATION	1.1943355964473399E-4	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9955169675472737	WITHOUT_CLASSIFICATION	0.00448303245272625	DOCUMENTATION
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9998900660655895	WITHOUT_CLASSIFICATION	1.0993393441047232E-4	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9998661774321045	WITHOUT_CLASSIFICATION	1.3382256789539417E-4	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999933843665958	WITHOUT_CLASSIFICATION	6.615633404272153E-6	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9998717072919096	WITHOUT_CLASSIFICATION	1.2829270809043423E-4	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9998717072919096	WITHOUT_CLASSIFICATION	1.2829270809043423E-4	DOCUMENTATION
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9999991318251067	WITHOUT_CLASSIFICATION	8.681748933429333E-7	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9998626106038495	WITHOUT_CLASSIFICATION	1.3738939615051565E-4	DOCUMENTATION
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999901878949633	WITHOUT_CLASSIFICATION	9.812105036783906E-6	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999985875890361	WITHOUT_CLASSIFICATION	1.4124109639234574E-6	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.9999940922230343	WITHOUT_CLASSIFICATION	5.9077769657791794E-6	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9955399161427951	WITHOUT_CLASSIFICATION	0.004460083857204909	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9955399161427951	WITHOUT_CLASSIFICATION	0.004460083857204909	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999972095652232	WITHOUT_CLASSIFICATION	2.790434776840808E-6	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999995424580699	WITHOUT_CLASSIFICATION	4.575419300798013E-7	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999996049425327	WITHOUT_CLASSIFICATION	3.9505746722934176E-7	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999589109832402	WITHOUT_CLASSIFICATION	4.108901675968964E-5	DOCUMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.9999936304487582	WITHOUT_CLASSIFICATION	6.3695512417260195E-6	DOCUMENTATION
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999919366399337	WITHOUT_CLASSIFICATION	8.063360066283312E-6	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999814412394626	WITHOUT_CLASSIFICATION	1.855876053735072E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999935611064138	WITHOUT_CLASSIFICATION	6.4388935862499125E-6	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9997152135275522	WITHOUT_CLASSIFICATION	2.847864724478862E-4	DOCUMENTATION
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9999986177686789	WITHOUT_CLASSIFICATION	1.3822313211467231E-6	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9998989142384165	WITHOUT_CLASSIFICATION	1.0108576158347994E-4	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9997152135275522	WITHOUT_CLASSIFICATION	2.847864724478862E-4	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9998989142384165	WITHOUT_CLASSIFICATION	1.0108576158347994E-4	DOCUMENTATION
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999883620639719	WITHOUT_CLASSIFICATION	1.1637936028124622E-5	DOCUMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9999981435270007	WITHOUT_CLASSIFICATION	1.8564729993344166E-6	DOCUMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999967839398397	WITHOUT_CLASSIFICATION	3.2160601602471815E-6	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999989439408576	WITHOUT_CLASSIFICATION	1.0560591423753071E-6	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999995301353821	WITHOUT_CLASSIFICATION	4.6986461788895363E-7	DOCUMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999983623780458	WITHOUT_CLASSIFICATION	1.6376219542093343E-6	DOCUMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.999999130368338	WITHOUT_CLASSIFICATION	8.696316621208673E-7	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9999937781398486	WITHOUT_CLASSIFICATION	6.221860151473134E-6	DOCUMENTATION
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999990526547337	WITHOUT_CLASSIFICATION	9.473452662484269E-7	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9999943616328985	WITHOUT_CLASSIFICATION	5.638367101621089E-6	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9999917861581493	WITHOUT_CLASSIFICATION	8.213841850766184E-6	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999800453462843	WITHOUT_CLASSIFICATION	1.9954653715794183E-5	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999995146968856	WITHOUT_CLASSIFICATION	4.853031143372948E-7	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9999973254738442	WITHOUT_CLASSIFICATION	2.674526155775614E-6	DOCUMENTATION
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9999986858308186	WITHOUT_CLASSIFICATION	1.3141691814327025E-6	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999983643497024	WITHOUT_CLASSIFICATION	1.6356502976792223E-6	DOCUMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.9999910582243363	WITHOUT_CLASSIFICATION	8.941775663721078E-6	DOCUMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999992306526105	WITHOUT_CLASSIFICATION	7.693473893634803E-7	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999983865761047	WITHOUT_CLASSIFICATION	1.6134238953115115E-6	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999976299733156	WITHOUT_CLASSIFICATION	2.3700266843331533E-6	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999969821072753	WITHOUT_CLASSIFICATION	3.017892724734484E-6	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999935960513798	WITHOUT_CLASSIFICATION	6.403948620188153E-6	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999963250437228	WITHOUT_CLASSIFICATION	3.6749562772282467E-6	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999896785165828	WITHOUT_CLASSIFICATION	1.0321483417200215E-5	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9999991668655281	WITHOUT_CLASSIFICATION	8.331344718150566E-7	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999932309914945	WITHOUT_CLASSIFICATION	6.769008505368813E-6	DOCUMENTATION
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999931183594711	WITHOUT_CLASSIFICATION	6.881640528876691E-6	DOCUMENTATION
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9999968075875926	WITHOUT_CLASSIFICATION	3.1924124073703655E-6	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999993602219187	WITHOUT_CLASSIFICATION	6.397780813131107E-7	DOCUMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999997242697714	WITHOUT_CLASSIFICATION	2.7573022857529364E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.999997780430858	WITHOUT_CLASSIFICATION	2.2195691419801E-6	DOCUMENTATION
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999948202029846	WITHOUT_CLASSIFICATION	5.179797015424357E-6	DOCUMENTATION
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.99999899182208	WITHOUT_CLASSIFICATION	1.008177920059337E-6	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999955855513553	WITHOUT_CLASSIFICATION	4.4144486447540265E-6	DOCUMENTATION
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999910569805884	WITHOUT_CLASSIFICATION	8.943019411558179E-6	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999988803276985	WITHOUT_CLASSIFICATION	1.119672301509713E-6	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999955855513553	WITHOUT_CLASSIFICATION	4.4144486447540265E-6	DOCUMENTATION
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.999997945579151	WITHOUT_CLASSIFICATION	2.05442084892473E-6	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.999999066143774	WITHOUT_CLASSIFICATION	9.33856226002715E-7	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999789801794138	WITHOUT_CLASSIFICATION	2.101982058627026E-5	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999867410809345	WITHOUT_CLASSIFICATION	1.325891906547948E-5	DOCUMENTATION
// construct the cache	WITHOUT_CLASSIFICATION	0.9999939024738774	WITHOUT_CLASSIFICATION	6.097526122553633E-6	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999984468388726	WITHOUT_CLASSIFICATION	1.5531611274145148E-6	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999984468388726	WITHOUT_CLASSIFICATION	1.5531611274145148E-6	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999344152289467	WITHOUT_CLASSIFICATION	6.558477105331714E-5	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.9999997593387357	WITHOUT_CLASSIFICATION	2.4066126434218656E-7	DOCUMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.99993744562418	WITHOUT_CLASSIFICATION	6.255437582002375E-5	DOCUMENTATION
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.9999990102526035	WITHOUT_CLASSIFICATION	9.89747396499053E-7	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.9999980986995979	WITHOUT_CLASSIFICATION	1.9013004021159106E-6	DOCUMENTATION
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999987984154167	WITHOUT_CLASSIFICATION	1.201584583230656E-6	DOCUMENTATION
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.999994392292267	WITHOUT_CLASSIFICATION	5.607707732889873E-6	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9999905416504682	WITHOUT_CLASSIFICATION	9.458349531745969E-6	DOCUMENTATION
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999975204956019	WITHOUT_CLASSIFICATION	2.479504398044369E-6	DOCUMENTATION
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999979618084837	WITHOUT_CLASSIFICATION	2.0381915163921288E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999958174702351	WITHOUT_CLASSIFICATION	4.1825297649087615E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999958174702351	WITHOUT_CLASSIFICATION	4.1825297649087615E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999977839327906	WITHOUT_CLASSIFICATION	2.216067209361929E-6	DOCUMENTATION
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999974182903149	WITHOUT_CLASSIFICATION	2.58170968517515E-6	DOCUMENTATION
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.9999959954248531	WITHOUT_CLASSIFICATION	4.00457514695409E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999958174702351	WITHOUT_CLASSIFICATION	4.1825297649087615E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999977839327906	WITHOUT_CLASSIFICATION	2.216067209361929E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999977839327906	WITHOUT_CLASSIFICATION	2.216067209361929E-6	DOCUMENTATION
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9999980435396021	WITHOUT_CLASSIFICATION	1.9564603979539353E-6	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.999995328751224	WITHOUT_CLASSIFICATION	4.671248776003142E-6	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999986450272809	WITHOUT_CLASSIFICATION	1.3549727190775255E-6	DOCUMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.999998172961175	WITHOUT_CLASSIFICATION	1.8270388251071598E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999979754854305	WITHOUT_CLASSIFICATION	2.0245145695164873E-6	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999979754854305	WITHOUT_CLASSIFICATION	2.0245145695164873E-6	DOCUMENTATION
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999797080109099	WITHOUT_CLASSIFICATION	2.029198909010439E-5	DOCUMENTATION
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999883953254235	WITHOUT_CLASSIFICATION	1.1604674576547105E-5	DOCUMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.999990025072141	WITHOUT_CLASSIFICATION	9.974927859053314E-6	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999944530617701	WITHOUT_CLASSIFICATION	5.5469382298453404E-6	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999944530617701	WITHOUT_CLASSIFICATION	5.5469382298453404E-6	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9999685675763702	WITHOUT_CLASSIFICATION	3.143242362981644E-5	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999959386139958	WITHOUT_CLASSIFICATION	4.061386004172571E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999970240426496	WITHOUT_CLASSIFICATION	2.975957350464397E-6	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999941517397388	WITHOUT_CLASSIFICATION	5.848260261196022E-6	DOCUMENTATION
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999995839218386	WITHOUT_CLASSIFICATION	4.160781613786453E-7	DOCUMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.9999963370964566	WITHOUT_CLASSIFICATION	3.662903543291483E-6	DOCUMENTATION
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9999873207874495	WITHOUT_CLASSIFICATION	1.2679212550590958E-5	DOCUMENTATION
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9999973946884939	WITHOUT_CLASSIFICATION	2.605311506066253E-6	DOCUMENTATION
//sort first by role name	WITHOUT_CLASSIFICATION	0.9999671142817548	WITHOUT_CLASSIFICATION	3.288571824521702E-5	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999970240426496	WITHOUT_CLASSIFICATION	2.975957350464397E-6	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9998584273916931	WITHOUT_CLASSIFICATION	1.4157260830694918E-4	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999709675834838	WITHOUT_CLASSIFICATION	2.9032416516175075E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999709675834838	WITHOUT_CLASSIFICATION	2.9032416516175075E-5	DOCUMENTATION
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999927625950258	WITHOUT_CLASSIFICATION	7.237404974188511E-6	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999973380980426	WITHOUT_CLASSIFICATION	2.6619019573438773E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999993221972501	WITHOUT_CLASSIFICATION	6.778027498000521E-7	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9999599549996935	WITHOUT_CLASSIFICATION	4.004500030661886E-5	DOCUMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9999459865985079	WITHOUT_CLASSIFICATION	5.40134014921274E-5	DOCUMENTATION
//then by id	WITHOUT_CLASSIFICATION	0.9999023365217503	WITHOUT_CLASSIFICATION	9.766347824981001E-5	DOCUMENTATION
// to be safe...	WITHOUT_CLASSIFICATION	0.9999758962148083	WITHOUT_CLASSIFICATION	2.4103785191740507E-5	DOCUMENTATION
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9999985482588006	WITHOUT_CLASSIFICATION	1.4517411993903615E-6	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999984708822871	WITHOUT_CLASSIFICATION	1.5291177128945259E-6	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999984708822871	WITHOUT_CLASSIFICATION	1.5291177128945259E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999893731506672	WITHOUT_CLASSIFICATION	1.0626849332869481E-5	DOCUMENTATION
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999313098761796	WITHOUT_CLASSIFICATION	6.869012382039046E-5	DOCUMENTATION
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999901020933942	WITHOUT_CLASSIFICATION	9.8979066058643E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999535637460133	WITHOUT_CLASSIFICATION	4.643625398663515E-5	DOCUMENTATION
// invokespecial	WITHOUT_CLASSIFICATION	0.9999947653591271	WITHOUT_CLASSIFICATION	5.234640872919809E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999614985385339	WITHOUT_CLASSIFICATION	3.850146146622191E-5	DOCUMENTATION
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999804839132113	WITHOUT_CLASSIFICATION	1.9516086788800384E-5	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.9999804381578937	WITHOUT_CLASSIFICATION	1.9561842106240826E-5	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.999983283902475	WITHOUT_CLASSIFICATION	1.6716097524880563E-5	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999870673112473	WITHOUT_CLASSIFICATION	1.2932688752578416E-5	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9999976835315848	WITHOUT_CLASSIFICATION	2.3164684151627295E-6	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9999291809477063	WITHOUT_CLASSIFICATION	7.08190522937208E-5	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9998363705654003	WITHOUT_CLASSIFICATION	1.6362943459974493E-4	DOCUMENTATION
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999940218324971	WITHOUT_CLASSIFICATION	5.978167502833855E-6	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999924543721275	WITHOUT_CLASSIFICATION	7.5456278725624906E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999935368686604	WITHOUT_CLASSIFICATION	6.463131339552688E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999935368686604	WITHOUT_CLASSIFICATION	6.463131339552688E-6	DOCUMENTATION
// aastore // args	WITHOUT_CLASSIFICATION	0.9999891103705395	WITHOUT_CLASSIFICATION	1.0889629460615974E-5	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9999965553175288	WITHOUT_CLASSIFICATION	3.444682471130814E-6	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999986238444111	WITHOUT_CLASSIFICATION	1.3761555889308495E-6	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999845608422829	WITHOUT_CLASSIFICATION	1.5439157717072156E-5	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999906397732362	WITHOUT_CLASSIFICATION	9.36022676373977E-6	DOCUMENTATION
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.9999953020162831	WITHOUT_CLASSIFICATION	4.697983716857015E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.999983970958105	WITHOUT_CLASSIFICATION	1.602904189499005E-5	DOCUMENTATION
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999981855276768	WITHOUT_CLASSIFICATION	1.8144723231086957E-6	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999539314233764	WITHOUT_CLASSIFICATION	4.606857662364866E-5	DOCUMENTATION
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999941864233086	WITHOUT_CLASSIFICATION	5.8135766914479525E-6	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.9999970118174343	WITHOUT_CLASSIFICATION	2.9881825658314473E-6	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.9999763642046504	WITHOUT_CLASSIFICATION	2.3635795349632342E-5	DOCUMENTATION
// aaload	WITHOUT_CLASSIFICATION	0.9999458562969871	WITHOUT_CLASSIFICATION	5.41437030128336E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999811579735115	WITHOUT_CLASSIFICATION	1.88420264884402E-5	DOCUMENTATION
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.9999985654996224	WITHOUT_CLASSIFICATION	1.4345003775989884E-6	DOCUMENTATION
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999684449883947	WITHOUT_CLASSIFICATION	3.1555011605459126E-5	DOCUMENTATION
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999838153290606	WITHOUT_CLASSIFICATION	1.6184670939434022E-5	DOCUMENTATION
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999971635084303	WITHOUT_CLASSIFICATION	2.836491569814371E-6	DOCUMENTATION
// register in exception table	WITHOUT_CLASSIFICATION	0.9999974804458043	WITHOUT_CLASSIFICATION	2.5195541958099257E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999535637460133	WITHOUT_CLASSIFICATION	4.643625398663515E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999535637460133	WITHOUT_CLASSIFICATION	4.643625398663515E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999614985385339	WITHOUT_CLASSIFICATION	3.850146146622191E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999614985385339	WITHOUT_CLASSIFICATION	3.850146146622191E-5	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9998363705654003	WITHOUT_CLASSIFICATION	1.6362943459974493E-4	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999935368686604	WITHOUT_CLASSIFICATION	6.463131339552688E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999811579735115	WITHOUT_CLASSIFICATION	1.88420264884402E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999983501534971	WITHOUT_CLASSIFICATION	1.6498465029100526E-6	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.999996043378864	WITHOUT_CLASSIFICATION	3.9566211358920295E-6	DOCUMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9999953424101402	WITHOUT_CLASSIFICATION	4.657589859769346E-6	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.999995458839606	WITHOUT_CLASSIFICATION	4.541160393919926E-6	DOCUMENTATION
// iload_3 // i	WITHOUT_CLASSIFICATION	0.9999690916727882	WITHOUT_CLASSIFICATION	3.090832721185854E-5	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.999998268098732	WITHOUT_CLASSIFICATION	1.7319012679076747E-6	DOCUMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.9999613738066504	WITHOUT_CLASSIFICATION	3.862619334958785E-5	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.999990704426409	WITHOUT_CLASSIFICATION	9.295573590967717E-6	DOCUMENTATION
//swallow	WITHOUT_CLASSIFICATION	0.9995385900725398	WITHOUT_CLASSIFICATION	4.6140992746022903E-4	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.9999961607597196	WITHOUT_CLASSIFICATION	3.8392402803473445E-6	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999900667487353	WITHOUT_CLASSIFICATION	9.93325126481323E-6	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999900667487353	WITHOUT_CLASSIFICATION	9.93325126481323E-6	DOCUMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999970931083703	WITHOUT_CLASSIFICATION	2.906891629734992E-6	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999964144329441	WITHOUT_CLASSIFICATION	3.585567055960601E-6	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9999966546532136	WITHOUT_CLASSIFICATION	3.345346786461176E-6	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999761011423062	WITHOUT_CLASSIFICATION	2.389885769382179E-5	DOCUMENTATION
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999972596540949	WITHOUT_CLASSIFICATION	2.7403459050995766E-6	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999948575254718	WITHOUT_CLASSIFICATION	5.1424745282449E-6	DOCUMENTATION
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999869558783345	WITHOUT_CLASSIFICATION	1.3044121665471515E-5	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999968466004364	WITHOUT_CLASSIFICATION	3.1533995634731123E-6	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.9999627693760413	WITHOUT_CLASSIFICATION	3.723062395867186E-5	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999921670456459	WITHOUT_CLASSIFICATION	7.832954354188125E-6	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999921670456459	WITHOUT_CLASSIFICATION	7.832954354188125E-6	DOCUMENTATION
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999954702871343	WITHOUT_CLASSIFICATION	4.529712865625647E-6	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999903632630933	WITHOUT_CLASSIFICATION	9.636736906607389E-6	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999941544897181	WITHOUT_CLASSIFICATION	5.845510281944199E-6	DOCUMENTATION
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.9999988710875559	WITHOUT_CLASSIFICATION	1.128912444064766E-6	DOCUMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999467834161709	WITHOUT_CLASSIFICATION	5.321658382899605E-5	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999614985385339	WITHOUT_CLASSIFICATION	3.850146146622191E-5	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9998363705654003	WITHOUT_CLASSIFICATION	1.6362943459974493E-4	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999924543721275	WITHOUT_CLASSIFICATION	7.5456278725624906E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999811579735115	WITHOUT_CLASSIFICATION	1.88420264884402E-5	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.9999811579735115	WITHOUT_CLASSIFICATION	1.88420264884402E-5	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999966447520674	WITHOUT_CLASSIFICATION	3.3552479325424398E-6	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999966447520674	WITHOUT_CLASSIFICATION	3.3552479325424398E-6	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999764730389303	WITHOUT_CLASSIFICATION	2.352696106968981E-5	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999701834696916	WITHOUT_CLASSIFICATION	2.9816530308360268E-5	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999701834696916	WITHOUT_CLASSIFICATION	2.9816530308360268E-5	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999761580813915	WITHOUT_CLASSIFICATION	2.3841918608563955E-5	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.9999587841952261	WITHOUT_CLASSIFICATION	4.1215804773939944E-5	DOCUMENTATION
// ldc // field name	WITHOUT_CLASSIFICATION	0.9999859148621956	WITHOUT_CLASSIFICATION	1.4085137804349359E-5	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.9999938874485352	WITHOUT_CLASSIFICATION	6.11255146477689E-6	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999970063240609	WITHOUT_CLASSIFICATION	2.99367593923061E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999378568940307	WITHOUT_CLASSIFICATION	6.214310596935841E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999378568940307	WITHOUT_CLASSIFICATION	6.214310596935841E-5	DOCUMENTATION
// not array	WITHOUT_CLASSIFICATION	0.9999742350881915	WITHOUT_CLASSIFICATION	2.576491180843787E-5	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.9999549746800639	WITHOUT_CLASSIFICATION	4.502531993620653E-5	DOCUMENTATION
// boolean	WITHOUT_CLASSIFICATION	0.9999734263216176	WITHOUT_CLASSIFICATION	2.6573678382542806E-5	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9999371880487639	WITHOUT_CLASSIFICATION	6.281195123613208E-5	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9999412696657376	WITHOUT_CLASSIFICATION	5.8730334262294434E-5	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9999573511626905	WITHOUT_CLASSIFICATION	4.264883730954689E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999552967173339	WITHOUT_CLASSIFICATION	4.47032826661764E-5	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999564699566729	WITHOUT_CLASSIFICATION	4.353004332711579E-5	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999564699566729	WITHOUT_CLASSIFICATION	4.353004332711579E-5	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999574656098056	WITHOUT_CLASSIFICATION	4.253439019447301E-5	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999574656098056	WITHOUT_CLASSIFICATION	4.253439019447301E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999679364318212	WITHOUT_CLASSIFICATION	3.206356817872249E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999679364318212	WITHOUT_CLASSIFICATION	3.206356817872249E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999965845569717	WITHOUT_CLASSIFICATION	3.415443028304448E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999965845569717	WITHOUT_CLASSIFICATION	3.415443028304448E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999378568940307	WITHOUT_CLASSIFICATION	6.214310596935841E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999552967173339	WITHOUT_CLASSIFICATION	4.47032826661764E-5	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999564699566729	WITHOUT_CLASSIFICATION	4.353004332711579E-5	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.9999564699566729	WITHOUT_CLASSIFICATION	4.353004332711579E-5	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999574656098056	WITHOUT_CLASSIFICATION	4.253439019447301E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999679364318212	WITHOUT_CLASSIFICATION	3.206356817872249E-5	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999679364318212	WITHOUT_CLASSIFICATION	3.206356817872249E-5	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999965845569717	WITHOUT_CLASSIFICATION	3.415443028304448E-6	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999971419821022	WITHOUT_CLASSIFICATION	2.858017897740511E-6	DOCUMENTATION
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9999739983477403	WITHOUT_CLASSIFICATION	2.6001652259821106E-5	DOCUMENTATION
//decrement the lock	WITHOUT_CLASSIFICATION	0.9999467081303682	WITHOUT_CLASSIFICATION	5.3291869631682693E-5	DOCUMENTATION
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999982178601164	WITHOUT_CLASSIFICATION	1.78213988346727E-6	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9999641296113644	WITHOUT_CLASSIFICATION	3.587038863551373E-5	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999252647492932	WITHOUT_CLASSIFICATION	7.473525070674095E-5	DOCUMENTATION
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.9999922857127534	WITHOUT_CLASSIFICATION	7.714287246562874E-6	DOCUMENTATION
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9999989539272282	WITHOUT_CLASSIFICATION	1.0460727717871664E-6	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999913995678107	WITHOUT_CLASSIFICATION	8.600432189316118E-6	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999985502554098	WITHOUT_CLASSIFICATION	1.4497445901436812E-6	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999936992442701	WITHOUT_CLASSIFICATION	6.300755729963676E-6	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.9999878884461244	WITHOUT_CLASSIFICATION	1.2111553875645741E-5	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999344152289467	WITHOUT_CLASSIFICATION	6.558477105331714E-5	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999252647492932	WITHOUT_CLASSIFICATION	7.473525070674095E-5	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9989463740046916	WITHOUT_CLASSIFICATION	0.0010536259953084575	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9989463740046916	WITHOUT_CLASSIFICATION	0.0010536259953084575	DOCUMENTATION
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999992217972923	WITHOUT_CLASSIFICATION	7.782027077687759E-7	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999986592838762	WITHOUT_CLASSIFICATION	1.340716123723182E-6	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999986592838762	WITHOUT_CLASSIFICATION	1.340716123723182E-6	DOCUMENTATION
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.9999937599723263	WITHOUT_CLASSIFICATION	6.240027673690539E-6	DOCUMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999979733911004	WITHOUT_CLASSIFICATION	2.0266088996476664E-6	DOCUMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.9999961825776962	WITHOUT_CLASSIFICATION	3.817422303792226E-6	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999939668887706	WITHOUT_CLASSIFICATION	6.033111229402484E-6	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999939668887706	WITHOUT_CLASSIFICATION	6.033111229402484E-6	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.9999996978667617	WITHOUT_CLASSIFICATION	3.021332383860387E-7	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999993497372429	WITHOUT_CLASSIFICATION	6.502627571332492E-7	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999993497372429	WITHOUT_CLASSIFICATION	6.502627571332492E-7	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999985424395303	WITHOUT_CLASSIFICATION	1.457560469650616E-6	DOCUMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999946182411541	WITHOUT_CLASSIFICATION	5.381758845945733E-6	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999921424467848	WITHOUT_CLASSIFICATION	7.857553215226824E-6	DOCUMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9998663343859917	WITHOUT_CLASSIFICATION	1.336656140082644E-4	DOCUMENTATION
// MUTABLE	WITHOUT_CLASSIFICATION	0.9998699326384105	WITHOUT_CLASSIFICATION	1.300673615894287E-4	DOCUMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.9998470593540878	WITHOUT_CLASSIFICATION	1.5294064591229818E-4	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9998379889240707	WITHOUT_CLASSIFICATION	1.6201107592929716E-4	DOCUMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9998716601303254	WITHOUT_CLASSIFICATION	1.2833986967473727E-4	DOCUMENTATION
// TODO:	WITHOUT_CLASSIFICATION	0.9997976092195124	WITHOUT_CLASSIFICATION	2.023907804875854E-4	DOCUMENTATION
// ID	WITHOUT_CLASSIFICATION	0.9998105280355126	WITHOUT_CLASSIFICATION	1.8947196448733952E-4	DOCUMENTATION
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9998447727128226	WITHOUT_CLASSIFICATION	1.552272871774201E-4	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998805664403554	WITHOUT_CLASSIFICATION	1.1943355964473399E-4	DOCUMENTATION
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999954174324275	WITHOUT_CLASSIFICATION	4.5825675724520315E-6	DOCUMENTATION
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999981910159079	WITHOUT_CLASSIFICATION	1.8089840921056113E-6	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.999999474836774	WITHOUT_CLASSIFICATION	5.251632260407052E-7	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998805664403554	WITHOUT_CLASSIFICATION	1.1943355964473399E-4	DOCUMENTATION
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999966623273566	WITHOUT_CLASSIFICATION	3.337672643298477E-6	DOCUMENTATION
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999981351334742	WITHOUT_CLASSIFICATION	1.8648665258145507E-6	DOCUMENTATION
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9998681755912819	WITHOUT_CLASSIFICATION	1.318244087180125E-4	DOCUMENTATION
// IMPORT	WITHOUT_CLASSIFICATION	0.9998632458758684	WITHOUT_CLASSIFICATION	1.3675412413161062E-4	DOCUMENTATION
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9998778555213741	WITHOUT_CLASSIFICATION	1.2214447862579641E-4	DOCUMENTATION
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9998756033275875	WITHOUT_CLASSIFICATION	1.2439667241246735E-4	DOCUMENTATION
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9997743024025807	WITHOUT_CLASSIFICATION	2.256975974194097E-4	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9998661774321045	WITHOUT_CLASSIFICATION	1.3382256789539417E-4	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9998647830416616	WITHOUT_CLASSIFICATION	1.3521695833848248E-4	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999933843665958	WITHOUT_CLASSIFICATION	6.615633404272153E-6	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999825146280739	WITHOUT_CLASSIFICATION	1.7485371926112446E-5	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999956950392074	WITHOUT_CLASSIFICATION	4.30496079260791E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9998039972598748	WITHOUT_CLASSIFICATION	1.960027401251468E-4	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9998379889240707	WITHOUT_CLASSIFICATION	1.6201107592929716E-4	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9998647830416616	WITHOUT_CLASSIFICATION	1.3521695833848248E-4	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999825146280739	WITHOUT_CLASSIFICATION	1.7485371926112446E-5	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9998039972598748	WITHOUT_CLASSIFICATION	1.960027401251468E-4	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999945835969178	WITHOUT_CLASSIFICATION	5.416403082189091E-6	DOCUMENTATION
// TABLENAME	WITHOUT_CLASSIFICATION	0.9998615002279915	WITHOUT_CLASSIFICATION	1.3849977200845875E-4	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.99999697072433	WITHOUT_CLASSIFICATION	3.0292756698619404E-6	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9998717072919096	WITHOUT_CLASSIFICATION	1.2829270809043423E-4	DOCUMENTATION
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9998486389012196	WITHOUT_CLASSIFICATION	1.513610987804861E-4	DOCUMENTATION
// column index	WITHOUT_CLASSIFICATION	0.999989009370049	WITHOUT_CLASSIFICATION	1.0990629950940878E-5	DOCUMENTATION
//column unique-key	WITHOUT_CLASSIFICATION	0.9999208072590885	WITHOUT_CLASSIFICATION	7.919274091154228E-5	DOCUMENTATION
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9999973736455263	WITHOUT_CLASSIFICATION	2.626354473558052E-6	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999420935854539	WITHOUT_CLASSIFICATION	5.790641454614507E-5	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999993106689634	WITHOUT_CLASSIFICATION	6.893310366996374E-7	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999995384458572	WITHOUT_CLASSIFICATION	4.6155414275359896E-7	DOCUMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999971754206698	WITHOUT_CLASSIFICATION	2.824579330165199E-6	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.9999985657081566	WITHOUT_CLASSIFICATION	1.4342918433908463E-6	DOCUMENTATION
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.99999947656527	WITHOUT_CLASSIFICATION	5.234347299384119E-7	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9998669520919451	WITHOUT_CLASSIFICATION	1.3304790805498222E-4	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9998439817392439	WITHOUT_CLASSIFICATION	1.560182607561011E-4	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9998626106038495	WITHOUT_CLASSIFICATION	1.3738939615051565E-4	DOCUMENTATION
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999930389697751	WITHOUT_CLASSIFICATION	6.9610302248925765E-6	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9998624433068384	WITHOUT_CLASSIFICATION	1.3755669316158596E-4	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9998647830416616	WITHOUT_CLASSIFICATION	1.3521695833848248E-4	DOCUMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999935686875986	WITHOUT_CLASSIFICATION	6.431312401298459E-6	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.999996429373982	WITHOUT_CLASSIFICATION	3.5706260180067757E-6	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.9999871652835467	WITHOUT_CLASSIFICATION	1.28347164533624E-5	DOCUMENTATION
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.999994113273932	WITHOUT_CLASSIFICATION	5.886726068062666E-6	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999934797626656	WITHOUT_CLASSIFICATION	6.520237334356625E-6	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999974361283593	WITHOUT_CLASSIFICATION	2.5638716406542137E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999976160483769	WITHOUT_CLASSIFICATION	2.3839516231963976E-6	DOCUMENTATION
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.9999977544975542	WITHOUT_CLASSIFICATION	2.2455024458632763E-6	DOCUMENTATION
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9999013699570816	WITHOUT_CLASSIFICATION	9.863004291848536E-5	DOCUMENTATION
// GENERATOR	WITHOUT_CLASSIFICATION	0.9998732719672693	WITHOUT_CLASSIFICATION	1.2672803273064003E-4	DOCUMENTATION
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9998853514046803	WITHOUT_CLASSIFICATION	1.1464859531981705E-4	DOCUMENTATION
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9998646119127234	WITHOUT_CLASSIFICATION	1.353880872766733E-4	DOCUMENTATION
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9999952583463383	WITHOUT_CLASSIFICATION	4.741653661671199E-6	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.9999985875890361	WITHOUT_CLASSIFICATION	1.4124109639234574E-6	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.9999917288026031	WITHOUT_CLASSIFICATION	8.271197396859727E-6	DOCUMENTATION
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999986408338082	WITHOUT_CLASSIFICATION	1.359166191892762E-6	DOCUMENTATION
// Bind the where	WITHOUT_CLASSIFICATION	0.9999857857202585	WITHOUT_CLASSIFICATION	1.4214279741476387E-5	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999921714585737	WITHOUT_CLASSIFICATION	7.828541426265682E-6	DOCUMENTATION
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999948821242312	WITHOUT_CLASSIFICATION	5.11787576881662E-6	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.9999950099851608	WITHOUT_CLASSIFICATION	4.990014839262073E-6	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999980989096262	WITHOUT_CLASSIFICATION	1.9010903737665274E-6	DOCUMENTATION
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9999951256839468	WITHOUT_CLASSIFICATION	4.874316053225477E-6	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999757502887763	WITHOUT_CLASSIFICATION	2.424971122372554E-5	DOCUMENTATION
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9999317903745342	WITHOUT_CLASSIFICATION	6.820962546585231E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999211378113098	WITHOUT_CLASSIFICATION	7.886218869031437E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999211378113098	WITHOUT_CLASSIFICATION	7.886218869031437E-5	DOCUMENTATION
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9999038782241465	WITHOUT_CLASSIFICATION	9.612177585342855E-5	DOCUMENTATION
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999959324606438	WITHOUT_CLASSIFICATION	4.067539356169433E-6	DOCUMENTATION
//use dialect default properties	WITHOUT_CLASSIFICATION	0.9999696249309705	WITHOUT_CLASSIFICATION	3.0375069029394796E-5	DOCUMENTATION
// Transaction settings:	WITHOUT_CLASSIFICATION	0.9999913421877203	WITHOUT_CLASSIFICATION	8.657812279724233E-6	DOCUMENTATION
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9999537729256625	WITHOUT_CLASSIFICATION	4.6227074337424376E-5	DOCUMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9999516691715643	WITHOUT_CLASSIFICATION	4.8330828435715054E-5	DOCUMENTATION
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999937533127883	WITHOUT_CLASSIFICATION	6.246687211632859E-6	DOCUMENTATION
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9999992184233882	WITHOUT_CLASSIFICATION	7.815766116702381E-7	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9999357316073039	WITHOUT_CLASSIFICATION	6.426839269613448E-5	DOCUMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9999210026028996	WITHOUT_CLASSIFICATION	7.899739710031134E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.9999163584363531	WITHOUT_CLASSIFICATION	8.364156364696038E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9999969637817787	WITHOUT_CLASSIFICATION	3.036218221331337E-6	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.999998068872231	WITHOUT_CLASSIFICATION	1.9311277690069273E-6	DOCUMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9999668417582943	WITHOUT_CLASSIFICATION	3.315824170563949E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999774279590342	WITHOUT_CLASSIFICATION	2.25720409657306E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999832921100386	WITHOUT_CLASSIFICATION	1.6707889961469897E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999984243733048	WITHOUT_CLASSIFICATION	1.5756266951617077E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999984261975328	WITHOUT_CLASSIFICATION	1.5738024672219375E-6	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.999995586483528	WITHOUT_CLASSIFICATION	4.413516471914502E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999975324372199	WITHOUT_CLASSIFICATION	2.4675627800782027E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.999927764617262	WITHOUT_CLASSIFICATION	7.223538273804619E-5	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.999927764617262	WITHOUT_CLASSIFICATION	7.223538273804619E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9998422393879144	WITHOUT_CLASSIFICATION	1.5776061208563216E-4	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9998422393879144	WITHOUT_CLASSIFICATION	1.5776061208563216E-4	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999757502887763	WITHOUT_CLASSIFICATION	2.424971122372554E-5	DOCUMENTATION
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9999824661248351	WITHOUT_CLASSIFICATION	1.7533875164891287E-5	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999816087425676	WITHOUT_CLASSIFICATION	1.839125743236982E-5	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999462701550635	WITHOUT_CLASSIFICATION	5.3729844936442054E-5	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999893731506672	WITHOUT_CLASSIFICATION	1.0626849332869481E-5	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999816087425676	WITHOUT_CLASSIFICATION	1.839125743236982E-5	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999462701550635	WITHOUT_CLASSIFICATION	5.3729844936442054E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999828756851632	WITHOUT_CLASSIFICATION	1.7124314836761558E-5	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.9999897235433581	WITHOUT_CLASSIFICATION	1.0276456641905207E-5	DOCUMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.999991604819398	WITHOUT_CLASSIFICATION	8.395180602016718E-6	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999853845034663	WITHOUT_CLASSIFICATION	1.4615496533786087E-5	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9999964631635819	WITHOUT_CLASSIFICATION	3.5368364181432586E-6	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.9999944064812633	WITHOUT_CLASSIFICATION	5.593518736718062E-6	DOCUMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999941375635477	WITHOUT_CLASSIFICATION	5.8624364522718684E-6	DOCUMENTATION
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9999694250913541	WITHOUT_CLASSIFICATION	3.0574908645836154E-5	DOCUMENTATION
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999882910095607	WITHOUT_CLASSIFICATION	1.1708990439357994E-5	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999988497176945	WITHOUT_CLASSIFICATION	1.150282305538408E-6	DOCUMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.9999973895086359	WITHOUT_CLASSIFICATION	2.6104913640286207E-6	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999992925399688	WITHOUT_CLASSIFICATION	7.074600313428425E-7	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.999998133618608	WITHOUT_CLASSIFICATION	1.8663813920724104E-6	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9999822952982454	WITHOUT_CLASSIFICATION	1.770470175450663E-5	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999893731506672	WITHOUT_CLASSIFICATION	1.0626849332869481E-5	DOCUMENTATION
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9999832632161704	WITHOUT_CLASSIFICATION	1.6736783829689947E-5	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999346003497607	WITHOUT_CLASSIFICATION	6.539965023936771E-5	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999346003497607	WITHOUT_CLASSIFICATION	6.539965023936771E-5	DOCUMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999992316309851	WITHOUT_CLASSIFICATION	7.683690147255412E-7	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999828756851632	WITHOUT_CLASSIFICATION	1.7124314836761558E-5	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9999939088347883	WITHOUT_CLASSIFICATION	6.091165211594369E-6	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.999999663106682	WITHOUT_CLASSIFICATION	3.3689331798010575E-7	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9999966592430803	WITHOUT_CLASSIFICATION	3.3407569195572007E-6	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999824870562496	WITHOUT_CLASSIFICATION	1.7512943750433943E-5	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999871206857456	WITHOUT_CLASSIFICATION	1.287931425446219E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999828756851632	WITHOUT_CLASSIFICATION	1.7124314836761558E-5	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999824870562496	WITHOUT_CLASSIFICATION	1.7512943750433943E-5	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.9999871206857456	WITHOUT_CLASSIFICATION	1.287931425446219E-5	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.9999625587708316	WITHOUT_CLASSIFICATION	3.744122916832032E-5	DOCUMENTATION
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999648660977969	WITHOUT_CLASSIFICATION	3.513390220315736E-5	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999927052291223	WITHOUT_CLASSIFICATION	7.294770877658525E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999828756851632	WITHOUT_CLASSIFICATION	1.7124314836761558E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999828756851632	WITHOUT_CLASSIFICATION	1.7124314836761558E-5	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.9999480639671307	WITHOUT_CLASSIFICATION	5.193603286940153E-5	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999780493283325	WITHOUT_CLASSIFICATION	2.1950671667627968E-5	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9999507224087668	WITHOUT_CLASSIFICATION	4.927759123306568E-5	DOCUMENTATION
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999925099346699	WITHOUT_CLASSIFICATION	7.490065330154313E-6	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999652217779992	WITHOUT_CLASSIFICATION	3.477822200089508E-5	DOCUMENTATION
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999973370614211	WITHOUT_CLASSIFICATION	2.6629385787652565E-6	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999990082820274	WITHOUT_CLASSIFICATION	9.91717972556197E-7	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999957192346798	WITHOUT_CLASSIFICATION	4.280765320127202E-6	DOCUMENTATION
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999981199419133	WITHOUT_CLASSIFICATION	1.880058086607416E-6	DOCUMENTATION
// then bind it	WITHOUT_CLASSIFICATION	0.9999817767572274	WITHOUT_CLASSIFICATION	1.822324277265502E-5	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999966450986469	WITHOUT_CLASSIFICATION	3.354901353118955E-6	DOCUMENTATION
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9999974609234082	WITHOUT_CLASSIFICATION	2.5390765917364315E-6	DOCUMENTATION
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.9999994886963524	WITHOUT_CLASSIFICATION	5.113036476666889E-7	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9999974916713653	WITHOUT_CLASSIFICATION	2.5083286347116933E-6	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999994684846725	WITHOUT_CLASSIFICATION	5.315153274957236E-6	DOCUMENTATION
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999983590241712	WITHOUT_CLASSIFICATION	1.6409758287289329E-6	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999589109832402	WITHOUT_CLASSIFICATION	4.108901675968964E-5	DOCUMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9999494008655764	WITHOUT_CLASSIFICATION	5.059913442365404E-5	DOCUMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9999325019363436	WITHOUT_CLASSIFICATION	6.74980636563682E-5	DOCUMENTATION
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9999945373712719	WITHOUT_CLASSIFICATION	5.4626287280561685E-6	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9999571369521371	WITHOUT_CLASSIFICATION	4.286304786287796E-5	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9997159473209956	WITHOUT_CLASSIFICATION	2.8405267900447783E-4	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9997159473209956	WITHOUT_CLASSIFICATION	2.8405267900447783E-4	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999589109832402	WITHOUT_CLASSIFICATION	4.108901675968964E-5	DOCUMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9999967895547445	WITHOUT_CLASSIFICATION	3.210445255618882E-6	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999966808229347	WITHOUT_CLASSIFICATION	3.3191770652402127E-6	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9999655450949199	WITHOUT_CLASSIFICATION	3.445490508016638E-5	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9999515421896922	WITHOUT_CLASSIFICATION	4.8457810307817366E-5	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9984698394265005	WITHOUT_CLASSIFICATION	0.0015301605734995606	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999975116352329	WITHOUT_CLASSIFICATION	2.4883647670453277E-6	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9999980552610798	WITHOUT_CLASSIFICATION	1.944738920112384E-6	DOCUMENTATION
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999968172440392	WITHOUT_CLASSIFICATION	3.182755960829419E-6	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999995951314964	WITHOUT_CLASSIFICATION	4.0486850361927116E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950628731977	WITHOUT_CLASSIFICATION	4.937126802284749E-6	DOCUMENTATION
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9999969215609398	WITHOUT_CLASSIFICATION	3.0784390602092936E-6	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999939707307157	WITHOUT_CLASSIFICATION	6.029269284192051E-6	DOCUMENTATION
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999962607061036	WITHOUT_CLASSIFICATION	3.739293896292004E-6	DOCUMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9998759730321063	WITHOUT_CLASSIFICATION	1.2402696789374048E-4	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999984902396079	WITHOUT_CLASSIFICATION	1.509760392216188E-6	DOCUMENTATION
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998948643218	WITHOUT_CLASSIFICATION	1.0513567820342423E-6	DOCUMENTATION
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9999868194747557	WITHOUT_CLASSIFICATION	1.318052524432088E-5	DOCUMENTATION
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.999998890889373	WITHOUT_CLASSIFICATION	1.1091106270051534E-6	DOCUMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.99996424048379	WITHOUT_CLASSIFICATION	3.575951620992935E-5	DOCUMENTATION
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999935858577582	WITHOUT_CLASSIFICATION	6.414142241785381E-6	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.999997877276897	WITHOUT_CLASSIFICATION	2.122723102931322E-6	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9999963485415845	WITHOUT_CLASSIFICATION	3.6514584154574763E-6	DOCUMENTATION
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999992700541497	WITHOUT_CLASSIFICATION	7.299458503414023E-7	DOCUMENTATION
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999919263797826	WITHOUT_CLASSIFICATION	8.073620217367468E-6	DOCUMENTATION
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999900657808983	WITHOUT_CLASSIFICATION	9.934219101613184E-6	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999648887856809	WITHOUT_CLASSIFICATION	3.511121431906571E-5	DOCUMENTATION
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999913330528427	WITHOUT_CLASSIFICATION	8.66694715730982E-6	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999356196481919	WITHOUT_CLASSIFICATION	6.438035180807111E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999939723845703	WITHOUT_CLASSIFICATION	6.0276154297061405E-5	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999134378373071	WITHOUT_CLASSIFICATION	8.656216269285724E-5	DOCUMENTATION
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999989428019772	WITHOUT_CLASSIFICATION	1.0571980227969465E-5	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9999920875596573	WITHOUT_CLASSIFICATION	7.912440342628112E-6	DOCUMENTATION
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.999998015578651	WITHOUT_CLASSIFICATION	1.984421349058233E-6	DOCUMENTATION
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999982364380811	WITHOUT_CLASSIFICATION	1.7635619188965474E-5	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999881843235155	WITHOUT_CLASSIFICATION	1.181567648441075E-5	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999861452642167	WITHOUT_CLASSIFICATION	1.3854735783340493E-5	DOCUMENTATION
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999787860891873	WITHOUT_CLASSIFICATION	2.1213910812662127E-5	DOCUMENTATION
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999987326397665	WITHOUT_CLASSIFICATION	1.2673602334984757E-5	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999906533890497	WITHOUT_CLASSIFICATION	9.34661095044141E-6	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999811759202457	WITHOUT_CLASSIFICATION	1.8824079754238103E-5	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999062985929402	WITHOUT_CLASSIFICATION	9.370140705984218E-5	DOCUMENTATION
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999886453409249	WITHOUT_CLASSIFICATION	1.1354659075083043E-5	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999921639293322	WITHOUT_CLASSIFICATION	7.83607066769784E-6	DOCUMENTATION
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9999986451304543	WITHOUT_CLASSIFICATION	1.3548695457030866E-6	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999976619252773	WITHOUT_CLASSIFICATION	2.3380747227290477E-6	DOCUMENTATION
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.9999981553537554	WITHOUT_CLASSIFICATION	1.8446462446234058E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999771823347483	WITHOUT_CLASSIFICATION	2.28176652516978E-5	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.999834540229641	WITHOUT_CLASSIFICATION	1.654597703589214E-4	DOCUMENTATION
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999900635215275	WITHOUT_CLASSIFICATION	9.936478472540996E-6	DOCUMENTATION
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.9999729600468628	WITHOUT_CLASSIFICATION	2.7039953137364156E-5	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9998877346094319	WITHOUT_CLASSIFICATION	1.1226539056817516E-4	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9998860680281474	WITHOUT_CLASSIFICATION	1.1393197185259656E-4	DOCUMENTATION
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9997784267204186	WITHOUT_CLASSIFICATION	2.2157327958136812E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950628731977	WITHOUT_CLASSIFICATION	4.937126802284749E-6	DOCUMENTATION
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9998315922707843	WITHOUT_CLASSIFICATION	1.6840772921557554E-4	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9998805974244208	WITHOUT_CLASSIFICATION	1.1940257557916868E-4	DOCUMENTATION
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9999972827721386	WITHOUT_CLASSIFICATION	2.7172278613780403E-6	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9999964762377226	WITHOUT_CLASSIFICATION	3.523762277494822E-6	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.9999887000926323	WITHOUT_CLASSIFICATION	1.1299907367757885E-5	DOCUMENTATION
// HHH-2300	WITHOUT_CLASSIFICATION	0.9998693958086002	WITHOUT_CLASSIFICATION	1.3060419139970388E-4	DOCUMENTATION
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9999984791963017	WITHOUT_CLASSIFICATION	1.5208036982675067E-6	DOCUMENTATION
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999826809512231	WITHOUT_CLASSIFICATION	1.7319048776863477E-5	DOCUMENTATION
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999764630625727	WITHOUT_CLASSIFICATION	2.353693742733209E-5	DOCUMENTATION
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999765300628422	WITHOUT_CLASSIFICATION	2.3469937157823453E-5	DOCUMENTATION
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999838791785945	WITHOUT_CLASSIFICATION	1.6120821405461716E-5	DOCUMENTATION
// not null is implicit	WITHOUT_CLASSIFICATION	0.9999891391834157	WITHOUT_CLASSIFICATION	1.0860816584238316E-5	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.999999601250225	WITHOUT_CLASSIFICATION	3.9874977488000653E-7	DOCUMENTATION
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.999997493781535	WITHOUT_CLASSIFICATION	2.5062184649535087E-6	DOCUMENTATION
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999965608460064	WITHOUT_CLASSIFICATION	3.439153993584547E-6	DOCUMENTATION
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999951733122572	WITHOUT_CLASSIFICATION	4.8266877428505216E-6	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999975833890566	WITHOUT_CLASSIFICATION	2.4166109432163405E-6	DOCUMENTATION
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.9999990335571403	WITHOUT_CLASSIFICATION	9.664428597523947E-7	DOCUMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.9999958194634901	WITHOUT_CLASSIFICATION	4.180536509825748E-6	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999988982908338	WITHOUT_CLASSIFICATION	1.101709166268232E-6	DOCUMENTATION
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9999987511715771	WITHOUT_CLASSIFICATION	1.2488284228972459E-6	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.9999991963286468	WITHOUT_CLASSIFICATION	8.036713532821521E-7	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9999980117189126	WITHOUT_CLASSIFICATION	1.988281087451045E-6	DOCUMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9999900158506758	WITHOUT_CLASSIFICATION	9.984149324081667E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950628731977	WITHOUT_CLASSIFICATION	4.937126802284749E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999771823347483	WITHOUT_CLASSIFICATION	2.28176652516978E-5	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999993698968297	WITHOUT_CLASSIFICATION	6.301031701994235E-7	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999992991463976	WITHOUT_CLASSIFICATION	7.008536024497417E-7	DOCUMENTATION
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999956562802746	WITHOUT_CLASSIFICATION	4.343719725317365E-6	DOCUMENTATION
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999970403980099	WITHOUT_CLASSIFICATION	2.9596019902544066E-6	DOCUMENTATION
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999955991412784	WITHOUT_CLASSIFICATION	4.400858721569207E-6	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999940657011818	WITHOUT_CLASSIFICATION	5.934298818259304E-6	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9999400631119602	WITHOUT_CLASSIFICATION	5.9936888039859276E-5	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.999995875622647	WITHOUT_CLASSIFICATION	4.1243773529485006E-6	DOCUMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999966071890901	WITHOUT_CLASSIFICATION	3.3928109098973925E-6	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999965920472523	WITHOUT_CLASSIFICATION	3.4079527476022997E-6	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999951014871761	WITHOUT_CLASSIFICATION	4.898512823928498E-6	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999962249299865	WITHOUT_CLASSIFICATION	3.7750700134539665E-6	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999986519651445	WITHOUT_CLASSIFICATION	1.3480348554206331E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950628731977	WITHOUT_CLASSIFICATION	4.937126802284749E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950628731977	WITHOUT_CLASSIFICATION	4.937126802284749E-6	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999956884418846	WITHOUT_CLASSIFICATION	4.311558115398665E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999996127025171	WITHOUT_CLASSIFICATION	3.872974828276505E-7	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999959551921971	WITHOUT_CLASSIFICATION	4.044807802900138E-6	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.99994617131834	WITHOUT_CLASSIFICATION	5.382868166004184E-5	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999981918946398	WITHOUT_CLASSIFICATION	1.8081053603190598E-6	DOCUMENTATION
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999975891360195	WITHOUT_CLASSIFICATION	2.410863980393519E-6	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9999740052866811	WITHOUT_CLASSIFICATION	2.5994713318893084E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950628731977	WITHOUT_CLASSIFICATION	4.937126802284749E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999977195412778	WITHOUT_CLASSIFICATION	2.2804587222162623E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9999833673975773	WITHOUT_CLASSIFICATION	1.6632602422706398E-5	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9999962150965221	WITHOUT_CLASSIFICATION	3.7849034779634735E-6	DOCUMENTATION
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999695848322101	WITHOUT_CLASSIFICATION	3.0415167789919775E-5	DOCUMENTATION
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9999985347630318	WITHOUT_CLASSIFICATION	1.4652369682489714E-6	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999846734814605	WITHOUT_CLASSIFICATION	1.5326518539583144E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9955169675472737	WITHOUT_CLASSIFICATION	0.00448303245272625	DOCUMENTATION
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9999611297212149	WITHOUT_CLASSIFICATION	3.8870278785237915E-5	DOCUMENTATION
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.999952287851998	WITHOUT_CLASSIFICATION	4.7712148001990356E-5	DOCUMENTATION
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999988536128891	WITHOUT_CLASSIFICATION	1.1463871109116302E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999771823347483	WITHOUT_CLASSIFICATION	2.28176652516978E-5	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999972658230913	WITHOUT_CLASSIFICATION	2.7341769087571074E-6	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.999999216769389	WITHOUT_CLASSIFICATION	7.832306110675336E-7	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999978976524545	WITHOUT_CLASSIFICATION	2.1023475454436633E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999771823347483	WITHOUT_CLASSIFICATION	2.28176652516978E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999860518117805	WITHOUT_CLASSIFICATION	1.3948188219645579E-5	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999977195412778	WITHOUT_CLASSIFICATION	2.2804587222162623E-6	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.999984158542474	WITHOUT_CLASSIFICATION	1.584145752602256E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950628731977	WITHOUT_CLASSIFICATION	4.937126802284749E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9999851828017013	WITHOUT_CLASSIFICATION	1.4817198298540639E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950628731977	WITHOUT_CLASSIFICATION	4.937126802284749E-6	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999990193885262	WITHOUT_CLASSIFICATION	9.806114738324178E-7	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999965920472523	WITHOUT_CLASSIFICATION	3.4079527476022997E-6	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999951014871761	WITHOUT_CLASSIFICATION	4.898512823928498E-6	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999962249299865	WITHOUT_CLASSIFICATION	3.7750700134539665E-6	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999983745797015	WITHOUT_CLASSIFICATION	1.6254202985558686E-6	DOCUMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.9999929090934976	WITHOUT_CLASSIFICATION	7.090906502384453E-6	DOCUMENTATION
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999904500108998	WITHOUT_CLASSIFICATION	9.54998910018552E-6	DOCUMENTATION
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999977844553859	WITHOUT_CLASSIFICATION	2.2155446140439606E-6	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999994126735554	WITHOUT_CLASSIFICATION	5.873264446561256E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950628731977	WITHOUT_CLASSIFICATION	4.937126802284749E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999771823347483	WITHOUT_CLASSIFICATION	2.28176652516978E-5	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999986519651445	WITHOUT_CLASSIFICATION	1.3480348554206331E-6	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999956884418846	WITHOUT_CLASSIFICATION	4.311558115398665E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999499886732223	WITHOUT_CLASSIFICATION	5.00113267776529E-5	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999945544294562	WITHOUT_CLASSIFICATION	5.445570543861218E-6	DOCUMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999888246267237	WITHOUT_CLASSIFICATION	1.1175373276260386E-5	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9999891311288537	WITHOUT_CLASSIFICATION	1.0868871146374535E-5	DOCUMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9999967585350686	WITHOUT_CLASSIFICATION	3.241464931385725E-6	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9999990518376926	WITHOUT_CLASSIFICATION	9.48162307375524E-7	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999062985929402	WITHOUT_CLASSIFICATION	9.370140705984218E-5	DOCUMENTATION
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999973294374064	WITHOUT_CLASSIFICATION	2.6705625937001448E-6	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.9999967247590171	WITHOUT_CLASSIFICATION	3.275240982859235E-6	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9999879810474837	WITHOUT_CLASSIFICATION	1.2018952516347697E-5	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999993137801849	WITHOUT_CLASSIFICATION	6.862198151485346E-7	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999960039975674	WITHOUT_CLASSIFICATION	3.996002432656965E-6	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999356196481919	WITHOUT_CLASSIFICATION	6.438035180807111E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999939723845703	WITHOUT_CLASSIFICATION	6.0276154297061405E-5	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999881843235155	WITHOUT_CLASSIFICATION	1.181567648441075E-5	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999960039975674	WITHOUT_CLASSIFICATION	3.996002432656965E-6	DOCUMENTATION
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999965974130638	WITHOUT_CLASSIFICATION	3.402586936267028E-6	DOCUMENTATION
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999973390102016	WITHOUT_CLASSIFICATION	2.660989798427849E-6	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999926638564135	WITHOUT_CLASSIFICATION	7.336143586475337E-6	DOCUMENTATION
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999962267107522	WITHOUT_CLASSIFICATION	3.773289247804638E-5	DOCUMENTATION
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999987616459729	WITHOUT_CLASSIFICATION	1.2383540271599938E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950628731977	WITHOUT_CLASSIFICATION	4.937126802284749E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950628731977	WITHOUT_CLASSIFICATION	4.937126802284749E-6	DOCUMENTATION
/*<String>*/	WITHOUT_CLASSIFICATION	0.9997523403752917	WITHOUT_CLASSIFICATION	2.476596247083874E-4	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999861452642167	WITHOUT_CLASSIFICATION	1.3854735783340493E-5	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999906533890497	WITHOUT_CLASSIFICATION	9.34661095044141E-6	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999988982908338	WITHOUT_CLASSIFICATION	1.101709166268232E-6	DOCUMENTATION
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9999960106922043	WITHOUT_CLASSIFICATION	3.989307795662146E-6	DOCUMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999990667308943	WITHOUT_CLASSIFICATION	9.332691056829914E-7	DOCUMENTATION
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999969741625746	WITHOUT_CLASSIFICATION	3.0258374253573217E-6	DOCUMENTATION
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999972854842986	WITHOUT_CLASSIFICATION	2.7145157014413106E-6	DOCUMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999993141233493	WITHOUT_CLASSIFICATION	6.858766505784797E-7	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9999833214255957	WITHOUT_CLASSIFICATION	1.6678574404330583E-5	DOCUMENTATION
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9999835671332182	WITHOUT_CLASSIFICATION	1.6432866781774354E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996951543319008	WITHOUT_CLASSIFICATION	3.048456680991314E-4	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999995951314964	WITHOUT_CLASSIFICATION	4.0486850361927116E-7	DOCUMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999884261672104	WITHOUT_CLASSIFICATION	1.1573832789591979E-5	DOCUMENTATION
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999986672343064	WITHOUT_CLASSIFICATION	1.3327656936036996E-6	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999971262839991	WITHOUT_CLASSIFICATION	2.8737160008518425E-6	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999927092234621	WITHOUT_CLASSIFICATION	7.2907765379632565E-6	DOCUMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.999999090313989	WITHOUT_CLASSIFICATION	9.096860109029742E-7	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9999495421304088	WITHOUT_CLASSIFICATION	5.045786959120541E-5	DOCUMENTATION
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972069676539	WITHOUT_CLASSIFICATION	2.793032346066123E-6	DOCUMENTATION
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976361253622	WITHOUT_CLASSIFICATION	2.3638746378278635E-6	DOCUMENTATION
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999975594900973	WITHOUT_CLASSIFICATION	2.44050990265532E-6	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.999993032596339	WITHOUT_CLASSIFICATION	6.96740366103878E-6	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9999616594197039	WITHOUT_CLASSIFICATION	3.834058029603837E-5	DOCUMENTATION
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999986439688934	WITHOUT_CLASSIFICATION	1.3560311066405877E-6	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999989359762305	WITHOUT_CLASSIFICATION	1.0640237694639238E-6	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999983141689278	WITHOUT_CLASSIFICATION	1.685831072127293E-6	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999986524532626	WITHOUT_CLASSIFICATION	1.347546737455436E-6	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9999941076315786	WITHOUT_CLASSIFICATION	5.89236842139721E-6	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999899453179245	WITHOUT_CLASSIFICATION	1.0054682075560107E-5	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999985185265641	WITHOUT_CLASSIFICATION	1.4814734359459935E-6	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.999962042504366	WITHOUT_CLASSIFICATION	3.795749563402324E-5	DOCUMENTATION
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999985935050845	WITHOUT_CLASSIFICATION	1.4064949155360243E-6	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999965529277697	WITHOUT_CLASSIFICATION	3.447072230400033E-6	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999977779003809	WITHOUT_CLASSIFICATION	2.222099619117343E-6	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999979350361621	WITHOUT_CLASSIFICATION	2.0649638379737467E-6	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999979449054576	WITHOUT_CLASSIFICATION	2.055094542420109E-6	DOCUMENTATION
// continue loop	WITHOUT_CLASSIFICATION	0.9999927493432808	WITHOUT_CLASSIFICATION	7.2506567192306455E-6	DOCUMENTATION
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9999666743892318	WITHOUT_CLASSIFICATION	3.332561076807366E-5	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9999614658290203	WITHOUT_CLASSIFICATION	3.853417097968558E-5	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999977920022489	WITHOUT_CLASSIFICATION	2.207997751089323E-6	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.99999932136826	WITHOUT_CLASSIFICATION	6.786317400156956E-7	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9999882716608999	WITHOUT_CLASSIFICATION	1.1728339100173605E-5	DOCUMENTATION
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999978610751672	WITHOUT_CLASSIFICATION	2.1389248329380228E-6	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9999982694920128	WITHOUT_CLASSIFICATION	1.7305079872119518E-6	DOCUMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9999943900350531	WITHOUT_CLASSIFICATION	5.6099649470300575E-6	DOCUMENTATION
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999993981483019	WITHOUT_CLASSIFICATION	6.018516980850355E-7	DOCUMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999989459015072	WITHOUT_CLASSIFICATION	1.0540984928976603E-6	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999977289596005	WITHOUT_CLASSIFICATION	2.2710403995612094E-6	DOCUMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999989510898241	WITHOUT_CLASSIFICATION	1.048910175877244E-6	DOCUMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999962635744714	WITHOUT_CLASSIFICATION	3.7364255287431674E-6	DOCUMENTATION
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999947193922314	WITHOUT_CLASSIFICATION	5.2806077685407764E-6	DOCUMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999991474122959	WITHOUT_CLASSIFICATION	8.525877040494356E-7	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.999999557393131	WITHOUT_CLASSIFICATION	4.42606868963879E-7	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.9999669974532577	WITHOUT_CLASSIFICATION	3.300254674239145E-5	DOCUMENTATION
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9999851168641295	WITHOUT_CLASSIFICATION	1.48831358704692E-5	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999906728316933	WITHOUT_CLASSIFICATION	9.327168306628551E-6	DOCUMENTATION
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9999925170018596	WITHOUT_CLASSIFICATION	7.482998140413054E-6	DOCUMENTATION
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9999933823408783	WITHOUT_CLASSIFICATION	6.617659121718804E-6	DOCUMENTATION
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999946735083213	WITHOUT_CLASSIFICATION	5.3264916787776095E-6	DOCUMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999981781289677	WITHOUT_CLASSIFICATION	1.821871032224542E-6	DOCUMENTATION
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.999989032722568	WITHOUT_CLASSIFICATION	1.0967277432118255E-5	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9999979271793014	WITHOUT_CLASSIFICATION	2.0728206986071526E-6	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999988941043841	WITHOUT_CLASSIFICATION	1.105895615861201E-6	DOCUMENTATION
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999989301863005	WITHOUT_CLASSIFICATION	1.0698136994995863E-6	DOCUMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999929268460327	WITHOUT_CLASSIFICATION	7.073153967348084E-6	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999981531282963	WITHOUT_CLASSIFICATION	1.8468717036597586E-6	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999995357926995	WITHOUT_CLASSIFICATION	4.642073004391862E-7	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.9999993605177968	WITHOUT_CLASSIFICATION	6.394822031288761E-7	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9999918619011172	WITHOUT_CLASSIFICATION	8.138098882764424E-6	DOCUMENTATION
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999962434260543	WITHOUT_CLASSIFICATION	3.7565739457964303E-6	DOCUMENTATION
//unwrap the object	WITHOUT_CLASSIFICATION	0.9999602139573736	WITHOUT_CLASSIFICATION	3.9786042626380156E-5	DOCUMENTATION
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999848678589596	WITHOUT_CLASSIFICATION	1.5132141040441674E-5	DOCUMENTATION
//return the proxied object	WITHOUT_CLASSIFICATION	0.99996224567105	WITHOUT_CLASSIFICATION	3.7754328950034805E-5	DOCUMENTATION
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999281089930282	WITHOUT_CLASSIFICATION	7.189100697169688E-5	DOCUMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.9999882254579228	WITHOUT_CLASSIFICATION	1.1774542077247638E-5	DOCUMENTATION
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999963196850078	WITHOUT_CLASSIFICATION	3.6803149922516445E-6	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.9999893403870139	WITHOUT_CLASSIFICATION	1.0659612986120026E-5	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9999942341176525	WITHOUT_CLASSIFICATION	5.765882347463967E-6	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.9999938002554017	WITHOUT_CLASSIFICATION	6.199744598264446E-6	DOCUMENTATION
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999795205973856	WITHOUT_CLASSIFICATION	2.0479402614409797E-5	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.9999648988124686	WITHOUT_CLASSIFICATION	3.5101187531433993E-5	DOCUMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9999674201899897	WITHOUT_CLASSIFICATION	3.257981001027362E-5	DOCUMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999964945369251	WITHOUT_CLASSIFICATION	3.5054630750169404E-6	DOCUMENTATION
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999945067858436	WITHOUT_CLASSIFICATION	5.49321415652844E-6	DOCUMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.9999844220254562	WITHOUT_CLASSIFICATION	1.557797454378962E-5	DOCUMENTATION
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999989905137355	WITHOUT_CLASSIFICATION	1.009486264467435E-6	DOCUMENTATION
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.9999952933168006	WITHOUT_CLASSIFICATION	4.706683199427451E-6	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.9997887475903837	WITHOUT_CLASSIFICATION	2.1125240961633514E-4	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9999862363209195	WITHOUT_CLASSIFICATION	1.3763679080473335E-5	DOCUMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9999885755186051	WITHOUT_CLASSIFICATION	1.1424481394837973E-5	DOCUMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999926202593109	WITHOUT_CLASSIFICATION	7.379740689039661E-6	DOCUMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999557764198783	WITHOUT_CLASSIFICATION	4.422358012162382E-5	DOCUMENTATION
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9999226389705449	WITHOUT_CLASSIFICATION	7.736102945508451E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999818782753389	WITHOUT_CLASSIFICATION	1.812172466111917E-5	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9999969099425253	WITHOUT_CLASSIFICATION	3.0900574747080835E-6	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9999713806955212	WITHOUT_CLASSIFICATION	2.8619304478943613E-5	DOCUMENTATION
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9998713575958698	WITHOUT_CLASSIFICATION	1.2864240413024025E-4	DOCUMENTATION
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9999283153365701	WITHOUT_CLASSIFICATION	7.168466342987678E-5	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999467875913707	WITHOUT_CLASSIFICATION	5.321240862924016E-5	DOCUMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9999366500530028	WITHOUT_CLASSIFICATION	6.334994699718761E-5	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999709293238754	WITHOUT_CLASSIFICATION	2.9070676124512885E-5	DOCUMENTATION
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999961538456382	WITHOUT_CLASSIFICATION	3.846154361775047E-6	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999716531563394	WITHOUT_CLASSIFICATION	2.8346843660557108E-5	DOCUMENTATION
// We've been here before	WITHOUT_CLASSIFICATION	0.9999363218025844	WITHOUT_CLASSIFICATION	6.36781974156141E-5	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.999978363790875	WITHOUT_CLASSIFICATION	2.163620912499884E-5	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999716531563394	WITHOUT_CLASSIFICATION	2.8346843660557108E-5	DOCUMENTATION
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999973449234938	WITHOUT_CLASSIFICATION	2.655076506173826E-6	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999941217128896	WITHOUT_CLASSIFICATION	5.878287110434083E-6	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9999947075688266	WITHOUT_CLASSIFICATION	5.292431173460277E-6	DOCUMENTATION
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.999992000041636	WITHOUT_CLASSIFICATION	7.999958364014077E-6	DOCUMENTATION
// force initialize!	WITHOUT_CLASSIFICATION	0.9999961741240007	WITHOUT_CLASSIFICATION	3.82587599937007E-6	DOCUMENTATION
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999932963329694	WITHOUT_CLASSIFICATION	6.703667030649578E-6	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9995072007022788	WITHOUT_CLASSIFICATION	4.927992977210994E-4	DOCUMENTATION
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999945224427768	WITHOUT_CLASSIFICATION	5.4775572232116085E-6	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999987947273664	WITHOUT_CLASSIFICATION	1.2052726336066688E-6	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9998772366450467	WITHOUT_CLASSIFICATION	1.2276335495328903E-4	DOCUMENTATION
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999727833488121	WITHOUT_CLASSIFICATION	2.7216651187859987E-5	DOCUMENTATION
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999911284891959	WITHOUT_CLASSIFICATION	8.87151080409781E-6	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9999983578440294	WITHOUT_CLASSIFICATION	1.6421559707432181E-6	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999986762125911	WITHOUT_CLASSIFICATION	1.323787408856337E-6	DOCUMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.999998515447005	WITHOUT_CLASSIFICATION	1.4845529950409278E-6	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9999837555652522	WITHOUT_CLASSIFICATION	1.624443474785525E-5	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9998908960458797	WITHOUT_CLASSIFICATION	1.0910395412036724E-4	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.9998908960458797	WITHOUT_CLASSIFICATION	1.0910395412036724E-4	DOCUMENTATION
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999982512242723	WITHOUT_CLASSIFICATION	1.7487757276696355E-6	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.99970888725418	WITHOUT_CLASSIFICATION	2.911127458200353E-4	DOCUMENTATION
//optimization //optimization	WITHOUT_CLASSIFICATION	0.9998465086320876	WITHOUT_CLASSIFICATION	1.534913679125525E-4	DOCUMENTATION
//re-snapshot	WITHOUT_CLASSIFICATION	0.9998723117998386	WITHOUT_CLASSIFICATION	1.2768820016135135E-4	DOCUMENTATION
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.999994110759596	WITHOUT_CLASSIFICATION	5.889240403968526E-6	DOCUMENTATION
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9999911704207799	WITHOUT_CLASSIFICATION	8.829579220069726E-6	DOCUMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9999357719927192	WITHOUT_CLASSIFICATION	6.422800728079428E-5	DOCUMENTATION
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999982910953925	WITHOUT_CLASSIFICATION	1.708904607438994E-6	DOCUMENTATION
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999903961203802	WITHOUT_CLASSIFICATION	9.603879619697323E-6	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999965972948855	WITHOUT_CLASSIFICATION	3.402705114429807E-6	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.999998751746641	WITHOUT_CLASSIFICATION	1.248253358996045E-6	DOCUMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999949354017788	WITHOUT_CLASSIFICATION	5.064598221242612E-6	DOCUMENTATION
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9999805835473593	WITHOUT_CLASSIFICATION	1.941645264069351E-5	DOCUMENTATION
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9999890467813749	WITHOUT_CLASSIFICATION	1.0953218625154144E-5	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999820617274879	WITHOUT_CLASSIFICATION	1.7938272512014904E-5	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9999495421304088	WITHOUT_CLASSIFICATION	5.045786959120541E-5	DOCUMENTATION
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9999810891899106	WITHOUT_CLASSIFICATION	1.8910810089404113E-5	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999957358661689	WITHOUT_CLASSIFICATION	4.264133831130873E-6	DOCUMENTATION
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9999783453871149	WITHOUT_CLASSIFICATION	2.1654612885001745E-5	DOCUMENTATION
//do the test	WITHOUT_CLASSIFICATION	0.9999028780059486	WITHOUT_CLASSIFICATION	9.712199405144005E-5	DOCUMENTATION
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999982228366475	WITHOUT_CLASSIFICATION	1.7771633525809595E-6	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9998821410469321	WITHOUT_CLASSIFICATION	1.1785895306789225E-4	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999984069262233	WITHOUT_CLASSIFICATION	1.5930737766311278E-6	DOCUMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999990955696604	WITHOUT_CLASSIFICATION	9.044303396656858E-7	DOCUMENTATION
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999972985513556	WITHOUT_CLASSIFICATION	2.701448644375316E-6	DOCUMENTATION
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999969713865328	WITHOUT_CLASSIFICATION	3.0286134671383543E-6	DOCUMENTATION
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999979566962418	WITHOUT_CLASSIFICATION	2.0433037582584906E-6	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.9999976886550105	WITHOUT_CLASSIFICATION	2.3113449894950097E-6	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.999998942885121	WITHOUT_CLASSIFICATION	1.0571148789646778E-6	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9998694488013344	WITHOUT_CLASSIFICATION	1.3055119866556118E-4	DOCUMENTATION
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999806071999365	WITHOUT_CLASSIFICATION	1.9392800063525948E-5	DOCUMENTATION
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9999687971042196	WITHOUT_CLASSIFICATION	3.1202895780422986E-5	DOCUMENTATION
//count++;	WITHOUT_CLASSIFICATION	0.9993231588758323	WITHOUT_CLASSIFICATION	6.768411241676782E-4	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999834520153555	WITHOUT_CLASSIFICATION	1.6547984644437894E-5	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999451833800946	WITHOUT_CLASSIFICATION	5.481661990527485E-5	DOCUMENTATION
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999885023057801	WITHOUT_CLASSIFICATION	1.1497694219952707E-5	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9999760423336769	WITHOUT_CLASSIFICATION	2.3957666323101077E-5	DOCUMENTATION
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.9999671336045164	WITHOUT_CLASSIFICATION	3.28663954835901E-5	DOCUMENTATION
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999974300113451	WITHOUT_CLASSIFICATION	2.569988654889828E-6	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999984009624313	WITHOUT_CLASSIFICATION	1.5990375686511438E-6	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999975291516555	WITHOUT_CLASSIFICATION	2.4708483444643144E-6	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.9999717965203478	WITHOUT_CLASSIFICATION	2.820347965227265E-5	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999955870834905	WITHOUT_CLASSIFICATION	4.412916509549905E-6	DOCUMENTATION
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.999997055472606	WITHOUT_CLASSIFICATION	2.9445273939548205E-6	DOCUMENTATION
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999967338300381	WITHOUT_CLASSIFICATION	3.2661699619410705E-6	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.999998265428896	WITHOUT_CLASSIFICATION	1.7345711039852746E-6	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999794550530876	WITHOUT_CLASSIFICATION	2.054494691238796E-5	DOCUMENTATION
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999997294031087	WITHOUT_CLASSIFICATION	2.7059689130020704E-6	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999960487211698	WITHOUT_CLASSIFICATION	3.951278830178766E-6	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9999994242282544	WITHOUT_CLASSIFICATION	5.75771745664348E-7	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999923367723852	WITHOUT_CLASSIFICATION	7.663227614843329E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996951543319008	WITHOUT_CLASSIFICATION	3.048456680991314E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996951543319008	WITHOUT_CLASSIFICATION	3.048456680991314E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999961823811762	WITHOUT_CLASSIFICATION	3.817618823861922E-6	DOCUMENTATION
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.9999988727586493	WITHOUT_CLASSIFICATION	1.1272413506781662E-6	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999857734992491	WITHOUT_CLASSIFICATION	1.4226500750853523E-5	DOCUMENTATION
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999853510385046	WITHOUT_CLASSIFICATION	1.4648961495464956E-5	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999857734992491	WITHOUT_CLASSIFICATION	1.4226500750853523E-5	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999939235593693	WITHOUT_CLASSIFICATION	6.076440630691601E-6	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.9999886349428561	WITHOUT_CLASSIFICATION	1.1365057144015559E-5	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.9999690278294759	WITHOUT_CLASSIFICATION	3.097217052409426E-5	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999968148941132	WITHOUT_CLASSIFICATION	3.1851058867368625E-6	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999963084378621	WITHOUT_CLASSIFICATION	3.6915621378425607E-6	DOCUMENTATION
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999941079882075	WITHOUT_CLASSIFICATION	5.892011792532112E-6	DOCUMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999954680074599	WITHOUT_CLASSIFICATION	4.531992540111301E-6	DOCUMENTATION
// perform the actual work	WITHOUT_CLASSIFICATION	0.9999870229794341	WITHOUT_CLASSIFICATION	1.2977020565809844E-5	DOCUMENTATION
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999977819961311	WITHOUT_CLASSIFICATION	2.2180038688986078E-6	DOCUMENTATION
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9999992565796663	WITHOUT_CLASSIFICATION	7.434203338242831E-7	DOCUMENTATION
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999965036985471	WITHOUT_CLASSIFICATION	3.4963014529266588E-6	DOCUMENTATION
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9999870032538205	WITHOUT_CLASSIFICATION	1.299674617955692E-5	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999709462090202	WITHOUT_CLASSIFICATION	2.9053790979811412E-5	DOCUMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9999978843521693	WITHOUT_CLASSIFICATION	2.1156478307190808E-6	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.9999980036117404	WITHOUT_CLASSIFICATION	1.996388259490891E-6	DOCUMENTATION
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9999979865997644	WITHOUT_CLASSIFICATION	2.0134002357565535E-6	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9998890934592364	WITHOUT_CLASSIFICATION	1.109065407636015E-4	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9998890934592364	WITHOUT_CLASSIFICATION	1.109065407636015E-4	DOCUMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9999605440277569	WITHOUT_CLASSIFICATION	3.945597224304492E-5	DOCUMENTATION
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999982686221117	WITHOUT_CLASSIFICATION	1.7313778882335229E-6	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.99999933864649	WITHOUT_CLASSIFICATION	6.613535098768778E-7	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999988450214087	WITHOUT_CLASSIFICATION	1.154978591342879E-6	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999994707333211	WITHOUT_CLASSIFICATION	5.292666788885146E-7	DOCUMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999980604653486	WITHOUT_CLASSIFICATION	1.9395346514267473E-6	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9999993219776191	WITHOUT_CLASSIFICATION	6.780223808458403E-7	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999832171171009	WITHOUT_CLASSIFICATION	1.6782882899028846E-5	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.999986286994583	WITHOUT_CLASSIFICATION	1.3713005416966962E-5	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999988969667065	WITHOUT_CLASSIFICATION	1.1030332935220283E-6	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999979472784902	WITHOUT_CLASSIFICATION	2.052721509725405E-6	DOCUMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999990254404533	WITHOUT_CLASSIFICATION	9.745595467847305E-7	DOCUMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999987289392221	WITHOUT_CLASSIFICATION	1.2710607778681238E-6	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999953799750192	WITHOUT_CLASSIFICATION	4.620024980773968E-6	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999931364762918	WITHOUT_CLASSIFICATION	6.863523708030987E-6	DOCUMENTATION
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999989510108063	WITHOUT_CLASSIFICATION	1.0489891936930842E-6	DOCUMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999896270009097	WITHOUT_CLASSIFICATION	1.0372999090388888E-5	DOCUMENTATION
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.9999856113752567	WITHOUT_CLASSIFICATION	1.438862474322386E-5	DOCUMENTATION
//use the current version	WITHOUT_CLASSIFICATION	0.999937441321542	WITHOUT_CLASSIFICATION	6.255867845795561E-5	DOCUMENTATION
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.99999783118668	WITHOUT_CLASSIFICATION	2.16881331997553E-6	DOCUMENTATION
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999841517600042	WITHOUT_CLASSIFICATION	1.584823999584337E-5	DOCUMENTATION
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9999985917465934	WITHOUT_CLASSIFICATION	1.408253406514678E-6	DOCUMENTATION
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9999990866163562	WITHOUT_CLASSIFICATION	9.133836438765133E-7	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999961454851699	WITHOUT_CLASSIFICATION	3.854514830085245E-6	DOCUMENTATION
//even process null collections	WITHOUT_CLASSIFICATION	0.9999761730569796	WITHOUT_CLASSIFICATION	2.3826943020407363E-5	DOCUMENTATION
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999901493669353	WITHOUT_CLASSIFICATION	9.850633064686262E-6	DOCUMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.999993536881958	WITHOUT_CLASSIFICATION	6.4631180420703105E-6	DOCUMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.9999764406882126	WITHOUT_CLASSIFICATION	2.355931178753997E-5	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9997851653564361	WITHOUT_CLASSIFICATION	2.1483464356394694E-4	DOCUMENTATION
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9999640051134512	WITHOUT_CLASSIFICATION	3.59948865487508E-5	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999757814027929	WITHOUT_CLASSIFICATION	2.4218597207194624E-5	DOCUMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999915151220901	WITHOUT_CLASSIFICATION	8.484877909901743E-6	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.999969322243634	WITHOUT_CLASSIFICATION	3.0677756365921316E-5	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9999897727137297	WITHOUT_CLASSIFICATION	1.0227286270350179E-5	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999250781397689	WITHOUT_CLASSIFICATION	7.492186023104185E-5	DOCUMENTATION
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999968025982915	WITHOUT_CLASSIFICATION	3.197401708489802E-6	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.999994742725228	WITHOUT_CLASSIFICATION	5.257274771979119E-6	DOCUMENTATION
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9999967443410658	WITHOUT_CLASSIFICATION	3.2556589343143105E-6	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.9999982787226587	WITHOUT_CLASSIFICATION	1.7212773412793875E-6	DOCUMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.999982051968999	WITHOUT_CLASSIFICATION	1.794803100107735E-5	DOCUMENTATION
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999969689045097	WITHOUT_CLASSIFICATION	3.0310954902998857E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999954893440227	WITHOUT_CLASSIFICATION	4.5106559771886145E-6	DOCUMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.9999461865283938	WITHOUT_CLASSIFICATION	5.381347160605899E-5	DOCUMENTATION
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9999784779123158	WITHOUT_CLASSIFICATION	2.1522087684217626E-5	DOCUMENTATION
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999990501500483	WITHOUT_CLASSIFICATION	9.498499518438899E-7	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9999995179594039	WITHOUT_CLASSIFICATION	4.820405962074099E-7	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.9999957573611502	WITHOUT_CLASSIFICATION	4.242638849779851E-6	DOCUMENTATION
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999983864456499	WITHOUT_CLASSIFICATION	1.6135543501550537E-6	DOCUMENTATION
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999976255212317	WITHOUT_CLASSIFICATION	2.374478768242128E-6	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9999993608481974	WITHOUT_CLASSIFICATION	6.391518026324717E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999934355397933	WITHOUT_CLASSIFICATION	6.564460206774628E-6	DOCUMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999947750887054	WITHOUT_CLASSIFICATION	5.224911294623358E-6	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999930271859929	WITHOUT_CLASSIFICATION	6.972814007144855E-6	DOCUMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9999493081479608	WITHOUT_CLASSIFICATION	5.069185203927632E-5	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999244489215945	WITHOUT_CLASSIFICATION	7.555107840549773E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999860518117805	WITHOUT_CLASSIFICATION	1.3948188219645579E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999860518117805	WITHOUT_CLASSIFICATION	1.3948188219645579E-5	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.999999543873436	WITHOUT_CLASSIFICATION	4.561265640017619E-7	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9998773912185466	WITHOUT_CLASSIFICATION	1.226087814533765E-4	DOCUMENTATION
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999742794503768	WITHOUT_CLASSIFICATION	2.572054962328477E-5	DOCUMENTATION
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999992879702014	WITHOUT_CLASSIFICATION	7.120297985947696E-7	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999978700712051	WITHOUT_CLASSIFICATION	2.1299287948540046E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999988961868831	WITHOUT_CLASSIFICATION	1.1038131168977995E-6	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999964347344389	WITHOUT_CLASSIFICATION	3.565265561097719E-6	DOCUMENTATION
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999985539068327	WITHOUT_CLASSIFICATION	1.4460931673453784E-6	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9999965643863513	WITHOUT_CLASSIFICATION	3.435613648742547E-6	DOCUMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999967098851271	WITHOUT_CLASSIFICATION	3.2901148729740568E-6	DOCUMENTATION
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999879715761728	WITHOUT_CLASSIFICATION	1.2028423827306046E-5	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9999556433765521	WITHOUT_CLASSIFICATION	4.4356623447884606E-5	DOCUMENTATION
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9994738617039025	WITHOUT_CLASSIFICATION	5.261382960974969E-4	DOCUMENTATION
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999963161844206	WITHOUT_CLASSIFICATION	3.6838155792505634E-6	DOCUMENTATION
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999967622577776	WITHOUT_CLASSIFICATION	3.2377422224902576E-6	DOCUMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999990622376719	WITHOUT_CLASSIFICATION	9.377623281725944E-7	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999990099587254	WITHOUT_CLASSIFICATION	9.900412746303804E-7	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.9997007841033243	WITHOUT_CLASSIFICATION	2.9921589667575196E-4	DOCUMENTATION
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999287286656049	WITHOUT_CLASSIFICATION	7.127133439505639E-5	DOCUMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999705849642737	WITHOUT_CLASSIFICATION	2.9415035726284573E-5	DOCUMENTATION
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999952238167118	WITHOUT_CLASSIFICATION	4.776183288230467E-6	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9999362222489264	WITHOUT_CLASSIFICATION	6.377775107357846E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9993642691721747	WITHOUT_CLASSIFICATION	6.357308278253474E-4	DOCUMENTATION
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999987488147254	WITHOUT_CLASSIFICATION	1.251185274600446E-6	DOCUMENTATION
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.9999986141625974	WITHOUT_CLASSIFICATION	1.385837402564491E-6	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9999980648110187	WITHOUT_CLASSIFICATION	1.9351889812989716E-6	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9999912953069753	WITHOUT_CLASSIFICATION	8.704693024788423E-6	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9992298349858226	WITHOUT_CLASSIFICATION	7.701650141774144E-4	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999945000144282	WITHOUT_CLASSIFICATION	5.4999855717017475E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9993642691721747	WITHOUT_CLASSIFICATION	6.357308278253474E-4	DOCUMENTATION
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9999982112338016	WITHOUT_CLASSIFICATION	1.788766198374064E-6	DOCUMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9999940603939685	WITHOUT_CLASSIFICATION	5.939606031476816E-6	DOCUMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.9980771237423797	WITHOUT_CLASSIFICATION	0.0019228762576202602	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999235430363345	WITHOUT_CLASSIFICATION	7.645696366558362E-5	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999995581936785	WITHOUT_CLASSIFICATION	4.4180632152232377E-7	DOCUMENTATION
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999971345483314	WITHOUT_CLASSIFICATION	2.865451668683501E-6	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.9999977989052451	WITHOUT_CLASSIFICATION	2.201094754996138E-6	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999990583258157	WITHOUT_CLASSIFICATION	9.41674184214261E-7	DOCUMENTATION
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.999996740143455	WITHOUT_CLASSIFICATION	3.2598565450607896E-6	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999235430363345	WITHOUT_CLASSIFICATION	7.645696366558362E-5	DOCUMENTATION
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999954245968141	WITHOUT_CLASSIFICATION	4.5754031859224336E-6	DOCUMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999990929854933	WITHOUT_CLASSIFICATION	9.07014506654936E-7	DOCUMENTATION
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999953506353209	WITHOUT_CLASSIFICATION	4.649364679160127E-6	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9993429763201908	WITHOUT_CLASSIFICATION	6.57023679809263E-4	DOCUMENTATION
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9999936161663057	WITHOUT_CLASSIFICATION	6.383833694379063E-6	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999979472784902	WITHOUT_CLASSIFICATION	2.052721509725405E-6	DOCUMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9999815934101312	WITHOUT_CLASSIFICATION	1.8406589868829833E-5	DOCUMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.9999792545899396	WITHOUT_CLASSIFICATION	2.074541006027957E-5	DOCUMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999912525447341	WITHOUT_CLASSIFICATION	8.74745526581997E-6	DOCUMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.999997331645694	WITHOUT_CLASSIFICATION	2.6683543058730177E-6	DOCUMENTATION
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999770772620546	WITHOUT_CLASSIFICATION	2.292273794539031E-5	DOCUMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999901364648951	WITHOUT_CLASSIFICATION	9.863535105035498E-6	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9999925426557832	WITHOUT_CLASSIFICATION	7.457344216862627E-6	DOCUMENTATION
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999896733891439	WITHOUT_CLASSIFICATION	1.0326610856166498E-5	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9998857365269986	WITHOUT_CLASSIFICATION	1.1426347300132555E-4	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999930495857356	WITHOUT_CLASSIFICATION	6.950414264318262E-6	DOCUMENTATION
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9994661346440253	WITHOUT_CLASSIFICATION	5.338653559747302E-4	DOCUMENTATION
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.999999332242978	WITHOUT_CLASSIFICATION	6.677570220038096E-7	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999985518891383	WITHOUT_CLASSIFICATION	1.448110861728321E-6	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999797187984767	WITHOUT_CLASSIFICATION	2.028120152336123E-5	DOCUMENTATION
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999987784090653	WITHOUT_CLASSIFICATION	1.2215909347621586E-6	DOCUMENTATION
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999938529976138	WITHOUT_CLASSIFICATION	6.1470023861736466E-6	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999989623172276	WITHOUT_CLASSIFICATION	1.0376827724197565E-6	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999938901996752	WITHOUT_CLASSIFICATION	6.10980032489468E-6	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999898303840292	WITHOUT_CLASSIFICATION	1.0169615970802597E-5	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9999742401956391	WITHOUT_CLASSIFICATION	2.575980436094653E-5	DOCUMENTATION
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.9999236511936955	WITHOUT_CLASSIFICATION	7.634880630442429E-5	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999988331832309	WITHOUT_CLASSIFICATION	1.1668167690613107E-6	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9999934102353365	WITHOUT_CLASSIFICATION	6.589764663532408E-6	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.99999871803891	WITHOUT_CLASSIFICATION	1.2819610899498881E-6	DOCUMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999789911864901	WITHOUT_CLASSIFICATION	2.100881350987979E-5	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.9999838013975981	WITHOUT_CLASSIFICATION	1.619860240189092E-5	DOCUMENTATION
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999883507346233	WITHOUT_CLASSIFICATION	1.164926537658719E-5	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999913228434798	WITHOUT_CLASSIFICATION	8.677156520205788E-6	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999993810279667	WITHOUT_CLASSIFICATION	6.1897203329156865E-6	DOCUMENTATION
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.9999991249650018	WITHOUT_CLASSIFICATION	8.75034998204395E-7	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9999780715941178	WITHOUT_CLASSIFICATION	2.1928405882294833E-5	DOCUMENTATION
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9999982079567641	WITHOUT_CLASSIFICATION	1.79204323586924E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999906995275141	WITHOUT_CLASSIFICATION	9.300472485988322E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999906995275141	WITHOUT_CLASSIFICATION	9.300472485988322E-6	DOCUMENTATION
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999896539609309	WITHOUT_CLASSIFICATION	1.0346039069212279E-5	DOCUMENTATION
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999957715788854	WITHOUT_CLASSIFICATION	4.228421114629896E-6	DOCUMENTATION
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999952374062224	WITHOUT_CLASSIFICATION	4.762593777478723E-6	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999984728046057	WITHOUT_CLASSIFICATION	1.527195394268207E-6	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999983755416632	WITHOUT_CLASSIFICATION	1.6244583368472912E-6	DOCUMENTATION
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999986442579661	WITHOUT_CLASSIFICATION	1.3557420338935106E-6	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.9999963939128614	WITHOUT_CLASSIFICATION	3.6060871385807154E-6	DOCUMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999980601654365	WITHOUT_CLASSIFICATION	1.9398345635531173E-6	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.999996793051881	WITHOUT_CLASSIFICATION	3.2069481189085877E-6	DOCUMENTATION
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999995692373967	WITHOUT_CLASSIFICATION	4.3076260335450186E-7	DOCUMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.9999992830776613	WITHOUT_CLASSIFICATION	7.169223386598493E-7	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999981058058834	WITHOUT_CLASSIFICATION	1.894194116521426E-6	DOCUMENTATION
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999981342435057	WITHOUT_CLASSIFICATION	1.8657564943443E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999906995275141	WITHOUT_CLASSIFICATION	9.300472485988322E-6	DOCUMENTATION
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999991211821178	WITHOUT_CLASSIFICATION	8.788178823245943E-7	DOCUMENTATION
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999956468957301	WITHOUT_CLASSIFICATION	4.353104269864057E-6	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999992831855449	WITHOUT_CLASSIFICATION	7.168144552232766E-7	DOCUMENTATION
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9999975007921674	WITHOUT_CLASSIFICATION	2.4992078324668568E-6	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999931083428502	WITHOUT_CLASSIFICATION	6.8916571497559785E-6	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.999994542311117	WITHOUT_CLASSIFICATION	5.457688883084698E-6	DOCUMENTATION
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999991710931461	WITHOUT_CLASSIFICATION	8.289068538724405E-7	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999976015579463	WITHOUT_CLASSIFICATION	2.398442053682922E-6	DOCUMENTATION
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999979325902395	WITHOUT_CLASSIFICATION	2.0674097604488484E-6	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.999999234013802	WITHOUT_CLASSIFICATION	7.659861979484165E-7	DOCUMENTATION
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9999956480980804	WITHOUT_CLASSIFICATION	4.351901919618899E-6	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999913228434798	WITHOUT_CLASSIFICATION	8.677156520205788E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999906995275141	WITHOUT_CLASSIFICATION	9.300472485988322E-6	DOCUMENTATION
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999964736157421	WITHOUT_CLASSIFICATION	3.526384257962235E-6	DOCUMENTATION
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999875021486742	WITHOUT_CLASSIFICATION	1.2497851325921251E-5	DOCUMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999836087799354	WITHOUT_CLASSIFICATION	1.6391220064522194E-5	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999552238374384	WITHOUT_CLASSIFICATION	4.4776162561564964E-5	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999987933553296	WITHOUT_CLASSIFICATION	1.2066446704412212E-6	DOCUMENTATION
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999967724078122	WITHOUT_CLASSIFICATION	3.227592187915877E-6	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999912330897589	WITHOUT_CLASSIFICATION	8.76691024111149E-6	DOCUMENTATION
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999985475573727	WITHOUT_CLASSIFICATION	1.4524426272852453E-6	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999970832267616	WITHOUT_CLASSIFICATION	2.916773238372832E-6	DOCUMENTATION
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999970858042646	WITHOUT_CLASSIFICATION	2.9141957354073325E-6	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999983858749744	WITHOUT_CLASSIFICATION	1.6141250256231293E-6	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9976536163931664	WITHOUT_CLASSIFICATION	0.0023463836068335644	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999916077604726	WITHOUT_CLASSIFICATION	8.392239527481795E-6	DOCUMENTATION
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999932523955329	WITHOUT_CLASSIFICATION	6.747604467087288E-6	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.9999939235593693	WITHOUT_CLASSIFICATION	6.076440630691601E-6	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999900808586296	WITHOUT_CLASSIFICATION	9.919141370380627E-6	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999976512951553	WITHOUT_CLASSIFICATION	2.348704844748045E-6	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.999996025116029	WITHOUT_CLASSIFICATION	3.974883970959747E-6	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999719119749176	WITHOUT_CLASSIFICATION	2.808802508245074E-5	DOCUMENTATION
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999966996109716	WITHOUT_CLASSIFICATION	3.300389028442343E-6	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.999974786803372	WITHOUT_CLASSIFICATION	2.5213196627928E-5	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.999974786803372	WITHOUT_CLASSIFICATION	2.5213196627928E-5	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9999971584323909	WITHOUT_CLASSIFICATION	2.8415676091348677E-6	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9999994505659725	WITHOUT_CLASSIFICATION	5.494340275623772E-7	DOCUMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.999999514416737	WITHOUT_CLASSIFICATION	4.855832631086128E-7	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9999976656748228	WITHOUT_CLASSIFICATION	2.3343251771468882E-6	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999965123789564	WITHOUT_CLASSIFICATION	3.4876210436218095E-6	DOCUMENTATION
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9999941389966785	WITHOUT_CLASSIFICATION	5.861003321383281E-6	DOCUMENTATION
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9999859285854978	WITHOUT_CLASSIFICATION	1.4071414502229908E-5	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999994028489456	WITHOUT_CLASSIFICATION	5.971510543494274E-7	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999994028489456	WITHOUT_CLASSIFICATION	5.971510543494274E-7	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9999876399286832	WITHOUT_CLASSIFICATION	1.2360071316858838E-5	DOCUMENTATION
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999898406253948	WITHOUT_CLASSIFICATION	1.0159374605248484E-5	DOCUMENTATION
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999975438732706	WITHOUT_CLASSIFICATION	2.4561267295576098E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999940242802894	WITHOUT_CLASSIFICATION	5.9757197105342965E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999940242802894	WITHOUT_CLASSIFICATION	5.9757197105342965E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999940242802894	WITHOUT_CLASSIFICATION	5.9757197105342965E-6	DOCUMENTATION
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9999987609122973	WITHOUT_CLASSIFICATION	1.2390877026557496E-6	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9999984871892821	WITHOUT_CLASSIFICATION	1.5128107180034846E-6	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9999986638394729	WITHOUT_CLASSIFICATION	1.336160527183841E-6	DOCUMENTATION
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9999971792373288	WITHOUT_CLASSIFICATION	2.8207626712145653E-6	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999946312524308	WITHOUT_CLASSIFICATION	5.368747569244937E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999906995275141	WITHOUT_CLASSIFICATION	9.300472485988322E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999906995275141	WITHOUT_CLASSIFICATION	9.300472485988322E-6	DOCUMENTATION
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.999999619267548	WITHOUT_CLASSIFICATION	3.807324520737558E-7	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.9999996544713794	WITHOUT_CLASSIFICATION	3.4552862050916434E-7	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.99999852748331	WITHOUT_CLASSIFICATION	1.4725166900108984E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999968382401255	WITHOUT_CLASSIFICATION	3.1617598744378926E-6	DOCUMENTATION
// igndore it...	WITHOUT_CLASSIFICATION	0.9999881652161758	WITHOUT_CLASSIFICATION	1.1834783824210899E-5	DOCUMENTATION
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999854636051184	WITHOUT_CLASSIFICATION	1.4536394881476733E-5	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9999897174538461	WITHOUT_CLASSIFICATION	1.028254615376201E-5	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.999997516128739	WITHOUT_CLASSIFICATION	2.4838712610092076E-6	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999958975085764	WITHOUT_CLASSIFICATION	4.102491423572123E-6	DOCUMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999939949895329	WITHOUT_CLASSIFICATION	6.005010467192852E-6	DOCUMENTATION
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999816984021158	WITHOUT_CLASSIFICATION	1.8301597884131912E-5	DOCUMENTATION
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9998360687459436	WITHOUT_CLASSIFICATION	1.6393125405648757E-4	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9998360687459436	WITHOUT_CLASSIFICATION	1.6393125405648757E-4	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9998349027924626	WITHOUT_CLASSIFICATION	1.6509720753746208E-4	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9998349027924626	WITHOUT_CLASSIFICATION	1.6509720753746208E-4	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.999841516715047	WITHOUT_CLASSIFICATION	1.584832849530393E-4	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9998400217488809	WITHOUT_CLASSIFICATION	1.5997825111918073E-4	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9998400217488809	WITHOUT_CLASSIFICATION	1.5997825111918073E-4	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9998470188643026	WITHOUT_CLASSIFICATION	1.529811356974142E-4	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9998365934326767	WITHOUT_CLASSIFICATION	1.6340656732321336E-4	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999948897555955	WITHOUT_CLASSIFICATION	5.110244404586933E-6	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.999974786803372	WITHOUT_CLASSIFICATION	2.5213196627928E-5	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999980799665352	WITHOUT_CLASSIFICATION	1.9200334647899265E-6	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9998365934326767	WITHOUT_CLASSIFICATION	1.6340656732321336E-4	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9999943037608788	WITHOUT_CLASSIFICATION	5.696239121123399E-6	DOCUMENTATION
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999864933812874	WITHOUT_CLASSIFICATION	1.3506618712698663E-5	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9997815842302636	WITHOUT_CLASSIFICATION	2.1841576973623958E-4	DOCUMENTATION
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9998315791715229	WITHOUT_CLASSIFICATION	1.6842082847719369E-4	DOCUMENTATION
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999988381129606	WITHOUT_CLASSIFICATION	1.1618870392956604E-6	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.9999916400321807	WITHOUT_CLASSIFICATION	8.359967819242705E-6	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999986575828896	WITHOUT_CLASSIFICATION	1.3424171104130426E-6	DOCUMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.999998742894237	WITHOUT_CLASSIFICATION	1.2571057629988756E-6	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9999879921441136	WITHOUT_CLASSIFICATION	1.2007855886463365E-5	DOCUMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9999994262632523	WITHOUT_CLASSIFICATION	5.7373674773089E-7	DOCUMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.9999976375062953	WITHOUT_CLASSIFICATION	2.362493704655687E-6	DOCUMENTATION
// Set it!	WITHOUT_CLASSIFICATION	0.9999544288915876	WITHOUT_CLASSIFICATION	4.557110841236709E-5	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999787217927532	WITHOUT_CLASSIFICATION	2.1278207246851078E-5	DOCUMENTATION
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999857157559247	WITHOUT_CLASSIFICATION	1.4284244075388624E-5	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9999984866702081	WITHOUT_CLASSIFICATION	1.5133297918844565E-6	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9999956833080864	WITHOUT_CLASSIFICATION	4.316691913632297E-6	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999963979729193	WITHOUT_CLASSIFICATION	3.602027080832015E-6	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999868910373083	WITHOUT_CLASSIFICATION	1.3108962691725579E-5	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.9999868910373083	WITHOUT_CLASSIFICATION	1.3108962691725579E-5	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999955369939131	WITHOUT_CLASSIFICATION	4.463006086937182E-6	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999889683503598	WITHOUT_CLASSIFICATION	1.1031649640278951E-5	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.999996651592688	WITHOUT_CLASSIFICATION	3.348407311995946E-6	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9999936294209215	WITHOUT_CLASSIFICATION	6.370579078399365E-6	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.99999324044656	WITHOUT_CLASSIFICATION	6.75955343995805E-6	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.9999985647548942	WITHOUT_CLASSIFICATION	1.4352451058147458E-6	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9999982562464795	WITHOUT_CLASSIFICATION	1.743753520519165E-6	DOCUMENTATION
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999952116728892	WITHOUT_CLASSIFICATION	4.788327110771389E-6	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999919749711846	WITHOUT_CLASSIFICATION	8.02502881544066E-6	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999985255332965	WITHOUT_CLASSIFICATION	1.4744667035309116E-6	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999964448747456	WITHOUT_CLASSIFICATION	3.5551252544855155E-6	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9976536163931664	WITHOUT_CLASSIFICATION	0.0023463836068335644	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999931956129069	WITHOUT_CLASSIFICATION	6.804387093082344E-6	DOCUMENTATION
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.9999922352618987	WITHOUT_CLASSIFICATION	7.76473810117083E-6	DOCUMENTATION
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999989035020628	WITHOUT_CLASSIFICATION	1.0964979371670476E-6	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999976478842594	WITHOUT_CLASSIFICATION	2.352115740663783E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999964860457399	WITHOUT_CLASSIFICATION	3.5139542601803187E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999964860457399	WITHOUT_CLASSIFICATION	3.5139542601803187E-6	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9999979817780048	WITHOUT_CLASSIFICATION	2.0182219951237785E-6	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9999960760205175	WITHOUT_CLASSIFICATION	3.923979482435767E-6	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9999982063646894	WITHOUT_CLASSIFICATION	1.7936353106791093E-6	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999957482473034	WITHOUT_CLASSIFICATION	4.251752696577603E-6	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9999978920630925	WITHOUT_CLASSIFICATION	2.1079369074251533E-6	DOCUMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999953084041363	WITHOUT_CLASSIFICATION	4.691595863655582E-6	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.9999876364186624	WITHOUT_CLASSIFICATION	1.2363581337660927E-5	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999979197560476	WITHOUT_CLASSIFICATION	2.0802439523892555E-6	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999989606211762	WITHOUT_CLASSIFICATION	1.0393788237462001E-6	DOCUMENTATION
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999987108117212	WITHOUT_CLASSIFICATION	1.2891882788314203E-6	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999991655951416	WITHOUT_CLASSIFICATION	8.344048584933827E-7	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999979197560476	WITHOUT_CLASSIFICATION	2.0802439523892555E-6	DOCUMENTATION
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.9999982874965768	WITHOUT_CLASSIFICATION	1.7125034231163598E-6	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999991947029574	WITHOUT_CLASSIFICATION	8.052970426668437E-7	DOCUMENTATION
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999985959234029	WITHOUT_CLASSIFICATION	1.404076597130391E-6	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999892132058341	WITHOUT_CLASSIFICATION	1.0786794165876226E-5	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999993036704296	WITHOUT_CLASSIFICATION	6.963295704438006E-7	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999968795370988	WITHOUT_CLASSIFICATION	3.120462901328552E-6	DOCUMENTATION
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999924939897731	WITHOUT_CLASSIFICATION	7.5060102269380765E-6	DOCUMENTATION
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999961192386649	WITHOUT_CLASSIFICATION	3.8807613351123735E-6	DOCUMENTATION
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999903972452109	WITHOUT_CLASSIFICATION	9.602754789060142E-6	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999993470072415	WITHOUT_CLASSIFICATION	6.529927584927916E-7	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9999932049362144	WITHOUT_CLASSIFICATION	6.795063785638948E-6	DOCUMENTATION
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999993660521168	WITHOUT_CLASSIFICATION	6.339478832443454E-7	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.9999984390901475	WITHOUT_CLASSIFICATION	1.5609098523988952E-6	DOCUMENTATION
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999980757329049	WITHOUT_CLASSIFICATION	1.92426709508085E-6	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999968925454511	WITHOUT_CLASSIFICATION	3.107454548962528E-6	DOCUMENTATION
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999979802203702	WITHOUT_CLASSIFICATION	2.0197796298191493E-6	DOCUMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999980600821867	WITHOUT_CLASSIFICATION	1.9399178132054707E-6	DOCUMENTATION
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9999961410066107	WITHOUT_CLASSIFICATION	3.858993389192675E-6	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9999953631354531	WITHOUT_CLASSIFICATION	4.6368645468582345E-6	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999939496872691	WITHOUT_CLASSIFICATION	6.050312731009245E-6	DOCUMENTATION
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9999965502666444	WITHOUT_CLASSIFICATION	3.449733355579033E-6	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.9999978439329703	WITHOUT_CLASSIFICATION	2.1560670297747117E-6	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.9999974406487991	WITHOUT_CLASSIFICATION	2.5593512007928805E-6	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.9998218915685354	WITHOUT_CLASSIFICATION	1.7810843146451777E-4	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999989240367534	WITHOUT_CLASSIFICATION	1.0759632466529127E-6	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999709675834838	WITHOUT_CLASSIFICATION	2.9032416516175075E-5	DOCUMENTATION
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999981482703769	WITHOUT_CLASSIFICATION	1.8517296230674852E-6	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999981384345683	WITHOUT_CLASSIFICATION	1.861565431708483E-6	DOCUMENTATION
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.999997896157223	WITHOUT_CLASSIFICATION	2.103842777077035E-6	DOCUMENTATION
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9999957294383469	WITHOUT_CLASSIFICATION	4.270561653107637E-6	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999985882073205	WITHOUT_CLASSIFICATION	1.4117926795382954E-6	DOCUMENTATION
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999967190940106	WITHOUT_CLASSIFICATION	3.2809059895127567E-6	DOCUMENTATION
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999986509714104	WITHOUT_CLASSIFICATION	1.3490285896675E-6	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9999989091455785	WITHOUT_CLASSIFICATION	1.0908544214783258E-6	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999993332490696	WITHOUT_CLASSIFICATION	6.667509303537268E-7	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999993611661824	WITHOUT_CLASSIFICATION	6.388338175465798E-7	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999964018334432	WITHOUT_CLASSIFICATION	3.5981665567269325E-6	DOCUMENTATION
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999969958563287	WITHOUT_CLASSIFICATION	3.004143671371635E-6	DOCUMENTATION
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999965367318207	WITHOUT_CLASSIFICATION	3.4632681794684353E-6	DOCUMENTATION
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999946768358335	WITHOUT_CLASSIFICATION	5.323164166481151E-6	DOCUMENTATION
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999972557480443	WITHOUT_CLASSIFICATION	2.744251955733148E-6	DOCUMENTATION
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999991867333297	WITHOUT_CLASSIFICATION	8.132666702749816E-7	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999971986233898	WITHOUT_CLASSIFICATION	2.801376610225508E-6	DOCUMENTATION
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999993340659189	WITHOUT_CLASSIFICATION	6.659340810721681E-7	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.9999726129642241	WITHOUT_CLASSIFICATION	2.7387035775918E-5	DOCUMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999976395851158	WITHOUT_CLASSIFICATION	2.360414884286634E-6	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999997493067743	WITHOUT_CLASSIFICATION	2.5069322567605726E-7	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999943388525743	WITHOUT_CLASSIFICATION	5.661147425664587E-6	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999939770372039	WITHOUT_CLASSIFICATION	6.022962795993813E-6	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999972814629012	WITHOUT_CLASSIFICATION	2.7185370987709376E-6	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999989281166642	WITHOUT_CLASSIFICATION	1.071883335802096E-5	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999993282435855	WITHOUT_CLASSIFICATION	6.717564144225339E-7	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999974965760242	WITHOUT_CLASSIFICATION	2.503423975732683E-6	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999949664699762	WITHOUT_CLASSIFICATION	5.033530023846272E-6	DOCUMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999979496077251	WITHOUT_CLASSIFICATION	2.0503922748531045E-6	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999973955915632	WITHOUT_CLASSIFICATION	2.604408436752249E-6	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999913020552541	WITHOUT_CLASSIFICATION	8.69794474589348E-6	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999988978525608	WITHOUT_CLASSIFICATION	1.1021474391959863E-6	DOCUMENTATION
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999908707496294	WITHOUT_CLASSIFICATION	9.129250370567237E-6	DOCUMENTATION
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999975054367811	WITHOUT_CLASSIFICATION	2.494563218868066E-6	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999989136729097	WITHOUT_CLASSIFICATION	1.0863270903219893E-6	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999948383880148	WITHOUT_CLASSIFICATION	5.161611985137641E-6	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9999829179905443	WITHOUT_CLASSIFICATION	1.7082009455760976E-5	DOCUMENTATION
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.9999998422963707	WITHOUT_CLASSIFICATION	1.577036293367504E-7	DOCUMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9999689688609813	WITHOUT_CLASSIFICATION	3.103113901880461E-5	DOCUMENTATION
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9999917318995635	WITHOUT_CLASSIFICATION	8.268100436432008E-6	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999989281166642	WITHOUT_CLASSIFICATION	1.071883335802096E-5	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999957161627614	WITHOUT_CLASSIFICATION	4.28383723854357E-6	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.999998523182225	WITHOUT_CLASSIFICATION	1.4768177750133761E-6	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999962909862652	WITHOUT_CLASSIFICATION	3.709013734952669E-6	DOCUMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.999999688042877	WITHOUT_CLASSIFICATION	3.1195712296151393E-7	DOCUMENTATION
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9999984056559068	WITHOUT_CLASSIFICATION	1.5943440931707702E-6	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999949017195248	WITHOUT_CLASSIFICATION	5.098280475246051E-6	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999989606211762	WITHOUT_CLASSIFICATION	1.0393788237462001E-6	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999975783254768	WITHOUT_CLASSIFICATION	2.42167452321466E-6	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999993332490696	WITHOUT_CLASSIFICATION	6.667509303537268E-7	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.999989636054156	WITHOUT_CLASSIFICATION	1.0363945844041732E-5	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999963362920871	WITHOUT_CLASSIFICATION	3.663707912946746E-6	DOCUMENTATION
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999975665493264	WITHOUT_CLASSIFICATION	2.4334506736735947E-6	DOCUMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999977206963849	WITHOUT_CLASSIFICATION	2.279303615019198E-6	DOCUMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999932031034778	WITHOUT_CLASSIFICATION	6.7968965222723075E-6	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9999995418975927	WITHOUT_CLASSIFICATION	4.5810240735924965E-7	DOCUMENTATION
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999975228645451	WITHOUT_CLASSIFICATION	2.477135454884518E-6	DOCUMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9999981132519893	WITHOUT_CLASSIFICATION	1.886748010723759E-6	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9999897130837921	WITHOUT_CLASSIFICATION	1.0286916207927729E-5	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999980982668444	WITHOUT_CLASSIFICATION	1.9017331555798112E-6	DOCUMENTATION
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.999998905024178	WITHOUT_CLASSIFICATION	1.0949758220162754E-6	DOCUMENTATION
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999922266594993	WITHOUT_CLASSIFICATION	7.773340500720767E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.999996415460335	WITHOUT_CLASSIFICATION	3.584539665117053E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.999996415460335	WITHOUT_CLASSIFICATION	3.584539665117053E-6	DOCUMENTATION
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999986646547018	WITHOUT_CLASSIFICATION	1.3353452982288905E-6	DOCUMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999984554878972	WITHOUT_CLASSIFICATION	1.5445121027607953E-6	DOCUMENTATION
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999991768136246	WITHOUT_CLASSIFICATION	8.231863754796258E-7	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999998537835695	WITHOUT_CLASSIFICATION	1.462164304253127E-7	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.99999773028686	WITHOUT_CLASSIFICATION	2.269713139970632E-6	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999949761159088	WITHOUT_CLASSIFICATION	5.023884091271612E-6	DOCUMENTATION
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999972224361735	WITHOUT_CLASSIFICATION	2.7775638265632796E-6	DOCUMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999994413183025	WITHOUT_CLASSIFICATION	5.586816974873502E-7	DOCUMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999996420780594	WITHOUT_CLASSIFICATION	3.5792194061174494E-7	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.9999979365710453	WITHOUT_CLASSIFICATION	2.0634289546454914E-6	DOCUMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999908918571669	WITHOUT_CLASSIFICATION	9.108142833080007E-6	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.9999908422795384	WITHOUT_CLASSIFICATION	9.157720461685278E-6	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999951093317244	WITHOUT_CLASSIFICATION	4.890668275592054E-6	DOCUMENTATION
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.999998917394406	WITHOUT_CLASSIFICATION	1.082605593997579E-6	DOCUMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999990769230623	WITHOUT_CLASSIFICATION	9.230769376114267E-7	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.9999983306463297	WITHOUT_CLASSIFICATION	1.6693536702648735E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.99999862853711	WITHOUT_CLASSIFICATION	1.3714628900499573E-6	DOCUMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999973291584864	WITHOUT_CLASSIFICATION	2.6708415136701763E-6	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999985014672479	WITHOUT_CLASSIFICATION	1.4985327520961164E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950628731977	WITHOUT_CLASSIFICATION	4.937126802284749E-6	DOCUMENTATION
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999993657869501	WITHOUT_CLASSIFICATION	6.342130497802859E-7	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999988891435335	WITHOUT_CLASSIFICATION	1.11085646639078E-6	DOCUMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999928133060901	WITHOUT_CLASSIFICATION	7.186693909862189E-6	DOCUMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.9999985618908577	WITHOUT_CLASSIFICATION	1.4381091424244513E-6	DOCUMENTATION
/*implied*/	WITHOUT_CLASSIFICATION	0.9997661059943246	WITHOUT_CLASSIFICATION	2.338940056754621E-4	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9999976626820466	WITHOUT_CLASSIFICATION	2.337317953500872E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950628731977	WITHOUT_CLASSIFICATION	4.937126802284749E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950628731977	WITHOUT_CLASSIFICATION	4.937126802284749E-6	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999939707307157	WITHOUT_CLASSIFICATION	6.029269284192051E-6	DOCUMENTATION
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999994115144	WITHOUT_CLASSIFICATION	5.884856000553762E-7	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999763353064864	WITHOUT_CLASSIFICATION	2.3664693513527532E-5	DOCUMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999982389762707	WITHOUT_CLASSIFICATION	1.7610237292915985E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9955169675472737	WITHOUT_CLASSIFICATION	0.00448303245272625	DOCUMENTATION
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9999131389699285	WITHOUT_CLASSIFICATION	8.68610300714493E-5	DOCUMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.9999994824048851	WITHOUT_CLASSIFICATION	5.175951149368895E-7	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9999829315305848	WITHOUT_CLASSIFICATION	1.7068469415180564E-5	DOCUMENTATION
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9999864789628754	WITHOUT_CLASSIFICATION	1.3521037124505892E-5	DOCUMENTATION
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999981012111768	WITHOUT_CLASSIFICATION	1.898788823219394E-6	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9999652121031383	WITHOUT_CLASSIFICATION	3.478789686174264E-5	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9999983976024109	WITHOUT_CLASSIFICATION	1.6023975890724782E-6	DOCUMENTATION
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999932940700649	WITHOUT_CLASSIFICATION	6.705929935094838E-6	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999942162476066	WITHOUT_CLASSIFICATION	5.783752393337355E-6	DOCUMENTATION
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999734526100718	WITHOUT_CLASSIFICATION	2.6547389928346527E-5	DOCUMENTATION
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.9999982118444689	WITHOUT_CLASSIFICATION	1.7881555311051996E-6	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9998966226027796	WITHOUT_CLASSIFICATION	1.03377397220468E-4	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999796020926998	WITHOUT_CLASSIFICATION	2.0397907300251302E-5	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.9999911518198457	WITHOUT_CLASSIFICATION	8.848180154267856E-6	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999926638564135	WITHOUT_CLASSIFICATION	7.336143586475337E-6	DOCUMENTATION
//TODO:	WITHOUT_CLASSIFICATION	0.9975601083045348	WITHOUT_CLASSIFICATION	0.002439891695465318	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999984890468376	WITHOUT_CLASSIFICATION	1.5109531623473425E-6	DOCUMENTATION
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999992047528301	WITHOUT_CLASSIFICATION	7.952471699973417E-7	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999981407282774	WITHOUT_CLASSIFICATION	1.8592717225568215E-6	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999871576760678	WITHOUT_CLASSIFICATION	1.2842323932201092E-5	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999982576253116	WITHOUT_CLASSIFICATION	1.742374688319852E-6	DOCUMENTATION
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999979412661983	WITHOUT_CLASSIFICATION	2.0587338016457923E-6	DOCUMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999973507157567	WITHOUT_CLASSIFICATION	2.6492842432615874E-6	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999860242364019	WITHOUT_CLASSIFICATION	1.3975763598166847E-5	DOCUMENTATION
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999991725389187	WITHOUT_CLASSIFICATION	8.274610813032314E-7	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.9999961040008415	WITHOUT_CLASSIFICATION	3.895999158451742E-6	DOCUMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9999739428993325	WITHOUT_CLASSIFICATION	2.6057100667444654E-5	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999907852690195	WITHOUT_CLASSIFICATION	9.214730980473624E-6	DOCUMENTATION
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9999937585816554	WITHOUT_CLASSIFICATION	6.241418344497006E-6	DOCUMENTATION
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9999979430747812	WITHOUT_CLASSIFICATION	2.0569252188671978E-6	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999975317089098	WITHOUT_CLASSIFICATION	2.4682910902082873E-6	DOCUMENTATION
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.999996222374769	WITHOUT_CLASSIFICATION	3.7776252309784356E-6	DOCUMENTATION
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.9999953431233025	WITHOUT_CLASSIFICATION	4.656876697483314E-6	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9999913236284204	WITHOUT_CLASSIFICATION	8.676371579543598E-6	DOCUMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9999895570671344	WITHOUT_CLASSIFICATION	1.0442932865580142E-5	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.999980783235937	WITHOUT_CLASSIFICATION	1.921676406305876E-5	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.999995369423385	WITHOUT_CLASSIFICATION	4.630576614950184E-6	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999960108904238	WITHOUT_CLASSIFICATION	3.989109576158347E-6	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999945885492163	WITHOUT_CLASSIFICATION	5.411450783787331E-6	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999960108904238	WITHOUT_CLASSIFICATION	3.989109576158347E-6	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999989920786828	WITHOUT_CLASSIFICATION	1.0079213171649784E-6	DOCUMENTATION
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999946752570279	WITHOUT_CLASSIFICATION	5.324742972065447E-6	DOCUMENTATION
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9999880392488794	WITHOUT_CLASSIFICATION	1.1960751120584207E-5	DOCUMENTATION
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999973608882229	WITHOUT_CLASSIFICATION	2.639111777133654E-6	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999987411250121	WITHOUT_CLASSIFICATION	1.2588749879821988E-6	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9999929587660762	WITHOUT_CLASSIFICATION	7.041233923761195E-6	DOCUMENTATION
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999935234544999	WITHOUT_CLASSIFICATION	6.476545500113889E-6	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999944407039674	WITHOUT_CLASSIFICATION	5.559296032559278E-6	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999911907600583	WITHOUT_CLASSIFICATION	8.80923994166618E-6	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999994460339714	WITHOUT_CLASSIFICATION	5.539660286478999E-7	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999986259878784	WITHOUT_CLASSIFICATION	1.3740121216063393E-6	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999955039069541	WITHOUT_CLASSIFICATION	4.496093045861062E-6	DOCUMENTATION
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.9999992058446853	WITHOUT_CLASSIFICATION	7.941553147191896E-7	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9999986025996793	WITHOUT_CLASSIFICATION	1.3974003207635376E-6	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9999811346679245	WITHOUT_CLASSIFICATION	1.886533207543437E-5	DOCUMENTATION
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.999999029859742	WITHOUT_CLASSIFICATION	9.701402580497975E-7	DOCUMENTATION
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999984131427312	WITHOUT_CLASSIFICATION	1.5868572687612567E-6	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999974112799723	WITHOUT_CLASSIFICATION	2.588720027710349E-6	DOCUMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999993583411195	WITHOUT_CLASSIFICATION	6.416588804422636E-7	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9999968540519555	WITHOUT_CLASSIFICATION	3.1459480445500814E-6	DOCUMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999972738228722	WITHOUT_CLASSIFICATION	2.726177127800552E-6	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9999893243870271	WITHOUT_CLASSIFICATION	1.0675612972864882E-5	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999982667110779	WITHOUT_CLASSIFICATION	1.7332889220269427E-6	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999981647107328	WITHOUT_CLASSIFICATION	1.8352892671960322E-6	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999928702394045	WITHOUT_CLASSIFICATION	7.129760595379088E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999989324163332	WITHOUT_CLASSIFICATION	1.0675836667637675E-6	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9998370379062503	WITHOUT_CLASSIFICATION	1.6296209374959923E-4	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9998952822200157	WITHOUT_CLASSIFICATION	1.0471777998431819E-4	DOCUMENTATION
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999830350699547	WITHOUT_CLASSIFICATION	1.696493004523645E-5	DOCUMENTATION
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.99995906517925	WITHOUT_CLASSIFICATION	4.09348207500051E-5	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.999829484923811	WITHOUT_CLASSIFICATION	1.7051507618906928E-4	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9999983293760166	WITHOUT_CLASSIFICATION	1.6706239833351483E-6	DOCUMENTATION
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999986562611434	WITHOUT_CLASSIFICATION	1.3437388567078443E-6	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999563149629536	WITHOUT_CLASSIFICATION	4.368503704645516E-5	DOCUMENTATION
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.999992098203104	WITHOUT_CLASSIFICATION	7.901796896049916E-6	DOCUMENTATION
//if its "id"	WITHOUT_CLASSIFICATION	0.9997916629322642	WITHOUT_CLASSIFICATION	2.083370677359208E-4	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.9999684621907311	WITHOUT_CLASSIFICATION	3.153780926895629E-5	DOCUMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999849004628848	WITHOUT_CLASSIFICATION	1.5099537115316705E-5	DOCUMENTATION
//important!!	WITHOUT_CLASSIFICATION	0.9996851795790314	WITHOUT_CLASSIFICATION	3.1482042096865804E-4	DOCUMENTATION
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.999986906513749	WITHOUT_CLASSIFICATION	1.309348625109141E-5	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999794295387902	WITHOUT_CLASSIFICATION	2.0570461209860364E-5	DOCUMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9999610009666007	WITHOUT_CLASSIFICATION	3.899903339920735E-5	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.9999978976524545	WITHOUT_CLASSIFICATION	2.1023475454436633E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999989324163332	WITHOUT_CLASSIFICATION	1.0675836667637675E-6	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.999488736341564	WITHOUT_CLASSIFICATION	5.11263658436013E-4	DOCUMENTATION
// collections of values	WITHOUT_CLASSIFICATION	0.9999966494029959	WITHOUT_CLASSIFICATION	3.350597004173727E-6	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.999819891046369	WITHOUT_CLASSIFICATION	1.801089536308886E-4	DOCUMENTATION
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999862747553588	WITHOUT_CLASSIFICATION	1.37252446410745E-5	DOCUMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9999354154501309	WITHOUT_CLASSIFICATION	6.458454986903723E-5	DOCUMENTATION
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999756452008369	WITHOUT_CLASSIFICATION	2.4354799163106822E-5	DOCUMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999852500811776	WITHOUT_CLASSIFICATION	1.474991882251254E-5	DOCUMENTATION
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.999990657828272	WITHOUT_CLASSIFICATION	9.342171728046547E-6	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.999993345208803	WITHOUT_CLASSIFICATION	6.654791196950538E-6	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999968659964475	WITHOUT_CLASSIFICATION	3.1340035523618234E-6	DOCUMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9999696785223858	WITHOUT_CLASSIFICATION	3.0321477614153867E-5	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999989351966987	WITHOUT_CLASSIFICATION	1.0648033012555242E-6	DOCUMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9998683079627595	WITHOUT_CLASSIFICATION	1.316920372405854E-4	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9997559210601444	WITHOUT_CLASSIFICATION	2.4407893985563473E-4	DOCUMENTATION
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9999806660321552	WITHOUT_CLASSIFICATION	1.933396784477442E-5	DOCUMENTATION
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.999998675888258	WITHOUT_CLASSIFICATION	1.3241117420478415E-6	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9999696417207943	WITHOUT_CLASSIFICATION	3.0358279205709496E-5	DOCUMENTATION
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.999955942707857	WITHOUT_CLASSIFICATION	4.405729214288007E-5	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999979404554857	WITHOUT_CLASSIFICATION	2.0595445142128177E-6	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.999488736341564	WITHOUT_CLASSIFICATION	5.11263658436013E-4	DOCUMENTATION
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.99996161407978	WITHOUT_CLASSIFICATION	3.8385920219964694E-5	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999963165420933	WITHOUT_CLASSIFICATION	3.6834579068157257E-6	DOCUMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.9999977946180525	WITHOUT_CLASSIFICATION	2.2053819475433144E-6	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999995730777608	WITHOUT_CLASSIFICATION	4.2692223926990184E-7	DOCUMENTATION
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9999978484897388	WITHOUT_CLASSIFICATION	2.1515102611626743E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999415224560205	WITHOUT_CLASSIFICATION	5.847754397960303E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999415224560205	WITHOUT_CLASSIFICATION	5.847754397960303E-5	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999985140607409	WITHOUT_CLASSIFICATION	1.4859392590911605E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999415224560205	WITHOUT_CLASSIFICATION	5.847754397960303E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999415224560205	WITHOUT_CLASSIFICATION	5.847754397960303E-5	DOCUMENTATION
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.999978283112598	WITHOUT_CLASSIFICATION	2.1716887402070273E-5	DOCUMENTATION
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999936927027036	WITHOUT_CLASSIFICATION	6.307297296386123E-6	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999975161045144	WITHOUT_CLASSIFICATION	2.4838954855471952E-6	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.999997049778019	WITHOUT_CLASSIFICATION	2.9502219809616393E-6	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999988183298926	WITHOUT_CLASSIFICATION	1.181670107432958E-6	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9999945873977025	WITHOUT_CLASSIFICATION	5.412602297558756E-6	DOCUMENTATION
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9999734398973158	WITHOUT_CLASSIFICATION	2.6560102684233837E-5	DOCUMENTATION
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999966226607832	WITHOUT_CLASSIFICATION	3.377339216872602E-6	DOCUMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999194139242273	WITHOUT_CLASSIFICATION	8.058607577263471E-5	DOCUMENTATION
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9999277439643841	WITHOUT_CLASSIFICATION	7.225603561585114E-5	DOCUMENTATION
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9999909646337521	WITHOUT_CLASSIFICATION	9.035366247810556E-6	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999145822860138	WITHOUT_CLASSIFICATION	8.541771398613501E-5	DOCUMENTATION
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999776233272917	WITHOUT_CLASSIFICATION	2.2376672708311172E-5	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.9999809723612235	WITHOUT_CLASSIFICATION	1.902763877649541E-5	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.9999756105936054	WITHOUT_CLASSIFICATION	2.4389406394526717E-5	DOCUMENTATION
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9999882064238811	WITHOUT_CLASSIFICATION	1.1793576118896601E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999961823811762	WITHOUT_CLASSIFICATION	3.817618823861922E-6	DOCUMENTATION
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9999866111533702	WITHOUT_CLASSIFICATION	1.3388846629672083E-5	DOCUMENTATION
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9999584215032146	WITHOUT_CLASSIFICATION	4.157849678548725E-5	DOCUMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9999832119927357	WITHOUT_CLASSIFICATION	1.6788007264400455E-5	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999893906406526	WITHOUT_CLASSIFICATION	1.0609359347329355E-5	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.9999791595034833	WITHOUT_CLASSIFICATION	2.084049651680949E-5	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999961823811762	WITHOUT_CLASSIFICATION	3.817618823861922E-6	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9998370379062503	WITHOUT_CLASSIFICATION	1.6296209374959923E-4	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9999771757234036	WITHOUT_CLASSIFICATION	2.282427659645891E-5	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999986524532626	WITHOUT_CLASSIFICATION	1.347546737455436E-6	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999985185265641	WITHOUT_CLASSIFICATION	1.4814734359459935E-6	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9999584622858785	WITHOUT_CLASSIFICATION	4.1537714121538446E-5	DOCUMENTATION
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999983033357706	WITHOUT_CLASSIFICATION	1.696664229451534E-6	DOCUMENTATION
// careful with this!	WITHOUT_CLASSIFICATION	0.9999943129403488	WITHOUT_CLASSIFICATION	5.687059651203547E-6	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999969537307508	WITHOUT_CLASSIFICATION	3.0462692492626743E-6	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999868352710507	WITHOUT_CLASSIFICATION	1.3164728949395945E-5	DOCUMENTATION
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999751243848323	WITHOUT_CLASSIFICATION	2.487561516767975E-5	DOCUMENTATION
//cannot instantiate	WITHOUT_CLASSIFICATION	0.999962527089297	WITHOUT_CLASSIFICATION	3.7472910702977795E-5	DOCUMENTATION
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999968536477694	WITHOUT_CLASSIFICATION	3.1463522305441935E-6	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999957147268373	WITHOUT_CLASSIFICATION	4.285273162564451E-6	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999932863685436	WITHOUT_CLASSIFICATION	6.713631456323977E-6	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9999930309207895	WITHOUT_CLASSIFICATION	6.969079210555112E-6	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.9999996230516215	WITHOUT_CLASSIFICATION	3.7694837850907357E-7	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999903197916848	WITHOUT_CLASSIFICATION	9.680208315171042E-6	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.999995170320602	WITHOUT_CLASSIFICATION	4.829679398048467E-6	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999973930094772	WITHOUT_CLASSIFICATION	2.606990522861468E-6	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999978461470305	WITHOUT_CLASSIFICATION	2.1538529694608022E-6	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.999980185398608	WITHOUT_CLASSIFICATION	1.9814601391975743E-5	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999811778220443	WITHOUT_CLASSIFICATION	1.8822177955639316E-5	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999990889504983	WITHOUT_CLASSIFICATION	9.110495018445709E-7	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999868352710507	WITHOUT_CLASSIFICATION	1.3164728949395945E-5	DOCUMENTATION
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9999764329204822	WITHOUT_CLASSIFICATION	2.3567079517761594E-5	DOCUMENTATION
//do replacements	WITHOUT_CLASSIFICATION	0.9999523825242619	WITHOUT_CLASSIFICATION	4.7617475737990534E-5	DOCUMENTATION
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9999819728582859	WITHOUT_CLASSIFICATION	1.8027141713986546E-5	DOCUMENTATION
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999934658725325	WITHOUT_CLASSIFICATION	6.53412746755371E-6	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999967686613702	WITHOUT_CLASSIFICATION	3.2313386297085326E-6	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.9999269989265795	WITHOUT_CLASSIFICATION	7.300107342040292E-5	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.999897102427796	WITHOUT_CLASSIFICATION	1.0289757220405135E-4	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.999975869793423	WITHOUT_CLASSIFICATION	2.413020657689388E-5	DOCUMENTATION
//sql = update;	WITHOUT_CLASSIFICATION	0.9999222804216354	WITHOUT_CLASSIFICATION	7.771957836456602E-5	DOCUMENTATION
//hilo config	WITHOUT_CLASSIFICATION	0.9999027131417715	WITHOUT_CLASSIFICATION	9.72868582285446E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999987090807781	WITHOUT_CLASSIFICATION	1.2909192218672677E-6	DOCUMENTATION
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999990491581224	WITHOUT_CLASSIFICATION	9.508418776629689E-7	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.99998322815486	WITHOUT_CLASSIFICATION	1.6771845140109726E-5	DOCUMENTATION
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9999947881386487	WITHOUT_CLASSIFICATION	5.21186135125535E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999893731506672	WITHOUT_CLASSIFICATION	1.0626849332869481E-5	DOCUMENTATION
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999897921850559	WITHOUT_CLASSIFICATION	1.0207814944195557E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999754626930306	WITHOUT_CLASSIFICATION	2.453730696947133E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999987090807781	WITHOUT_CLASSIFICATION	1.2909192218672677E-6	DOCUMENTATION
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.999997708700253	WITHOUT_CLASSIFICATION	2.2912997469550874E-6	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9999934550746008	WITHOUT_CLASSIFICATION	6.544925399155808E-6	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.99999372290235	WITHOUT_CLASSIFICATION	6.27709765001174E-6	DOCUMENTATION
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999956679072282	WITHOUT_CLASSIFICATION	4.3320927718386775E-6	DOCUMENTATION
// the default...	WITHOUT_CLASSIFICATION	0.9999866247227457	WITHOUT_CLASSIFICATION	1.337527725427265E-5	DOCUMENTATION
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999993406741863	WITHOUT_CLASSIFICATION	6.59325813782078E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999893731506672	WITHOUT_CLASSIFICATION	1.0626849332869481E-5	DOCUMENTATION
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999991020119157	WITHOUT_CLASSIFICATION	8.979880843901193E-7	DOCUMENTATION
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999903112103146	WITHOUT_CLASSIFICATION	9.688789685484383E-6	DOCUMENTATION
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999901656862781	WITHOUT_CLASSIFICATION	9.834313721970163E-6	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999943585458942	WITHOUT_CLASSIFICATION	5.641454105769306E-6	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999909010783318	WITHOUT_CLASSIFICATION	9.098921668231307E-6	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999934835989299	WITHOUT_CLASSIFICATION	6.516401070148628E-6	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999940644964599	WITHOUT_CLASSIFICATION	5.935503540179912E-6	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999940644964599	WITHOUT_CLASSIFICATION	5.935503540179912E-6	DOCUMENTATION
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999894954043727	WITHOUT_CLASSIFICATION	1.0504595627316655E-5	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.999995749958454	WITHOUT_CLASSIFICATION	4.250041545991763E-6	DOCUMENTATION
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999907929156658	WITHOUT_CLASSIFICATION	9.207084334102807E-6	DOCUMENTATION
// scroll backward	WITHOUT_CLASSIFICATION	0.9999810767003046	WITHOUT_CLASSIFICATION	1.8923299695528497E-5	DOCUMENTATION
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.9999974137492829	WITHOUT_CLASSIFICATION	2.5862507170892285E-6	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999727371092632	WITHOUT_CLASSIFICATION	2.7262890736737106E-5	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999301732333175	WITHOUT_CLASSIFICATION	6.982676668253603E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999807076293463	WITHOUT_CLASSIFICATION	1.9292370653654858E-5	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.9999993501352987	WITHOUT_CLASSIFICATION	6.498647012845892E-7	DOCUMENTATION
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999857511803942	WITHOUT_CLASSIFICATION	1.4248819605780115E-5	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999727371092632	WITHOUT_CLASSIFICATION	2.7262890736737106E-5	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999301732333175	WITHOUT_CLASSIFICATION	6.982676668253603E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999807076293463	WITHOUT_CLASSIFICATION	1.9292370653654858E-5	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9999730805049564	WITHOUT_CLASSIFICATION	2.6919495043652742E-5	DOCUMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.9997969014593272	WITHOUT_CLASSIFICATION	2.030985406728915E-4	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999995016908404	WITHOUT_CLASSIFICATION	4.983091595229037E-7	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999839553394346	WITHOUT_CLASSIFICATION	1.6044660565418073E-5	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999924216327352	WITHOUT_CLASSIFICATION	7.578367264819829E-6	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9999988395996269	WITHOUT_CLASSIFICATION	1.1604003731783107E-6	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.999956369615873	WITHOUT_CLASSIFICATION	4.3630384126961434E-5	DOCUMENTATION
//checking for named queries	WITHOUT_CLASSIFICATION	0.9999462478631772	WITHOUT_CLASSIFICATION	5.375213682279737E-5	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.999372277442351	WITHOUT_CLASSIFICATION	6.277225576490601E-4	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999906894979682	WITHOUT_CLASSIFICATION	9.3105020317798E-6	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999883688453655	WITHOUT_CLASSIFICATION	1.1631154634455115E-5	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999950569260937	WITHOUT_CLASSIFICATION	4.943073906315562E-6	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9999889127052306	WITHOUT_CLASSIFICATION	1.1087294769461348E-5	DOCUMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999803245850677	WITHOUT_CLASSIFICATION	1.967541493232278E-5	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999978931632111	WITHOUT_CLASSIFICATION	2.106836788904074E-6	DOCUMENTATION
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.999925961071535	WITHOUT_CLASSIFICATION	7.403892846501745E-5	DOCUMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9999759459126901	WITHOUT_CLASSIFICATION	2.4054087309905945E-5	DOCUMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.999448251739794	WITHOUT_CLASSIFICATION	5.517482602060808E-4	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999919341014063	WITHOUT_CLASSIFICATION	8.065898593701544E-6	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999936185982098	WITHOUT_CLASSIFICATION	6.381401790186865E-6	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999934239313207	WITHOUT_CLASSIFICATION	6.576068679285241E-6	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999848995653755	WITHOUT_CLASSIFICATION	1.5100434624397855E-5	DOCUMENTATION
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9999944903847583	WITHOUT_CLASSIFICATION	5.5096152417104746E-6	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999986626703175	WITHOUT_CLASSIFICATION	1.3373296825279448E-6	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.999999139184838	WITHOUT_CLASSIFICATION	8.608151621044716E-7	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9999876473684887	WITHOUT_CLASSIFICATION	1.2352631511395485E-5	DOCUMENTATION
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999813479495478	WITHOUT_CLASSIFICATION	1.8652050452075857E-5	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999532195598728	WITHOUT_CLASSIFICATION	4.6780440127103135E-5	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9999955299612412	WITHOUT_CLASSIFICATION	4.470038758773402E-6	DOCUMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999583985979791	WITHOUT_CLASSIFICATION	4.1601402020940135E-5	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999653735926932	WITHOUT_CLASSIFICATION	3.462640730675169E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999818782753389	WITHOUT_CLASSIFICATION	1.812172466111917E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999818782753389	WITHOUT_CLASSIFICATION	1.812172466111917E-5	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999991392186939	WITHOUT_CLASSIFICATION	8.607813061483783E-7	DOCUMENTATION
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.999999166881127	WITHOUT_CLASSIFICATION	8.331188729320032E-7	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999966703827279	WITHOUT_CLASSIFICATION	3.3296172721994846E-6	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9976536163931664	WITHOUT_CLASSIFICATION	0.0023463836068335644	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.999997169996634	WITHOUT_CLASSIFICATION	2.830003365960136E-6	DOCUMENTATION
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9999897699183599	WITHOUT_CLASSIFICATION	1.0230081640044819E-5	DOCUMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.999521812710815	WITHOUT_CLASSIFICATION	4.7818728918501164E-4	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999905719271174	WITHOUT_CLASSIFICATION	9.428072882534834E-6	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999709293238754	WITHOUT_CLASSIFICATION	2.9070676124512885E-5	DOCUMENTATION
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999932965480148	WITHOUT_CLASSIFICATION	6.703451985147452E-6	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999908200262616	WITHOUT_CLASSIFICATION	9.179973738443211E-6	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999959701964097	WITHOUT_CLASSIFICATION	4.029803590206527E-6	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999877208079524	WITHOUT_CLASSIFICATION	1.2279192047519725E-5	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999942925647854	WITHOUT_CLASSIFICATION	5.707435214602806E-6	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999914782470044	WITHOUT_CLASSIFICATION	8.521752995553606E-6	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999948737329489	WITHOUT_CLASSIFICATION	5.126267051020997E-6	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999936957595655	WITHOUT_CLASSIFICATION	6.304240434424616E-6	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996421781098	WITHOUT_CLASSIFICATION	3.5782189019071877E-6	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999993148908717	WITHOUT_CLASSIFICATION	6.851091282849801E-6	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999948112008793	WITHOUT_CLASSIFICATION	5.188799120786492E-6	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999973353324798	WITHOUT_CLASSIFICATION	2.6646675202001657E-6	DOCUMENTATION
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9999942514680135	WITHOUT_CLASSIFICATION	5.748531986579829E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999960661989846	WITHOUT_CLASSIFICATION	3.933801015465106E-6	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999775733290216	WITHOUT_CLASSIFICATION	2.2426670978467508E-5	DOCUMENTATION
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999986070276007	WITHOUT_CLASSIFICATION	1.3929723993029697E-6	DOCUMENTATION
// not for internal use:	WITHOUT_CLASSIFICATION	0.999993204998036	WITHOUT_CLASSIFICATION	6.7950019640964915E-6	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999983142123003	WITHOUT_CLASSIFICATION	1.6857876995682026E-6	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9999861286076324	WITHOUT_CLASSIFICATION	1.3871392367513637E-5	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999960661989846	WITHOUT_CLASSIFICATION	3.933801015465106E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999960661989846	WITHOUT_CLASSIFICATION	3.933801015465106E-6	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9999854509024378	WITHOUT_CLASSIFICATION	1.4549097562059848E-5	DOCUMENTATION
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999974656569375	WITHOUT_CLASSIFICATION	2.534343062490625E-6	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.999999066335538	WITHOUT_CLASSIFICATION	9.336644619889398E-7	DOCUMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999962683019628	WITHOUT_CLASSIFICATION	3.7316980372822455E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999787217927532	WITHOUT_CLASSIFICATION	2.1278207246851078E-5	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999936185982098	WITHOUT_CLASSIFICATION	6.381401790186865E-6	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9999943337204773	WITHOUT_CLASSIFICATION	5.666279522646917E-6	DOCUMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999952819863747	WITHOUT_CLASSIFICATION	4.718013625340133E-6	DOCUMENTATION
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999938380848926	WITHOUT_CLASSIFICATION	6.161915107397247E-6	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999905332013475	WITHOUT_CLASSIFICATION	9.466798652654028E-6	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999989008068859	WITHOUT_CLASSIFICATION	1.0991931140811712E-6	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999905662449798	WITHOUT_CLASSIFICATION	9.433755020209908E-6	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999826434985274	WITHOUT_CLASSIFICATION	1.735650147262844E-5	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999826434985274	WITHOUT_CLASSIFICATION	1.735650147262844E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999879993160412	WITHOUT_CLASSIFICATION	1.2000683958831959E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999879993160412	WITHOUT_CLASSIFICATION	1.2000683958831959E-5	DOCUMENTATION
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999782111247584	WITHOUT_CLASSIFICATION	2.178887524160917E-5	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999753464049431	WITHOUT_CLASSIFICATION	2.4653595056921153E-5	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9999833059953808	WITHOUT_CLASSIFICATION	1.6694004619124835E-5	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999701165612777	WITHOUT_CLASSIFICATION	2.988343872229007E-5	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9999992198000952	WITHOUT_CLASSIFICATION	7.801999047357757E-7	DOCUMENTATION
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9999986098662681	WITHOUT_CLASSIFICATION	1.3901337318875973E-6	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999959290104612	WITHOUT_CLASSIFICATION	4.0709895387835135E-6	DOCUMENTATION
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999950112234733	WITHOUT_CLASSIFICATION	4.988776526646578E-6	DOCUMENTATION
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9999969929742644	WITHOUT_CLASSIFICATION	3.0070257356587363E-6	DOCUMENTATION
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999884095010689	WITHOUT_CLASSIFICATION	1.1590498931151177E-5	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999917181746106	WITHOUT_CLASSIFICATION	8.281825389279577E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996951543319008	WITHOUT_CLASSIFICATION	3.048456680991314E-4	DOCUMENTATION
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999945356838779	WITHOUT_CLASSIFICATION	5.464316122185533E-6	DOCUMENTATION
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9999828026187424	WITHOUT_CLASSIFICATION	1.719738125762157E-5	DOCUMENTATION
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999846604845146	WITHOUT_CLASSIFICATION	1.5339515485406788E-5	DOCUMENTATION
//no big deal	WITHOUT_CLASSIFICATION	0.999925061676197	WITHOUT_CLASSIFICATION	7.493832380296348E-5	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999870053592004	WITHOUT_CLASSIFICATION	1.2994640799561479E-5	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999870053592004	WITHOUT_CLASSIFICATION	1.2994640799561479E-5	DOCUMENTATION
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.99999929187215	WITHOUT_CLASSIFICATION	7.081278499872452E-7	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.999994359270198	WITHOUT_CLASSIFICATION	5.640729802052256E-6	DOCUMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999994515137549	WITHOUT_CLASSIFICATION	5.484862451791447E-7	DOCUMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9998774113767117	WITHOUT_CLASSIFICATION	1.225886232881934E-4	DOCUMENTATION
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999993933541984	WITHOUT_CLASSIFICATION	6.066458016145821E-6	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999876005084218	WITHOUT_CLASSIFICATION	1.2399491578247774E-5	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.9999948785526802	WITHOUT_CLASSIFICATION	5.121447319816682E-6	DOCUMENTATION
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999994806971654	WITHOUT_CLASSIFICATION	5.193028346005809E-6	DOCUMENTATION
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9999981521462667	WITHOUT_CLASSIFICATION	1.847853733211385E-6	DOCUMENTATION
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999991833393214	WITHOUT_CLASSIFICATION	8.166606785381615E-7	DOCUMENTATION
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.999999651471322	WITHOUT_CLASSIFICATION	3.4852867799136506E-7	DOCUMENTATION
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999993579811336	WITHOUT_CLASSIFICATION	6.420188663723743E-7	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999994684846725	WITHOUT_CLASSIFICATION	5.315153274957236E-6	DOCUMENTATION
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999874217747022	WITHOUT_CLASSIFICATION	1.2578225297859544E-5	DOCUMENTATION
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999952635043959	WITHOUT_CLASSIFICATION	4.736495603966037E-6	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9999732704081242	WITHOUT_CLASSIFICATION	2.6729591875884788E-5	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999992752881002	WITHOUT_CLASSIFICATION	7.247118998713595E-7	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999946282777363	WITHOUT_CLASSIFICATION	5.371722263730282E-6	DOCUMENTATION
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999939902746262	WITHOUT_CLASSIFICATION	6.009725373893718E-6	DOCUMENTATION
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999972577346742	WITHOUT_CLASSIFICATION	2.7422653259242517E-6	DOCUMENTATION
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.999999618958946	WITHOUT_CLASSIFICATION	3.8104105398645434E-7	DOCUMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999996338537696	WITHOUT_CLASSIFICATION	3.661462304273437E-7	DOCUMENTATION
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999984324333583	WITHOUT_CLASSIFICATION	1.5675666417396504E-6	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999940684201842	WITHOUT_CLASSIFICATION	5.931579815768838E-6	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999975858322798	WITHOUT_CLASSIFICATION	2.414167720178218E-6	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9999963424545513	WITHOUT_CLASSIFICATION	3.657545448838673E-6	DOCUMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999822338709207	WITHOUT_CLASSIFICATION	1.7766129079391373E-5	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.999951705558648	WITHOUT_CLASSIFICATION	4.829444135204619E-5	DOCUMENTATION
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.999997143364191	WITHOUT_CLASSIFICATION	2.8566358089575417E-6	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999834520153555	WITHOUT_CLASSIFICATION	1.6547984644437894E-5	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999994296098542	WITHOUT_CLASSIFICATION	5.703901457778781E-7	DOCUMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999722120107879	WITHOUT_CLASSIFICATION	2.7787989212191415E-5	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.9999735089547759	WITHOUT_CLASSIFICATION	2.6491045224075255E-5	DOCUMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.9999890501216467	WITHOUT_CLASSIFICATION	1.094987835327846E-5	DOCUMENTATION
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9998229113079823	WITHOUT_CLASSIFICATION	1.7708869201764856E-4	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.999951178189945	WITHOUT_CLASSIFICATION	4.882181005504054E-5	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999990099587254	WITHOUT_CLASSIFICATION	9.900412746303804E-7	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.9999949299327305	WITHOUT_CLASSIFICATION	5.070067269491672E-6	DOCUMENTATION
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999957129855057	WITHOUT_CLASSIFICATION	4.287014494258778E-6	DOCUMENTATION
//handle empty collections	WITHOUT_CLASSIFICATION	0.9999832788840033	WITHOUT_CLASSIFICATION	1.6721115996697204E-5	DOCUMENTATION
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999992604220541	WITHOUT_CLASSIFICATION	7.395779458052145E-7	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9999951452611248	WITHOUT_CLASSIFICATION	4.854738875288119E-6	DOCUMENTATION
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9999989874890948	WITHOUT_CLASSIFICATION	1.0125109052754677E-6	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999992480683413	WITHOUT_CLASSIFICATION	7.519316587545892E-7	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9999955994752295	WITHOUT_CLASSIFICATION	4.400524770456131E-6	DOCUMENTATION
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999641780521211	WITHOUT_CLASSIFICATION	3.582194787881514E-5	DOCUMENTATION
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999692193306895	WITHOUT_CLASSIFICATION	3.078066931046479E-5	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9998890934592364	WITHOUT_CLASSIFICATION	1.109065407636015E-4	DOCUMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999902018985277	WITHOUT_CLASSIFICATION	9.798101472224952E-6	DOCUMENTATION
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9999626318767328	WITHOUT_CLASSIFICATION	3.736812326720413E-5	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.999990327239974	WITHOUT_CLASSIFICATION	9.672760025959594E-6	DOCUMENTATION
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9999905229502826	WITHOUT_CLASSIFICATION	9.477049717529634E-6	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9999973188500717	WITHOUT_CLASSIFICATION	2.681149928240706E-6	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999832966427294	WITHOUT_CLASSIFICATION	1.670335727059158E-5	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9999895294587594	WITHOUT_CLASSIFICATION	1.0470541240580675E-5	DOCUMENTATION
// look for a proxy	WITHOUT_CLASSIFICATION	0.999978474914286	WITHOUT_CLASSIFICATION	2.15250857139309E-5	DOCUMENTATION
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9999861779471027	WITHOUT_CLASSIFICATION	1.3822052897280264E-5	DOCUMENTATION
//its the given optional object	WITHOUT_CLASSIFICATION	0.9999880415096412	WITHOUT_CLASSIFICATION	1.19584903589421E-5	DOCUMENTATION
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.999986955055606	WITHOUT_CLASSIFICATION	1.304494439393719E-5	DOCUMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.9999590397972862	WITHOUT_CLASSIFICATION	4.096020271381401E-5	DOCUMENTATION
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999903757935821	WITHOUT_CLASSIFICATION	9.624206417928263E-6	DOCUMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999925710661663	WITHOUT_CLASSIFICATION	7.428933833639024E-6	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.999999741524863	WITHOUT_CLASSIFICATION	2.584751369604608E-7	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999880504207888	WITHOUT_CLASSIFICATION	1.1949579211206138E-5	DOCUMENTATION
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999946799930801	WITHOUT_CLASSIFICATION	5.3200069198409005E-6	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.9999992497487638	WITHOUT_CLASSIFICATION	7.502512362397481E-7	DOCUMENTATION
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999995583988356	WITHOUT_CLASSIFICATION	4.4160116448867954E-7	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9999851457432759	WITHOUT_CLASSIFICATION	1.4854256724193198E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9993642691721747	WITHOUT_CLASSIFICATION	6.357308278253474E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9993642691721747	WITHOUT_CLASSIFICATION	6.357308278253474E-4	DOCUMENTATION
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.999989895455034	WITHOUT_CLASSIFICATION	1.0104544965906388E-5	DOCUMENTATION
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.9999950696377979	WITHOUT_CLASSIFICATION	4.930362202051667E-6	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9999964067939973	WITHOUT_CLASSIFICATION	3.593206002708813E-6	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.999988185200215	WITHOUT_CLASSIFICATION	1.181479978504646E-5	DOCUMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999974193980878	WITHOUT_CLASSIFICATION	2.5806019121998545E-6	DOCUMENTATION
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9999937453597096	WITHOUT_CLASSIFICATION	6.254640290281507E-6	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999995538081917	WITHOUT_CLASSIFICATION	4.4619180823814797E-7	DOCUMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999994258169466	WITHOUT_CLASSIFICATION	5.741830534571591E-7	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9999767468186965	WITHOUT_CLASSIFICATION	2.325318130355109E-5	DOCUMENTATION
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999991791445855	WITHOUT_CLASSIFICATION	8.20855414661152E-7	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999911725021746	WITHOUT_CLASSIFICATION	8.827497825268835E-6	DOCUMENTATION
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9999948314858242	WITHOUT_CLASSIFICATION	5.168514175819104E-6	DOCUMENTATION
//a composite key	WITHOUT_CLASSIFICATION	0.9999552261573681	WITHOUT_CLASSIFICATION	4.477384263191497E-5	DOCUMENTATION
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.999995342611454	WITHOUT_CLASSIFICATION	4.657388546106355E-6	DOCUMENTATION
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999830374157158	WITHOUT_CLASSIFICATION	1.6962584284131333E-5	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.9999964044554258	WITHOUT_CLASSIFICATION	3.5955445741214605E-6	DOCUMENTATION
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9999551017808751	WITHOUT_CLASSIFICATION	4.4898219124877514E-5	DOCUMENTATION
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9999987494549705	WITHOUT_CLASSIFICATION	1.2505450294965368E-6	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9999992839758738	WITHOUT_CLASSIFICATION	7.160241263047858E-7	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9999903652456129	WITHOUT_CLASSIFICATION	9.634754387151673E-6	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999790731095326	WITHOUT_CLASSIFICATION	2.0926890467469136E-5	DOCUMENTATION
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999843121357328	WITHOUT_CLASSIFICATION	1.5687864267175714E-5	DOCUMENTATION
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9999793418680382	WITHOUT_CLASSIFICATION	2.0658131961875744E-5	DOCUMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.99999752463839	WITHOUT_CLASSIFICATION	2.4753616099783726E-6	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999960497527561	WITHOUT_CLASSIFICATION	3.950247243764487E-6	DOCUMENTATION
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.999987741917755	WITHOUT_CLASSIFICATION	1.2258082244960364E-5	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999809838020739	WITHOUT_CLASSIFICATION	1.9016197926190657E-5	DOCUMENTATION
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999668806322312	WITHOUT_CLASSIFICATION	3.311936776877626E-5	DOCUMENTATION
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999902772593772	WITHOUT_CLASSIFICATION	9.722740622922235E-6	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9999940974138024	WITHOUT_CLASSIFICATION	5.902586197545272E-6	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.9999955427287615	WITHOUT_CLASSIFICATION	4.4572712385203685E-6	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9999878791969284	WITHOUT_CLASSIFICATION	1.2120803071579316E-5	DOCUMENTATION
//the criteria instance	WITHOUT_CLASSIFICATION	0.9999596659707288	WITHOUT_CLASSIFICATION	4.033402927128295E-5	DOCUMENTATION
// the entity name	WITHOUT_CLASSIFICATION	0.9999839442171662	WITHOUT_CLASSIFICATION	1.6055782833857384E-5	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9999585004981654	WITHOUT_CLASSIFICATION	4.149950183464294E-5	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9999585004981654	WITHOUT_CLASSIFICATION	4.149950183464294E-5	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999746972869393	WITHOUT_CLASSIFICATION	2.5302713060643723E-5	DOCUMENTATION
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9999844490649049	WITHOUT_CLASSIFICATION	1.555093509511594E-5	DOCUMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999936008961029	WITHOUT_CLASSIFICATION	6.399103897165267E-6	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.9999989276726887	WITHOUT_CLASSIFICATION	1.0723273112054478E-6	DOCUMENTATION
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999953490187498	WITHOUT_CLASSIFICATION	4.650981250223571E-6	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999871283377708	WITHOUT_CLASSIFICATION	1.2871662229250052E-5	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.9999980974798961	WITHOUT_CLASSIFICATION	1.9025201040160507E-6	DOCUMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9999992416737491	WITHOUT_CLASSIFICATION	7.58326250933925E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.999997741307883	WITHOUT_CLASSIFICATION	2.2586921170602433E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999982074301949	WITHOUT_CLASSIFICATION	1.7925698052346978E-6	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999988718804095	WITHOUT_CLASSIFICATION	1.1281195905239942E-6	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.999997391996055	WITHOUT_CLASSIFICATION	2.608003944916929E-6	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999989825253021	WITHOUT_CLASSIFICATION	1.017474697913123E-6	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999971272389327	WITHOUT_CLASSIFICATION	2.872761067260918E-6	DOCUMENTATION
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999950204355985	WITHOUT_CLASSIFICATION	4.97956440150402E-6	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999961888822958	WITHOUT_CLASSIFICATION	3.8111177043110306E-6	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999961888822958	WITHOUT_CLASSIFICATION	3.8111177043110306E-6	DOCUMENTATION
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999968423251222	WITHOUT_CLASSIFICATION	3.157674877856177E-6	DOCUMENTATION
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999842584404013	WITHOUT_CLASSIFICATION	1.5741559598673868E-5	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.999996326140968	WITHOUT_CLASSIFICATION	3.6738590320489553E-6	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999983801528246	WITHOUT_CLASSIFICATION	1.6198471752906863E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996951543319008	WITHOUT_CLASSIFICATION	3.048456680991314E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9992298349858226	WITHOUT_CLASSIFICATION	7.701650141774144E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999916823678892	WITHOUT_CLASSIFICATION	8.317632110857215E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.999989150574781	WITHOUT_CLASSIFICATION	1.084942521904485E-5	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.999989150574781	WITHOUT_CLASSIFICATION	1.084942521904485E-5	DOCUMENTATION
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999968791926476	WITHOUT_CLASSIFICATION	3.1208073524557476E-6	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999995470366844	WITHOUT_CLASSIFICATION	4.529633155587621E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.9999981147286049	WITHOUT_CLASSIFICATION	1.8852713950915777E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999972660422302	WITHOUT_CLASSIFICATION	2.733957769914277E-6	DOCUMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9999990641942816	WITHOUT_CLASSIFICATION	9.358057183858723E-7	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9993429763201908	WITHOUT_CLASSIFICATION	6.57023679809263E-4	DOCUMENTATION
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999989008000894	WITHOUT_CLASSIFICATION	1.0991999106544103E-6	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999948897555955	WITHOUT_CLASSIFICATION	5.110244404586933E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999906995275141	WITHOUT_CLASSIFICATION	9.300472485988322E-6	DOCUMENTATION
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.999994161255775	WITHOUT_CLASSIFICATION	5.838744224989502E-6	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.9999992831855449	WITHOUT_CLASSIFICATION	7.168144552232766E-7	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999552238374384	WITHOUT_CLASSIFICATION	4.4776162561564964E-5	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999964027072322	WITHOUT_CLASSIFICATION	3.5972927678201417E-6	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.999841516715047	WITHOUT_CLASSIFICATION	1.584832849530393E-4	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999763353064864	WITHOUT_CLASSIFICATION	2.3664693513527532E-5	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999825526579449	WITHOUT_CLASSIFICATION	1.7447342055161296E-5	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9999728609925398	WITHOUT_CLASSIFICATION	2.713900746022246E-5	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9998932834228127	WITHOUT_CLASSIFICATION	1.0671657718728739E-4	DOCUMENTATION
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999971834072642	WITHOUT_CLASSIFICATION	2.8165927359026193E-6	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999929171263047	WITHOUT_CLASSIFICATION	7.082873695265518E-6	DOCUMENTATION
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999864293555996	WITHOUT_CLASSIFICATION	1.3570644400542432E-5	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9998470188643026	WITHOUT_CLASSIFICATION	1.529811356974142E-4	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999939518479255	WITHOUT_CLASSIFICATION	6.048152074555662E-6	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.999997451280976	WITHOUT_CLASSIFICATION	2.548719024114541E-6	DOCUMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999959171276364	WITHOUT_CLASSIFICATION	4.082872363620819E-6	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.9999976379691894	WITHOUT_CLASSIFICATION	2.3620308106655216E-6	DOCUMENTATION
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9999975096787348	WITHOUT_CLASSIFICATION	2.4903212652326444E-6	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.9999975595906313	WITHOUT_CLASSIFICATION	2.440409368745752E-6	DOCUMENTATION
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9999972181595567	WITHOUT_CLASSIFICATION	2.781840443320537E-6	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999964860457399	WITHOUT_CLASSIFICATION	3.5139542601803187E-6	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.99996803492882	WITHOUT_CLASSIFICATION	3.1965071179972516E-5	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9998811553997599	WITHOUT_CLASSIFICATION	1.1884460024010377E-4	DOCUMENTATION
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9999982816847245	WITHOUT_CLASSIFICATION	1.7183152754701981E-6	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.9999604323970742	WITHOUT_CLASSIFICATION	3.9567602925745614E-5	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9999867593214619	WITHOUT_CLASSIFICATION	1.324067853809957E-5	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9999088407396931	WITHOUT_CLASSIFICATION	9.115926030690007E-5	DOCUMENTATION
//may be final	WITHOUT_CLASSIFICATION	0.9999308066428706	WITHOUT_CLASSIFICATION	6.919335712944798E-5	DOCUMENTATION
// may be final	WITHOUT_CLASSIFICATION	0.9999868890285528	WITHOUT_CLASSIFICATION	1.3110971447192462E-5	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999522374759663	WITHOUT_CLASSIFICATION	4.7762524033678655E-5	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999756806785387	WITHOUT_CLASSIFICATION	2.4319321461285632E-5	DOCUMENTATION
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999975394019206	WITHOUT_CLASSIFICATION	2.460598079477707E-6	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9999877409262414	WITHOUT_CLASSIFICATION	1.2259073758550553E-5	DOCUMENTATION
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999795644707185	WITHOUT_CLASSIFICATION	2.043552928150707E-5	DOCUMENTATION
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999977510965925	WITHOUT_CLASSIFICATION	2.248903407461194E-6	DOCUMENTATION
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999965247789829	WITHOUT_CLASSIFICATION	3.4752210170402473E-6	DOCUMENTATION
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999884523050914	WITHOUT_CLASSIFICATION	1.1547694908535235E-5	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.9999522374759663	WITHOUT_CLASSIFICATION	4.7762524033678655E-5	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999756806785387	WITHOUT_CLASSIFICATION	2.4319321461285632E-5	DOCUMENTATION
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999841418747922	WITHOUT_CLASSIFICATION	1.5858125207780006E-5	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9999758411311733	WITHOUT_CLASSIFICATION	2.4158868826623125E-5	DOCUMENTATION
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999944089266297	WITHOUT_CLASSIFICATION	5.591073370263328E-6	DOCUMENTATION
// index should be last column listed	WITHOUT_CLASSIFICATION	0.99999726799184	WITHOUT_CLASSIFICATION	2.7320081599085423E-6	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999915167162157	WITHOUT_CLASSIFICATION	8.483283784308139E-6	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9999986091139783	WITHOUT_CLASSIFICATION	1.3908860216202167E-6	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999544569291998	WITHOUT_CLASSIFICATION	4.5543070800263914E-5	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9998019395426702	WITHOUT_CLASSIFICATION	1.9806045732986805E-4	DOCUMENTATION
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999841679448189	WITHOUT_CLASSIFICATION	1.583205518103291E-5	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9999597632179433	WITHOUT_CLASSIFICATION	4.0236782056554714E-5	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.999999256131443	WITHOUT_CLASSIFICATION	7.43868556991463E-7	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9999597632179433	WITHOUT_CLASSIFICATION	4.0236782056554714E-5	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.999999545365608	WITHOUT_CLASSIFICATION	4.5463439203490907E-7	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999815012714347	WITHOUT_CLASSIFICATION	1.849872856534723E-5	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999994344924424	WITHOUT_CLASSIFICATION	5.655075576244674E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999967534099244	WITHOUT_CLASSIFICATION	3.246590075606741E-6	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9999953343834653	WITHOUT_CLASSIFICATION	4.665616534626072E-6	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9975855580701166	WITHOUT_CLASSIFICATION	0.0024144419298833984	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9975855580701166	WITHOUT_CLASSIFICATION	0.0024144419298833984	DOCUMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9999551003917077	WITHOUT_CLASSIFICATION	4.489960829235573E-5	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.999975181748998	WITHOUT_CLASSIFICATION	2.4818251001912697E-5	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9999248677383943	WITHOUT_CLASSIFICATION	7.513226160566149E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999779935233692	WITHOUT_CLASSIFICATION	2.200647663079335E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9999658427026598	WITHOUT_CLASSIFICATION	3.415729734022106E-5	DOCUMENTATION
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9999967712579918	WITHOUT_CLASSIFICATION	3.2287420081110355E-6	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999742630092531	WITHOUT_CLASSIFICATION	2.5736990746816743E-5	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.9999811450850394	WITHOUT_CLASSIFICATION	1.8854914960615437E-5	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.9998039972598748	WITHOUT_CLASSIFICATION	1.960027401251468E-4	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.9995763146146671	WITHOUT_CLASSIFICATION	4.236853853330042E-4	DOCUMENTATION
//SQL statements	WITHOUT_CLASSIFICATION	0.9998614189533785	WITHOUT_CLASSIFICATION	1.3858104662143887E-4	DOCUMENTATION
//extra information about the element type	WITHOUT_CLASSIFICATION	0.9999803107530324	WITHOUT_CLASSIFICATION	1.968924696758461E-5	DOCUMENTATION
//types	WITHOUT_CLASSIFICATION	0.9995181089118483	WITHOUT_CLASSIFICATION	4.818910881516929E-4	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999665924023764	WITHOUT_CLASSIFICATION	3.340759762360368E-5	DOCUMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9999742685068866	WITHOUT_CLASSIFICATION	2.5731493113407825E-5	DOCUMENTATION
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999987532604988	WITHOUT_CLASSIFICATION	1.2467395011914691E-6	DOCUMENTATION
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999971504948973	WITHOUT_CLASSIFICATION	2.8495051026530917E-6	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999951566115338	WITHOUT_CLASSIFICATION	4.84338846622778E-6	DOCUMENTATION
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9999898675702084	WITHOUT_CLASSIFICATION	1.0132429791580725E-5	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.9981841138243945	WITHOUT_CLASSIFICATION	0.0018158861756055085	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.999989386326183	WITHOUT_CLASSIFICATION	1.0613673817176744E-5	DOCUMENTATION
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9998750877563242	WITHOUT_CLASSIFICATION	1.2491224367586692E-4	DOCUMENTATION
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999964907567038	WITHOUT_CLASSIFICATION	3.5092432963097004E-6	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.9999709770277511	WITHOUT_CLASSIFICATION	2.9022972249062208E-5	DOCUMENTATION
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.9999486989490916	WITHOUT_CLASSIFICATION	5.1301050908466017E-5	DOCUMENTATION
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.9994426106196064	WITHOUT_CLASSIFICATION	5.573893803935149E-4	DOCUMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.999998161723158	WITHOUT_CLASSIFICATION	1.8382768420318928E-6	DOCUMENTATION
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9999753568410501	WITHOUT_CLASSIFICATION	2.4643158949879295E-5	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9999984961384307	WITHOUT_CLASSIFICATION	1.5038615691690103E-6	DOCUMENTATION
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9999986141391626	WITHOUT_CLASSIFICATION	1.3858608373680418E-6	DOCUMENTATION
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.9999930571710837	WITHOUT_CLASSIFICATION	6.942828916311946E-6	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9999934239898298	WITHOUT_CLASSIFICATION	6.57601017010714E-6	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.9999742630092531	WITHOUT_CLASSIFICATION	2.5736990746816743E-5	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999921039584794	WITHOUT_CLASSIFICATION	7.896041520570624E-6	DOCUMENTATION
//needed by arrays	WITHOUT_CLASSIFICATION	0.9999156232145416	WITHOUT_CLASSIFICATION	8.437678545839763E-5	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9999786737968747	WITHOUT_CLASSIFICATION	2.1326203125358475E-5	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9999509856765897	WITHOUT_CLASSIFICATION	4.9014323410298544E-5	DOCUMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.9999961883485188	WITHOUT_CLASSIFICATION	3.8116514813016216E-6	DOCUMENTATION
//create all the new entries	WITHOUT_CLASSIFICATION	0.9999769724638873	WITHOUT_CLASSIFICATION	2.3027536112652405E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999779935233692	WITHOUT_CLASSIFICATION	2.200647663079335E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999779935233692	WITHOUT_CLASSIFICATION	2.200647663079335E-5	DOCUMENTATION
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999709122087055	WITHOUT_CLASSIFICATION	2.9087791294606623E-5	DOCUMENTATION
//insert all the new entries	WITHOUT_CLASSIFICATION	0.9999763289695544	WITHOUT_CLASSIFICATION	2.3671030445652866E-5	DOCUMENTATION
//==elementType ??	WITHOUT_CLASSIFICATION	0.9998525764981305	WITHOUT_CLASSIFICATION	1.4742350186940046E-4	DOCUMENTATION
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999814522999069	WITHOUT_CLASSIFICATION	1.8547700093100612E-5	DOCUMENTATION
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9999879112342901	WITHOUT_CLASSIFICATION	1.2088765709864575E-5	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.9999962118767739	WITHOUT_CLASSIFICATION	3.788123226142335E-6	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999952272649575	WITHOUT_CLASSIFICATION	4.772735042475366E-6	DOCUMENTATION
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.9999965421375542	WITHOUT_CLASSIFICATION	3.457862445814219E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.999983893101182	WITHOUT_CLASSIFICATION	1.6106898817985837E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999971556002009	WITHOUT_CLASSIFICATION	2.8443997992128412E-6	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.999974014847142	WITHOUT_CLASSIFICATION	2.5985152857982436E-5	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9984032873353681	WITHOUT_CLASSIFICATION	0.0015967126646319032	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9997421861235278	WITHOUT_CLASSIFICATION	2.578138764721491E-4	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999971556002009	WITHOUT_CLASSIFICATION	2.8443997992128412E-6	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.999968076831984	WITHOUT_CLASSIFICATION	3.192316801604855E-5	DOCUMENTATION
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9999973508184763	WITHOUT_CLASSIFICATION	2.649181523646664E-6	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999759936344588	WITHOUT_CLASSIFICATION	2.4006365541239574E-5	DOCUMENTATION
//TODO: check this....	WITHOUT_CLASSIFICATION	0.9998882892839328	WITHOUT_CLASSIFICATION	1.117107160671185E-4	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9984032873353681	WITHOUT_CLASSIFICATION	0.0015967126646319032	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.999997747021126	WITHOUT_CLASSIFICATION	2.2529788738970136E-6	DOCUMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999984223157523	WITHOUT_CLASSIFICATION	1.577684247610921E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999986113689989	WITHOUT_CLASSIFICATION	1.3886310010743554E-6	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999995293116946	WITHOUT_CLASSIFICATION	4.706883054582998E-7	DOCUMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9984244495997397	WITHOUT_CLASSIFICATION	0.0015755504002602386	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999666460705272	WITHOUT_CLASSIFICATION	3.335392947284744E-5	DOCUMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999958943415984	WITHOUT_CLASSIFICATION	4.105658401639528E-6	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.99987518509732	WITHOUT_CLASSIFICATION	1.2481490267997057E-4	DOCUMENTATION
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999728535484009	WITHOUT_CLASSIFICATION	2.7146451598990178E-5	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999834910631306	WITHOUT_CLASSIFICATION	1.6508936869486834E-5	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999991892551323	WITHOUT_CLASSIFICATION	8.107448676467211E-7	DOCUMENTATION
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.999998474294726	WITHOUT_CLASSIFICATION	1.5257052740274283E-6	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999971556002009	WITHOUT_CLASSIFICATION	2.8443997992128412E-6	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.999997747021126	WITHOUT_CLASSIFICATION	2.2529788738970136E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999986113689989	WITHOUT_CLASSIFICATION	1.3886310010743554E-6	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999597953640623	WITHOUT_CLASSIFICATION	4.020463593757938E-5	DOCUMENTATION
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999980034974155	WITHOUT_CLASSIFICATION	1.9965025845210298E-6	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999876939985601	WITHOUT_CLASSIFICATION	1.2306001439870674E-5	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9984032873353681	WITHOUT_CLASSIFICATION	0.0015967126646319032	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9999895648738854	WITHOUT_CLASSIFICATION	1.0435126114647433E-5	DOCUMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9998963398872915	WITHOUT_CLASSIFICATION	1.0366011270849668E-4	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.9998805664403554	WITHOUT_CLASSIFICATION	1.1943355964473399E-4	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9998717072919096	WITHOUT_CLASSIFICATION	1.2829270809043423E-4	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.99987518509732	WITHOUT_CLASSIFICATION	1.2481490267997057E-4	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.999968076831984	WITHOUT_CLASSIFICATION	3.192316801604855E-5	DOCUMENTATION
// JOINS	WITHOUT_CLASSIFICATION	0.9998506495884969	WITHOUT_CLASSIFICATION	1.4935041150307974E-4	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9999774521530832	WITHOUT_CLASSIFICATION	2.2547846916819735E-5	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9999110631036073	WITHOUT_CLASSIFICATION	8.893689639258912E-5	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9999831857811057	WITHOUT_CLASSIFICATION	1.681421889428465E-5	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9999805433199465	WITHOUT_CLASSIFICATION	1.9456680053474066E-5	DOCUMENTATION
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9999826906386291	WITHOUT_CLASSIFICATION	1.73093613709004E-5	DOCUMENTATION
//render the SQL	WITHOUT_CLASSIFICATION	0.9999062149486021	WITHOUT_CLASSIFICATION	9.378505139791423E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999967534099244	WITHOUT_CLASSIFICATION	3.246590075606741E-6	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999966347888246	WITHOUT_CLASSIFICATION	3.365211175411053E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996916585881975	WITHOUT_CLASSIFICATION	3.0834141180239926E-4	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999984349116818	WITHOUT_CLASSIFICATION	1.5650883181388226E-6	DOCUMENTATION
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999925565664863	WITHOUT_CLASSIFICATION	7.443433513655957E-6	DOCUMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999934564345104	WITHOUT_CLASSIFICATION	6.543565489580693E-6	DOCUMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999924602046156	WITHOUT_CLASSIFICATION	7.539795384296518E-6	DOCUMENTATION
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999985927936534	WITHOUT_CLASSIFICATION	1.4072063465060471E-6	DOCUMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.9999826463124518	WITHOUT_CLASSIFICATION	1.73536875482178E-5	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999952233797103	WITHOUT_CLASSIFICATION	4.776620289772499E-6	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9998717072919096	WITHOUT_CLASSIFICATION	1.2829270809043423E-4	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996916585881975	WITHOUT_CLASSIFICATION	3.0834141180239926E-4	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9998521412395726	WITHOUT_CLASSIFICATION	1.4785876042743443E-4	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.9998628321513165	WITHOUT_CLASSIFICATION	1.371678486834877E-4	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.9994337572555537	WITHOUT_CLASSIFICATION	5.662427444463915E-4	DOCUMENTATION
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9998890947474658	WITHOUT_CLASSIFICATION	1.1090525253418685E-4	DOCUMENTATION
//before add :-)	WITHOUT_CLASSIFICATION	0.9998355034093389	WITHOUT_CLASSIFICATION	1.6449659066119856E-4	DOCUMENTATION
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999988711072215	WITHOUT_CLASSIFICATION	1.1288927785436551E-6	DOCUMENTATION
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999945805638821	WITHOUT_CLASSIFICATION	5.419436117836473E-6	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.9999591414702698	WITHOUT_CLASSIFICATION	4.085852973024135E-5	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.999998290818108	WITHOUT_CLASSIFICATION	1.7091818919970632E-6	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9999972784014199	WITHOUT_CLASSIFICATION	2.7215985801485245E-6	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9999742118956767	WITHOUT_CLASSIFICATION	2.578810432327687E-5	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999739931167373	WITHOUT_CLASSIFICATION	2.6006883262666974E-5	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9999942806492076	WITHOUT_CLASSIFICATION	5.719350792395124E-6	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9998745580136293	WITHOUT_CLASSIFICATION	1.2544198637075353E-4	DOCUMENTATION
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.9999933831118853	WITHOUT_CLASSIFICATION	6.616888114554427E-6	DOCUMENTATION
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999922827879293	WITHOUT_CLASSIFICATION	7.717212070769581E-6	DOCUMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9999958124092087	WITHOUT_CLASSIFICATION	4.18759079142702E-6	DOCUMENTATION
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999967280688353	WITHOUT_CLASSIFICATION	3.2719311647283792E-6	DOCUMENTATION
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999980623615633	WITHOUT_CLASSIFICATION	1.9376384368015803E-6	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9999784228456866	WITHOUT_CLASSIFICATION	2.1577154313460366E-5	DOCUMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9998560662614138	WITHOUT_CLASSIFICATION	1.439337385862034E-4	DOCUMENTATION
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.9999866640376702	WITHOUT_CLASSIFICATION	1.3335962329826525E-5	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999962821180969	WITHOUT_CLASSIFICATION	3.717881903034113E-6	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999974868214195	WITHOUT_CLASSIFICATION	2.513178580467675E-6	DOCUMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999948937211416	WITHOUT_CLASSIFICATION	5.106278858427302E-6	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.9999821899709043	WITHOUT_CLASSIFICATION	1.7810029095806402E-5	DOCUMENTATION
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9999898891327766	WITHOUT_CLASSIFICATION	1.0110867223293416E-5	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9999915174977125	WITHOUT_CLASSIFICATION	8.48250228755865E-6	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.999996720338792	WITHOUT_CLASSIFICATION	3.2796612080271694E-6	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.999934344587155	WITHOUT_CLASSIFICATION	6.565541284499253E-5	DOCUMENTATION
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999987379515956	WITHOUT_CLASSIFICATION	1.2620484044432818E-6	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999993470072415	WITHOUT_CLASSIFICATION	6.529927584927916E-7	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999980650929997	WITHOUT_CLASSIFICATION	1.9349070003504445E-6	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999975783254768	WITHOUT_CLASSIFICATION	2.42167452321466E-6	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999974328220017	WITHOUT_CLASSIFICATION	2.5671779982948003E-6	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999949454874615	WITHOUT_CLASSIFICATION	5.054512538462558E-6	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.999994478150528	WITHOUT_CLASSIFICATION	5.52184947198276E-6	DOCUMENTATION
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999992385539596	WITHOUT_CLASSIFICATION	7.614460404737582E-7	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999949454874615	WITHOUT_CLASSIFICATION	5.054512538462558E-6	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999974328220017	WITHOUT_CLASSIFICATION	2.5671779982948003E-6	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.999994478150528	WITHOUT_CLASSIFICATION	5.52184947198276E-6	DOCUMENTATION
// add the primary key	WITHOUT_CLASSIFICATION	0.9999901892904764	WITHOUT_CLASSIFICATION	9.81070952362103E-6	DOCUMENTATION
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999967221734785	WITHOUT_CLASSIFICATION	3.2778265215432773E-6	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999997192823342	WITHOUT_CLASSIFICATION	2.807176658383369E-7	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.999985118147988	WITHOUT_CLASSIFICATION	1.4881852012093961E-5	DOCUMENTATION
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999996945444846	WITHOUT_CLASSIFICATION	3.0545551541386286E-7	DOCUMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9999975562910198	WITHOUT_CLASSIFICATION	2.4437089802485215E-6	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.9999830149485124	WITHOUT_CLASSIFICATION	1.6985051487570457E-5	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999819955778433	WITHOUT_CLASSIFICATION	1.8004422156815895E-5	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.9999936745422303	WITHOUT_CLASSIFICATION	6.325457769643427E-6	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.999987897369551	WITHOUT_CLASSIFICATION	1.2102630449068065E-5	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999933832868897	WITHOUT_CLASSIFICATION	6.61671311038025E-6	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999942016366613	WITHOUT_CLASSIFICATION	5.798363338708296E-6	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999959875101946	WITHOUT_CLASSIFICATION	4.012489805436422E-6	DOCUMENTATION
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9999230073226952	WITHOUT_CLASSIFICATION	7.699267730479836E-5	DOCUMENTATION
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999985583949262	WITHOUT_CLASSIFICATION	1.4416050737478369E-6	DOCUMENTATION
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999950134833812	WITHOUT_CLASSIFICATION	4.986516618944461E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999995733801852	WITHOUT_CLASSIFICATION	4.2661981483003766E-7	DOCUMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9999815626647823	WITHOUT_CLASSIFICATION	1.843733521758471E-5	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999996235486457	WITHOUT_CLASSIFICATION	3.764513542753884E-7	DOCUMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.999995991135802	WITHOUT_CLASSIFICATION	4.008864198057909E-6	DOCUMENTATION
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.9999972565758403	WITHOUT_CLASSIFICATION	2.7434241595924275E-6	DOCUMENTATION
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.999997116744219	WITHOUT_CLASSIFICATION	2.8832557811064754E-6	DOCUMENTATION
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.9999939770229517	WITHOUT_CLASSIFICATION	6.022977048343714E-6	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999930716661747	WITHOUT_CLASSIFICATION	6.928333825300972E-6	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999965811510226	WITHOUT_CLASSIFICATION	3.418848977468518E-6	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999965811510226	WITHOUT_CLASSIFICATION	3.418848977468518E-6	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999970730725694	WITHOUT_CLASSIFICATION	2.9269274305760134E-6	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999970730725694	WITHOUT_CLASSIFICATION	2.9269274305760134E-6	DOCUMENTATION
// not supported	WITHOUT_CLASSIFICATION	0.999980919961258	WITHOUT_CLASSIFICATION	1.908003874191189E-5	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999995733801852	WITHOUT_CLASSIFICATION	4.2661981483003766E-7	DOCUMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.9999934915876634	WITHOUT_CLASSIFICATION	6.508412336574047E-6	DOCUMENTATION
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999980605996801	WITHOUT_CLASSIFICATION	1.939400319874957E-6	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9998989839216069	WITHOUT_CLASSIFICATION	1.0101607839311957E-4	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9998989839216069	WITHOUT_CLASSIFICATION	1.0101607839311957E-4	DOCUMENTATION
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999898309611751	WITHOUT_CLASSIFICATION	1.0169038824758938E-5	DOCUMENTATION
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.999991350273538	WITHOUT_CLASSIFICATION	8.649726462038337E-6	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9999935755949916	WITHOUT_CLASSIFICATION	6.424405008490709E-6	DOCUMENTATION
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999809139435649	WITHOUT_CLASSIFICATION	1.9086056435180046E-5	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.999974877229169	WITHOUT_CLASSIFICATION	2.5122770831008314E-5	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.999999923096381	WITHOUT_CLASSIFICATION	7.690361897931205E-8	DOCUMENTATION
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9999349040202049	WITHOUT_CLASSIFICATION	6.509597979507984E-5	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9999968704568211	WITHOUT_CLASSIFICATION	3.1295431788986765E-6	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9999494236838143	WITHOUT_CLASSIFICATION	5.057631618562155E-5	DOCUMENTATION
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999973771243181	WITHOUT_CLASSIFICATION	2.6228756817993214E-6	DOCUMENTATION
//now render the select clause	WITHOUT_CLASSIFICATION	0.9999784600822685	WITHOUT_CLASSIFICATION	2.1539917731459744E-5	DOCUMENTATION
//now tie it all together	WITHOUT_CLASSIFICATION	0.9999735278147438	WITHOUT_CLASSIFICATION	2.6472185256161482E-5	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999719936254211	WITHOUT_CLASSIFICATION	2.8006374578861634E-5	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9998884550792276	WITHOUT_CLASSIFICATION	1.1154492077231922E-4	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.9999858511564028	WITHOUT_CLASSIFICATION	1.4148843597171992E-5	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999960483500548	WITHOUT_CLASSIFICATION	3.951649945222463E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999684145684992	WITHOUT_CLASSIFICATION	3.158543150085434E-5	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999988869924478	WITHOUT_CLASSIFICATION	1.1130075522119908E-6	DOCUMENTATION
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9999993039675197	WITHOUT_CLASSIFICATION	6.960324803116845E-7	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999987698522848	WITHOUT_CLASSIFICATION	1.2301477153044313E-6	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.9999992191984001	WITHOUT_CLASSIFICATION	7.808015999350146E-7	DOCUMENTATION
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999987059551928	WITHOUT_CLASSIFICATION	1.2940448072587464E-6	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999976932000009	WITHOUT_CLASSIFICATION	2.306799999048655E-6	DOCUMENTATION
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999986701863953	WITHOUT_CLASSIFICATION	1.3298136045901875E-6	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9976536163931664	WITHOUT_CLASSIFICATION	0.0023463836068335644	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.999989271039208	WITHOUT_CLASSIFICATION	1.0728960792109209E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996916585881975	WITHOUT_CLASSIFICATION	3.0834141180239926E-4	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999739931167373	WITHOUT_CLASSIFICATION	2.6006883262666974E-5	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999854512522348	WITHOUT_CLASSIFICATION	1.4548747765215101E-5	DOCUMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.9999988328462605	WITHOUT_CLASSIFICATION	1.1671537395164428E-6	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999637350507655	WITHOUT_CLASSIFICATION	3.6264949234519306E-5	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999895268806435	WITHOUT_CLASSIFICATION	1.047311935648398E-5	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9997959486292419	WITHOUT_CLASSIFICATION	2.0405137075818464E-4	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9997959486292419	WITHOUT_CLASSIFICATION	2.0405137075818464E-4	DOCUMENTATION
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999973479809281	WITHOUT_CLASSIFICATION	2.6520190719403116E-6	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999623901220411	WITHOUT_CLASSIFICATION	3.760987795891329E-5	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999767787079318	WITHOUT_CLASSIFICATION	2.3221292068181282E-5	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999767787079318	WITHOUT_CLASSIFICATION	2.3221292068181282E-5	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999913020552541	WITHOUT_CLASSIFICATION	8.69794474589348E-6	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9999966934827437	WITHOUT_CLASSIFICATION	3.3065172563868763E-6	DOCUMENTATION
// do not do anything	WITHOUT_CLASSIFICATION	0.9999725689100437	WITHOUT_CLASSIFICATION	2.743108995628889E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999787217927532	WITHOUT_CLASSIFICATION	2.1278207246851078E-5	DOCUMENTATION
//cant instantiate	WITHOUT_CLASSIFICATION	0.9999430723503809	WITHOUT_CLASSIFICATION	5.692764961899912E-5	DOCUMENTATION
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999890067039661	WITHOUT_CLASSIFICATION	1.0993296033859559E-5	DOCUMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9999858537098851	WITHOUT_CLASSIFICATION	1.414629011489497E-5	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999971419821022	WITHOUT_CLASSIFICATION	2.858017897740511E-6	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999985368298182	WITHOUT_CLASSIFICATION	1.4631701817653385E-6	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999985368298182	WITHOUT_CLASSIFICATION	1.4631701817653385E-6	DOCUMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999996918884307	WITHOUT_CLASSIFICATION	3.0811156926666667E-7	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999954736893617	WITHOUT_CLASSIFICATION	4.526310638383824E-6	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999954736893617	WITHOUT_CLASSIFICATION	4.526310638383824E-6	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999985954919849	WITHOUT_CLASSIFICATION	1.40450801514648E-6	DOCUMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999887489612794	WITHOUT_CLASSIFICATION	1.1251038720544984E-5	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9977905489849103	WITHOUT_CLASSIFICATION	0.0022094510150897214	DOCUMENTATION
// Get the caller	WITHOUT_CLASSIFICATION	0.9999881445672713	WITHOUT_CLASSIFICATION	1.1855432728720357E-5	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999960043594431	WITHOUT_CLASSIFICATION	3.995640556890348E-6	DOCUMENTATION
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999965621171859	WITHOUT_CLASSIFICATION	3.437882814113955E-6	DOCUMENTATION
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999987176365407	WITHOUT_CLASSIFICATION	1.2823634593877466E-6	DOCUMENTATION
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9999764657092403	WITHOUT_CLASSIFICATION	2.353429075979569E-5	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9999934561264342	WITHOUT_CLASSIFICATION	6.543873565765495E-6	DOCUMENTATION
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.99997989204049	WITHOUT_CLASSIFICATION	2.01079595100561E-5	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999989871285888	WITHOUT_CLASSIFICATION	1.0128714111327206E-6	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.9999975888366476	WITHOUT_CLASSIFICATION	2.4111633524677603E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9984698394265005	WITHOUT_CLASSIFICATION	0.0015301605734995606	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9984698394265005	WITHOUT_CLASSIFICATION	0.0015301605734995606	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9984698394265005	WITHOUT_CLASSIFICATION	0.0015301605734995606	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9984698394265005	WITHOUT_CLASSIFICATION	0.0015301605734995606	DOCUMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999955247235842	WITHOUT_CLASSIFICATION	4.475276415722584E-6	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.999998526327271	WITHOUT_CLASSIFICATION	1.4736727290178684E-6	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9997155578810032	WITHOUT_CLASSIFICATION	2.8444211899685093E-4	DOCUMENTATION
//for MySQL	WITHOUT_CLASSIFICATION	0.9995739536214776	WITHOUT_CLASSIFICATION	4.2604637852243255E-4	DOCUMENTATION
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9999708328473164	WITHOUT_CLASSIFICATION	2.91671526836215E-5	DOCUMENTATION
//null caused some problems	WITHOUT_CLASSIFICATION	0.9999598351940179	WITHOUT_CLASSIFICATION	4.016480598209867E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996951543319008	WITHOUT_CLASSIFICATION	3.048456680991314E-4	DOCUMENTATION
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999869974569394	WITHOUT_CLASSIFICATION	1.3002543060685707E-5	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999354045167405	WITHOUT_CLASSIFICATION	6.459548325956759E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996951543319008	WITHOUT_CLASSIFICATION	3.048456680991314E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996951543319008	WITHOUT_CLASSIFICATION	3.048456680991314E-4	DOCUMENTATION
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.999998297236608	WITHOUT_CLASSIFICATION	1.702763391932855E-6	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9999956477263733	WITHOUT_CLASSIFICATION	4.352273626752214E-6	DOCUMENTATION
// deprecated option...	WITHOUT_CLASSIFICATION	0.9999910625012775	WITHOUT_CLASSIFICATION	8.93749872252329E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.999986921443363	WITHOUT_CLASSIFICATION	1.3078556637025141E-5	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999952194426887	WITHOUT_CLASSIFICATION	4.780557311318616E-6	DOCUMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999981064503981	WITHOUT_CLASSIFICATION	1.8935496018559344E-6	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999969409972306	WITHOUT_CLASSIFICATION	3.059002769478606E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.999986921443363	WITHOUT_CLASSIFICATION	1.3078556637025141E-5	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9999966632105719	WITHOUT_CLASSIFICATION	3.3367894280806665E-6	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999981436893799	WITHOUT_CLASSIFICATION	1.8563106200735668E-6	DOCUMENTATION
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999994435399094	WITHOUT_CLASSIFICATION	5.564600906076633E-7	DOCUMENTATION
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999982089386031	WITHOUT_CLASSIFICATION	1.791061396886754E-6	DOCUMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.999999129311163	WITHOUT_CLASSIFICATION	8.706888370076315E-7	DOCUMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.999997495039407	WITHOUT_CLASSIFICATION	2.5049605929260496E-6	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999992593828352	WITHOUT_CLASSIFICATION	7.406171648734987E-7	DOCUMENTATION
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9999910866224374	WITHOUT_CLASSIFICATION	8.913377562675693E-6	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999987161524694	WITHOUT_CLASSIFICATION	1.283847530646138E-6	DOCUMENTATION
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999946066511874	WITHOUT_CLASSIFICATION	5.393348812496578E-6	DOCUMENTATION
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999982737365218	WITHOUT_CLASSIFICATION	1.7262634780564162E-6	DOCUMENTATION
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999958026750638	WITHOUT_CLASSIFICATION	4.197324936134761E-6	DOCUMENTATION
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9999959844736884	WITHOUT_CLASSIFICATION	4.015526311652774E-6	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.999958938477631	WITHOUT_CLASSIFICATION	4.106152236904296E-5	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999987741970942	WITHOUT_CLASSIFICATION	1.2258029058707355E-6	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.999997337410136	WITHOUT_CLASSIFICATION	2.662589864033772E-6	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999992938878419	WITHOUT_CLASSIFICATION	7.061121581449267E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999955231380128	WITHOUT_CLASSIFICATION	4.476861987228761E-6	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999988309795986	WITHOUT_CLASSIFICATION	1.169020401425635E-6	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.9999955231380128	WITHOUT_CLASSIFICATION	4.476861987228761E-6	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.999998304243338	WITHOUT_CLASSIFICATION	1.6957566620280358E-6	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999984601712911	WITHOUT_CLASSIFICATION	1.5398287088847998E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9999890677453114	WITHOUT_CLASSIFICATION	1.0932254688659097E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999714098161899	WITHOUT_CLASSIFICATION	2.859018381004303E-5	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999992938878419	WITHOUT_CLASSIFICATION	7.061121581449267E-7	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999988309795986	WITHOUT_CLASSIFICATION	1.169020401425635E-6	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.999998304243338	WITHOUT_CLASSIFICATION	1.6957566620280358E-6	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999981708700483	WITHOUT_CLASSIFICATION	1.8291299516859596E-6	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9997751889575716	WITHOUT_CLASSIFICATION	2.2481104242849404E-4	DOCUMENTATION
//reset the id	WITHOUT_CLASSIFICATION	0.9999485766667625	WITHOUT_CLASSIFICATION	5.142333323736514E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.9999730463573534	WITHOUT_CLASSIFICATION	2.6953642646608185E-5	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9999991860043408	WITHOUT_CLASSIFICATION	8.139956591981392E-7	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.999996659277013	WITHOUT_CLASSIFICATION	3.3407229870552267E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999684145684992	WITHOUT_CLASSIFICATION	3.158543150085434E-5	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999984601712911	WITHOUT_CLASSIFICATION	1.5398287088847998E-6	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9999975978007526	WITHOUT_CLASSIFICATION	2.4021992473900036E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9999918402354835	WITHOUT_CLASSIFICATION	8.159764516616383E-6	DOCUMENTATION
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999932576728493	WITHOUT_CLASSIFICATION	6.742327150650259E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999684145684992	WITHOUT_CLASSIFICATION	3.158543150085434E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996916585881975	WITHOUT_CLASSIFICATION	3.0834141180239926E-4	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.999993191099858	WITHOUT_CLASSIFICATION	6.8089001420287526E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999684145684992	WITHOUT_CLASSIFICATION	3.158543150085434E-5	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999987713264704	WITHOUT_CLASSIFICATION	1.228673529632207E-6	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999942162476066	WITHOUT_CLASSIFICATION	5.783752393337355E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996916585881975	WITHOUT_CLASSIFICATION	3.0834141180239926E-4	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.9999781132424649	WITHOUT_CLASSIFICATION	2.1886757535160604E-5	DOCUMENTATION
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999981519035139	WITHOUT_CLASSIFICATION	1.8480964860409361E-6	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999984890468376	WITHOUT_CLASSIFICATION	1.5109531623473425E-6	DOCUMENTATION
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999944630282012	WITHOUT_CLASSIFICATION	5.536971798737669E-6	DOCUMENTATION
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999979204205814	WITHOUT_CLASSIFICATION	2.0795794184741594E-6	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999715291292836	WITHOUT_CLASSIFICATION	2.8470870716375733E-5	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.9999749898002308	WITHOUT_CLASSIFICATION	2.5010199769228418E-5	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9999745043345556	WITHOUT_CLASSIFICATION	2.5495665444328457E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9993642691721747	WITHOUT_CLASSIFICATION	6.357308278253474E-4	DOCUMENTATION
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999990393565169	WITHOUT_CLASSIFICATION	9.606434831198317E-7	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9977905489849103	WITHOUT_CLASSIFICATION	0.0022094510150897214	DOCUMENTATION
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9999553802497481	WITHOUT_CLASSIFICATION	4.461975025189568E-5	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9999944176001835	WITHOUT_CLASSIFICATION	5.582399816480978E-6	DOCUMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9999655746034182	WITHOUT_CLASSIFICATION	3.442539658182468E-5	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9998966226027796	WITHOUT_CLASSIFICATION	1.03377397220468E-4	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999976226240362	WITHOUT_CLASSIFICATION	2.377375963710379E-6	DOCUMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.999997282462605	WITHOUT_CLASSIFICATION	2.7175373949054055E-6	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.999999150847217	WITHOUT_CLASSIFICATION	8.491527830612298E-7	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9999765280679528	WITHOUT_CLASSIFICATION	2.347193204723887E-5	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.9999982387763418	WITHOUT_CLASSIFICATION	1.7612236581622007E-6	DOCUMENTATION
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999898118295415	WITHOUT_CLASSIFICATION	1.0188170458373377E-5	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.9977914751973249	WITHOUT_CLASSIFICATION	0.0022085248026751836	DOCUMENTATION
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999933401820534	WITHOUT_CLASSIFICATION	6.659817946558491E-6	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999918255258948	WITHOUT_CLASSIFICATION	8.174474105215438E-6	DOCUMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999906164968746	WITHOUT_CLASSIFICATION	9.383503125480419E-6	DOCUMENTATION
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999863334876298	WITHOUT_CLASSIFICATION	1.3666512370106848E-5	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9989463740046916	WITHOUT_CLASSIFICATION	0.0010536259953084575	DOCUMENTATION
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9999989406961327	WITHOUT_CLASSIFICATION	1.0593038672421459E-6	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.999994319439272	WITHOUT_CLASSIFICATION	5.680560728066856E-6	DOCUMENTATION
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999948237503002	WITHOUT_CLASSIFICATION	5.176249699801532E-6	DOCUMENTATION
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9998682149747122	WITHOUT_CLASSIFICATION	1.3178502528768927E-4	DOCUMENTATION
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9999797530657397	WITHOUT_CLASSIFICATION	2.0246934260231165E-5	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9976420273268173	WITHOUT_CLASSIFICATION	0.002357972673182653	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.999980783235937	WITHOUT_CLASSIFICATION	1.921676406305876E-5	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999145462213078	WITHOUT_CLASSIFICATION	8.545377869212075E-5	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9999380404561696	WITHOUT_CLASSIFICATION	6.195954383038144E-5	DOCUMENTATION
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9999682922489369	WITHOUT_CLASSIFICATION	3.170775106309325E-5	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999956433747986	WITHOUT_CLASSIFICATION	4.356625201471889E-6	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9977142549067741	WITHOUT_CLASSIFICATION	0.0022857450932259513	DOCUMENTATION
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999956212399955	WITHOUT_CLASSIFICATION	4.378760004473229E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996916585881975	WITHOUT_CLASSIFICATION	3.0834141180239926E-4	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999938131162537	WITHOUT_CLASSIFICATION	6.1868837463723075E-6	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9998298056219518	WITHOUT_CLASSIFICATION	1.701943780481941E-4	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9998298056219518	WITHOUT_CLASSIFICATION	1.701943780481941E-4	DOCUMENTATION
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999993235117416	WITHOUT_CLASSIFICATION	6.76488258479655E-7	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999715291292836	WITHOUT_CLASSIFICATION	2.8470870716375733E-5	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9999757049870202	WITHOUT_CLASSIFICATION	2.429501297986526E-5	DOCUMENTATION
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999889398103661	WITHOUT_CLASSIFICATION	1.1060189633908439E-5	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999985441303493	WITHOUT_CLASSIFICATION	1.4558696507210166E-6	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999972339202714	WITHOUT_CLASSIFICATION	2.76607972855315E-6	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9999444789020107	WITHOUT_CLASSIFICATION	5.5521097989337773E-5	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9979985089117539	WITHOUT_CLASSIFICATION	0.0020014910882460942	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.999986342290409	WITHOUT_CLASSIFICATION	1.3657709591069002E-5	DOCUMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.999996588981393	WITHOUT_CLASSIFICATION	3.4110186069190333E-6	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.999995246675052	WITHOUT_CLASSIFICATION	4.753324948026926E-6	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.9999905800486054	WITHOUT_CLASSIFICATION	9.419951394607887E-6	DOCUMENTATION
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999980427794665	WITHOUT_CLASSIFICATION	1.9572205334458857E-6	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999950778907304	WITHOUT_CLASSIFICATION	4.92210926967786E-6	DOCUMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.999997313550994	WITHOUT_CLASSIFICATION	2.6864490060736177E-6	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999980318811872	WITHOUT_CLASSIFICATION	1.9681188127747966E-6	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999818239797187	WITHOUT_CLASSIFICATION	1.8176020281270583E-5	DOCUMENTATION
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999984629975097	WITHOUT_CLASSIFICATION	1.5370024903348603E-6	DOCUMENTATION
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999982157148317	WITHOUT_CLASSIFICATION	1.7842851683618791E-6	DOCUMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9999991977044806	WITHOUT_CLASSIFICATION	8.022955192665929E-7	DOCUMENTATION
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.9999981673215724	WITHOUT_CLASSIFICATION	1.8326784276283846E-6	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999972869542708	WITHOUT_CLASSIFICATION	2.713045729243065E-6	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9999990819713818	WITHOUT_CLASSIFICATION	9.180286183001134E-7	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999991070164221	WITHOUT_CLASSIFICATION	8.929835779086696E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9977142549067741	WITHOUT_CLASSIFICATION	0.0022857450932259513	DOCUMENTATION
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999981674699553	WITHOUT_CLASSIFICATION	1.8325300447231653E-6	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999980221253089	WITHOUT_CLASSIFICATION	1.977874691051422E-6	DOCUMENTATION
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.9999981881984208	WITHOUT_CLASSIFICATION	1.8118015791760682E-6	DOCUMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999857396232256	WITHOUT_CLASSIFICATION	1.4260376774371086E-5	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.999994004973693	WITHOUT_CLASSIFICATION	5.99502630705689E-6	DOCUMENTATION
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999991730097948	WITHOUT_CLASSIFICATION	8.269902051265003E-7	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9999824049208735	WITHOUT_CLASSIFICATION	1.7595079126476804E-5	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999774135703887	WITHOUT_CLASSIFICATION	2.2586429611221228E-5	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999919708117305	WITHOUT_CLASSIFICATION	8.029188269408275E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999924070825889	WITHOUT_CLASSIFICATION	7.592917411119771E-6	DOCUMENTATION
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999973735488843	WITHOUT_CLASSIFICATION	2.6264511157075224E-6	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999985132530352	WITHOUT_CLASSIFICATION	1.4867469648296529E-6	DOCUMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.999983112885487	WITHOUT_CLASSIFICATION	1.688711451289845E-5	DOCUMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999993643023972	WITHOUT_CLASSIFICATION	6.356976027253551E-7	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999996346464096	WITHOUT_CLASSIFICATION	3.6535359048495667E-7	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.9999996346464096	WITHOUT_CLASSIFICATION	3.6535359048495667E-7	DOCUMENTATION
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999877993711414	WITHOUT_CLASSIFICATION	1.2200628858581762E-5	DOCUMENTATION
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.9999895686616528	WITHOUT_CLASSIFICATION	1.043133834720561E-5	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999888696003243	WITHOUT_CLASSIFICATION	1.1130399675640625E-5	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999888696003243	WITHOUT_CLASSIFICATION	1.1130399675640625E-5	DOCUMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999939073553346	WITHOUT_CLASSIFICATION	6.0926446654341955E-6	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.9999145822860138	WITHOUT_CLASSIFICATION	8.541771398613501E-5	DOCUMENTATION
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.9999988529613019	WITHOUT_CLASSIFICATION	1.147038698176811E-6	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999987417590118	WITHOUT_CLASSIFICATION	1.2582409881527318E-6	DOCUMENTATION
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999507802172615	WITHOUT_CLASSIFICATION	4.921978273840671E-5	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999798359973994	WITHOUT_CLASSIFICATION	2.0164002600624288E-5	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999987537917069	WITHOUT_CLASSIFICATION	1.246208293141114E-6	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999987537917069	WITHOUT_CLASSIFICATION	1.246208293141114E-6	DOCUMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999855305332932	WITHOUT_CLASSIFICATION	1.4469466706759608E-5	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9999981499356092	WITHOUT_CLASSIFICATION	1.8500643907913112E-6	DOCUMENTATION
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9998631249501092	WITHOUT_CLASSIFICATION	1.3687504989077587E-4	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999848199754598	WITHOUT_CLASSIFICATION	1.5180024540192168E-5	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.9999848199754598	WITHOUT_CLASSIFICATION	1.5180024540192168E-5	DOCUMENTATION
// includes last '.'	WITHOUT_CLASSIFICATION	0.999995552735049	WITHOUT_CLASSIFICATION	4.447264950975646E-6	DOCUMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.9999951639502366	WITHOUT_CLASSIFICATION	4.8360497634081176E-6	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.999999451488671	WITHOUT_CLASSIFICATION	5.485113290043511E-7	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999945984847277	WITHOUT_CLASSIFICATION	5.4015152723519695E-6	DOCUMENTATION
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999987228320318	WITHOUT_CLASSIFICATION	1.277167968194746E-6	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999905718582764	WITHOUT_CLASSIFICATION	9.42814172347061E-6	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.999997088253225	WITHOUT_CLASSIFICATION	2.911746775102251E-6	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.999985284957668	WITHOUT_CLASSIFICATION	1.471504233206896E-5	DOCUMENTATION
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999965452567307	WITHOUT_CLASSIFICATION	3.4547432694279616E-6	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999737403054363	WITHOUT_CLASSIFICATION	2.6259694563685853E-5	DOCUMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9999853548292904	WITHOUT_CLASSIFICATION	1.4645170709642082E-5	DOCUMENTATION
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9999979241002395	WITHOUT_CLASSIFICATION	2.0758997605085864E-6	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.9999377325162833	WITHOUT_CLASSIFICATION	6.226748371672773E-5	DOCUMENTATION
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999990709818574	WITHOUT_CLASSIFICATION	9.290181424979563E-7	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999514919526287	WITHOUT_CLASSIFICATION	4.850804737124257E-5	DOCUMENTATION
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999984021795711	WITHOUT_CLASSIFICATION	1.5978204289303219E-6	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999981096369205	WITHOUT_CLASSIFICATION	1.8903630794497327E-6	DOCUMENTATION
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.9999930137183152	WITHOUT_CLASSIFICATION	6.986281684760465E-6	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999980483834645	WITHOUT_CLASSIFICATION	1.9516165355740783E-6	DOCUMENTATION
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999987820889125	WITHOUT_CLASSIFICATION	1.2179110875431297E-6	DOCUMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.9999990420711117	WITHOUT_CLASSIFICATION	9.57928888323975E-7	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.99998927090939	WITHOUT_CLASSIFICATION	1.0729090609833713E-5	DOCUMENTATION
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9999944026849015	WITHOUT_CLASSIFICATION	5.597315098535525E-6	DOCUMENTATION
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.9999831346998436	WITHOUT_CLASSIFICATION	1.686530015638429E-5	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.99967064545783	WITHOUT_CLASSIFICATION	3.293545421700083E-4	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.999984759048969	WITHOUT_CLASSIFICATION	1.5240951031021506E-5	DOCUMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.9999958574847674	WITHOUT_CLASSIFICATION	4.142515232612054E-6	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9997931296208579	WITHOUT_CLASSIFICATION	2.0687037914215807E-4	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999942121047103	WITHOUT_CLASSIFICATION	5.7878952896796654E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999978931632111	WITHOUT_CLASSIFICATION	2.106836788904074E-6	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999848995653755	WITHOUT_CLASSIFICATION	1.5100434624397855E-5	DOCUMENTATION
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999993577177989	WITHOUT_CLASSIFICATION	6.422822011422746E-7	DOCUMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999975794222984	WITHOUT_CLASSIFICATION	2.420577701551719E-6	DOCUMENTATION
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9999520266053739	WITHOUT_CLASSIFICATION	4.7973394626228115E-5	DOCUMENTATION
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999784566211308	WITHOUT_CLASSIFICATION	2.154337886915074E-5	DOCUMENTATION
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9997858714008726	WITHOUT_CLASSIFICATION	2.1412859912741736E-4	DOCUMENTATION
//readResolveObject	WITHOUT_CLASSIFICATION	0.9999346720009986	WITHOUT_CLASSIFICATION	6.532799900144406E-5	DOCUMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9999879205206204	WITHOUT_CLASSIFICATION	1.207947937953617E-5	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999849587012241	WITHOUT_CLASSIFICATION	1.5041298775891874E-5	DOCUMENTATION
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999984182409047	WITHOUT_CLASSIFICATION	1.581759095280548E-6	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999989435172667	WITHOUT_CLASSIFICATION	1.0564827333793457E-6	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9999762741014453	WITHOUT_CLASSIFICATION	2.372589855462654E-5	DOCUMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999874538147402	WITHOUT_CLASSIFICATION	1.2546185259785224E-5	DOCUMENTATION
// Handle actions	WITHOUT_CLASSIFICATION	0.9999939444426869	WITHOUT_CLASSIFICATION	6.055557313149854E-6	DOCUMENTATION
// Print page	WITHOUT_CLASSIFICATION	0.9999862992769428	WITHOUT_CLASSIFICATION	1.3700723057109906E-5	DOCUMENTATION
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999824623142154	WITHOUT_CLASSIFICATION	1.7537685784601536E-5	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9999619022961703	WITHOUT_CLASSIFICATION	3.8097703829760917E-5	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999973129368768	WITHOUT_CLASSIFICATION	2.687063123202716E-6	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999986832976064	WITHOUT_CLASSIFICATION	1.3167023935188807E-6	DOCUMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.999998038215772	WITHOUT_CLASSIFICATION	1.961784227963711E-6	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999906380966702	WITHOUT_CLASSIFICATION	9.361903329788875E-6	DOCUMENTATION
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999988334444333	WITHOUT_CLASSIFICATION	1.1665555666977535E-6	DOCUMENTATION
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9999992532830722	WITHOUT_CLASSIFICATION	7.46716927865291E-7	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999999635268382	WITHOUT_CLASSIFICATION	3.64731618384868E-8	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999710678116187	WITHOUT_CLASSIFICATION	2.893218838127261E-5	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9999976296897125	WITHOUT_CLASSIFICATION	2.3703102875244474E-6	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9999899458397395	WITHOUT_CLASSIFICATION	1.0054160260421003E-5	DOCUMENTATION
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.9999798499961267	WITHOUT_CLASSIFICATION	2.015000387339781E-5	DOCUMENTATION
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999989563854105	WITHOUT_CLASSIFICATION	1.0436145894790767E-6	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999950150321567	WITHOUT_CLASSIFICATION	4.984967843290203E-6	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999968552509878	WITHOUT_CLASSIFICATION	3.1447490122314226E-6	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999968552509878	WITHOUT_CLASSIFICATION	3.1447490122314226E-6	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999994741408652	WITHOUT_CLASSIFICATION	5.258591347527812E-7	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9999970822452272	WITHOUT_CLASSIFICATION	2.917754772833217E-6	DOCUMENTATION
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.9999998692389876	WITHOUT_CLASSIFICATION	1.307610123785643E-7	DOCUMENTATION
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999990503580298	WITHOUT_CLASSIFICATION	9.496419701853864E-7	DOCUMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.9999986639264393	WITHOUT_CLASSIFICATION	1.3360735607166746E-6	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999978601510718	WITHOUT_CLASSIFICATION	2.1398489282116404E-6	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999992437046686	WITHOUT_CLASSIFICATION	7.562953313267122E-7	DOCUMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.999999480928748	WITHOUT_CLASSIFICATION	5.190712519161824E-7	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999984316193309	WITHOUT_CLASSIFICATION	1.5683806691709818E-6	DOCUMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999973528029659	WITHOUT_CLASSIFICATION	2.6471970341003E-6	DOCUMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9999988261818847	WITHOUT_CLASSIFICATION	1.1738181152395696E-6	DOCUMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.999893872645619	WITHOUT_CLASSIFICATION	1.0612735438099813E-4	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999996214991346	WITHOUT_CLASSIFICATION	3.7850086538542495E-7	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999971215447038	WITHOUT_CLASSIFICATION	2.8784552962334343E-6	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999754626930306	WITHOUT_CLASSIFICATION	2.453730696947133E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999754626930306	WITHOUT_CLASSIFICATION	2.453730696947133E-5	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999982647146937	WITHOUT_CLASSIFICATION	1.7352853062434936E-6	DOCUMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9999976535170845	WITHOUT_CLASSIFICATION	2.3464829155420633E-6	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999899066520831	WITHOUT_CLASSIFICATION	1.0093347916957413E-5	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.9999974155724765	WITHOUT_CLASSIFICATION	2.584427523490477E-6	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999987090807781	WITHOUT_CLASSIFICATION	1.2909192218672677E-6	DOCUMENTATION
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999604889520035	WITHOUT_CLASSIFICATION	3.9511047996467784E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.9998748352350337	WITHOUT_CLASSIFICATION	1.2516476496622E-4	DOCUMENTATION
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.9999962896192387	WITHOUT_CLASSIFICATION	3.7103807613917126E-6	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999984598099838	WITHOUT_CLASSIFICATION	1.5401900161868988E-6	DOCUMENTATION
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999989994696066	WITHOUT_CLASSIFICATION	1.0005303934279871E-6	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999995276726931	WITHOUT_CLASSIFICATION	4.723273069265199E-7	DOCUMENTATION
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999907252853827	WITHOUT_CLASSIFICATION	9.274714617289337E-6	DOCUMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999997939957453	WITHOUT_CLASSIFICATION	2.0600425468139236E-7	DOCUMENTATION
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999985238626307	WITHOUT_CLASSIFICATION	1.476137369326046E-6	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.9999974772779144	WITHOUT_CLASSIFICATION	2.5227220855159332E-6	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999993698968297	WITHOUT_CLASSIFICATION	6.301031701994235E-7	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999990193885262	WITHOUT_CLASSIFICATION	9.806114738324178E-7	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999983417975671	WITHOUT_CLASSIFICATION	1.6582024327992366E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999970946270597	WITHOUT_CLASSIFICATION	2.9053729402543956E-6	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999997713844027	WITHOUT_CLASSIFICATION	2.2861559730915954E-7	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999990066044504	WITHOUT_CLASSIFICATION	9.933955495648923E-7	DOCUMENTATION
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999977036456262	WITHOUT_CLASSIFICATION	2.2963543738532338E-6	DOCUMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999986197443151	WITHOUT_CLASSIFICATION	1.380255684817756E-6	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.9998661459659803	WITHOUT_CLASSIFICATION	1.338540340196254E-4	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999950569260937	WITHOUT_CLASSIFICATION	4.943073906315562E-6	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9999991021425851	WITHOUT_CLASSIFICATION	8.978574149041594E-7	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.999999263515113	WITHOUT_CLASSIFICATION	7.364848869553825E-7	DOCUMENTATION
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9999992653968099	WITHOUT_CLASSIFICATION	7.34603189931958E-7	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9999993855946847	WITHOUT_CLASSIFICATION	6.144053152598955E-7	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999965834232938	WITHOUT_CLASSIFICATION	3.4165767061034833E-6	DOCUMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9999856330854318	WITHOUT_CLASSIFICATION	1.4366914568180092E-5	DOCUMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999974527292496	WITHOUT_CLASSIFICATION	2.5472707505349595E-6	DOCUMENTATION
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.9999925031276173	WITHOUT_CLASSIFICATION	7.496872382675766E-6	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999982385592396	WITHOUT_CLASSIFICATION	1.7614407604774287E-6	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.9999991933501615	WITHOUT_CLASSIFICATION	8.066498384283657E-7	DOCUMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.999999117992559	WITHOUT_CLASSIFICATION	8.820074409801462E-7	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999935623528904	WITHOUT_CLASSIFICATION	6.437647109647391E-6	DOCUMENTATION
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999993414884968	WITHOUT_CLASSIFICATION	6.585115032284551E-7	DOCUMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999961645390884	WITHOUT_CLASSIFICATION	3.8354609116082486E-6	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9999998248091985	WITHOUT_CLASSIFICATION	1.7519080148658834E-7	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999996309662957	WITHOUT_CLASSIFICATION	3.690337042915699E-7	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.9999996309662957	WITHOUT_CLASSIFICATION	3.690337042915699E-7	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999955136356936	WITHOUT_CLASSIFICATION	4.486364306442811E-6	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999990326356265	WITHOUT_CLASSIFICATION	9.673643735563548E-7	DOCUMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.999999302858647	WITHOUT_CLASSIFICATION	6.971413529171083E-7	DOCUMENTATION
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9999989369586588	WITHOUT_CLASSIFICATION	1.0630413411554549E-6	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999997895174049	WITHOUT_CLASSIFICATION	2.1048259518092913E-7	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999879436966239	WITHOUT_CLASSIFICATION	1.2056303376147374E-5	DOCUMENTATION
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999988233984136	WITHOUT_CLASSIFICATION	1.1766015864322798E-6	DOCUMENTATION
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999962007068507	WITHOUT_CLASSIFICATION	3.799293149317219E-6	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999879948750666	WITHOUT_CLASSIFICATION	1.2005124933316914E-5	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999991749355723	WITHOUT_CLASSIFICATION	8.250644276944372E-6	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999928947741233	WITHOUT_CLASSIFICATION	7.105225876735989E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999960661989846	WITHOUT_CLASSIFICATION	3.933801015465106E-6	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.999994803349891	WITHOUT_CLASSIFICATION	5.196650108950595E-6	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.9999993038535661	WITHOUT_CLASSIFICATION	6.9614643382529E-7	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9999966482818688	WITHOUT_CLASSIFICATION	3.351718131090907E-6	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9999970785753898	WITHOUT_CLASSIFICATION	2.9214246101859083E-6	DOCUMENTATION
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999962478987477	WITHOUT_CLASSIFICATION	3.7521012523742195E-6	DOCUMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999994916715899	WITHOUT_CLASSIFICATION	5.083284100715463E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.999997325861501	WITHOUT_CLASSIFICATION	2.674138498945624E-6	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999994311917448	WITHOUT_CLASSIFICATION	5.688082551256995E-7	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999981647703627	WITHOUT_CLASSIFICATION	1.8352296372688276E-6	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999916974856078	WITHOUT_CLASSIFICATION	8.302514392297911E-6	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9999941506944962	WITHOUT_CLASSIFICATION	5.849305503861398E-6	DOCUMENTATION
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.9999845562465406	WITHOUT_CLASSIFICATION	1.5443753459484516E-5	DOCUMENTATION
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9999927471390474	WITHOUT_CLASSIFICATION	7.2528609525717475E-6	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.9999975926037916	WITHOUT_CLASSIFICATION	2.4073962084721944E-6	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999990248689045	WITHOUT_CLASSIFICATION	9.751310955739263E-7	DOCUMENTATION
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.9999945352637654	WITHOUT_CLASSIFICATION	5.464736234721025E-6	DOCUMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9999991463132314	WITHOUT_CLASSIFICATION	8.536867686032806E-7	DOCUMENTATION
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.99999852745092	WITHOUT_CLASSIFICATION	1.4725490799922831E-6	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9999989765189524	WITHOUT_CLASSIFICATION	1.0234810475890563E-6	DOCUMENTATION
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999993204790363	WITHOUT_CLASSIFICATION	6.7952096364996E-7	DOCUMENTATION
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.9999993988790274	WITHOUT_CLASSIFICATION	6.011209725921111E-7	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999980982668444	WITHOUT_CLASSIFICATION	1.9017331555798112E-6	DOCUMENTATION
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999997318233473	WITHOUT_CLASSIFICATION	2.6817665264627787E-7	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999981647107328	WITHOUT_CLASSIFICATION	1.8352892671960322E-6	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999982757477532	WITHOUT_CLASSIFICATION	1.7242522466497276E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999994279031806	WITHOUT_CLASSIFICATION	5.720968193448142E-7	DOCUMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9999996617861887	WITHOUT_CLASSIFICATION	3.382138113056442E-7	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9999513934683214	WITHOUT_CLASSIFICATION	4.860653167864985E-5	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.999998998984283	WITHOUT_CLASSIFICATION	1.0010157170260723E-6	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999986364329382	WITHOUT_CLASSIFICATION	1.3635670617836474E-6	DOCUMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999966005108514	WITHOUT_CLASSIFICATION	3.3994891487119425E-6	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999994204504001	WITHOUT_CLASSIFICATION	5.79549599938753E-7	DOCUMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9999972398175077	WITHOUT_CLASSIFICATION	2.7601824923659228E-6	DOCUMENTATION
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9999979089706867	WITHOUT_CLASSIFICATION	2.091029313272294E-6	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999995614296402	WITHOUT_CLASSIFICATION	4.3857035985423836E-7	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999996214991346	WITHOUT_CLASSIFICATION	3.7850086538542495E-7	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999990785537863	WITHOUT_CLASSIFICATION	9.214462135680625E-7	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999990715611807	WITHOUT_CLASSIFICATION	9.284388192828685E-7	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.9999963095664722	WITHOUT_CLASSIFICATION	3.690433527851752E-6	DOCUMENTATION
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.9999995319706331	WITHOUT_CLASSIFICATION	4.680293668662065E-7	DOCUMENTATION
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9999993531581125	WITHOUT_CLASSIFICATION	6.468418874497441E-7	DOCUMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.999994596408548	WITHOUT_CLASSIFICATION	5.4035914519093846E-6	DOCUMENTATION
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9999991987174773	WITHOUT_CLASSIFICATION	8.012825226510582E-7	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.9999970603654583	WITHOUT_CLASSIFICATION	2.939634541725419E-6	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.9999917181746106	WITHOUT_CLASSIFICATION	8.281825389279577E-6	DOCUMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9999969744687998	WITHOUT_CLASSIFICATION	3.0255312001909612E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999996163445893	WITHOUT_CLASSIFICATION	3.836554107274807E-7	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999995730777608	WITHOUT_CLASSIFICATION	4.2692223926990184E-7	DOCUMENTATION
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999996065409041	WITHOUT_CLASSIFICATION	3.9345909584289067E-7	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999995432376232	WITHOUT_CLASSIFICATION	4.5676237688669586E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999944476238202	WITHOUT_CLASSIFICATION	5.552376179837234E-6	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9999721884946389	WITHOUT_CLASSIFICATION	2.781150536109405E-5	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999714632998955	WITHOUT_CLASSIFICATION	2.853670010451872E-5	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999977998079197	WITHOUT_CLASSIFICATION	2.200192080299737E-6	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999872275343878	WITHOUT_CLASSIFICATION	1.277246561203713E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999944476238202	WITHOUT_CLASSIFICATION	5.552376179837234E-6	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9999928634225121	WITHOUT_CLASSIFICATION	7.1365774879077175E-6	DOCUMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9999989749710133	WITHOUT_CLASSIFICATION	1.0250289867410999E-6	DOCUMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999986914237954	WITHOUT_CLASSIFICATION	1.3085762045007004E-6	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999993137943343	WITHOUT_CLASSIFICATION	6.862056657038219E-7	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999945742709826	WITHOUT_CLASSIFICATION	5.425729017308046E-6	DOCUMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999996027885553	WITHOUT_CLASSIFICATION	3.9721144474652973E-7	DOCUMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999996478004906	WITHOUT_CLASSIFICATION	3.5219950943343635E-7	DOCUMENTATION
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.9999997679405588	WITHOUT_CLASSIFICATION	2.320594411815276E-7	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999990830409804	WITHOUT_CLASSIFICATION	9.16959019631933E-7	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999994070431164	WITHOUT_CLASSIFICATION	5.9295688357157E-7	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999757040988831	WITHOUT_CLASSIFICATION	2.429590111683297E-5	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9999829106420919	WITHOUT_CLASSIFICATION	1.708935790810125E-5	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.999998420285447	WITHOUT_CLASSIFICATION	1.5797145529834221E-6	DOCUMENTATION
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9999976730899766	WITHOUT_CLASSIFICATION	2.326910023455158E-6	DOCUMENTATION
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.999993809316395	WITHOUT_CLASSIFICATION	6.190683604990624E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999991070164221	WITHOUT_CLASSIFICATION	8.929835779086696E-7	DOCUMENTATION
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999977447532156	WITHOUT_CLASSIFICATION	2.2552467843869788E-6	DOCUMENTATION
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999987700517988	WITHOUT_CLASSIFICATION	1.2299482011024174E-6	DOCUMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9999929288217667	WITHOUT_CLASSIFICATION	7.071178233287918E-6	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999793535411834	WITHOUT_CLASSIFICATION	2.0646458816671727E-5	DOCUMENTATION
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999996969507331	WITHOUT_CLASSIFICATION	3.0304926693686163E-7	DOCUMENTATION
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999909036324108	WITHOUT_CLASSIFICATION	9.096367589177998E-6	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9998761982582568	WITHOUT_CLASSIFICATION	1.2380174174327475E-4	DOCUMENTATION
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999960973124375	WITHOUT_CLASSIFICATION	3.902687562508263E-6	DOCUMENTATION
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999972169581909	WITHOUT_CLASSIFICATION	2.7830418091120284E-6	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999994172663468	WITHOUT_CLASSIFICATION	5.827336532360012E-7	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9999996251592873	WITHOUT_CLASSIFICATION	3.74840712660792E-7	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999992752881002	WITHOUT_CLASSIFICATION	7.247118998713595E-7	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.999999118350538	WITHOUT_CLASSIFICATION	8.816494618541367E-7	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.9999986587841521	WITHOUT_CLASSIFICATION	1.3412158479801797E-6	DOCUMENTATION
// and perform the load	WITHOUT_CLASSIFICATION	0.9999881790947066	WITHOUT_CLASSIFICATION	1.1820905293355749E-5	DOCUMENTATION
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999629836676541	WITHOUT_CLASSIFICATION	3.701633234597784E-5	DOCUMENTATION
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999833819316084	WITHOUT_CLASSIFICATION	1.6618068391597008E-5	DOCUMENTATION
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999974794229657	WITHOUT_CLASSIFICATION	2.5205770342496528E-6	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999984342998384	WITHOUT_CLASSIFICATION	1.5657001617083567E-6	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999996019277122	WITHOUT_CLASSIFICATION	3.9807228778672293E-7	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999996460046591	WITHOUT_CLASSIFICATION	3.539953409560492E-7	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999986003143406	WITHOUT_CLASSIFICATION	1.3996856593505707E-6	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999973958872289	WITHOUT_CLASSIFICATION	2.6041127711027926E-6	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999960497527561	WITHOUT_CLASSIFICATION	3.950247243764487E-6	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999534096258551	WITHOUT_CLASSIFICATION	4.659037414481306E-5	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999534096258551	WITHOUT_CLASSIFICATION	4.659037414481306E-5	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999871283377708	WITHOUT_CLASSIFICATION	1.2871662229250052E-5	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999982074301949	WITHOUT_CLASSIFICATION	1.7925698052346978E-6	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999983801528246	WITHOUT_CLASSIFICATION	1.6198471752906863E-6	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9955399161427951	WITHOUT_CLASSIFICATION	0.004460083857204909	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999787217927532	WITHOUT_CLASSIFICATION	2.1278207246851078E-5	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999787217927532	WITHOUT_CLASSIFICATION	2.1278207246851078E-5	DOCUMENTATION
//        }	WITHOUT_CLASSIFICATION	0.9998102200855126	WITHOUT_CLASSIFICATION	1.89779914487495E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.9999825526579449	WITHOUT_CLASSIFICATION	1.7447342055161296E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9983750776280041	WITHOUT_CLASSIFICATION	0.0016249223719959286	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999939518479255	WITHOUT_CLASSIFICATION	6.048152074555662E-6	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999995154751766	WITHOUT_CLASSIFICATION	4.84524823322793E-7	DOCUMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.999995928192336	WITHOUT_CLASSIFICATION	4.071807664063272E-6	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.999994306968758	WITHOUT_CLASSIFICATION	5.693031242050384E-6	DOCUMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999951491384101	WITHOUT_CLASSIFICATION	4.850861589828943E-6	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999997552633866	WITHOUT_CLASSIFICATION	2.447366134381588E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985167334344	WITHOUT_CLASSIFICATION	1.4832665656088547E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985167334344	WITHOUT_CLASSIFICATION	1.4832665656088547E-6	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.9999669776570643	WITHOUT_CLASSIFICATION	3.302234293567582E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.99987518509732	WITHOUT_CLASSIFICATION	1.2481490267997057E-4	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999666460705272	WITHOUT_CLASSIFICATION	3.335392947284744E-5	DOCUMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9999721038004576	WITHOUT_CLASSIFICATION	2.789619954235795E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996916585881975	WITHOUT_CLASSIFICATION	3.0834141180239926E-4	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999350016181242	WITHOUT_CLASSIFICATION	6.499838187573559E-5	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999966347888246	WITHOUT_CLASSIFICATION	3.365211175411053E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9996916585881975	WITHOUT_CLASSIFICATION	3.0834141180239926E-4	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999989313874794	WITHOUT_CLASSIFICATION	1.068612520576881E-6	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9999950959334185	WITHOUT_CLASSIFICATION	4.9040665814932425E-6	DOCUMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9999940419333189	WITHOUT_CLASSIFICATION	5.958066681078428E-6	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9999982123627884	WITHOUT_CLASSIFICATION	1.7876372115728065E-6	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999994070431164	WITHOUT_CLASSIFICATION	5.9295688357157E-7	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9999974853875522	WITHOUT_CLASSIFICATION	2.5146124478063986E-6	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9999108728215351	WITHOUT_CLASSIFICATION	8.912717846481064E-5	DOCUMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999994519083566	WITHOUT_CLASSIFICATION	5.480916434078758E-7	DOCUMENTATION
//use the id column alias	WITHOUT_CLASSIFICATION	0.9999825221585603	WITHOUT_CLASSIFICATION	1.7477841439777822E-5	DOCUMENTATION
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999881225134379	WITHOUT_CLASSIFICATION	1.1877486561981386E-5	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9999739701360857	WITHOUT_CLASSIFICATION	2.602986391426644E-5	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9999236218645061	WITHOUT_CLASSIFICATION	7.637813549390901E-5	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9999995533938875	WITHOUT_CLASSIFICATION	4.4660611261336645E-7	DOCUMENTATION
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9999872007136654	WITHOUT_CLASSIFICATION	1.2799286334553626E-5	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999882847668788	WITHOUT_CLASSIFICATION	1.1715233121169835E-5	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999882847668788	WITHOUT_CLASSIFICATION	1.1715233121169835E-5	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.999986921443363	WITHOUT_CLASSIFICATION	1.3078556637025141E-5	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999993963494408	WITHOUT_CLASSIFICATION	6.03650559229852E-7	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9996951543319008	WITHOUT_CLASSIFICATION	3.048456680991314E-4	DOCUMENTATION
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9999930465895475	WITHOUT_CLASSIFICATION	6.953410452443762E-6	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999867410809345	WITHOUT_CLASSIFICATION	1.325891906547948E-5	DOCUMENTATION
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999986477295753	WITHOUT_CLASSIFICATION	1.3522704247627445E-6	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.9999987741970942	WITHOUT_CLASSIFICATION	1.2258029058707355E-6	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999987970311656	WITHOUT_CLASSIFICATION	1.2029688344678627E-6	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999981708700483	WITHOUT_CLASSIFICATION	1.8291299516859596E-6	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999989439408576	WITHOUT_CLASSIFICATION	1.0560591423753071E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999684145684992	WITHOUT_CLASSIFICATION	3.158543150085434E-5	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.9999998536326303	WITHOUT_CLASSIFICATION	1.4636736968498585E-7	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.9999977999029566	WITHOUT_CLASSIFICATION	2.2000970433747603E-6	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999995146968856	WITHOUT_CLASSIFICATION	4.853031143372948E-7	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9999983198475698	WITHOUT_CLASSIFICATION	1.6801524300970747E-6	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.9999963250437228	WITHOUT_CLASSIFICATION	3.6749562772282467E-6	DOCUMENTATION
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.99999301014824	WITHOUT_CLASSIFICATION	6.989851759938158E-6	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999896785165828	WITHOUT_CLASSIFICATION	1.0321483417200215E-5	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9999973007335569	WITHOUT_CLASSIFICATION	2.6992664430703453E-6	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9999992265227304	WITHOUT_CLASSIFICATION	7.734772695718587E-7	DOCUMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999971243106047	WITHOUT_CLASSIFICATION	2.8756893953938187E-6	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9999994574344401	WITHOUT_CLASSIFICATION	5.425655599341624E-7	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.999999451488671	WITHOUT_CLASSIFICATION	5.485113290043511E-7	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.9999988508606159	WITHOUT_CLASSIFICATION	1.1491393840007001E-6	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999984468388726	WITHOUT_CLASSIFICATION	1.5531611274145148E-6	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999984468388726	WITHOUT_CLASSIFICATION	1.5531611274145148E-6	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999959386139958	WITHOUT_CLASSIFICATION	4.061386004172571E-6	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999993221972501	WITHOUT_CLASSIFICATION	6.778027498000521E-7	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999983659331099	WITHOUT_CLASSIFICATION	1.6340668901938868E-6	DOCUMENTATION
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.9999985291895831	WITHOUT_CLASSIFICATION	1.4708104169632643E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.9999893731506672	WITHOUT_CLASSIFICATION	1.0626849332869481E-5	DOCUMENTATION
//TODO find a decent name before documenting	DOCUMENTATION	0.9994277278938972	WITHOUT_CLASSIFICATION	5.722721061026879E-4	DOCUMENTATION
