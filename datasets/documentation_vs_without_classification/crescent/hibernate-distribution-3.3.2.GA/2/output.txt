//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999781965886624	WITHOUT_CLASSIFICATION	2.180341133770901E-5	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999930142245145	WITHOUT_CLASSIFICATION	6.985775485466111E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999930142245145	WITHOUT_CLASSIFICATION	6.985775485466111E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999930142245145	WITHOUT_CLASSIFICATION	6.985775485466111E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999930142245145	WITHOUT_CLASSIFICATION	6.985775485466111E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999930142245145	WITHOUT_CLASSIFICATION	6.985775485466111E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999930142245145	WITHOUT_CLASSIFICATION	6.985775485466111E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999930142245145	WITHOUT_CLASSIFICATION	6.985775485466111E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999915557163958	WITHOUT_CLASSIFICATION	8.444283604195642E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999915557163958	WITHOUT_CLASSIFICATION	8.444283604195642E-6	DOCUMENTATION
/* | this | bean | args | raw bean | */	WITHOUT_CLASSIFICATION	0.9999893389976547	WITHOUT_CLASSIFICATION	1.0661002345282153E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999958625399656	WITHOUT_CLASSIFICATION	4.13746003443117E-6	DOCUMENTATION
// astore 4 // store the raw bean	WITHOUT_CLASSIFICATION	0.9999968962640406	WITHOUT_CLASSIFICATION	3.1037359593510923E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999846520772729	WITHOUT_CLASSIFICATION	1.5347922727075765E-5	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999846520772729	WITHOUT_CLASSIFICATION	1.5347922727075765E-5	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999979082489461	WITHOUT_CLASSIFICATION	2.0917510540328566E-6	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999985539385055	WITHOUT_CLASSIFICATION	1.4460614945247647E-6	DOCUMENTATION
// putfield // new value of the field	WITHOUT_CLASSIFICATION	0.9999981736851461	WITHOUT_CLASSIFICATION	1.8263148538694863E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999788345221708	WITHOUT_CLASSIFICATION	2.11654778290986E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999931187684045	WITHOUT_CLASSIFICATION	6.881231595561248E-6	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999931187684045	WITHOUT_CLASSIFICATION	6.881231595561248E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999931516165701	WITHOUT_CLASSIFICATION	6.848383429820709E-6	DOCUMENTATION
// just decrement the lock, don't recache // (we don't know which transaction won)	WITHOUT_CLASSIFICATION	0.9999980534482721	WITHOUT_CLASSIFICATION	1.94655172795267E-6	DOCUMENTATION
// decode row selection...	WITHOUT_CLASSIFICATION	0.9999979461366303	WITHOUT_CLASSIFICATION	2.053863369672039E-6	DOCUMENTATION
//disassembled state gets put in a new array (we write to cache by value!)	WITHOUT_CLASSIFICATION	0.9999989143047966	WITHOUT_CLASSIFICATION	1.0856952033905122E-6	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.999999820533147	WITHOUT_CLASSIFICATION	1.7946685314207935E-7	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999722069272644	WITHOUT_CLASSIFICATION	2.7793072735581335E-5	DOCUMENTATION
// ROW ID	WITHOUT_CLASSIFICATION	0.9999759896078906	WITHOUT_CLASSIFICATION	2.4010392109454188E-5	DOCUMENTATION
// COMPOSITE-ID	WITHOUT_CLASSIFICATION	0.9999577557490896	WITHOUT_CLASSIFICATION	4.2244250910356054E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.999955777104742	WITHOUT_CLASSIFICATION	4.422289525793293E-5	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9998841672491	WITHOUT_CLASSIFICATION	1.1583275090007302E-4	DOCUMENTATION
// DYNAMIC INSERT	WITHOUT_CLASSIFICATION	0.9999641781266588	WITHOUT_CLASSIFICATION	3.5821873341151176E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999634036162438	WITHOUT_CLASSIFICATION	3.659638375615261E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999967729800701	WITHOUT_CLASSIFICATION	3.2270199299901027E-6	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999634827167975	WITHOUT_CLASSIFICATION	3.6517283202491375E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999634827167975	WITHOUT_CLASSIFICATION	3.6517283202491375E-5	DOCUMENTATION
// generated properties can *never* be insertable...	WITHOUT_CLASSIFICATION	0.9999997467513518	WITHOUT_CLASSIFICATION	2.5324864808488444E-7	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999801670615805	WITHOUT_CLASSIFICATION	1.9832938419474783E-5	DOCUMENTATION
//by default, natural-ids are "immutable" (constant)	WITHOUT_CLASSIFICATION	0.9999970762719385	WITHOUT_CLASSIFICATION	2.9237280614977713E-6	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.999999525730075	WITHOUT_CLASSIFICATION	4.7426992508677E-7	DOCUMENTATION
// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result	WITHOUT_CLASSIFICATION	0.9999956241303728	WITHOUT_CLASSIFICATION	4.3758696272427435E-6	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9997186501315728	WITHOUT_CLASSIFICATION	2.813498684272249E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9997186501315728	WITHOUT_CLASSIFICATION	2.813498684272249E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// If close() is called, guarantee unbind()	WITHOUT_CLASSIFICATION	0.9999986718563699	WITHOUT_CLASSIFICATION	1.3281436300678005E-6	DOCUMENTATION
// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.	WITHOUT_CLASSIFICATION	0.9999997755036218	WITHOUT_CLASSIFICATION	2.244963782932182E-7	DOCUMENTATION
// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.	WITHOUT_CLASSIFICATION	0.9999998066570128	WITHOUT_CLASSIFICATION	1.9334298723254153E-7	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999891439947869	WITHOUT_CLASSIFICATION	1.085600521304715E-5	DOCUMENTATION
// 60 second lock timeout	WITHOUT_CLASSIFICATION	0.999997206938104	WITHOUT_CLASSIFICATION	2.7930618958451622E-6	DOCUMENTATION
// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999995971221872	WITHOUT_CLASSIFICATION	4.0287781279916226E-6	DOCUMENTATION
// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999907320695434	WITHOUT_CLASSIFICATION	9.267930456606985E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// do the put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999970750485285	WITHOUT_CLASSIFICATION	2.9249514714960972E-6	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9999515512782341	WITHOUT_CLASSIFICATION	4.844872176583021E-5	DOCUMENTATION
// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...	WITHOUT_CLASSIFICATION	0.9999993930305854	WITHOUT_CLASSIFICATION	6.069694146189712E-7	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9999732676694015	WITHOUT_CLASSIFICATION	2.673233059848544E-5	DOCUMENTATION
//ignore!	WITHOUT_CLASSIFICATION	0.9999515512782341	WITHOUT_CLASSIFICATION	4.844872176583021E-5	DOCUMENTATION
//60 seconds	WITHOUT_CLASSIFICATION	0.9999732676694015	WITHOUT_CLASSIFICATION	2.673233059848544E-5	DOCUMENTATION
//do the failfast put outside the scope of the JTA txn	WITHOUT_CLASSIFICATION	0.9999941611709461	WITHOUT_CLASSIFICATION	5.838829053914265E-6	DOCUMENTATION
// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated	WITHOUT_CLASSIFICATION	0.9999988330559274	WITHOUT_CLASSIFICATION	1.1669440725611187E-6	DOCUMENTATION
//    protected RegionRootListener listener;	WITHOUT_CLASSIFICATION	0.9999985188313677	WITHOUT_CLASSIFICATION	1.4811686323210274E-6	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999995212124946	WITHOUT_CLASSIFICATION	4.7878750533893E-7	DOCUMENTATION
// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)	WITHOUT_CLASSIFICATION	0.9999997720932833	WITHOUT_CLASSIFICATION	2.2790671669564638E-7	DOCUMENTATION
// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            	WITHOUT_CLASSIFICATION	0.9999983966437099	WITHOUT_CLASSIFICATION	1.60335628999058E-6	DOCUMENTATION
// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root	WITHOUT_CLASSIFICATION	0.9999994828127533	WITHOUT_CLASSIFICATION	5.17187246764723E-7	DOCUMENTATION
// Don't hold a transactional lock for this 	WITHOUT_CLASSIFICATION	0.9999952426882159	WITHOUT_CLASSIFICATION	4.757311784053035E-6	DOCUMENTATION
// Make sure the root node for the region exists and  // has a DataVersion that never complains	WITHOUT_CLASSIFICATION	0.9999994987889862	WITHOUT_CLASSIFICATION	5.012110138473793E-7	DOCUMENTATION
// Never evict this node	WITHOUT_CLASSIFICATION	0.9999975947780646	WITHOUT_CLASSIFICATION	2.4052219353486133E-6	DOCUMENTATION
// Fix up the resident flag	WITHOUT_CLASSIFICATION	0.9999966450207931	WITHOUT_CLASSIFICATION	3.354979206947301E-6	DOCUMENTATION
// 60 seconds	WITHOUT_CLASSIFICATION	0.9999940867763559	WITHOUT_CLASSIFICATION	5.913223644041359E-6	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999993590213286	WITHOUT_CLASSIFICATION	6.409786714196462E-7	DOCUMENTATION
// no-op. We don't own the cache so we shouldn't stop it.	WITHOUT_CLASSIFICATION	0.9999990848748725	WITHOUT_CLASSIFICATION	9.151251274767942E-7	DOCUMENTATION
// This should only be possible if the caches are constructor injected 	WITHOUT_CLASSIFICATION	0.9999993550737272	WITHOUT_CLASSIFICATION	6.44926272866196E-7	DOCUMENTATION
// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted	WITHOUT_CLASSIFICATION	0.9999993988752585	WITHOUT_CLASSIFICATION	6.011247415890594E-7	DOCUMENTATION
// Set up the cache factory	WITHOUT_CLASSIFICATION	0.999996803632667	WITHOUT_CLASSIFICATION	3.1963673330598374E-6	DOCUMENTATION
// See if the user configured a multiplexer stack	WITHOUT_CLASSIFICATION	0.9999997525962971	WITHOUT_CLASSIFICATION	2.4740370287312324E-7	DOCUMENTATION
// Default to collections sharing entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999991134634151	WITHOUT_CLASSIFICATION	8.865365849229818E-7	DOCUMENTATION
// Default to sharing the entity cache if there is one	WITHOUT_CLASSIFICATION	0.9999988068378098	WITHOUT_CLASSIFICATION	1.1931621901023662E-6	DOCUMENTATION
// For Timestamps, we default to a separate config	WITHOUT_CLASSIFICATION	0.9999983383742721	WITHOUT_CLASSIFICATION	1.6616257278592183E-6	DOCUMENTATION
// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that	WITHOUT_CLASSIFICATION	0.9999975955207071	WITHOUT_CLASSIFICATION	2.404479292912329E-6	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.999997156426888	WITHOUT_CLASSIFICATION	2.8435731119339404E-6	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999946894149203	WITHOUT_CLASSIFICATION	5.310585079800901E-6	DOCUMENTATION
// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start	WITHOUT_CLASSIFICATION	0.9999995484220384	WITHOUT_CLASSIFICATION	4.515779616408502E-7	DOCUMENTATION
// Make sure we don't re-release the same cache	WITHOUT_CLASSIFICATION	0.9999975634547119	WITHOUT_CLASSIFICATION	2.4365452880885055E-6	DOCUMENTATION
// We use a different delegate than the non-optimistic superclass default	WITHOUT_CLASSIFICATION	0.9999979166701722	WITHOUT_CLASSIFICATION	2.0833298278042513E-6	DOCUMENTATION
// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here	WITHOUT_CLASSIFICATION	0.9999977729435818	WITHOUT_CLASSIFICATION	2.2270564180783327E-6	DOCUMENTATION
// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation	WITHOUT_CLASSIFICATION	0.9999996125499374	WITHOUT_CLASSIFICATION	3.874500625155671E-7	DOCUMENTATION
// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication	WITHOUT_CLASSIFICATION	0.9999998630004483	WITHOUT_CLASSIFICATION	1.369995517191192E-7	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit	WITHOUT_CLASSIFICATION	0.9999981945408603	WITHOUT_CLASSIFICATION	1.8054591397683989E-6	DOCUMENTATION
// Double check the distributed cache	WITHOUT_CLASSIFICATION	0.9999977456459838	WITHOUT_CLASSIFICATION	2.2543540161614983E-6	DOCUMENTATION
// Get an exclusive right to update JBC for this key from this node.	WITHOUT_CLASSIFICATION	0.9999990852513692	WITHOUT_CLASSIFICATION	9.147486308199766E-7	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999974386745527	WITHOUT_CLASSIFICATION	2.5613254473152314E-6	DOCUMENTATION
// Initial load from JBC	WITHOUT_CLASSIFICATION	0.9999942536815426	WITHOUT_CLASSIFICATION	5.746318457322555E-6	DOCUMENTATION
// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase	WITHOUT_CLASSIFICATION	0.9999995656396736	WITHOUT_CLASSIFICATION	4.343603264312665E-7	DOCUMENTATION
// We ensure ASYNC semantics (JBCACHE-1175)	WITHOUT_CLASSIFICATION	0.9999974386745527	WITHOUT_CLASSIFICATION	2.5613254473152314E-6	DOCUMENTATION
// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer	WITHOUT_CLASSIFICATION	0.9999989816356615	WITHOUT_CLASSIFICATION	1.0183643384473957E-6	DOCUMENTATION
// The standard comparator types are not Serializable but are singletons	WITHOUT_CLASSIFICATION	0.9999996464203043	WITHOUT_CLASSIFICATION	3.535796957368928E-7	DOCUMENTATION
// ignore!	WITHOUT_CLASSIFICATION	0.9999951644602215	WITHOUT_CLASSIFICATION	4.8355397784701505E-6	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999943221468873	WITHOUT_CLASSIFICATION	5.67785311273212E-6	DOCUMENTATION
// construct the cache	WITHOUT_CLASSIFICATION	0.999997703149272	WITHOUT_CLASSIFICATION	2.2968507279738915E-6	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999990176937866	WITHOUT_CLASSIFICATION	9.823062133721237E-7	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999990176937866	WITHOUT_CLASSIFICATION	9.823062133721237E-7	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999830743470844	WITHOUT_CLASSIFICATION	1.6925652915526947E-5	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.	WITHOUT_CLASSIFICATION	0.999999717454411	WITHOUT_CLASSIFICATION	2.8254558905368414E-7	DOCUMENTATION
/*DataSource unpooled = DataSources.unpooledDataSource(	WITHOUT_CLASSIFICATION	0.9999869145867051	WITHOUT_CLASSIFICATION	1.3085413294970515E-5	DOCUMENTATION
// TRUE if the pool is borrowed from the outside, FALSE if we used to create it	WITHOUT_CLASSIFICATION	0.999999502996323	WITHOUT_CLASSIFICATION	4.970036770052093E-7	DOCUMENTATION
// get a connection from the pool (thru DriverManager, cfr. Proxool doc)	WITHOUT_CLASSIFICATION	0.999999254322042	WITHOUT_CLASSIFICATION	7.456779580735496E-7	DOCUMENTATION
// set the Transaction Isolation if defined	WITHOUT_CLASSIFICATION	0.9999993504619494	WITHOUT_CLASSIFICATION	6.495380506333714E-7	DOCUMENTATION
// toggle autoCommit to false if set	WITHOUT_CLASSIFICATION	0.9999966913694346	WITHOUT_CLASSIFICATION	3.308630565344605E-6	DOCUMENTATION
// return the connection	WITHOUT_CLASSIFICATION	0.9999960601313564	WITHOUT_CLASSIFICATION	3.9398686435352385E-6	DOCUMENTATION
// Get the configurator files (if available)	WITHOUT_CLASSIFICATION	0.9999987048256842	WITHOUT_CLASSIFICATION	1.295174315775587E-6	DOCUMENTATION
// Default the Proxool alias setting	WITHOUT_CLASSIFICATION	0.9999984346500193	WITHOUT_CLASSIFICATION	1.5653499807946835E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999971671793527	WITHOUT_CLASSIFICATION	2.832820647283191E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999971671793527	WITHOUT_CLASSIFICATION	2.832820647283191E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999988741676856	WITHOUT_CLASSIFICATION	1.1258323143651212E-6	DOCUMENTATION
// Set the existing pool flag to true	WITHOUT_CLASSIFICATION	0.9999988482615384	WITHOUT_CLASSIFICATION	1.1517384616088202E-6	DOCUMENTATION
// Configured using the JAXP Configurator	WITHOUT_CLASSIFICATION	0.999996999373953	WITHOUT_CLASSIFICATION	3.0006260468653017E-6	DOCUMENTATION
// Validate that an alias name was provided to determine which pool to use	WITHOUT_CLASSIFICATION	0.9999971671793527	WITHOUT_CLASSIFICATION	2.832820647283191E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999988741676856	WITHOUT_CLASSIFICATION	1.1258323143651212E-6	DOCUMENTATION
// Append the stem to the proxool pool alias	WITHOUT_CLASSIFICATION	0.9999988741676856	WITHOUT_CLASSIFICATION	1.1258323143651212E-6	DOCUMENTATION
// Configured using the Properties File Configurator	WITHOUT_CLASSIFICATION	0.9999991699770971	WITHOUT_CLASSIFICATION	8.3002290286557E-7	DOCUMENTATION
// Remember Isolation level	WITHOUT_CLASSIFICATION	0.9999966263061081	WITHOUT_CLASSIFICATION	3.373693891945161E-6	DOCUMENTATION
// If the provider was leeching off an existing pool don't close it	WITHOUT_CLASSIFICATION	0.9999992095728627	WITHOUT_CLASSIFICATION	7.904271373284795E-7	DOCUMENTATION
// We have created the pool ourselves, so shut it down	WITHOUT_CLASSIFICATION	0.9999990026059211	WITHOUT_CLASSIFICATION	9.973940788695465E-7	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999993498635676	WITHOUT_CLASSIFICATION	6.501364322828259E-7	DOCUMENTATION
// not really a many-to-one association *necessarily*	WITHOUT_CLASSIFICATION	0.9999993498635676	WITHOUT_CLASSIFICATION	6.501364322828259E-7	DOCUMENTATION
//always overwrite nonversioned data	WITHOUT_CLASSIFICATION	0.9999939161060115	WITHOUT_CLASSIFICATION	6.083893988563109E-6	DOCUMENTATION
//public Currency getCurrency(int col) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999921997938518	WITHOUT_CLASSIFICATION	7.80020614809947E-6	DOCUMENTATION
// default is POJO	WITHOUT_CLASSIFICATION	0.9999954345796659	WITHOUT_CLASSIFICATION	4.565420334135177E-6	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999967288556455	WITHOUT_CLASSIFICATION	3.271144354532381E-6	DOCUMENTATION
// use setParameter for null values	WITHOUT_CLASSIFICATION	0.9999967288556455	WITHOUT_CLASSIFICATION	3.271144354532381E-6	DOCUMENTATION
//private CacheEntry cacheEntry;	WITHOUT_CLASSIFICATION	0.9999826562874073	WITHOUT_CLASSIFICATION	1.7343712592575882E-5	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999983944836489	WITHOUT_CLASSIFICATION	1.6055163510717236E-6	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999987946110915	WITHOUT_CLASSIFICATION	1.2053889084462772E-6	DOCUMENTATION
// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array	WITHOUT_CLASSIFICATION	0.9999982311290428	WITHOUT_CLASSIFICATION	1.7688709572155507E-6	DOCUMENTATION
// this entity defines proeprty generation, so process those generated // values...	WITHOUT_CLASSIFICATION	0.9999997672343658	WITHOUT_CLASSIFICATION	2.3276563421655917E-7	DOCUMENTATION
// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).	WITHOUT_CLASSIFICATION	0.99999917296323	WITHOUT_CLASSIFICATION	8.27036770042508E-7	DOCUMENTATION
/*!persister.isCacheInvalidationRequired()*/	WITHOUT_CLASSIFICATION	0.9999932748276881	WITHOUT_CLASSIFICATION	6.725172311876036E-6	DOCUMENTATION
// need to look it up from the persistence-context	WITHOUT_CLASSIFICATION	0.9999992538237673	WITHOUT_CLASSIFICATION	7.461762326826544E-7	DOCUMENTATION
//sort first by role name	WITHOUT_CLASSIFICATION	0.9999864749623683	WITHOUT_CLASSIFICATION	1.3525037631744036E-5	DOCUMENTATION
//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!	WITHOUT_CLASSIFICATION	0.9999987946110915	WITHOUT_CLASSIFICATION	1.2053889084462772E-6	DOCUMENTATION
//then by fk	WITHOUT_CLASSIFICATION	0.9999480014174271	WITHOUT_CLASSIFICATION	5.199858257282801E-5	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999912805133786	WITHOUT_CLASSIFICATION	8.719486621444858E-6	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999912805133786	WITHOUT_CLASSIFICATION	8.719486621444858E-6	DOCUMENTATION
// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)	WITHOUT_CLASSIFICATION	0.9999969882567982	WITHOUT_CLASSIFICATION	3.0117432019011213E-6	DOCUMENTATION
// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner	WITHOUT_CLASSIFICATION	0.9999989405128775	WITHOUT_CLASSIFICATION	1.059487122434726E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999998195071029	WITHOUT_CLASSIFICATION	1.8049289698824927E-7	DOCUMENTATION
//do nothing - we only need to notify the cache...	WITHOUT_CLASSIFICATION	0.9999909687118504	WITHOUT_CLASSIFICATION	9.031288149631655E-6	DOCUMENTATION
//sort first by entity name	WITHOUT_CLASSIFICATION	0.9999820016854694	WITHOUT_CLASSIFICATION	1.7998314530650947E-5	DOCUMENTATION
//then by id	WITHOUT_CLASSIFICATION	0.9999635394850829	WITHOUT_CLASSIFICATION	3.646051491709593E-5	DOCUMENTATION
// to be safe...	WITHOUT_CLASSIFICATION	0.9999935220789437	WITHOUT_CLASSIFICATION	6.477921056333497E-6	DOCUMENTATION
// no transformations took place, so handle it as we would a // non-instrumented class	WITHOUT_CLASSIFICATION	0.9999996723880096	WITHOUT_CLASSIFICATION	3.276119904035464E-7	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999993563666404	WITHOUT_CLASSIFICATION	6.436333595382818E-7	DOCUMENTATION
// see if the entry represents a class file	WITHOUT_CLASSIFICATION	0.9999993563666404	WITHOUT_CLASSIFICATION	6.436333595382818E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999996347386094	WITHOUT_CLASSIFICATION	3.65261390594226E-6	DOCUMENTATION
//test out the optimizer:	WITHOUT_CLASSIFICATION	0.9999781965886624	WITHOUT_CLASSIFICATION	2.180341133770901E-5	DOCUMENTATION
// set the name of bulk accessor.	WITHOUT_CLASSIFICATION	0.9999967306878862	WITHOUT_CLASSIFICATION	3.2693121137500824E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999930142245145	WITHOUT_CLASSIFICATION	6.985775485466111E-6	DOCUMENTATION
// invokespecial	WITHOUT_CLASSIFICATION	0.9999976028823669	WITHOUT_CLASSIFICATION	2.397117633079422E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999915557163958	WITHOUT_CLASSIFICATION	8.444283604195642E-6	DOCUMENTATION
// aload_1 // load bean	WITHOUT_CLASSIFICATION	0.9999946174800446	WITHOUT_CLASSIFICATION	5.382519955347668E-6	DOCUMENTATION
// checkcast // cast bean	WITHOUT_CLASSIFICATION	0.999993855715063	WITHOUT_CLASSIFICATION	6.144284936876946E-6	DOCUMENTATION
// astore_3 // store bean	WITHOUT_CLASSIFICATION	0.9999937504528266	WITHOUT_CLASSIFICATION	6.2495471733891625E-6	DOCUMENTATION
// aload_2 // args	WITHOUT_CLASSIFICATION	0.9999955263947493	WITHOUT_CLASSIFICATION	4.473605250695815E-6	DOCUMENTATION
// iconst_i // continue to aastore // growing stack is 1	WITHOUT_CLASSIFICATION	0.9999991853558763	WITHOUT_CLASSIFICATION	8.146441238405499E-7	DOCUMENTATION
// new	WITHOUT_CLASSIFICATION	0.9999886351384986	WITHOUT_CLASSIFICATION	1.136486150142881E-5	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999798054419913	WITHOUT_CLASSIFICATION	2.019455800873771E-5	DOCUMENTATION
// aload_3 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999979526771553	WITHOUT_CLASSIFICATION	2.047322844645228E-6	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999958625399656	WITHOUT_CLASSIFICATION	4.13746003443117E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999958495666822	WITHOUT_CLASSIFICATION	4.150433317780885E-6	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999958495666822	WITHOUT_CLASSIFICATION	4.150433317780885E-6	DOCUMENTATION
// aastore // args	WITHOUT_CLASSIFICATION	0.9999953089026212	WITHOUT_CLASSIFICATION	4.691097378824138E-6	DOCUMENTATION
/* | this | bean | args | i | raw bean | exception | */	WITHOUT_CLASSIFICATION	0.9999967301996425	WITHOUT_CLASSIFICATION	3.269800357474664E-6	DOCUMENTATION
// required to exception table // iconst_0 // i	WITHOUT_CLASSIFICATION	0.9999996009883166	WITHOUT_CLASSIFICATION	3.9901168337367106E-7	DOCUMENTATION
// istore_3 // store i	WITHOUT_CLASSIFICATION	0.9999942781823433	WITHOUT_CLASSIFICATION	5.721817656652681E-6	DOCUMENTATION
// aload_1 // load the bean	WITHOUT_CLASSIFICATION	0.9999973578230407	WITHOUT_CLASSIFICATION	2.642176959404141E-6	DOCUMENTATION
// checkcast // cast the bean into a raw bean	WITHOUT_CLASSIFICATION	0.99999814594316	WITHOUT_CLASSIFICATION	1.8540568399367727E-6	DOCUMENTATION
/* current stack len = 0 */	WITHOUT_CLASSIFICATION	0.9999846520772729	WITHOUT_CLASSIFICATION	1.5347922727075765E-5	DOCUMENTATION
// start region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999987945280928	WITHOUT_CLASSIFICATION	1.2054719071750633E-6	DOCUMENTATION
// iinc 3, 1	WITHOUT_CLASSIFICATION	0.9999816875679769	WITHOUT_CLASSIFICATION	1.8312432023135592E-5	DOCUMENTATION
// aload 4 // load the raw bean	WITHOUT_CLASSIFICATION	0.9999979464120383	WITHOUT_CLASSIFICATION	2.0535879616486997E-6	DOCUMENTATION
// aload_2 // load the args	WITHOUT_CLASSIFICATION	0.999998742395409	WITHOUT_CLASSIFICATION	1.2576045910246104E-6	DOCUMENTATION
// iconst_i	WITHOUT_CLASSIFICATION	0.99999287565198	WITHOUT_CLASSIFICATION	7.124348019981321E-6	DOCUMENTATION
// aaload	WITHOUT_CLASSIFICATION	0.9999922358140846	WITHOUT_CLASSIFICATION	7.764185915331579E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.999993047363044	WITHOUT_CLASSIFICATION	6.952636956116414E-6	DOCUMENTATION
// checkcast (case of primitive type) // invokevirtual (case of primitive type)	WITHOUT_CLASSIFICATION	0.999999369980795	WITHOUT_CLASSIFICATION	6.300192049106168E-7	DOCUMENTATION
// checkcast (case of reference type)	WITHOUT_CLASSIFICATION	0.9999911132758919	WITHOUT_CLASSIFICATION	8.886724108109925E-6	DOCUMENTATION
/* current stack len = 2 */	WITHOUT_CLASSIFICATION	0.9999847289241228	WITHOUT_CLASSIFICATION	1.5271075877198523E-5	DOCUMENTATION
// end region to handling exception (BulkAccessorException)	WITHOUT_CLASSIFICATION	0.9999981824082713	WITHOUT_CLASSIFICATION	1.8175917287686022E-6	DOCUMENTATION
// register in exception table	WITHOUT_CLASSIFICATION	0.9999988235134242	WITHOUT_CLASSIFICATION	1.1764865758934398E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999930142245145	WITHOUT_CLASSIFICATION	6.985775485466111E-6	DOCUMENTATION
// aload_0	WITHOUT_CLASSIFICATION	0.9999930142245145	WITHOUT_CLASSIFICATION	6.985775485466111E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999915557163958	WITHOUT_CLASSIFICATION	8.444283604195642E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999915557163958	WITHOUT_CLASSIFICATION	8.444283604195642E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999798054419913	WITHOUT_CLASSIFICATION	2.019455800873771E-5	DOCUMENTATION
// invokevirtual	WITHOUT_CLASSIFICATION	0.9999958495666822	WITHOUT_CLASSIFICATION	4.150433317780885E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.999993047363044	WITHOUT_CLASSIFICATION	6.952636956116414E-6	DOCUMENTATION
/* local variables | target obj | each oldvalue | */	WITHOUT_CLASSIFICATION	0.9999979082489461	WITHOUT_CLASSIFICATION	2.0917510540328566E-6	DOCUMENTATION
// astore 5 // store exception	WITHOUT_CLASSIFICATION	0.9999983824485027	WITHOUT_CLASSIFICATION	1.617551497201959E-6	DOCUMENTATION
// new // BulkAccessorException	WITHOUT_CLASSIFICATION	0.9999975000230572	WITHOUT_CLASSIFICATION	2.4999769427551313E-6	DOCUMENTATION
// aload 5 // load exception	WITHOUT_CLASSIFICATION	0.9999984560997461	WITHOUT_CLASSIFICATION	1.5439002539484553E-6	DOCUMENTATION
// iload_3 // i	WITHOUT_CLASSIFICATION	0.999991714125872	WITHOUT_CLASSIFICATION	8.285874128120928E-6	DOCUMENTATION
// invokespecial // BulkAccessorException.<init>	WITHOUT_CLASSIFICATION	0.999998684014639	WITHOUT_CLASSIFICATION	1.3159853609625947E-6	DOCUMENTATION
// athrow	WITHOUT_CLASSIFICATION	0.9999917044965414	WITHOUT_CLASSIFICATION	8.29550345864386E-6	DOCUMENTATION
// WARNING: classfile only	WITHOUT_CLASSIFICATION	0.9999952336769686	WITHOUT_CLASSIFICATION	4.766323031410347E-6	DOCUMENTATION
//swallow	WITHOUT_CLASSIFICATION	0.9999249158938746	WITHOUT_CLASSIFICATION	7.508410612544174E-5	DOCUMENTATION
/* local variable | this | */	WITHOUT_CLASSIFICATION	0.999995521778297	WITHOUT_CLASSIFICATION	4.478221702987796E-6	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999966930794876	WITHOUT_CLASSIFICATION	3.3069205123808077E-6	DOCUMENTATION
// aload_0 // load this	WITHOUT_CLASSIFICATION	0.9999966930794876	WITHOUT_CLASSIFICATION	3.3069205123808077E-6	DOCUMENTATION
// getfield // get field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999981533901394	WITHOUT_CLASSIFICATION	1.846609860487393E-6	DOCUMENTATION
// areturn // return the value of the field	WITHOUT_CLASSIFICATION	0.9999977094318061	WITHOUT_CLASSIFICATION	2.2905681939007537E-6	DOCUMENTATION
/* local variables | this | callback | */	WITHOUT_CLASSIFICATION	0.9999955721288604	WITHOUT_CLASSIFICATION	4.427871139539846E-6	DOCUMENTATION
// aload_1 // load callback	WITHOUT_CLASSIFICATION	0.9999931037442902	WITHOUT_CLASSIFICATION	6.896255709753761E-6	DOCUMENTATION
// putfield // put field "$JAVASSIST_CALLBACK" defined already	WITHOUT_CLASSIFICATION	0.9999979057115921	WITHOUT_CLASSIFICATION	2.0942884079746444E-6	DOCUMENTATION
// case of non-static field	WITHOUT_CLASSIFICATION	0.9999985435870807	WITHOUT_CLASSIFICATION	1.4564129191663864E-6	DOCUMENTATION
// getfield // get each field	WITHOUT_CLASSIFICATION	0.9999943422288847	WITHOUT_CLASSIFICATION	5.657771115324506E-6	DOCUMENTATION
// invokeinterface // invoke Enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999985539385055	WITHOUT_CLASSIFICATION	1.4460614945247647E-6	DOCUMENTATION
// ifnonnull	WITHOUT_CLASSIFICATION	0.999988562741887	WITHOUT_CLASSIFICATION	1.143725811310472E-5	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999967307616215	WITHOUT_CLASSIFICATION	3.2692383783239122E-6	DOCUMENTATION
// *return // each type	WITHOUT_CLASSIFICATION	0.9999967307616215	WITHOUT_CLASSIFICATION	3.2692383783239122E-6	DOCUMENTATION
// *store_1 // each type	WITHOUT_CLASSIFICATION	0.9999983403677383	WITHOUT_CLASSIFICATION	1.6596322617573571E-6	DOCUMENTATION
// ldc // name of the field	WITHOUT_CLASSIFICATION	0.9999958609459592	WITHOUT_CLASSIFICATION	4.1390540408107664E-6	DOCUMENTATION
// *load_1 // each type	WITHOUT_CLASSIFICATION	0.9999983107231258	WITHOUT_CLASSIFICATION	1.6892768740707493E-6	DOCUMENTATION
// invokeinterface // invoke Callback.read*() // each type	WITHOUT_CLASSIFICATION	0.999999509724763	WITHOUT_CLASSIFICATION	4.902752370067357E-7	DOCUMENTATION
// int	WITHOUT_CLASSIFICATION	0.9999905937956762	WITHOUT_CLASSIFICATION	9.406204323830781E-6	DOCUMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999915557163958	WITHOUT_CLASSIFICATION	8.444283604195642E-6	DOCUMENTATION
// dup	WITHOUT_CLASSIFICATION	0.9999798054419913	WITHOUT_CLASSIFICATION	2.019455800873771E-5	DOCUMENTATION
// invokeinterface	WITHOUT_CLASSIFICATION	0.9999958625399656	WITHOUT_CLASSIFICATION	4.13746003443117E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.999993047363044	WITHOUT_CLASSIFICATION	6.952636956116414E-6	DOCUMENTATION
// checkcast	WITHOUT_CLASSIFICATION	0.999993047363044	WITHOUT_CLASSIFICATION	6.952636956116414E-6	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999984662888964	WITHOUT_CLASSIFICATION	1.5337111036432734E-6	DOCUMENTATION
// invokeinterface // enabled.getInterceptFieldCallback()	WITHOUT_CLASSIFICATION	0.9999984662888964	WITHOUT_CLASSIFICATION	1.5337111036432734E-6	DOCUMENTATION
// ifnonnull (label1)	WITHOUT_CLASSIFICATION	0.9999904772370538	WITHOUT_CLASSIFICATION	9.522762946233252E-6	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999961862187747	WITHOUT_CLASSIFICATION	3.813781225270334E-6	DOCUMENTATION
// *load_1	WITHOUT_CLASSIFICATION	0.9999961862187747	WITHOUT_CLASSIFICATION	3.813781225270334E-6	DOCUMENTATION
// putfield	WITHOUT_CLASSIFICATION	0.9999892689426559	WITHOUT_CLASSIFICATION	1.0731057343981432E-5	DOCUMENTATION
// return ;	WITHOUT_CLASSIFICATION	0.9999822673345097	WITHOUT_CLASSIFICATION	1.7732665490277762E-5	DOCUMENTATION
// ldc // field name	WITHOUT_CLASSIFICATION	0.999994128535732	WITHOUT_CLASSIFICATION	5.871464267961073E-6	DOCUMENTATION
// getfield // old value of the field	WITHOUT_CLASSIFICATION	0.999997030197809	WITHOUT_CLASSIFICATION	2.9698021909945073E-6	DOCUMENTATION
// invokeinterface // callback.write*(..)	WITHOUT_CLASSIFICATION	0.9999988035757951	WITHOUT_CLASSIFICATION	1.1964242049850642E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999788345221708	WITHOUT_CLASSIFICATION	2.11654778290986E-5	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999788345221708	WITHOUT_CLASSIFICATION	2.11654778290986E-5	DOCUMENTATION
// not array	WITHOUT_CLASSIFICATION	0.9999907405618523	WITHOUT_CLASSIFICATION	9.259438147656756E-6	DOCUMENTATION
// array of reference type	WITHOUT_CLASSIFICATION	0.999984528860199	WITHOUT_CLASSIFICATION	1.5471139801036573E-5	DOCUMENTATION
// boolean	WITHOUT_CLASSIFICATION	0.9999942520944625	WITHOUT_CLASSIFICATION	5.747905537559325E-6	DOCUMENTATION
// byte	WITHOUT_CLASSIFICATION	0.9999890185567107	WITHOUT_CLASSIFICATION	1.098144328928798E-5	DOCUMENTATION
// char	WITHOUT_CLASSIFICATION	0.9999878444944189	WITHOUT_CLASSIFICATION	1.2155505581046351E-5	DOCUMENTATION
// short	WITHOUT_CLASSIFICATION	0.9999884473922042	WITHOUT_CLASSIFICATION	1.1552607795884311E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999931187684045	WITHOUT_CLASSIFICATION	6.881231595561248E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.999992261154083	WITHOUT_CLASSIFICATION	7.738845917096271E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.999992261154083	WITHOUT_CLASSIFICATION	7.738845917096271E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999931516165701	WITHOUT_CLASSIFICATION	6.848383429820709E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999931516165701	WITHOUT_CLASSIFICATION	6.848383429820709E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999922038800844	WITHOUT_CLASSIFICATION	7.796119915751866E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999922038800844	WITHOUT_CLASSIFICATION	7.796119915751866E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999967777334549	WITHOUT_CLASSIFICATION	3.2222665452053387E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999967777334549	WITHOUT_CLASSIFICATION	3.2222665452053387E-6	DOCUMENTATION
// reference type	WITHOUT_CLASSIFICATION	0.9999788345221708	WITHOUT_CLASSIFICATION	2.11654778290986E-5	DOCUMENTATION
// double	WITHOUT_CLASSIFICATION	0.9999931187684045	WITHOUT_CLASSIFICATION	6.881231595561248E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.999992261154083	WITHOUT_CLASSIFICATION	7.738845917096271E-6	DOCUMENTATION
// float	WITHOUT_CLASSIFICATION	0.999992261154083	WITHOUT_CLASSIFICATION	7.738845917096271E-6	DOCUMENTATION
// long	WITHOUT_CLASSIFICATION	0.9999931516165701	WITHOUT_CLASSIFICATION	6.848383429820709E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999922038800844	WITHOUT_CLASSIFICATION	7.796119915751866E-6	DOCUMENTATION
// bad type	WITHOUT_CLASSIFICATION	0.9999922038800844	WITHOUT_CLASSIFICATION	7.796119915751866E-6	DOCUMENTATION
// boolean, byte, char, int, short	WITHOUT_CLASSIFICATION	0.9999967777334549	WITHOUT_CLASSIFICATION	3.2222665452053387E-6	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999982165761747	WITHOUT_CLASSIFICATION	1.7834238252705737E-6	DOCUMENTATION
//Mainly for OSCache	WITHOUT_CLASSIFICATION	0.9999777212400622	WITHOUT_CLASSIFICATION	2.2278759937706112E-5	DOCUMENTATION
//decrement the lock	WITHOUT_CLASSIFICATION	0.9999811343503453	WITHOUT_CLASSIFICATION	1.8865649654714156E-5	DOCUMENTATION
// create new lock that times out immediately	WITHOUT_CLASSIFICATION	0.9999992033603895	WITHOUT_CLASSIFICATION	7.966396105122613E-7	DOCUMENTATION
//recache the updated state	WITHOUT_CLASSIFICATION	0.9999907842206172	WITHOUT_CLASSIFICATION	9.2157793828404E-6	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999898486767643	WITHOUT_CLASSIFICATION	1.0151323235651839E-5	DOCUMENTATION
//null clientLock is remotely possible but will never happen in practice	WITHOUT_CLASSIFICATION	0.999991366358622	WITHOUT_CLASSIFICATION	8.633641377968034E-6	DOCUMENTATION
// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp	WITHOUT_CLASSIFICATION	0.9999994559601713	WITHOUT_CLASSIFICATION	5.440398288484812E-7	DOCUMENTATION
//by requiring <, we rely on lock timeout in the case of an unsuccessful update!	WITHOUT_CLASSIFICATION	0.9999957091117628	WITHOUT_CLASSIFICATION	4.290888237160493E-6	DOCUMENTATION
// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.	WITHOUT_CLASSIFICATION	0.9999994059950414	WITHOUT_CLASSIFICATION	5.940049585134761E-7	DOCUMENTATION
// disassemble positional parameters	WITHOUT_CLASSIFICATION	0.9999983222542875	WITHOUT_CLASSIFICATION	1.6777457124865182E-6	DOCUMENTATION
// disassemble named parameters	WITHOUT_CLASSIFICATION	0.99999693315272	WITHOUT_CLASSIFICATION	3.0668472799837387E-6	DOCUMENTATION
//ie. 60 seconds	WITHOUT_CLASSIFICATION	0.9999830743470844	WITHOUT_CLASSIFICATION	1.6925652915526947E-5	DOCUMENTATION
// noop	WITHOUT_CLASSIFICATION	0.9999898486767643	WITHOUT_CLASSIFICATION	1.0151323235651839E-5	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9998940976500336	WITHOUT_CLASSIFICATION	1.0590234996646827E-4	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9998940976500336	WITHOUT_CLASSIFICATION	1.0590234996646827E-4	DOCUMENTATION
// this is called from SettingsFactory irregardless; trivial to simply disregard	WITHOUT_CLASSIFICATION	0.9999995989152809	WITHOUT_CLASSIFICATION	4.0108471909818685E-7	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999990460471638	WITHOUT_CLASSIFICATION	9.53952836221705E-7	DOCUMENTATION
// Do nothing; subclasses may override.	WITHOUT_CLASSIFICATION	0.9999990460471638	WITHOUT_CLASSIFICATION	9.53952836221705E-7	DOCUMENTATION
//throw new UnsupportedOperationException("Can't write to a readonly object");	WITHOUT_CLASSIFICATION	0.999998403958592	WITHOUT_CLASSIFICATION	1.5960414081229842E-6	DOCUMENTATION
//assembled state gets put in a new array (we read from cache by value!)	WITHOUT_CLASSIFICATION	0.9999988943915078	WITHOUT_CLASSIFICATION	1.105608492188395E-6	DOCUMENTATION
//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load	WITHOUT_CLASSIFICATION	0.999998170212397	WITHOUT_CLASSIFICATION	1.8297876029882403E-6	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999971048346902	WITHOUT_CLASSIFICATION	2.8951653098838616E-6	DOCUMENTATION
// no-op; CCS did not have such a concept	WITHOUT_CLASSIFICATION	0.9999971048346902	WITHOUT_CLASSIFICATION	2.8951653098838616E-6	DOCUMENTATION
// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.	WITHOUT_CLASSIFICATION	0.999999820533147	WITHOUT_CLASSIFICATION	1.7946685314207935E-7	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999994472530576	WITHOUT_CLASSIFICATION	5.5274694255036E-7	DOCUMENTATION
// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction	WITHOUT_CLASSIFICATION	0.9999994472530576	WITHOUT_CLASSIFICATION	5.5274694255036E-7	DOCUMENTATION
// classes mentioned in extends not available - so put it in queue	WITHOUT_CLASSIFICATION	0.9999993790541856	WITHOUT_CLASSIFICATION	6.209458143345656E-7	DOCUMENTATION
// get meta's from <hibernate-mapping>	WITHOUT_CLASSIFICATION	0.9999980196793022	WITHOUT_CLASSIFICATION	1.980320697807699E-6	DOCUMENTATION
// get meta's from <class>	WITHOUT_CLASSIFICATION	0.9999964130476326	WITHOUT_CLASSIFICATION	3.586952367235689E-6	DOCUMENTATION
// DB-OBJECTNAME	WITHOUT_CLASSIFICATION	0.9999513343272703	WITHOUT_CLASSIFICATION	4.866567272963848E-5	DOCUMENTATION
// MUTABLE	WITHOUT_CLASSIFICATION	0.9999793248380883	WITHOUT_CLASSIFICATION	2.0675161911669613E-5	DOCUMENTATION
// WHERE	WITHOUT_CLASSIFICATION	0.9999777621046398	WITHOUT_CLASSIFICATION	2.2237895360147034E-5	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999722069272644	WITHOUT_CLASSIFICATION	2.7793072735581335E-5	DOCUMENTATION
// POLYMORPHISM	WITHOUT_CLASSIFICATION	0.9999654609927465	WITHOUT_CLASSIFICATION	3.453900725334706E-5	DOCUMENTATION
// TODO:	WITHOUT_CLASSIFICATION	0.9998933332307546	WITHOUT_CLASSIFICATION	1.0666676924545371E-4	DOCUMENTATION
// ID	WITHOUT_CLASSIFICATION	0.999972877832412	WITHOUT_CLASSIFICATION	2.7122167588009122E-5	DOCUMENTATION
// VERSION / TIMESTAMP	WITHOUT_CLASSIFICATION	0.9999564338319539	WITHOUT_CLASSIFICATION	4.356616804614917E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.999955777104742	WITHOUT_CLASSIFICATION	4.422289525793293E-5	DOCUMENTATION
// Primary key constraint	WITHOUT_CLASSIFICATION	0.9999978462478072	WITHOUT_CLASSIFICATION	2.1537521928804935E-6	DOCUMENTATION
// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag	WITHOUT_CLASSIFICATION	0.9999992830162598	WITHOUT_CLASSIFICATION	7.169837401706801E-7	DOCUMENTATION
// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...	WITHOUT_CLASSIFICATION	0.9999997000061298	WITHOUT_CLASSIFICATION	2.9999387018455676E-7	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.999955777104742	WITHOUT_CLASSIFICATION	4.422289525793293E-5	DOCUMENTATION
// ( (Column) discrim.getColumnIterator().next() ).setType(type);	WITHOUT_CLASSIFICATION	0.9999987284917362	WITHOUT_CLASSIFICATION	1.2715082638075032E-6	DOCUMENTATION
// go ahead and set the lazy here, since pojo.proxy can override it.	WITHOUT_CLASSIFICATION	0.9999992432267654	WITHOUT_CLASSIFICATION	7.567732346496947E-7	DOCUMENTATION
// DYNAMIC UPDATE	WITHOUT_CLASSIFICATION	0.9999596949028928	WITHOUT_CLASSIFICATION	4.030509710725542E-5	DOCUMENTATION
// IMPORT	WITHOUT_CLASSIFICATION	0.9999792193677917	WITHOUT_CLASSIFICATION	2.0780632208232123E-5	DOCUMENTATION
// BATCH SIZE	WITHOUT_CLASSIFICATION	0.9999503838194628	WITHOUT_CLASSIFICATION	4.961618053713831E-5	DOCUMENTATION
// SELECT BEFORE UPDATE	WITHOUT_CLASSIFICATION	0.9999470794210504	WITHOUT_CLASSIFICATION	5.292057894955761E-5	DOCUMENTATION
// OPTIMISTIC LOCK MODE	WITHOUT_CLASSIFICATION	0.9999220332672015	WITHOUT_CLASSIFICATION	7.796673279855861E-5	DOCUMENTATION
// PERSISTER	WITHOUT_CLASSIFICATION	0.9999634036162438	WITHOUT_CLASSIFICATION	3.659638375615261E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999525223661561	WITHOUT_CLASSIFICATION	4.747763384391336E-5	DOCUMENTATION
// get meta's from <subclass>	WITHOUT_CLASSIFICATION	0.9999967729800701	WITHOUT_CLASSIFICATION	3.2270199299901027E-6	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999944394142167	WITHOUT_CLASSIFICATION	5.560585783260039E-6	DOCUMENTATION
// joined subclasses	WITHOUT_CLASSIFICATION	0.9999978074466441	WITHOUT_CLASSIFICATION	2.192553355940103E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.999972981894402	WITHOUT_CLASSIFICATION	2.7018105597968403E-5	DOCUMENTATION
// CHECK	WITHOUT_CLASSIFICATION	0.9999722069272644	WITHOUT_CLASSIFICATION	2.7793072735581335E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999525223661561	WITHOUT_CLASSIFICATION	4.747763384391336E-5	DOCUMENTATION
// properties	WITHOUT_CLASSIFICATION	0.9999944394142167	WITHOUT_CLASSIFICATION	5.560585783260039E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.999972981894402	WITHOUT_CLASSIFICATION	2.7018105597968403E-5	DOCUMENTATION
// model.getKey().setType( new Type( model.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999984801293627	WITHOUT_CLASSIFICATION	1.5198706374630748E-6	DOCUMENTATION
// TABLENAME	WITHOUT_CLASSIFICATION	0.9999669276754967	WITHOUT_CLASSIFICATION	3.3072324503294317E-5	DOCUMENTATION
// join.getKey().setType( new Type( lazz.getIdentifier() ) );	WITHOUT_CLASSIFICATION	0.9999990157498945	WITHOUT_CLASSIFICATION	9.842501055600086E-7	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999634827167975	WITHOUT_CLASSIFICATION	3.6517283202491375E-5	DOCUMENTATION
// COLUMN(S)	WITHOUT_CLASSIFICATION	0.9999580748579598	WITHOUT_CLASSIFICATION	4.1925142040223505E-5	DOCUMENTATION
// column index	WITHOUT_CLASSIFICATION	0.999995442478697	WITHOUT_CLASSIFICATION	4.557521303010676E-6	DOCUMENTATION
//column unique-key	WITHOUT_CLASSIFICATION	0.9999715490316082	WITHOUT_CLASSIFICATION	2.8450968391694765E-5	DOCUMENTATION
// automatically makes a column with the default name if none is specifed by XML	WITHOUT_CLASSIFICATION	0.9999990450774525	WITHOUT_CLASSIFICATION	9.54922547437616E-7	DOCUMENTATION
// for an any	WITHOUT_CLASSIFICATION	0.9999722107863204	WITHOUT_CLASSIFICATION	2.778921367957369E-5	DOCUMENTATION
// insertable simply because that is the user did not specify // anything; just override it	WITHOUT_CLASSIFICATION	0.9999997948435438	WITHOUT_CLASSIFICATION	2.0515645606105977E-7	DOCUMENTATION
// the user specifically supplied insert="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999997583828969	WITHOUT_CLASSIFICATION	2.416171030088527E-7	DOCUMENTATION
// properties generated on update can never be updateable...	WITHOUT_CLASSIFICATION	0.9999992896789699	WITHOUT_CLASSIFICATION	7.103210300685232E-7	DOCUMENTATION
// updateable only because the user did not specify  // anything; just override it	WITHOUT_CLASSIFICATION	0.999999474277674	WITHOUT_CLASSIFICATION	5.257223260672821E-7	DOCUMENTATION
// the user specifically supplied update="true", // which constitutes an illegal combo	WITHOUT_CLASSIFICATION	0.9999997681755605	WITHOUT_CLASSIFICATION	2.318244395835059E-7	DOCUMENTATION
// ROLENAME	WITHOUT_CLASSIFICATION	0.9999676113089642	WITHOUT_CLASSIFICATION	3.2388691035903584E-5	DOCUMENTATION
// FETCH STRATEGY	WITHOUT_CLASSIFICATION	0.9999459961754804	WITHOUT_CLASSIFICATION	5.400382451972506E-5	DOCUMENTATION
// TABLE	WITHOUT_CLASSIFICATION	0.9999801670615805	WITHOUT_CLASSIFICATION	1.9832938419474783E-5	DOCUMENTATION
//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );	WITHOUT_CLASSIFICATION	0.9999981827153418	WITHOUT_CLASSIFICATION	1.8172846582384292E-6	DOCUMENTATION
// SORT	WITHOUT_CLASSIFICATION	0.9999782910077847	WITHOUT_CLASSIFICATION	2.170899221525674E-5	DOCUMENTATION
// CUSTOM SQL	WITHOUT_CLASSIFICATION	0.9999525223661561	WITHOUT_CLASSIFICATION	4.747763384391336E-5	DOCUMENTATION
// unsorted, natural, comparator.class.name	WITHOUT_CLASSIFICATION	0.9999978772734318	WITHOUT_CLASSIFICATION	2.1227265680824987E-6	DOCUMENTATION
// ORPHAN DELETE (used for programmer error detection)	WITHOUT_CLASSIFICATION	0.9999985889706762	WITHOUT_CLASSIFICATION	1.411029323892182E-6	DOCUMENTATION
// set up second pass	WITHOUT_CLASSIFICATION	0.9999962553035047	WITHOUT_CLASSIFICATION	3.7446964954612107E-6	DOCUMENTATION
// an "embedded" component (composite ids and unique) // note that this does not handle nested components	WITHOUT_CLASSIFICATION	0.9999989701277819	WITHOUT_CLASSIFICATION	1.0298722180456001E-6	DOCUMENTATION
// a nested composite element	WITHOUT_CLASSIFICATION	0.9999980845054428	WITHOUT_CLASSIFICATION	1.9154945572217267E-6	DOCUMENTATION
// for an any // we will have to use reflection	WITHOUT_CLASSIFICATION	0.9999971537444319	WITHOUT_CLASSIFICATION	2.8462555679773376E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy	WITHOUT_CLASSIFICATION	0.9999985508684434	WITHOUT_CLASSIFICATION	1.4491315565736204E-6	DOCUMENTATION
// use old (HB 2.1) defaults if outer-join is specified	WITHOUT_CLASSIFICATION	0.999998770082978	WITHOUT_CLASSIFICATION	1.2299170219044136E-6	DOCUMENTATION
//lazy = !join;	WITHOUT_CLASSIFICATION	0.9999648583001023	WITHOUT_CLASSIFICATION	3.5141699897783245E-5	DOCUMENTATION
// GENERATOR	WITHOUT_CLASSIFICATION	0.9999591137141922	WITHOUT_CLASSIFICATION	4.088628580783171E-5	DOCUMENTATION
// ID UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999715474126772	WITHOUT_CLASSIFICATION	2.8452587322798405E-5	DOCUMENTATION
// VERSION UNSAVED-VALUE	WITHOUT_CLASSIFICATION	0.9999638228016278	WITHOUT_CLASSIFICATION	3.617719837232717E-5	DOCUMENTATION
// not necessarily a *unique* property reference	WITHOUT_CLASSIFICATION	0.9999973446523078	WITHOUT_CLASSIFICATION	2.6553476920592436E-6	DOCUMENTATION
// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);	WITHOUT_CLASSIFICATION	0.999999525730075	WITHOUT_CLASSIFICATION	4.7426992508677E-7	DOCUMENTATION
// contained elements:	WITHOUT_CLASSIFICATION	0.9999962767844899	WITHOUT_CLASSIFICATION	3.7232155101480244E-6	DOCUMENTATION
// for non-inverse one-to-many, with a not-null fk, add a backref!	WITHOUT_CLASSIFICATION	0.9999988641866043	WITHOUT_CLASSIFICATION	1.1358133956571576E-6	DOCUMENTATION
// Bind the where	WITHOUT_CLASSIFICATION	0.9999924569329579	WITHOUT_CLASSIFICATION	7.5430670419906084E-6	DOCUMENTATION
// Bind the order-by	WITHOUT_CLASSIFICATION	0.9999958700053272	WITHOUT_CLASSIFICATION	4.129994672716142E-6	DOCUMENTATION
// Bind the filters	WITHOUT_CLASSIFICATION	0.9999971555977938	WITHOUT_CLASSIFICATION	2.8444022061110833E-6	DOCUMENTATION
// overriding inherited meta attribute. HBX-621 & HBX-793	WITHOUT_CLASSIFICATION	0.999997597623378	WITHOUT_CLASSIFICATION	2.402376622048545E-6	DOCUMENTATION
// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.	WITHOUT_CLASSIFICATION	0.9999991205486878	WITHOUT_CLASSIFICATION	8.794513121153403E-7	DOCUMENTATION
// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).	WITHOUT_CLASSIFICATION	0.9999983322778437	WITHOUT_CLASSIFICATION	1.6677221562130074E-6	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999843575415996	WITHOUT_CLASSIFICATION	1.5642458400303793E-5	DOCUMENTATION
//SessionFactory name:	WITHOUT_CLASSIFICATION	0.9999739451694267	WITHOUT_CLASSIFICATION	2.605483057330218E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999649742793382	WITHOUT_CLASSIFICATION	3.502572066183016E-5	DOCUMENTATION
//JDBC and connection settings:	WITHOUT_CLASSIFICATION	0.9999649742793382	WITHOUT_CLASSIFICATION	3.502572066183016E-5	DOCUMENTATION
//Interrogate JDBC metadata	WITHOUT_CLASSIFICATION	0.9999697397883058	WITHOUT_CLASSIFICATION	3.0260211694294793E-5	DOCUMENTATION
// user supplied JDBC connections	WITHOUT_CLASSIFICATION	0.9999972755978382	WITHOUT_CLASSIFICATION	2.7244021618062494E-6	DOCUMENTATION
//use dialect default properties	WITHOUT_CLASSIFICATION	0.999990730275901	WITHOUT_CLASSIFICATION	9.269724098919324E-6	DOCUMENTATION
// Transaction settings:	WITHOUT_CLASSIFICATION	0.9999960006784206	WITHOUT_CLASSIFICATION	3.999321579347757E-6	DOCUMENTATION
//SQL Generation settings:	WITHOUT_CLASSIFICATION	0.9999848937794683	WITHOUT_CLASSIFICATION	1.5106220531718618E-5	DOCUMENTATION
//Query parser settings:	WITHOUT_CLASSIFICATION	0.9999788937943387	WITHOUT_CLASSIFICATION	2.1106205661219192E-5	DOCUMENTATION
// Second-level / query cache:	WITHOUT_CLASSIFICATION	0.9999966574964277	WITHOUT_CLASSIFICATION	3.3425035722574044E-6	DOCUMENTATION
// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default	WITHOUT_CLASSIFICATION	0.9999994766383244	WITHOUT_CLASSIFICATION	5.233616755541059E-7	DOCUMENTATION
//SQL Exception converter:	WITHOUT_CLASSIFICATION	0.9999760042188205	WITHOUT_CLASSIFICATION	2.3995781179551865E-5	DOCUMENTATION
//Statistics and logging:	WITHOUT_CLASSIFICATION	0.9999769735475587	WITHOUT_CLASSIFICATION	2.3026452441255118E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//Schema export:	WITHOUT_CLASSIFICATION	0.9999676534571524	WITHOUT_CLASSIFICATION	3.234654284752473E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// legacy behavior, apply the bridge...	WITHOUT_CLASSIFICATION	0.9999982836134197	WITHOUT_CLASSIFICATION	1.7163865802928458E-6	DOCUMENTATION
// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment	WITHOUT_CLASSIFICATION	0.9999995997901814	WITHOUT_CLASSIFICATION	4.002098186480622E-7	DOCUMENTATION
//if dotted and not load-collection nor return-join //regular property	WITHOUT_CLASSIFICATION	0.9999835951451429	WITHOUT_CLASSIFICATION	1.6404854857068804E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999884265516321	WITHOUT_CLASSIFICATION	1.15734483678529E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999995194088333	WITHOUT_CLASSIFICATION	4.805911666936774E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// using local since the inheritedMetas at this point is not the correct map since it is always the empty map	WITHOUT_CLASSIFICATION	0.9999994513875933	WITHOUT_CLASSIFICATION	5.486124067373918E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// if doc is null, then for whatever reason, the cached file cannot be used...	WITHOUT_CLASSIFICATION	0.9999991597730379	WITHOUT_CLASSIFICATION	8.402269620140409E-7	DOCUMENTATION
// drop them in reverse order in case db needs it done that way...	WITHOUT_CLASSIFICATION	0.9999981052557113	WITHOUT_CLASSIFICATION	1.894744288651847E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// This method may be called many times!!	WITHOUT_CLASSIFICATION	0.9999987053256307	WITHOUT_CLASSIFICATION	1.2946743692911082E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.999989665169381	WITHOUT_CLASSIFICATION	1.0334830618914215E-5	DOCUMENTATION
// found	WITHOUT_CLASSIFICATION	0.999989665169381	WITHOUT_CLASSIFICATION	1.0334830618914215E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999443614537933	WITHOUT_CLASSIFICATION	5.56385462066181E-5	DOCUMENTATION
//<String, String>	WITHOUT_CLASSIFICATION	0.9999443614537933	WITHOUT_CLASSIFICATION	5.56385462066181E-5	DOCUMENTATION
//+ "_" + referencedColumnName not used for backward compatibility	WITHOUT_CLASSIFICATION	0.9999843575415996	WITHOUT_CLASSIFICATION	1.5642458400303793E-5	DOCUMENTATION
//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227	WITHOUT_CLASSIFICATION	0.9999929594052291	WITHOUT_CLASSIFICATION	7.040594770839821E-6	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999876370819256	WITHOUT_CLASSIFICATION	1.2362918074452562E-5	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999852958814744	WITHOUT_CLASSIFICATION	1.470411852565232E-5	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999996347386094	WITHOUT_CLASSIFICATION	3.65261390594226E-6	DOCUMENTATION
//orphan delete not supported for EntityMode.DOM4J	WITHOUT_CLASSIFICATION	0.9999876370819256	WITHOUT_CLASSIFICATION	1.2362918074452562E-5	DOCUMENTATION
//element = XMLHelper.generateDom4jElement( persister.getNodeName() );	WITHOUT_CLASSIFICATION	0.9999852958814744	WITHOUT_CLASSIFICATION	1.470411852565232E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999888776047916	WITHOUT_CLASSIFICATION	1.112239520847049E-5	DOCUMENTATION
//maintain correct duplication if loaded in a cartesian product	WITHOUT_CLASSIFICATION	0.999994170764897	WITHOUT_CLASSIFICATION	5.829235102839584E-6	DOCUMENTATION
// the element has been removed from the set	WITHOUT_CLASSIFICATION	0.9999956792392618	WITHOUT_CLASSIFICATION	4.320760738292512E-6	DOCUMENTATION
// the element has changed	WITHOUT_CLASSIFICATION	0.9999959711633005	WITHOUT_CLASSIFICATION	4.02883669951219E-6	DOCUMENTATION
//Careful: these methods do not initialize the collection.	WITHOUT_CLASSIFICATION	0.9999973202633953	WITHOUT_CLASSIFICATION	2.6797366048096108E-6	DOCUMENTATION
//needed so that we remove this collection from the second-level cache	WITHOUT_CLASSIFICATION	0.999996422531901	WITHOUT_CLASSIFICATION	3.5774680989035234E-6	DOCUMENTATION
// override on some subclasses	WITHOUT_CLASSIFICATION	0.9999967235402814	WITHOUT_CLASSIFICATION	3.276459718659618E-6	DOCUMENTATION
//override on some subclasses	WITHOUT_CLASSIFICATION	0.9999850086696314	WITHOUT_CLASSIFICATION	1.499133036865688E-5	DOCUMENTATION
//do this bit after setting initialized to true or it will recurse	WITHOUT_CLASSIFICATION	0.9999908370845744	WITHOUT_CLASSIFICATION	9.162915425573975E-6	DOCUMENTATION
// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither	WITHOUT_CLASSIFICATION	0.9999994085248505	WITHOUT_CLASSIFICATION	5.914751495696263E-7	DOCUMENTATION
// create the collection holding the Orphans	WITHOUT_CLASSIFICATION	0.999998825235616	WITHOUT_CLASSIFICATION	1.1747643839628082E-6	DOCUMENTATION
// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access	WITHOUT_CLASSIFICATION	0.9999996865851069	WITHOUT_CLASSIFICATION	3.134148931157468E-7	DOCUMENTATION
// iterate over the *old* list	WITHOUT_CLASSIFICATION	0.9999990517920347	WITHOUT_CLASSIFICATION	9.482079652973855E-7	DOCUMENTATION
/*(array==null) ? tempList.size() :*/	WITHOUT_CLASSIFICATION	0.9999919607205061	WITHOUT_CLASSIFICATION	8.039279493849907E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999996347386094	WITHOUT_CLASSIFICATION	3.65261390594226E-6	DOCUMENTATION
/*(array==null) ? tempList.get(i) :*/	WITHOUT_CLASSIFICATION	0.9999925752817717	WITHOUT_CLASSIFICATION	7.424718228413472E-6	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999833515464518	WITHOUT_CLASSIFICATION	1.6648453548240367E-5	DOCUMENTATION
//write(); -- doesn't	WITHOUT_CLASSIFICATION	0.9999833515464518	WITHOUT_CLASSIFICATION	1.6648453548240367E-5	DOCUMENTATION
// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array	WITHOUT_CLASSIFICATION	0.9999992560656157	WITHOUT_CLASSIFICATION	7.439343842836874E-7	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999888776047916	WITHOUT_CLASSIFICATION	1.112239520847049E-5	DOCUMENTATION
// finally, what it's all about...	WITHOUT_CLASSIFICATION	0.9999961126042102	WITHOUT_CLASSIFICATION	3.887395789793071E-6	DOCUMENTATION
// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead	WITHOUT_CLASSIFICATION	0.9999998542154881	WITHOUT_CLASSIFICATION	1.457845119117984E-7	DOCUMENTATION
// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!	WITHOUT_CLASSIFICATION	0.9999984098578864	WITHOUT_CLASSIFICATION	1.5901421136612289E-6	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999873084854282	WITHOUT_CLASSIFICATION	1.2691514571906799E-5	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.999993812573811	WITHOUT_CLASSIFICATION	6.1874261888954815E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999888776047916	WITHOUT_CLASSIFICATION	1.112239520847049E-5	DOCUMENTATION
//a shortcut if its location didn't change!	WITHOUT_CLASSIFICATION	0.9999873084854282	WITHOUT_CLASSIFICATION	1.2691514571906799E-5	DOCUMENTATION
//search for it //note that this code is incorrect for other than one-to-many	WITHOUT_CLASSIFICATION	0.999993812573811	WITHOUT_CLASSIFICATION	6.1874261888954815E-6	DOCUMENTATION
/*public boolean equals(Object other) {	WITHOUT_CLASSIFICATION	0.9999827383327924	WITHOUT_CLASSIFICATION	1.726166720756769E-5	DOCUMENTATION
// List OPERATIONS:	WITHOUT_CLASSIFICATION	0.9999874850996254	WITHOUT_CLASSIFICATION	1.2514900374491707E-5	DOCUMENTATION
//pad with nulls from the current last element up to the new index	WITHOUT_CLASSIFICATION	0.9999969620763641	WITHOUT_CLASSIFICATION	3.037923635971057E-6	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999888776047916	WITHOUT_CLASSIFICATION	1.112239520847049E-5	DOCUMENTATION
//needed for SOAP libraries, etc	WITHOUT_CLASSIFICATION	0.9999888776047916	WITHOUT_CLASSIFICATION	1.112239520847049E-5	DOCUMENTATION
// from Map	WITHOUT_CLASSIFICATION	0.9999834785025213	WITHOUT_CLASSIFICATION	1.652149747865863E-5	DOCUMENTATION
// from SortedMap	WITHOUT_CLASSIFICATION	0.9999923924748428	WITHOUT_CLASSIFICATION	7.607525157080781E-6	DOCUMENTATION
//inject the data	WITHOUT_CLASSIFICATION	0.9999865594022794	WITHOUT_CLASSIFICATION	1.3440597720504482E-5	DOCUMENTATION
// cannot be instantiated	WITHOUT_CLASSIFICATION	0.999997861828254	WITHOUT_CLASSIFICATION	2.1381717459314703E-6	DOCUMENTATION
//default pool size 20	WITHOUT_CLASSIFICATION	0.9999839561424303	WITHOUT_CLASSIFICATION	1.6043857569691568E-5	DOCUMENTATION
// trying via forName() first to be as close to DriverManager's semantics	WITHOUT_CLASSIFICATION	0.9999987228567326	WITHOUT_CLASSIFICATION	1.2771432673922887E-6	DOCUMENTATION
// if debug level is enabled, then log the password, otherwise mask it	WITHOUT_CLASSIFICATION	0.9999994852663358	WITHOUT_CLASSIFICATION	5.147336642010909E-7	DOCUMENTATION
// register a cleanup synch	WITHOUT_CLASSIFICATION	0.9999974379785155	WITHOUT_CLASSIFICATION	2.5620214844564434E-6	DOCUMENTATION
// wrap the session in the transaction-protection proxy	WITHOUT_CLASSIFICATION	0.9999992155539139	WITHOUT_CLASSIFICATION	7.844460860715362E-7	DOCUMENTATION
// then bind it	WITHOUT_CLASSIFICATION	0.9999924929900098	WITHOUT_CLASSIFICATION	7.5070099902138795E-6	DOCUMENTATION
// try to make sure we don't wrap and already wrapped session	WITHOUT_CLASSIFICATION	0.9999990296303843	WITHOUT_CLASSIFICATION	9.703696155681355E-7	DOCUMENTATION
// allow these to go through the the real session no matter what	WITHOUT_CLASSIFICATION	0.9999985135626268	WITHOUT_CLASSIFICATION	1.4864373731711856E-6	DOCUMENTATION
// limit the methods available if no transaction is active	WITHOUT_CLASSIFICATION	0.999999694228743	WITHOUT_CLASSIFICATION	3.05771257012689E-7	DOCUMENTATION
// allow these (deprecated) methods to pass through	WITHOUT_CLASSIFICATION	0.9999989754954018	WITHOUT_CLASSIFICATION	1.0245045981537793E-6	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999970453089992	WITHOUT_CLASSIFICATION	2.954691000705933E-6	DOCUMENTATION
// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).	WITHOUT_CLASSIFICATION	0.9999995655118535	WITHOUT_CLASSIFICATION	4.3448814652099813E-7	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999891439947869	WITHOUT_CLASSIFICATION	1.085600521304715E-5	DOCUMENTATION
//private String propertyName;	WITHOUT_CLASSIFICATION	0.9999859591869787	WITHOUT_CLASSIFICATION	1.4040813021170233E-5	DOCUMENTATION
/*public PropertyProjection project() {	WITHOUT_CLASSIFICATION	0.9999790604909761	WITHOUT_CLASSIFICATION	2.0939509023953387E-5	DOCUMENTATION
//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );	WITHOUT_CLASSIFICATION	0.9999973222335228	WITHOUT_CLASSIFICATION	2.677766477134014E-6	DOCUMENTATION
//" collection_ where " +	WITHOUT_CLASSIFICATION	0.9999799960228687	WITHOUT_CLASSIFICATION	2.0003977131297155E-5	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999298881006404	WITHOUT_CLASSIFICATION	7.01118993595879E-5	DOCUMENTATION
//unsupported	WITHOUT_CLASSIFICATION	0.9999298881006404	WITHOUT_CLASSIFICATION	7.01118993595879E-5	DOCUMENTATION
//cannot be instantiated	WITHOUT_CLASSIFICATION	0.9999891439947869	WITHOUT_CLASSIFICATION	1.085600521304715E-5	DOCUMENTATION
//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries	WITHOUT_CLASSIFICATION	0.9999987761954683	WITHOUT_CLASSIFICATION	1.2238045316554852E-6	DOCUMENTATION
//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set	WITHOUT_CLASSIFICATION	0.9999987713543902	WITHOUT_CLASSIFICATION	1.2286456098435528E-6	DOCUMENTATION
//implicit polymorphism not supported (would need a union)	WITHOUT_CLASSIFICATION	0.9999887933607737	WITHOUT_CLASSIFICATION	1.120663922635707E-5	DOCUMENTATION
//pull off the last ", "	WITHOUT_CLASSIFICATION	0.9999791337430475	WITHOUT_CLASSIFICATION	2.086625695247119E-5	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9997297305056988	WITHOUT_CLASSIFICATION	2.7026949430117373E-4	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces	WITHOUT_CLASSIFICATION	0.9999981541026007	WITHOUT_CLASSIFICATION	1.8458973992853141E-6	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)	WITHOUT_CLASSIFICATION	0.9999985021542612	WITHOUT_CLASSIFICATION	1.4978457387265946E-6	DOCUMENTATION
// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method	WITHOUT_CLASSIFICATION	0.9999984610006311	WITHOUT_CLASSIFICATION	1.5389993689792965E-6	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999998223632005	WITHOUT_CLASSIFICATION	1.7763679942436118E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977912560564	WITHOUT_CLASSIFICATION	2.208743943668533E-6	DOCUMENTATION
// Oracle did add support for ANSI CASE statements in 9i	WITHOUT_CLASSIFICATION	0.9999981120739455	WITHOUT_CLASSIFICATION	1.8879260543948931E-6	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999986518379224	WITHOUT_CLASSIFICATION	1.3481620776067859E-6	DOCUMENTATION
// Informix doesn't have a bit type	WITHOUT_CLASSIFICATION	0.9999987342120371	WITHOUT_CLASSIFICATION	1.2657879628215321E-6	DOCUMENTATION
// or BYTE // or TEXT? // or MONEY	WITHOUT_CLASSIFICATION	0.9999239173123967	WITHOUT_CLASSIFICATION	7.608268760334287E-5	DOCUMENTATION
// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"	WITHOUT_CLASSIFICATION	0.9999995030999979	WITHOUT_CLASSIFICATION	4.969000021367693E-7	DOCUMENTATION
// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999996520333827	WITHOUT_CLASSIFICATION	3.4796661733144444E-7	DOCUMENTATION
//pre H3.2 behavior: super.getReturnType(ct, m);	WITHOUT_CLASSIFICATION	0.9999916735030832	WITHOUT_CLASSIFICATION	8.326496916799896E-6	DOCUMENTATION
// finally use the sqltype if == on Hibernate types did not find a match.	WITHOUT_CLASSIFICATION	0.9999996324971798	WITHOUT_CLASSIFICATION	3.6750282016938625E-7	DOCUMENTATION
//because numeric can be anything	WITHOUT_CLASSIFICATION	0.9999783720985399	WITHOUT_CLASSIFICATION	2.1627901460075106E-5	DOCUMENTATION
// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971902156409	WITHOUT_CLASSIFICATION	2.8097843591712687E-6	DOCUMENTATION
// standard sql92 functions (can be overridden by subclasses)	WITHOUT_CLASSIFICATION	0.9999990132264848	WITHOUT_CLASSIFICATION	9.867735152436145E-7	DOCUMENTATION
//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses	WITHOUT_CLASSIFICATION	0.9999972722184978	WITHOUT_CLASSIFICATION	2.727781502200672E-6	DOCUMENTATION
// register hibernate types for default use in scalar sqlquery type auto detection	WITHOUT_CLASSIFICATION	0.9999995771632247	WITHOUT_CLASSIFICATION	4.2283677525556243E-7	DOCUMENTATION
// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999980376227734	WITHOUT_CLASSIFICATION	1.9623772267018674E-6	DOCUMENTATION
// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999969024577735	WITHOUT_CLASSIFICATION	3.0975422263956703E-6	DOCUMENTATION
// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999894477727371	WITHOUT_CLASSIFICATION	1.0552227262793487E-5	DOCUMENTATION
// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999964325071693	WITHOUT_CLASSIFICATION	3.5674928307901015E-6	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792679031636	WITHOUT_CLASSIFICATION	2.0732096836353573E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999824404997694	WITHOUT_CLASSIFICATION	1.7559500230613434E-5	DOCUMENTATION
// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999740765258315	WITHOUT_CLASSIFICATION	2.5923474168506362E-5	DOCUMENTATION
// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999944977132125	WITHOUT_CLASSIFICATION	5.50228678746422E-6	DOCUMENTATION
// by default we report no support	WITHOUT_CLASSIFICATION	0.9999968135027981	WITHOUT_CLASSIFICATION	3.1864972017773376E-6	DOCUMENTATION
// by default we report no support for NOWAIT lock semantics	WITHOUT_CLASSIFICATION	0.9999988421188795	WITHOUT_CLASSIFICATION	1.1578811204960874E-6	DOCUMENTATION
// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999951084099823	WITHOUT_CLASSIFICATION	4.8915900177254104E-6	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999970625313521	WITHOUT_CLASSIFICATION	2.9374686479636136E-6	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999956743982664	WITHOUT_CLASSIFICATION	4.325601733556723E-6	DOCUMENTATION
// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999934829545051	WITHOUT_CLASSIFICATION	6.517045494886566E-6	DOCUMENTATION
// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999952985870759	WITHOUT_CLASSIFICATION	4.701412924119232E-6	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999942401631765	WITHOUT_CLASSIFICATION	5.759836823461531E-6	DOCUMENTATION
// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999994078118975	WITHOUT_CLASSIFICATION	5.92188102501367E-6	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999727876596997	WITHOUT_CLASSIFICATION	2.721234030032561E-5	DOCUMENTATION
// grrr... for differentiation of mysql storage engines	WITHOUT_CLASSIFICATION	0.9999946628227214	WITHOUT_CLASSIFICATION	5.337177278608007E-6	DOCUMENTATION
// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999997503819274	WITHOUT_CLASSIFICATION	2.49618072600951E-6	DOCUMENTATION
// return false here, as most databases do not properly support this construct...	WITHOUT_CLASSIFICATION	0.9999996402731	WITHOUT_CLASSIFICATION	3.5972689999693637E-7	DOCUMENTATION
// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999986475969799	WITHOUT_CLASSIFICATION	1.3524030202011484E-6	DOCUMENTATION
// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time	WITHOUT_CLASSIFICATION	0.999999165938607	WITHOUT_CLASSIFICATION	8.340613929603699E-7	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999880498463162	WITHOUT_CLASSIFICATION	1.1950153683829064E-5	DOCUMENTATION
//" cascade";	WITHOUT_CLASSIFICATION	0.9999596097989635	WITHOUT_CLASSIFICATION	4.0390201036543937E-5	DOCUMENTATION
//trim off the length/precision/scale	WITHOUT_CLASSIFICATION	0.9999964234907442	WITHOUT_CLASSIFICATION	3.5765092556572084E-6	DOCUMENTATION
/*public boolean dropTemporaryTableAfterUse() {	WITHOUT_CLASSIFICATION	0.9999901126309161	WITHOUT_CLASSIFICATION	9.887369083839941E-6	DOCUMENTATION
// CHECK VIOLATION	WITHOUT_CLASSIFICATION	0.9999621637967142	WITHOUT_CLASSIFICATION	3.783620328570997E-5	DOCUMENTATION
// UNIQUE VIOLATION	WITHOUT_CLASSIFICATION	0.9999686555984759	WITHOUT_CLASSIFICATION	3.13444015240954E-5	DOCUMENTATION
// FOREIGN KEY VIOLATION	WITHOUT_CLASSIFICATION	0.9999379741467362	WITHOUT_CLASSIFICATION	6.202585326371877E-5	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977912560564	WITHOUT_CLASSIFICATION	2.208743943668533E-6	DOCUMENTATION
// NOT NULL VIOLATION	WITHOUT_CLASSIFICATION	0.9999634688918067	WITHOUT_CLASSIFICATION	3.653110819332852E-5	DOCUMENTATION
// ALL OTHER	WITHOUT_CLASSIFICATION	0.9999642192132695	WITHOUT_CLASSIFICATION	3.578078673044925E-5	DOCUMENTATION
// Register the type of the out param - PostgreSQL uses Types.OTHER	WITHOUT_CLASSIFICATION	0.9999991503678037	WITHOUT_CLASSIFICATION	8.496321963676626E-7	DOCUMENTATION
// seems to not really... //	WITHOUT_CLASSIFICATION	0.9999990288096475	WITHOUT_CLASSIFICATION	9.711903525217571E-7	DOCUMENTATION
// seems to have spotty LOB suppport	WITHOUT_CLASSIFICATION	0.999995171597728	WITHOUT_CLASSIFICATION	4.828402271931053E-6	DOCUMENTATION
// HHH-2300	WITHOUT_CLASSIFICATION	0.9999643796282497	WITHOUT_CLASSIFICATION	3.5620371750329204E-5	DOCUMENTATION
// ignore (probably H2 not in the classpath)	WITHOUT_CLASSIFICATION	0.9999989028118434	WITHOUT_CLASSIFICATION	1.097188156577716E-6	DOCUMENTATION
// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999939404930471	WITHOUT_CLASSIFICATION	6.0595069528800266E-6	DOCUMENTATION
// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999922724506896	WITHOUT_CLASSIFICATION	7.727549310487703E-6	DOCUMENTATION
// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999937050146409	WITHOUT_CLASSIFICATION	6.294985359093083E-6	DOCUMENTATION
// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999949824263196	WITHOUT_CLASSIFICATION	5.017573680369973E-6	DOCUMENTATION
// not null is implicit	WITHOUT_CLASSIFICATION	0.9999948223728887	WITHOUT_CLASSIFICATION	5.177627111301122E-6	DOCUMENTATION
// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}	WITHOUT_CLASSIFICATION	0.9999995458781548	WITHOUT_CLASSIFICATION	4.541218452268904E-7	DOCUMENTATION
// Display the dialect version.	WITHOUT_CLASSIFICATION	0.9999990818481961	WITHOUT_CLASSIFICATION	9.181518040635264E-7	DOCUMENTATION
// The RDMS concat() function only supports 2 parameters	WITHOUT_CLASSIFICATION	0.9999985946508231	WITHOUT_CLASSIFICATION	1.405349176949814E-6	DOCUMENTATION
// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999970765217884	WITHOUT_CLASSIFICATION	2.9234782116854143E-6	DOCUMENTATION
// Original Dialect.java returns " for update";	WITHOUT_CLASSIFICATION	0.9999981663459688	WITHOUT_CLASSIFICATION	1.8336540310925387E-6	DOCUMENTATION
// Verify the state of this new method in Hibernate 3.0 Dialect.java	WITHOUT_CLASSIFICATION	0.999999358264208	WITHOUT_CLASSIFICATION	6.417357920057259E-7	DOCUMENTATION
// Origial Dialect.java returns true;	WITHOUT_CLASSIFICATION	0.99999708906675	WITHOUT_CLASSIFICATION	2.910933250066409E-6	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999996894325542	WITHOUT_CLASSIFICATION	3.105674457272524E-7	DOCUMENTATION
// *** Sequence methods - start. The RDMS dialect needs these	WITHOUT_CLASSIFICATION	0.9999992001192362	WITHOUT_CLASSIFICATION	7.998807638948208E-7	DOCUMENTATION
// methods to make it possible to use the Native Id generator	WITHOUT_CLASSIFICATION	0.999999765886601	WITHOUT_CLASSIFICATION	2.341133989500707E-7	DOCUMENTATION
// The where clause was added to eliminate this statement from Brute Force Searches.	WITHOUT_CLASSIFICATION	0.9999979466309509	WITHOUT_CLASSIFICATION	2.053369049109778E-6	DOCUMENTATION
// *** Sequence methods - end	WITHOUT_CLASSIFICATION	0.9999951912033797	WITHOUT_CLASSIFICATION	4.808796620404461E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977912560564	WITHOUT_CLASSIFICATION	2.208743943668533E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999880498463162	WITHOUT_CLASSIFICATION	1.1950153683829064E-5	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999994791666655	WITHOUT_CLASSIFICATION	5.208333345356982E-7	DOCUMENTATION
// Used with DROP TABLE to delete all records in the table.	WITHOUT_CLASSIFICATION	0.9999993685293853	WITHOUT_CLASSIFICATION	6.31470614719083E-7	DOCUMENTATION
// RDMS supports the UNION ALL clause.	WITHOUT_CLASSIFICATION	0.9999979855057264	WITHOUT_CLASSIFICATION	2.0144942735607534E-6	DOCUMENTATION
// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999984633463603	WITHOUT_CLASSIFICATION	1.5366536397073567E-6	DOCUMENTATION
// Multi-param dialect functions...	WITHOUT_CLASSIFICATION	0.9999986336688454	WITHOUT_CLASSIFICATION	1.3663311545327912E-6	DOCUMENTATION
// function templates	WITHOUT_CLASSIFICATION	0.9999979588452759	WITHOUT_CLASSIFICATION	2.0411547241630963E-6	DOCUMENTATION
//not null is implicit	WITHOUT_CLASSIFICATION	0.9999753370360722	WITHOUT_CLASSIFICATION	2.466296392774582E-5	DOCUMENTATION
// this assumes schema support, which is present in 1.8.0 and later...	WITHOUT_CLASSIFICATION	0.9999982924775251	WITHOUT_CLASSIFICATION	1.7075224748921435E-6	DOCUMENTATION
// HSQLDB only supports READ_UNCOMMITTED transaction isolation	WITHOUT_CLASSIFICATION	0.9999979513546554	WITHOUT_CLASSIFICATION	2.048645344689044E-6	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999989305148171	WITHOUT_CLASSIFICATION	1.0694851828393566E-6	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999984539932092	WITHOUT_CLASSIFICATION	1.5460067908333275E-6	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999990350738207	WITHOUT_CLASSIFICATION	9.64926179284122E-7	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999993238267508	WITHOUT_CLASSIFICATION	6.761732491922042E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977912560564	WITHOUT_CLASSIFICATION	2.208743943668533E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977912560564	WITHOUT_CLASSIFICATION	2.208743943668533E-6	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999987398280116	WITHOUT_CLASSIFICATION	1.2601719885008223E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.	WITHOUT_CLASSIFICATION	0.9999996780525353	WITHOUT_CLASSIFICATION	3.2194746473209154E-7	DOCUMENTATION
// new methods in dialect3	WITHOUT_CLASSIFICATION	0.9999974494726186	WITHOUT_CLASSIFICATION	2.5505273813850172E-6	DOCUMENTATION
/*public boolean supportsForUpdateNowait() {	WITHOUT_CLASSIFICATION	0.9999796057673559	WITHOUT_CLASSIFICATION	2.0394232644086546E-5	DOCUMENTATION
// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999991039958901	WITHOUT_CLASSIFICATION	8.960041098700632E-7	DOCUMENTATION
// iterate entries ordered by capacity to find first fit	WITHOUT_CLASSIFICATION	0.9999993445664149	WITHOUT_CLASSIFICATION	6.554335851433205E-7	DOCUMENTATION
// add new ordered map	WITHOUT_CLASSIFICATION	0.9999935526391527	WITHOUT_CLASSIFICATION	6.44736084732798E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977912560564	WITHOUT_CLASSIFICATION	2.208743943668533E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999977126564688	WITHOUT_CLASSIFICATION	2.28734353125651E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//registerColumnType data types	WITHOUT_CLASSIFICATION	0.9999945816146116	WITHOUT_CLASSIFICATION	5.41838538825917E-6	DOCUMENTATION
// hibernate seems to ignore this type...	WITHOUT_CLASSIFICATION	0.9999989493152797	WITHOUT_CLASSIFICATION	1.0506847203736523E-6	DOCUMENTATION
// IBID for current_time and current_date	WITHOUT_CLASSIFICATION	0.9999857750173392	WITHOUT_CLASSIFICATION	1.4224982660792868E-5	DOCUMENTATION
// Tell hibernate to use getBytes instead of getBinaryStream	WITHOUT_CLASSIFICATION	0.9999989890867105	WITHOUT_CLASSIFICATION	1.0109132895552432E-6	DOCUMENTATION
// No batch statements	WITHOUT_CLASSIFICATION	0.9999950453982855	WITHOUT_CLASSIFICATION	4.954601714498045E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9998841672491	WITHOUT_CLASSIFICATION	1.1583275090007302E-4	DOCUMENTATION
//no pointbase BIT	WITHOUT_CLASSIFICATION	0.9999825470093987	WITHOUT_CLASSIFICATION	1.74529906013111E-5	DOCUMENTATION
//no pointbase TINYINT	WITHOUT_CLASSIFICATION	0.9999828407344308	WITHOUT_CLASSIFICATION	1.715926556914692E-5	DOCUMENTATION
// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999992690902805	WITHOUT_CLASSIFICATION	7.3090971941722E-7	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999880498463162	WITHOUT_CLASSIFICATION	1.1950153683829064E-5	DOCUMENTATION
// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)	WITHOUT_CLASSIFICATION	0.9999992249190636	WITHOUT_CLASSIFICATION	7.750809364234427E-7	DOCUMENTATION
// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table	WITHOUT_CLASSIFICATION	0.9999998048965938	WITHOUT_CLASSIFICATION	1.9510340624653906E-7	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.999999129856604	WITHOUT_CLASSIFICATION	8.7014339599855E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999880498463162	WITHOUT_CLASSIFICATION	1.1950153683829064E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.999987502604326	WITHOUT_CLASSIFICATION	1.249739567399728E-5	DOCUMENTATION
// sql server just returns automatically	WITHOUT_CLASSIFICATION	0.9999977126564688	WITHOUT_CLASSIFICATION	2.28734353125651E-6	DOCUMENTATION
//Sybase BIT type does not support null values	WITHOUT_CLASSIFICATION	0.9999921880208269	WITHOUT_CLASSIFICATION	7.811979173063453E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977912560564	WITHOUT_CLASSIFICATION	2.208743943668533E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//not null ... (start with 1) is implicit	WITHOUT_CLASSIFICATION	0.9999919389939975	WITHOUT_CLASSIFICATION	8.061006002398919E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977912560564	WITHOUT_CLASSIFICATION	2.208743943668533E-6	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999997364354785	WITHOUT_CLASSIFICATION	2.635645215085568E-7	DOCUMENTATION
// Multi-param string dialect functions...	WITHOUT_CLASSIFICATION	0.9999989305148171	WITHOUT_CLASSIFICATION	1.0694851828393566E-6	DOCUMENTATION
// Multi-param numeric dialect functions...	WITHOUT_CLASSIFICATION	0.9999984539932092	WITHOUT_CLASSIFICATION	1.5460067908333275E-6	DOCUMENTATION
// Multi-param date dialect functions...	WITHOUT_CLASSIFICATION	0.9999990350738207	WITHOUT_CLASSIFICATION	9.64926179284122E-7	DOCUMENTATION
// add another (inner) nested select // add the main query // close off the inner nested select	WITHOUT_CLASSIFICATION	0.9999992637540087	WITHOUT_CLASSIFICATION	7.362459912040821E-7	DOCUMENTATION
// add the main query	WITHOUT_CLASSIFICATION	0.9999965847201737	WITHOUT_CLASSIFICATION	3.4152798261880096E-6	DOCUMENTATION
//add the restriction to the outer select	WITHOUT_CLASSIFICATION	0.9999957867186641	WITHOUT_CLASSIFICATION	4.2132813359475145E-6	DOCUMENTATION
// This assumes you will want to ignore any update counts 	WITHOUT_CLASSIFICATION	0.9999987484825239	WITHOUT_CLASSIFICATION	1.2515174760918123E-6	DOCUMENTATION
// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 	WITHOUT_CLASSIFICATION	0.9999995552911918	WITHOUT_CLASSIFICATION	4.447088081753191E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977912560564	WITHOUT_CLASSIFICATION	2.208743943668533E-6	DOCUMENTATION
//starts with 1, implicitly	WITHOUT_CLASSIFICATION	0.9999880498463162	WITHOUT_CLASSIFICATION	1.1950153683829064E-5	DOCUMENTATION
// simple nullability constraint	WITHOUT_CLASSIFICATION	0.9999993238267508	WITHOUT_CLASSIFICATION	6.761732491922042E-7	DOCUMENTATION
// not final-static to avoid possible classcast exceptions if using different oracle drivers.	WITHOUT_CLASSIFICATION	0.9999987398280116	WITHOUT_CLASSIFICATION	1.2601719885008223E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999801338805195	WITHOUT_CLASSIFICATION	1.986611948040392E-5	DOCUMENTATION
// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999969216264213	WITHOUT_CLASSIFICATION	3.0783735786812835E-6	DOCUMENTATION
// binary %Stream // character %Stream	WITHOUT_CLASSIFICATION	0.9999945207644761	WITHOUT_CLASSIFICATION	5.4792355238588925E-6	DOCUMENTATION
//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);	WITHOUT_CLASSIFICATION	0.9999954188428918	WITHOUT_CLASSIFICATION	4.5811571081687545E-6	DOCUMENTATION
// hibernate impelemnts cast in Dialect.java	WITHOUT_CLASSIFICATION	0.9999980112950289	WITHOUT_CLASSIFICATION	1.988704971096146E-6	DOCUMENTATION
// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list	WITHOUT_CLASSIFICATION	0.9999995817224774	WITHOUT_CLASSIFICATION	4.182775226771601E-7	DOCUMENTATION
// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999727876596997	WITHOUT_CLASSIFICATION	2.721234030032561E-5	DOCUMENTATION
// below is for Cache' that don't have str in 2007.1 there is str and we register str directly	WITHOUT_CLASSIFICATION	0.9999960511614076	WITHOUT_CLASSIFICATION	3.948838592476463E-6	DOCUMENTATION
// note that %string is deprecated	WITHOUT_CLASSIFICATION	0.999998807794334	WITHOUT_CLASSIFICATION	1.1922056659436511E-6	DOCUMENTATION
// %upper is deprecated	WITHOUT_CLASSIFICATION	0.9999956898833419	WITHOUT_CLASSIFICATION	4.31011665816097E-6	DOCUMENTATION
// The syntax used to add a foreign key constraint to a table.	WITHOUT_CLASSIFICATION	0.9999997771395541	WITHOUT_CLASSIFICATION	2.2286044580387966E-7	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999983722465523	WITHOUT_CLASSIFICATION	1.6277534476357998E-6	DOCUMENTATION
// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999792679031636	WITHOUT_CLASSIFICATION	2.0732096836353573E-5	DOCUMENTATION
// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999824404997694	WITHOUT_CLASSIFICATION	1.7559500230613434E-5	DOCUMENTATION
// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999970625313521	WITHOUT_CLASSIFICATION	2.9374686479636136E-6	DOCUMENTATION
// identifier-commalist	WITHOUT_CLASSIFICATION	0.9999983722465523	WITHOUT_CLASSIFICATION	1.6277534476357998E-6	DOCUMENTATION
// The syntax used to add a column to a table	WITHOUT_CLASSIFICATION	0.9999992732516869	WITHOUT_CLASSIFICATION	7.267483129962087E-7	DOCUMENTATION
// Completely optional cascading drop clause.	WITHOUT_CLASSIFICATION	0.9999984055798862	WITHOUT_CLASSIFICATION	1.594420113855502E-6	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999964992621669	WITHOUT_CLASSIFICATION	3.5007378331155003E-6	DOCUMENTATION
// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999836340500882	WITHOUT_CLASSIFICATION	1.6365949911761293E-5	DOCUMENTATION
// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using	WITHOUT_CLASSIFICATION	0.9999995992946343	WITHOUT_CLASSIFICATION	4.007053656135912E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977912560564	WITHOUT_CLASSIFICATION	2.208743943668533E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977912560564	WITHOUT_CLASSIFICATION	2.208743943668533E-6	DOCUMENTATION
/*<String>*/	WITHOUT_CLASSIFICATION	0.9999078516527036	WITHOUT_CLASSIFICATION	9.214834729641694E-5	DOCUMENTATION
// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999956743982664	WITHOUT_CLASSIFICATION	4.325601733556723E-6	DOCUMENTATION
// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999942401631765	WITHOUT_CLASSIFICATION	5.759836823461531E-6	DOCUMENTATION
// The keyword used to specify a nullable column.	WITHOUT_CLASSIFICATION	0.9999996894325542	WITHOUT_CLASSIFICATION	3.105674457272524E-7	DOCUMENTATION
// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?	WITHOUT_CLASSIFICATION	0.9999978275233369	WITHOUT_CLASSIFICATION	2.1724766630940106E-6	DOCUMENTATION
// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?	WITHOUT_CLASSIFICATION	0.9999994688909779	WITHOUT_CLASSIFICATION	5.311090220787779E-7	DOCUMENTATION
// The name of the SQL function that transforms a string to lowercase	WITHOUT_CLASSIFICATION	0.9999989617983865	WITHOUT_CLASSIFICATION	1.0382016135414388E-6	DOCUMENTATION
// Create an OuterJoinGenerator for this dialect.	WITHOUT_CLASSIFICATION	0.9999978745772822	WITHOUT_CLASSIFICATION	2.1254227178179083E-6	DOCUMENTATION
// The keyword used to insert a row without specifying // any column values	WITHOUT_CLASSIFICATION	0.9999995588914384	WITHOUT_CLASSIFICATION	4.411085616319582E-7	DOCUMENTATION
//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );	WITHOUT_CLASSIFICATION	0.9999960591487741	WITHOUT_CLASSIFICATION	3.940851225902626E-6	DOCUMENTATION
//skip the FROM keyword in params	WITHOUT_CLASSIFICATION	0.9999920296124015	WITHOUT_CLASSIFICATION	7.970387598389423E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998981745719934	WITHOUT_CLASSIFICATION	1.018254280066226E-4	DOCUMENTATION
// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly	WITHOUT_CLASSIFICATION	0.9999998223632005	WITHOUT_CLASSIFICATION	1.7763679942436118E-7	DOCUMENTATION
// SQLFunction implementation	WITHOUT_CLASSIFICATION	0.9999963738443497	WITHOUT_CLASSIFICATION	3.626155650361835E-6	DOCUMENTATION
// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap	WITHOUT_CLASSIFICATION	0.9999994960125677	WITHOUT_CLASSIFICATION	5.039874324040472E-7	DOCUMENTATION
// register the standard dialect resolver	WITHOUT_CLASSIFICATION	0.9999986101325921	WITHOUT_CLASSIFICATION	1.3898674079793224E-6	DOCUMENTATION
// register resolvers set via Environment property	WITHOUT_CLASSIFICATION	0.9999970084194699	WITHOUT_CLASSIFICATION	2.9915805299517888E-6	DOCUMENTATION
// kept for backward compatibility until after the 3.1beta5 release of HA	WITHOUT_CLASSIFICATION	0.9999994621376561	WITHOUT_CLASSIFICATION	5.378623438788403E-7	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9999851995675524	WITHOUT_CLASSIFICATION	1.4800432447549001E-5	DOCUMENTATION
// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998604305252	WITHOUT_CLASSIFICATION	1.3956947479277187E-6	DOCUMENTATION
// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999992276906242	WITHOUT_CLASSIFICATION	7.723093756739932E-7	DOCUMENTATION
// delete does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999989990874069	WITHOUT_CLASSIFICATION	1.0009125931757488E-6	DOCUMENTATION
// orphans should be deleted during delete	WITHOUT_CLASSIFICATION	0.9999968905753799	WITHOUT_CLASSIFICATION	3.1094246201269726E-6	DOCUMENTATION
/*(LockMode) anything*/	WITHOUT_CLASSIFICATION	0.9999788824835821	WITHOUT_CLASSIFICATION	2.111751641791609E-5	DOCUMENTATION
// lock doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999993247492678	WITHOUT_CLASSIFICATION	6.752507322884398E-7	DOCUMENTATION
// refresh doesn't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999993613246798	WITHOUT_CLASSIFICATION	6.38675320191151E-7	DOCUMENTATION
// evicts don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999992274076143	WITHOUT_CLASSIFICATION	7.725923857961551E-7	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999994577831076	WITHOUT_CLASSIFICATION	5.42216892412627E-7	DOCUMENTATION
// orphans should be deleted during save/update	WITHOUT_CLASSIFICATION	0.9999972618926306	WITHOUT_CLASSIFICATION	2.7381073693484736E-6	DOCUMENTATION
// for deprecated saveOrUpdateCopy()	WITHOUT_CLASSIFICATION	0.9999944380381961	WITHOUT_CLASSIFICATION	5.56196180400782E-6	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999993842603281	WITHOUT_CLASSIFICATION	6.157396719631208E-7	DOCUMENTATION
//a proxy cannot be transient and it breaks ForeignKeys.isTransient	WITHOUT_CLASSIFICATION	0.9999897053589605	WITHOUT_CLASSIFICATION	1.029464103954724E-5	DOCUMENTATION
// replicate does cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999993631176559	WITHOUT_CLASSIFICATION	6.368823440637783E-7	DOCUMENTATION
// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977160963676	WITHOUT_CLASSIFICATION	2.283903632392916E-6	DOCUMENTATION
// handles arrays and newly instantiated collections	WITHOUT_CLASSIFICATION	0.9999991280591879	WITHOUT_CLASSIFICATION	8.719408121883461E-7	DOCUMENTATION
// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.	WITHOUT_CLASSIFICATION	0.9999992607730815	WITHOUT_CLASSIFICATION	7.392269183722399E-7	DOCUMENTATION
// Add these directly to the executions queue	WITHOUT_CLASSIFICATION	0.9999992390112308	WITHOUT_CLASSIFICATION	7.609887691547016E-7	DOCUMENTATION
// continue loop	WITHOUT_CLASSIFICATION	0.9999968169090574	WITHOUT_CLASSIFICATION	3.1830909425770133E-6	DOCUMENTATION
//sort the updates by fk	WITHOUT_CLASSIFICATION	0.9999914909452137	WITHOUT_CLASSIFICATION	8.509054786359414E-6	DOCUMENTATION
//sort the updates by pk	WITHOUT_CLASSIFICATION	0.9999902644962747	WITHOUT_CLASSIFICATION	9.735503725311956E-6	DOCUMENTATION
// the mapping of entity names to their latest batch numbers.	WITHOUT_CLASSIFICATION	0.9999991627208663	WITHOUT_CLASSIFICATION	8.372791337116935E-7	DOCUMENTATION
// the map of batch numbers to EntityInsertAction lists	WITHOUT_CLASSIFICATION	0.99999966867987	WITHOUT_CLASSIFICATION	3.313201300054679E-7	DOCUMENTATION
//optimize the hash size to eliminate a rehash.	WITHOUT_CLASSIFICATION	0.9999952801238472	WITHOUT_CLASSIFICATION	4.71987615274598E-6	DOCUMENTATION
// the list of entity names that indicate the batch number	WITHOUT_CLASSIFICATION	0.9999990803674628	WITHOUT_CLASSIFICATION	9.196325372997054E-7	DOCUMENTATION
// remove the current element from insertions. It will be added back later.	WITHOUT_CLASSIFICATION	0.9999989210132256	WITHOUT_CLASSIFICATION	1.0789867743798914E-6	DOCUMENTATION
// the entity associated with the current action.	WITHOUT_CLASSIFICATION	0.9999982254357574	WITHOUT_CLASSIFICATION	1.7745642425145723E-6	DOCUMENTATION
// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.	WITHOUT_CLASSIFICATION	0.9999998265270109	WITHOUT_CLASSIFICATION	1.7347298906185113E-7	DOCUMENTATION
// now rebuild the insertions list. There is a batch for each entry in the name list.	WITHOUT_CLASSIFICATION	0.9999991795085514	WITHOUT_CLASSIFICATION	8.204914484826967E-7	DOCUMENTATION
// the current batch number is the latest batch for this entity type.	WITHOUT_CLASSIFICATION	0.9999991138461843	WITHOUT_CLASSIFICATION	8.861538156602124E-7	DOCUMENTATION
// loop through all the associations of the current entity and make sure that they are processed // before the current batch number	WITHOUT_CLASSIFICATION	0.9999993867300565	WITHOUT_CLASSIFICATION	6.132699435021246E-7	DOCUMENTATION
// find the batch number associated with the current association, if any.	WITHOUT_CLASSIFICATION	0.9999984239970025	WITHOUT_CLASSIFICATION	1.5760029975681385E-6	DOCUMENTATION
// create a new batch for this type. The batch number is the number of current batches.	WITHOUT_CLASSIFICATION	0.9999981194908942	WITHOUT_CLASSIFICATION	1.880509105721868E-6	DOCUMENTATION
// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.	WITHOUT_CLASSIFICATION	0.9999994850128634	WITHOUT_CLASSIFICATION	5.149871366344239E-7	DOCUMENTATION
// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.	WITHOUT_CLASSIFICATION	0.9999997972738951	WITHOUT_CLASSIFICATION	2.0272610498218107E-7	DOCUMENTATION
//cascade to current collection elements	WITHOUT_CLASSIFICATION	0.999986827764944	WITHOUT_CLASSIFICATION	1.3172235055997638E-5	DOCUMENTATION
//not really necessary, but good for consistency...	WITHOUT_CLASSIFICATION	0.9999922731601716	WITHOUT_CLASSIFICATION	7.72683982839819E-6	DOCUMENTATION
// we can't cascade to non-embedded elements	WITHOUT_CLASSIFICATION	0.9999982304499727	WITHOUT_CLASSIFICATION	1.7695500273018746E-6	DOCUMENTATION
//a newly instantiated collection can't have orphans	WITHOUT_CLASSIFICATION	0.9999964266043325	WITHOUT_CLASSIFICATION	3.573395667414758E-6	DOCUMENTATION
// handle orphaned entities!!	WITHOUT_CLASSIFICATION	0.9999975362436259	WITHOUT_CLASSIFICATION	2.4637563740367108E-6	DOCUMENTATION
// Loaded entity instances, by EntityUniqueKey	WITHOUT_CLASSIFICATION	0.9999982940354604	WITHOUT_CLASSIFICATION	1.7059645395533385E-6	DOCUMENTATION
// Identity map of EntityEntry instances, by the entity instance	WITHOUT_CLASSIFICATION	0.9999994392043894	WITHOUT_CLASSIFICATION	5.607956105094996E-7	DOCUMENTATION
// Entity proxies, by EntityKey	WITHOUT_CLASSIFICATION	0.9999962742953882	WITHOUT_CLASSIFICATION	3.7257046117450973E-6	DOCUMENTATION
// Snapshots of current database state for entities // that have *not* been loaded	WITHOUT_CLASSIFICATION	0.9999990928605399	WITHOUT_CLASSIFICATION	9.071394602282883E-7	DOCUMENTATION
// Identity map of array holder ArrayHolder instances, by the array instance	WITHOUT_CLASSIFICATION	0.9999994915518141	WITHOUT_CLASSIFICATION	5.084481858654262E-7	DOCUMENTATION
// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection	WITHOUT_CLASSIFICATION	0.9999989199153295	WITHOUT_CLASSIFICATION	1.0800846705088145E-6	DOCUMENTATION
// Set of EntityKeys of deleted objects	WITHOUT_CLASSIFICATION	0.9999982371368212	WITHOUT_CLASSIFICATION	1.7628631787951136E-6	DOCUMENTATION
// properties that we have tried to load, and not found in the database	WITHOUT_CLASSIFICATION	0.9999994030456414	WITHOUT_CLASSIFICATION	5.969543586074331E-7	DOCUMENTATION
// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query	WITHOUT_CLASSIFICATION	0.9999997642503244	WITHOUT_CLASSIFICATION	2.35749675616028E-7	DOCUMENTATION
// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!	WITHOUT_CLASSIFICATION	0.999999715071174	WITHOUT_CLASSIFICATION	2.849288260341102E-7	DOCUMENTATION
// Downgrade locks	WITHOUT_CLASSIFICATION	0.9999961449839361	WITHOUT_CLASSIFICATION	3.8550160639365684E-6	DOCUMENTATION
// any earlier proxy takes precedence	WITHOUT_CLASSIFICATION	0.9999981436072956	WITHOUT_CLASSIFICATION	1.8563927044160767E-6	DOCUMENTATION
//unwrap the object	WITHOUT_CLASSIFICATION	0.9999873945792802	WITHOUT_CLASSIFICATION	1.2605420719940518E-5	DOCUMENTATION
//initialize + unwrap the object	WITHOUT_CLASSIFICATION	0.9999932048505936	WITHOUT_CLASSIFICATION	6.795149406412348E-6	DOCUMENTATION
//return the proxied object	WITHOUT_CLASSIFICATION	0.9999880975966265	WITHOUT_CLASSIFICATION	1.1902403373437754E-5	DOCUMENTATION
//overwrite old proxy	WITHOUT_CLASSIFICATION	0.9999717949644275	WITHOUT_CLASSIFICATION	2.8205035572481997E-5	DOCUMENTATION
// early exit...	WITHOUT_CLASSIFICATION	0.9999943620691923	WITHOUT_CLASSIFICATION	5.637930807685507E-6	DOCUMENTATION
// or should it actually throw an exception?	WITHOUT_CLASSIFICATION	0.9999971757230521	WITHOUT_CLASSIFICATION	2.8242769479542154E-6	DOCUMENTATION
//treat it just like a new collection	WITHOUT_CLASSIFICATION	0.999994976668283	WITHOUT_CLASSIFICATION	5.023331716971288E-6	DOCUMENTATION
//do this work only at the very highest level of the load //don't let this method be called recursively	WITHOUT_CLASSIFICATION	0.9999969307665605	WITHOUT_CLASSIFICATION	3.069233439501553E-6	DOCUMENTATION
//note that each iteration of the loop may add new elements	WITHOUT_CLASSIFICATION	0.999998281460755	WITHOUT_CLASSIFICATION	1.7185392449680324E-6	DOCUMENTATION
//it might be an unwrapped collection reference! //try to find a wrapper (slowish)	WITHOUT_CLASSIFICATION	0.9999902581047797	WITHOUT_CLASSIFICATION	9.741895220210474E-6	DOCUMENTATION
/*public boolean isNonExistant(EntityKey key) {	WITHOUT_CLASSIFICATION	0.999988733727968	WITHOUT_CLASSIFICATION	1.1266272032006777E-5	DOCUMENTATION
/*public boolean isNonExistant(EntityUniqueKey key) {	WITHOUT_CLASSIFICATION	0.9999896071713565	WITHOUT_CLASSIFICATION	1.0392828643419398E-5	DOCUMENTATION
// iterate all the entities currently associated with the persistence context.	WITHOUT_CLASSIFICATION	0.9999987381323496	WITHOUT_CLASSIFICATION	1.261867650388163E-6	DOCUMENTATION
// does this entity entry pertain to the entity persister in which we are interested (owner)?	WITHOUT_CLASSIFICATION	0.9999980995759531	WITHOUT_CLASSIFICATION	1.9004240469858126E-6	DOCUMENTATION
//check if the managed object is the parent	WITHOUT_CLASSIFICATION	0.99999579012973	WITHOUT_CLASSIFICATION	4.209870270018029E-6	DOCUMENTATION
// otherwise, the proxy was pruned during the serialization process	WITHOUT_CLASSIFICATION	0.9999994226827126	WITHOUT_CLASSIFICATION	5.773172874763441E-7	DOCUMENTATION
// adds remove as a sort-of alias for delete...	WITHOUT_CLASSIFICATION	0.999997471182998	WITHOUT_CLASSIFICATION	2.528817001977991E-6	DOCUMENTATION
//bad cast	WITHOUT_CLASSIFICATION	0.999974106696116	WITHOUT_CLASSIFICATION	2.5893303884078607E-5	DOCUMENTATION
//return lhsPersister.getSubclassPropertyColumnNames(property);	WITHOUT_CLASSIFICATION	0.9999938646050286	WITHOUT_CLASSIFICATION	6.135394971478096E-6	DOCUMENTATION
//property-refs for associations defined on a //component are not supported, so no need to slice	WITHOUT_CLASSIFICATION	0.9999957949644434	WITHOUT_CLASSIFICATION	4.205035556713895E-6	DOCUMENTATION
//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)	WITHOUT_CLASSIFICATION	0.9999978948324144	WITHOUT_CLASSIFICATION	2.1051675856148127E-6	DOCUMENTATION
//handle a property-ref	WITHOUT_CLASSIFICATION	0.9999873995319134	WITHOUT_CLASSIFICATION	1.260046808662014E-5	DOCUMENTATION
/*NativeSQLQueryReturn*/	WITHOUT_CLASSIFICATION	0.9999667885407711	WITHOUT_CLASSIFICATION	3.321145922880444E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999850704302695	WITHOUT_CLASSIFICATION	1.4929569730524726E-5	DOCUMENTATION
// why is all others non final ?	WITHOUT_CLASSIFICATION	0.9999976955940132	WITHOUT_CLASSIFICATION	2.30440598682241E-6	DOCUMENTATION
//this.forceCacheRefresh = forceCacheRefresh;	WITHOUT_CLASSIFICATION	0.9999857653971868	WITHOUT_CLASSIFICATION	1.4234602813242685E-5	DOCUMENTATION
// HELLA IMPORTANT OPTIMIZATION!!!	WITHOUT_CLASSIFICATION	0.9999629206181514	WITHOUT_CLASSIFICATION	3.7079381848610716E-5	DOCUMENTATION
/*return that.type.equals(type) && 	WITHOUT_CLASSIFICATION	0.9999823903522471	WITHOUT_CLASSIFICATION	1.7609647752841837E-5	DOCUMENTATION
//Must occur after resolving identifiers!	WITHOUT_CLASSIFICATION	0.9999719451280094	WITHOUT_CLASSIFICATION	2.8054871990716947E-5	DOCUMENTATION
//take a snapshot	WITHOUT_CLASSIFICATION	0.9999779365998647	WITHOUT_CLASSIFICATION	2.206340013532549E-5	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999906947683925	WITHOUT_CLASSIFICATION	9.305231607505166E-6	DOCUMENTATION
// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context	WITHOUT_CLASSIFICATION	0.9999985535114365	WITHOUT_CLASSIFICATION	1.4464885635354385E-6	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999903273180026	WITHOUT_CLASSIFICATION	9.672681997286446E-6	DOCUMENTATION
// We've been here before	WITHOUT_CLASSIFICATION	0.9999727449301398	WITHOUT_CLASSIFICATION	2.725506986029437E-5	DOCUMENTATION
// it is or was referenced _somewhere_	WITHOUT_CLASSIFICATION	0.9999874035478795	WITHOUT_CLASSIFICATION	1.2596452120429263E-5	DOCUMENTATION
// do the work	WITHOUT_CLASSIFICATION	0.9999903273180026	WITHOUT_CLASSIFICATION	9.672681997286446E-6	DOCUMENTATION
// if either its role changed,	WITHOUT_CLASSIFICATION	0.9999987036519935	WITHOUT_CLASSIFICATION	1.2963480065345187E-6	DOCUMENTATION
// or its key changed	WITHOUT_CLASSIFICATION	0.9999968898208202	WITHOUT_CLASSIFICATION	3.110179179679199E-6	DOCUMENTATION
// we will need to create new entries	WITHOUT_CLASSIFICATION	0.9999975635444224	WITHOUT_CLASSIFICATION	2.4364555777182907E-6	DOCUMENTATION
// we will need to remove ye olde entries	WITHOUT_CLASSIFICATION	0.9999949652651903	WITHOUT_CLASSIFICATION	5.03473480980529E-6	DOCUMENTATION
// force initialize!	WITHOUT_CLASSIFICATION	0.9999970695519322	WITHOUT_CLASSIFICATION	2.930448067742871E-6	DOCUMENTATION
// else if it's elements changed	WITHOUT_CLASSIFICATION	0.9999975383087878	WITHOUT_CLASSIFICATION	2.4616912121734537E-6	DOCUMENTATION
//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES	WITHOUT_CLASSIFICATION	0.9997345596262522	WITHOUT_CLASSIFICATION	2.6544037374779577E-4	DOCUMENTATION
// session-start/post-flush persistent state	WITHOUT_CLASSIFICATION	0.9999980987592697	WITHOUT_CLASSIFICATION	1.9012407302981321E-6	DOCUMENTATION
// allow the CollectionSnapshot to be serialized	WITHOUT_CLASSIFICATION	0.9999987572153186	WITHOUT_CLASSIFICATION	1.242784681387404E-6	DOCUMENTATION
// ATTRIBUTES USED ONLY DURING FLUSH CYCLE	WITHOUT_CLASSIFICATION	0.9999434916679973	WITHOUT_CLASSIFICATION	5.650833200256088E-5	DOCUMENTATION
// "current" means the reference that was found during flush() 	WITHOUT_CLASSIFICATION	0.9999902833671779	WITHOUT_CLASSIFICATION	9.716632822098983E-6	DOCUMENTATION
// "loaded" means the reference that is consistent  // with the current database state	WITHOUT_CLASSIFICATION	0.9999975375465369	WITHOUT_CLASSIFICATION	2.462453463197752E-6	DOCUMENTATION
// during flush, we navigate the object graph to // collections and decide what to do with them	WITHOUT_CLASSIFICATION	0.9999994500973365	WITHOUT_CLASSIFICATION	5.499026635419185E-7	DOCUMENTATION
// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()	WITHOUT_CLASSIFICATION	0.9999994152709638	WITHOUT_CLASSIFICATION	5.84729036179019E-7	DOCUMENTATION
// new collections that get found + wrapped // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999994029694185	WITHOUT_CLASSIFICATION	5.970305815175499E-7	DOCUMENTATION
//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)	WITHOUT_CLASSIFICATION	0.9999929003346919	WITHOUT_CLASSIFICATION	7.0996653080392065E-6	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.999955094731591	WITHOUT_CLASSIFICATION	4.490526840900106E-5	DOCUMENTATION
//collection.clearDirty()	WITHOUT_CLASSIFICATION	0.999955094731591	WITHOUT_CLASSIFICATION	4.490526840900106E-5	DOCUMENTATION
// detached collections that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999992601010153	WITHOUT_CLASSIFICATION	7.398989847017144E-7	DOCUMENTATION
//optimization	WITHOUT_CLASSIFICATION	0.9999393338606454	WITHOUT_CLASSIFICATION	6.066613935463448E-5	DOCUMENTATION
//optimization //optimization	WITHOUT_CLASSIFICATION	0.999961901823037	WITHOUT_CLASSIFICATION	3.809817696286832E-5	DOCUMENTATION
//re-snapshot	WITHOUT_CLASSIFICATION	0.9999535549849268	WITHOUT_CLASSIFICATION	4.644501507324668E-5	DOCUMENTATION
// for convenience to save some lookups	WITHOUT_CLASSIFICATION	0.9999966037345976	WITHOUT_CLASSIFICATION	3.3962654023737936E-6	DOCUMENTATION
//NOTE: this is not updated when properties are fetched lazily!	WITHOUT_CLASSIFICATION	0.9999957860894279	WITHOUT_CLASSIFICATION	4.213910572151643E-6	DOCUMENTATION
//memory optimization	WITHOUT_CLASSIFICATION	0.9999783622108872	WITHOUT_CLASSIFICATION	2.1637789112733954E-5	DOCUMENTATION
// use the id value of a newly instantiated instance as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999993560877708	WITHOUT_CLASSIFICATION	6.439122291732244E-7	DOCUMENTATION
// copied from Session:	WITHOUT_CLASSIFICATION	0.9999967338028843	WITHOUT_CLASSIFICATION	3.2661971156978603E-6	DOCUMENTATION
// this should not happen since the DTD prevents it	WITHOUT_CLASSIFICATION	0.9999981687261075	WITHOUT_CLASSIFICATION	1.831273892643706E-6	DOCUMENTATION
// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.	WITHOUT_CLASSIFICATION	0.9999987089372248	WITHOUT_CLASSIFICATION	1.2910627751669188E-6	DOCUMENTATION
// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many	WITHOUT_CLASSIFICATION	0.9999980123048182	WITHOUT_CLASSIFICATION	1.9876951818050182E-6	DOCUMENTATION
//check basic level one nullablilty	WITHOUT_CLASSIFICATION	0.9999855524371294	WITHOUT_CLASSIFICATION	1.4447562870631658E-5	DOCUMENTATION
//values is not null and is checkable, we'll look deeper	WITHOUT_CLASSIFICATION	0.9999949766238835	WITHOUT_CLASSIFICATION	5.023376116465574E-6	DOCUMENTATION
//for non null args, check for components and elements containing components	WITHOUT_CLASSIFICATION	0.9999879468603673	WITHOUT_CLASSIFICATION	1.2053139632657495E-5	DOCUMENTATION
//cache the hashcode	WITHOUT_CLASSIFICATION	0.9999851995675524	WITHOUT_CLASSIFICATION	1.4800432447549001E-5	DOCUMENTATION
//persistent collections may have components	WITHOUT_CLASSIFICATION	0.9999932717423748	WITHOUT_CLASSIFICATION	6.728257625120639E-6	DOCUMENTATION
//check for all components values in the collection	WITHOUT_CLASSIFICATION	0.9999962569378241	WITHOUT_CLASSIFICATION	3.743062175933776E-6	DOCUMENTATION
/* will check current level if some of them are not null	WITHOUT_CLASSIFICATION	0.9999885789376984	WITHOUT_CLASSIFICATION	1.142106230148611E-5	DOCUMENTATION
//do the test	WITHOUT_CLASSIFICATION	0.9999792393113698	WITHOUT_CLASSIFICATION	2.076068863029249E-5	DOCUMENTATION
// if its an uninitialized proxy it can't be transient	WITHOUT_CLASSIFICATION	0.9999991527464887	WITHOUT_CLASSIFICATION	8.472535114739754E-7	DOCUMENTATION
//unwrap it	WITHOUT_CLASSIFICATION	0.9999591355151187	WITHOUT_CLASSIFICATION	4.0864484881133475E-5	DOCUMENTATION
// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)	WITHOUT_CLASSIFICATION	0.9999996323982742	WITHOUT_CLASSIFICATION	3.676017257955044E-7	DOCUMENTATION
// an unfetched association can only point to // an entity that already exists in the db	WITHOUT_CLASSIFICATION	0.9999996404200592	WITHOUT_CLASSIFICATION	3.5957994087925894E-7	DOCUMENTATION
// let the interceptor inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999987735863337	WITHOUT_CLASSIFICATION	1.2264136663718007E-6	DOCUMENTATION
// let the persister inspect the instance to decide	WITHOUT_CLASSIFICATION	0.9999988757644264	WITHOUT_CLASSIFICATION	1.1242355736895076E-6	DOCUMENTATION
// we use the assumed value, if there is one, to avoid hitting // the database	WITHOUT_CLASSIFICATION	0.9999994513208784	WITHOUT_CLASSIFICATION	5.486791215071895E-7	DOCUMENTATION
// hit the database, after checking the session cache for a snapshot	WITHOUT_CLASSIFICATION	0.999999054303052	WITHOUT_CLASSIFICATION	9.456969479644577E-7	DOCUMENTATION
// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...	WITHOUT_CLASSIFICATION	0.9999996191706021	WITHOUT_CLASSIFICATION	3.808293979737457E-7	DOCUMENTATION
//int count = 0;	WITHOUT_CLASSIFICATION	0.9999574883393872	WITHOUT_CLASSIFICATION	4.2511660612769125E-5	DOCUMENTATION
//the first key found after the given key	WITHOUT_CLASSIFICATION	0.9999920445961993	WITHOUT_CLASSIFICATION	7.955403800744752E-6	DOCUMENTATION
//checkForEnd = false;	WITHOUT_CLASSIFICATION	0.9999867834325156	WITHOUT_CLASSIFICATION	1.3216567484356234E-5	DOCUMENTATION
//count++;	WITHOUT_CLASSIFICATION	0.9999112832500615	WITHOUT_CLASSIFICATION	8.871674993846011E-5	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999882090382487	WITHOUT_CLASSIFICATION	1.1790961751263366E-5	DOCUMENTATION
//we ran out of keys to try	WITHOUT_CLASSIFICATION	0.9999786790079498	WITHOUT_CLASSIFICATION	2.132099205021503E-5	DOCUMENTATION
//first element of array is reserved for the actual instance we are loading!	WITHOUT_CLASSIFICATION	0.9999936044443508	WITHOUT_CLASSIFICATION	6.395555649150406E-6	DOCUMENTATION
//the first id found after the given id	WITHOUT_CLASSIFICATION	0.9999901741771262	WITHOUT_CLASSIFICATION	9.82582287379427E-6	DOCUMENTATION
//we ran out of ids to try	WITHOUT_CLASSIFICATION	0.99998699101318	WITHOUT_CLASSIFICATION	1.3008986819881564E-5	DOCUMENTATION
// look for existing collection as part of the persistence context	WITHOUT_CLASSIFICATION	0.9999985158565814	WITHOUT_CLASSIFICATION	1.484143418551442E-6	DOCUMENTATION
// ignore this row of results! Note the early exit	WITHOUT_CLASSIFICATION	0.9999993150139764	WITHOUT_CLASSIFICATION	6.84986023508404E-7	DOCUMENTATION
// initialize this collection	WITHOUT_CLASSIFICATION	0.9999985758419807	WITHOUT_CLASSIFICATION	1.4241580192717872E-6	DOCUMENTATION
// create one	WITHOUT_CLASSIFICATION	0.9999910309865957	WITHOUT_CLASSIFICATION	8.969013404214674E-6	DOCUMENTATION
// warning: can cause a recursive calls! (proxy initialization)	WITHOUT_CLASSIFICATION	0.9999950644805936	WITHOUT_CLASSIFICATION	4.935519406428333E-6	DOCUMENTATION
// there were no queued additions // and the role has a cache	WITHOUT_CLASSIFICATION	0.9999990773946208	WITHOUT_CLASSIFICATION	9.226053792022619E-7	DOCUMENTATION
// and this is not a forced initialization during flush	WITHOUT_CLASSIFICATION	0.9999982733743692	WITHOUT_CLASSIFICATION	1.7266256307722445E-6	DOCUMENTATION
// some filters affecting the collection are enabled on the session, so do not do the put into the cache.	WITHOUT_CLASSIFICATION	0.9999993328699575	WITHOUT_CLASSIFICATION	6.671300425560451E-7	DOCUMENTATION
// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999929770429524	WITHOUT_CLASSIFICATION	7.022957047560952E-6	DOCUMENTATION
// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985834449858	WITHOUT_CLASSIFICATION	1.4165550141848366E-6	DOCUMENTATION
// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999968101130888	WITHOUT_CLASSIFICATION	3.1898869111062457E-6	DOCUMENTATION
// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...	WITHOUT_CLASSIFICATION	0.9999998379049261	WITHOUT_CLASSIFICATION	1.6209507396109072E-7	DOCUMENTATION
// the cache of the actual plans...	WITHOUT_CLASSIFICATION	0.9999972381421706	WITHOUT_CLASSIFICATION	2.76185782950089E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998981745719934	WITHOUT_CLASSIFICATION	1.018254280066226E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998981745719934	WITHOUT_CLASSIFICATION	1.018254280066226E-4	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999977611368219	WITHOUT_CLASSIFICATION	2.238863178130232E-6	DOCUMENTATION
// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful	WITHOUT_CLASSIFICATION	0.999999499480124	WITHOUT_CLASSIFICATION	5.005198758937367E-7	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999952069790916	WITHOUT_CLASSIFICATION	4.793020908415962E-6	DOCUMENTATION
// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999942696275999	WITHOUT_CLASSIFICATION	5.730372400195872E-6	DOCUMENTATION
// don't care...	WITHOUT_CLASSIFICATION	0.9999952069790916	WITHOUT_CLASSIFICATION	4.793020908415962E-6	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.999997438500467	WITHOUT_CLASSIFICATION	2.5614995331039257E-6	DOCUMENTATION
// break the outer loop !!!	WITHOUT_CLASSIFICATION	0.999994986359423	WITHOUT_CLASSIFICATION	5.013640577089408E-6	DOCUMENTATION
// named parameter	WITHOUT_CLASSIFICATION	0.999991827034033	WITHOUT_CLASSIFICATION	8.1729659669219E-6	DOCUMENTATION
// could be either an ordinal or JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999977718203014	WITHOUT_CLASSIFICATION	2.228179698714701E-6	DOCUMENTATION
// a peek ahead showed this as an JPA-positional parameter	WITHOUT_CLASSIFICATION	0.9999983772654057	WITHOUT_CLASSIFICATION	1.6227345941944204E-6	DOCUMENTATION
// make sure this "name" is an integral	WITHOUT_CLASSIFICATION	0.9999969922864594	WITHOUT_CLASSIFICATION	3.0077135404860805E-6	DOCUMENTATION
// pre-determine and cache the hashcode	WITHOUT_CLASSIFICATION	0.9999984234159245	WITHOUT_CLASSIFICATION	1.5765840754655113E-6	DOCUMENTATION
// perform the actual work	WITHOUT_CLASSIFICATION	0.999994023980703	WITHOUT_CLASSIFICATION	5.9760192970063545E-6	DOCUMENTATION
// if everything went ok, commit the transaction and close the obtained // connection handle...	WITHOUT_CLASSIFICATION	0.9999994328411176	WITHOUT_CLASSIFICATION	5.671588824990239E-7	DOCUMENTATION
// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible	WITHOUT_CLASSIFICATION	0.9999995533061246	WITHOUT_CLASSIFICATION	4.4669387536000664E-7	DOCUMENTATION
// finally handle the exception	WITHOUT_CLASSIFICATION	0.9999987152132384	WITHOUT_CLASSIFICATION	1.2847867616729917E-6	DOCUMENTATION
// a "detached" collection that belonged to a different entity	WITHOUT_CLASSIFICATION	0.9999933789599648	WITHOUT_CLASSIFICATION	6.621040035157789E-6	DOCUMENTATION
//saveOrUpdateCopy() is deprecated!	WITHOUT_CLASSIFICATION	0.9999869815378445	WITHOUT_CLASSIFICATION	1.3018462155467795E-5	DOCUMENTATION
// collectionPersister should not be null, but we don't want to throw // an exception if it is null	WITHOUT_CLASSIFICATION	0.9999990089566758	WITHOUT_CLASSIFICATION	9.91043324148488E-7	DOCUMENTATION
// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);	WITHOUT_CLASSIFICATION	0.9999979758132655	WITHOUT_CLASSIFICATION	2.0241867345560343E-6	DOCUMENTATION
// a "detached" collection that originally belonged to the same entity	WITHOUT_CLASSIFICATION	0.9999990575733573	WITHOUT_CLASSIFICATION	9.424266427448053E-7	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999663963822096	WITHOUT_CLASSIFICATION	3.3603617790333705E-5	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999663963822096	WITHOUT_CLASSIFICATION	3.3603617790333705E-5	DOCUMENTATION
//Force a substitution!	WITHOUT_CLASSIFICATION	0.9999786442224194	WITHOUT_CLASSIFICATION	2.135577758049346E-5	DOCUMENTATION
// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock	WITHOUT_CLASSIFICATION	0.9999992598093524	WITHOUT_CLASSIFICATION	7.401906476149182E-7	DOCUMENTATION
// the database now holds a lock + the object is flushed from the cache, // so release the soft lock	WITHOUT_CLASSIFICATION	0.9999997259113184	WITHOUT_CLASSIFICATION	2.7408868170087293E-7	DOCUMENTATION
// now update the object .. has to be outside the main if block above (because of collections)	WITHOUT_CLASSIFICATION	0.9999995438054905	WITHOUT_CLASSIFICATION	4.561945095486987E-7	DOCUMENTATION
// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object	WITHOUT_CLASSIFICATION	0.9999997708042434	WITHOUT_CLASSIFICATION	2.291957566746765E-7	DOCUMENTATION
// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed	WITHOUT_CLASSIFICATION	0.9999990533624203	WITHOUT_CLASSIFICATION	9.46637579632014E-7	DOCUMENTATION
// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections	WITHOUT_CLASSIFICATION	0.9999991030276065	WITHOUT_CLASSIFICATION	8.969723934157165E-7	DOCUMENTATION
//grab its state saved at deletion	WITHOUT_CLASSIFICATION	0.9999951181999518	WITHOUT_CLASSIFICATION	4.88180004812075E-6	DOCUMENTATION
// grab its current state	WITHOUT_CLASSIFICATION	0.9999952490895404	WITHOUT_CLASSIFICATION	4.7509104596156935E-6	DOCUMENTATION
// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!	WITHOUT_CLASSIFICATION	0.9999995687825374	WITHOUT_CLASSIFICATION	4.3121746264890757E-7	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999988019553188	WITHOUT_CLASSIFICATION	1.1980446811849645E-6	DOCUMENTATION
// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object	WITHOUT_CLASSIFICATION	0.9999996803505579	WITHOUT_CLASSIFICATION	3.19649442146332E-7	DOCUMENTATION
// compare to cached state (ignoring collections unless versioned)	WITHOUT_CLASSIFICATION	0.9999995444664238	WITHOUT_CLASSIFICATION	4.555335762098631E-7	DOCUMENTATION
// if it was dirtied by a collection only	WITHOUT_CLASSIFICATION	0.9999978625441799	WITHOUT_CLASSIFICATION	2.1374558201715632E-6	DOCUMENTATION
// increment the version number (if necessary)	WITHOUT_CLASSIFICATION	0.9999968764652317	WITHOUT_CLASSIFICATION	3.1235347683432272E-6	DOCUMENTATION
// check nullability but do not perform command execute // we'll use scheduled updates for that.	WITHOUT_CLASSIFICATION	0.9999995924005404	WITHOUT_CLASSIFICATION	4.0759945967794195E-7	DOCUMENTATION
//give the Interceptor a chance to modify property values	WITHOUT_CLASSIFICATION	0.9999957361275204	WITHOUT_CLASSIFICATION	4.263872479667724E-6	DOCUMENTATION
//now we might need to recalculate the dirtyProperties array	WITHOUT_CLASSIFICATION	0.999996606066166	WITHOUT_CLASSIFICATION	3.393933833899667E-6	DOCUMENTATION
//use the current version	WITHOUT_CLASSIFICATION	0.9999777733267452	WITHOUT_CLASSIFICATION	2.222667325478022E-5	DOCUMENTATION
// Interceptor returned null, so do the dirtycheck ourself, if possible	WITHOUT_CLASSIFICATION	0.9999989872195905	WITHOUT_CLASSIFICATION	1.012780409519112E-6	DOCUMENTATION
// object loaded by update()	WITHOUT_CLASSIFICATION	0.9999962535754867	WITHOUT_CLASSIFICATION	3.7464245131867717E-6	DOCUMENTATION
// dirty check against the usual snapshot of the entity	WITHOUT_CLASSIFICATION	0.9999993001195966	WITHOUT_CLASSIFICATION	6.998804034695516E-7	DOCUMENTATION
// dirty check against the database snapshot, if possible/necessary	WITHOUT_CLASSIFICATION	0.9999997100147924	WITHOUT_CLASSIFICATION	2.899852077088039E-7	DOCUMENTATION
// the Interceptor handled the dirty checking	WITHOUT_CLASSIFICATION	0.9999983487437981	WITHOUT_CLASSIFICATION	1.6512562018638351E-6	DOCUMENTATION
//even process null collections	WITHOUT_CLASSIFICATION	0.9999851525396675	WITHOUT_CLASSIFICATION	1.4847460332522626E-5	DOCUMENTATION
// get the id from the object	WITHOUT_CLASSIFICATION	0.9999969040491135	WITHOUT_CLASSIFICATION	3.095950886610102E-6	DOCUMENTATION
//always do an INSERT, and let it fail by constraint violation	WITHOUT_CLASSIFICATION	0.999996622601579	WITHOUT_CLASSIFICATION	3.3773984210135074E-6	DOCUMENTATION
//what is the version on the database?	WITHOUT_CLASSIFICATION	0.9999934941356571	WITHOUT_CLASSIFICATION	6.50586434284884E-6	DOCUMENTATION
/// HHH-2378	WITHOUT_CLASSIFICATION	0.9999477484220515	WITHOUT_CLASSIFICATION	5.225157794854029E-5	DOCUMENTATION
//will result in a SQL UPDATE:	WITHOUT_CLASSIFICATION	0.9999621083277499	WITHOUT_CLASSIFICATION	3.7891672250038724E-5	DOCUMENTATION
//else do nothing (don't even reassociate object!)	WITHOUT_CLASSIFICATION	0.9999902676300042	WITHOUT_CLASSIFICATION	9.732369995720398E-6	DOCUMENTATION
// no existing row - do an insert	WITHOUT_CLASSIFICATION	0.9999973271468977	WITHOUT_CLASSIFICATION	2.6728531022688324E-6	DOCUMENTATION
//refresh() does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999913263866542	WITHOUT_CLASSIFICATION	8.673613345782796E-6	DOCUMENTATION
//do not return a proxy! //(this option indicates we are initializing a proxy)	WITHOUT_CLASSIFICATION	0.9999951717977439	WITHOUT_CLASSIFICATION	4.828202256070803E-6	DOCUMENTATION
//return a proxy if appropriate	WITHOUT_CLASSIFICATION	0.9999692780430607	WITHOUT_CLASSIFICATION	3.072195693936796E-5	DOCUMENTATION
// return existing object or initialized proxy (unless deleted)	WITHOUT_CLASSIFICATION	0.9999983802286552	WITHOUT_CLASSIFICATION	1.6197713448746921E-6	DOCUMENTATION
// return new uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999967659945829	WITHOUT_CLASSIFICATION	3.2340054170521865E-6	DOCUMENTATION
// this object was already loaded	WITHOUT_CLASSIFICATION	0.9999986864922231	WITHOUT_CLASSIFICATION	1.313507776934762E-6	DOCUMENTATION
// Entity was found in second-level cache...	WITHOUT_CLASSIFICATION	0.999998784069249	WITHOUT_CLASSIFICATION	1.215930750952653E-6	DOCUMENTATION
// make it circular-reference safe	WITHOUT_CLASSIFICATION	0.9999920186853009	WITHOUT_CLASSIFICATION	7.981314699192136E-6	DOCUMENTATION
// intializes result by side-effect	WITHOUT_CLASSIFICATION	0.9999984326287285	WITHOUT_CLASSIFICATION	1.5673712715332707E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977761934821	WITHOUT_CLASSIFICATION	2.2238065180351734E-6	DOCUMENTATION
//some statistics	WITHOUT_CLASSIFICATION	0.9999815082177661	WITHOUT_CLASSIFICATION	1.849178223398905E-5	DOCUMENTATION
//safe from concurrent modification because of how entryList() is implemented on IdentityMap	WITHOUT_CLASSIFICATION	0.9999921552267349	WITHOUT_CLASSIFICATION	7.844773265016949E-6	DOCUMENTATION
// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.	WITHOUT_CLASSIFICATION	0.9999995686730658	WITHOUT_CLASSIFICATION	4.3132693418286455E-7	DOCUMENTATION
// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.	WITHOUT_CLASSIFICATION	0.9999996954545418	WITHOUT_CLASSIFICATION	3.0454545815135436E-7	DOCUMENTATION
// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()	WITHOUT_CLASSIFICATION	0.9999987575797683	WITHOUT_CLASSIFICATION	1.2424202316172708E-6	DOCUMENTATION
// Update the status of the object and if necessary, schedule an update	WITHOUT_CLASSIFICATION	0.9999995168384087	WITHOUT_CLASSIFICATION	4.831615912826412E-7	DOCUMENTATION
// Schedule updates to collections:	WITHOUT_CLASSIFICATION	0.9999991835724101	WITHOUT_CLASSIFICATION	8.164275898257097E-7	DOCUMENTATION
// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations	WITHOUT_CLASSIFICATION	0.9999996932333883	WITHOUT_CLASSIFICATION	3.067666116570489E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972027293982	WITHOUT_CLASSIFICATION	2.7972706017995096E-6	DOCUMENTATION
//the database has changed now, so the subselect results need to be invalidated	WITHOUT_CLASSIFICATION	0.9999981189837546	WITHOUT_CLASSIFICATION	1.8810162453933225E-6	DOCUMENTATION
//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set	WITHOUT_CLASSIFICATION	0.9999972592193379	WITHOUT_CLASSIFICATION	2.74078066208174E-6	DOCUMENTATION
//otherwise recreate the mapping between the collection and its key	WITHOUT_CLASSIFICATION	0.9999844456663307	WITHOUT_CLASSIFICATION	1.5554333669345762E-5	DOCUMENTATION
//get a snapshot	WITHOUT_CLASSIFICATION	0.9999733109949042	WITHOUT_CLASSIFICATION	2.6689005095805666E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.999987502604326	WITHOUT_CLASSIFICATION	1.249739567399728E-5	DOCUMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.999987502604326	WITHOUT_CLASSIFICATION	1.249739567399728E-5	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity	WITHOUT_CLASSIFICATION	0.9999997849073973	WITHOUT_CLASSIFICATION	2.1509260266338066E-7	DOCUMENTATION
// EARLY EXIT!!!	WITHOUT_CLASSIFICATION	0.9999653980050187	WITHOUT_CLASSIFICATION	3.4601994981298405E-5	DOCUMENTATION
//ie. the entity came in from update()	WITHOUT_CLASSIFICATION	0.9999922425458623	WITHOUT_CLASSIFICATION	7.75745413771729E-6	DOCUMENTATION
// before any callbacks, etc, so subdeletions see that this deletion happened first	WITHOUT_CLASSIFICATION	0.9999996448509522	WITHOUT_CLASSIFICATION	3.551490478537898E-7	DOCUMENTATION
// Ensures that containing deletions happen before sub-deletions	WITHOUT_CLASSIFICATION	0.9999989837498253	WITHOUT_CLASSIFICATION	1.0162501745899328E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// cascade-delete to collections BEFORE the collection owner is deleted	WITHOUT_CLASSIFICATION	0.9999993320057595	WITHOUT_CLASSIFICATION	6.67994240431947E-7	DOCUMENTATION
// cascade-delete to many-to-one AFTER the parent was deleted	WITHOUT_CLASSIFICATION	0.9999988871161439	WITHOUT_CLASSIFICATION	1.112883856009184E-6	DOCUMENTATION
// if it is an initialized proxy, let cascade // handle it later on	WITHOUT_CLASSIFICATION	0.9999994416801781	WITHOUT_CLASSIFICATION	5.583198219669059E-7	DOCUMENTATION
//assign the requested id to the proxy, *before* //reassociating the proxy	WITHOUT_CLASSIFICATION	0.9999985829640045	WITHOUT_CLASSIFICATION	1.4170359956253203E-6	DOCUMENTATION
// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()	WITHOUT_CLASSIFICATION	0.9999984591494543	WITHOUT_CLASSIFICATION	1.5408505456051928E-6	DOCUMENTATION
//initialize properties of the event:	WITHOUT_CLASSIFICATION	0.9999949986673631	WITHOUT_CLASSIFICATION	5.001332636939825E-6	DOCUMENTATION
//return the id in the event object	WITHOUT_CLASSIFICATION	0.9999807066130197	WITHOUT_CLASSIFICATION	1.929338698030546E-5	DOCUMENTATION
//TRANSIENT or DELETED	WITHOUT_CLASSIFICATION	0.9998093318691478	WITHOUT_CLASSIFICATION	1.9066813085222596E-4	DOCUMENTATION
// use the id assigned to the instance	WITHOUT_CLASSIFICATION	0.9999987044149382	WITHOUT_CLASSIFICATION	1.2955850617599233E-6	DOCUMENTATION
// assume this is a newly instantiated transient object // which should be saved rather than updated	WITHOUT_CLASSIFICATION	0.9999989560211674	WITHOUT_CLASSIFICATION	1.0439788325948045E-6	DOCUMENTATION
// this is a transient object with existing persistent state not loaded by the session	WITHOUT_CLASSIFICATION	0.9999998273189882	WITHOUT_CLASSIFICATION	1.7268101193571557E-7	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999996360981672	WITHOUT_CLASSIFICATION	3.639018327850488E-7	DOCUMENTATION
//cachedState,	WITHOUT_CLASSIFICATION	0.9999271601492002	WITHOUT_CLASSIFICATION	7.283985079978103E-5	DOCUMENTATION
//assume true, since we don't really know, and it doesn't matter	WITHOUT_CLASSIFICATION	0.9999772687296516	WITHOUT_CLASSIFICATION	2.27312703483779E-5	DOCUMENTATION
//a "detached" collection!	WITHOUT_CLASSIFICATION	0.9999878930767456	WITHOUT_CLASSIFICATION	1.2106923254419485E-5	DOCUMENTATION
// if the collection belonged to a different entity, // clean up the existing state of the collection	WITHOUT_CLASSIFICATION	0.9999984781934111	WITHOUT_CLASSIFICATION	1.5218065889050724E-6	DOCUMENTATION
//log.debug( "calling onLoad()" );	WITHOUT_CLASSIFICATION	0.9999753879139828	WITHOUT_CLASSIFICATION	2.4612086017275558E-5	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9998378277247765	WITHOUT_CLASSIFICATION	1.621722752234306E-4	DOCUMENTATION
// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session	WITHOUT_CLASSIFICATION	0.9999987074689605	WITHOUT_CLASSIFICATION	1.292531039484941E-6	DOCUMENTATION
// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);	WITHOUT_CLASSIFICATION	0.9999983281527115	WITHOUT_CLASSIFICATION	1.671847288419791E-6	DOCUMENTATION
// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );	WITHOUT_CLASSIFICATION	0.9999984115181835	WITHOUT_CLASSIFICATION	1.5884818164822642E-6	DOCUMENTATION
//we need to check even if it was not initialized, because of delayed adds!	WITHOUT_CLASSIFICATION	0.9999955437272681	WITHOUT_CLASSIFICATION	4.456272731934587E-6	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997543743440583	WITHOUT_CLASSIFICATION	2.456256559417112E-4	DOCUMENTATION
// find any entities that are still transient after retry	WITHOUT_CLASSIFICATION	0.9999962682085904	WITHOUT_CLASSIFICATION	3.731791409522541E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9998378277247765	WITHOUT_CLASSIFICATION	1.621722752234306E-4	DOCUMENTATION
// Check the persistence context for an entry relating to this // entity to be merged...	WITHOUT_CLASSIFICATION	0.9999992294392739	WITHOUT_CLASSIFICATION	7.705607261526776E-7	DOCUMENTATION
// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance	WITHOUT_CLASSIFICATION	0.9999971260661817	WITHOUT_CLASSIFICATION	2.8739338182872697E-6	DOCUMENTATION
//DELETED	WITHOUT_CLASSIFICATION	0.9997616419967073	WITHOUT_CLASSIFICATION	2.383580032927789E-4	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999766508927797	WITHOUT_CLASSIFICATION	2.334910722037273E-5	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);	WITHOUT_CLASSIFICATION	0.9999997080718612	WITHOUT_CLASSIFICATION	2.9192813883241196E-7	DOCUMENTATION
//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness	WITHOUT_CLASSIFICATION	0.9999983618431159	WITHOUT_CLASSIFICATION	1.638156884144871E-6	DOCUMENTATION
// continue...; we'll find out if it ends up not getting saved later	WITHOUT_CLASSIFICATION	0.999998905051907	WITHOUT_CLASSIFICATION	1.0949480930008474E-6	DOCUMENTATION
// cascade first, so that all unsaved objects get their // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999995197660257	WITHOUT_CLASSIFICATION	4.802339742893548E-7	DOCUMENTATION
// check that entity id = requestedId	WITHOUT_CLASSIFICATION	0.9999988412130784	WITHOUT_CLASSIFICATION	1.1587869216785572E-6	DOCUMENTATION
//before cascade!	WITHOUT_CLASSIFICATION	0.9999766508927797	WITHOUT_CLASSIFICATION	2.334910722037273E-5	DOCUMENTATION
// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent	WITHOUT_CLASSIFICATION	0.9999975965808675	WITHOUT_CLASSIFICATION	2.403419132472926E-6	DOCUMENTATION
// cascade first, so that all unsaved objects get their  // copy created before we actually copy	WITHOUT_CLASSIFICATION	0.9999994760740197	WITHOUT_CLASSIFICATION	5.239259802186453E-7	DOCUMENTATION
//copyValues works by reflection, so explicitly mark the entity instance dirty	WITHOUT_CLASSIFICATION	0.9999984599335443	WITHOUT_CLASSIFICATION	1.540066455688662E-6	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9998342434273326	WITHOUT_CLASSIFICATION	1.6575657266736815E-4	DOCUMENTATION
//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed	WITHOUT_CLASSIFICATION	0.9999940601570096	WITHOUT_CLASSIFICATION	5.939842990382931E-6	DOCUMENTATION
// substitutes into values by side-effect	WITHOUT_CLASSIFICATION	0.9999988019553188	WITHOUT_CLASSIFICATION	1.1980446811849645E-6	DOCUMENTATION
//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );	WITHOUT_CLASSIFICATION	0.9999951615205663	WITHOUT_CLASSIFICATION	4.838479433569891E-6	DOCUMENTATION
//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );	WITHOUT_CLASSIFICATION	0.999993626334401	WITHOUT_CLASSIFICATION	6.373665598860779E-6	DOCUMENTATION
//keep the existing version number in the case of replicate!	WITHOUT_CLASSIFICATION	0.9999949743701134	WITHOUT_CLASSIFICATION	5.025629886582823E-6	DOCUMENTATION
// cascade-save to many-to-one BEFORE the parent is saved	WITHOUT_CLASSIFICATION	0.9999987811734901	WITHOUT_CLASSIFICATION	1.2188265100002633E-6	DOCUMENTATION
//pass this as an argument only to avoid double looking	WITHOUT_CLASSIFICATION	0.9999894474167412	WITHOUT_CLASSIFICATION	1.055258325884858E-5	DOCUMENTATION
// the object is persistent	WITHOUT_CLASSIFICATION	0.9999974795986336	WITHOUT_CLASSIFICATION	2.520401366456723E-6	DOCUMENTATION
//the entity is associated with the session, so check its status	WITHOUT_CLASSIFICATION	0.9999981520287423	WITHOUT_CLASSIFICATION	1.8479712576736592E-6	DOCUMENTATION
// do nothing for persistent instances	WITHOUT_CLASSIFICATION	0.9999961501357119	WITHOUT_CLASSIFICATION	3.849864288202093E-6	DOCUMENTATION
//ie. e.status==DELETED	WITHOUT_CLASSIFICATION	0.9999636588464559	WITHOUT_CLASSIFICATION	3.634115354412083E-5	DOCUMENTATION
// the object is transient or detached	WITHOUT_CLASSIFICATION	0.9999976600481254	WITHOUT_CLASSIFICATION	2.339951874691475E-6	DOCUMENTATION
//NOTE EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9998676614363704	WITHOUT_CLASSIFICATION	1.323385636295467E-4	DOCUMENTATION
// Private constructor - stops checkstyle from complaining.	WITHOUT_CLASSIFICATION	0.9999995895802859	WITHOUT_CLASSIFICATION	4.1041971410514354E-7	DOCUMENTATION
// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...	WITHOUT_CLASSIFICATION	0.9999992474345374	WITHOUT_CLASSIFICATION	7.525654624990341E-7	DOCUMENTATION
// eat it and try next	WITHOUT_CLASSIFICATION	0.9999934743329614	WITHOUT_CLASSIFICATION	6.525667038629507E-6	DOCUMENTATION
// Otherwise, try to use the no-arg constructor	WITHOUT_CLASSIFICATION	0.9999994422067462	WITHOUT_CLASSIFICATION	5.577932537970155E-7	DOCUMENTATION
// oracle sql-state code for deadlock	WITHOUT_CLASSIFICATION	0.9999973339194851	WITHOUT_CLASSIFICATION	2.6660805149498916E-6	DOCUMENTATION
// CollectionPropertyMapping processes everything except 'index'.	WITHOUT_CLASSIFICATION	0.9999989349786047	WITHOUT_CLASSIFICATION	1.0650213952858465E-6	DOCUMENTATION
// remove initial ", "	WITHOUT_CLASSIFICATION	0.9999958060900321	WITHOUT_CLASSIFICATION	4.193909967930578E-6	DOCUMENTATION
// remove initial " and "	WITHOUT_CLASSIFICATION	0.9999941238998419	WITHOUT_CLASSIFICATION	5.876100158155843E-6	DOCUMENTATION
//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!	WITHOUT_CLASSIFICATION	0.9999865534082032	WITHOUT_CLASSIFICATION	1.3446591796896553E-5	DOCUMENTATION
//notAfterClassTokens.add(",");	WITHOUT_CLASSIFICATION	0.99997889785488	WITHOUT_CLASSIFICATION	2.1102145119929324E-5	DOCUMENTATION
// just especially for the trivial collection filter	WITHOUT_CLASSIFICATION	0.9999991440945012	WITHOUT_CLASSIFICATION	8.559054987055204E-7	DOCUMENTATION
//update last non-whitespace token, if necessary	WITHOUT_CLASSIFICATION	0.9999984287933943	WITHOUT_CLASSIFICATION	1.5712066056531014E-6	DOCUMENTATION
// select-range is terminated by declaration of "from"	WITHOUT_CLASSIFICATION	0.9999995057858231	WITHOUT_CLASSIFICATION	4.942141770187577E-7	DOCUMENTATION
//scan for next non-whitespace token	WITHOUT_CLASSIFICATION	0.9999928299525732	WITHOUT_CLASSIFICATION	7.170047426745609E-6	DOCUMENTATION
// Note this!!	WITHOUT_CLASSIFICATION	0.9999948945522924	WITHOUT_CLASSIFICATION	5.105447707519575E-6	DOCUMENTATION
// Error message constants.	WITHOUT_CLASSIFICATION	0.9999962729427265	WITHOUT_CLASSIFICATION	3.7270572733409597E-6	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999964495924683	WITHOUT_CLASSIFICATION	3.5504075317169022E-6	DOCUMENTATION
// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999961505013368	WITHOUT_CLASSIFICATION	3.849498663234341E-6	DOCUMENTATION
// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!	WITHOUT_CLASSIFICATION	0.9999996440948306	WITHOUT_CLASSIFICATION	3.5590516942573497E-7	DOCUMENTATION
// Show the modified AST.	WITHOUT_CLASSIFICATION	0.9999933439262669	WITHOUT_CLASSIFICATION	6.656073733084927E-6	DOCUMENTATION
// Create a parameter specification for the collection filter...	WITHOUT_CLASSIFICATION	0.9999990302958729	WITHOUT_CLASSIFICATION	9.697041271062752E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999974206094495	WITHOUT_CLASSIFICATION	2.579390550459534E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999974206094495	WITHOUT_CLASSIFICATION	2.579390550459534E-6	DOCUMENTATION
// Get the names of the columns used to link between the collection // owner and the collection elements.	WITHOUT_CLASSIFICATION	0.9999961726748053	WITHOUT_CLASSIFICATION	3.827325194637787E-6	DOCUMENTATION
// The path AST should be a DotNode, and it should have been evaluated already.	WITHOUT_CLASSIFICATION	0.9999974385733867	WITHOUT_CLASSIFICATION	2.561426613316447E-6	DOCUMENTATION
// Tell the dot node about the join type.	WITHOUT_CLASSIFICATION	0.9999959534583238	WITHOUT_CLASSIFICATION	4.046541676106432E-6	DOCUMENTATION
// Re-arrange the tree so that the collection function is the root and the lhs is the path.	WITHOUT_CLASSIFICATION	0.9999994454829925	WITHOUT_CLASSIFICATION	5.54517007607217E-7	DOCUMENTATION
// Don't forget to resolve the argument! // Resolve the collection function now.	WITHOUT_CLASSIFICATION	0.9999988698204589	WITHOUT_CLASSIFICATION	1.1301795410728658E-6	DOCUMENTATION
// Resolve everything up to this dot, but don't resolve the placeholders yet.	WITHOUT_CLASSIFICATION	0.9999994726272211	WITHOUT_CLASSIFICATION	5.273727789346528E-7	DOCUMENTATION
// Should mean that no such property was found	WITHOUT_CLASSIFICATION	0.999998391884409	WITHOUT_CLASSIFICATION	1.6081155910345416E-6	DOCUMENTATION
// Was there an explicit select expression?	WITHOUT_CLASSIFICATION	0.9999988373520508	WITHOUT_CLASSIFICATION	1.1626479491825613E-6	DOCUMENTATION
// Attach any mapping-defined "ORDER BY" fragments	WITHOUT_CLASSIFICATION	0.9999979665073372	WITHOUT_CLASSIFICATION	2.0334926627274005E-6	DOCUMENTATION
// Use the explicitly declared select expression; determine the // return types indicated by each select token	WITHOUT_CLASSIFICATION	0.9999998093829187	WITHOUT_CLASSIFICATION	1.9061708142468196E-7	DOCUMENTATION
// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.	WITHOUT_CLASSIFICATION	0.999999619235152	WITHOUT_CLASSIFICATION	3.8076484795056476E-7	DOCUMENTATION
// Make #@%$^#^&# sure no alias is applied to the table name	WITHOUT_CLASSIFICATION	0.9999993326813085	WITHOUT_CLASSIFICATION	6.673186914493644E-7	DOCUMENTATION
// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators	WITHOUT_CLASSIFICATION	0.9999995867761671	WITHOUT_CLASSIFICATION	4.1322383292076544E-7	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999974206094495	WITHOUT_CLASSIFICATION	2.579390550459534E-6	DOCUMENTATION
// We need to seed the version value as part of this bulk insert	WITHOUT_CLASSIFICATION	0.9999995864813295	WITHOUT_CLASSIFICATION	4.135186705474964E-7	DOCUMENTATION
// we need to wrtap the param in a cast()	WITHOUT_CLASSIFICATION	0.9999983039075581	WITHOUT_CLASSIFICATION	1.696092441875065E-6	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.99999961441869	WITHOUT_CLASSIFICATION	3.8558131006145005E-7	DOCUMENTATION
// Generate implicit joins, only if necessary.	WITHOUT_CLASSIFICATION	0.9999990692671117	WITHOUT_CLASSIFICATION	9.307328883920033E-7	DOCUMENTATION
// Notify the FROM element that it is being referenced by the select.	WITHOUT_CLASSIFICATION	0.9999975282267106	WITHOUT_CLASSIFICATION	2.4717732892774204E-6	DOCUMENTATION
// Turn off includeSubclasses on all FromElements.	WITHOUT_CLASSIFICATION	0.9999964382110388	WITHOUT_CLASSIFICATION	3.561788961269943E-6	DOCUMENTATION
// create the node initially with the param name so that it shows // appropriately in the "original text" attribute	WITHOUT_CLASSIFICATION	0.9999993181198739	WITHOUT_CLASSIFICATION	6.81880126230143E-7	DOCUMENTATION
// Use the delegate, resolve identifiers as FROM element aliases.	WITHOUT_CLASSIFICATION	0.9999989494414248	WITHOUT_CLASSIFICATION	1.0505585752962594E-6	DOCUMENTATION
// select clauses for insert statements should alwasy be treated as shallow	WITHOUT_CLASSIFICATION	0.9999984810150508	WITHOUT_CLASSIFICATION	1.5189849490919125E-6	DOCUMENTATION
// no need to even collect this information if the persister is considered multi-table	WITHOUT_CLASSIFICATION	0.9999997279815898	WITHOUT_CLASSIFICATION	2.720184102222397E-7	DOCUMENTATION
// Make sure that the persister is versioned	WITHOUT_CLASSIFICATION	0.9999984228394219	WITHOUT_CLASSIFICATION	1.5771605780766762E-6	DOCUMENTATION
// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999964495924683	WITHOUT_CLASSIFICATION	3.5504075317169022E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999974206094495	WITHOUT_CLASSIFICATION	2.579390550459534E-6	DOCUMENTATION
// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();	WITHOUT_CLASSIFICATION	0.9999982408582888	WITHOUT_CLASSIFICATION	1.7591417112722072E-6	DOCUMENTATION
// Alias references and identifiers use the same node class.	WITHOUT_CLASSIFICATION	0.9999954877978389	WITHOUT_CLASSIFICATION	4.512202161028209E-6	DOCUMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999941854674779	WITHOUT_CLASSIFICATION	5.814532522030042E-6	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999891271740186	WITHOUT_CLASSIFICATION	1.087282598139617E-5	DOCUMENTATION
// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.	WITHOUT_CLASSIFICATION	0.9999993306927658	WITHOUT_CLASSIFICATION	6.693072342275572E-7	DOCUMENTATION
// Initialize SQL nodes here.	WITHOUT_CLASSIFICATION	0.9999988164657286	WITHOUT_CLASSIFICATION	1.1835342713243085E-6	DOCUMENTATION
// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999957364769896	WITHOUT_CLASSIFICATION	4.263523010333247E-6	DOCUMENTATION
// if template is null we just write the function out as it appears in the hql statement	WITHOUT_CLASSIFICATION	0.9999990638486768	WITHOUT_CLASSIFICATION	9.361513232183318E-7	DOCUMENTATION
// this function has a template -> redirect output and catch the arguments	WITHOUT_CLASSIFICATION	0.9999988176927337	WITHOUT_CLASSIFICATION	1.1823072662382884E-6	DOCUMENTATION
// --- Inner classes (moved here from sql-gen.g) ---	WITHOUT_CLASSIFICATION	0.9999991370406123	WITHOUT_CLASSIFICATION	8.629593876823925E-7	DOCUMENTATION
// check two "adjecent" nodes at the top of the from-clause tree	WITHOUT_CLASSIFICATION	0.9999995392222815	WITHOUT_CLASSIFICATION	4.607777185187118E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996996145723421	WITHOUT_CLASSIFICATION	3.0038542765793057E-4	DOCUMENTATION
// these are just two unrelated table references	WITHOUT_CLASSIFICATION	0.9999970323238176	WITHOUT_CLASSIFICATION	2.967676182354237E-6	DOCUMENTATION
// again, both should be FromElements	WITHOUT_CLASSIFICATION	0.9999962918794876	WITHOUT_CLASSIFICATION	3.70812051252699E-6	DOCUMENTATION
// NOTE : firstRow is zero-based	WITHOUT_CLASSIFICATION	0.999997438500467	WITHOUT_CLASSIFICATION	2.5614995331039257E-6	DOCUMENTATION
// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement	WITHOUT_CLASSIFICATION	0.9999967219856477	WITHOUT_CLASSIFICATION	3.2780143521701585E-6	DOCUMENTATION
// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them	WITHOUT_CLASSIFICATION	0.9999991279629972	WITHOUT_CLASSIFICATION	8.720370027272125E-7	DOCUMENTATION
// right represents a joins originating from left...	WITHOUT_CLASSIFICATION	0.9999984384500427	WITHOUT_CLASSIFICATION	1.5615499573261132E-6	DOCUMENTATION
// all clear	WITHOUT_CLASSIFICATION	0.9999826223136303	WITHOUT_CLASSIFICATION	1.7377686369648498E-5	DOCUMENTATION
// Ignore the token class name parameter, and use a specific token class.	WITHOUT_CLASSIFICATION	0.9999988475829068	WITHOUT_CLASSIFICATION	1.1524170931879854E-6	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999906643758164	WITHOUT_CLASSIFICATION	9.335624183522598E-6	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999906643758164	WITHOUT_CLASSIFICATION	9.335624183522598E-6	DOCUMENTATION
// remember that ordinal parameters numbers are 1-based!!!	WITHOUT_CLASSIFICATION	0.9999984742043306	WITHOUT_CLASSIFICATION	1.525795669413249E-6	DOCUMENTATION
// don't care about other param types here, just those explicitly user-defined...	WITHOUT_CLASSIFICATION	0.9999997199854159	WITHOUT_CLASSIFICATION	2.800145841615746E-7	DOCUMENTATION
// If the query is already compiled, skip the compilation.	WITHOUT_CLASSIFICATION	0.9999998746267816	WITHOUT_CLASSIFICATION	1.2537321840025233E-7	DOCUMENTATION
// Remember the parameters for the compilation.	WITHOUT_CLASSIFICATION	0.9999990316576512	WITHOUT_CLASSIFICATION	9.683423487530409E-7	DOCUMENTATION
// PHASE 1 : Parse the HQL into an AST.	WITHOUT_CLASSIFICATION	0.9999977499979067	WITHOUT_CLASSIFICATION	2.2500020933061104E-6	DOCUMENTATION
// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.	WITHOUT_CLASSIFICATION	0.9999963143782615	WITHOUT_CLASSIFICATION	3.685621738499305E-6	DOCUMENTATION
// PHASE 3 : Generate the SQL.	WITHOUT_CLASSIFICATION	0.9999951118252829	WITHOUT_CLASSIFICATION	4.8881747170716545E-6	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999996484060846	WITHOUT_CLASSIFICATION	3.515939154874795E-7	DOCUMENTATION
// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes	WITHOUT_CLASSIFICATION	0.9999996484060846	WITHOUT_CLASSIFICATION	3.515939154874795E-7	DOCUMENTATION
//only needed during compilation phase...	WITHOUT_CLASSIFICATION	0.9999956752815828	WITHOUT_CLASSIFICATION	4.324718417198774E-6	DOCUMENTATION
// Transform the tree.	WITHOUT_CLASSIFICATION	0.9999968019017322	WITHOUT_CLASSIFICATION	3.198098267696272E-6	DOCUMENTATION
// Parse the query string into an HQL AST.	WITHOUT_CLASSIFICATION	0.9999989190686578	WITHOUT_CLASSIFICATION	1.0809313422149959E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999979784567762	WITHOUT_CLASSIFICATION	2.0215432238027283E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999979784567762	WITHOUT_CLASSIFICATION	2.0215432238027283E-6	DOCUMENTATION
// Delegate to the QueryLoader...	WITHOUT_CLASSIFICATION	0.9999979784567762	WITHOUT_CLASSIFICATION	2.0215432238027283E-6	DOCUMENTATION
// NOTE : ( max - 1 ) because first is zero-based while max is not...	WITHOUT_CLASSIFICATION	0.9999995104128853	WITHOUT_CLASSIFICATION	4.89587114752397E-7	DOCUMENTATION
// -- Package local methods for the QueryLoader delegate --	WITHOUT_CLASSIFICATION	0.9999992849651502	WITHOUT_CLASSIFICATION	7.150348496981416E-7	DOCUMENTATION
// If there are no collection fetches, then no further checks are needed	WITHOUT_CLASSIFICATION	0.9999992725116524	WITHOUT_CLASSIFICATION	7.274883474703789E-7	DOCUMENTATION
// A shallow query is ok (although technically there should be no fetching here...)	WITHOUT_CLASSIFICATION	0.9999986577686486	WITHOUT_CLASSIFICATION	1.3422313513815542E-6	DOCUMENTATION
// should be the first, but just to be safe...	WITHOUT_CLASSIFICATION	0.9999977824305752	WITHOUT_CLASSIFICATION	2.2175694246793782E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999974206094495	WITHOUT_CLASSIFICATION	2.579390550459534E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999974206094495	WITHOUT_CLASSIFICATION	2.579390550459534E-6	DOCUMENTATION
// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return	WITHOUT_CLASSIFICATION	0.9999997070489685	WITHOUT_CLASSIFICATION	2.9295103147743903E-7	DOCUMENTATION
// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)	WITHOUT_CLASSIFICATION	0.999999857982953	WITHOUT_CLASSIFICATION	1.4201704703654919E-7	DOCUMENTATION
// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...	WITHOUT_CLASSIFICATION	0.9999996643057973	WITHOUT_CLASSIFICATION	3.356942026642936E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// we are already processing a dot-structure	WITHOUT_CLASSIFICATION	0.9999985059193212	WITHOUT_CLASSIFICATION	1.4940806789073462E-6	DOCUMENTATION
// igndore it...	WITHOUT_CLASSIFICATION	0.9999958016169953	WITHOUT_CLASSIFICATION	4.1983830046973555E-6	DOCUMENTATION
// we are now at a new tree level	WITHOUT_CLASSIFICATION	0.9999934228899302	WITHOUT_CLASSIFICATION	6.577110069820153E-6	DOCUMENTATION
// [jsd] The fix for HHH-558...	WITHOUT_CLASSIFICATION	0.9999949437996208	WITHOUT_CLASSIFICATION	5.0562003792454386E-6	DOCUMENTATION
// If the token can tell us if it could be an identifier...	WITHOUT_CLASSIFICATION	0.9999983963449957	WITHOUT_CLASSIFICATION	1.6036550043318447E-6	DOCUMENTATION
// ... and the expected token type was an identifier, then:	WITHOUT_CLASSIFICATION	0.9999986883780185	WITHOUT_CLASSIFICATION	1.3116219814944304E-6	DOCUMENTATION
// Use the token as an identifier.	WITHOUT_CLASSIFICATION	0.9999980386745343	WITHOUT_CLASSIFICATION	1.961325465702607E-6	DOCUMENTATION
// Add the token to the AST.	WITHOUT_CLASSIFICATION	0.9999949051994022	WITHOUT_CLASSIFICATION	5.09480059782939E-6	DOCUMENTATION
// (NOT (EQ a b) ) => (NE a b)	WITHOUT_CLASSIFICATION	0.9999581539752759	WITHOUT_CLASSIFICATION	4.184602472408827E-5	DOCUMENTATION
// (NOT (NE a b) ) => (EQ a b)	WITHOUT_CLASSIFICATION	0.9999581539752759	WITHOUT_CLASSIFICATION	4.184602472408827E-5	DOCUMENTATION
// (NOT (LT a b) ) => (GE a b)	WITHOUT_CLASSIFICATION	0.9999593799889118	WITHOUT_CLASSIFICATION	4.062001108829955E-5	DOCUMENTATION
// (NOT (GE a b) ) => (LT a b)	WITHOUT_CLASSIFICATION	0.9999593799889118	WITHOUT_CLASSIFICATION	4.062001108829955E-5	DOCUMENTATION
// (NOT (LE a b) ) => (GT a b)	WITHOUT_CLASSIFICATION	0.9999613688747532	WITHOUT_CLASSIFICATION	3.863112524683805E-5	DOCUMENTATION
// (NOT (LIKE a b) ) => (NOT_LIKE a b)	WITHOUT_CLASSIFICATION	0.9999610066769926	WITHOUT_CLASSIFICATION	3.899332300733784E-5	DOCUMENTATION
// (NOT (NOT_LIKE a b) ) => (LIKE a b)	WITHOUT_CLASSIFICATION	0.9999610066769926	WITHOUT_CLASSIFICATION	3.899332300733784E-5	DOCUMENTATION
// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)	WITHOUT_CLASSIFICATION	0.9999644048455766	WITHOUT_CLASSIFICATION	3.559515442340918E-5	DOCUMENTATION
// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999524251495724	WITHOUT_CLASSIFICATION	4.7574850427568416E-5	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999972181541713	WITHOUT_CLASSIFICATION	2.781845828680474E-6	DOCUMENTATION
//overriden to avoid System.exit	WITHOUT_CLASSIFICATION	0.9999906643758164	WITHOUT_CLASSIFICATION	9.335624183522598E-6	DOCUMENTATION
// if // if // Otherwise, handle the error normally.	WITHOUT_CLASSIFICATION	0.9999992308037715	WITHOUT_CLASSIFICATION	7.69196228379994E-7	DOCUMENTATION
// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)	WITHOUT_CLASSIFICATION	0.9999524251495724	WITHOUT_CLASSIFICATION	4.7574850427568416E-5	DOCUMENTATION
/* This can never happen because this rule will always eliminate the child NOT.	WITHOUT_CLASSIFICATION	0.9999954624555354	WITHOUT_CLASSIFICATION	4.537544464591562E-6	DOCUMENTATION
// Just add a 'not' parent.	WITHOUT_CLASSIFICATION	0.9999955349862835	WITHOUT_CLASSIFICATION	4.465013716494061E-6	DOCUMENTATION
// (EQ NULL b) => (IS_NULL b)	WITHOUT_CLASSIFICATION	0.9999585123423761	WITHOUT_CLASSIFICATION	4.148765762395843E-5	DOCUMENTATION
// (EQ a NULL) => (IS_NULL a)	WITHOUT_CLASSIFICATION	0.9999653743598926	WITHOUT_CLASSIFICATION	3.46256401073141E-5	DOCUMENTATION
// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )	WITHOUT_CLASSIFICATION	0.9999993143026962	WITHOUT_CLASSIFICATION	6.856973038946189E-7	DOCUMENTATION
// Add NOT if it's negated.	WITHOUT_CLASSIFICATION	0.999997584250543	WITHOUT_CLASSIFICATION	2.4157494569903906E-6	DOCUMENTATION
// Create nodes that track line and column number.	WITHOUT_CLASSIFICATION	0.9999990948722081	WITHOUT_CLASSIFICATION	9.051277920816977E-7	DOCUMENTATION
// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.	WITHOUT_CLASSIFICATION	0.9999989257339581	WITHOUT_CLASSIFICATION	1.0742660418945326E-6	DOCUMENTATION
// Case 2: The current token is after FROM and before '.'.	WITHOUT_CLASSIFICATION	0.9999903197527125	WITHOUT_CLASSIFICATION	9.680247287539225E-6	DOCUMENTATION
// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...	WITHOUT_CLASSIFICATION	0.9999997633264182	WITHOUT_CLASSIFICATION	2.366735819825334E-7	DOCUMENTATION
// See if the second lookahed token can be an identifier.	WITHOUT_CLASSIFICATION	0.999999206424834	WITHOUT_CLASSIFICATION	7.935751660097127E-7	DOCUMENTATION
// Set it!	WITHOUT_CLASSIFICATION	0.9999921034561994	WITHOUT_CLASSIFICATION	7.896543800667108E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999952939988079	WITHOUT_CLASSIFICATION	4.706001192130379E-6	DOCUMENTATION
// strip the " where "	WITHOUT_CLASSIFICATION	0.9999949466491667	WITHOUT_CLASSIFICATION	5.053350833346125E-6	DOCUMENTATION
// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail	WITHOUT_CLASSIFICATION	0.9999992745364888	WITHOUT_CLASSIFICATION	7.254635110695314E-7	DOCUMENTATION
// at the very least cleanup the data :)	WITHOUT_CLASSIFICATION	0.9999985109310149	WITHOUT_CLASSIFICATION	1.489068985074353E-6	DOCUMENTATION
// First, save off the pertinent ids, as the return value	WITHOUT_CLASSIFICATION	0.9999980813499804	WITHOUT_CLASSIFICATION	1.9186500196029185E-6	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.999996105469479	WITHOUT_CLASSIFICATION	3.894530521016984E-6	DOCUMENTATION
// jdbc params are 1-based	WITHOUT_CLASSIFICATION	0.999996105469479	WITHOUT_CLASSIFICATION	3.894530521016984E-6	DOCUMENTATION
// Start performing the updates	WITHOUT_CLASSIFICATION	0.9999987425529963	WITHOUT_CLASSIFICATION	1.2574470037345317E-6	DOCUMENTATION
// First, save off the pertinent ids, saving the number of pertinent ids for return	WITHOUT_CLASSIFICATION	0.9999958379025832	WITHOUT_CLASSIFICATION	4.162097416818595E-6	DOCUMENTATION
// Start performing the deletes	WITHOUT_CLASSIFICATION	0.9999988946192873	WITHOUT_CLASSIFICATION	1.1053807126735531E-6	DOCUMENTATION
// otherwise, everything ok.	WITHOUT_CLASSIFICATION	0.9999971575331773	WITHOUT_CLASSIFICATION	2.8424668228086094E-6	DOCUMENTATION
// visit width-first, then depth	WITHOUT_CLASSIFICATION	0.9999972151320475	WITHOUT_CLASSIFICATION	2.784867952408078E-6	DOCUMENTATION
// if the types report logical equivalence, return true...	WITHOUT_CLASSIFICATION	0.99999928460142	WITHOUT_CLASSIFICATION	7.153985801055882E-7	DOCUMENTATION
// otherwise, perform a "deep equivalence" check...	WITHOUT_CLASSIFICATION	0.9999990838555989	WITHOUT_CLASSIFICATION	9.161444012463531E-7	DOCUMENTATION
// If there is no WHERE node, make one.	WITHOUT_CLASSIFICATION	0.9999986600256315	WITHOUT_CLASSIFICATION	1.3399743683566846E-6	DOCUMENTATION
// inject the WHERE after the parent	WITHOUT_CLASSIFICATION	0.9999965423800574	WITHOUT_CLASSIFICATION	3.4576199424705173E-6	DOCUMENTATION
// Never include subclasses for implied from elements.	WITHOUT_CLASSIFICATION	0.9999990096024832	WITHOUT_CLASSIFICATION	9.903975166993398E-7	DOCUMENTATION
// Moved here from SelectClause [jsd]	WITHOUT_CLASSIFICATION	0.9999974471109473	WITHOUT_CLASSIFICATION	2.5528890526687035E-6	DOCUMENTATION
///////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996996145723421	WITHOUT_CLASSIFICATION	3.0038542765793057E-4	DOCUMENTATION
// Use the table fromElement and the property name to get the array of column names.	WITHOUT_CLASSIFICATION	0.9999988444857938	WITHOUT_CLASSIFICATION	1.1555142062574267E-6	DOCUMENTATION
// Set the attributes of the property reference expression.	WITHOUT_CLASSIFICATION	0.999997720958394	WITHOUT_CLASSIFICATION	2.2790416060432627E-6	DOCUMENTATION
// If the uresolved property path isn't set yet, just use the property name.	WITHOUT_CLASSIFICATION	0.9999996673112925	WITHOUT_CLASSIFICATION	3.326887074682291E-7	DOCUMENTATION
// The 'from element' that the property is in.	WITHOUT_CLASSIFICATION	0.9999990776341176	WITHOUT_CLASSIFICATION	9.223658825508007E-7	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999991726179752	WITHOUT_CLASSIFICATION	8.273820248292982E-7	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999991726179752	WITHOUT_CLASSIFICATION	8.273820248292982E-7	DOCUMENTATION
// If this dot has already been resolved, stop now.	WITHOUT_CLASSIFICATION	0.9999991723277875	WITHOUT_CLASSIFICATION	8.276722125881459E-7	DOCUMENTATION
// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.	WITHOUT_CLASSIFICATION	0.9999976779833757	WITHOUT_CLASSIFICATION	2.322016624355277E-6	DOCUMENTATION
// The property is a collection...	WITHOUT_CLASSIFICATION	0.9999992717153946	WITHOUT_CLASSIFICATION	7.282846054113726E-7	DOCUMENTATION
// The property is a component...	WITHOUT_CLASSIFICATION	0.9999989289094536	WITHOUT_CLASSIFICATION	1.0710905464088128E-6	DOCUMENTATION
// The property is another class..	WITHOUT_CLASSIFICATION	0.9999990509331151	WITHOUT_CLASSIFICATION	9.490668849148392E-7	DOCUMENTATION
// Otherwise, this is a primitive type.	WITHOUT_CLASSIFICATION	0.9999984857877855	WITHOUT_CLASSIFICATION	1.5142122144438642E-6	DOCUMENTATION
//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)	WITHOUT_CLASSIFICATION	0.999994291393151	WITHOUT_CLASSIFICATION	5.708606848982915E-6	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999992999468086	WITHOUT_CLASSIFICATION	7.000531913664811E-7	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999996492468449	WITHOUT_CLASSIFICATION	3.50753155074073E-7	DOCUMENTATION
// in non-select queries, the only time we should need to join is if we are in a subquery from clause	WITHOUT_CLASSIFICATION	0.9999994407302429	WITHOUT_CLASSIFICATION	5.59269757129192E-7	DOCUMENTATION
// this is the regression style determination which matches the logic of the classic translator	WITHOUT_CLASSIFICATION	0.9999995893964726	WITHOUT_CLASSIFICATION	4.106035274063743E-7	DOCUMENTATION
// This 'dot' expression now refers to the resulting from element.	WITHOUT_CLASSIFICATION	0.9999992999468086	WITHOUT_CLASSIFICATION	7.000531913664811E-7	DOCUMENTATION
// even though we might find a pre-existing element by join path, we may not be able to reuse it...	WITHOUT_CLASSIFICATION	0.999998998763995	WITHOUT_CLASSIFICATION	1.0012360048868528E-6	DOCUMENTATION
// NOTE : addDuplicateAlias() already performs nullness checks on the alias.	WITHOUT_CLASSIFICATION	0.9999996232601215	WITHOUT_CLASSIFICATION	3.767398785442166E-7	DOCUMENTATION
// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse	WITHOUT_CLASSIFICATION	0.9999989211492668	WITHOUT_CLASSIFICATION	1.07885073324154E-6	DOCUMENTATION
// again, null != null here	WITHOUT_CLASSIFICATION	0.9999918832610838	WITHOUT_CLASSIFICATION	8.116738916128707E-6	DOCUMENTATION
// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).	WITHOUT_CLASSIFICATION	0.9999998099090256	WITHOUT_CLASSIFICATION	1.9009097447700503E-7	DOCUMENTATION
// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery	WITHOUT_CLASSIFICATION	0.9999987629048893	WITHOUT_CLASSIFICATION	1.2370951107789804E-6	DOCUMENTATION
// we know only the lhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999984158453067	WITHOUT_CLASSIFICATION	1.5841546933631765E-6	DOCUMENTATION
// the referenced node text is the special 'id'	WITHOUT_CLASSIFICATION	0.9999983413723079	WITHOUT_CLASSIFICATION	1.6586276920266364E-6	DOCUMENTATION
// only the identifier property field name can be a reference to the associated entity's PK...	WITHOUT_CLASSIFICATION	0.9999968838278392	WITHOUT_CLASSIFICATION	3.11617216074689E-6	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999995883861921	WITHOUT_CLASSIFICATION	4.116138080279541E-7	DOCUMENTATION
// Append the new property name onto the unresolved path.	WITHOUT_CLASSIFICATION	0.9999982716880763	WITHOUT_CLASSIFICATION	1.728311923666606E-6	DOCUMENTATION
// If the lhs is a collection, use CollectionPropertyMapping	WITHOUT_CLASSIFICATION	0.9999994780132446	WITHOUT_CLASSIFICATION	5.219867553505118E-7	DOCUMENTATION
// Tell the destination fromElement to 'includeSubclasses'.	WITHOUT_CLASSIFICATION	0.999998611574227	WITHOUT_CLASSIFICATION	1.3884257729963492E-6	DOCUMENTATION
// Use theta style (for regression) // Move the node up, after the origin node.	WITHOUT_CLASSIFICATION	0.9999991285868964	WITHOUT_CLASSIFICATION	8.714131036599195E-7	DOCUMENTATION
// Don't resolve the node again.	WITHOUT_CLASSIFICATION	0.9999981594442261	WITHOUT_CLASSIFICATION	1.8405557738554486E-6	DOCUMENTATION
// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.	WITHOUT_CLASSIFICATION	0.9999994975892103	WITHOUT_CLASSIFICATION	5.024107896919747E-7	DOCUMENTATION
// we need to strip off the embedded parens so that sql-gen does not double these up	WITHOUT_CLASSIFICATION	0.9999993973377016	WITHOUT_CLASSIFICATION	6.026622983681724E-7	DOCUMENTATION
// we have something like : "? [op] rhs"	WITHOUT_CLASSIFICATION	0.9999964571022234	WITHOUT_CLASSIFICATION	3.5428977765925406E-6	DOCUMENTATION
// we have something like : "lhs [op] ?"	WITHOUT_CLASSIFICATION	0.9999964409490294	WITHOUT_CLASSIFICATION	3.559050970625389E-6	DOCUMENTATION
// we know only the rhs-hand type, so use that	WITHOUT_CLASSIFICATION	0.9999984982418668	WITHOUT_CLASSIFICATION	1.501758133151995E-6	DOCUMENTATION
// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)	WITHOUT_CLASSIFICATION	0.9999987426449632	WITHOUT_CLASSIFICATION	1.257355036805082E-6	DOCUMENTATION
// one or the other needs to be a datetime for us to get into this method in the first place...	WITHOUT_CLASSIFICATION	0.9999991200219875	WITHOUT_CLASSIFICATION	8.799780124749403E-7	DOCUMENTATION
// #3 - note that this is also true of "datetime - :param"...	WITHOUT_CLASSIFICATION	0.9999992528959534	WITHOUT_CLASSIFICATION	7.471040466844771E-7	DOCUMENTATION
// #2	WITHOUT_CLASSIFICATION	0.9999750849202639	WITHOUT_CLASSIFICATION	2.491507973605723E-5	DOCUMENTATION
// Generate the inner join -- The elements need to be joined to the collection they are in.	WITHOUT_CLASSIFICATION	0.9999995091503047	WITHOUT_CLASSIFICATION	4.908496953406413E-7	DOCUMENTATION
// nothing to do	WITHOUT_CLASSIFICATION	0.9999912805133786	WITHOUT_CLASSIFICATION	8.719486621444858E-6	DOCUMENTATION
// The 'from element' that represents the elements of the collection.	WITHOUT_CLASSIFICATION	0.9999991696230388	WITHOUT_CLASSIFICATION	8.303769612293963E-7	DOCUMENTATION
// Add the condition to the join sequence that qualifies the indexed element.	WITHOUT_CLASSIFICATION	0.9999992347735521	WITHOUT_CLASSIFICATION	7.65226447948176E-7	DOCUMENTATION
// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)	WITHOUT_CLASSIFICATION	0.9999993776906061	WITHOUT_CLASSIFICATION	6.223093939184197E-7	DOCUMENTATION
// Now, set the text for this node.  It should be the element columns.	WITHOUT_CLASSIFICATION	0.9999985282701346	WITHOUT_CLASSIFICATION	1.471729865409282E-6	DOCUMENTATION
// Get the function return value type, based on the type of the first argument.	WITHOUT_CLASSIFICATION	0.9999994580513692	WITHOUT_CLASSIFICATION	5.419486308353267E-7	DOCUMENTATION
// This will call initialize(tok)!	WITHOUT_CLASSIFICATION	0.9999970115141731	WITHOUT_CLASSIFICATION	2.988485826919542E-6	DOCUMENTATION
// mutation depends on the types of nodes invloved...	WITHOUT_CLASSIFICATION	0.9999995572426221	WITHOUT_CLASSIFICATION	4.4275737788714445E-7	DOCUMENTATION
// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...	WITHOUT_CLASSIFICATION	0.9999996899971043	WITHOUT_CLASSIFICATION	3.100028957325398E-7	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999996428393524	WITHOUT_CLASSIFICATION	3.571606476842824E-7	DOCUMENTATION
// Generated select expressions are already resolved, nothing to do.	WITHOUT_CLASSIFICATION	0.9999997801927663	WITHOUT_CLASSIFICATION	2.1980723381606543E-7	DOCUMENTATION
// The path may be a reference to an alias defined in the parent query.	WITHOUT_CLASSIFICATION	0.9999979712877073	WITHOUT_CLASSIFICATION	2.028712292737275E-6	DOCUMENTATION
// The HQL class alias refers to the class name.	WITHOUT_CLASSIFICATION	0.9999984685525833	WITHOUT_CLASSIFICATION	1.5314474166538138E-6	DOCUMENTATION
// Associate the table alias with the element.	WITHOUT_CLASSIFICATION	0.9999987756776588	WITHOUT_CLASSIFICATION	1.224322341113973E-6	DOCUMENTATION
// try the parent FromClause...	WITHOUT_CLASSIFICATION	0.9999976683974015	WITHOUT_CLASSIFICATION	2.3316025985317183E-6	DOCUMENTATION
// Add the new node to the map so that we don't create it twice.	WITHOUT_CLASSIFICATION	0.9999993796347711	WITHOUT_CLASSIFICATION	6.203652288931006E-7	DOCUMENTATION
// Make sure that all from elements registered with this FROM clause are actually in the AST.	WITHOUT_CLASSIFICATION	0.9999990698331203	WITHOUT_CLASSIFICATION	9.301668797518061E-7	DOCUMENTATION
// Invoke setScalarColumnText on each constructor argument.	WITHOUT_CLASSIFICATION	0.9999975158711237	WITHOUT_CLASSIFICATION	2.4841288763783194E-6	DOCUMENTATION
// Collect the select expressions, skip the first child because it is the class name.	WITHOUT_CLASSIFICATION	0.9999994058283044	WITHOUT_CLASSIFICATION	5.941716956121386E-7	DOCUMENTATION
// return an empty Type array	WITHOUT_CLASSIFICATION	0.999989009955277	WITHOUT_CLASSIFICATION	1.0990044723041717E-5	DOCUMENTATION
// Constructors are always considered scalar results.	WITHOUT_CLASSIFICATION	0.9999983867551974	WITHOUT_CLASSIFICATION	1.6132448026474923E-6	DOCUMENTATION
// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor	WITHOUT_CLASSIFICATION	0.9999999023229033	WITHOUT_CLASSIFICATION	9.767709673740309E-8	DOCUMENTATION
// if there is no order by, make one	WITHOUT_CLASSIFICATION	0.9999981381345008	WITHOUT_CLASSIFICATION	1.861865499210779E-6	DOCUMENTATION
// Find the WHERE; if there is no WHERE, find the FROM...	WITHOUT_CLASSIFICATION	0.9999977712007124	WITHOUT_CLASSIFICATION	2.2287992875639234E-6	DOCUMENTATION
// Now, inject the newly built ORDER BY into the tree	WITHOUT_CLASSIFICATION	0.9999983083988522	WITHOUT_CLASSIFICATION	1.691601147806138E-6	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999942902858334	WITHOUT_CLASSIFICATION	5.70971416661299E-6	DOCUMENTATION
// logic operators by definition resolve to boolean.	WITHOUT_CLASSIFICATION	0.9999996670174096	WITHOUT_CLASSIFICATION	3.329825904891156E-7	DOCUMENTATION
// Render the identifier select fragment using the table alias.	WITHOUT_CLASSIFICATION	0.9999990429934347	WITHOUT_CLASSIFICATION	9.570065652293495E-7	DOCUMENTATION
// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).	WITHOUT_CLASSIFICATION	0.9999960344790468	WITHOUT_CLASSIFICATION	3.965520953148838E-6	DOCUMENTATION
// For many-to-many joins, use the tablename from the queryable collection for the default text.	WITHOUT_CLASSIFICATION	0.9999990969768338	WITHOUT_CLASSIFICATION	9.03023166102827E-7	DOCUMENTATION
// Otherwise, use the property mapping.	WITHOUT_CLASSIFICATION	0.9999991351453912	WITHOUT_CLASSIFICATION	8.64854608801517E-7	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999963925228412	WITHOUT_CLASSIFICATION	3.6074771588585493E-6	DOCUMENTATION
// If the property is a special collection property name, return a CollectionPropertyMapping.	WITHOUT_CLASSIFICATION	0.9999991219585748	WITHOUT_CLASSIFICATION	8.780414251514487E-7	DOCUMENTATION
// Collection of components.	WITHOUT_CLASSIFICATION	0.9999941277362948	WITHOUT_CLASSIFICATION	5.872263705263612E-6	DOCUMENTATION
// make sure the lhs is "assignable"...	WITHOUT_CLASSIFICATION	0.9999990979517489	WITHOUT_CLASSIFICATION	9.020482510662944E-7	DOCUMENTATION
// false indicates to not generate parens around the assignment	WITHOUT_CLASSIFICATION	0.9999996035147283	WITHOUT_CLASSIFICATION	3.964852717848604E-7	DOCUMENTATION
// Register the FromElement with the FROM clause, now that we have the names and aliases.	WITHOUT_CLASSIFICATION	0.9999975582707142	WITHOUT_CLASSIFICATION	2.441729285740385E-6	DOCUMENTATION
// currently allowed...	WITHOUT_CLASSIFICATION	0.9999926809862899	WITHOUT_CLASSIFICATION	7.319013710002094E-6	DOCUMENTATION
// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.	WITHOUT_CLASSIFICATION	0.9999998238193527	WITHOUT_CLASSIFICATION	1.7618064740912641E-7	DOCUMENTATION
//return classAlias == null ? className : classAlias;	WITHOUT_CLASSIFICATION	0.9999724521032913	WITHOUT_CLASSIFICATION	2.754789670869155E-5	DOCUMENTATION
// This is an explicit FROM element.	WITHOUT_CLASSIFICATION	0.9999956537365494	WITHOUT_CLASSIFICATION	4.346263450606925E-6	DOCUMENTATION
// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999942902858334	WITHOUT_CLASSIFICATION	5.70971416661299E-6	DOCUMENTATION
// Fetch can't be used with scroll() or iterate().	WITHOUT_CLASSIFICATION	0.9999968083804429	WITHOUT_CLASSIFICATION	3.1916195571194394E-6	DOCUMENTATION
// If it's not implied or it is implied and it's a many to many join where the target wasn't found.	WITHOUT_CLASSIFICATION	0.9999991346757015	WITHOUT_CLASSIFICATION	8.653242986281656E-7	DOCUMENTATION
// Since this is an explicit FROM element, it can't be implied in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999981048520964	WITHOUT_CLASSIFICATION	1.8951479036259011E-6	DOCUMENTATION
// Do nothing, eplicit from elements are *always* in the projection list.	WITHOUT_CLASSIFICATION	0.9999997823929044	WITHOUT_CLASSIFICATION	2.176070954854224E-7	DOCUMENTATION
// propertyName refers to something like collection.size...	WITHOUT_CLASSIFICATION	0.9999992617897735	WITHOUT_CLASSIFICATION	7.382102266107672E-7	DOCUMENTATION
// property name is a sub-path of a component...	WITHOUT_CLASSIFICATION	0.9999986602080434	WITHOUT_CLASSIFICATION	1.3397919566128437E-6	DOCUMENTATION
// Always add the collection's query spaces.	WITHOUT_CLASSIFICATION	0.9999996492468449	WITHOUT_CLASSIFICATION	3.50753155074073E-7	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999994296323529	WITHOUT_CLASSIFICATION	5.703676470681516E-7	DOCUMENTATION
// logic operators by definition resolve to booleans	WITHOUT_CLASSIFICATION	0.9999996428393524	WITHOUT_CLASSIFICATION	3.571606476842824E-7	DOCUMENTATION
// DotNode uses null here...	WITHOUT_CLASSIFICATION	0.9999947702489522	WITHOUT_CLASSIFICATION	5.229751047826151E-6	DOCUMENTATION
// We represent a from-clause alias	WITHOUT_CLASSIFICATION	0.9999979007370563	WITHOUT_CLASSIFICATION	2.0992629436706276E-6	DOCUMENTATION
// we are the LHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999990117658493	WITHOUT_CLASSIFICATION	9.882341506783416E-7	DOCUMENTATION
// we are the RHS of the DOT representing a naked comp-prop-ref	WITHOUT_CLASSIFICATION	0.9999990239985814	WITHOUT_CLASSIFICATION	9.760014186366923E-7	DOCUMENTATION
// we represent a naked (simple) prop-ref	WITHOUT_CLASSIFICATION	0.9999980616921607	WITHOUT_CLASSIFICATION	1.938307839339763E-6	DOCUMENTATION
// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...	WITHOUT_CLASSIFICATION	0.9999993518911156	WITHOUT_CLASSIFICATION	6.481088844217575E-7	DOCUMENTATION
// assume this ident's text does *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999992437747784	WITHOUT_CLASSIFICATION	7.562252215482956E-7	DOCUMENTATION
// just ignore it for now, it'll get resolved later...	WITHOUT_CLASSIFICATION	0.9999985502795128	WITHOUT_CLASSIFICATION	1.4497204872219279E-6	DOCUMENTATION
// This is not actually a constant, but a reference to FROM element.	WITHOUT_CLASSIFICATION	0.9999951276134851	WITHOUT_CLASSIFICATION	4.872386515007933E-6	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999993810269894	WITHOUT_CLASSIFICATION	6.189730107033296E-7	DOCUMENTATION
// these pieces are needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999990038931489	WITHOUT_CLASSIFICATION	9.961068511276261E-7	DOCUMENTATION
// used to set the type of the parent dot node	WITHOUT_CLASSIFICATION	0.9999982252896578	WITHOUT_CLASSIFICATION	1.7747103422848252E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999986258076592	WITHOUT_CLASSIFICATION	1.374192340797652E-6	DOCUMENTATION
// assume we do *not* refer to a property on the given persister	WITHOUT_CLASSIFICATION	0.9999986258076592	WITHOUT_CLASSIFICATION	1.374192340797652E-6	DOCUMENTATION
// naked property-refs cannot be used with an aliased from element	WITHOUT_CLASSIFICATION	0.9999992075238028	WITHOUT_CLASSIFICATION	7.924761971116631E-7	DOCUMENTATION
// this piece is needed for usage in select clause	WITHOUT_CLASSIFICATION	0.9999986059672927	WITHOUT_CLASSIFICATION	1.3940327073535377E-6	DOCUMENTATION
// do *not* over-write the column text, as that has already been // "rendered" during resolve	WITHOUT_CLASSIFICATION	0.9999997351040762	WITHOUT_CLASSIFICATION	2.6489592377900056E-7	DOCUMENTATION
// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string	WITHOUT_CLASSIFICATION	0.9999998096029683	WITHOUT_CLASSIFICATION	1.9039703168016347E-7	DOCUMENTATION
// Look up class name using the first identifier in the path.	WITHOUT_CLASSIFICATION	0.9999990406148349	WITHOUT_CLASSIFICATION	9.593851651449925E-7	DOCUMENTATION
// Add to the query spaces.	WITHOUT_CLASSIFICATION	0.9999986610555042	WITHOUT_CLASSIFICATION	1.3389444958595628E-6	DOCUMENTATION
// If the from element isn't in the same clause, create a new from element.	WITHOUT_CLASSIFICATION	0.9999984640176891	WITHOUT_CLASSIFICATION	1.535982310874324E-6	DOCUMENTATION
// This is the root level node. // Generate an explicit from clause at the root.	WITHOUT_CLASSIFICATION	0.9999996780555994	WITHOUT_CLASSIFICATION	3.2194440064191255E-7	DOCUMENTATION
// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join	WITHOUT_CLASSIFICATION	0.9999997533096201	WITHOUT_CLASSIFICATION	2.466903798600876E-7	DOCUMENTATION
// super-duper-classic-parser-regression-testing-mojo-magic...	WITHOUT_CLASSIFICATION	0.999999285039643	WITHOUT_CLASSIFICATION	7.149603570974126E-7	DOCUMENTATION
// A collection of entities...	WITHOUT_CLASSIFICATION	0.9999962850913348	WITHOUT_CLASSIFICATION	3.7149086652145786E-6	DOCUMENTATION
// A collection of components...	WITHOUT_CLASSIFICATION	0.9999968856211359	WITHOUT_CLASSIFICATION	3.1143788640695107E-6	DOCUMENTATION
// A collection of scalar elements...	WITHOUT_CLASSIFICATION	0.9999968341745498	WITHOUT_CLASSIFICATION	3.1658254502516374E-6	DOCUMENTATION
// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999991823456101	WITHOUT_CLASSIFICATION	8.176543898422442E-7	DOCUMENTATION
// Don't include sub-classes for implied collection joins or subquery joins.	WITHOUT_CLASSIFICATION	0.9999993572284525	WITHOUT_CLASSIFICATION	6.427715475813346E-7	DOCUMENTATION
// Treat explict from elements in sub-queries properly.	WITHOUT_CLASSIFICATION	0.999998959800642	WITHOUT_CLASSIFICATION	1.040199357876121E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// the "root from-element" in correlated subqueries do need this piece	WITHOUT_CLASSIFICATION	0.9999993776774135	WITHOUT_CLASSIFICATION	6.223225863475266E-7	DOCUMENTATION
// Create the FROM element for the target (the elements of the collection).	WITHOUT_CLASSIFICATION	0.9999983987009765	WITHOUT_CLASSIFICATION	1.6012990234132337E-6	DOCUMENTATION
// If the join is implied, then don't include sub-classes on the element.	WITHOUT_CLASSIFICATION	0.9999993855027326	WITHOUT_CLASSIFICATION	6.144972673747048E-7	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977912560564	WITHOUT_CLASSIFICATION	2.208743943668533E-6	DOCUMENTATION
// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.	WITHOUT_CLASSIFICATION	0.9999996411705031	WITHOUT_CLASSIFICATION	3.5882949683025943E-7	DOCUMENTATION
// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.	WITHOUT_CLASSIFICATION	0.9999991246924567	WITHOUT_CLASSIFICATION	8.75307543264091E-7	DOCUMENTATION
// Get the class name of the associated entity.	WITHOUT_CLASSIFICATION	0.9999980319904253	WITHOUT_CLASSIFICATION	1.96800957474379E-6	DOCUMENTATION
//  origin, path, implied, columns, classAlias,	WITHOUT_CLASSIFICATION	0.999998874784404	WITHOUT_CLASSIFICATION	1.1252155959978342E-6	DOCUMENTATION
/*implied*/	WITHOUT_CLASSIFICATION	0.9999271064994876	WITHOUT_CLASSIFICATION	7.289350051243161E-5	DOCUMENTATION
// For implied many-to-many, just add the end join.	WITHOUT_CLASSIFICATION	0.9999987765284876	WITHOUT_CLASSIFICATION	1.223471512407307E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977912560564	WITHOUT_CLASSIFICATION	2.208743943668533E-6	DOCUMENTATION
// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977912560564	WITHOUT_CLASSIFICATION	2.208743943668533E-6	DOCUMENTATION
// the standard SQL function name is current_timestamp...	WITHOUT_CLASSIFICATION	0.9999986518379224	WITHOUT_CLASSIFICATION	1.3481620776067859E-6	DOCUMENTATION
// This causes the factory to instantiate the desired class.	WITHOUT_CLASSIFICATION	0.9999997346387911	WITHOUT_CLASSIFICATION	2.653612089185355E-7	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999890073546397	WITHOUT_CLASSIFICATION	1.0992645360257556E-5	DOCUMENTATION
// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...	WITHOUT_CLASSIFICATION	0.9999989961261779	WITHOUT_CLASSIFICATION	1.0038738220700678E-6	DOCUMENTATION
/*	WITHOUT_CLASSIFICATION	0.9998841672491	WITHOUT_CLASSIFICATION	1.1583275090007302E-4	DOCUMENTATION
/*public Type[] getSqlResultTypes() {	WITHOUT_CLASSIFICATION	0.9999727518887064	WITHOUT_CLASSIFICATION	2.7248111293615183E-5	DOCUMENTATION
// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!	WITHOUT_CLASSIFICATION	0.999999486676009	WITHOUT_CLASSIFICATION	5.13323991009782E-7	DOCUMENTATION
// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)	WITHOUT_CLASSIFICATION	0.9999925867408416	WITHOUT_CLASSIFICATION	7.4132591584707454E-6	DOCUMENTATION
//sqlResultTypeList.addAll( constructorArgumentTypeList );	WITHOUT_CLASSIFICATION	0.9999957595712676	WITHOUT_CLASSIFICATION	4.24042873228413E-6	DOCUMENTATION
// If the data type is not an association type, it could not have been in the FROM clause.	WITHOUT_CLASSIFICATION	0.9999992501208175	WITHOUT_CLASSIFICATION	7.498791824973967E-7	DOCUMENTATION
//sqlResultTypeList.add( type );	WITHOUT_CLASSIFICATION	0.9999924522355215	WITHOUT_CLASSIFICATION	7.547764478459035E-6	DOCUMENTATION
// Always add the type to the return type list.	WITHOUT_CLASSIFICATION	0.9999994019645808	WITHOUT_CLASSIFICATION	5.980354192353036E-7	DOCUMENTATION
// add the fetched entities	WITHOUT_CLASSIFICATION	0.9999979023404048	WITHOUT_CLASSIFICATION	2.097659595278651E-6	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999984979090906	WITHOUT_CLASSIFICATION	1.5020909093520522E-6	DOCUMENTATION
// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999990457091461	WITHOUT_CLASSIFICATION	9.542908539058727E-6	DOCUMENTATION
// If there are any scalars (non-entities) selected, render the select column aliases.	WITHOUT_CLASSIFICATION	0.99999964421304	WITHOUT_CLASSIFICATION	3.557869599736485E-7	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999638168388228	WITHOUT_CLASSIFICATION	3.6183161177132176E-5	DOCUMENTATION
/*ArrayList sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999904772142059	WITHOUT_CLASSIFICATION	9.52278579420279E-6	DOCUMENTATION
//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );	WITHOUT_CLASSIFICATION	0.999997113338206	WITHOUT_CLASSIFICATION	2.886661794087437E-6	DOCUMENTATION
// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999964992621669	WITHOUT_CLASSIFICATION	3.5007378331155003E-6	DOCUMENTATION
//TODO:	WITHOUT_CLASSIFICATION	0.9992483742698763	WITHOUT_CLASSIFICATION	7.516257301237645E-4	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999995401198195	WITHOUT_CLASSIFICATION	4.598801804716556E-7	DOCUMENTATION
// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.	WITHOUT_CLASSIFICATION	0.9999995608814405	WITHOUT_CLASSIFICATION	4.3911855947767374E-7	DOCUMENTATION
// Generate the select expression.	WITHOUT_CLASSIFICATION	0.9999993998696797	WITHOUT_CLASSIFICATION	6.001303203977513E-7	DOCUMENTATION
// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999940545211572	WITHOUT_CLASSIFICATION	5.94547884277023E-6	DOCUMENTATION
// Skip 'DISTINCT' and 'ALL', so we return the first expression node.	WITHOUT_CLASSIFICATION	0.9999992699036809	WITHOUT_CLASSIFICATION	7.300963191060361E-7	DOCUMENTATION
// Create SQL_TOKEN nodes for the columns.	WITHOUT_CLASSIFICATION	0.9999989920185942	WITHOUT_CLASSIFICATION	1.0079814057760445E-6	DOCUMENTATION
// Generate the property select tokens.	WITHOUT_CLASSIFICATION	0.9999992443357512	WITHOUT_CLASSIFICATION	7.556642489798707E-7	DOCUMENTATION
// Get the function name node.	WITHOUT_CLASSIFICATION	0.9999960844557381	WITHOUT_CLASSIFICATION	3.9155442620206285E-6	DOCUMENTATION
// Method expressions in a SELECT should always be considered scalar.	WITHOUT_CLASSIFICATION	0.9999993519767398	WITHOUT_CLASSIFICATION	6.480232602413274E-7	DOCUMENTATION
// If this is 'elements' then create a new FROM element.	WITHOUT_CLASSIFICATION	0.999998541853028	WITHOUT_CLASSIFICATION	1.4581469720948859E-6	DOCUMENTATION
// Not elements(x)	WITHOUT_CLASSIFICATION	0.9999933350147852	WITHOUT_CLASSIFICATION	6.664985214877695E-6	DOCUMENTATION
// Dialect function	WITHOUT_CLASSIFICATION	0.9999959691289966	WITHOUT_CLASSIFICATION	4.030871003472256E-6	DOCUMENTATION
// Collection 'property function'	WITHOUT_CLASSIFICATION	0.9999932049706463	WITHOUT_CLASSIFICATION	6.795029353777908E-6	DOCUMENTATION
// If the constant is an IDENT, figure out what it means...	WITHOUT_CLASSIFICATION	0.9999991082356237	WITHOUT_CLASSIFICATION	8.917643762801103E-7	DOCUMENTATION
// IDENT is a class alias in the FROM.	WITHOUT_CLASSIFICATION	0.9999979922261688	WITHOUT_CLASSIFICATION	2.00777383109441E-6	DOCUMENTATION
// Resolve to an identity column.	WITHOUT_CLASSIFICATION	0.9999987330195783	WITHOUT_CLASSIFICATION	1.2669804216587559E-6	DOCUMENTATION
// Otherwise, it's a literal.	WITHOUT_CLASSIFICATION	0.999997541272219	WITHOUT_CLASSIFICATION	2.4587277811090916E-6	DOCUMENTATION
// the name of an entity class	WITHOUT_CLASSIFICATION	0.9999965580860435	WITHOUT_CLASSIFICATION	3.4419139566293593E-6	DOCUMENTATION
//the class discriminator value	WITHOUT_CLASSIFICATION	0.9999914025517253	WITHOUT_CLASSIFICATION	8.597448274652806E-6	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999932276803305	WITHOUT_CLASSIFICATION	6.772319669590735E-6	DOCUMENTATION
// Add a space before the display text.	WITHOUT_CLASSIFICATION	0.9999985334328875	WITHOUT_CLASSIFICATION	1.4665671126116944E-6	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999971318170525	WITHOUT_CLASSIFICATION	2.8681829474116847E-6	DOCUMENTATION
// child == parent.getFirstChild()	WITHOUT_CLASSIFICATION	0.9999978426889865	WITHOUT_CLASSIFICATION	2.1573110135240556E-6	DOCUMENTATION
// Find or create the WHERE clause	WITHOUT_CLASSIFICATION	0.9999971318170525	WITHOUT_CLASSIFICATION	2.8681829474116847E-6	DOCUMENTATION
// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().	WITHOUT_CLASSIFICATION	0.9999995339726067	WITHOUT_CLASSIFICATION	4.6602739340393907E-7	DOCUMENTATION
// Put the FILTERS node before the HQL condition and theta joins	WITHOUT_CLASSIFICATION	0.9999971314756297	WITHOUT_CLASSIFICATION	2.868524370334776E-6	DOCUMENTATION
// add the current fragment to the FILTERS node	WITHOUT_CLASSIFICATION	0.9999958488010023	WITHOUT_CLASSIFICATION	4.151198997731408E-6	DOCUMENTATION
// Create a new THETA_JOINS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999980908877468	WITHOUT_CLASSIFICATION	1.909112253267363E-6	DOCUMENTATION
// Put the THETA_JOINS node before the HQL condition, after the filters.	WITHOUT_CLASSIFICATION	0.9999991978477818	WITHOUT_CLASSIFICATION	8.021522182001965E-7	DOCUMENTATION
// add the current fragment to the THETA_JOINS node	WITHOUT_CLASSIFICATION	0.9999968528259247	WITHOUT_CLASSIFICATION	3.1471740752273053E-6	DOCUMENTATION
// First, try to get the persister using the given name directly.	WITHOUT_CLASSIFICATION	0.9999977800213282	WITHOUT_CLASSIFICATION	2.219978671844091E-6	DOCUMENTATION
// unable to locate it using this name	WITHOUT_CLASSIFICATION	0.9999982467387108	WITHOUT_CLASSIFICATION	1.7532612891692877E-6	DOCUMENTATION
// If that didn't work, try using the 'import' name.	WITHOUT_CLASSIFICATION	0.9999976187875845	WITHOUT_CLASSIFICATION	2.3812124154958815E-6	DOCUMENTATION
// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)	WITHOUT_CLASSIFICATION	0.9999996740994698	WITHOUT_CLASSIFICATION	3.259005302554942E-7	DOCUMENTATION
// locate the registered function by the given name	WITHOUT_CLASSIFICATION	0.9999993659038123	WITHOUT_CLASSIFICATION	6.340961876987187E-7	DOCUMENTATION
// determine the type of the first argument...	WITHOUT_CLASSIFICATION	0.9999985699186738	WITHOUT_CLASSIFICATION	1.430081326261181E-6	DOCUMENTATION
// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.	WITHOUT_CLASSIFICATION	0.999999549769136	WITHOUT_CLASSIFICATION	4.502308639621027E-7	DOCUMENTATION
// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.	WITHOUT_CLASSIFICATION	0.9999989929839961	WITHOUT_CLASSIFICATION	1.007016003884541E-6	DOCUMENTATION
// Append the text of the current node.	WITHOUT_CLASSIFICATION	0.9999953289790715	WITHOUT_CLASSIFICATION	4.671020928521412E-6	DOCUMENTATION
// If the node has a first child, recurse into the first child.	WITHOUT_CLASSIFICATION	0.9999995886206289	WITHOUT_CLASSIFICATION	4.113793711192141E-7	DOCUMENTATION
// If there is a second child (RHS), recurse into that child.	WITHOUT_CLASSIFICATION	0.9999994264288454	WITHOUT_CLASSIFICATION	5.735711545241397E-7	DOCUMENTATION
// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.	WITHOUT_CLASSIFICATION	0.9999990863204549	WITHOUT_CLASSIFICATION	9.136795450264981E-7	DOCUMENTATION
// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT	WITHOUT_CLASSIFICATION	0.9999997164804156	WITHOUT_CLASSIFICATION	2.835195843950486E-7	DOCUMENTATION
// this is used during SqlGenerator processing	WITHOUT_CLASSIFICATION	0.9999984389886507	WITHOUT_CLASSIFICATION	1.5610113492316336E-6	DOCUMENTATION
// If there is a FROM fragment and the FROM element is an explicit, then add the from part.	WITHOUT_CLASSIFICATION	0.9999987217039221	WITHOUT_CLASSIFICATION	1.2782960779279047E-6	DOCUMENTATION
/*&& StringHelper.isNotEmpty( frag )*/	WITHOUT_CLASSIFICATION	0.9999953096145516	WITHOUT_CLASSIFICATION	4.690385448317999E-6	DOCUMENTATION
// The FROM fragment will probably begin with ', '.  Remove this if it is present.	WITHOUT_CLASSIFICATION	0.9999977323823482	WITHOUT_CLASSIFICATION	2.2676176517653793E-6	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999991961877007	WITHOUT_CLASSIFICATION	8.03812299230971E-7	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.9999966263503443	WITHOUT_CLASSIFICATION	3.3736496557863744E-6	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999995800390382	WITHOUT_CLASSIFICATION	4.199609617047651E-7	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999611931033494	WITHOUT_CLASSIFICATION	3.88068966506256E-5	DOCUMENTATION
//default mode	WITHOUT_CLASSIFICATION	0.9999635377562447	WITHOUT_CLASSIFICATION	3.6462243755342744E-5	DOCUMENTATION
//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999918084914685	WITHOUT_CLASSIFICATION	8.191508531508387E-6	DOCUMENTATION
//reset the dotcount (but not the path) //after reset!	WITHOUT_CLASSIFICATION	0.9999891857556684	WITHOUT_CLASSIFICATION	1.0814244331631514E-5	DOCUMENTATION
//after reset!	WITHOUT_CLASSIFICATION	0.9999416012027758	WITHOUT_CLASSIFICATION	5.8398797224284864E-5	DOCUMENTATION
// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query	WITHOUT_CLASSIFICATION	0.9999992629346607	WITHOUT_CLASSIFICATION	7.37065339237064E-7	DOCUMENTATION
// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22	WITHOUT_CLASSIFICATION	0.9999966984772997	WITHOUT_CLASSIFICATION	3.301522700394628E-6	DOCUMENTATION
// dotcount>=2	WITHOUT_CLASSIFICATION	0.9999865724724528	WITHOUT_CLASSIFICATION	1.3427527547189134E-5	DOCUMENTATION
// Do the corresponding RHS	WITHOUT_CLASSIFICATION	0.9999966989273705	WITHOUT_CLASSIFICATION	3.301072629611557E-6	DOCUMENTATION
//if its "id"	WITHOUT_CLASSIFICATION	0.9999550057328996	WITHOUT_CLASSIFICATION	4.4994267100397514E-5	DOCUMENTATION
//or its the id property name	WITHOUT_CLASSIFICATION	0.99998970034316	WITHOUT_CLASSIFICATION	1.0299656839994834E-5	DOCUMENTATION
//join = q.createJoinFragment(useThetaStyleJoin);	WITHOUT_CLASSIFICATION	0.9999922822702914	WITHOUT_CLASSIFICATION	7.717729708666822E-6	DOCUMENTATION
//important!!	WITHOUT_CLASSIFICATION	0.9999251823959101	WITHOUT_CLASSIFICATION	7.481760408984539E-5	DOCUMENTATION
//String[] keyCols = collPersister.getKeyColumnNames();	WITHOUT_CLASSIFICATION	0.9999944135848247	WITHOUT_CLASSIFICATION	5.586415175369319E-6	DOCUMENTATION
// an association	WITHOUT_CLASSIFICATION	0.9999918578645459	WITHOUT_CLASSIFICATION	8.142135454130674E-6	DOCUMENTATION
//allow index() function:	WITHOUT_CLASSIFICATION	0.9999819497084995	WITHOUT_CLASSIFICATION	1.8050291500471512E-5	DOCUMENTATION
// here assume SQLServer2005 using snapshot isolation, which does not have this problem	WITHOUT_CLASSIFICATION	0.999999129856604	WITHOUT_CLASSIFICATION	8.7014339599855E-7	DOCUMENTATION
// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.	WITHOUT_CLASSIFICATION	0.9999995800390382	WITHOUT_CLASSIFICATION	4.199609617047651E-7	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.999894490012883	WITHOUT_CLASSIFICATION	1.055099871170645E-4	DOCUMENTATION
// collections of values	WITHOUT_CLASSIFICATION	0.9999982217968731	WITHOUT_CLASSIFICATION	1.7782031267976902E-6	DOCUMENTATION
//opening paren in new Foo ( ... )	WITHOUT_CLASSIFICATION	0.9999365447286975	WITHOUT_CLASSIFICATION	6.345527130255083E-5	DOCUMENTATION
//if we are inside a new Result(), but not inside a nested function	WITHOUT_CLASSIFICATION	0.9999953952296915	WITHOUT_CLASSIFICATION	4.604770308553586E-6	DOCUMENTATION
//special case	WITHOUT_CLASSIFICATION	0.9999758944892189	WITHOUT_CLASSIFICATION	2.4105510781196304E-5	DOCUMENTATION
// the name of an SQL function	WITHOUT_CLASSIFICATION	0.9999926089594823	WITHOUT_CLASSIFICATION	7.391040517597951E-6	DOCUMENTATION
//null child could occur for no from clause in a filter	WITHOUT_CLASSIFICATION	0.9999834896639561	WITHOUT_CLASSIFICATION	1.6510336043912514E-5	DOCUMENTATION
//this is basically a copy/paste of OrderByParser ... might be worth refactoring	WITHOUT_CLASSIFICATION	0.9999949011464999	WITHOUT_CLASSIFICATION	5.0988534999952065E-6	DOCUMENTATION
// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p	WITHOUT_CLASSIFICATION	0.99999704054643	WITHOUT_CLASSIFICATION	2.9594535700091337E-6	DOCUMENTATION
// return aliases not supported in classic translator!	WITHOUT_CLASSIFICATION	0.9999978822414447	WITHOUT_CLASSIFICATION	2.1177585552982373E-6	DOCUMENTATION
//register collection role	WITHOUT_CLASSIFICATION	0.9999850080421306	WITHOUT_CLASSIFICATION	1.4991957869278235E-5	DOCUMENTATION
// The keyword used to specify an identity column, if identity column key generation is supported.	WITHOUT_CLASSIFICATION	0.9999997575698785	WITHOUT_CLASSIFICATION	2.4243012146018236E-7	DOCUMENTATION
//.getElementPropertyMapping();	WITHOUT_CLASSIFICATION	0.9999690011407503	WITHOUT_CLASSIFICATION	3.099885924981221E-5	DOCUMENTATION
//crossJoins.add(name);	WITHOUT_CLASSIFICATION	0.9999433483182604	WITHOUT_CLASSIFICATION	5.66516817397014E-5	DOCUMENTATION
//ie no select clause in HQL	WITHOUT_CLASSIFICATION	0.9999881176475364	WITHOUT_CLASSIFICATION	1.1882352463696685E-5	DOCUMENTATION
// initialize the Set of queried identifier spaces (ie. tables)	WITHOUT_CLASSIFICATION	0.9999996494127906	WITHOUT_CLASSIFICATION	3.5058720927699995E-7	DOCUMENTATION
//ie. no select clause	WITHOUT_CLASSIFICATION	0.9999868847054937	WITHOUT_CLASSIFICATION	1.3115294506409505E-5	DOCUMENTATION
//there _was_ a select clause	WITHOUT_CLASSIFICATION	0.9999748909774708	WITHOUT_CLASSIFICATION	2.5109022529202113E-5	DOCUMENTATION
// return the concrete type, or the underlying type if a concrete type // was not specified	WITHOUT_CLASSIFICATION	0.9999991077738803	WITHOUT_CLASSIFICATION	8.922261196102747E-7	DOCUMENTATION
//many-to-many	WITHOUT_CLASSIFICATION	0.999894490012883	WITHOUT_CLASSIFICATION	1.055099871170645E-4	DOCUMENTATION
//q.addCollection(collectionName, collectionRole);	WITHOUT_CLASSIFICATION	0.9999863373343578	WITHOUT_CLASSIFICATION	1.3662665642206736E-5	DOCUMENTATION
// classic parser does not support bulk manipulation statements	WITHOUT_CLASSIFICATION	0.9999985517178888	WITHOUT_CLASSIFICATION	1.4482821112893098E-6	DOCUMENTATION
// can't cache this stuff either (per-invocation)	WITHOUT_CLASSIFICATION	0.999998954875365	WITHOUT_CLASSIFICATION	1.045124634857457E-6	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999997651931612	WITHOUT_CLASSIFICATION	2.3480683868484725E-7	DOCUMENTATION
// This is the legacy behaviour for HQL queries...	WITHOUT_CLASSIFICATION	0.9999987702687118	WITHOUT_CLASSIFICATION	1.2297312882391098E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999836883087755	WITHOUT_CLASSIFICATION	1.6311691224414905E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999836883087755	WITHOUT_CLASSIFICATION	1.6311691224414905E-5	DOCUMENTATION
// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999987555202995	WITHOUT_CLASSIFICATION	1.2444797005323659E-6	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999836883087755	WITHOUT_CLASSIFICATION	1.6311691224414905E-5	DOCUMENTATION
// not known!	WITHOUT_CLASSIFICATION	0.9999836883087755	WITHOUT_CLASSIFICATION	1.6311691224414905E-5	DOCUMENTATION
//Need this, since join condition can appear inside parens!	WITHOUT_CLASSIFICATION	0.9999891359510219	WITHOUT_CLASSIFICATION	1.086404897799699E-5	DOCUMENTATION
//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression	WITHOUT_CLASSIFICATION	0.9999974427869718	WITHOUT_CLASSIFICATION	2.5572130281843987E-6	DOCUMENTATION
//expressionTerminators.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999990009815217	WITHOUT_CLASSIFICATION	9.990184782835953E-7	DOCUMENTATION
//expressionOpeners.add(","); // deliberately excluded	WITHOUT_CLASSIFICATION	0.9999989781915176	WITHOUT_CLASSIFICATION	1.0218084824649086E-6	DOCUMENTATION
// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999990190676791	WITHOUT_CLASSIFICATION	9.80932320973873E-7	DOCUMENTATION
// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)	WITHOUT_CLASSIFICATION	0.9999971550190564	WITHOUT_CLASSIFICATION	2.8449809435265977E-6	DOCUMENTATION
//Inside a BETWEEN ... AND ... expression	WITHOUT_CLASSIFICATION	0.9999892123526352	WITHOUT_CLASSIFICATION	1.0787647364860992E-5	DOCUMENTATION
//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean	WITHOUT_CLASSIFICATION	0.9999988091061695	WITHOUT_CLASSIFICATION	1.190893830541417E-6	DOCUMENTATION
//ie. a many-to-many	WITHOUT_CLASSIFICATION	0.9999777182762779	WITHOUT_CLASSIFICATION	2.2281723722155646E-5	DOCUMENTATION
//Cope with [,]	WITHOUT_CLASSIFICATION	0.9999628603151416	WITHOUT_CLASSIFICATION	3.7139684858432265E-5	DOCUMENTATION
//Cope with a continued path expression (ie. ].baz)	WITHOUT_CLASSIFICATION	0.9999955501045279	WITHOUT_CLASSIFICATION	4.449895472087518E-6	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.999947096975847	WITHOUT_CLASSIFICATION	5.2903024152871324E-5	DOCUMENTATION
//Cope with a subselect	WITHOUT_CLASSIFICATION	0.9999849458387212	WITHOUT_CLASSIFICATION	1.5054161278732092E-5	DOCUMENTATION
//Cope with special cases of AND, NOT, ()	WITHOUT_CLASSIFICATION	0.9999896041809279	WITHOUT_CLASSIFICATION	1.0395819072163858E-5	DOCUMENTATION
//Close extra brackets we opened	WITHOUT_CLASSIFICATION	0.999991530280526	WITHOUT_CLASSIFICATION	8.469719473919901E-6	DOCUMENTATION
//take note when this is a boolean expression	WITHOUT_CLASSIFICATION	0.9999958789537623	WITHOUT_CLASSIFICATION	4.121046237614952E-6	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999977611368219	WITHOUT_CLASSIFICATION	2.238863178130232E-6	DOCUMENTATION
//process a token, mapping OO path expressions to SQL expressions	WITHOUT_CLASSIFICATION	0.9999955307604623	WITHOUT_CLASSIFICATION	4.469239537772028E-6	DOCUMENTATION
//Open any extra brackets we might need.	WITHOUT_CLASSIFICATION	0.9999848536791006	WITHOUT_CLASSIFICATION	1.5146320899432019E-5	DOCUMENTATION
//Cope with special cases of AND, NOT, )	WITHOUT_CLASSIFICATION	0.9999901791500111	WITHOUT_CLASSIFICATION	9.82084998883911E-6	DOCUMENTATION
// the next one up must also be	WITHOUT_CLASSIFICATION	0.9999972796276212	WITHOUT_CLASSIFICATION	2.720372378704816E-6	DOCUMENTATION
// Add any joins	WITHOUT_CLASSIFICATION	0.9999937069210746	WITHOUT_CLASSIFICATION	6.293078925498415E-6	DOCUMENTATION
// assumes that types are all of span 1	WITHOUT_CLASSIFICATION	0.9999977611368219	WITHOUT_CLASSIFICATION	2.238863178130232E-6	DOCUMENTATION
//named query parameter	WITHOUT_CLASSIFICATION	0.9999611931033494	WITHOUT_CLASSIFICATION	3.88068966506256E-5	DOCUMENTATION
//path expression	WITHOUT_CLASSIFICATION	0.9999910355527387	WITHOUT_CLASSIFICATION	8.964447261246486E-6	DOCUMENTATION
// saves / updates don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999994577831076	WITHOUT_CLASSIFICATION	5.42216892412627E-7	DOCUMENTATION
// persists don't cascade to uninitialized collections	WITHOUT_CLASSIFICATION	0.9999993842603281	WITHOUT_CLASSIFICATION	6.157396719631208E-7	DOCUMENTATION
//anything else	WITHOUT_CLASSIFICATION	0.9999797552808983	WITHOUT_CLASSIFICATION	2.0244719101638538E-5	DOCUMENTATION
// the path expression continues after a ]	WITHOUT_CLASSIFICATION	0.9999991970212493	WITHOUT_CLASSIFICATION	8.029787508206057E-7	DOCUMENTATION
// careful with this!	WITHOUT_CLASSIFICATION	0.9999955903253719	WITHOUT_CLASSIFICATION	4.4096746281647794E-6	DOCUMENTATION
// the path expression ends at the ]	WITHOUT_CLASSIFICATION	0.9999990251909175	WITHOUT_CLASSIFICATION	9.74809082442651E-7	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999949508697517	WITHOUT_CLASSIFICATION	5.049130248434528E-6	DOCUMENTATION
//NOTICE: no " or . since they are part of (compound) identifiers	WITHOUT_CLASSIFICATION	0.9999881240381069	WITHOUT_CLASSIFICATION	1.1875961893112493E-5	DOCUMENTATION
//cannot instantiate	WITHOUT_CLASSIFICATION	0.9999882975540597	WITHOUT_CLASSIFICATION	1.1702445940283566E-5	DOCUMENTATION
// start by looking for HQL keywords...	WITHOUT_CLASSIFICATION	0.9999983872335909	WITHOUT_CLASSIFICATION	1.6127664090592898E-6	DOCUMENTATION
// inner joins can be abbreviated to 'join'	WITHOUT_CLASSIFICATION	0.9999983134839125	WITHOUT_CLASSIFICATION	1.6865160874541891E-6	DOCUMENTATION
// 'outer' is optional and is ignored	WITHOUT_CLASSIFICATION	0.9999970555221193	WITHOUT_CLASSIFICATION	2.944477880821287E-6	DOCUMENTATION
// now anything that is not a HQL keyword	WITHOUT_CLASSIFICATION	0.9999972458180793	WITHOUT_CLASSIFICATION	2.7541819208416313E-6	DOCUMENTATION
// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions	WITHOUT_CLASSIFICATION	0.9999997339732247	WITHOUT_CLASSIFICATION	2.6602677520088584E-7	DOCUMENTATION
// treat it as a classname	WITHOUT_CLASSIFICATION	0.9999961124248428	WITHOUT_CLASSIFICATION	3.887575157193685E-6	DOCUMENTATION
// treat it as a path expression	WITHOUT_CLASSIFICATION	0.9999982310611153	WITHOUT_CLASSIFICATION	1.7689388847615325E-6	DOCUMENTATION
// starts with the name of a mapped class (new style)	WITHOUT_CLASSIFICATION	0.9999992130155014	WITHOUT_CLASSIFICATION	7.869844984843789E-7	DOCUMENTATION
// starts with a path expression (new style)	WITHOUT_CLASSIFICATION	0.9999991071995774	WITHOUT_CLASSIFICATION	8.928004226488688E-7	DOCUMENTATION
//allow ODMG OQL style: from Person p, p.cars c	WITHOUT_CLASSIFICATION	0.999987138309012	WITHOUT_CLASSIFICATION	1.2861690988099586E-5	DOCUMENTATION
//handle quoted strings	WITHOUT_CLASSIFICATION	0.9999923224602504	WITHOUT_CLASSIFICATION	7.67753974956327E-6	DOCUMENTATION
// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity	WITHOUT_CLASSIFICATION	0.9999995085071773	WITHOUT_CLASSIFICATION	4.914928227485346E-7	DOCUMENTATION
// "finish off" the join	WITHOUT_CLASSIFICATION	0.9999949508697517	WITHOUT_CLASSIFICATION	5.049130248434528E-6	DOCUMENTATION
//ignore whitespace	WITHOUT_CLASSIFICATION	0.9999903115244192	WITHOUT_CLASSIFICATION	9.688475580859886E-6	DOCUMENTATION
//do replacements	WITHOUT_CLASSIFICATION	0.9999854069237136	WITHOUT_CLASSIFICATION	1.4593076286254246E-5	DOCUMENTATION
//handle HQL2 collection syntax	WITHOUT_CLASSIFICATION	0.9999929829558879	WITHOUT_CLASSIFICATION	7.017044112151296E-6	DOCUMENTATION
// uuid.hex is deprecated	WITHOUT_CLASSIFICATION	0.9999976766421239	WITHOUT_CLASSIFICATION	2.3233578760716727E-6	DOCUMENTATION
// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999985280148431	WITHOUT_CLASSIFICATION	1.471985156945785E-6	DOCUMENTATION
//hilo params	WITHOUT_CLASSIFICATION	0.999976028855953	WITHOUT_CLASSIFICATION	2.3971144046935704E-5	DOCUMENTATION
//sql = query;	WITHOUT_CLASSIFICATION	0.9999620367711141	WITHOUT_CLASSIFICATION	3.796322888598321E-5	DOCUMENTATION
// performance opt	WITHOUT_CLASSIFICATION	0.9999916696673943	WITHOUT_CLASSIFICATION	8.330332605709672E-6	DOCUMENTATION
//sql = update;	WITHOUT_CLASSIFICATION	0.9999780991261811	WITHOUT_CLASSIFICATION	2.190087381897895E-5	DOCUMENTATION
//hilo config	WITHOUT_CLASSIFICATION	0.9999679196862166	WITHOUT_CLASSIFICATION	3.208031378338251E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999990753721568	WITHOUT_CLASSIFICATION	9.24627843199845E-7	DOCUMENTATION
// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(	WITHOUT_CLASSIFICATION	0.9999996870724703	WITHOUT_CLASSIFICATION	3.1292752965334443E-7	DOCUMENTATION
//abort the save (the object is already saved by a circular cascade)	WITHOUT_CLASSIFICATION	0.9999946484536296	WITHOUT_CLASSIFICATION	5.351546370399281E-6	DOCUMENTATION
//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");	WITHOUT_CLASSIFICATION	0.9999985322372212	WITHOUT_CLASSIFICATION	1.4677627787103585E-6	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999996347386094	WITHOUT_CLASSIFICATION	3.65261390594226E-6	DOCUMENTATION
//do nothing to avoid a lazy property initialization	WITHOUT_CLASSIFICATION	0.9999959653741453	WITHOUT_CLASSIFICATION	4.034625854769218E-6	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999896806750741	WITHOUT_CLASSIFICATION	1.0319324925897271E-5	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999990753721568	WITHOUT_CLASSIFICATION	9.24627843199845E-7	DOCUMENTATION
// do nothing until we hit the rsult set containing the generated id	WITHOUT_CLASSIFICATION	0.9999992221920075	WITHOUT_CLASSIFICATION	7.778079924777516E-7	DOCUMENTATION
/* COLUMN and TABLE should be renamed but it would break the public API */	WITHOUT_CLASSIFICATION	0.9999897867298706	WITHOUT_CLASSIFICATION	1.0213270129502346E-5	DOCUMENTATION
// Loaded entity instances, by EntityKey	WITHOUT_CLASSIFICATION	0.999998128477855	WITHOUT_CLASSIFICATION	1.8715221449481232E-6	DOCUMENTATION
// if the given name is un-qualified we may neen to qualify it	WITHOUT_CLASSIFICATION	0.9999984556030046	WITHOUT_CLASSIFICATION	1.544396995355836E-6	DOCUMENTATION
// the default...	WITHOUT_CLASSIFICATION	0.9999955203260181	WITHOUT_CLASSIFICATION	4.479673981811928E-6	DOCUMENTATION
// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...	WITHOUT_CLASSIFICATION	0.9999996533927707	WITHOUT_CLASSIFICATION	3.466072292692053E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999996347386094	WITHOUT_CLASSIFICATION	3.65261390594226E-6	DOCUMENTATION
// Identity map of CollectionEntry instances, by the collection wrapper	WITHOUT_CLASSIFICATION	0.9999993296721258	WITHOUT_CLASSIFICATION	6.703278742139279E-7	DOCUMENTATION
// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996769746213	WITHOUT_CLASSIFICATION	3.230253787096756E-6	DOCUMENTATION
// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972633720972	WITHOUT_CLASSIFICATION	2.7366279027266285E-6	DOCUMENTATION
// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999972564492671	WITHOUT_CLASSIFICATION	2.743550732932286E-6	DOCUMENTATION
// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999967021911683	WITHOUT_CLASSIFICATION	3.2978088315931136E-6	DOCUMENTATION
// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977379592645	WITHOUT_CLASSIFICATION	2.262040735438154E-6	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999976587627851	WITHOUT_CLASSIFICATION	2.3412372148006433E-6	DOCUMENTATION
// prepare and execute the insert	WITHOUT_CLASSIFICATION	0.9999976587627851	WITHOUT_CLASSIFICATION	2.3412372148006433E-6	DOCUMENTATION
//fetch the generated id in a separate query	WITHOUT_CLASSIFICATION	0.9999948898967361	WITHOUT_CLASSIFICATION	5.110103263885198E-6	DOCUMENTATION
// we just hit the last position	WITHOUT_CLASSIFICATION	0.9999985082082717	WITHOUT_CLASSIFICATION	1.4917917282476558E-6	DOCUMENTATION
// scroll ahead	WITHOUT_CLASSIFICATION	0.9999936108062162	WITHOUT_CLASSIFICATION	6.389193783783764E-6	DOCUMENTATION
// scroll backward	WITHOUT_CLASSIFICATION	0.9999885322277203	WITHOUT_CLASSIFICATION	1.146777227972959E-5	DOCUMENTATION
// we have not yet hit the last result...	WITHOUT_CLASSIFICATION	0.9999987940187216	WITHOUT_CLASSIFICATION	1.2059812784287978E-6	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999862630170522	WITHOUT_CLASSIFICATION	1.3736982947964832E-5	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999818413990916	WITHOUT_CLASSIFICATION	1.815860090838777E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999902879035746	WITHOUT_CLASSIFICATION	9.71209642542007E-6	DOCUMENTATION
// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.	WITHOUT_CLASSIFICATION	0.999999635109891	WITHOUT_CLASSIFICATION	3.648901090833973E-7	DOCUMENTATION
// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999938595517619	WITHOUT_CLASSIFICATION	6.140448238014869E-6	DOCUMENTATION
// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999862630170522	WITHOUT_CLASSIFICATION	1.3736982947964832E-5	DOCUMENTATION
// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999818413990916	WITHOUT_CLASSIFICATION	1.815860090838777E-5	DOCUMENTATION
// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999902879035746	WITHOUT_CLASSIFICATION	9.71209642542007E-6	DOCUMENTATION
// Caches	WITHOUT_CLASSIFICATION	0.9999934980490452	WITHOUT_CLASSIFICATION	6.501950954736732E-6	DOCUMENTATION
//Generators:	WITHOUT_CLASSIFICATION	0.9999368040137806	WITHOUT_CLASSIFICATION	6.319598621937969E-5	DOCUMENTATION
// cache region is defined by the root-class in the hierarchy...	WITHOUT_CLASSIFICATION	0.9999997510318227	WITHOUT_CLASSIFICATION	2.489681773914428E-7	DOCUMENTATION
//check if the detached object being merged is the parent	WITHOUT_CLASSIFICATION	0.9999961252610247	WITHOUT_CLASSIFICATION	3.874738975368699E-6	DOCUMENTATION
// after *all* persisters and named queries are registered	WITHOUT_CLASSIFICATION	0.9999971162927445	WITHOUT_CLASSIFICATION	2.8837072556177405E-6	DOCUMENTATION
// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 	WITHOUT_CLASSIFICATION	0.9999994081958901	WITHOUT_CLASSIFICATION	5.918041099802683E-7	DOCUMENTATION
//JNDI + Serialization:	WITHOUT_CLASSIFICATION	0.9999752745289118	WITHOUT_CLASSIFICATION	2.4725471088137417E-5	DOCUMENTATION
//checking for named queries	WITHOUT_CLASSIFICATION	0.9999783408353905	WITHOUT_CLASSIFICATION	2.165916460952882E-5	DOCUMENTATION
//stats	WITHOUT_CLASSIFICATION	0.9999280537109678	WITHOUT_CLASSIFICATION	7.194628903219957E-5	DOCUMENTATION
// EntityNotFoundDelegate	WITHOUT_CLASSIFICATION	0.9999958197038457	WITHOUT_CLASSIFICATION	4.180296154340461E-6	DOCUMENTATION
// Check named HQL queries	WITHOUT_CLASSIFICATION	0.9999954087350067	WITHOUT_CLASSIFICATION	4.591264993395404E-6	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999961452549398	WITHOUT_CLASSIFICATION	3.8547450601791594E-6	DOCUMENTATION
//prevents this session from adding things to cache	WITHOUT_CLASSIFICATION	0.9999965293913581	WITHOUT_CLASSIFICATION	3.4706086419288256E-6	DOCUMENTATION
// from javax.naming.Referenceable	WITHOUT_CLASSIFICATION	0.9999880111559689	WITHOUT_CLASSIFICATION	1.198884403116027E-5	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999986220824558	WITHOUT_CLASSIFICATION	1.377917544107141E-6	DOCUMENTATION
//for a dynamic-class	WITHOUT_CLASSIFICATION	0.9999687535843419	WITHOUT_CLASSIFICATION	3.124641565817622E-5	DOCUMENTATION
//test this entity to see if we must query it	WITHOUT_CLASSIFICATION	0.9999934916757118	WITHOUT_CLASSIFICATION	6.508324288240403E-6	DOCUMENTATION
//NOTE EARLY EXIT	WITHOUT_CLASSIFICATION	0.9998647364281273	WITHOUT_CLASSIFICATION	1.3526357187260038E-4	DOCUMENTATION
// for backward-compatability	WITHOUT_CLASSIFICATION	0.9999960033237951	WITHOUT_CLASSIFICATION	3.996676204845873E-6	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999971403927258	WITHOUT_CLASSIFICATION	2.859607274216005E-6	DOCUMENTATION
//to stop the class from being unloaded	WITHOUT_CLASSIFICATION	0.9999970702681994	WITHOUT_CLASSIFICATION	2.9297318005668864E-6	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999896399189091	WITHOUT_CLASSIFICATION	1.0360081090990492E-5	DOCUMENTATION
//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization	WITHOUT_CLASSIFICATION	0.9999969118808965	WITHOUT_CLASSIFICATION	3.0881191034701855E-6	DOCUMENTATION
// Make sure this is a defined parameter and check the incoming value type	WITHOUT_CLASSIFICATION	0.9999995345077366	WITHOUT_CLASSIFICATION	4.6549226344214005E-7	DOCUMENTATION
// for each of the defined parameters, make sure its value // has been set	WITHOUT_CLASSIFICATION	0.9999994871760814	WITHOUT_CLASSIFICATION	5.128239185742436E-7	DOCUMENTATION
//we never need to apply locks to the SQL	WITHOUT_CLASSIFICATION	0.9999953693885656	WITHOUT_CLASSIFICATION	4.630611434323568E-6	DOCUMENTATION
// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999930737046449	WITHOUT_CLASSIFICATION	6.9262953551091345E-6	DOCUMENTATION
// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999870537245202	WITHOUT_CLASSIFICATION	1.2946275479695558E-5	DOCUMENTATION
// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.	WITHOUT_CLASSIFICATION	0.9999903215042953	WITHOUT_CLASSIFICATION	9.67849570452807E-6	DOCUMENTATION
// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999900806483818	WITHOUT_CLASSIFICATION	9.91935161820552E-6	DOCUMENTATION
// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999890926970911	WITHOUT_CLASSIFICATION	1.0907302908926634E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999850704302695	WITHOUT_CLASSIFICATION	1.4929569730524726E-5	DOCUMENTATION
//final boolean forceCacheRefresh,	WITHOUT_CLASSIFICATION	0.9999850704302695	WITHOUT_CLASSIFICATION	1.4929569730524726E-5	DOCUMENTATION
// first, try to load it from the temp PC associated to this SS	WITHOUT_CLASSIFICATION	0.9999996702191786	WITHOUT_CLASSIFICATION	3.297808214042117E-7	DOCUMENTATION
// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy	WITHOUT_CLASSIFICATION	0.9999997399242394	WITHOUT_CLASSIFICATION	2.600757605138315E-7	DOCUMENTATION
// otherwise immediately materialize it	WITHOUT_CLASSIFICATION	0.9999983499326657	WITHOUT_CLASSIFICATION	1.6500673342788246E-6	DOCUMENTATION
/////////////////////////////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996996145723421	WITHOUT_CLASSIFICATION	3.0038542765793057E-4	DOCUMENTATION
// no auto-flushing to support in stateless session	WITHOUT_CLASSIFICATION	0.9999981505288109	WITHOUT_CLASSIFICATION	1.8494711890419021E-6	DOCUMENTATION
//after setting values to object, entityMode	WITHOUT_CLASSIFICATION	0.9999961115955965	WITHOUT_CLASSIFICATION	3.888404403413615E-6	DOCUMENTATION
//for EJB3	WITHOUT_CLASSIFICATION	0.9998841780754382	WITHOUT_CLASSIFICATION	1.158219245617945E-4	DOCUMENTATION
// just ignore	WITHOUT_CLASSIFICATION	0.9999956578198311	WITHOUT_CLASSIFICATION	4.342180168835582E-6	DOCUMENTATION
// do a check	WITHOUT_CLASSIFICATION	0.9999906947683925	WITHOUT_CLASSIFICATION	9.305231607505166E-6	DOCUMENTATION
// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979917624398	WITHOUT_CLASSIFICATION	2.0082375602539832E-6	DOCUMENTATION
// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977781231071	WITHOUT_CLASSIFICATION	2.2218768929076186E-6	DOCUMENTATION
// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983696374057	WITHOUT_CLASSIFICATION	1.6303625941684833E-6	DOCUMENTATION
// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999966206004836	WITHOUT_CLASSIFICATION	3.379399516366251E-6	DOCUMENTATION
// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976990540024	WITHOUT_CLASSIFICATION	2.300945997622936E-6	DOCUMENTATION
// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999977031015614	WITHOUT_CLASSIFICATION	2.296898438538245E-6	DOCUMENTATION
// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999980368269635	WITHOUT_CLASSIFICATION	1.963173036513176E-6	DOCUMENTATION
// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999982507965787	WITHOUT_CLASSIFICATION	1.7492034213397734E-6	DOCUMENTATION
// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990190641984	WITHOUT_CLASSIFICATION	9.80935801585677E-7	DOCUMENTATION
// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976936747098	WITHOUT_CLASSIFICATION	2.3063252901693747E-6	DOCUMENTATION
// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999978365196438	WITHOUT_CLASSIFICATION	2.16348035613622E-6	DOCUMENTATION
// do not auto-flush while outside a transaction	WITHOUT_CLASSIFICATION	0.9999987348416466	WITHOUT_CLASSIFICATION	1.2651583533887705E-6	DOCUMENTATION
// this is an internal error of some sort...	WITHOUT_CLASSIFICATION	0.9999965813895815	WITHOUT_CLASSIFICATION	3.4186104185772704E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999974739455013	WITHOUT_CLASSIFICATION	2.5260544986870112E-6	DOCUMENTATION
//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete	WITHOUT_CLASSIFICATION	0.9999922690251417	WITHOUT_CLASSIFICATION	7.730974858281736E-6	DOCUMENTATION
// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query	WITHOUT_CLASSIFICATION	0.9999994147161105	WITHOUT_CLASSIFICATION	5.852838894274046E-7	DOCUMENTATION
// not for internal use:	WITHOUT_CLASSIFICATION	0.9999950487954077	WITHOUT_CLASSIFICATION	4.951204592347354E-6	DOCUMENTATION
// otherwise, we only need to flush if there are in-memory changes // to the queried tables	WITHOUT_CLASSIFICATION	0.9999995879069258	WITHOUT_CLASSIFICATION	4.120930741864483E-7	DOCUMENTATION
// might need to run a different filter entirely after the flush // because the collection role may have changed	WITHOUT_CLASSIFICATION	0.9999929414269669	WITHOUT_CLASSIFICATION	7.058573033113443E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999974739455013	WITHOUT_CLASSIFICATION	2.5260544986870112E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999974739455013	WITHOUT_CLASSIFICATION	2.5260544986870112E-6	DOCUMENTATION
//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted	WITHOUT_CLASSIFICATION	0.9999933027460511	WITHOUT_CLASSIFICATION	6.697253948934061E-6	DOCUMENTATION
// basically just an adapted copy of find(CriteriaImpl)	WITHOUT_CLASSIFICATION	0.9999986978167408	WITHOUT_CLASSIFICATION	1.3021832592879221E-6	DOCUMENTATION
// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999994460951604	WITHOUT_CLASSIFICATION	5.539048395137055E-7	DOCUMENTATION
// nothing to do in a stateful session	WITHOUT_CLASSIFICATION	0.9999981115012132	WITHOUT_CLASSIFICATION	1.888498786820766E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999952939988079	WITHOUT_CLASSIFICATION	4.706001192130379E-6	DOCUMENTATION
// ignore this error for now	WITHOUT_CLASSIFICATION	0.9999971403927258	WITHOUT_CLASSIFICATION	2.859607274216005E-6	DOCUMENTATION
// we need to writeObject() on this since interceptor is user defined	WITHOUT_CLASSIFICATION	0.9999977026747502	WITHOUT_CLASSIFICATION	2.2973252497156785E-6	DOCUMENTATION
// the old-time stand-by...	WITHOUT_CLASSIFICATION	0.9999986108764306	WITHOUT_CLASSIFICATION	1.3891235694186702E-6	DOCUMENTATION
// parameter bind values...	WITHOUT_CLASSIFICATION	0.9999972564749571	WITHOUT_CLASSIFICATION	2.7435250428514406E-6	DOCUMENTATION
// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999942368872519	WITHOUT_CLASSIFICATION	5.763112748196341E-6	DOCUMENTATION
// prepend value and type list with null for any positions before the wanted position.	WITHOUT_CLASSIFICATION	0.9999993135041763	WITHOUT_CLASSIFICATION	6.864958237897855E-7	DOCUMENTATION
// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999954875623568	WITHOUT_CLASSIFICATION	4.512437643201894E-6	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999901010667094	WITHOUT_CLASSIFICATION	9.898933290592408E-6	DOCUMENTATION
// we have a CGLIB enhanced entity	WITHOUT_CLASSIFICATION	0.9999901010667094	WITHOUT_CLASSIFICATION	9.898933290592408E-6	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999887780453699	WITHOUT_CLASSIFICATION	1.122195463002015E-5	DOCUMENTATION
// we have a Javassist enhanced entity	WITHOUT_CLASSIFICATION	0.9999887780453699	WITHOUT_CLASSIFICATION	1.122195463002015E-5	DOCUMENTATION
// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999879932808272	WITHOUT_CLASSIFICATION	1.200671917284304E-5	DOCUMENTATION
// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999901443810122	WITHOUT_CLASSIFICATION	9.855618987798819E-6	DOCUMENTATION
//let's assume that there is only one lazy fetch group, for now!	WITHOUT_CLASSIFICATION	0.9999922555362349	WITHOUT_CLASSIFICATION	7.744463765014929E-6	DOCUMENTATION
// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999869276982226	WITHOUT_CLASSIFICATION	1.3072301777353492E-5	DOCUMENTATION
// should *not* need to grow beyond the size of the total number of columns in the rs	WITHOUT_CLASSIFICATION	0.9999996167448255	WITHOUT_CLASSIFICATION	3.8325517453260497E-7	DOCUMENTATION
// should probably no-op commit/rollback here, at least in JTA scenarios	WITHOUT_CLASSIFICATION	0.9999984117332933	WITHOUT_CLASSIFICATION	1.5882667066375202E-6	DOCUMENTATION
// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999983979840433	WITHOUT_CLASSIFICATION	1.6020159566362447E-6	DOCUMENTATION
// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999979482584835	WITHOUT_CLASSIFICATION	2.0517415164168686E-6	DOCUMENTATION
// explicitly perform no checking...	WITHOUT_CLASSIFICATION	0.9999984724148737	WITHOUT_CLASSIFICATION	1.52758512627526E-6	DOCUMENTATION
// used from testsuite	WITHOUT_CLASSIFICATION	0.9999961425616257	WITHOUT_CLASSIFICATION	3.85743837426568E-6	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.999993050673026	WITHOUT_CLASSIFICATION	6.949326974043208E-6	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998981745719934	WITHOUT_CLASSIFICATION	1.018254280066226E-4	DOCUMENTATION
// register synch; stats.connect()	WITHOUT_CLASSIFICATION	0.9999978582052724	WITHOUT_CLASSIFICATION	2.1417947276705113E-6	DOCUMENTATION
//noncritical, swallow and let the other propagate!	WITHOUT_CLASSIFICATION	0.9999944531942774	WITHOUT_CLASSIFICATION	5.5468057225745825E-6	DOCUMENTATION
// calls executeBatch()	WITHOUT_CLASSIFICATION	0.9999915470381374	WITHOUT_CLASSIFICATION	8.452961862623617E-6	DOCUMENTATION
//no big deal	WITHOUT_CLASSIFICATION	0.9999752657980243	WITHOUT_CLASSIFICATION	2.4734201975604536E-5	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999950759029259	WITHOUT_CLASSIFICATION	4.924097074008018E-6	DOCUMENTATION
// no big deal	WITHOUT_CLASSIFICATION	0.9999950759029259	WITHOUT_CLASSIFICATION	4.924097074008018E-6	DOCUMENTATION
// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case	WITHOUT_CLASSIFICATION	0.9999995917428212	WITHOUT_CLASSIFICATION	4.082571788404067E-7	DOCUMENTATION
// see explanation above...	WITHOUT_CLASSIFICATION	0.999998023698909	WITHOUT_CLASSIFICATION	1.9763010910694206E-6	DOCUMENTATION
// If we are in the process of releasing, no sense // checking for aggressive-release possibility.	WITHOUT_CLASSIFICATION	0.9999995869735617	WITHOUT_CLASSIFICATION	4.1302643833298796E-7	DOCUMENTATION
// EARLY EXIT!!!!	WITHOUT_CLASSIFICATION	0.9999654060977637	WITHOUT_CLASSIFICATION	3.4593902236264756E-5	DOCUMENTATION
// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999978352844011	WITHOUT_CLASSIFICATION	2.1647155990010962E-6	DOCUMENTATION
// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999965185311191	WITHOUT_CLASSIFICATION	3.4814688808962335E-6	DOCUMENTATION
// refer to comment in StatefulPersistenceContext.addCollection()	WITHOUT_CLASSIFICATION	0.9999970571342833	WITHOUT_CLASSIFICATION	2.942865716579643E-6	DOCUMENTATION
// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999996780283844	WITHOUT_CLASSIFICATION	3.2197161559258076E-6	DOCUMENTATION
// Note : success = false, because we don't know the outcome of the transaction	WITHOUT_CLASSIFICATION	0.9999992646743172	WITHOUT_CLASSIFICATION	7.353256827386607E-7	DOCUMENTATION
// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.	WITHOUT_CLASSIFICATION	0.9999995557873907	WITHOUT_CLASSIFICATION	4.4421260923731176E-7	DOCUMENTATION
// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization	WITHOUT_CLASSIFICATION	0.9999998737523574	WITHOUT_CLASSIFICATION	1.2624764260173232E-7	DOCUMENTATION
// transactions marked for rollback-only cause some TM impls to throw exceptions	WITHOUT_CLASSIFICATION	0.9999995230015998	WITHOUT_CLASSIFICATION	4.769984002609125E-7	DOCUMENTATION
// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999970453089992	WITHOUT_CLASSIFICATION	2.954691000705933E-6	DOCUMENTATION
//postInitialize() will be called after initialization	WITHOUT_CLASSIFICATION	0.9999929003956284	WITHOUT_CLASSIFICATION	7.09960437164533E-6	DOCUMENTATION
// cannot handle single quotes	WITHOUT_CLASSIFICATION	0.9999981918323273	WITHOUT_CLASSIFICATION	1.8081676727541415E-6	DOCUMENTATION
// todo : for 4.0 //	WITHOUT_CLASSIFICATION	0.9999915870606706	WITHOUT_CLASSIFICATION	8.412939329420348E-6	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999993651692537	WITHOUT_CLASSIFICATION	6.348307464395623E-7	DOCUMENTATION
// don't even bother trying to read further	WITHOUT_CLASSIFICATION	0.9999974119981243	WITHOUT_CLASSIFICATION	2.588001875581581E-6	DOCUMENTATION
// don't even bother trying to read any further	WITHOUT_CLASSIFICATION	0.9999972584048884	WITHOUT_CLASSIFICATION	2.741595111669644E-6	DOCUMENTATION
// position cursor to the last row	WITHOUT_CLASSIFICATION	0.9999982355794534	WITHOUT_CLASSIFICATION	1.7644205465686166E-6	DOCUMENTATION
// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing	WITHOUT_CLASSIFICATION	0.9999997244956096	WITHOUT_CLASSIFICATION	2.755043904212494E-7	DOCUMENTATION
// Read backwards until we read past the first physical sequential // row with the key we are interested in loading	WITHOUT_CLASSIFICATION	0.9999998097102244	WITHOUT_CLASSIFICATION	1.9028977560184623E-7	DOCUMENTATION
// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading	WITHOUT_CLASSIFICATION	0.9999990341004679	WITHOUT_CLASSIFICATION	9.658995321270483E-7	DOCUMENTATION
// now get an existing proxy for each row element (if there is one)	WITHOUT_CLASSIFICATION	0.9999972829138363	WITHOUT_CLASSIFICATION	2.7170861637246508E-6	DOCUMENTATION
// force the proxy to resolve itself	WITHOUT_CLASSIFICATION	0.9999984238265711	WITHOUT_CLASSIFICATION	1.5761734288754261E-6	DOCUMENTATION
// this is equivalent to the old behavior...	WITHOUT_CLASSIFICATION	0.9999983288624218	WITHOUT_CLASSIFICATION	1.671137578245733E-6	DOCUMENTATION
//if null, owner will be retrieved from session	WITHOUT_CLASSIFICATION	0.9999903386932353	WITHOUT_CLASSIFICATION	9.661306764690996E-6	DOCUMENTATION
//final String queryString, 	WITHOUT_CLASSIFICATION	0.9999759920675569	WITHOUT_CLASSIFICATION	2.4007932443073487E-5	DOCUMENTATION
// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify	WITHOUT_CLASSIFICATION	0.9999980885232529	WITHOUT_CLASSIFICATION	1.911476747175099E-6	DOCUMENTATION
//end of array, start filling again from start	WITHOUT_CLASSIFICATION	0.9999882090382487	WITHOUT_CLASSIFICATION	1.1790961751263366E-5	DOCUMENTATION
// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.	WITHOUT_CLASSIFICATION	0.9999994382671228	WITHOUT_CLASSIFICATION	5.617328771525631E-7	DOCUMENTATION
//we can reuse it for each row	WITHOUT_CLASSIFICATION	0.9999815507735961	WITHOUT_CLASSIFICATION	1.8449226403986036E-5	DOCUMENTATION
//can't reuse in this case	WITHOUT_CLASSIFICATION	0.999984366530842	WITHOUT_CLASSIFICATION	1.5633469158019923E-5	DOCUMENTATION
// First we need to suspend any current JTA transaction and obtain // a JDBC connection	WITHOUT_CLASSIFICATION	0.999994069276724	WITHOUT_CLASSIFICATION	5.930723275998675E-6	DOCUMENTATION
//getResultList(results);	WITHOUT_CLASSIFICATION	0.9999523825180636	WITHOUT_CLASSIFICATION	4.76174819362865E-5	DOCUMENTATION
//if we only returned one entity, query by key is more efficient	WITHOUT_CLASSIFICATION	0.999986217872972	WITHOUT_CLASSIFICATION	1.3782127027895618E-5	DOCUMENTATION
// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()	WITHOUT_CLASSIFICATION	0.9999996360981672	WITHOUT_CLASSIFICATION	3.639018327850488E-7	DOCUMENTATION
// handle empty collection	WITHOUT_CLASSIFICATION	0.9999982340631269	WITHOUT_CLASSIFICATION	1.7659368730772438E-6	DOCUMENTATION
// else no collection element, but also no owner	WITHOUT_CLASSIFICATION	0.9999975243799497	WITHOUT_CLASSIFICATION	2.4756200502541333E-6	DOCUMENTATION
//handle empty collections	WITHOUT_CLASSIFICATION	0.999994905161545	WITHOUT_CLASSIFICATION	5.094838455070138E-6	DOCUMENTATION
// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)	WITHOUT_CLASSIFICATION	0.9999995706991116	WITHOUT_CLASSIFICATION	4.29300888396793E-7	DOCUMENTATION
// validate() instances of Validatable	WITHOUT_CLASSIFICATION	0.9999983679117784	WITHOUT_CLASSIFICATION	1.6320882215578715E-6	DOCUMENTATION
// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>	WITHOUT_CLASSIFICATION	0.9999996729806938	WITHOUT_CLASSIFICATION	3.270193061639309E-7	DOCUMENTATION
// remove all collections for the entity from the session-level cache	WITHOUT_CLASSIFICATION	0.9999992550233172	WITHOUT_CLASSIFICATION	7.449766828729784E-7	DOCUMENTATION
//null version means the object is in the process of being loaded somewhere else in the ResultSet	WITHOUT_CLASSIFICATION	0.9999973717391292	WITHOUT_CLASSIFICATION	2.6282608707989867E-6	DOCUMENTATION
//problematic for <key-many-to-one>!	WITHOUT_CLASSIFICATION	0.9999810888258078	WITHOUT_CLASSIFICATION	1.891117419210133E-5	DOCUMENTATION
//use the id passed in	WITHOUT_CLASSIFICATION	0.9999901473295746	WITHOUT_CLASSIFICATION	9.85267042542624E-6	DOCUMENTATION
//do nothing	WITHOUT_CLASSIFICATION	0.9999663963822096	WITHOUT_CLASSIFICATION	3.3603617790333705E-5	DOCUMENTATION
// prefer re-generation of identity!	WITHOUT_CLASSIFICATION	0.9999961815724921	WITHOUT_CLASSIFICATION	3.818427507835253E-6	DOCUMENTATION
//no point doing this if NONE was requested	WITHOUT_CLASSIFICATION	0.9999879011685935	WITHOUT_CLASSIFICATION	1.2098831406536892E-5	DOCUMENTATION
//If the object is already loaded, return the loaded one	WITHOUT_CLASSIFICATION	0.9999970291647233	WITHOUT_CLASSIFICATION	2.970835276729198E-6	DOCUMENTATION
//its already loaded so don't need to hydrate it	WITHOUT_CLASSIFICATION	0.9999977615131973	WITHOUT_CLASSIFICATION	2.2384868027387237E-6	DOCUMENTATION
// cascade the refresh prior to refreshing this entity	WITHOUT_CLASSIFICATION	0.9999987329129445	WITHOUT_CLASSIFICATION	1.2670870555010046E-6	DOCUMENTATION
//the load() which takes an entity does not pass an entityName	WITHOUT_CLASSIFICATION	0.9999964160012584	WITHOUT_CLASSIFICATION	3.583998741524319E-6	DOCUMENTATION
//we only check the version when _upgrading_ lock modes	WITHOUT_CLASSIFICATION	0.9999952031441572	WITHOUT_CLASSIFICATION	4.796855842669091E-6	DOCUMENTATION
// look for a proxy	WITHOUT_CLASSIFICATION	0.9999901896150211	WITHOUT_CLASSIFICATION	9.810384978857382E-6	DOCUMENTATION
//we need to upgrade the lock mode to the mode requested	WITHOUT_CLASSIFICATION	0.9999957660636674	WITHOUT_CLASSIFICATION	4.233936332735211E-6	DOCUMENTATION
//its the given optional object	WITHOUT_CLASSIFICATION	0.9999957851314053	WITHOUT_CLASSIFICATION	4.214868594669425E-6	DOCUMENTATION
// instantiate a new instance	WITHOUT_CLASSIFICATION	0.9999960877800339	WITHOUT_CLASSIFICATION	3.9122199661639434E-6	DOCUMENTATION
//need to hydrate it.	WITHOUT_CLASSIFICATION	0.999988691313351	WITHOUT_CLASSIFICATION	1.1308686648966926E-5	DOCUMENTATION
// return a newly loaded object	WITHOUT_CLASSIFICATION	0.9999961919509525	WITHOUT_CLASSIFICATION	3.8080490475558695E-6	DOCUMENTATION
//will be ignored, using the existing Entry instead	WITHOUT_CLASSIFICATION	0.9999961507375573	WITHOUT_CLASSIFICATION	3.849262442636759E-6	DOCUMENTATION
// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself	WITHOUT_CLASSIFICATION	0.9999998114473522	WITHOUT_CLASSIFICATION	1.8855264776562588E-7	DOCUMENTATION
//materialize associations (and initialize the object) later	WITHOUT_CLASSIFICATION	0.9999967950526695	WITHOUT_CLASSIFICATION	3.2049473306225696E-6	DOCUMENTATION
// Get the persister for the _subclass_	WITHOUT_CLASSIFICATION	0.9999972060928818	WITHOUT_CLASSIFICATION	2.79390711820568E-6	DOCUMENTATION
// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior	WITHOUT_CLASSIFICATION	0.999999322848282	WITHOUT_CLASSIFICATION	6.771517180072259E-7	DOCUMENTATION
// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999996529257359	WITHOUT_CLASSIFICATION	3.470742641062719E-7	DOCUMENTATION
//addInitializedCollection(collection, persister, id);	WITHOUT_CLASSIFICATION	0.9999925873748626	WITHOUT_CLASSIFICATION	7.4126251373567245E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9998378277247765	WITHOUT_CLASSIFICATION	1.621722752234306E-4	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9998378277247765	WITHOUT_CLASSIFICATION	1.621722752234306E-4	DOCUMENTATION
/*|| oj.getJoinable().consumesCollectionAlias() */	WITHOUT_CLASSIFICATION	0.9999885683038989	WITHOUT_CLASSIFICATION	1.1431696101050273E-5	DOCUMENTATION
// here we do not bother with the discriminator.	WITHOUT_CLASSIFICATION	0.99999793909765	WITHOUT_CLASSIFICATION	2.0609023501087775E-6	DOCUMENTATION
// Code to handle subclasses of topClass	WITHOUT_CLASSIFICATION	0.9999980781246841	WITHOUT_CLASSIFICATION	1.9218753159199486E-6	DOCUMENTATION
//woops we got an instance of another class hierarchy branch	WITHOUT_CLASSIFICATION	0.9999929423554399	WITHOUT_CLASSIFICATION	7.057644560196877E-6	DOCUMENTATION
// we can go straight to the first required row	WITHOUT_CLASSIFICATION	0.9999987977174695	WITHOUT_CLASSIFICATION	1.2022825305981519E-6	DOCUMENTATION
// we need to step through the rows one row at a time (slow)	WITHOUT_CLASSIFICATION	0.9999982779941785	WITHOUT_CLASSIFICATION	1.7220058214609359E-6	DOCUMENTATION
// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.	WITHOUT_CLASSIFICATION	0.9999997545071468	WITHOUT_CLASSIFICATION	2.4549285315044934E-7	DOCUMENTATION
// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.	WITHOUT_CLASSIFICATION	0.9999995051861766	WITHOUT_CLASSIFICATION	4.948138233896322E-7	DOCUMENTATION
//before adding to collection!	WITHOUT_CLASSIFICATION	0.9999909769550525	WITHOUT_CLASSIFICATION	9.023044947543051E-6	DOCUMENTATION
// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...	WITHOUT_CLASSIFICATION	0.9999996511930395	WITHOUT_CLASSIFICATION	3.488069605811873E-7	DOCUMENTATION
//operations which cascade as far as the collection also cascade to collection elements	WITHOUT_CLASSIFICATION	0.9999965987085487	WITHOUT_CLASSIFICATION	3.401291451221081E-6	DOCUMENTATION
// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:	WITHOUT_CLASSIFICATION	0.9999946828397827	WITHOUT_CLASSIFICATION	5.317160217345429E-6	DOCUMENTATION
//a composite key	WITHOUT_CLASSIFICATION	0.9999874194162232	WITHOUT_CLASSIFICATION	1.2580583776736429E-5	DOCUMENTATION
// if no batch, use "foo = ? and bar = ?"	WITHOUT_CLASSIFICATION	0.9999976000786188	WITHOUT_CLASSIFICATION	2.3999213811819533E-6	DOCUMENTATION
//it must be a collection fetch	WITHOUT_CLASSIFICATION	0.9999908851504431	WITHOUT_CLASSIFICATION	9.114849556991412E-6	DOCUMENTATION
// needed later for many-to-many/filter application	WITHOUT_CLASSIFICATION	0.9999981037977751	WITHOUT_CLASSIFICATION	1.896202224893567E-6	DOCUMENTATION
/*&& etype.isReferenceToPrimaryKey()*/	WITHOUT_CLASSIFICATION	0.9999806038720778	WITHOUT_CLASSIFICATION	1.939612792221064E-5	DOCUMENTATION
// it might still need to apply a collection ordering based on a // many-to-many defined order-by...	WITHOUT_CLASSIFICATION	0.9999992602824093	WITHOUT_CLASSIFICATION	7.397175907412377E-7	DOCUMENTATION
// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins	WITHOUT_CLASSIFICATION	0.9999989277425333	WITHOUT_CLASSIFICATION	1.0722574667587636E-6	DOCUMENTATION
// belong to other persister // belong to other persister	WITHOUT_CLASSIFICATION	0.9999963111092188	WITHOUT_CLASSIFICATION	3.6888907811954942E-6	DOCUMENTATION
// we found it	WITHOUT_CLASSIFICATION	0.9999926301311535	WITHOUT_CLASSIFICATION	7.369868846511154E-6	DOCUMENTATION
//we can use an inner join for the many-to-many	WITHOUT_CLASSIFICATION	0.9999909233627376	WITHOUT_CLASSIFICATION	9.076637262422096E-6	DOCUMENTATION
//disable a join back to this same association	WITHOUT_CLASSIFICATION	0.9999927514420188	WITHOUT_CLASSIFICATION	7.248557981151024E-6	DOCUMENTATION
//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!	WITHOUT_CLASSIFICATION	0.9999979263869588	WITHOUT_CLASSIFICATION	2.073613041145389E-6	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999980274406964	WITHOUT_CLASSIFICATION	1.9725593036298946E-6	DOCUMENTATION
//root entity comes *last*	WITHOUT_CLASSIFICATION	0.9999974587450636	WITHOUT_CLASSIFICATION	2.541254936407119E-6	DOCUMENTATION
//deliberately ignore return value!	WITHOUT_CLASSIFICATION	0.9999869198393085	WITHOUT_CLASSIFICATION	1.3080160691513317E-5	DOCUMENTATION
//alias may be null //EARLY EXIT	WITHOUT_CLASSIFICATION	0.9999817279800947	WITHOUT_CLASSIFICATION	1.827201990540126E-5	DOCUMENTATION
// if it is a compound path	WITHOUT_CLASSIFICATION	0.9999971233908351	WITHOUT_CLASSIFICATION	2.8766091648154893E-6	DOCUMENTATION
// otherwise assume the parent is the the criteria that created us	WITHOUT_CLASSIFICATION	0.9999985411198089	WITHOUT_CLASSIFICATION	1.4588801911159804E-6	DOCUMENTATION
// if its the root criteria, we are done	WITHOUT_CLASSIFICATION	0.999998624600959	WITHOUT_CLASSIFICATION	1.3753990410300898E-6	DOCUMENTATION
// otherwise, recurse	WITHOUT_CLASSIFICATION	0.9999936061743263	WITHOUT_CLASSIFICATION	6.393825673635863E-6	DOCUMENTATION
//the criteria instance	WITHOUT_CLASSIFICATION	0.9999848463312586	WITHOUT_CLASSIFICATION	1.5153668741426839E-5	DOCUMENTATION
// the entity name	WITHOUT_CLASSIFICATION	0.9999952361691541	WITHOUT_CLASSIFICATION	4.763830845899768E-6	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9999821387777199	WITHOUT_CLASSIFICATION	1.7861222280155803E-5	DOCUMENTATION
//not found in inner query , try the outer query	WITHOUT_CLASSIFICATION	0.9999821387777199	WITHOUT_CLASSIFICATION	1.7861222280155803E-5	DOCUMENTATION
//it refers to an alias of a projection	WITHOUT_CLASSIFICATION	0.9999899769023187	WITHOUT_CLASSIFICATION	1.0023097681372967E-5	DOCUMENTATION
//should never happen, i think	WITHOUT_CLASSIFICATION	0.9999911191174097	WITHOUT_CLASSIFICATION	8.880882590302462E-6	DOCUMENTATION
// Detect discriminator values...	WITHOUT_CLASSIFICATION	0.9999956829894343	WITHOUT_CLASSIFICATION	4.317010565596096E-6	DOCUMENTATION
// Convert the string value into the proper type.	WITHOUT_CLASSIFICATION	0.999999311302827	WITHOUT_CLASSIFICATION	6.886971730216535E-7	DOCUMENTATION
// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us	WITHOUT_CLASSIFICATION	0.9999983633475162	WITHOUT_CLASSIFICATION	1.6366524837617647E-6	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999955474809988	WITHOUT_CLASSIFICATION	4.452519001150497E-6	DOCUMENTATION
// Otherwise, this is an ordinary value.	WITHOUT_CLASSIFICATION	0.99999868104065	WITHOUT_CLASSIFICATION	1.3189593500093274E-6	DOCUMENTATION
// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")	WITHOUT_CLASSIFICATION	0.9999992808117365	WITHOUT_CLASSIFICATION	7.191882634353801E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// this is only needed (afaict) for ResultTransformer processing...	WITHOUT_CLASSIFICATION	0.9999990083064356	WITHOUT_CLASSIFICATION	9.916935644381256E-7	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999992080439906	WITHOUT_CLASSIFICATION	7.919560093836449E-7	DOCUMENTATION
// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)	WITHOUT_CLASSIFICATION	0.9999994684582895	WITHOUT_CLASSIFICATION	5.315417105917966E-7	DOCUMENTATION
// replace {....} with corresponding column aliases	WITHOUT_CLASSIFICATION	0.9999984788897388	WITHOUT_CLASSIFICATION	1.5211102611467184E-6	DOCUMENTATION
// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop	WITHOUT_CLASSIFICATION	0.9999997053426729	WITHOUT_CLASSIFICATION	2.9465732717024363E-7	DOCUMENTATION
// apend everything up until the next encountered open brace	WITHOUT_CLASSIFICATION	0.9999987528892207	WITHOUT_CLASSIFICATION	1.2471107792529091E-6	DOCUMENTATION
// it is a simple table alias {foo}	WITHOUT_CLASSIFICATION	0.9999987432597526	WITHOUT_CLASSIFICATION	1.2567402474547779E-6	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999978393063782	WITHOUT_CLASSIFICATION	2.1606936216965867E-6	DOCUMENTATION
// passing through anything we do not know : to support jdbc escape sequences HB-898	WITHOUT_CLASSIFICATION	0.9999978393063782	WITHOUT_CLASSIFICATION	2.1606936216965867E-6	DOCUMENTATION
// The current alias is referencing the collection to be eagerly fetched	WITHOUT_CLASSIFICATION	0.9999978636553178	WITHOUT_CLASSIFICATION	2.1363446821626696E-6	DOCUMENTATION
// it is a property reference {foo.bar}	WITHOUT_CLASSIFICATION	0.9999945460986075	WITHOUT_CLASSIFICATION	5.453901392416938E-6	DOCUMENTATION
// Possibly handle :something parameters for the query ?	WITHOUT_CLASSIFICATION	0.9999985485951812	WITHOUT_CLASSIFICATION	1.4514048187938966E-6	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999993760361781	WITHOUT_CLASSIFICATION	6.239638219053353E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998981745719934	WITHOUT_CLASSIFICATION	1.018254280066226E-4	DOCUMENTATION
//NOTE: EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9997543743440583	WITHOUT_CLASSIFICATION	2.456256559417112E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// Now, process the returns	WITHOUT_CLASSIFICATION	0.9999971528683119	WITHOUT_CLASSIFICATION	2.8471316880112537E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.999995777534277	WITHOUT_CLASSIFICATION	4.222465722851619E-6	DOCUMENTATION
// already been processed...	WITHOUT_CLASSIFICATION	0.999995777534277	WITHOUT_CLASSIFICATION	4.222465722851619E-6	DOCUMENTATION
// Make sure the owner alias is known...	WITHOUT_CLASSIFICATION	0.9999984988584908	WITHOUT_CLASSIFICATION	1.5011415091723342E-6	DOCUMENTATION
// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners	WITHOUT_CLASSIFICATION	0.9999997278177536	WITHOUT_CLASSIFICATION	2.7218224641800334E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// If this return's alias has not been processed yet, do so b4 further processing of this return	WITHOUT_CLASSIFICATION	0.999998905733676	WITHOUT_CLASSIFICATION	1.0942663240079071E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved	WITHOUT_CLASSIFICATION	0.9999978149341354	WITHOUT_CLASSIFICATION	2.1850658645110403E-6	DOCUMENTATION
// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)	WITHOUT_CLASSIFICATION	0.9999996561463759	WITHOUT_CLASSIFICATION	3.4385362412808177E-7	DOCUMENTATION
//EARLY EXIT	WITHOUT_CLASSIFICATION	0.9998342434273326	WITHOUT_CLASSIFICATION	1.6575657266736815E-4	DOCUMENTATION
// cascade-save to collections AFTER the collection owner was saved	WITHOUT_CLASSIFICATION	0.9999992558088595	WITHOUT_CLASSIFICATION	7.441911405415666E-7	DOCUMENTATION
// Initialize the error handling delegate.	WITHOUT_CLASSIFICATION	0.9999972181541713	WITHOUT_CLASSIFICATION	2.781845828680474E-6	DOCUMENTATION
// Use the delegate.	WITHOUT_CLASSIFICATION	0.9999974206094495	WITHOUT_CLASSIFICATION	2.579390550459534E-6	DOCUMENTATION
// currently only the Hibernate-supplied DbTimestampType is supported here	WITHOUT_CLASSIFICATION	0.9999984096614016	WITHOUT_CLASSIFICATION	1.5903385983382805E-6	DOCUMENTATION
// This is called when it's time to fully resolve a path expression.	WITHOUT_CLASSIFICATION	0.99999961441869	WITHOUT_CLASSIFICATION	3.8558131006145005E-7	DOCUMENTATION
// make a new one	WITHOUT_CLASSIFICATION	0.9999891271740186	WITHOUT_CLASSIFICATION	1.087282598139617E-5	DOCUMENTATION
// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...	WITHOUT_CLASSIFICATION	0.9999979183221123	WITHOUT_CLASSIFICATION	2.081677887813087E-6	DOCUMENTATION
// (NOT (GT a b) ) => (LE a b)	WITHOUT_CLASSIFICATION	0.9999613688747532	WITHOUT_CLASSIFICATION	3.863112524683805E-5	DOCUMENTATION
//private Type[] sqlResultTypes;	WITHOUT_CLASSIFICATION	0.9999890073546397	WITHOUT_CLASSIFICATION	1.0992645360257556E-5	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.999989554184014	WITHOUT_CLASSIFICATION	1.0445815985986412E-5	DOCUMENTATION
//sqlResultTypes = selectClause.getSqlResultTypes();	WITHOUT_CLASSIFICATION	0.9999906052283437	WITHOUT_CLASSIFICATION	9.394771656231697E-6	DOCUMENTATION
//by default	WITHOUT_CLASSIFICATION	0.9999623844703961	WITHOUT_CLASSIFICATION	3.761552960383041E-5	DOCUMENTATION
// This is now handled earlier in this method.	WITHOUT_CLASSIFICATION	0.9999979685316848	WITHOUT_CLASSIFICATION	2.031468315248069E-6	DOCUMENTATION
// -- Loader implementation --	WITHOUT_CLASSIFICATION	0.9999982215975687	WITHOUT_CLASSIFICATION	1.778402431369202E-6	DOCUMENTATION
// -- Loader overrides --	WITHOUT_CLASSIFICATION	0.9999960351851939	WITHOUT_CLASSIFICATION	3.96481480620988E-6	DOCUMENTATION
// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)	WITHOUT_CLASSIFICATION	0.9999644048455766	WITHOUT_CLASSIFICATION	3.559515442340918E-5	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999975576452927	WITHOUT_CLASSIFICATION	2.4423547071962662E-6	DOCUMENTATION
// meant to handle dynamic instantiation queries...	WITHOUT_CLASSIFICATION	0.9999990814649764	WITHOUT_CLASSIFICATION	9.185350235320539E-7	DOCUMENTATION
// --- Query translator methods ---	WITHOUT_CLASSIFICATION	0.9999982316995927	WITHOUT_CLASSIFICATION	1.7683004073688153E-6	DOCUMENTATION
// -- Implementation private methods --	WITHOUT_CLASSIFICATION	0.999999120062066	WITHOUT_CLASSIFICATION	8.799379339107198E-7	DOCUMENTATION
//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user	WITHOUT_CLASSIFICATION	0.9999990682605678	WITHOUT_CLASSIFICATION	9.317394322481574E-7	DOCUMENTATION
// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used	WITHOUT_CLASSIFICATION	0.999999178001506	WITHOUT_CLASSIFICATION	8.219984940130093E-7	DOCUMENTATION
// to support dialects that have their own identity data type	WITHOUT_CLASSIFICATION	0.9999990073778834	WITHOUT_CLASSIFICATION	9.92622116653902E-7	DOCUMENTATION
// Prepare the left hand side and get the data type.	WITHOUT_CLASSIFICATION	0.9999991726179752	WITHOUT_CLASSIFICATION	8.273820248292982E-7	DOCUMENTATION
//used also for generation of FK names!	WITHOUT_CLASSIFICATION	0.9999872244036332	WITHOUT_CLASSIFICATION	1.2775596366859547E-5	DOCUMENTATION
//usually useless	WITHOUT_CLASSIFICATION	0.9999567788876615	WITHOUT_CLASSIFICATION	4.322111233847562E-5	DOCUMENTATION
// added this caching as I noticed that getType() is being called multiple times...	WITHOUT_CLASSIFICATION	0.9999995388341095	WITHOUT_CLASSIFICATION	4.6116589057532353E-7	DOCUMENTATION
//do not add unique constraint on DB not supporting unique and nullable columns	WITHOUT_CLASSIFICATION	0.999991042968229	WITHOUT_CLASSIFICATION	8.95703177092714E-6	DOCUMENTATION
//for backward compatibility, disable this:	WITHOUT_CLASSIFICATION	0.9999930959478038	WITHOUT_CLASSIFICATION	6.904052196206821E-6	DOCUMENTATION
//may be final //may be final //may be final	WITHOUT_CLASSIFICATION	0.9999644070928241	WITHOUT_CLASSIFICATION	3.5592907175979696E-5	DOCUMENTATION
//may be final	WITHOUT_CLASSIFICATION	0.9999729409182115	WITHOUT_CLASSIFICATION	2.7059081788421938E-5	DOCUMENTATION
// may be final	WITHOUT_CLASSIFICATION	0.999994273523425	WITHOUT_CLASSIFICATION	5.726476575058668E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.999985619407052	WITHOUT_CLASSIFICATION	1.4380592947957084E-5	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999902427381594	WITHOUT_CLASSIFICATION	9.757261840467843E-6	DOCUMENTATION
// the root of the incoming property path matched one // of the embedded composite identifier properties	WITHOUT_CLASSIFICATION	0.9999993572734379	WITHOUT_CLASSIFICATION	6.427265621055812E-7	DOCUMENTATION
// ignore it...	WITHOUT_CLASSIFICATION	0.9999952566473839	WITHOUT_CLASSIFICATION	4.743352616101242E-6	DOCUMENTATION
//flat recursive algorithm	WITHOUT_CLASSIFICATION	0.9999860899223953	WITHOUT_CLASSIFICATION	1.3910077604626375E-5	DOCUMENTATION
//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded	WITHOUT_CLASSIFICATION	0.9999988782224585	WITHOUT_CLASSIFICATION	1.1217775414651297E-6	DOCUMENTATION
//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)	WITHOUT_CLASSIFICATION	0.9999983038327489	WITHOUT_CLASSIFICATION	1.6961672510977688E-6	DOCUMENTATION
//pass the entity-name, if not a collection-id	WITHOUT_CLASSIFICATION	0.9999973243748385	WITHOUT_CLASSIFICATION	2.675625161514034E-6	DOCUMENTATION
// Custom SQL	WITHOUT_CLASSIFICATION	0.999985619407052	WITHOUT_CLASSIFICATION	1.4380592947957084E-5	DOCUMENTATION
//Primary key constraint	WITHOUT_CLASSIFICATION	0.9999902427381594	WITHOUT_CLASSIFICATION	9.757261840467843E-6	DOCUMENTATION
//pass the column name (a generated id almost always has a single column)	WITHOUT_CLASSIFICATION	0.9999963365975604	WITHOUT_CLASSIFICATION	3.6634024395771174E-6	DOCUMENTATION
//needed to satisfy KeyValue	WITHOUT_CLASSIFICATION	0.9999924365659589	WITHOUT_CLASSIFICATION	7.563434041035252E-6	DOCUMENTATION
// empty means no scoping	WITHOUT_CLASSIFICATION	0.9999981634811225	WITHOUT_CLASSIFICATION	1.8365188776353218E-6	DOCUMENTATION
// index should be last column listed	WITHOUT_CLASSIFICATION	0.9999985649688716	WITHOUT_CLASSIFICATION	1.4350311283626286E-6	DOCUMENTATION
//if it is a formula index, use the element columns in the PK	WITHOUT_CLASSIFICATION	0.9999966423200801	WITHOUT_CLASSIFICATION	3.357679919772447E-6	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns	WITHOUT_CLASSIFICATION	0.9999996424513915	WITHOUT_CLASSIFICATION	3.575486084202127E-7	DOCUMENTATION
/*ArrayList list = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999880914306525	WITHOUT_CLASSIFICATION	1.1908569347550637E-5	DOCUMENTATION
// }	WITHOUT_CLASSIFICATION	0.9999732529973689	WITHOUT_CLASSIFICATION	2.67470026309659E-5	DOCUMENTATION
// no foreign key element of for a one-to-many	WITHOUT_CLASSIFICATION	0.9999912059870807	WITHOUT_CLASSIFICATION	8.79401291928378E-6	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9999029152578351	WITHOUT_CLASSIFICATION	9.708474216486771E-5	DOCUMENTATION
// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints	WITHOUT_CLASSIFICATION	0.9999997867728584	WITHOUT_CLASSIFICATION	2.132271416721451E-7	DOCUMENTATION
//TODO: we could just return all false...	WITHOUT_CLASSIFICATION	0.9999029152578351	WITHOUT_CLASSIFICATION	9.708474216486771E-5	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it non-updateable	WITHOUT_CLASSIFICATION	0.9999998863068992	WITHOUT_CLASSIFICATION	1.1369310070839125E-7	DOCUMENTATION
//columnUpdateability.length==0 ||	WITHOUT_CLASSIFICATION	0.9999933204282158	WITHOUT_CLASSIFICATION	6.679571784251795E-6	DOCUMENTATION
// if the property mapping consists of all formulas,  // make it insertable	WITHOUT_CLASSIFICATION	0.9999997835479377	WITHOUT_CLASSIFICATION	2.164520621994277E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976942387264	WITHOUT_CLASSIFICATION	2.3057612735000485E-6	DOCUMENTATION
// expected type is intrinsic here...	WITHOUT_CLASSIFICATION	0.9999986039736837	WITHOUT_CLASSIFICATION	1.3960263163720552E-6	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9997632519041243	WITHOUT_CLASSIFICATION	2.3674809587556923E-4	DOCUMENTATION
//}	WITHOUT_CLASSIFICATION	0.9997632519041243	WITHOUT_CLASSIFICATION	2.3674809587556923E-4	DOCUMENTATION
//return memberPersister.getPropertyType(propertyName);	WITHOUT_CLASSIFICATION	0.9999881067960126	WITHOUT_CLASSIFICATION	1.1893203987396794E-5	DOCUMENTATION
//return memberPersister.toColumns(alias, propertyName);	WITHOUT_CLASSIFICATION	0.9999892867099374	WITHOUT_CLASSIFICATION	1.0713290062539172E-5	DOCUMENTATION
//return memberPersister.getType();	WITHOUT_CLASSIFICATION	0.9999784995560326	WITHOUT_CLASSIFICATION	2.1500443967414912E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999863246287402	WITHOUT_CLASSIFICATION	1.3675371259904811E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//instanceof AssociationType;	WITHOUT_CLASSIFICATION	0.9999891910395579	WITHOUT_CLASSIFICATION	1.0808960442082753E-5	DOCUMENTATION
// we need to determine the best way to know that two joinables // represent a single many-to-many...	WITHOUT_CLASSIFICATION	0.9999993987318463	WITHOUT_CLASSIFICATION	6.012681536469956E-7	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.999989727815296	WITHOUT_CLASSIFICATION	1.027218470397251E-5	DOCUMENTATION
//public boolean isSubselectLoadable();	WITHOUT_CLASSIFICATION	0.999991366160507	WITHOUT_CLASSIFICATION	8.633839492917554E-6	DOCUMENTATION
// KEY	WITHOUT_CLASSIFICATION	0.999972981894402	WITHOUT_CLASSIFICATION	2.7018105597968403E-5	DOCUMENTATION
//columns	WITHOUT_CLASSIFICATION	0.9999502395582466	WITHOUT_CLASSIFICATION	4.976044175347196E-5	DOCUMENTATION
//SQL statements	WITHOUT_CLASSIFICATION	0.9999700932643533	WITHOUT_CLASSIFICATION	2.9906735646817135E-5	DOCUMENTATION
//extra information about the element type	WITHOUT_CLASSIFICATION	0.99999237726128	WITHOUT_CLASSIFICATION	7.622738720040225E-6	DOCUMENTATION
//types	WITHOUT_CLASSIFICATION	0.9999481315270975	WITHOUT_CLASSIFICATION	5.186847290259177E-5	DOCUMENTATION
// custom sql	WITHOUT_CLASSIFICATION	0.9999898811155559	WITHOUT_CLASSIFICATION	1.0118884444092844E-5	DOCUMENTATION
//private final String unquotedIdentifierColumnName;	WITHOUT_CLASSIFICATION	0.9999900347771125	WITHOUT_CLASSIFICATION	9.965222887540656E-6	DOCUMENTATION
// dynamic filters specifically for many-to-many inside the collection	WITHOUT_CLASSIFICATION	0.9999993571833313	WITHOUT_CLASSIFICATION	6.428166687478291E-7	DOCUMENTATION
// dynamic filters for the collection	WITHOUT_CLASSIFICATION	0.9999983905486645	WITHOUT_CLASSIFICATION	1.6094513355329158E-6	DOCUMENTATION
// NativeSQL: collect key column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999966236960866	WITHOUT_CLASSIFICATION	3.3763039135697206E-6	DOCUMENTATION
//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);	WITHOUT_CLASSIFICATION	0.9999959835944545	WITHOUT_CLASSIFICATION	4.016405545462462E-6	DOCUMENTATION
//ELEMENT	WITHOUT_CLASSIFICATION	0.999789170767267	WITHOUT_CLASSIFICATION	2.1082923273297747E-4	DOCUMENTATION
// NativeSQL: collect element column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999919806980411	WITHOUT_CLASSIFICATION	8.019301958871678E-6	DOCUMENTATION
// INDEX AND ROW SELECT	WITHOUT_CLASSIFICATION	0.9999590296336727	WITHOUT_CLASSIFICATION	4.0970366327302466E-5	DOCUMENTATION
// NativeSQL: collect index column and auto-aliases	WITHOUT_CLASSIFICATION	0.9999972074314936	WITHOUT_CLASSIFICATION	2.7925685063773863E-6	DOCUMENTATION
//unquotedIdentifierColumnName = identifierColumnAlias;	WITHOUT_CLASSIFICATION	0.999988389735903	WITHOUT_CLASSIFICATION	1.161026409704067E-5	DOCUMENTATION
//unquotedIdentifierColumnName = null;	WITHOUT_CLASSIFICATION	0.999981679071534	WITHOUT_CLASSIFICATION	1.8320928465931082E-5	DOCUMENTATION
//GENERATE THE SQL:	WITHOUT_CLASSIFICATION	0.999845733390059	WITHOUT_CLASSIFICATION	1.5426660994103617E-4	DOCUMENTATION
// for non-arrays, we don't need to know the element class //elementType.returnedClass();	WITHOUT_CLASSIFICATION	0.99999944746002	WITHOUT_CLASSIFICATION	5.525399800091956E-7	DOCUMENTATION
//not all classpersisters implement PropertyMapping!	WITHOUT_CLASSIFICATION	0.9999889605851972	WITHOUT_CLASSIFICATION	1.103941480280261E-5	DOCUMENTATION
// Handle any filters applied to this collection	WITHOUT_CLASSIFICATION	0.9999992673416586	WITHOUT_CLASSIFICATION	7.326583414180237E-7	DOCUMENTATION
// Handle any filters applied to this collection for many-to-many	WITHOUT_CLASSIFICATION	0.9999991254119274	WITHOUT_CLASSIFICATION	8.745880726421531E-7	DOCUMENTATION
//if there is a user-specified loader, return that //TODO: filters!?	WITHOUT_CLASSIFICATION	0.9999908143357663	WITHOUT_CLASSIFICATION	9.185664233665276E-6	DOCUMENTATION
// Take care of any entities that might have // been evicted!	WITHOUT_CLASSIFICATION	0.9999974108824856	WITHOUT_CLASSIFICATION	2.589117514445822E-6	DOCUMENTATION
//strip leading ','	WITHOUT_CLASSIFICATION	0.999989727815296	WITHOUT_CLASSIFICATION	1.027218470397251E-5	DOCUMENTATION
// Run a subquery loader	WITHOUT_CLASSIFICATION	0.9999967530821199	WITHOUT_CLASSIFICATION	3.24691788019012E-6	DOCUMENTATION
//needed by arrays	WITHOUT_CLASSIFICATION	0.9999757081259179	WITHOUT_CLASSIFICATION	2.4291874082209924E-5	DOCUMENTATION
//TODO: something with formulas...	WITHOUT_CLASSIFICATION	0.9999486419452832	WITHOUT_CLASSIFICATION	5.1358054716726706E-5	DOCUMENTATION
//an assertion	WITHOUT_CLASSIFICATION	0.9999816968981464	WITHOUT_CLASSIFICATION	1.830310185360852E-5	DOCUMENTATION
// Remove all the old entries	WITHOUT_CLASSIFICATION	0.999997571982891	WITHOUT_CLASSIFICATION	2.4280171091123958E-6	DOCUMENTATION
//create all the new entries	WITHOUT_CLASSIFICATION	0.9999897171928999	WITHOUT_CLASSIFICATION	1.0282807100123723E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999863246287402	WITHOUT_CLASSIFICATION	1.3675371259904811E-5	DOCUMENTATION
/*&& !indexIsFormula*/	WITHOUT_CLASSIFICATION	0.9999863246287402	WITHOUT_CLASSIFICATION	1.3675371259904811E-5	DOCUMENTATION
//delete all the deleted entries	WITHOUT_CLASSIFICATION	0.9999878124087316	WITHOUT_CLASSIFICATION	1.2187591268284053E-5	DOCUMENTATION
//insert all the new entries	WITHOUT_CLASSIFICATION	0.999989225873392	WITHOUT_CLASSIFICATION	1.0774126608092209E-5	DOCUMENTATION
//==elementType ??	WITHOUT_CLASSIFICATION	0.9999578852411346	WITHOUT_CLASSIFICATION	4.2114758865389585E-5	DOCUMENTATION
//update all the modified entries	WITHOUT_CLASSIFICATION	0.9999926530495605	WITHOUT_CLASSIFICATION	7.346950439459912E-6	DOCUMENTATION
//identifier collections not supported for 1-to-many	WITHOUT_CLASSIFICATION	0.9999961791774428	WITHOUT_CLASSIFICATION	3.820822557263078E-6	DOCUMENTATION
// update removed rows fks to null	WITHOUT_CLASSIFICATION	0.999998573288588	WITHOUT_CLASSIFICATION	1.426711412061488E-6	DOCUMENTATION
// will still be issued when it used to be null	WITHOUT_CLASSIFICATION	0.9999973641016465	WITHOUT_CLASSIFICATION	2.635898353575545E-6	DOCUMENTATION
// now update all changed or added rows fks	WITHOUT_CLASSIFICATION	0.999998058544069	WITHOUT_CLASSIFICATION	1.9414559309410705E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//use suffix for the entity columns	WITHOUT_CLASSIFICATION	0.9999932949730433	WITHOUT_CLASSIFICATION	6.705026956720451E-6	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999984356808369	WITHOUT_CLASSIFICATION	1.5643191631188656E-6	DOCUMENTATION
//private final String rootTableName;	WITHOUT_CLASSIFICATION	0.9999914381565483	WITHOUT_CLASSIFICATION	8.561843451593962E-6	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9996009065861293	WITHOUT_CLASSIFICATION	3.9909341387069666E-4	DOCUMENTATION
//Custom SQL	WITHOUT_CLASSIFICATION	0.9999371560963094	WITHOUT_CLASSIFICATION	6.284390369065246E-5	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999984356808369	WITHOUT_CLASSIFICATION	1.5643191631188656E-6	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.999989490165464	WITHOUT_CLASSIFICATION	1.0509834536071867E-5	DOCUMENTATION
// This could also just be true all the time...	WITHOUT_CLASSIFICATION	0.9999987446203479	WITHOUT_CLASSIFICATION	1.2553796520741037E-6	DOCUMENTATION
//chop the last union (all)	WITHOUT_CLASSIFICATION	0.9999895570214875	WITHOUT_CLASSIFICATION	1.0442978512497313E-5	DOCUMENTATION
//TODO: check this....	WITHOUT_CLASSIFICATION	0.9998468326255514	WITHOUT_CLASSIFICATION	1.5316737444868243E-4	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9996009065861293	WITHOUT_CLASSIFICATION	3.9909341387069666E-4	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999990892646083	WITHOUT_CLASSIFICATION	9.1073539174733E-7	DOCUMENTATION
// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999989889469123	WITHOUT_CLASSIFICATION	1.0110530876552316E-6	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999994351411494	WITHOUT_CLASSIFICATION	5.64858850611797E-7	DOCUMENTATION
// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE	WITHOUT_CLASSIFICATION	0.9999995942558758	WITHOUT_CLASSIFICATION	4.057441241432272E-7	DOCUMENTATION
//MULTITABLES	WITHOUT_CLASSIFICATION	0.9996736655348475	WITHOUT_CLASSIFICATION	3.2633446515247866E-4	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999880276723478	WITHOUT_CLASSIFICATION	1.1972327652259E-5	DOCUMENTATION
// subclass closure properties	WITHOUT_CLASSIFICATION	0.9999979310458529	WITHOUT_CLASSIFICATION	2.0689541471206783E-6	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999601780370101	WITHOUT_CLASSIFICATION	3.9821962989789124E-5	DOCUMENTATION
//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999912098068734	WITHOUT_CLASSIFICATION	8.790193126480786E-6	DOCUMENTATION
//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();	WITHOUT_CLASSIFICATION	0.9999943558536791	WITHOUT_CLASSIFICATION	5.6441463208531496E-6	DOCUMENTATION
// don't need subclass tables, because they can't appear in conditions	WITHOUT_CLASSIFICATION	0.9999995877580033	WITHOUT_CLASSIFICATION	4.122419966540889E-7	DOCUMENTATION
// special case where we need to force incloude all subclass joins	WITHOUT_CLASSIFICATION	0.999998937114986	WITHOUT_CLASSIFICATION	1.0628850140223984E-6	DOCUMENTATION
// the class hierarchy structure	WITHOUT_CLASSIFICATION	0.9999984356808369	WITHOUT_CLASSIFICATION	1.5643191631188656E-6	DOCUMENTATION
// properties of this class, including inherited properties	WITHOUT_CLASSIFICATION	0.9999990892646083	WITHOUT_CLASSIFICATION	9.1073539174733E-7	DOCUMENTATION
// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class	WITHOUT_CLASSIFICATION	0.9999994351411494	WITHOUT_CLASSIFICATION	5.64858850611797E-7	DOCUMENTATION
//get em on the second pass!	WITHOUT_CLASSIFICATION	0.9999899874119068	WITHOUT_CLASSIFICATION	1.0012588093147551E-5	DOCUMENTATION
// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)	WITHOUT_CLASSIFICATION	0.9999994661289235	WITHOUT_CLASSIFICATION	5.338710763522032E-7	DOCUMENTATION
// discriminator column	WITHOUT_CLASSIFICATION	0.9999937954531319	WITHOUT_CLASSIFICATION	6.204546868027908E-6	DOCUMENTATION
//INITIALIZATION:	WITHOUT_CLASSIFICATION	0.9996009065861293	WITHOUT_CLASSIFICATION	3.9909341387069666E-4	DOCUMENTATION
//private final Map propertyTableNumbersByName = new HashMap();	WITHOUT_CLASSIFICATION	0.9999956364098037	WITHOUT_CLASSIFICATION	4.3635901963820996E-6	DOCUMENTATION
// CLASS + TABLE	WITHOUT_CLASSIFICATION	0.9999601267262124	WITHOUT_CLASSIFICATION	3.987327378766523E-5	DOCUMENTATION
// DISCRIMINATOR	WITHOUT_CLASSIFICATION	0.999955777104742	WITHOUT_CLASSIFICATION	4.422289525793293E-5	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999634827167975	WITHOUT_CLASSIFICATION	3.6517283202491375E-5	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999601780370101	WITHOUT_CLASSIFICATION	3.9821962989789124E-5	DOCUMENTATION
// Execute the SQL:	WITHOUT_CLASSIFICATION	0.999989490165464	WITHOUT_CLASSIFICATION	1.0509834536071867E-5	DOCUMENTATION
// JOINS	WITHOUT_CLASSIFICATION	0.999974130899464	WITHOUT_CLASSIFICATION	2.586910053607156E-5	DOCUMENTATION
//propertyTableNumbersByName.put( prop.getName(), join );	WITHOUT_CLASSIFICATION	0.9999905911440001	WITHOUT_CLASSIFICATION	9.408855999820912E-6	DOCUMENTATION
//Access cached SQL	WITHOUT_CLASSIFICATION	0.9999762340371308	WITHOUT_CLASSIFICATION	2.376596286922057E-5	DOCUMENTATION
//figure out which tables need to be fetched	WITHOUT_CLASSIFICATION	0.9999938054145613	WITHOUT_CLASSIFICATION	6.194585438740831E-6	DOCUMENTATION
//figure out which columns are needed	WITHOUT_CLASSIFICATION	0.9999918022439727	WITHOUT_CLASSIFICATION	8.197756027341372E-6	DOCUMENTATION
//figure out which formulas are needed	WITHOUT_CLASSIFICATION	0.9999912237809748	WITHOUT_CLASSIFICATION	8.77621902518732E-6	DOCUMENTATION
//render the SQL	WITHOUT_CLASSIFICATION	0.9999747329126957	WITHOUT_CLASSIFICATION	2.5267087304322406E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976942387264	WITHOUT_CLASSIFICATION	2.3057612735000485E-6	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998399340811	WITHOUT_CLASSIFICATION	1.6006591889733467E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999271864967088	WITHOUT_CLASSIFICATION	7.281350329128023E-5	DOCUMENTATION
// The optional SQL string defined in the where attribute	WITHOUT_CLASSIFICATION	0.9999992866370455	WITHOUT_CLASSIFICATION	7.133629545712693E-7	DOCUMENTATION
//information about lazy properties of this class	WITHOUT_CLASSIFICATION	0.9999966518092197	WITHOUT_CLASSIFICATION	3.3481907801826584E-6	DOCUMENTATION
//information about all properties in class hierarchy	WITHOUT_CLASSIFICATION	0.9999946498805026	WITHOUT_CLASSIFICATION	5.35011949738484E-6	DOCUMENTATION
//information about all columns/formulas in class hierarchy	WITHOUT_CLASSIFICATION	0.9999938309494005	WITHOUT_CLASSIFICATION	6.169050599426707E-6	DOCUMENTATION
// dynamic filters attached to the class-level	WITHOUT_CLASSIFICATION	0.9999993047120025	WITHOUT_CLASSIFICATION	6.952879975194345E-7	DOCUMENTATION
// SQL strings	WITHOUT_CLASSIFICATION	0.9999941482105627	WITHOUT_CLASSIFICATION	5.851789437373576E-6	DOCUMENTATION
// for objects that came in via update()	WITHOUT_CLASSIFICATION	0.9999977065652105	WITHOUT_CLASSIFICATION	2.2934347894944295E-6	DOCUMENTATION
// PROPERTIES	WITHOUT_CLASSIFICATION	0.9999634827167975	WITHOUT_CLASSIFICATION	3.6517283202491375E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999271864967088	WITHOUT_CLASSIFICATION	7.281350329128023E-5	DOCUMENTATION
// IDENTIFIER	WITHOUT_CLASSIFICATION	0.9999556848347564	WITHOUT_CLASSIFICATION	4.431516524362123E-5	DOCUMENTATION
// VERSION	WITHOUT_CLASSIFICATION	0.9999804238174885	WITHOUT_CLASSIFICATION	1.957618251146929E-5	DOCUMENTATION
//WHERE STRING	WITHOUT_CLASSIFICATION	0.999859596669429	WITHOUT_CLASSIFICATION	1.4040333057098187E-4	DOCUMENTATION
// SUBCLASS PROPERTY CLOSURE	WITHOUT_CLASSIFICATION	0.9999557659007591	WITHOUT_CLASSIFICATION	4.423409924085816E-5	DOCUMENTATION
//before add :-)	WITHOUT_CLASSIFICATION	0.9999554921716072	WITHOUT_CLASSIFICATION	4.450782839282434E-5	DOCUMENTATION
// Handle any filters applied to the class level	WITHOUT_CLASSIFICATION	0.9999993278979128	WITHOUT_CLASSIFICATION	6.721020872258974E-7	DOCUMENTATION
// only one-to-one is lazy fetched	WITHOUT_CLASSIFICATION	0.9999977444475164	WITHOUT_CLASSIFICATION	2.255552483567012E-6	DOCUMENTATION
//note early exit here:	WITHOUT_CLASSIFICATION	0.999980084841789	WITHOUT_CLASSIFICATION	1.991515821098351E-5	DOCUMENTATION
// object have been loaded with setReadOnly(true); HHH-2236	WITHOUT_CLASSIFICATION	0.9999987546447164	WITHOUT_CLASSIFICATION	1.2453552835614658E-6	DOCUMENTATION
// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!	WITHOUT_CLASSIFICATION	0.9999988401225297	WITHOUT_CLASSIFICATION	1.1598774701919594E-6	DOCUMENTATION
//strip leading ", "	WITHOUT_CLASSIFICATION	0.9999901563703187	WITHOUT_CLASSIFICATION	9.843629681337668E-6	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999906686586365	WITHOUT_CLASSIFICATION	9.331341363505028E-6	DOCUMENTATION
//otherwise return the "hydrated" state (ie. associations are not resolved)	WITHOUT_CLASSIFICATION	0.9999978543052106	WITHOUT_CLASSIFICATION	2.1456947894588844E-6	DOCUMENTATION
//null owner ok??	WITHOUT_CLASSIFICATION	0.9999346620272253	WITHOUT_CLASSIFICATION	6.533797277475662E-5	DOCUMENTATION
// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...	WITHOUT_CLASSIFICATION	0.999997489664546	WITHOUT_CLASSIFICATION	2.510335453842349E-6	DOCUMENTATION
// Create a new FROM node for the referenced class.	WITHOUT_CLASSIFICATION	0.9999953776470148	WITHOUT_CLASSIFICATION	4.622352985144768E-6	DOCUMENTATION
// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...	WITHOUT_CLASSIFICATION	0.9999984656911908	WITHOUT_CLASSIFICATION	1.5343088093171528E-6	DOCUMENTATION
// performance op to avoid the array search	WITHOUT_CLASSIFICATION	0.9999985624616505	WITHOUT_CLASSIFICATION	1.4375383494745653E-6	DOCUMENTATION
// properly handle property-ref-based associations	WITHOUT_CLASSIFICATION	0.9999993276762882	WITHOUT_CLASSIFICATION	6.723237117831626E-7	DOCUMENTATION
//Enable for HHH-440, which we don't like:	WITHOUT_CLASSIFICATION	0.9999858562558804	WITHOUT_CLASSIFICATION	1.4143744119455664E-5	DOCUMENTATION
// ALIASES	WITHOUT_CLASSIFICATION	0.9999801819442337	WITHOUT_CLASSIFICATION	1.9818055766315433E-5	DOCUMENTATION
// aliases named identifier ( alias.idname )	WITHOUT_CLASSIFICATION	0.999996070543217	WITHOUT_CLASSIFICATION	3.9294567828998145E-6	DOCUMENTATION
// aliases for composite-id's	WITHOUT_CLASSIFICATION	0.9999980864575758	WITHOUT_CLASSIFICATION	1.91354242415886E-6	DOCUMENTATION
// Fetch embedded identifiers propertynames from the "virtual" identifier component	WITHOUT_CLASSIFICATION	0.9999990032161955	WITHOUT_CLASSIFICATION	9.967838044499306E-7	DOCUMENTATION
// embedded composite ids ( alias.idname1, alias.idname2 )	WITHOUT_CLASSIFICATION	0.9999986588645328	WITHOUT_CLASSIFICATION	1.3411354673047904E-6	DOCUMENTATION
// TODO: skip formulas?	WITHOUT_CLASSIFICATION	0.999958870298286	WITHOUT_CLASSIFICATION	4.11297017139024E-5	DOCUMENTATION
//don't need filters for the static loaders	WITHOUT_CLASSIFICATION	0.9999959565176626	WITHOUT_CLASSIFICATION	4.04348233741924E-6	DOCUMENTATION
//do two passes, for collection property-ref!	WITHOUT_CLASSIFICATION	0.9999959813903878	WITHOUT_CLASSIFICATION	4.018609612097889E-6	DOCUMENTATION
// select the correct row by either pk or rowid	WITHOUT_CLASSIFICATION	0.9999980564348475	WITHOUT_CLASSIFICATION	1.9435651526024947E-6	DOCUMENTATION
//TODO: eventually, rowIdName[j]	WITHOUT_CLASSIFICATION	0.9998769876599309	WITHOUT_CLASSIFICATION	1.2301234006908442E-4	DOCUMENTATION
// this is a property of the table, which we are updating	WITHOUT_CLASSIFICATION	0.9999996441633112	WITHOUT_CLASSIFICATION	3.558366887234489E-7	DOCUMENTATION
// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression	WITHOUT_CLASSIFICATION	0.9999995883861921	WITHOUT_CLASSIFICATION	4.116138080279541E-7	DOCUMENTATION
// we are using "all" or "dirty" property-based optimistic locking	WITHOUT_CLASSIFICATION	0.9999986039797198	WITHOUT_CLASSIFICATION	1.3960202801500268E-6	DOCUMENTATION
// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here	WITHOUT_CLASSIFICATION	0.9999994296323529	WITHOUT_CLASSIFICATION	5.703676470681516E-7	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999993194032029	WITHOUT_CLASSIFICATION	6.805967971815721E-7	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999982606642107	WITHOUT_CLASSIFICATION	1.7393357893558698E-6	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999978372087316	WITHOUT_CLASSIFICATION	2.1627912684333263E-6	DOCUMENTATION
// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999995795368805	WITHOUT_CLASSIFICATION	4.2046311947183227E-7	DOCUMENTATION
// add normal properties	WITHOUT_CLASSIFICATION	0.9999982606642107	WITHOUT_CLASSIFICATION	1.7393357893558698E-6	DOCUMENTATION
// this property belongs on the table and is to be inserted	WITHOUT_CLASSIFICATION	0.9999993194032029	WITHOUT_CLASSIFICATION	6.805967971815721E-7	DOCUMENTATION
// add the discriminator	WITHOUT_CLASSIFICATION	0.9999978372087316	WITHOUT_CLASSIFICATION	2.1627912684333263E-6	DOCUMENTATION
// add the primary key	WITHOUT_CLASSIFICATION	0.9999970029946996	WITHOUT_CLASSIFICATION	2.9970053005045183E-6	DOCUMENTATION
// delegate already handles PK columns	WITHOUT_CLASSIFICATION	0.9999990132628946	WITHOUT_CLASSIFICATION	9.867371053440216E-7	DOCUMENTATION
// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param	WITHOUT_CLASSIFICATION	0.9999998593696698	WITHOUT_CLASSIFICATION	1.406303302460609E-7	DOCUMENTATION
// Render the SQL query	WITHOUT_CLASSIFICATION	0.9999953820873672	WITHOUT_CLASSIFICATION	4.617912632933361E-6	DOCUMENTATION
// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state	WITHOUT_CLASSIFICATION	0.9999999196733239	WITHOUT_CLASSIFICATION	8.03266760963395E-8	DOCUMENTATION
// TODO : shouldnt inserts be Expectations.NONE?	WITHOUT_CLASSIFICATION	0.9999970996093472	WITHOUT_CLASSIFICATION	2.900390652686918E-6	DOCUMENTATION
//don't bother trying to update, we know there is no row there yet	WITHOUT_CLASSIFICATION	0.999995959777469	WITHOUT_CLASSIFICATION	4.040222530965892E-6	DOCUMENTATION
//if all fields are null, we might need to delete existing row	WITHOUT_CLASSIFICATION	0.9999929623617716	WITHOUT_CLASSIFICATION	7.037638228365873E-6	DOCUMENTATION
//there is probably a row there, so try to update //if no rows were updated, we will find out	WITHOUT_CLASSIFICATION	0.999996280140047	WITHOUT_CLASSIFICATION	3.719859952960416E-6	DOCUMENTATION
//note: updates to joined tables can't be batched...	WITHOUT_CLASSIFICATION	0.9999955938415163	WITHOUT_CLASSIFICATION	4.40615848370426E-6	DOCUMENTATION
// starting index	WITHOUT_CLASSIFICATION	0.9999973497926374	WITHOUT_CLASSIFICATION	2.6502073625335163E-6	DOCUMENTATION
//Now write the values of fields onto the prepared statement	WITHOUT_CLASSIFICATION	0.9999982244339712	WITHOUT_CLASSIFICATION	1.7755660288327907E-6	DOCUMENTATION
// Write any appropriate versioning conditional parameters	WITHOUT_CLASSIFICATION	0.9999984624921787	WITHOUT_CLASSIFICATION	1.5375078213489653E-6	DOCUMENTATION
//Render the SQL query	WITHOUT_CLASSIFICATION	0.9999783318997804	WITHOUT_CLASSIFICATION	2.166810021975665E-5	DOCUMENTATION
// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued	WITHOUT_CLASSIFICATION	0.9999995014784752	WITHOUT_CLASSIFICATION	4.985215249155018E-7	DOCUMENTATION
// We should use the _current_ object state (ie. after any updates that occurred during flush)	WITHOUT_CLASSIFICATION	0.9999989360267374	WITHOUT_CLASSIFICATION	1.063973262615389E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.999999855559011	WITHOUT_CLASSIFICATION	1.4444098888812257E-7	DOCUMENTATION
//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	WITHOUT_CLASSIFICATION	0.9999942516151891	WITHOUT_CLASSIFICATION	5.748384811011916E-6	DOCUMENTATION
// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type	WITHOUT_CLASSIFICATION	0.9999997553126561	WITHOUT_CLASSIFICATION	2.4468734394516817E-7	DOCUMENTATION
// For the case of dynamic-update="true", we need to generate the UPDATE SQL	WITHOUT_CLASSIFICATION	0.9999985171473273	WITHOUT_CLASSIFICATION	1.4828526725988884E-6	DOCUMENTATION
// don't need to check laziness (dirty checking algorithm handles that)	WITHOUT_CLASSIFICATION	0.999999234575461	WITHOUT_CLASSIFICATION	7.654245389596933E-7	DOCUMENTATION
// For the case of dynamic-update="false", or no snapshot, we use the static SQL	WITHOUT_CLASSIFICATION	0.9999986798989173	WITHOUT_CLASSIFICATION	1.3201010827765255E-6	DOCUMENTATION
// if not "get", then try "is"	WITHOUT_CLASSIFICATION	0.999997493127968	WITHOUT_CLASSIFICATION	2.506872031954419E-6	DOCUMENTATION
// Now update only the tables with dirty properties (and the table with the version number)	WITHOUT_CLASSIFICATION	0.9999988469739396	WITHOUT_CLASSIFICATION	1.1530260604141901E-6	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999985307934312	WITHOUT_CLASSIFICATION	1.4692065687829104E-6	DOCUMENTATION
// For the case of dynamic-insert="true", we need to generate the INSERT SQL	WITHOUT_CLASSIFICATION	0.9999985307934312	WITHOUT_CLASSIFICATION	1.4692065687829104E-6	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999984361386385	WITHOUT_CLASSIFICATION	1.5638613615279314E-6	DOCUMENTATION
// For the case of dynamic-insert="false", use the static SQL	WITHOUT_CLASSIFICATION	0.9999984361386385	WITHOUT_CLASSIFICATION	1.5638613615279314E-6	DOCUMENTATION
// not supported	WITHOUT_CLASSIFICATION	0.9999939606420122	WITHOUT_CLASSIFICATION	6.039357987730619E-6	DOCUMENTATION
// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.999999855559011	WITHOUT_CLASSIFICATION	1.4444098888812257E-7	DOCUMENTATION
// we need to utilize dynamic delete statements	WITHOUT_CLASSIFICATION	0.999997344006577	WITHOUT_CLASSIFICATION	2.655993422988776E-6	DOCUMENTATION
// otherwise, utilize the static delete statements	WITHOUT_CLASSIFICATION	0.9999989711288082	WITHOUT_CLASSIFICATION	1.0288711918077668E-6	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999687703015024	WITHOUT_CLASSIFICATION	3.12296984976618E-5	DOCUMENTATION
//just a performance opt!	WITHOUT_CLASSIFICATION	0.9999687703015024	WITHOUT_CLASSIFICATION	3.12296984976618E-5	DOCUMENTATION
//all joins join to the pk of the driving table	WITHOUT_CLASSIFICATION	0.9999947884026372	WITHOUT_CLASSIFICATION	5.211597362747679E-6	DOCUMENTATION
//notice that we skip the first table; it is the driving table!	WITHOUT_CLASSIFICATION	0.9999975041995164	WITHOUT_CLASSIFICATION	2.4958004836694475E-6	DOCUMENTATION
//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables	WITHOUT_CLASSIFICATION	0.9999969874550383	WITHOUT_CLASSIFICATION	3.0125449617800092E-6	DOCUMENTATION
//skip the driving table	WITHOUT_CLASSIFICATION	0.9999939568102437	WITHOUT_CLASSIFICATION	6.043189756329945E-6	DOCUMENTATION
//get 'em in the right order (not that it really matters)	WITHOUT_CLASSIFICATION	0.9999906067985023	WITHOUT_CLASSIFICATION	9.393201497830468E-6	DOCUMENTATION
// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases	WITHOUT_CLASSIFICATION	0.9999998849425586	WITHOUT_CLASSIFICATION	1.1505744141193428E-7	DOCUMENTATION
//render the where and from parts	WITHOUT_CLASSIFICATION	0.9999810480063349	WITHOUT_CLASSIFICATION	1.8951993665122205E-5	DOCUMENTATION
//we *could* regerate this inside each called method!	WITHOUT_CLASSIFICATION	0.9999982810198236	WITHOUT_CLASSIFICATION	1.7189801765040001E-6	DOCUMENTATION
//now render the joins	WITHOUT_CLASSIFICATION	0.9999825123073403	WITHOUT_CLASSIFICATION	1.7487692659734576E-5	DOCUMENTATION
// This will add the new from element to the origin.	WITHOUT_CLASSIFICATION	0.9999983916986062	WITHOUT_CLASSIFICATION	1.6083013938850535E-6	DOCUMENTATION
//now render the select clause	WITHOUT_CLASSIFICATION	0.9999898967009483	WITHOUT_CLASSIFICATION	1.0103299051616125E-5	DOCUMENTATION
//now tie it all together	WITHOUT_CLASSIFICATION	0.9999862836399642	WITHOUT_CLASSIFICATION	1.3716360035664922E-5	DOCUMENTATION
//insert/update/delete SQL	WITHOUT_CLASSIFICATION	0.9999917090985657	WITHOUT_CLASSIFICATION	8.290901434255865E-6	DOCUMENTATION
//select SQL	WITHOUT_CLASSIFICATION	0.9999620774436115	WITHOUT_CLASSIFICATION	3.7922556388479025E-5	DOCUMENTATION
//no need to check laziness, dirty checking handles that	WITHOUT_CLASSIFICATION	0.999995833214476	WITHOUT_CLASSIFICATION	4.166785523986595E-6	DOCUMENTATION
// Fully resolve the map reference, create implicit joins.	WITHOUT_CLASSIFICATION	0.9999975058376954	WITHOUT_CLASSIFICATION	2.4941623046251893E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999898873551574	WITHOUT_CLASSIFICATION	1.0112644842654821E-5	DOCUMENTATION
// The basic implementation is to simply use the node's text	WITHOUT_CLASSIFICATION	0.9999996699811662	WITHOUT_CLASSIFICATION	3.3001883378748366E-7	DOCUMENTATION
// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.	WITHOUT_CLASSIFICATION	0.9999997757887032	WITHOUT_CLASSIFICATION	2.2421129674179605E-7	DOCUMENTATION
// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.	WITHOUT_CLASSIFICATION	0.9999992498580413	WITHOUT_CLASSIFICATION	7.501419586220004E-7	DOCUMENTATION
// check the version unsaved-value, if appropriate	WITHOUT_CLASSIFICATION	0.999999592155017	WITHOUT_CLASSIFICATION	4.0784498293827184E-7	DOCUMENTATION
// let this take precedence if defined, since it works for // assigned identifiers	WITHOUT_CLASSIFICATION	0.9999993728010738	WITHOUT_CLASSIFICATION	6.271989261870376E-7	DOCUMENTATION
// check the id unsaved-value	WITHOUT_CLASSIFICATION	0.9999988612999375	WITHOUT_CLASSIFICATION	1.13870006255382E-6	DOCUMENTATION
// check to see if it is in the second-level cache	WITHOUT_CLASSIFICATION	0.9999993106253601	WITHOUT_CLASSIFICATION	6.893746399155752E-7	DOCUMENTATION
///////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9996996145723421	WITHOUT_CLASSIFICATION	3.0038542765793057E-4	DOCUMENTATION
// For property references generate <tablealias>.<columnname> as <projectionalias>	WITHOUT_CLASSIFICATION	0.9999959386227246	WITHOUT_CLASSIFICATION	4.061377275302017E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999271864967088	WITHOUT_CLASSIFICATION	7.281350329128023E-5	DOCUMENTATION
//if there is no resulting row, return null	WITHOUT_CLASSIFICATION	0.9999906686586365	WITHOUT_CLASSIFICATION	9.331341363505028E-6	DOCUMENTATION
//force immediate execution of the insert	WITHOUT_CLASSIFICATION	0.9999945794902269	WITHOUT_CLASSIFICATION	5.420509773245272E-6	DOCUMENTATION
// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.	WITHOUT_CLASSIFICATION	0.999999694058028	WITHOUT_CLASSIFICATION	3.059419720412451E-7	DOCUMENTATION
// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999891509591646	WITHOUT_CLASSIFICATION	1.0849040835353888E-5	DOCUMENTATION
// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999957477095398	WITHOUT_CLASSIFICATION	4.252290460214426E-6	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9999295043731997	WITHOUT_CLASSIFICATION	7.049562680031961E-5	DOCUMENTATION
//cannot occur	WITHOUT_CLASSIFICATION	0.9999295043731997	WITHOUT_CLASSIFICATION	7.049562680031961E-5	DOCUMENTATION
// only carry on if the method has no parameters	WITHOUT_CLASSIFICATION	0.9999990047521843	WITHOUT_CLASSIFICATION	9.95247815669956E-7	DOCUMENTATION
// try "get"	WITHOUT_CLASSIFICATION	0.9999871854143854	WITHOUT_CLASSIFICATION	1.2814585614746044E-5	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999930043866813	WITHOUT_CLASSIFICATION	6.995613318779892E-6	DOCUMENTATION
// do nothing...	WITHOUT_CLASSIFICATION	0.9999930043866813	WITHOUT_CLASSIFICATION	6.995613318779892E-6	DOCUMENTATION
// should be safe to only ever expect EntityPersister references here	WITHOUT_CLASSIFICATION	0.9999963925228412	WITHOUT_CLASSIFICATION	3.6074771588585493E-6	DOCUMENTATION
// this page intentionally left blank :)	WITHOUT_CLASSIFICATION	0.9999986591292886	WITHOUT_CLASSIFICATION	1.3408707113681274E-6	DOCUMENTATION
// do not do anything	WITHOUT_CLASSIFICATION	0.9999904894018371	WITHOUT_CLASSIFICATION	9.510598162856119E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999952939988079	WITHOUT_CLASSIFICATION	4.706001192130379E-6	DOCUMENTATION
//cant instantiate	WITHOUT_CLASSIFICATION	0.9999812564268921	WITHOUT_CLASSIFICATION	1.874357310791419E-5	DOCUMENTATION
//if it is a property of an embedded component, invoke on the "identifier"	WITHOUT_CLASSIFICATION	0.9999975461138837	WITHOUT_CLASSIFICATION	2.453886116334706E-6	DOCUMENTATION
// otherwise:	WITHOUT_CLASSIFICATION	0.9999927504133236	WITHOUT_CLASSIFICATION	7.24958667645575E-6	DOCUMENTATION
// skip finalize methods	WITHOUT_CLASSIFICATION	0.9999982165761747	WITHOUT_CLASSIFICATION	1.7834238252705737E-6	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999992859511435	WITHOUT_CLASSIFICATION	7.140488564370956E-7	DOCUMENTATION
// note: interfaces is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999992859511435	WITHOUT_CLASSIFICATION	7.140488564370956E-7	DOCUMENTATION
// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.	WITHOUT_CLASSIFICATION	0.9999998197562621	WITHOUT_CLASSIFICATION	1.8024373804756147E-7	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999970233040979	WITHOUT_CLASSIFICATION	2.976695902148654E-6	DOCUMENTATION
// while constructor is running	WITHOUT_CLASSIFICATION	0.9999970233040979	WITHOUT_CLASSIFICATION	2.976695902148654E-6	DOCUMENTATION
// note: interface is assumed to already contain HibernateProxy.class	WITHOUT_CLASSIFICATION	0.9999993180111725	WITHOUT_CLASSIFICATION	6.819888276043066E-7	DOCUMENTATION
// interfaces // arguments	WITHOUT_CLASSIFICATION	0.9999951764359206	WITHOUT_CLASSIFICATION	4.8235640793734735E-6	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9995359081089249	WITHOUT_CLASSIFICATION	4.6409189107511785E-4	DOCUMENTATION
// Get the caller	WITHOUT_CLASSIFICATION	0.9999950344400071	WITHOUT_CLASSIFICATION	4.965559992811429E-6	DOCUMENTATION
// Get the caller principals	WITHOUT_CLASSIFICATION	0.9999978791758194	WITHOUT_CLASSIFICATION	2.120824180479443E-6	DOCUMENTATION
//private static final Alias DEFAULT_ALIAS = new Alias(10, null);	WITHOUT_CLASSIFICATION	0.9999972778181432	WITHOUT_CLASSIFICATION	2.7221818567354603E-6	DOCUMENTATION
// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally	WITHOUT_CLASSIFICATION	0.9999994174306519	WITHOUT_CLASSIFICATION	5.825693480462306E-7	DOCUMENTATION
//if the identifier is quoted, remove the quotes	WITHOUT_CLASSIFICATION	0.9999924409268285	WITHOUT_CLASSIFICATION	7.5590731716001605E-6	DOCUMENTATION
//truncate the identifier to the max alias length, less the suffix length	WITHOUT_CLASSIFICATION	0.9999974218321109	WITHOUT_CLASSIFICATION	2.5781678889982496E-6	DOCUMENTATION
//full joins are not supported.. yet!	WITHOUT_CLASSIFICATION	0.9999891978806014	WITHOUT_CLASSIFICATION	1.0802119398655836E-5	DOCUMENTATION
// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9999996899188012	WITHOUT_CLASSIFICATION	3.1008119886621955E-7	DOCUMENTATION
// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters	WITHOUT_CLASSIFICATION	0.999998868850983	WITHOUT_CLASSIFICATION	1.1311490170558139E-6	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9997297305056988	WITHOUT_CLASSIFICATION	2.7026949430117373E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9997297305056988	WITHOUT_CLASSIFICATION	2.7026949430117373E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9997297305056988	WITHOUT_CLASSIFICATION	2.7026949430117373E-4	DOCUMENTATION
//$NON-NLS-1	WITHOUT_CLASSIFICATION	0.9997297305056988	WITHOUT_CLASSIFICATION	2.7026949430117373E-4	DOCUMENTATION
// strip off any leading 'and' token	WITHOUT_CLASSIFICATION	0.9999983046197864	WITHOUT_CLASSIFICATION	1.6953802136253149E-6	DOCUMENTATION
// if the condition is not already there...	WITHOUT_CLASSIFICATION	0.9999995194594775	WITHOUT_CLASSIFICATION	4.805405224087795E-7	DOCUMENTATION
//dontSpace.add("'");	WITHOUT_CLASSIFICATION	0.9999512513695067	WITHOUT_CLASSIFICATION	4.874863049338778E-5	DOCUMENTATION
//for MySQL	WITHOUT_CLASSIFICATION	0.999859934111464	WITHOUT_CLASSIFICATION	1.4006588853591654E-4	DOCUMENTATION
//HashMap columnsUnique = new HashMap();	WITHOUT_CLASSIFICATION	0.9999914079011688	WITHOUT_CLASSIFICATION	8.59209883131691E-6	DOCUMENTATION
//null caused some problems	WITHOUT_CLASSIFICATION	0.999981665644586	WITHOUT_CLASSIFICATION	1.8334355413917116E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998981745719934	WITHOUT_CLASSIFICATION	1.018254280066226E-4	DOCUMENTATION
//not sure if this would ever be null but wanted to be careful	WITHOUT_CLASSIFICATION	0.9999914959526409	WITHOUT_CLASSIFICATION	8.50404735905191E-6	DOCUMENTATION
//even on inverse="true"	WITHOUT_CLASSIFICATION	0.9999700815753477	WITHOUT_CLASSIFICATION	2.9918424652272053E-5	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998981745719934	WITHOUT_CLASSIFICATION	1.018254280066226E-4	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998981745719934	WITHOUT_CLASSIFICATION	1.018254280066226E-4	DOCUMENTATION
// If true then execute db updates, otherwise just generate and display updates	WITHOUT_CLASSIFICATION	0.9999994545604889	WITHOUT_CLASSIFICATION	5.454395112160059E-7	DOCUMENTATION
// we only release the connection	WITHOUT_CLASSIFICATION	0.9999980267779254	WITHOUT_CLASSIFICATION	1.9732220746591477E-6	DOCUMENTATION
// deprecated option...	WITHOUT_CLASSIFICATION	0.9999972905367336	WITHOUT_CLASSIFICATION	2.709463266418565E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999927887504427	WITHOUT_CLASSIFICATION	7.211249557220599E-6	DOCUMENTATION
//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback	WITHOUT_CLASSIFICATION	0.9999978228422777	WITHOUT_CLASSIFICATION	2.17715772237815E-6	DOCUMENTATION
// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)	WITHOUT_CLASSIFICATION	0.9999987795603411	WITHOUT_CLASSIFICATION	1.220439658925522E-6	DOCUMENTATION
// Create an DotNode AST for the path and resolve it.	WITHOUT_CLASSIFICATION	0.9999972400420304	WITHOUT_CLASSIFICATION	2.759957969563469E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999927887504427	WITHOUT_CLASSIFICATION	7.211249557220599E-6	DOCUMENTATION
//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)	WITHOUT_CLASSIFICATION	0.9999987861118799	WITHOUT_CLASSIFICATION	1.2138881201196091E-6	DOCUMENTATION
// swallow it, and continue to roll back JTA transaction	WITHOUT_CLASSIFICATION	0.9999983073338896	WITHOUT_CLASSIFICATION	1.6926661104030653E-6	DOCUMENTATION
// so the transaction is already rolled back, by JTA spec	WITHOUT_CLASSIFICATION	0.9999996861530785	WITHOUT_CLASSIFICATION	3.1384692139245193E-7	DOCUMENTATION
// this method is a noop if there is a Synchronization!	WITHOUT_CLASSIFICATION	0.9999993758156244	WITHOUT_CLASSIFICATION	6.241843756680854E-7	DOCUMENTATION
// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join	WITHOUT_CLASSIFICATION	0.9999994286281582	WITHOUT_CLASSIFICATION	5.713718417486565E-7	DOCUMENTATION
// WebSphere, however, is not a sane JEE/JTA container...	WITHOUT_CLASSIFICATION	0.9999985281672341	WITHOUT_CLASSIFICATION	1.4718327659025792E-6	DOCUMENTATION
// for sane JEE/JTA containers, the transaction itself functions as its identifier...	WITHOUT_CLASSIFICATION	0.9999993738721661	WITHOUT_CLASSIFICATION	6.261278339213152E-7	DOCUMENTATION
//swallow, the transaction was finished	WITHOUT_CLASSIFICATION	0.9999949273482835	WITHOUT_CLASSIFICATION	5.072651716456076E-6	DOCUMENTATION
// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999990424474521	WITHOUT_CLASSIFICATION	9.575525478851072E-7	DOCUMENTATION
// Create the join element under the from element.	WITHOUT_CLASSIFICATION	0.9999964358142103	WITHOUT_CLASSIFICATION	3.5641857897838893E-6	DOCUMENTATION
// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999986668244564	WITHOUT_CLASSIFICATION	1.333175543540479E-6	DOCUMENTATION
// map of EntityMode -> Tuplizer	WITHOUT_CLASSIFICATION	0.9999977552808911	WITHOUT_CLASSIFICATION	2.2447191088927754E-6	DOCUMENTATION
// this is a virtual id property...	WITHOUT_CLASSIFICATION	0.9999982786688387	WITHOUT_CLASSIFICATION	1.721331161198907E-6	DOCUMENTATION
//this one needed only for guessEntityMode()	WITHOUT_CLASSIFICATION	0.9999828078359478	WITHOUT_CLASSIFICATION	1.7192164052169758E-5	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.99999945912693	WITHOUT_CLASSIFICATION	5.408730699951198E-7	DOCUMENTATION
// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel	WITHOUT_CLASSIFICATION	0.999998017705894	WITHOUT_CLASSIFICATION	1.982294105988013E-6	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999997002582354	WITHOUT_CLASSIFICATION	2.9974176453981886E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.99999763701938	WITHOUT_CLASSIFICATION	2.362980619928329E-6	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999994665980524	WITHOUT_CLASSIFICATION	5.334019476349541E-7	DOCUMENTATION
// Build the dynamic-map tuplizer...	WITHOUT_CLASSIFICATION	0.99999763701938	WITHOUT_CLASSIFICATION	2.362980619928329E-6	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999991810993264	WITHOUT_CLASSIFICATION	8.189006735269429E-7	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999993438852113	WITHOUT_CLASSIFICATION	6.561147886449388E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// cached for efficiency...	WITHOUT_CLASSIFICATION	0.9999943404030095	WITHOUT_CLASSIFICATION	5.659596990432394E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//it was not embedded, so the argument is just an id	WITHOUT_CLASSIFICATION	0.9999892754122983	WITHOUT_CLASSIFICATION	1.0724587701655461E-5	DOCUMENTATION
// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available	WITHOUT_CLASSIFICATION	0.9999997002582354	WITHOUT_CLASSIFICATION	2.9974176453981886E-7	DOCUMENTATION
// then dom4j tuplizer, if dom4j representation is available	WITHOUT_CLASSIFICATION	0.9999994665980524	WITHOUT_CLASSIFICATION	5.334019476349541E-7	DOCUMENTATION
// put the "standard" tuplizers into the tuplizer map first	WITHOUT_CLASSIFICATION	0.9999991810993264	WITHOUT_CLASSIFICATION	8.189006735269429E-7	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999993431506302	WITHOUT_CLASSIFICATION	6.568493696910411E-7	DOCUMENTATION
//return currentId;	WITHOUT_CLASSIFICATION	0.9999237588702101	WITHOUT_CLASSIFICATION	7.624112978986435E-5	DOCUMENTATION
//reset the id	WITHOUT_CLASSIFICATION	0.9999848715260766	WITHOUT_CLASSIFICATION	1.5128473923313521E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//reset the version	WITHOUT_CLASSIFICATION	0.9999907318069667	WITHOUT_CLASSIFICATION	9.268193033158534E-6	DOCUMENTATION
// the default is to simply not lazy fetch properties for now...	WITHOUT_CLASSIFICATION	0.9999996618972576	WITHOUT_CLASSIFICATION	3.3810274230320215E-7	DOCUMENTATION
// Add the second join, the one that ends in the destination table.	WITHOUT_CLASSIFICATION	0.9999990953743707	WITHOUT_CLASSIFICATION	9.046256294106269E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999898873551574	WITHOUT_CLASSIFICATION	1.0112644842654821E-5	DOCUMENTATION
// found a ctor, but it was not publicly accessible so try to request accessibility	WITHOUT_CLASSIFICATION	0.9999993438852113	WITHOUT_CLASSIFICATION	6.561147886449388E-7	DOCUMENTATION
// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy	WITHOUT_CLASSIFICATION	0.9999988099912106	WITHOUT_CLASSIFICATION	1.1900087893373021E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//not final because proxy factory creation can fail	WITHOUT_CLASSIFICATION	0.9999956071749188	WITHOUT_CLASSIFICATION	4.392825081286868E-6	DOCUMENTATION
// superclass entity-name	WITHOUT_CLASSIFICATION	0.9999969956871408	WITHOUT_CLASSIFICATION	3.004312859174565E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999898873551574	WITHOUT_CLASSIFICATION	1.0112644842654821E-5	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999271864967088	WITHOUT_CLASSIFICATION	7.281350329128023E-5	DOCUMENTATION
//init the aliases, after initing the constructornode	WITHOUT_CLASSIFICATION	0.999997052081632	WITHOUT_CLASSIFICATION	2.947918367860348E-6	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999898873551574	WITHOUT_CLASSIFICATION	1.0112644842654821E-5	DOCUMENTATION
// legacy behavior (with no abstract attribute specified)	WITHOUT_CLASSIFICATION	0.9999990714046252	WITHOUT_CLASSIFICATION	9.28595374919313E-7	DOCUMENTATION
// Get ready to start adding nodes.	WITHOUT_CLASSIFICATION	0.9999984979090906	WITHOUT_CLASSIFICATION	1.5020909093520522E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999271864967088	WITHOUT_CLASSIFICATION	7.281350329128023E-5	DOCUMENTATION
//note: this affects the return value!	WITHOUT_CLASSIFICATION	0.999984489451945	WITHOUT_CLASSIFICATION	1.5510548055064126E-5	DOCUMENTATION
// Need to account for allowable '_' within the variant	WITHOUT_CLASSIFICATION	0.9999984568938293	WITHOUT_CLASSIFICATION	1.543106170629776E-6	DOCUMENTATION
// Add the type to the list of returned sqlResultTypes.	WITHOUT_CLASSIFICATION	0.9999995401198195	WITHOUT_CLASSIFICATION	4.598801804716556E-7	DOCUMENTATION
// Collection Types:	WITHOUT_CLASSIFICATION	0.9999936919456917	WITHOUT_CLASSIFICATION	6.308054308347841E-6	DOCUMENTATION
// convenience methods relating to operations across arrays of types...	WITHOUT_CLASSIFICATION	0.9999992615993035	WITHOUT_CLASSIFICATION	7.384006964577885E-7	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999921602549747	WITHOUT_CLASSIFICATION	7.83974502523996E-6	DOCUMENTATION
//Blobs are ignored by merge()	WITHOUT_CLASSIFICATION	0.999991249840926	WITHOUT_CLASSIFICATION	8.750159074014323E-6	DOCUMENTATION
//value is the entity name	WITHOUT_CLASSIFICATION	0.9999908974765189	WITHOUT_CLASSIFICATION	9.10252348111286E-6	DOCUMENTATION
//EARLY EXIT!	WITHOUT_CLASSIFICATION	0.9998378277247765	WITHOUT_CLASSIFICATION	1.621722752234306E-4	DOCUMENTATION
// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().	WITHOUT_CLASSIFICATION	0.9999995943195084	WITHOUT_CLASSIFICATION	4.0568049176568607E-7	DOCUMENTATION
//TODO!	WITHOUT_CLASSIFICATION	0.9995359081089249	WITHOUT_CLASSIFICATION	4.6409189107511785E-4	DOCUMENTATION
//xml is the entity name	WITHOUT_CLASSIFICATION	0.9999870395195326	WITHOUT_CLASSIFICATION	1.2960480467441055E-5	DOCUMENTATION
//special case ... this is the leaf of the containment graph, even though not immutable	WITHOUT_CLASSIFICATION	0.9999971112359466	WITHOUT_CLASSIFICATION	2.8887640534803627E-6	DOCUMENTATION
//tolerates nulls	WITHOUT_CLASSIFICATION	0.9999868961244597	WITHOUT_CLASSIFICATION	1.3103875540419761E-5	DOCUMENTATION
/*sqlResultTypeList,*/	WITHOUT_CLASSIFICATION	0.9999638168388228	WITHOUT_CLASSIFICATION	3.6183161177132176E-5	DOCUMENTATION
// metaType is assumed to be single-column type	WITHOUT_CLASSIFICATION	0.9999993487290668	WITHOUT_CLASSIFICATION	6.512709331943736E-7	DOCUMENTATION
// Get all the select expressions (that we just generated) and render the select.	WITHOUT_CLASSIFICATION	0.9999990232810068	WITHOUT_CLASSIFICATION	9.767189932732864E-7	DOCUMENTATION
// Look through the FromElement's children to find any collections of values that should be fetched...	WITHOUT_CLASSIFICATION	0.9999994942357157	WITHOUT_CLASSIFICATION	5.057642843504513E-7	DOCUMENTATION
//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...	WITHOUT_CLASSIFICATION	0.9999909123666634	WITHOUT_CLASSIFICATION	9.087633336603739E-6	DOCUMENTATION
// Use the lower case function name. // Remember whether we're in a SELECT clause or not.	WITHOUT_CLASSIFICATION	0.999998618381374	WITHOUT_CLASSIFICATION	1.3816186260292458E-6	DOCUMENTATION
// IDENT might be the name of a class.	WITHOUT_CLASSIFICATION	0.9999958099491981	WITHOUT_CLASSIFICATION	4.190050801896311E-6	DOCUMENTATION
//TODO!!!	WITHOUT_CLASSIFICATION	0.9995368642962682	WITHOUT_CLASSIFICATION	4.6313570373171666E-4	DOCUMENTATION
//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999967685100687	WITHOUT_CLASSIFICATION	3.231489931352125E-6	DOCUMENTATION
//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only	WITHOUT_CLASSIFICATION	0.9999961067090369	WITHOUT_CLASSIFICATION	3.8932909630793585E-6	DOCUMENTATION
// both are Timestamps	WITHOUT_CLASSIFICATION	0.9999958929487838	WITHOUT_CLASSIFICATION	4.107051216246482E-6	DOCUMENTATION
// at least one is a plain old Date	WITHOUT_CLASSIFICATION	0.9999946223667535	WITHOUT_CLASSIFICATION	5.377633246467698E-6	DOCUMENTATION
//noop	WITHOUT_CLASSIFICATION	0.9998940976500336	WITHOUT_CLASSIFICATION	1.0590234996646827E-4	DOCUMENTATION
// if the corresponding SQL value is NULL, the reader we got is NULL as well	WITHOUT_CLASSIFICATION	0.9999992399323788	WITHOUT_CLASSIFICATION	7.600676210842292E-7	DOCUMENTATION
// Fetch Reader content up to the end - and put characters in a StringBuffer	WITHOUT_CLASSIFICATION	0.9999971308428113	WITHOUT_CLASSIFICATION	2.8691571886113847E-6	DOCUMENTATION
// Return StringBuffer content as a large String	WITHOUT_CLASSIFICATION	0.9999960617859358	WITHOUT_CLASSIFICATION	3.938214064235453E-6	DOCUMENTATION
//or Types.LONGVARCHAR?	WITHOUT_CLASSIFICATION	0.9999410756325138	WITHOUT_CLASSIFICATION	5.892436748610889E-5	DOCUMENTATION
//Not called at runtime so doesn't matter if its slow :)	WITHOUT_CLASSIFICATION	0.9999929146643995	WITHOUT_CLASSIFICATION	7.085335600509141E-6	DOCUMENTATION
//TODO	WITHOUT_CLASSIFICATION	0.9995600642342616	WITHOUT_CLASSIFICATION	4.399357657384433E-4	DOCUMENTATION
// Chop off the rest of the tree.	WITHOUT_CLASSIFICATION	0.9999932276803305	WITHOUT_CLASSIFICATION	6.772319669590735E-6	DOCUMENTATION
//different nullability rules for pk/fk	WITHOUT_CLASSIFICATION	0.9999584368949328	WITHOUT_CLASSIFICATION	4.156310506726545E-5	DOCUMENTATION
//cache this	WITHOUT_CLASSIFICATION	0.9999780173361811	WITHOUT_CLASSIFICATION	2.1982663818980562E-5	DOCUMENTATION
//only really need new array during semiresolve!	WITHOUT_CLASSIFICATION	0.9999860127718466	WITHOUT_CLASSIFICATION	1.3987228153385765E-5	DOCUMENTATION
// Forcefully remove leading ands from where fragments; the grammar will // handle adding them	WITHOUT_CLASSIFICATION	0.9999962646451735	WITHOUT_CLASSIFICATION	3.7353548264003633E-6	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9991295030996379	WITHOUT_CLASSIFICATION	8.704969003621158E-4	DOCUMENTATION
// Create a new FILTERS node as a parent of all filters	WITHOUT_CLASSIFICATION	0.9999975351959354	WITHOUT_CLASSIFICATION	2.464804064638781E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999271864967088	WITHOUT_CLASSIFICATION	7.281350329128023E-5	DOCUMENTATION
//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;	WITHOUT_CLASSIFICATION	0.9999968624396112	WITHOUT_CLASSIFICATION	3.1375603887997208E-6	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999557915328227	WITHOUT_CLASSIFICATION	4.420846717734237E-5	DOCUMENTATION
//nothing to do	WITHOUT_CLASSIFICATION	0.9999557915328227	WITHOUT_CLASSIFICATION	4.420846717734237E-5	DOCUMENTATION
// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...	WITHOUT_CLASSIFICATION	0.9999996242566266	WITHOUT_CLASSIFICATION	3.757433733616792E-7	DOCUMENTATION
//lobs cannot be compared	WITHOUT_CLASSIFICATION	0.9999921602549747	WITHOUT_CLASSIFICATION	7.83974502523996E-6	DOCUMENTATION
//not really necessary, I guess...	WITHOUT_CLASSIFICATION	0.9999892085185146	WITHOUT_CLASSIFICATION	1.0791481485412896E-5	DOCUMENTATION
//Clobs are ignored by merge() operation	WITHOUT_CLASSIFICATION	0.9999968860011131	WITHOUT_CLASSIFICATION	3.1139988869045915E-6	DOCUMENTATION
// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!	WITHOUT_CLASSIFICATION	0.9999989667472325	WITHOUT_CLASSIFICATION	1.0332527673533491E-6	DOCUMENTATION
// collections cannot be compared	WITHOUT_CLASSIFICATION	0.9999990223078165	WITHOUT_CLASSIFICATION	9.776921834780225E-7	DOCUMENTATION
//remember the uk value	WITHOUT_CLASSIFICATION	0.9999734871542127	WITHOUT_CLASSIFICATION	2.6512845787314025E-5	DOCUMENTATION
//NOOP	WITHOUT_CLASSIFICATION	0.9997973930628169	WITHOUT_CLASSIFICATION	2.026069371830861E-4	DOCUMENTATION
//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);	WITHOUT_CLASSIFICATION	0.9999953757242739	WITHOUT_CLASSIFICATION	4.624275726116296E-6	DOCUMENTATION
//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly	WITHOUT_CLASSIFICATION	0.9999983740560385	WITHOUT_CLASSIFICATION	1.6259439614179073E-6	DOCUMENTATION
// collections don't dirty an unversioned parent entity	WITHOUT_CLASSIFICATION	0.999997691245239	WITHOUT_CLASSIFICATION	2.3087547610055666E-6	DOCUMENTATION
// return false;	WITHOUT_CLASSIFICATION	0.9999951522095611	WITHOUT_CLASSIFICATION	4.847790438777937E-6	DOCUMENTATION
// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception	WITHOUT_CLASSIFICATION	0.9999994901427469	WITHOUT_CLASSIFICATION	5.098572531030152E-7	DOCUMENTATION
//NOTE: we avoid joining to the next table if the named property is just the foreign key value	WITHOUT_CLASSIFICATION	0.9999977619682401	WITHOUT_CLASSIFICATION	2.238031759832753E-6	DOCUMENTATION
// the key is the owning entity itself, so get the ID from the key	WITHOUT_CLASSIFICATION	0.9999987550359807	WITHOUT_CLASSIFICATION	1.2449640193805325E-6	DOCUMENTATION
// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...	WITHOUT_CLASSIFICATION	0.9999986894317301	WITHOUT_CLASSIFICATION	1.310568269961903E-6	DOCUMENTATION
//ignore subselect keywords	WITHOUT_CLASSIFICATION	0.9999923898343873	WITHOUT_CLASSIFICATION	7.610165612727536E-6	DOCUMENTATION
// copy elements into newly empty target collection	WITHOUT_CLASSIFICATION	0.9999993393159163	WITHOUT_CLASSIFICATION	6.606840837780568E-7	DOCUMENTATION
// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection	WITHOUT_CLASSIFICATION	0.9999987891533297	WITHOUT_CLASSIFICATION	1.2108466702848726E-6	DOCUMENTATION
// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...	WITHOUT_CLASSIFICATION	0.9999996784959151	WITHOUT_CLASSIFICATION	3.215040848884631E-7	DOCUMENTATION
// get the elements back into the target making sure to handle dirty flag	WITHOUT_CLASSIFICATION	0.999999330019051	WITHOUT_CLASSIFICATION	6.699809490883664E-7	DOCUMENTATION
// check if collection is currently being loaded	WITHOUT_CLASSIFICATION	0.9999984526149216	WITHOUT_CLASSIFICATION	1.547385078378694E-6	DOCUMENTATION
// check if it is already completely loaded, but unowned	WITHOUT_CLASSIFICATION	0.9999996650394571	WITHOUT_CLASSIFICATION	3.349605427791787E-7	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999995619553199	WITHOUT_CLASSIFICATION	4.380446800935708E-7	DOCUMENTATION
//TODO!!!!!!!	WITHOUT_CLASSIFICATION	0.9991295030996379	WITHOUT_CLASSIFICATION	8.704969003621158E-4	DOCUMENTATION
// create a new collection wrapper, to be initialized later	WITHOUT_CLASSIFICATION	0.9999992624282966	WITHOUT_CLASSIFICATION	7.375717034335908E-7	DOCUMENTATION
// Some JDBC drivers erroneously return an empty array here for a null DB value :/	WITHOUT_CLASSIFICATION	0.9999972749652282	WITHOUT_CLASSIFICATION	2.725034771940685E-6	DOCUMENTATION
// our column span is the number of columns in the PK	WITHOUT_CLASSIFICATION	0.999999092334226	WITHOUT_CLASSIFICATION	9.076657739694169E-7	DOCUMENTATION
//cannot batch fetch by unique key (property-ref associations)	WITHOUT_CLASSIFICATION	0.9999953980581369	WITHOUT_CLASSIFICATION	4.601941863132067E-6	DOCUMENTATION
// we already know current is not null...	WITHOUT_CLASSIFICATION	0.9999979152249112	WITHOUT_CLASSIFICATION	2.084775088815327E-6	DOCUMENTATION
// the ids are fully resolved, so compare them with isDirty(), not isModified()	WITHOUT_CLASSIFICATION	0.9999995732713406	WITHOUT_CLASSIFICATION	4.2672865944341636E-7	DOCUMENTATION
//the owner of the association is not the owner of the id	WITHOUT_CLASSIFICATION	0.9999935519742962	WITHOUT_CLASSIFICATION	6.448025703885899E-6	DOCUMENTATION
// ----------------------------------------------------------- Constructors	WITHOUT_CLASSIFICATION	0.9999906284602932	WITHOUT_CLASSIFICATION	9.371539706828969E-6	DOCUMENTATION
// ----------------------------------------------------- Instance Variables	WITHOUT_CLASSIFICATION	0.9999977199054857	WITHOUT_CLASSIFICATION	2.2800945142982807E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// --------------------------------------------------------- Public Methods	WITHOUT_CLASSIFICATION	0.9999954254343809	WITHOUT_CLASSIFICATION	4.574565619144632E-6	DOCUMENTATION
// Compare the two maps for equality	WITHOUT_CLASSIFICATION	0.9999976058797274	WITHOUT_CLASSIFICATION	2.3941202726209064E-6	DOCUMENTATION
// Simple tests that require no synchronization	WITHOUT_CLASSIFICATION	0.9999994740372333	WITHOUT_CLASSIFICATION	5.25962766697383E-7	DOCUMENTATION
//Sybase fail if we don't do that, sigh...	WITHOUT_CLASSIFICATION	0.9999941127030129	WITHOUT_CLASSIFICATION	5.887296987195408E-6	DOCUMENTATION
// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)	WITHOUT_CLASSIFICATION	0.9999989345674878	WITHOUT_CLASSIFICATION	1.0654325122402458E-6	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.999999844025598	WITHOUT_CLASSIFICATION	1.559744020576703E-7	DOCUMENTATION
// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders	WITHOUT_CLASSIFICATION	0.999999844025598	WITHOUT_CLASSIFICATION	1.559744020576703E-7	DOCUMENTATION
// try to "pretty print" it	WITHOUT_CLASSIFICATION	0.9999954314027001	WITHOUT_CLASSIFICATION	4.568597299888367E-6	DOCUMENTATION
// otherwise, just dump it	WITHOUT_CLASSIFICATION	0.999996324749906	WITHOUT_CLASSIFICATION	3.675250094099509E-6	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999901403077647	WITHOUT_CLASSIFICATION	9.85969223534637E-6	DOCUMENTATION
//its an interface so we can't really tell anything...	WITHOUT_CLASSIFICATION	0.9999901403077647	WITHOUT_CLASSIFICATION	9.85969223534637E-6	DOCUMENTATION
// use default behavior	WITHOUT_CLASSIFICATION	0.9999962829692932	WITHOUT_CLASSIFICATION	3.7170307067293538E-6	DOCUMENTATION
//NOTE: early return	WITHOUT_CLASSIFICATION	0.999947096975847	WITHOUT_CLASSIFICATION	5.2903024152871324E-5	DOCUMENTATION
// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries	WITHOUT_CLASSIFICATION	0.9999993136272042	WITHOUT_CLASSIFICATION	6.863727958244306E-7	DOCUMENTATION
// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere	WITHOUT_CLASSIFICATION	0.9999989426419601	WITHOUT_CLASSIFICATION	1.057358039926375E-6	DOCUMENTATION
// Clone //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999852978179398	WITHOUT_CLASSIFICATION	1.470218206029711E-5	DOCUMENTATION
// Serialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999928379663672	WITHOUT_CLASSIFICATION	7.162033632779001E-6	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999990414449139	WITHOUT_CLASSIFICATION	9.585550861535037E-7	DOCUMENTATION
// stream closed in the finally	WITHOUT_CLASSIFICATION	0.9999990414449139	WITHOUT_CLASSIFICATION	9.585550861535037E-7	DOCUMENTATION
// Deserialize //-----------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999945865893853	WITHOUT_CLASSIFICATION	5.413410614720311E-6	DOCUMENTATION
/* static methods only - hide constructor */	WITHOUT_CLASSIFICATION	0.9999974292174003	WITHOUT_CLASSIFICATION	2.5707825997807337E-6	DOCUMENTATION
/*&& !('_'==character)*/	WITHOUT_CLASSIFICATION	0.9999372315065196	WITHOUT_CLASSIFICATION	6.276849348040287E-5	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.999990513171579	WITHOUT_CLASSIFICATION	9.48682842089335E-6	DOCUMENTATION
// returnign null!	WITHOUT_CLASSIFICATION	0.999990513171579	WITHOUT_CLASSIFICATION	9.48682842089335E-6	DOCUMENTATION
// includes last '.'	WITHOUT_CLASSIFICATION	0.9999979696994487	WITHOUT_CLASSIFICATION	2.0303005513409658E-6	DOCUMENTATION
// +1 to include the following '.'	WITHOUT_CLASSIFICATION	0.999997635667428	WITHOUT_CLASSIFICATION	2.364332572054913E-6	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999995367211418	WITHOUT_CLASSIFICATION	4.632788580952695E-7	DOCUMENTATION
// first time we find match!	WITHOUT_CLASSIFICATION	0.9999971598462727	WITHOUT_CLASSIFICATION	2.8401537272631324E-6	DOCUMENTATION
// entityNames may now include slashes for the representations //classname may be an inner class	WITHOUT_CLASSIFICATION	0.9999994256243521	WITHOUT_CLASSIFICATION	5.743756478728777E-7	DOCUMENTATION
// wrapped iterators	WITHOUT_CLASSIFICATION	0.9999968374152267	WITHOUT_CLASSIFICATION	3.1625847733565023E-6	DOCUMENTATION
// index of current iterator in the wrapped iterators array	WITHOUT_CLASSIFICATION	0.9999982767130947	WITHOUT_CLASSIFICATION	1.7232869052844835E-6	DOCUMENTATION
// the current iterator	WITHOUT_CLASSIFICATION	0.9999942230403615	WITHOUT_CLASSIFICATION	5.776959638458668E-6	DOCUMENTATION
// the last used iterator	WITHOUT_CLASSIFICATION	0.9999987674151896	WITHOUT_CLASSIFICATION	1.232584810514467E-6	DOCUMENTATION
//it was a boolean expression	WITHOUT_CLASSIFICATION	0.9999898446133995	WITHOUT_CLASSIFICATION	1.01553866004472E-5	DOCUMENTATION
/*public static Object[] clone(Class elementClass, Object[] array) {	WITHOUT_CLASSIFICATION	0.9999937744071713	WITHOUT_CLASSIFICATION	6.225592828688995E-6	DOCUMENTATION
// call this before any Iterator method to make sure that the current Iterator // is not exhausted	WITHOUT_CLASSIFICATION	0.9999987896466201	WITHOUT_CLASSIFICATION	1.2103533798267046E-6	DOCUMENTATION
//doable if needed	WITHOUT_CLASSIFICATION	0.999984883603567	WITHOUT_CLASSIFICATION	1.5116396433068109E-5	DOCUMENTATION
// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)	WITHOUT_CLASSIFICATION	0.9999992316384416	WITHOUT_CLASSIFICATION	7.683615583791496E-7	DOCUMENTATION
// peek ahead	WITHOUT_CLASSIFICATION	0.9999870625760974	WITHOUT_CLASSIFICATION	1.293742390260204E-5	DOCUMENTATION
// if we reach the end of the string w/o finding the // matching end, that is an exception	WITHOUT_CLASSIFICATION	0.9999994796457002	WITHOUT_CLASSIFICATION	5.203542997236164E-7	DOCUMENTATION
// we have a placeholder, spin forward till we find the end	WITHOUT_CLASSIFICATION	0.9999975035388824	WITHOUT_CLASSIFICATION	2.4964611176208565E-6	DOCUMENTATION
// make sure spinning forward did not put us past the end of the buffer...	WITHOUT_CLASSIFICATION	0.999997668928394	WITHOUT_CLASSIFICATION	2.331071605970535E-6	DOCUMENTATION
// First, try to locate this resource through the current // context classloader.	WITHOUT_CLASSIFICATION	0.9999993608357588	WITHOUT_CLASSIFICATION	6.391642412074292E-7	DOCUMENTATION
// Next, try to locate this resource through this class's classloader	WITHOUT_CLASSIFICATION	0.9999994317529011	WITHOUT_CLASSIFICATION	5.682470988451423E-7	DOCUMENTATION
// Next, try to locate this resource through the system classloader	WITHOUT_CLASSIFICATION	0.999999653027894	WITHOUT_CLASSIFICATION	3.469721059897887E-7	DOCUMENTATION
// Anywhere else we should look?	WITHOUT_CLASSIFICATION	0.9999950100225999	WITHOUT_CLASSIFICATION	4.98997740009389E-6	DOCUMENTATION
// would need an IdentitySet for this!	WITHOUT_CLASSIFICATION	0.9999968614779972	WITHOUT_CLASSIFICATION	3.138522002725563E-6	DOCUMENTATION
//Arrays.asList doesn't do primitive arrays	WITHOUT_CLASSIFICATION	0.999994467014601	WITHOUT_CLASSIFICATION	5.532985398972531E-6	DOCUMENTATION
//faster?	WITHOUT_CLASSIFICATION	0.9999506522131119	WITHOUT_CLASSIFICATION	4.934778688804041E-5	DOCUMENTATION
// the name of a class	WITHOUT_CLASSIFICATION	0.9999948961977376	WITHOUT_CLASSIFICATION	5.103802262441609E-6	DOCUMENTATION
// Its the listener class name	WITHOUT_CLASSIFICATION	0.999998099377575	WITHOUT_CLASSIFICATION	1.9006224250125208E-6	DOCUMENTATION
//allow 9,8,7,6,5,4,3,2,1	WITHOUT_CLASSIFICATION	0.9999325739488311	WITHOUT_CLASSIFICATION	6.742605116885094E-5	DOCUMENTATION
// default to element set if no elements() specified	WITHOUT_CLASSIFICATION	0.9999982059871483	WITHOUT_CLASSIFICATION	1.7940128517419477E-6	DOCUMENTATION
// look for the instance by uuid	WITHOUT_CLASSIFICATION	0.9999986220824558	WITHOUT_CLASSIFICATION	1.377917544107141E-6	DOCUMENTATION
// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)	WITHOUT_CLASSIFICATION	0.9999896399189091	WITHOUT_CLASSIFICATION	1.0360081090990492E-5	DOCUMENTATION
// first, lets determine whether to apply cglib or javassist based instrumentation...	WITHOUT_CLASSIFICATION	0.9999996173400988	WITHOUT_CLASSIFICATION	3.826599011873676E-7	DOCUMENTATION
// Make sure we don't override previous set values	WITHOUT_CLASSIFICATION	0.9999989447931941	WITHOUT_CLASSIFICATION	1.055206805931338E-6	DOCUMENTATION
//entirely optional!!	WITHOUT_CLASSIFICATION	0.9999803831085206	WITHOUT_CLASSIFICATION	1.9616891479489895E-5	DOCUMENTATION
// Its the listener instance (or better be)	WITHOUT_CLASSIFICATION	0.9999897362701761	WITHOUT_CLASSIFICATION	1.0263729823796139E-5	DOCUMENTATION
//context.unbind(boundName);	WITHOUT_CLASSIFICATION	0.9999560171950298	WITHOUT_CLASSIFICATION	4.3982804970121206E-5	DOCUMENTATION
//readResolveObject	WITHOUT_CLASSIFICATION	0.9999764973661137	WITHOUT_CLASSIFICATION	2.3502633886335003E-5	DOCUMENTATION
//cfg.setProperty("hibernate.show_sql", "true");	WITHOUT_CLASSIFICATION	0.9999955404036883	WITHOUT_CLASSIFICATION	4.459596311636632E-6	DOCUMENTATION
// Defensive, convenience methods	WITHOUT_CLASSIFICATION	0.9999929770809098	WITHOUT_CLASSIFICATION	7.022919090125175E-6	DOCUMENTATION
// Create the SessionFactory from hibernate.cfg.xml	WITHOUT_CLASSIFICATION	0.9999993055748877	WITHOUT_CLASSIFICATION	6.944251124412138E-7	DOCUMENTATION
// Make sure you log the exception, as it might be swallowed	WITHOUT_CLASSIFICATION	0.9999995280617258	WITHOUT_CLASSIFICATION	4.719382742329056E-7	DOCUMENTATION
// Begin unit of work	WITHOUT_CLASSIFICATION	0.9999739123555488	WITHOUT_CLASSIFICATION	2.6087644451236465E-5	DOCUMENTATION
// Write HTML header	WITHOUT_CLASSIFICATION	0.9999949543086498	WITHOUT_CLASSIFICATION	5.04569135010002E-6	DOCUMENTATION
// Handle actions	WITHOUT_CLASSIFICATION	0.9999980124036892	WITHOUT_CLASSIFICATION	1.987596310683565E-6	DOCUMENTATION
// Print page	WITHOUT_CLASSIFICATION	0.9999931859357307	WITHOUT_CLASSIFICATION	6.814064269289534E-6	DOCUMENTATION
// Write HTML footer	WITHOUT_CLASSIFICATION	0.9999925839076178	WITHOUT_CLASSIFICATION	7.416092382193546E-6	DOCUMENTATION
// End unit of work	WITHOUT_CLASSIFICATION	0.9999860895926025	WITHOUT_CLASSIFICATION	1.3910407397473804E-5	DOCUMENTATION
// Start the session to be used for this request	WITHOUT_CLASSIFICATION	0.9999989229261258	WITHOUT_CLASSIFICATION	1.0770738741917476E-6	DOCUMENTATION
// make the session available to the session factory's "current context"	WITHOUT_CLASSIFICATION	0.9999992917625807	WITHOUT_CLASSIFICATION	7.082374191988997E-7	DOCUMENTATION
// pass control along to the rest of the processing chain	WITHOUT_CLASSIFICATION	0.9999987903218401	WITHOUT_CLASSIFICATION	1.2096781598416262E-6	DOCUMENTATION
// remove session from "current context"	WITHOUT_CLASSIFICATION	0.9999949601912911	WITHOUT_CLASSIFICATION	5.039808708904284E-6	DOCUMENTATION
// Eager fetch the collection so we can use it detached	WITHOUT_CLASSIFICATION	0.9999992725347358	WITHOUT_CLASSIFICATION	7.274652641581368E-7	DOCUMENTATION
// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:	WITHOUT_CLASSIFICATION	0.9999993374184521	WITHOUT_CLASSIFICATION	6.625815477900813E-7	DOCUMENTATION
/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */	WITHOUT_CLASSIFICATION	0.9999999597380445	WITHOUT_CLASSIFICATION	4.026195548906755E-8	DOCUMENTATION
// End of first unit of work	WITHOUT_CLASSIFICATION	0.9999903959009803	WITHOUT_CLASSIFICATION	9.604099019763998E-6	DOCUMENTATION
// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);	WITHOUT_CLASSIFICATION	0.9999982147582764	WITHOUT_CLASSIFICATION	1.7852417236178418E-6	DOCUMENTATION
// Begin second unit of work	WITHOUT_CLASSIFICATION	0.9999901680618887	WITHOUT_CLASSIFICATION	9.831938111243451E-6	DOCUMENTATION
// Reattachment of aPerson	WITHOUT_CLASSIFICATION	0.999992942190293	WITHOUT_CLASSIFICATION	7.057809706968986E-6	DOCUMENTATION
// The getEmailAddresses() might trigger a lazy load of the collection	WITHOUT_CLASSIFICATION	0.9999995963504532	WITHOUT_CLASSIFICATION	4.036495468393447E-7	DOCUMENTATION
// We need our tm, so get it now and avoid doing other work // if there is a problem	WITHOUT_CLASSIFICATION	0.9999983823733917	WITHOUT_CLASSIFICATION	1.6176266082865791E-6	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999978717020661	WITHOUT_CLASSIFICATION	2.1282979338795663E-6	DOCUMENTATION
// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates	WITHOUT_CLASSIFICATION	0.9999978717020661	WITHOUT_CLASSIFICATION	2.1282979338795663E-6	DOCUMENTATION
// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened	WITHOUT_CLASSIFICATION	0.9999996735701041	WITHOUT_CLASSIFICATION	3.2642989589147696E-7	DOCUMENTATION
//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations	WITHOUT_CLASSIFICATION	0.9999971282144705	WITHOUT_CLASSIFICATION	2.8717855294940037E-6	DOCUMENTATION
// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.	WITHOUT_CLASSIFICATION	0.999999912797542	WITHOUT_CLASSIFICATION	8.720245798089402E-8	DOCUMENTATION
// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these	WITHOUT_CLASSIFICATION	0.9999965571066375	WITHOUT_CLASSIFICATION	3.442893362437787E-6	DOCUMENTATION
// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn	WITHOUT_CLASSIFICATION	0.999999008717138	WITHOUT_CLASSIFICATION	9.91282862048033E-7	DOCUMENTATION
// (AS is always optional, for consistency with SQL/OQL)	WITHOUT_CLASSIFICATION	0.9999988428087624	WITHOUT_CLASSIFICATION	1.157191237615391E-6	DOCUMENTATION
// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction	WITHOUT_CLASSIFICATION	0.9999996308220345	WITHOUT_CLASSIFICATION	3.6917796545833716E-7	DOCUMENTATION
// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events	WITHOUT_CLASSIFICATION	0.9999997697476648	WITHOUT_CLASSIFICATION	2.3025233512011034E-7	DOCUMENTATION
// is a primitive type // invokespecial	WITHOUT_CLASSIFICATION	0.9999993740899084	WITHOUT_CLASSIFICATION	6.259100916230651E-7	DOCUMENTATION
// array of primitive type // do nothing	WITHOUT_CLASSIFICATION	0.9999989883989621	WITHOUT_CLASSIFICATION	1.011601037894146E-6	DOCUMENTATION
// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style	WITHOUT_CLASSIFICATION	0.9999992821739934	WITHOUT_CLASSIFICATION	7.178260066644937E-7	DOCUMENTATION
//handle <=, >=, !=, is not, not between, not in	WITHOUT_CLASSIFICATION	0.99996615941777	WITHOUT_CLASSIFICATION	3.3840582230077276E-5	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999998359225599	WITHOUT_CLASSIFICATION	1.640774400437246E-7	DOCUMENTATION
// transfer an explicitly defined entity name // handle the lazy attribute	WITHOUT_CLASSIFICATION	0.9999987966060468	WITHOUT_CLASSIFICATION	1.2033939532283063E-6	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999896806750741	WITHOUT_CLASSIFICATION	1.0319324925897271E-5	DOCUMENTATION
//keep the behavior consistent even for boundary usages	WITHOUT_CLASSIFICATION	0.9999896806750741	WITHOUT_CLASSIFICATION	1.0319324925897271E-5	DOCUMENTATION
// get meta's from // <joined-subclass>	WITHOUT_CLASSIFICATION	0.9999990790307896	WITHOUT_CLASSIFICATION	9.209692104793415E-7	DOCUMENTATION
// parameters on the property mapping should // override parameters in the typedef	WITHOUT_CLASSIFICATION	0.9999991769229677	WITHOUT_CLASSIFICATION	8.230770323561058E-7	DOCUMENTATION
//fetch="join" overrides default laziness //fetch="join" overrides default laziness	WITHOUT_CLASSIFICATION	0.9999932577255234	WITHOUT_CLASSIFICATION	6.742274476604931E-6	DOCUMENTATION
//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many	WITHOUT_CLASSIFICATION	0.9999977854080799	WITHOUT_CLASSIFICATION	2.2145919201128285E-6	DOCUMENTATION
// so we "clock over" on the first invocation	WITHOUT_CLASSIFICATION	0.9999990753721568	WITHOUT_CLASSIFICATION	9.24627843199845E-7	DOCUMENTATION
// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999888945337752	WITHOUT_CLASSIFICATION	1.1105466224904072E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//element //index -> id	WITHOUT_CLASSIFICATION	0.9999599250813211	WITHOUT_CLASSIFICATION	4.007491867890346E-5	DOCUMENTATION
// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!	WITHOUT_CLASSIFICATION	0.9999991121660677	WITHOUT_CLASSIFICATION	8.878339321638278E-7	DOCUMENTATION
// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization	WITHOUT_CLASSIFICATION	0.9999992712821176	WITHOUT_CLASSIFICATION	7.287178823835659E-7	DOCUMENTATION
// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...	WITHOUT_CLASSIFICATION	0.9999992183377711	WITHOUT_CLASSIFICATION	7.816622290214064E-7	DOCUMENTATION
// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.	WITHOUT_CLASSIFICATION	0.9999996237154081	WITHOUT_CLASSIFICATION	3.762845918971305E-7	DOCUMENTATION
//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml	WITHOUT_CLASSIFICATION	0.9999959158774828	WITHOUT_CLASSIFICATION	4.0841225172202775E-6	DOCUMENTATION
// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html	WITHOUT_CLASSIFICATION	0.9999998722903599	WITHOUT_CLASSIFICATION	1.277096400383536E-7	DOCUMENTATION
// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );	WITHOUT_CLASSIFICATION	0.9999987297323945	WITHOUT_CLASSIFICATION	1.2702676054763439E-6	DOCUMENTATION
//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.	WITHOUT_CLASSIFICATION	0.999998422076726	WITHOUT_CLASSIFICATION	1.577923274043348E-6	DOCUMENTATION
// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400	WITHOUT_CLASSIFICATION	0.9999994791666655	WITHOUT_CLASSIFICATION	5.208333345356982E-7	DOCUMENTATION
// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.	WITHOUT_CLASSIFICATION	0.9999997364354785	WITHOUT_CLASSIFICATION	2.635645215085568E-7	DOCUMENTATION
// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list	WITHOUT_CLASSIFICATION	0.9999990995109234	WITHOUT_CLASSIFICATION	9.004890766381273E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// Note: For object <-> SQL datatype mappings see: //	WITHOUT_CLASSIFICATION	0.9999992535090647	WITHOUT_CLASSIFICATION	7.464909352581461E-7	DOCUMENTATION
// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );	WITHOUT_CLASSIFICATION	0.9999999551102795	WITHOUT_CLASSIFICATION	4.488972045831976E-8	DOCUMENTATION
// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type	WITHOUT_CLASSIFICATION	0.9999997405622875	WITHOUT_CLASSIFICATION	2.594377124834912E-7	DOCUMENTATION
// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed	WITHOUT_CLASSIFICATION	0.9999984863051048	WITHOUT_CLASSIFICATION	1.5136948952025775E-6	DOCUMENTATION
/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy	WITHOUT_CLASSIFICATION	0.9999993722362115	WITHOUT_CLASSIFICATION	6.277637884568925E-7	DOCUMENTATION
//Named Queries:	WITHOUT_CLASSIFICATION	0.999962478992156	WITHOUT_CLASSIFICATION	3.7521007843994065E-5	DOCUMENTATION
// this will throw an error if there's something wrong.	WITHOUT_CLASSIFICATION	0.9999961452549398	WITHOUT_CLASSIFICATION	3.8547450601791594E-6	DOCUMENTATION
// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast	WITHOUT_CLASSIFICATION	0.9999996496889653	WITHOUT_CLASSIFICATION	3.503110346954313E-7	DOCUMENTATION
// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.	WITHOUT_CLASSIFICATION	0.9999997723810227	WITHOUT_CLASSIFICATION	2.2761897736526905E-7	DOCUMENTATION
// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)	WITHOUT_CLASSIFICATION	0.9999996742871051	WITHOUT_CLASSIFICATION	3.2571289492557475E-7	DOCUMENTATION
// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...	WITHOUT_CLASSIFICATION	0.9999998614624802	WITHOUT_CLASSIFICATION	1.3853751972024482E-7	DOCUMENTATION
// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)	WITHOUT_CLASSIFICATION	0.9999967439927242	WITHOUT_CLASSIFICATION	3.2560072758861206E-6	DOCUMENTATION
//slice, to get the columns for this component //property	WITHOUT_CLASSIFICATION	0.9999954155602142	WITHOUT_CLASSIFICATION	4.584439785769215E-6	DOCUMENTATION
//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;	WITHOUT_CLASSIFICATION	0.9999970286612728	WITHOUT_CLASSIFICATION	2.9713387272103935E-6	DOCUMENTATION
// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.	WITHOUT_CLASSIFICATION	0.999992569237411	WITHOUT_CLASSIFICATION	7.430762589018552E-6	DOCUMENTATION
// detached collection wrappers that get found + reattached // during flush shouldn't be ignored	WITHOUT_CLASSIFICATION	0.9999992594512552	WITHOUT_CLASSIFICATION	7.405487447738231E-7	DOCUMENTATION
// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message	WITHOUT_CLASSIFICATION	0.9999996360466407	WITHOUT_CLASSIFICATION	3.639533592916484E-7	DOCUMENTATION
// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value	WITHOUT_CLASSIFICATION	0.9999997488076683	WITHOUT_CLASSIFICATION	2.5119233170209846E-7	DOCUMENTATION
// ie. we never have to null out a reference to // an uninitialized proxy	WITHOUT_CLASSIFICATION	0.9999934055663089	WITHOUT_CLASSIFICATION	6.594433691182424E-6	DOCUMENTATION
// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack	WITHOUT_CLASSIFICATION	0.9999996388664929	WITHOUT_CLASSIFICATION	3.6113350711917443E-7	DOCUMENTATION
// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	WITHOUT_CLASSIFICATION	0.9999988644680435	WITHOUT_CLASSIFICATION	1.1355319564708962E-6	DOCUMENTATION
// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...	WITHOUT_CLASSIFICATION	0.9999997962703485	WITHOUT_CLASSIFICATION	2.0372965151704912E-7	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.999999791579847	WITHOUT_CLASSIFICATION	2.0842015312164384E-7	DOCUMENTATION
// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility	WITHOUT_CLASSIFICATION	0.999999791579847	WITHOUT_CLASSIFICATION	2.0842015312164384E-7	DOCUMENTATION
// wrap up any new collections directly referenced by the object // or its components	WITHOUT_CLASSIFICATION	0.9999984744145047	WITHOUT_CLASSIFICATION	1.5255854952280635E-6	DOCUMENTATION
// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);	WITHOUT_CLASSIFICATION	0.9999993466553128	WITHOUT_CLASSIFICATION	6.533446873051681E-7	DOCUMENTATION
// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...	WITHOUT_CLASSIFICATION	0.9999997422557818	WITHOUT_CLASSIFICATION	2.577442182813602E-7	DOCUMENTATION
// upgrade the lock if necessary: //lock(result, lockMode);	WITHOUT_CLASSIFICATION	0.9999994817889928	WITHOUT_CLASSIFICATION	5.182110071444347E-7	DOCUMENTATION
// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush	WITHOUT_CLASSIFICATION	0.9999999088212508	WITHOUT_CLASSIFICATION	9.117874929776095E-8	DOCUMENTATION
//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in	WITHOUT_CLASSIFICATION	0.9999938250769997	WITHOUT_CLASSIFICATION	6.174923000276259E-6	DOCUMENTATION
// Sub-insertions should occur before containing insertion so // Try to do the callback now	WITHOUT_CLASSIFICATION	0.9999993838767819	WITHOUT_CLASSIFICATION	6.161232181100715E-7	DOCUMENTATION
//the entity is not associated with the session, so //try interceptor and unsaved-value	WITHOUT_CLASSIFICATION	0.9999981185326839	WITHOUT_CLASSIFICATION	1.8814673159827365E-6	DOCUMENTATION
//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)	WITHOUT_CLASSIFICATION	0.9999931356509978	WITHOUT_CLASSIFICATION	6.86434900215488E-6	DOCUMENTATION
// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971958278152	WITHOUT_CLASSIFICATION	2.8041721848121806E-6	DOCUMENTATION
// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999976172782029	WITHOUT_CLASSIFICATION	2.3827217971196805E-6	DOCUMENTATION
//stops flush being called multiple times if this method is recursively called	WITHOUT_CLASSIFICATION	0.9999974739455013	WITHOUT_CLASSIFICATION	2.5260544986870112E-6	DOCUMENTATION
//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"	WITHOUT_CLASSIFICATION	0.9999975416891614	WITHOUT_CLASSIFICATION	2.4583108384532426E-6	DOCUMENTATION
// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.	WITHOUT_CLASSIFICATION	0.999999353526811	WITHOUT_CLASSIFICATION	6.46473188962712E-7	DOCUMENTATION
// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed	WITHOUT_CLASSIFICATION	0.9999987553672615	WITHOUT_CLASSIFICATION	1.2446327385618732E-6	DOCUMENTATION
// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by	WITHOUT_CLASSIFICATION	0.9999984028621027	WITHOUT_CLASSIFICATION	1.5971378972830556E-6	DOCUMENTATION
// ... and the token could be an identifer and the error is // a mismatched token error ...	WITHOUT_CLASSIFICATION	0.9999982834848026	WITHOUT_CLASSIFICATION	1.7165151974653537E-6	DOCUMENTATION
// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...	WITHOUT_CLASSIFICATION	0.9999997344700006	WITHOUT_CLASSIFICATION	2.655299994825236E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.	WITHOUT_CLASSIFICATION	0.9999990206123609	WITHOUT_CLASSIFICATION	9.79387639100537E-7	DOCUMENTATION
// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.	WITHOUT_CLASSIFICATION	0.9999997099443084	WITHOUT_CLASSIFICATION	2.9005569160510205E-7	DOCUMENTATION
// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.	WITHOUT_CLASSIFICATION	0.9999991553454317	WITHOUT_CLASSIFICATION	8.446545683495013E-7	DOCUMENTATION
//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role	WITHOUT_CLASSIFICATION	0.9999966229399473	WITHOUT_CLASSIFICATION	3.377060052619676E-6	DOCUMENTATION
// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).	WITHOUT_CLASSIFICATION	0.9999983900788345	WITHOUT_CLASSIFICATION	1.6099211655214073E-6	DOCUMENTATION
/*public final Currency getCurrency(int col) throws HibernateException {	WITHOUT_CLASSIFICATION	0.9999909723540933	WITHOUT_CLASSIFICATION	9.027645906715413E-6	DOCUMENTATION
// here, we have two possibilities: // 	WITHOUT_CLASSIFICATION	0.9999960121738684	WITHOUT_CLASSIFICATION	3.9878261316236214E-6	DOCUMENTATION
// Set the unresolved path in this node and the parent. // Set the text for the parent.	WITHOUT_CLASSIFICATION	0.999998819681423	WITHOUT_CLASSIFICATION	1.1803185768811084E-6	DOCUMENTATION
// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).	WITHOUT_CLASSIFICATION	0.9999994550044263	WITHOUT_CLASSIFICATION	5.449955736190299E-7	DOCUMENTATION
// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.	WITHOUT_CLASSIFICATION	0.999998514014634	WITHOUT_CLASSIFICATION	1.4859853659683698E-6	DOCUMENTATION
// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias	WITHOUT_CLASSIFICATION	0.9999993673367765	WITHOUT_CLASSIFICATION	6.326632235079853E-7	DOCUMENTATION
// Not a collection? // Return the entity property mapping.	WITHOUT_CLASSIFICATION	0.9999994808947557	WITHOUT_CLASSIFICATION	5.191052443497992E-7	DOCUMENTATION
// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...	WITHOUT_CLASSIFICATION	0.9999996027362182	WITHOUT_CLASSIFICATION	3.972637818435922E-7	DOCUMENTATION
// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.	WITHOUT_CLASSIFICATION	0.9999990467657365	WITHOUT_CLASSIFICATION	9.532342635672749E-7	DOCUMENTATION
// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.	WITHOUT_CLASSIFICATION	0.999999871242485	WITHOUT_CLASSIFICATION	1.2875751495662557E-7	DOCUMENTATION
// check to see if our "propPath" actually // represents a property on the persister	WITHOUT_CLASSIFICATION	0.9999993810269894	WITHOUT_CLASSIFICATION	6.189730107033296E-7	DOCUMENTATION
// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.	WITHOUT_CLASSIFICATION	0.9999997845364594	WITHOUT_CLASSIFICATION	2.154635404289986E-7	DOCUMENTATION
// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:	WITHOUT_CLASSIFICATION	0.9999991961877007	WITHOUT_CLASSIFICATION	8.03812299230971E-7	DOCUMENTATION
// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.	WITHOUT_CLASSIFICATION	0.9999991531655773	WITHOUT_CLASSIFICATION	8.468344227418931E-7	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.	WITHOUT_CLASSIFICATION	0.9999997350774138	WITHOUT_CLASSIFICATION	2.649225861173805E-7	DOCUMENTATION
// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.	WITHOUT_CLASSIFICATION	0.9999997895319549	WITHOUT_CLASSIFICATION	2.1046804505531602E-7	DOCUMENTATION
//explicit = true;	WITHOUT_CLASSIFICATION	0.9999769565905428	WITHOUT_CLASSIFICATION	2.3043409457160187E-5	DOCUMENTATION
//sqlResultTypeList.add( type ); // Generate the select expression.	WITHOUT_CLASSIFICATION	0.999999775106074	WITHOUT_CLASSIFICATION	2.2489392598421387E-7	DOCUMENTATION
// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).	WITHOUT_CLASSIFICATION	0.9999994155591467	WITHOUT_CLASSIFICATION	5.844408533373694E-7	DOCUMENTATION
// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing	WITHOUT_CLASSIFICATION	0.9999993672963623	WITHOUT_CLASSIFICATION	6.327036377163505E-7	DOCUMENTATION
// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.	WITHOUT_CLASSIFICATION	0.9999996672248579	WITHOUT_CLASSIFICATION	3.327751420621389E-7	DOCUMENTATION
// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...	WITHOUT_CLASSIFICATION	0.9999994574972855	WITHOUT_CLASSIFICATION	5.425027145550954E-7	DOCUMENTATION
// classic translator does not support collection of ordinal // param metadata	WITHOUT_CLASSIFICATION	0.9999989454356983	WITHOUT_CLASSIFICATION	1.0545643016138247E-6	DOCUMENTATION
// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.	WITHOUT_CLASSIFICATION	0.9999997799801247	WITHOUT_CLASSIFICATION	2.2001987545583168E-7	DOCUMENTATION
// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level	WITHOUT_CLASSIFICATION	0.9999998359225599	WITHOUT_CLASSIFICATION	1.640774400437246E-7	DOCUMENTATION
// should not be able to reach last without maxPosition being set // unless there are no results	WITHOUT_CLASSIFICATION	0.9999995492003466	WITHOUT_CLASSIFICATION	4.5079965336364866E-7	DOCUMENTATION
// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch	WITHOUT_CLASSIFICATION	0.9999993163837152	WITHOUT_CLASSIFICATION	6.836162848289242E-7	DOCUMENTATION
//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!	WITHOUT_CLASSIFICATION	0.999997798370823	WITHOUT_CLASSIFICATION	2.201629176980266E-6	DOCUMENTATION
// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.	WITHOUT_CLASSIFICATION	0.999999606861811	WITHOUT_CLASSIFICATION	3.93138188947715E-7	DOCUMENTATION
// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping	WITHOUT_CLASSIFICATION	0.9999996339565457	WITHOUT_CLASSIFICATION	3.6604345426712073E-7	DOCUMENTATION
//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch	WITHOUT_CLASSIFICATION	0.9999951694193209	WITHOUT_CLASSIFICATION	4.830580679177059E-6	DOCUMENTATION
// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)	WITHOUT_CLASSIFICATION	0.9999995178399793	WITHOUT_CLASSIFICATION	4.821600207120674E-7	DOCUMENTATION
// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)	WITHOUT_CLASSIFICATION	0.99999947339029	WITHOUT_CLASSIFICATION	5.266097099624909E-7	DOCUMENTATION
// assume we are in an auto-commit state	WITHOUT_CLASSIFICATION	0.999993050673026	WITHOUT_CLASSIFICATION	6.949326974043208E-6	DOCUMENTATION
// log a message about potential connection leaks	WITHOUT_CLASSIFICATION	0.9999989844192971	WITHOUT_CLASSIFICATION	1.0155807028367338E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop	WITHOUT_CLASSIFICATION	0.9999997187739991	WITHOUT_CLASSIFICATION	2.812260008626928E-7	DOCUMENTATION
// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance	WITHOUT_CLASSIFICATION	0.9999997651931612	WITHOUT_CLASSIFICATION	2.3480683868484725E-7	DOCUMENTATION
// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode	WITHOUT_CLASSIFICATION	0.9999998107989755	WITHOUT_CLASSIFICATION	1.8920102461867748E-7	DOCUMENTATION
// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );	WITHOUT_CLASSIFICATION	0.9999998875417824	WITHOUT_CLASSIFICATION	1.1245821760830443E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971086834724	WITHOUT_CLASSIFICATION	2.8913165276163584E-6	DOCUMENTATION
//isSet = collection.isSet(); //isSorted = collection.isSorted();	WITHOUT_CLASSIFICATION	0.9999928841564358	WITHOUT_CLASSIFICATION	7.1158435642151444E-6	DOCUMENTATION
//lists, arrays //sets, maps, bags	WITHOUT_CLASSIFICATION	0.9999889979353136	WITHOUT_CLASSIFICATION	1.100206468646764E-5	DOCUMENTATION
// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching	WITHOUT_CLASSIFICATION	0.9999989532565573	WITHOUT_CLASSIFICATION	1.0467434426752599E-6	DOCUMENTATION
//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another	WITHOUT_CLASSIFICATION	0.9999963121817919	WITHOUT_CLASSIFICATION	3.6878182081687964E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999971086834724	WITHOUT_CLASSIFICATION	2.8913165276163584E-6	DOCUMENTATION
//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)	WITHOUT_CLASSIFICATION	0.9999983133467867	WITHOUT_CLASSIFICATION	1.6866532133949082E-6	DOCUMENTATION
// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure	WITHOUT_CLASSIFICATION	0.9999993551276012	WITHOUT_CLASSIFICATION	6.448723988726141E-7	DOCUMENTATION
// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.	WITHOUT_CLASSIFICATION	0.9999994407110965	WITHOUT_CLASSIFICATION	5.592889036363237E-7	DOCUMENTATION
// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!	WITHOUT_CLASSIFICATION	0.9999998506471705	WITHOUT_CLASSIFICATION	1.4935282957819074E-7	DOCUMENTATION
//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time	WITHOUT_CLASSIFICATION	0.9999980370986764	WITHOUT_CLASSIFICATION	1.9629013235677405E-6	DOCUMENTATION
// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"	WITHOUT_CLASSIFICATION	0.9999998622915478	WITHOUT_CLASSIFICATION	1.3770845214710938E-7	DOCUMENTATION
// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)	WITHOUT_CLASSIFICATION	0.9999997505378766	WITHOUT_CLASSIFICATION	2.4946212344244113E-7	DOCUMENTATION
// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...	WITHOUT_CLASSIFICATION	0.9999999623256589	WITHOUT_CLASSIFICATION	3.767434095795334E-8	DOCUMENTATION
// we *always* assume an instance with a null // identifier or no identifier property is unsaved!	WITHOUT_CLASSIFICATION	0.9999990974473936	WITHOUT_CLASSIFICATION	9.025526065464548E-7	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999998018382095	WITHOUT_CLASSIFICATION	1.9816179055766638E-7	DOCUMENTATION
//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter	WITHOUT_CLASSIFICATION	0.9999898144839815	WITHOUT_CLASSIFICATION	1.018551601845199E-5	DOCUMENTATION
//following doesn't handle (null, not null) but unnecessary //since this would mean all rows	WITHOUT_CLASSIFICATION	0.9999931304873859	WITHOUT_CLASSIFICATION	6.869512614137617E-6	DOCUMENTATION
// IMPL NOTE : due to the delayed population of setters (setters cached // 	WITHOUT_CLASSIFICATION	0.9999993452099426	WITHOUT_CLASSIFICATION	6.547900573199964E-7	DOCUMENTATION
// we need to dirty check collections, since they can cause an owner // version number increment	WITHOUT_CLASSIFICATION	0.9999987793242033	WITHOUT_CLASSIFICATION	1.220675796665084E-6	DOCUMENTATION
//return the id, so we can use it to reset the proxy id //return result;	WITHOUT_CLASSIFICATION	0.9999977056853515	WITHOUT_CLASSIFICATION	2.294314648587823E-6	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
// cache the actual id of the object, not the value of the // property-ref, which might not be initialized	WITHOUT_CLASSIFICATION	0.9999995619553199	WITHOUT_CLASSIFICATION	4.380446800935708E-7	DOCUMENTATION
// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier	WITHOUT_CLASSIFICATION	0.9999987858222767	WITHOUT_CLASSIFICATION	1.21417772326748E-6	DOCUMENTATION
// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object	WITHOUT_CLASSIFICATION	0.9999995517644478	WITHOUT_CLASSIFICATION	4.482355522583977E-7	DOCUMENTATION
//not absolutely necessary, but helps for some //equals()/hashCode() implementations	WITHOUT_CLASSIFICATION	0.9999967224808057	WITHOUT_CLASSIFICATION	3.277519194198924E-6	DOCUMENTATION
//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value	WITHOUT_CLASSIFICATION	0.9999900504493388	WITHOUT_CLASSIFICATION	9.949550661226696E-6	DOCUMENTATION
// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache	WITHOUT_CLASSIFICATION	0.9999998846321465	WITHOUT_CLASSIFICATION	1.1536785359743939E-7	DOCUMENTATION
// can't just return null here, since that would // cause an owning component to become null	WITHOUT_CLASSIFICATION	0.9999962948416348	WITHOUT_CLASSIFICATION	3.7051583651792624E-6	DOCUMENTATION
//for arrays, replaceElements() may return a different reference, since //the array length might not match	WITHOUT_CLASSIFICATION	0.9999188285612459	WITHOUT_CLASSIFICATION	8.117143875409286E-5	DOCUMENTATION
// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).	WITHOUT_CLASSIFICATION	0.9999979701392983	WITHOUT_CLASSIFICATION	2.029860701762662E-6	DOCUMENTATION
// as soon as we encounter our first letter, return the substring // from that position	WITHOUT_CLASSIFICATION	0.9999987456067723	WITHOUT_CLASSIFICATION	1.2543932278270636E-6	DOCUMENTATION
// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma	WITHOUT_CLASSIFICATION	0.9999997465708903	WITHOUT_CLASSIFICATION	2.534291096681912E-7	DOCUMENTATION
// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...	WITHOUT_CLASSIFICATION	0.9999994807311833	WITHOUT_CLASSIFICATION	5.192688166709038E-7	DOCUMENTATION
// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"	WITHOUT_CLASSIFICATION	0.9999993651692537	WITHOUT_CLASSIFICATION	6.348307464395623E-7	DOCUMENTATION
// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods	WITHOUT_CLASSIFICATION	0.9999994617408857	WITHOUT_CLASSIFICATION	5.382591143775347E-7	DOCUMENTATION
// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).	WITHOUT_CLASSIFICATION	0.9999979745886836	WITHOUT_CLASSIFICATION	2.0254113164626046E-6	DOCUMENTATION
// and perform the load	WITHOUT_CLASSIFICATION	0.9999964541358055	WITHOUT_CLASSIFICATION	3.545864194393979E-6	DOCUMENTATION
//important: reuse the same event instances for performance!	WITHOUT_CLASSIFICATION	0.9999845842132898	WITHOUT_CLASSIFICATION	1.5415786710210666E-5	DOCUMENTATION
//this is a query and we are loading multiple instances of the same collection role	WITHOUT_CLASSIFICATION	0.9999956557915297	WITHOUT_CLASSIFICATION	4.344208470194031E-6	DOCUMENTATION
// we found a collection element in the result set	WITHOUT_CLASSIFICATION	0.9999983944094112	WITHOUT_CLASSIFICATION	1.6055905888389043E-6	DOCUMENTATION
// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection	WITHOUT_CLASSIFICATION	0.9999991995853249	WITHOUT_CLASSIFICATION	8.00414674975346E-7	DOCUMENTATION
// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set	WITHOUT_CLASSIFICATION	0.9999998234679848	WITHOUT_CLASSIFICATION	1.7653201531804736E-7	DOCUMENTATION
// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested	WITHOUT_CLASSIFICATION	0.9999998121925273	WITHOUT_CLASSIFICATION	1.8780747274576944E-7	DOCUMENTATION
// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)	WITHOUT_CLASSIFICATION	0.9999991966694662	WITHOUT_CLASSIFICATION	8.03330533806718E-7	DOCUMENTATION
// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"	WITHOUT_CLASSIFICATION	0.9999988609510776	WITHOUT_CLASSIFICATION	1.139048922439661E-6	DOCUMENTATION
//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases	WITHOUT_CLASSIFICATION	0.9999980274406964	WITHOUT_CLASSIFICATION	1.9725593036298946E-6	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999756922720734	WITHOUT_CLASSIFICATION	2.430772792657296E-5	DOCUMENTATION
//first look for a reference to a projection alias	WITHOUT_CLASSIFICATION	0.9999756922720734	WITHOUT_CLASSIFICATION	2.430772792657296E-5	DOCUMENTATION
//it does not refer to an alias of a projection, //look for a property	WITHOUT_CLASSIFICATION	0.9999955474809988	WITHOUT_CLASSIFICATION	4.452519001150497E-6	DOCUMENTATION
// determine if the collection elements are entities...	WITHOUT_CLASSIFICATION	0.9999992080439906	WITHOUT_CLASSIFICATION	7.919560093836449E-7	DOCUMENTATION
// Let return-propertys override whatever the persister has for aliases.	WITHOUT_CLASSIFICATION	0.9999993760361781	WITHOUT_CLASSIFICATION	6.239638219053353E-7	DOCUMENTATION
/**	WITHOUT_CLASSIFICATION	0.9997186501315728	WITHOUT_CLASSIFICATION	2.813498684272249E-4	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999952939988079	WITHOUT_CLASSIFICATION	4.706001192130379E-6	DOCUMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999952939988079	WITHOUT_CLASSIFICATION	4.706001192130379E-6	DOCUMENTATION
//        }	WITHOUT_CLASSIFICATION	0.999946659388837	WITHOUT_CLASSIFICATION	5.334061116313665E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//include the discriminator and class-level where, but not filters	WITHOUT_CLASSIFICATION	0.999989554184014	WITHOUT_CLASSIFICATION	1.0445815985986412E-5	DOCUMENTATION
//	WITHOUT_CLASSIFICATION	0.9998748217708389	WITHOUT_CLASSIFICATION	1.2517822916116274E-4	DOCUMENTATION
//NONE, because its the requested lock mode, not the actual! 	WITHOUT_CLASSIFICATION	0.9999975576452927	WITHOUT_CLASSIFICATION	2.4423547071962662E-6	DOCUMENTATION
// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).	WITHOUT_CLASSIFICATION	0.9999998212325161	WITHOUT_CLASSIFICATION	1.7876748399537405E-7	DOCUMENTATION
// the column doesnt exist at all.	WITHOUT_CLASSIFICATION	0.9999987145028288	WITHOUT_CLASSIFICATION	1.2854971711639341E-6	DOCUMENTATION
// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property	WITHOUT_CLASSIFICATION	0.9999979276053526	WITHOUT_CLASSIFICATION	2.072394647489393E-6	DOCUMENTATION
// we have an embedded composite identifier	WITHOUT_CLASSIFICATION	0.9999980073741666	WITHOUT_CLASSIFICATION	1.992625833524856E-6	DOCUMENTATION
// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...	WITHOUT_CLASSIFICATION	0.9999998903526726	WITHOUT_CLASSIFICATION	1.0964732741279379E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991430280887	WITHOUT_CLASSIFICATION	8.569719114213034E-7	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999991430280887	WITHOUT_CLASSIFICATION	8.569719114213034E-7	DOCUMENTATION
/*rootTableName = persistentClass.getRootTable().getQualifiedName( 	WITHOUT_CLASSIFICATION	0.999994304322829	WITHOUT_CLASSIFICATION	5.69567717105219E-6	DOCUMENTATION
// SUBCLASSES	WITHOUT_CLASSIFICATION	0.9999601780370101	WITHOUT_CLASSIFICATION	3.9821962989789124E-5	DOCUMENTATION
// Custom sql	WITHOUT_CLASSIFICATION	0.9999880276723478	WITHOUT_CLASSIFICATION	1.1972327652259E-5	DOCUMENTATION
/*protected void initPropertyPaths(	WITHOUT_CLASSIFICATION	0.9999919373839853	WITHOUT_CLASSIFICATION	8.062616014644671E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999271864967088	WITHOUT_CLASSIFICATION	7.281350329128023E-5	DOCUMENTATION
//Custom SQL (would be better if these were private)	WITHOUT_CLASSIFICATION	0.9999783755383138	WITHOUT_CLASSIFICATION	2.1624461686278426E-5	DOCUMENTATION
// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.999998399340811	WITHOUT_CLASSIFICATION	1.6006591889733467E-6	DOCUMENTATION
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999271864967088	WITHOUT_CLASSIFICATION	7.281350329128023E-5	DOCUMENTATION
// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'	WITHOUT_CLASSIFICATION	0.9999997255431566	WITHOUT_CLASSIFICATION	2.7445684339734974E-7	DOCUMENTATION
//decide which ResultSet to get the property value from:	WITHOUT_CLASSIFICATION	0.9999978765177178	WITHOUT_CLASSIFICATION	2.1234822822378434E-6	DOCUMENTATION
//note: it is conceptually possible that a UserType could map null to //	WITHOUT_CLASSIFICATION	0.9999982619313312	WITHOUT_CLASSIFICATION	1.7380686686940645E-6	DOCUMENTATION
// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.	WITHOUT_CLASSIFICATION	0.9999993387569405	WITHOUT_CLASSIFICATION	6.612430595848974E-7	DOCUMENTATION
// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...	WITHOUT_CLASSIFICATION	0.9999998018382095	WITHOUT_CLASSIFICATION	1.9816179055766638E-7	DOCUMENTATION
// cache these since they are stateless // this one could even be static...	WITHOUT_CLASSIFICATION	0.9999989395070797	WITHOUT_CLASSIFICATION	1.0604929201803907E-6	DOCUMENTATION
//"as" is not in KEYWORDS	WITHOUT_CLASSIFICATION	0.9999622395698368	WITHOUT_CLASSIFICATION	3.776043016325288E-5	DOCUMENTATION
// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);	WITHOUT_CLASSIFICATION	0.9999996957590273	WITHOUT_CLASSIFICATION	3.0424097274313997E-7	DOCUMENTATION
//use the id column alias	WITHOUT_CLASSIFICATION	0.9999932249691725	WITHOUT_CLASSIFICATION	6.775030827381471E-6	DOCUMENTATION
//private List aliases = new ArrayList();	WITHOUT_CLASSIFICATION	0.9999959219144505	WITHOUT_CLASSIFICATION	4.078085549415768E-6	DOCUMENTATION
//columns.add(columnName); //aliases.add(tableAlias);	WITHOUT_CLASSIFICATION	0.9999949888851878	WITHOUT_CLASSIFICATION	5.011114812263097E-6	DOCUMENTATION
//where fragment must be empty!	WITHOUT_CLASSIFICATION	0.9999764937397667	WITHOUT_CLASSIFICATION	2.350626023325359E-5	DOCUMENTATION
// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.	WITHOUT_CLASSIFICATION	0.9999998880710043	WITHOUT_CLASSIFICATION	1.1192899569941124E-7	DOCUMENTATION
//arbitrary on clause ignored!!	WITHOUT_CLASSIFICATION	0.9999926328573133	WITHOUT_CLASSIFICATION	7.367142686641609E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999950464395418	WITHOUT_CLASSIFICATION	4.953560458142899E-6	DOCUMENTATION
// might happen with a managed connection	WITHOUT_CLASSIFICATION	0.9999950464395418	WITHOUT_CLASSIFICATION	4.953560458142899E-6	DOCUMENTATION
//if an exception occurs during flush, user must call rollback()	WITHOUT_CLASSIFICATION	0.9999927887504427	WITHOUT_CLASSIFICATION	7.211249557220599E-6	DOCUMENTATION
// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.	WITHOUT_CLASSIFICATION	0.9999994445291561	WITHOUT_CLASSIFICATION	5.554708439383744E-7	DOCUMENTATION
/*package*/	WITHOUT_CLASSIFICATION	0.9998981745719934	WITHOUT_CLASSIFICATION	1.018254280066226E-4	DOCUMENTATION
//swallow it (the transaction _was_ successful or successfully rolled back)	WITHOUT_CLASSIFICATION	0.9999947901528282	WITHOUT_CLASSIFICATION	5.209847171774297E-6	DOCUMENTATION
// ignore it	WITHOUT_CLASSIFICATION	0.9999943221468873	WITHOUT_CLASSIFICATION	5.67785311273212E-6	DOCUMENTATION
// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information	WITHOUT_CLASSIFICATION	0.9999996238261551	WITHOUT_CLASSIFICATION	3.7617384478655525E-7	DOCUMENTATION
// create our own copy of the user-supplied tuplizer impl map	WITHOUT_CLASSIFICATION	0.99999945912693	WITHOUT_CLASSIFICATION	5.408730699951198E-7	DOCUMENTATION
// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx	WITHOUT_CLASSIFICATION	0.9999996658555481	WITHOUT_CLASSIFICATION	3.3414445192005544E-7	DOCUMENTATION
// then handle any user-defined entity modes...	WITHOUT_CLASSIFICATION	0.9999993431506302	WITHOUT_CLASSIFICATION	6.568493696910411E-7	DOCUMENTATION
// Establish the region root node with a non-locking data version	WITHOUT_CLASSIFICATION	0.9999995212124946	WITHOUT_CLASSIFICATION	4.7878750533893E-7	DOCUMENTATION
// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	WITHOUT_CLASSIFICATION	0.9999898873551574	WITHOUT_CLASSIFICATION	1.0112644842654821E-5	DOCUMENTATION
// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...	WITHOUT_CLASSIFICATION	0.999999917119325	WITHOUT_CLASSIFICATION	8.288067491475413E-8	DOCUMENTATION
// need to extract the component values and check for subtype replacements...	WITHOUT_CLASSIFICATION	0.9999993806559633	WITHOUT_CLASSIFICATION	6.193440366305756E-7	DOCUMENTATION
// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists	WITHOUT_CLASSIFICATION	0.9999993590213286	WITHOUT_CLASSIFICATION	6.409786714196462E-7	DOCUMENTATION
// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)	WITHOUT_CLASSIFICATION	0.9999992388764828	WITHOUT_CLASSIFICATION	7.611235172389187E-7	DOCUMENTATION
// Configure the cache to use our TM	WITHOUT_CLASSIFICATION	0.999997156426888	WITHOUT_CLASSIFICATION	2.8435731119339404E-6	DOCUMENTATION
//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();	WITHOUT_CLASSIFICATION	0.9999965507348967	WITHOUT_CLASSIFICATION	3.4492651032656997E-6	DOCUMENTATION
// Make sure JBC doesn't look one up	WITHOUT_CLASSIFICATION	0.9999946894149203	WITHOUT_CLASSIFICATION	5.310585079800901E-6	DOCUMENTATION
// some collections are not lazy:	WITHOUT_CLASSIFICATION	0.9999984527822985	WITHOUT_CLASSIFICATION	1.547217701607788E-6	DOCUMENTATION
// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster	WITHOUT_CLASSIFICATION	0.9999995793185602	WITHOUT_CLASSIFICATION	4.206814398963145E-7	DOCUMENTATION
// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!	WITHOUT_CLASSIFICATION	0.9999978661122455	WITHOUT_CLASSIFICATION	2.1338877545622807E-6	DOCUMENTATION
// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.	WITHOUT_CLASSIFICATION	0.9999995873549502	WITHOUT_CLASSIFICATION	4.1264504971486507E-7	DOCUMENTATION
// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...	WITHOUT_CLASSIFICATION	0.9999995367211418	WITHOUT_CLASSIFICATION	4.632788580952695E-7	DOCUMENTATION
// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).	WITHOUT_CLASSIFICATION	0.9999989529635973	WITHOUT_CLASSIFICATION	1.0470364027380675E-6	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999990176937866	WITHOUT_CLASSIFICATION	9.823062133721237E-7	DOCUMENTATION
// local cache, so we use synchronization	WITHOUT_CLASSIFICATION	0.9999990176937866	WITHOUT_CLASSIFICATION	9.823062133721237E-7	DOCUMENTATION
// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail	WITHOUT_CLASSIFICATION	0.9999983944836489	WITHOUT_CLASSIFICATION	1.6055163510717236E-6	DOCUMENTATION
// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush	WITHOUT_CLASSIFICATION	0.9999998195071029	WITHOUT_CLASSIFICATION	1.8049289698824927E-7	DOCUMENTATION
// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)	WITHOUT_CLASSIFICATION	0.9999991727131236	WITHOUT_CLASSIFICATION	8.272868763861363E-7	DOCUMENTATION
//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache	WITHOUT_CLASSIFICATION	0.999999431905051	WITHOUT_CLASSIFICATION	5.680949489665204E-7	DOCUMENTATION
// intentionally empty	WITHOUT_CLASSIFICATION	0.999996347386094	WITHOUT_CLASSIFICATION	3.65261390594226E-6	DOCUMENTATION
//TODO find a decent name before documenting	DOCUMENTATION	0.9996483769347827	WITHOUT_CLASSIFICATION	3.516230652173214E-4	DOCUMENTATION
